%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACCAAUGGGUCUGUGUUUUGGACCGGCGAAGCCCAAUGGCGCGACAGGGAAGGCGGGCCCGAGAUGGGUUAGGGUGUCCUUGCAGGGUGUCUGAGCUAAACUUCACCAAAUAAUAGCUGUUUGUAUUUUGGCUGCUGCAGGAGCCAUUUUAGAAAUAAAUAUCUUCCUUCAAUAG\
) } def
/len { sequence length } bind def

/coor [
[108.11106110 148.06854248]
[105.10697174 133.37243652]
[102.10287476 118.67633820]
[97.69352722 133.01362610]
[93.28418732 147.35090637]
[88.87483978 161.68818665]
[93.06277466 177.54356384]
[81.23651886 188.90454102]
[65.56190491 184.08390808]
[62.16363144 168.04072571]
[74.53755188 157.27883911]
[78.94689941 142.94155884]
[83.35624695 128.60427856]
[87.76559448 114.26699066]
[83.98936462 99.75009918]
[73.15264130 89.37873077]
[62.31591797 79.00735474]
[46.74004745 79.18038177]
[35.89781189 68.50795746]
[35.82884216 53.65768051]
[24.99212074 43.28630447]
[14.15539646 32.91492844]
[3.31867290 22.54355431]
[-7.51805067 12.17217922]
[-22.69946861 14.78574276]
[-36.34930038 8.03773975]
[-43.32580185 -5.29614162]
[-41.13919449 -20.00521088]
[-51.97591782 -30.37658691]
[-67.15733337 -27.76302338]
[-80.80716705 -34.51102448]
[-87.78366852 -47.84490585]
[-85.59706116 -62.55397797]
[-96.43378448 -72.92535400]
[-107.27050781 -83.29673004]
[-122.59017944 -87.24871063]
[-126.43521118 -101.63846588]
[-137.27194214 -112.00984192]
[-152.45335388 -109.39627838]
[-166.10317993 -116.14427948]
[-173.07968140 -129.47816467]
[-170.89308167 -144.18722534]
[-181.72979736 -154.55860901]
[-197.04946899 -158.51058960]
[-200.89450073 -172.90034485]
[-216.47038269 -172.72731018]
[-227.31262207 -183.39973450]
[-227.38157654 -198.25001526]
[-238.21830750 -208.62139893]
[-249.05503845 -218.99276733]
[-259.89175415 -229.36413574]
[-270.72848511 -239.73551941]
[-281.56521606 -250.10688782]
[-296.88488770 -254.05888367]
[-300.72991943 -268.44863892]
[-316.04959106 -272.40060425]
[-319.89462280 -286.79037476]
[-337.86785889 -290.73364258]
[-342.14862061 -307.73974609]
[-353.16567993 -317.91934204]
[-364.18273926 -328.09893799]
[-375.19982910 -338.27853394]
[-386.21688843 -348.45812988]
[-402.23968506 -349.26406860]
[-411.48223877 -362.37722778]
[-406.85443115 -377.73831177]
[-391.90634155 -383.56362915]
[-378.10485840 -375.38446045]
[-376.03729248 -359.47518921]
[-365.02023315 -349.29562378]
[-354.00314331 -339.11602783]
[-342.98608398 -328.93643188]
[-331.96902466 -318.75683594]
[-319.85528564 -318.91604614]
[-310.59136963 -310.50003052]
[-309.52322388 -297.62710571]
[-294.97866821 -294.41693115]
[-290.35852051 -279.28536987]
[-275.81396484 -276.07519531]
[-271.19381714 -260.94360352]
[-260.35711670 -250.57223511]
[-249.52038574 -240.20086670]
[-238.68365479 -229.82949829]
[-227.84693909 -219.45811462]
[-217.01020813 -209.08674622]
[-202.17118835 -209.66921997]
[-191.03347778 -199.30554199]
[-190.52313232 -183.73706055]
[-175.97857666 -180.52691650]
[-171.35842896 -165.39532471]
[-160.52169800 -155.02395630]
[-145.92269897 -157.85363770]
[-132.29563904 -151.46871948]
[-124.95541382 -138.12800598]
[-126.90055847 -122.84656525]
[-116.06383514 -112.47518921]
[-101.51927948 -109.26503754]
[-96.89913177 -94.13345337]
[-86.06240845 -83.76207733]
[-75.22568512 -73.39070129]
[-60.62668228 -76.22039032]
[-46.99962234 -69.83546448]
[-39.65939331 -56.49475479]
[-41.60454178 -41.21331024]
[-30.76781845 -30.84193420]
[-16.16881561 -33.67162323]
[-2.54175782 -27.28669548]
[4.79847193 -13.94599056]
[2.85332441 1.33545518]
[13.69004822 11.70683002]
[24.52677155 22.07820511]
[35.36349487 32.44958115]
[46.20021820 42.82095718]
[61.03923035 42.23847961]
[72.17695618 52.60215759]
[72.68729401 68.17063141]
[83.52401733 78.54200745]
[94.36074066 88.91337585]
[101.93918610 83.19824219]
[113.78454590 83.64642334]
[124.81990051 92.72891998]
[139.46037292 95.99335480]
[154.10084534 99.25779724]
[168.74131775 102.52223969]
[183.38179016 105.78668213]
[198.53504944 101.23815155]
[209.27340698 111.55982971]
[223.91387939 114.82427216]
[235.55035400 104.72978210]
[250.72218323 103.43790436]
[263.59329224 111.23523712]
[269.33621216 124.95226288]
[283.97668457 128.21670532]
[298.61715698 131.48114014]
[313.25762939 134.74557495]
[327.89810181 138.01002502]
[343.05139160 133.46150208]
[353.78973389 143.78317261]
[369.26528931 138.35736084]
[381.52389526 149.25041199]
[377.95495605 165.25648499]
[362.22988892 169.90992737]
[350.52529907 158.42364502]
[336.41921997 163.20567322]
[324.63366699 152.65049744]
[309.99319458 149.38604736]
[295.35272217 146.12161255]
[280.71224976 142.85717773]
[266.07177734 139.59272766]
[255.04550171 149.57066345]
[240.08110046 151.16140747]
[226.89524841 143.54650879]
[220.64944458 129.46473694]
[206.00897217 126.20030212]
[191.90289307 130.98233032]
[180.11734009 120.42715454]
[165.47686768 117.16271210]
[150.83639526 113.89826965]
[136.19592285 110.63382721]
[121.55545807 107.36939240]
[132.83862305 117.25321960]
[144.12179565 127.13705444]
[155.40495300 137.02088928]
[166.68812561 146.90472412]
[180.49739075 152.76170349]
[191.55679321 162.89529419]
[198.59568787 176.14120483]
[200.80534363 190.97755432]
[197.93190002 205.69975281]
[190.30549622 218.61633301]
[178.80233765 228.24324036]
[164.74407959 233.47442627]
[149.74591064 233.70886230]
[135.53103638 228.91960144]
[123.73262024 219.65689087]
[115.70625305 206.98498535]
[112.37409973 192.35977173]
[114.11924744 177.46075439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[6 11]
[15 118]
[16 117]
[17 116]
[20 113]
[21 112]
[22 111]
[23 110]
[24 109]
[28 105]
[29 104]
[33 100]
[34 99]
[35 98]
[37 96]
[38 95]
[42 91]
[43 90]
[45 88]
[48 85]
[49 84]
[50 83]
[51 82]
[52 81]
[53 80]
[55 78]
[57 76]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[121 160]
[122 159]
[123 158]
[124 157]
[125 156]
[127 154]
[128 153]
[132 149]
[133 148]
[134 147]
[135 146]
[136 145]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
