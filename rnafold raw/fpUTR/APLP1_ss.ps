%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCUGCGCGAAGCCGCCACGCUAUUGUCCUGACCAGGAAGGCGGGGCCGGCGCGGGGCGGGGCUGGCGGCGCCGGCGCAGCCCGGGGGCGGCGGGAGGAGGAGGUGGCGGCGGUGGCGCUGGGAGCUCCUGUCACCGCUGGGGCCGGGCCGGGCGGGAGUGCAGGGGACGUGAGGGCGCAAGGGCCGGGAC\
) } def
/len { sequence length } bind def

/coor [
[172.90205383 339.21453857]
[179.92494202 323.20065308]
[174.21289062 309.33081055]
[168.50085449 295.46096802]
[162.78880310 281.59109497]
[157.07676697 267.72125244]
[151.36473083 253.85142517]
[145.65267944 239.98158264]
[139.94064331 226.11174011]
[128.69136047 224.10574341]
[119.71887970 216.83795166]
[115.33043671 206.02810669]
[116.72620392 194.32441711]
[123.67370605 184.65492249]
[118.41614532 170.60650635]
[113.15859222 156.55809021]
[107.90103149 142.50965881]
[102.64347076 128.46124268]
[87.41577148 129.36901855]
[72.28395844 121.89245605]
[59.33446503 129.46282959]
[46.38496780 137.03320312]
[33.43547058 144.60357666]
[32.27602768 153.98826599]
[26.99893761 161.66833496]
[18.89710617 165.98617554]
[9.85472679 166.08135986]
[1.90959632 162.05932617]
[-11.39400005 168.98855591]
[-24.69759560 175.91780090]
[-38.00119400 182.84703064]
[-46.34811401 196.96301270]
[-62.74132538 196.52182007]
[-70.31689453 181.97731018]
[-61.28173065 168.29162598]
[-44.93043137 169.54344177]
[-31.62683296 162.61419678]
[-18.32323647 155.68496704]
[-5.01964092 148.75572205]
[4.47993183 130.44201660]
[25.86509895 131.65408325]
[38.81459427 124.08370972]
[51.76409149 116.51333618]
[64.71358490 108.94296265]
[64.10334015 93.95537567]
[48.31388092 94.95713043]
[40.18957520 82.47335052]
[26.66748238 75.98081207]
[13.14539242 69.48827362]
[-0.37669894 62.99573135]
[-13.89879036 56.50319290]
[-27.42088127 50.01065445]
[-40.94297028 43.51811600]
[-54.46506119 37.02557755]
[-70.25452423 38.02733612]
[-78.37882996 25.54354858]
[-92.00480652 19.27196884]
[-105.73106384 13.22301006]
[-119.45732117 7.17405081]
[-136.38972473 6.31960630]
[-140.25602722 -10.18760586]
[-125.46421814 -18.47246361]
[-113.40836334 -6.55220509]
[-99.68210602 -0.50324559]
[-85.95584869 5.54571390]
[-81.24565125 4.67680264]
[-75.94091797 6.76825142]
[-71.88629150 12.02145767]
[-57.06402206 10.55531311]
[-47.97252274 23.50348854]
[-34.45043182 29.99602699]
[-20.92834282 36.48856354]
[-7.40625143 42.98110199]
[6.11583948 49.47364044]
[19.63792992 55.96617889]
[33.16002274 62.45871735]
[46.68211365 68.95125580]
[61.50438309 67.48511505]
[70.59587860 80.43328857]
[90.09198761 69.62347412]
[109.88333893 73.17929840]
[118.58117676 60.95851517]
[127.27902222 48.73772812]
[135.97685242 36.51694489]
[144.67469788 24.29615974]
[153.37254333 12.07537460]
[148.59414673 -2.56952977]
[153.30038452 -17.05071831]
[165.48709106 -25.87952995]
[180.35775757 -25.83984566]
[189.05558777 -38.06063080]
[197.75343323 -50.28141403]
[206.45127869 -62.50220108]
[215.14910889 -74.72298431]
[223.84695435 -86.94377136]
[221.42655945 -102.33140564]
[230.42149353 -114.60112000]
[245.10618591 -116.81375885]
[246.80456543 -132.54354858]
[260.48828125 -138.42617798]
[269.18612671 -150.64695740]
[277.88394165 -162.86773682]
[286.58178711 -175.08853149]
[295.27963257 -187.30931091]
[296.97802734 -203.03909302]
[310.66174316 -208.92172241]
[308.24133301 -224.30937195]
[317.23626709 -236.57907104]
[331.92095947 -238.79171753]
[340.61880493 -251.01249695]
[349.31665039 -263.23327637]
[358.01446533 -275.45407104]
[366.71231079 -287.67486572]
[367.72763062 -304.04254150]
[382.52865601 -311.10385132]
[395.88934326 -301.59469604]
[394.06539917 -285.29730225]
[378.93310547 -278.97702026]
[370.23526001 -266.75622559]
[361.53741455 -254.53544617]
[352.83956909 -242.31466675]
[344.14175415 -230.09387207]
[346.86087036 -215.49450684]
[338.21411133 -202.97698975]
[322.88250732 -200.22389221]
[321.80624390 -185.36820984]
[307.50042725 -178.61148071]
[298.80258179 -166.39068604]
[290.10473633 -154.16990662]
[281.40689087 -141.94911194]
[272.70907593 -129.72833252]
[271.63281250 -114.87266541]
[257.32696533 -108.11592102]
[260.04611206 -93.51654053]
[251.39935303 -80.99902344]
[236.06773376 -78.24592590]
[227.36990356 -66.02514648]
[218.67205811 -53.80435944]
[209.97421265 -41.58357620]
[201.27638245 -29.36278915]
[192.57853699 -17.14200592]
[197.48667908 -3.10462165]
[193.13644409 11.30160522]
[180.99548340 20.49131584]
[165.59332275 20.77321434]
[156.89547729 32.99399948]
[148.19764709 45.21478271]
[139.49980164 57.43556976]
[130.80197144 69.65635681]
[122.10412598 81.87713623]
[128.29563904 95.95184326]
[126.29895782 111.19800568]
[116.69189453 123.20368958]
[121.94944763 137.25210571]
[127.20700836 151.30052185]
[132.46456909 165.34895325]
[137.72212219 179.39736938]
[155.24368286 186.57106018]
[161.85916138 203.97003174]
[153.81048584 220.39968872]
[159.52252197 234.26953125]
[165.23457336 248.13937378]
[170.94660950 262.00921631]
[176.65864563 275.87905884]
[182.37069702 289.74890137]
[188.08273315 303.61874390]
[193.79478455 317.48858643]
[206.74986267 321.20678711]
[215.07278442 331.55947876]
[215.89634705 344.62228394]
[209.14335632 355.60653687]
[214.62887573 369.56750488]
[229.50605774 373.56448364]
[239.06532288 385.41662598]
[239.80387878 400.44723511]
[231.64782715 412.88171387]
[237.13334656 426.84271240]
[242.61888123 440.80368042]
[257.20526123 446.88754272]
[263.14010620 461.53515625]
[256.90240479 476.05639648]
[242.19284058 481.83605957]
[227.73835754 475.44515991]
[222.11453247 460.67532349]
[228.65789795 446.28921509]
[223.17237854 432.32824707]
[217.68684387 418.36724854]
[203.24766541 414.81082153]
[193.55674744 403.29779053]
[192.49089050 388.10839844]
[200.66789246 375.05303955]
[195.18237305 361.09207153]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 167]
[3 166]
[4 165]
[5 164]
[6 163]
[7 162]
[8 161]
[9 160]
[14 157]
[15 156]
[16 155]
[17 154]
[18 153]
[20 44]
[21 43]
[22 42]
[23 41]
[28 39]
[29 38]
[30 37]
[31 36]
[45 79]
[47 77]
[48 76]
[49 75]
[50 74]
[51 73]
[52 72]
[53 71]
[54 70]
[56 68]
[57 65]
[58 64]
[59 63]
[81 150]
[82 149]
[83 148]
[84 147]
[85 146]
[86 145]
[90 141]
[91 140]
[92 139]
[93 138]
[94 137]
[95 136]
[98 133]
[100 131]
[101 130]
[102 129]
[103 128]
[104 127]
[106 125]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
[171 192]
[172 191]
[176 187]
[177 186]
[178 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
