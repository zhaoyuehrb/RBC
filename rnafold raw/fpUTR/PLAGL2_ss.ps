%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAUGCACCGCACAAUGGCCCGACCGCCGCCACUACCGGGGCCUGAGGGGGCCUGGCGGAGCCCGAGCGCGGCCCGGCCCGCAGCGUGGGGCCCCGAGCGCGGUGAAGAGAUUGUUUUCUGAAAGCUGCGUUGGAGGCUGUGACAGAGCUGAGAGCCUGUGUGGAGCGGAUGGGGAGGCUUUCUCAAUAACAUGGCCCUUUGCCAUUAGCCUUGCC\
) } def
/len { sequence length } bind def

/coor [
[206.85295105 272.04943848]
[195.86528015 265.63745117]
[188.08892822 255.51020813]
[184.70631409 243.14956665]
[186.25363159 230.38113403]
[192.53623962 219.10462952]
[183.64965820 207.02040100]
[169.87623596 201.35099792]
[167.93376160 185.64949036]
[159.04718018 173.56526184]
[150.16059875 161.48103333]
[141.27400208 149.39680481]
[132.38742065 137.31257629]
[123.50083923 125.22834015]
[110.94411469 134.42031860]
[94.94549561 137.41838074]
[78.52821350 133.03295898]
[65.06343842 121.53042603]
[55.66287994 133.21928406]
[46.26232529 144.90815735]
[48.21612167 160.59120178]
[38.44227982 173.01084900]
[22.73944473 174.79872131]
[10.42383003 164.89411926]
[8.80207348 149.17326355]
[18.83633423 136.96305847]
[34.57345963 135.50759888]
[43.97401428 123.81873322]
[53.37456894 112.12986755]
[51.45083237 104.88078308]
[37.59712982 110.63185883]
[25.94718742 120.08061218]
[11.68512344 115.43372345]
[7.83759499 100.93556976]
[17.91884995 89.82843781]
[32.72098160 92.25741577]
[47.60335922 90.38261414]
[45.67962265 83.13352966]
[31.72027969 77.64382935]
[17.76093674 72.15413666]
[3.80159426 66.66443634]
[-10.15774822 61.17474365]
[-24.11709023 55.68504715]
[-38.07643127 50.19535065]
[-52.03577423 44.70565414]
[-67.71022797 46.85557938]
[-76.72281647 34.99715042]
[-90.83456421 29.91201210]
[-106.35912323 32.96140289]
[-116.03993225 21.64190102]
[-130.29235840 16.96554756]
[-144.54478455 12.28919506]
[-158.79722595 7.61284256]
[-173.04965210 2.93648982]
[-188.57420349 5.98587990]
[-198.25502014 -5.33362198]
[-212.50744629 -10.00997448]
[-226.75987244 -14.68632698]
[-242.28442383 -11.63693714]
[-251.96524048 -22.95643997]
[-267.48980713 -19.90704918]
[-277.17059326 -31.22655106]
[-291.42303467 -35.90290451]
[-307.35388184 -32.01182556]
[-318.49197388 -44.04820633]
[-313.37942505 -59.63005066]
[-297.27557373 -62.72809219]
[-286.74667358 -50.15533447]
[-272.49426270 -45.47898102]
[-257.98913574 -48.86285400]
[-247.28889465 -37.20886993]
[-232.78376770 -40.59274292]
[-222.08352661 -28.93875694]
[-207.83108521 -24.26240349]
[-193.57865906 -19.58605194]
[-179.07353210 -22.96992493]
[-168.37329102 -11.31593895]
[-154.12086487 -6.63958645]
[-139.86843872 -1.96323371]
[-125.61601257 2.71311879]
[-111.36357880 7.38947153]
[-96.85845184 4.00559711]
[-86.15821075 15.65958309]
[-83.60219574 14.52063370]
[-80.44216156 14.32283688]
[-77.03333282 15.30088902]
[-73.80913544 17.55702972]
[-71.23312378 21.03780556]
[-56.55714035 18.49522209]
[-46.54607773 30.74631310]
[-32.58673477 36.23600769]
[-18.62739372 41.72570419]
[-4.66805172 47.21540070]
[9.29129028 52.70509720]
[23.25063324 58.19479370]
[37.20997620 63.68449020]
[51.16931915 69.17418671]
[64.30139923 61.92515945]
[67.09513092 47.18762207]
[69.88886261 32.45008087]
[72.68259430 17.71254158]
[75.47632599 2.97500300]
[78.27005768 -11.76253605]
[81.06378937 -26.50007629]
[83.85752106 -41.23761368]
[72.60154724 -56.48133469]
[76.00920105 -74.79653168]
[91.45545959 -84.62844086]
[93.82332611 -99.44036865]
[96.19119263 -114.25229645]
[98.55905151 -129.06422424]
[100.92691803 -143.87615967]
[94.56982422 -158.99301147]
[104.69705200 -171.89151001]
[120.89058685 -169.30278015]
[126.49190521 -153.88987732]
[115.73884583 -141.50828552]
[113.37097931 -126.69635773]
[111.00312042 -111.88442993]
[108.63525391 -97.07250214]
[106.26738739 -82.26057434]
[114.79969025 -74.69572449]
[118.66293335 -63.83985901]
[116.78922272 -52.34901047]
[109.52957916 -43.09413910]
[98.59505463 -38.44388580]
[95.80132294 -23.70634460]
[93.00759888 -8.96880531]
[90.21386719 5.76873398]
[87.42013550 20.50627327]
[84.62640381 35.24381256]
[81.83267212 49.98135376]
[79.03894043 64.71889496]
[101.98523712 61.19925308]
[121.84676361 70.55451202]
[132.44358826 88.33069611]
[145.87669373 81.65600586]
[159.30979919 74.98131561]
[172.74291992 68.30662537]
[186.17602539 61.63193512]
[195.09170532 48.56207657]
[209.93243408 49.82777023]
[218.84811401 36.75791168]
[233.68884277 38.02360535]
[238.48580933 22.96489716]
[252.56405640 15.78306866]
[267.57119751 20.73897362]
[274.60379028 34.89236069]
[269.48950195 49.84627533]
[255.26254272 56.72882462]
[240.36354065 51.45671844]
[232.40869141 64.04915619]
[216.60713196 63.26088333]
[208.65228271 75.85332489]
[192.85072327 75.06504822]
[179.41760254 81.73973846]
[165.98449707 88.41442871]
[152.55137634 95.08911896]
[139.11827087 101.76380920]
[135.58506775 116.34175110]
[144.47164917 128.42597961]
[153.35824585 140.51020813]
[162.24482727 152.59445190]
[171.13140869 164.67868042]
[180.01799011 176.76290894]
[194.42703247 183.29666138]
[195.73388672 198.13381958]
[204.62046814 210.21804810]
[222.04142761 207.87300110]
[238.16703796 214.64270020]
[248.58683777 228.57766724]
[250.50065613 245.78231812]
[243.47061157 261.50378418]
[252.70175171 273.32690430]
[267.29309082 279.44268799]
[269.02697754 294.23605347]
[278.25811768 306.05914307]
[287.48925781 317.88226318]
[296.72039795 329.70538330]
[305.95150757 341.52850342]
[315.18264771 353.35162354]
[315.09716797 338.35186768]
[321.74441528 324.90515137]
[333.71392822 315.86465454]
[348.46600342 313.14865112]
[362.87042236 317.33343506]
[373.87081909 327.53103638]
[379.13308716 341.57772827]
[377.54058838 356.49295044]
[369.43130493 369.11193848]
[356.52584839 376.75717163]
[341.56259155 377.80639648]
[327.71667480 372.03713989]
[335.15417480 385.06341553]
[342.59170532 398.08966064]
[350.02920532 411.11593628]
[357.46670532 424.14218140]
[372.50189209 429.73889160]
[377.36337280 445.02761841]
[368.32186890 458.28018188]
[352.31320190 459.33035278]
[341.61788940 447.37249756]
[344.44046021 431.57968140]
[337.00296021 418.55343628]
[329.56542969 405.52719116]
[322.12792969 392.50091553]
[314.69039917 379.47467041]
[305.45269775 374.29998779]
[303.35952759 362.58276367]
[294.12841797 350.75964355]
[284.89727783 338.93652344]
[275.66613770 327.11340332]
[266.43499756 315.29028320]
[257.20385742 303.46716309]
[243.27278137 298.19705200]
[240.87863159 282.55804443]
[231.64749146 270.73492432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 168]
[7 167]
[9 165]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[18 29]
[19 28]
[20 27]
[38 97]
[39 96]
[40 95]
[41 94]
[42 93]
[43 92]
[44 91]
[45 90]
[47 88]
[48 83]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[56 75]
[57 74]
[58 73]
[60 71]
[62 69]
[63 68]
[98 133]
[99 132]
[100 131]
[101 130]
[102 129]
[103 128]
[104 127]
[105 126]
[108 121]
[109 120]
[110 119]
[111 118]
[112 117]
[136 159]
[137 158]
[138 157]
[139 156]
[140 155]
[142 153]
[144 151]
[173 217]
[174 216]
[176 214]
[177 213]
[178 212]
[179 211]
[180 210]
[181 209]
[193 207]
[194 206]
[195 205]
[196 204]
[197 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
