%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGAAUGGUACGCGCUCGCCGACUGGACAGCAGUCUGGCUUCCGCGGUCGGACUUCUACACCCGCCUCCAGACAGGAGAGGGGCACGUACCGGCGCUACGGCUUCCUGCAGGCUGCCUCCGGAUAGUCCCCGAGAGCUUGUUCCGAAGCAAGCACCCUGCAGCCCUAGCGAUCCAGCCCUCCCCUGGACCCUAGGUCACGGCAAUCAACCCCCUGCUGUGGUUCCCGAACCCCAAGGCCCG\
) } def
/len { sequence length } bind def

/coor [
[292.54843140 104.42211151]
[282.76763916 115.79469299]
[268.63958740 120.83438110]
[253.86926270 118.21956635]
[242.33000183 108.63595581]
[237.04788208 94.59675598]
[239.40808105 79.78359985]
[248.79368591 68.07959747]
[234.36941528 72.19551849]
[219.94515991 76.31143188]
[205.52090454 80.42734528]
[191.09664917 84.54326630]
[176.67237854 88.65917969]
[166.55668640 99.59178925]
[151.16313171 95.93816376]
[136.73887634 100.05407715]
[122.31462097 104.16999054]
[107.89036560 108.28590393]
[95.04785919 116.03639984]
[84.68392181 126.88023376]
[74.31998444 137.72407532]
[64.02635956 148.63467407]
[53.80347824 159.61158752]
[43.58059692 170.58851624]
[33.35771561 181.56542969]
[23.13483238 192.54234314]
[22.26583290 208.56184387]
[9.11639595 217.75270081]
[-6.22635794 213.06446838]
[-11.99277973 198.09356689]
[-3.75936460 184.32438660]
[12.15791607 182.31945801]
[22.38079834 171.34254456]
[32.60367966 160.36563110]
[42.82656097 149.38871765]
[53.04944229 138.41178894]
[55.30317307 131.39009094]
[63.47614670 127.36013794]
[73.84008026 116.51629639]
[84.20401764 105.67246246]
[80.79477692 98.99211121]
[67.43396759 105.81038666]
[60.61591339 92.44947052]
[73.97628021 85.63142395]
[70.56703186 78.95107269]
[55.70502472 80.98104095]
[40.84301758 83.01101685]
[25.98101234 85.04098511]
[16.42468071 97.34197235]
[1.32357633 99.18893433]
[-10.34464359 90.00262451]
[-17.56361961 103.73819733]
[-31.49233246 110.57710266]
[-46.77490997 107.88963318]
[-57.53488541 96.70917511]
[-59.63483047 81.33485413]
[-52.26727676 67.67839813]
[-38.26519394 60.99100113]
[-23.01266861 63.84410095]
[-12.37461281 75.14061737]
[-3.59730601 63.16170120]
[11.44596386 60.89130783]
[23.95104218 70.17897797]
[38.81304932 68.14900970]
[53.67505646 66.11904144]
[68.53706360 64.08906555]
[69.89268494 49.15045166]
[55.63887024 44.47832489]
[41.38505554 39.80619812]
[27.13124275 35.13407135]
[12.22613144 41.06848145]
[-1.63476944 32.99042511]
[-3.81856298 17.09669876]
[7.34997034 5.57960558]
[23.30328751 7.27407646]
[31.80336761 20.88025856]
[46.05718231 25.55238342]
[60.31099701 30.22451019]
[74.56481171 34.89663696]
[96.83998871 51.10294342]
[106.77232361 72.72571564]
[103.77444458 93.86164856]
[118.19870758 89.74573517]
[132.62297058 85.62981415]
[147.04722595 81.51390076]
[158.19464111 70.28688812]
[172.55647278 74.23491669]
[186.98072815 70.11900330]
[201.40498352 66.00308990]
[215.82923889 61.88717270]
[230.25350952 57.77125931]
[244.67776489 53.65534210]
[258.80603027 48.61626053]
[272.57925415 42.67506409]
[286.35250854 36.73386765]
[292.97534180 30.47479248]
[300.34240723 30.80617142]
[314.19131470 25.04353333]
[320.28466797 10.70794964]
[334.41149902 5.06109667]
[348.04074097 10.95851231]
[361.88964844 5.19587278]
[371.65829468 -7.24936056]
[386.38137817 -4.99533367]
[400.23025513 -10.75797272]
[414.07916260 -16.52061272]
[424.44308472 -27.36445045]
[429.57339478 -41.45983887]
[434.70370483 -55.55522919]
[439.83401489 -69.65061951]
[444.96429443 -83.74600983]
[450.09460449 -97.84139252]
[455.22491455 -111.93678284]
[452.67416382 -127.55101776]
[464.29782104 -136.86442566]
[469.42813110 -150.95982361]
[474.55844116 -165.05520630]
[478.11193848 -179.62821960]
[480.04580688 -194.50303650]
[481.97967529 -209.37785339]
[476.08612061 -224.06037903]
[485.39968872 -235.68391418]
[487.33352661 -250.55873108]
[477.49487305 -262.92706299]
[479.36660767 -278.62014771]
[491.83828735 -288.32748413]
[507.51068115 -286.28994751]
[517.08563232 -273.71633911]
[514.88250732 -258.06634521]
[502.20834351 -248.62486267]
[500.27450562 -233.75004578]
[506.30636597 -220.13146973]
[496.85449219 -207.44400024]
[494.92062378 -192.56916809]
[492.98675537 -177.69435120]
[500.03445435 -175.12921143]
[521.17755127 -167.43374634]
[529.25744629 -180.07157898]
[537.33740234 -192.70941162]
[545.41735840 -205.34724426]
[541.77722168 -220.72662354]
[550.14916992 -234.13134766]
[565.56616211 -237.60862732]
[578.88165283 -229.09545898]
[582.19573975 -213.64256287]
[573.54223633 -200.41784668]
[558.05517578 -197.26731873]
[549.97521973 -184.62948608]
[541.89532471 -171.99165344]
[533.81536865 -159.35382080]
[516.10327148 -150.77365112]
[499.69036865 -151.76599121]
[488.65383911 -159.92491150]
[483.52352905 -145.82951355]
[478.39321899 -131.73413086]
[481.31091309 -117.12808990]
[469.32031250 -106.80648041]
[464.19000244 -92.71109772]
[459.05969238 -78.61570740]
[453.92938232 -64.52031708]
[448.79910278 -50.42492676]
[443.66879272 -36.32953644]
[438.53848267 -22.23414803]
[447.01126099 -31.24555016]
[455.96496582 -39.80001068]
[470.94961548 -40.47851944]
[485.93426514 -41.15702438]
[500.91891479 -41.83553314]
[515.90356445 -42.51404190]
[524.31378174 -46.02207184]
[531.08605957 -43.10319138]
[544.62896729 -51.28240585]
[557.59960938 -43.96043396]
[572.59179688 -44.44516373]
[587.58398438 -44.92988968]
[602.57611084 -45.41461945]
[617.56829834 -45.89934921]
[627.08465576 -58.30793762]
[642.36181641 -61.64598465]
[656.18634033 -54.33737183]
[662.03076172 -39.83300018]
[657.13549805 -24.98139000]
[643.81195068 -16.79501724]
[628.35107422 -19.13924026]
[618.05303955 -30.90718460]
[603.06085205 -30.42245483]
[588.06872559 -29.93772507]
[573.07653809 -29.45299530]
[558.08435059 -28.96826744]
[545.61376953 -20.82372284]
[531.57080078 -28.11102486]
[516.58203125 -27.52939415]
[501.59741211 -26.85088730]
[486.61276245 -26.17237854]
[471.62811279 -25.49387169]
[456.64346313 -24.81536484]
[451.78747559 -10.62314224]
[463.21557617 -0.90725183]
[474.64367676 8.80863762]
[486.07177734 18.52452850]
[497.49987793 28.24041748]
[508.92797852 37.95630646]
[520.35607910 47.67219925]
[531.78417969 57.38808823]
[546.22332764 52.15293884]
[561.34271240 54.85453415]
[573.07537842 64.76615906]
[578.26525879 79.22164154]
[575.51629639 94.33251953]
[565.56793213 106.03404999]
[551.09625244 111.17858124]
[535.99407959 108.38225555]
[524.32379150 98.39727020]
[519.22460938 83.90953827]
[522.06829834 68.81618500]
[510.64016724 59.10029984]
[499.21206665 49.38440704]
[487.78396606 39.66851807]
[476.35586548 29.95262909]
[464.92776489 20.23673820]
[453.49966431 10.52084827]
[442.07156372 0.80495876]
[447.22091675 14.89340591]
[440.29251099 28.19743156]
[425.79711914 32.05538940]
[413.17202759 23.95553780]
[410.63690186 9.17132282]
[419.84179688 -2.67171407]
[405.99288940 3.09092546]
[392.14401245 8.85356522]
[383.36590576 20.88661575]
[367.65228271 19.04477119]
[353.80337524 24.80741119]
[348.38079834 38.63243866]
[334.41815186 44.67385483]
[319.95394897 38.89242935]
[306.10507202 44.65507126]
[292.29370117 50.50711060]
[278.52044678 56.44830704]
[264.74722290 62.38950348]
[279.41879272 65.51116180]
[290.62133789 75.48628235]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 92]
[9 91]
[10 90]
[11 89]
[12 88]
[13 87]
[15 85]
[16 84]
[17 83]
[18 82]
[19 40]
[20 39]
[21 38]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[45 66]
[46 65]
[47 64]
[48 63]
[51 60]
[67 79]
[68 78]
[69 77]
[70 76]
[93 240]
[94 239]
[95 238]
[97 237]
[98 236]
[101 233]
[102 232]
[104 230]
[105 229]
[106 228]
[107 163]
[108 162]
[109 161]
[110 160]
[111 159]
[112 158]
[113 157]
[115 155]
[116 154]
[117 153]
[118 135]
[119 134]
[120 133]
[122 131]
[123 130]
[137 150]
[138 149]
[139 148]
[140 147]
[165 196]
[166 195]
[167 194]
[168 193]
[169 192]
[171 191]
[173 189]
[174 188]
[175 187]
[176 186]
[177 185]
[197 222]
[198 221]
[199 220]
[200 219]
[201 218]
[202 217]
[203 216]
[204 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
