%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGCAAGCGUGGGAGCCUCGGCCCCGCGCAGCUCCCUCCGGCGUCCCGCGCCCUCCUUCCUUCCUCGCCAGGACGGACGCACUUCCGGCGGAUGUGGGGGCCAGCCCUCGGAAACGGAAGUGAGCGGCGGGGUCGACUGACGGUAACGGGGCAGAGAGGCUGUUCGCAGAGCUGCGGAAG\
) } def
/len { sequence length } bind def

/coor [
[130.70414734 250.73226929]
[125.63832092 264.85095215]
[115.87812805 276.24124146]
[102.70242310 283.41067505]
[87.83759308 285.41989136]
[73.23134613 282.00558472]
[60.79750443 273.61514282]
[52.16524506 261.34793091]
[48.46563339 246.81132507]
[50.18314743 231.91093445]
[41.03461838 243.79808044]
[31.88608932 255.68524170]
[22.73755836 267.57238770]
[13.58902836 279.45953369]
[10.82444572 288.19338989]
[4.17856503 291.47109985]
[-5.17378235 303.19857788]
[-7.08157587 319.48638916]
[-22.24617958 325.72872925]
[-35.06755066 315.50402832]
[-32.35615921 299.33056641]
[-16.90125465 293.84622192]
[-7.54890728 282.11877441]
[1.70187569 270.31100464]
[10.85040569 258.42385864]
[19.99893570 246.53671265]
[29.14746666 234.64955139]
[38.29599762 222.76240540]
[45.83333588 209.79365540]
[51.63333893 195.96035767]
[57.43333817 182.12705994]
[63.23334122 168.29377747]
[69.03334045 154.46047974]
[74.83334351 140.62718201]
[80.63334656 126.79389191]
[70.89954376 115.68896484]
[66.97173309 101.45384216]
[69.63356781 86.92864990]
[78.35398102 75.01139832]
[91.39310455 68.07976532]
[90.87536621 53.08869934]
[90.35762024 38.09763718]
[89.71051788 23.11160278]
[88.93409729 8.13171005]
[80.49285126 -5.24946928]
[87.56100464 -18.36017418]
[86.78458405 -33.34006500]
[86.00816345 -48.31995773]
[82.43089294 -56.75360870]
[85.34988403 -63.56467056]
[84.83214569 -78.55573273]
[84.31439972 -93.54679871]
[83.79666138 -108.53785706]
[83.14955139 -123.52389526]
[82.37313080 -138.50378418]
[81.59671783 -153.48367310]
[80.69104004 -168.45631409]
[79.65616608 -183.42056274]
[78.62129974 -198.38482666]
[77.58643341 -213.34909058]
[76.55156708 -228.31335449]
[75.25856018 -243.25750732]
[73.70780182 -258.17712402]
[72.15704346 -273.09677124]
[70.60628510 -288.01638794]
[30.61980247 -304.86093140]
[24.58189392 -318.59207153]
[18.54398537 -332.32318115]
[12.50607777 -346.05429077]
[6.46816874 -359.78543091]
[0.13275427 -366.40249634]
[0.44682100 -373.80606079]
[-5.35317993 -387.63934326]
[-11.15318108 -401.47262573]
[-23.62473869 -411.20767212]
[-21.41046143 -425.93676758]
[-36.13075638 -431.68902588]
[-42.39550400 -446.19860840]
[-36.48794174 -460.85726929]
[-21.91291618 -466.96826172]
[-7.31753731 -460.90603638]
[-1.36098182 -446.26724243]
[-7.57716894 -431.73675537]
[4.47953320 -422.99118042]
[2.68011141 -407.27264404]
[8.48011208 -393.43933105]
[14.28011322 -379.60604858]
[20.19928932 -365.82333374]
[26.23719788 -352.09222412]
[32.27510452 -338.36108398]
[38.31301498 -324.62997437]
[44.35092163 -310.89883423]
[51.85064316 -310.83410645]
[51.98033524 -325.83355713]
[66.97977448 -325.70364380]
[66.85008240 -310.70465088]
[74.34980774 -310.63992310]
[80.62382507 -324.26477051]
[86.89784241 -337.88964844]
[93.17185974 -351.51449585]
[99.44587708 -365.13934326]
[97.40030670 -381.41043091]
[110.63036346 -391.10049438]
[125.52610016 -384.24127197]
[126.76405334 -367.88891602]
[113.07073212 -358.86532593]
[106.79671478 -345.24047852]
[100.52269745 -331.61563110]
[94.24868011 -317.99078369]
[87.97466278 -304.36590576]
[85.52590942 -289.56713867]
[87.07666779 -274.64752197]
[88.62742615 -259.72790527]
[90.17818451 -244.80827332]
[93.27608490 -241.14251709]
[94.08708954 -235.48464966]
[91.51582336 -229.34822083]
[92.55069733 -214.38395691]
[93.58556366 -199.41969299]
[94.62042999 -184.45544434]
[95.65529633 -169.49118042]
[99.26280212 -163.01838684]
[96.57660675 -154.26010132]
[97.35302734 -139.28021240]
[98.12944794 -124.30031586]
[101.62468719 -117.76622009]
[98.78771973 -109.05560303]
[99.30546570 -94.06453705]
[99.82320404 -79.07347870]
[100.34095001 -64.08241272]
[100.98805237 -49.09637833]
[101.76447296 -34.11648560]
[102.54089355 -19.13659286]
[110.92660522 -6.82687569]
[103.91399384 7.35529041]
[104.69041443 22.33518219]
[108.18565369 28.86927605]
[105.34868622 37.57989502]
[105.86642456 52.57095718]
[106.38417053 67.56201935]
[127.38271332 75.97532654]
[139.71458435 97.46002197]
[153.99633789 102.04599762]
[169.90220642 98.05408478]
[181.11634827 110.01966858]
[176.10260010 125.63358307]
[160.01869202 128.83357239]
[149.41036987 116.32775879]
[135.12860107 111.74178314]
[127.59126282 124.71053314]
[138.64555359 134.84968567]
[149.69985962 144.98884583]
[160.75416565 155.12799072]
[171.80845642 165.26715088]
[182.86276245 175.40631104]
[198.88839722 176.15351868]
[208.17893982 189.23272705]
[203.60746765 204.61067200]
[188.68081665 210.49070740]
[174.84945679 202.36218262]
[172.72360229 186.46060181]
[161.66931152 176.32145691]
[150.61500549 166.18229675]
[139.56069946 156.04313660]
[128.50640869 145.90399170]
[117.45210266 135.76483154]
[111.20605469 136.42715454]
[105.18808746 136.05664062]
[99.56124115 134.74134827]
[94.46663666 132.59390259]
[88.66663361 146.42718506]
[82.86663818 160.26048279]
[77.06663513 174.09378052]
[71.26663208 187.92706299]
[65.46662903 201.76036072]
[59.66662979 215.59365845]
[71.76408386 206.72508240]
[86.22619629 202.74421692]
[101.15802765 204.17265320]
[114.60308838 210.82324219]
[124.79971313 221.82455444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[16 23]
[17 22]
[29 176]
[30 175]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[40 140]
[41 139]
[42 138]
[43 136]
[44 135]
[46 133]
[47 132]
[48 131]
[50 130]
[51 129]
[52 128]
[53 127]
[54 125]
[55 124]
[56 123]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 114]
[63 113]
[64 112]
[65 111]
[66 92]
[67 91]
[68 90]
[69 89]
[70 88]
[72 87]
[73 86]
[74 85]
[76 83]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[142 149]
[143 148]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
