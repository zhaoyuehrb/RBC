%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGGCAGCAAGGCCUUAAAGGCUACUGAGUGCGCCGGCCGUUCCGUGUCCAGAACCUCCCCUACUCCUCCGCCUUCUCUUCCUUGGCCGCCCACCGCCAAGUUCCGACUCCGGUUUUCGCCUUUGCAAAGCCUAAGGAGGAGGUUAGGAACAGCCGCGCCCCCCUCCCUGCGGCCGCCGCCCCCUGCCUCUCGGCUCUGCUCCCUGCCGCGUGCGCCUGGGCCGUGCGCCCCGGCAGGCCCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[557.75329590 725.22576904]
[558.31738281 712.35620117]
[548.87023926 700.70495605]
[539.42309570 689.05371094]
[529.97589111 677.40252686]
[520.52874756 665.75128174]
[511.08160400 654.10003662]
[501.63446045 642.44879150]
[492.18728638 630.79754639]
[479.32507324 631.26788330]
[468.37268066 624.14422607]
[463.44314575 611.83489990]
[466.54034424 598.74212646]
[457.24093628 586.97259521]
[447.94152832 575.20312500]
[437.12194824 577.74450684]
[426.08316040 576.06866455]
[416.41702271 570.37872314]
[409.53182983 561.45935059]
[406.44702148 550.56890869]
[407.64254761 539.26177979]
[412.98455811 529.16668701]
[404.13720703 517.05371094]
[395.28982544 504.94073486]
[386.44244385 492.82775879]
[372.68746948 487.11373901]
[370.79589844 471.40603638]
[352.58251953 464.87066650]
[350.79806519 444.77520752]
[341.64788818 432.88931274]
[332.49771118 421.00344849]
[312.80523682 414.78231812]
[310.42111206 393.47027588]
[300.82772827 381.93914795]
[291.23431396 370.40805054]
[281.64089966 358.87692261]
[274.96365356 355.75283813]
[272.00033569 347.13928223]
[262.55316162 335.48803711]
[253.10600281 323.83682251]
[239.08030701 318.82394409]
[236.39874268 303.23165894]
[226.95158386 291.58041382]
[217.50442505 279.92919922]
[208.05726624 268.27795410]
[198.61010742 256.62670898]
[192.82397461 257.80569458]
[186.89749146 257.33334351]
[181.29583740 255.22438049]
[176.46481323 251.62287903]
[172.79547119 246.79257202]
[170.59240723 241.09764099]
[170.04862976 234.97531128]
[171.22885132 228.90225220]
[174.06265259 223.35752869]
[165.67999268 210.91842651]
[157.29731750 198.47933960]
[148.91465759 186.04025269]
[140.53199768 173.60116577]
[132.14933777 161.16206360]
[123.76667023 148.72297668]
[115.30570221 136.33702087]
[106.76676941 124.00467682]
[98.22783661 111.67234039]
[103.05654144 125.87387085]
[103.59050751 140.86436462]
[99.78447723 155.37347412]
[91.96098328 168.17163086]
[80.78302765 178.17430115]
[67.19786072 184.53379822]
[52.35674286 186.71121216]
[37.51735687 184.52201843]
[23.93724251 178.15173340]
[12.76722908 168.14019775]
[4.95390224 155.33583069]
[1.15938926 140.82371521]
[1.70525098 125.83364868]
[6.54522896 111.63594818]
[15.26916695 99.43378448]
[27.13776779 90.26119995]
[41.14524460 84.89551544]
[56.10455704 83.79143524]
[70.74800110 87.04252625]
[83.83773041 94.37566376]
[73.26464081 83.73566437]
[62.69154358 73.09565735]
[52.11845016 62.45565414]
[41.54535675 51.81565094]
[30.97226334 41.17564392]
[15.65987396 43.68767929]
[1.81050324 36.68949890]
[-5.25048161 22.87204170]
[-2.80798817 7.54840374]
[8.19879532 -3.38916206]
[23.53753471 -5.73493958]
[37.31017303 1.41307044]
[44.22085190 15.30631256]
[41.61227036 30.60255241]
[52.18536377 41.24255753]
[62.75845718 51.88256073]
[73.33155060 62.52256393]
[83.90464020 73.16256714]
[94.47773743 83.80257416]
[101.39317322 80.89969635]
[95.58742523 67.06881714]
[89.78166962 53.23793793]
[83.97591400 39.40705872]
[78.17037201 25.57608986]
[92.00142670 19.77076340]
[97.80679321 33.60130310]
[103.61254883 47.43218231]
[109.41829681 61.26306152]
[115.22405243 75.09394073]
[122.13949585 72.19106293]
[121.95024872 57.19225693]
[121.76100159 42.19345093]
[121.57175446 27.19464684]
[121.38250732 12.19583988]
[121.19326019 -2.80296636]
[117.96238708 -11.31977844]
[121.09743500 -17.99191475]
[121.09743500 -32.99191666]
[112.43373108 -46.91571808]
[120.39786530 -61.25115204]
[136.79701233 -61.25115204]
[144.76113892 -46.91571808]
[136.09744263 -32.99191666]
[136.09744263 -17.99191475]
[136.19206238 -2.99221396]
[136.38131714 12.00659180]
[136.57055664 27.00539780]
[136.75981140 42.00420380]
[136.94905090 57.00300980]
[137.13830566 72.00181580]
[132.75605774 88.61494446]
[122.84066772 99.47382355]
[110.56018066 103.13340759]
[119.09911346 115.46574402]
[127.63804626 127.79808807]
[135.07688904 133.05529785]
[136.20576477 140.34031677]
[144.58842468 152.77940369]
[152.97108459 165.21849060]
[161.35374451 177.65759277]
[169.73641968 190.09667969]
[178.11907959 202.53576660]
[186.50173950 214.97485352]
[209.34606934 223.52323914]
[210.26135254 247.17956543]
[219.70849609 258.83078003]
[229.15565491 270.48202515]
[238.60281372 282.13327026]
[248.04997253 293.78448486]
[262.75140381 299.63073730]
[264.75723267 314.38964844]
[274.20440674 326.04089355]
[283.65155029 337.69210815]
[293.17202759 349.28350830]
[302.76544189 360.81463623]
[312.35882568 372.34573364]
[321.95223999 383.87686157]
[331.32885742 383.48199463]
[339.71746826 387.37420654]
[345.30203247 394.57211304]
[346.93765259 403.39477539]
[344.38360596 411.85327148]
[353.53378296 423.73913574]
[362.68395996 435.62503052]
[373.50213623 436.39730835]
[381.94390869 442.85159302]
[385.38037109 452.67504883]
[382.90887451 462.55865479]
[397.29666138 469.13906860]
[398.55541992 483.98037720]
[407.40280151 496.09335327]
[416.25015259 508.20632935]
[425.09753418 520.31927490]
[444.24499512 519.47650146]
[459.89071655 530.28356934]
[465.78628540 548.20330811]
[459.71102905 565.90368652]
[469.01043701 577.67321777]
[478.30984497 589.44268799]
[495.72973633 591.16925049]
[506.29333496 604.70141602]
[503.83853149 621.35040283]
[513.28570557 633.00164795]
[522.73284912 644.65289307]
[532.17999268 656.30413818]
[541.62713623 667.95532227]
[551.07427979 679.60656738]
[560.52148438 691.25781250]
[569.96862793 702.90905762]
[587.31933594 709.11029053]
[589.37054443 726.54956055]
[598.96398926 738.08068848]
[608.55737305 749.61181641]
[618.15075684 761.14294434]
[633.64617920 762.73370361]
[643.21099854 774.56457520]
[641.59893799 789.32720947]
[652.43859863 789.68957520]
[661.11853027 795.81976318]
[664.92431641 805.50616455]
[662.82855225 815.47619629]
[672.12799072 827.24572754]
[681.42736816 839.01519775]
[690.72680664 850.78472900]
[700.02618408 862.55419922]
[709.32562256 874.32366943]
[718.62500000 886.09320068]
[735.89611816 892.51287842]
[737.72717285 909.97662354]
[747.17431641 921.62786865]
[756.62145996 933.27911377]
[766.06860352 944.93035889]
[775.51574707 956.58160400]
[784.96295166 968.23278809]
[800.60028076 968.31494141]
[812.49291992 978.46875000]
[815.02545166 993.89984131]
[807.00213623 1007.32226562]
[792.21136475 1012.39825439]
[777.63677979 1006.73107910]
[770.16015625 992.99670410]
[773.31170654 977.67999268]
[763.86456299 966.02874756]
[754.41735840 954.37750244]
[744.97021484 942.72625732]
[735.52307129 931.07501221]
[726.07592773 919.42382812]
[714.09631348 917.86187744]
[706.12908936 908.25402832]
[706.85552979 895.39257812]
[697.55609131 883.62310791]
[688.25671387 871.85363770]
[678.95727539 860.08410645]
[669.65789795 848.31463623]
[660.35845947 836.54510498]
[651.05908203 824.77563477]
[632.61145020 818.93420410]
[630.06781006 798.92065430]
[615.25823975 797.82006836]
[605.36486816 786.26257324]
[606.61962891 770.73632812]
[597.02624512 759.20520020]
[587.43286133 747.67413330]
[577.83941650 736.14300537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[3 192]
[4 191]
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[13 183]
[14 182]
[15 181]
[22 177]
[23 176]
[24 175]
[25 174]
[27 172]
[29 168]
[30 167]
[31 166]
[33 161]
[34 160]
[35 159]
[36 158]
[38 157]
[39 156]
[40 155]
[42 153]
[43 152]
[44 151]
[45 150]
[46 149]
[55 147]
[56 146]
[57 145]
[58 144]
[59 143]
[60 142]
[61 141]
[62 139]
[63 138]
[64 137]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[114 134]
[115 133]
[116 132]
[117 131]
[118 130]
[119 129]
[121 128]
[122 127]
[195 248]
[196 247]
[197 246]
[198 245]
[201 242]
[205 240]
[206 239]
[207 238]
[208 237]
[209 236]
[210 235]
[211 234]
[213 231]
[214 230]
[215 229]
[216 228]
[217 227]
[218 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
