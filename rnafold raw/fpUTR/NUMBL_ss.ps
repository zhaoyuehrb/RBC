%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAACGGAAUCCUCCCGGGAGCCGAGGAGGCUCGCGCGCGUGCAUCCCGCACCAUCCCCCGGCCCCGGGCCCUGGCCGGCGUCAGACCGAGCUGCCGCCGCCACCACCGCAGCAGCAGCAGUCGGGGAGCCAGGCCCAGCCAGGGCCGCGGGAGGCGGGGGCGCCCGGGCCCUGG\
) } def
/len { sequence length } bind def

/coor [
[124.36167145 125.55288696]
[120.91207886 140.15084839]
[117.46249390 154.74879456]
[125.98045349 168.06120300]
[122.50872040 183.47946167]
[109.10700989 191.85618591]
[93.72631836 188.22163391]
[85.49174500 174.73211670]
[89.28870392 159.39071655]
[102.86454010 151.29920959]
[106.31412506 136.70126343]
[109.76371002 122.10330200]
[96.47231293 115.15069580]
[86.44862366 126.30980682]
[76.42494202 137.46891785]
[66.50124359 148.71704102]
[56.67833328 160.05328369]
[46.85542297 171.38952637]
[41.05251694 187.31945801]
[24.13873100 186.15316772]
[20.57723618 169.57751465]
[35.51918030 161.56661987]
[45.34209061 150.23037720]
[55.16500092 138.89411926]
[57.17546082 131.75682068]
[65.26583099 127.44522858]
[75.28952026 116.28611755]
[85.31320190 105.12700653]
[93.53511810 92.58108521]
[99.76634216 78.93660736]
[105.99756622 65.29212952]
[112.22879028 51.64764786]
[118.46001434 38.00316620]
[124.69123840 24.35868645]
[123.38594818 8.59141731]
[135.71113586 0.22847427]
[141.94236755 -13.41600609]
[148.17358398 -27.06048584]
[154.40481567 -40.70496368]
[146.75076294 -53.60517883]
[131.78898621 -54.67526627]
[116.82720184 -55.74535370]
[101.86541748 -56.81544113]
[88.84807587 -47.43842697]
[73.44017792 -51.90788651]
[67.46133423 -66.79522705]
[75.49800873 -80.68016052]
[91.38515472 -82.91135406]
[102.93550873 -71.77722168]
[117.89729309 -70.70713806]
[132.85906982 -69.63704681]
[147.82084656 -68.56696320]
[137.93927002 -79.85210419]
[141.41612244 -94.44358826]
[155.32498169 -100.05996704]
[167.95895386 -91.97400665]
[168.68415833 -76.99147034]
[178.70785522 -88.15058136]
[188.73153687 -99.30968475]
[198.75521851 -110.46879578]
[208.77891541 -121.62790680]
[212.24472046 -137.06483459]
[226.50576782 -141.36274719]
[236.42945862 -152.61087036]
[246.25236511 -163.94711304]
[256.07528687 -175.28335571]
[265.89819336 -186.61959839]
[275.61953735 -198.04306030]
[285.23852539 -209.55282593]
[294.85754395 -221.06259155]
[304.47656250 -232.57235718]
[314.09555054 -244.08212280]
[323.71456909 -255.59190369]
[333.33355713 -267.10165405]
[342.95257568 -278.61141968]
[352.57156372 -290.12118530]
[355.48419189 -305.67199707]
[369.58276367 -310.47616577]
[379.20175171 -321.98593140]
[382.31808472 -330.60757446]
[389.09661865 -333.61331177]
[398.91952515 -344.94955444]
[408.74246216 -356.28579712]
[403.16635132 -375.44567871]
[410.19409180 -393.96862793]
[426.83340454 -404.45477295]
[446.28982544 -402.82623291]
[455.27899170 -414.83435059]
[464.26815796 -426.84246826]
[473.25732422 -438.85058594]
[482.03073120 -451.01724243]
[490.58557129 -463.33856201]
[499.14038086 -475.65988159]
[507.69522095 -487.98120117]
[516.25006104 -500.30249023]
[517.76507568 -516.05102539]
[531.37927246 -522.09271240]
[539.93414307 -534.41400146]
[541.44909668 -550.16253662]
[555.06329346 -556.20422363]
[563.61816406 -568.52551270]
[559.33666992 -583.56555176]
[565.77154541 -597.81781006]
[579.88446045 -604.55273438]
[595.01171875 -600.59039307]
[604.01068115 -587.80163574]
[602.63232422 -572.22491455]
[591.52746582 -561.21508789]
[575.93945312 -559.97064209]
[567.38464355 -547.64935303]
[566.48156738 -532.78216553]
[552.25543213 -525.85919189]
[543.70056152 -513.53784180]
[542.79754639 -498.67065430]
[528.57141113 -491.74765015]
[520.01654053 -479.42636108]
[511.46170044 -467.10504150]
[502.90686035 -454.78372192]
[494.35202026 -442.46240234]
[494.31121826 -437.65725708]
[491.22955322 -432.83386230]
[485.26544189 -429.86145020]
[476.27627563 -417.85333252]
[467.28710938 -405.84518433]
[458.29794312 -393.83706665]
[463.48416138 -384.80715942]
[465.36117554 -374.52548218]
[463.68789673 -364.16986084]
[458.63143921 -354.93533325]
[450.75091553 -347.89617920]
[440.93548584 -343.88104248]
[430.30429077 -343.37536621]
[420.07870483 -346.46289062]
[410.25576782 -335.12664795]
[400.43286133 -323.79040527]
[390.71151733 -312.36694336]
[381.09252930 -300.85717773]
[378.86791992 -286.12963867]
[364.08132935 -280.50219727]
[354.46234131 -268.99243164]
[344.84332275 -257.48266602]
[335.22433472 -245.97288513]
[325.60531616 -234.46311951]
[315.98632812 -222.95335388]
[306.36730957 -211.44358826]
[296.74832153 -199.93382263]
[287.12930298 -188.42405701]
[285.24655151 -181.25199890]
[277.23443604 -176.79669189]
[267.41152954 -165.46044922]
[257.58862305 -154.12420654]
[247.76570129 -142.78796387]
[245.75524902 -135.65065002]
[237.66487122 -131.33906555]
[234.91601562 -116.70030975]
[219.93801880 -111.60421753]
[209.91433716 -100.44510651]
[199.89064026 -89.28600311]
[189.86695862 -78.12689209]
[179.84327698 -66.96778107]
[168.04930115 -34.47373962]
[161.81806946 -20.82925987]
[155.58683777 -7.18478060]
[149.35562134 6.45969963]
[151.10661316 21.25102425]
[138.33572388 30.58991241]
[132.10449219 44.23439026]
[125.87326813 57.87887192]
[119.64204407 71.52335358]
[113.41082001 85.16783142]
[107.17959595 98.81230927]
[111.94844818 99.97919464]
[116.40627289 102.65536499]
[120.19235992 106.75117493]
[122.96997070 112.10063171]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[13 28]
[14 27]
[15 26]
[16 24]
[17 23]
[18 22]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[34 166]
[36 164]
[37 163]
[38 162]
[39 161]
[40 52]
[41 51]
[42 50]
[43 49]
[57 160]
[58 159]
[59 158]
[60 157]
[61 156]
[63 154]
[64 152]
[65 151]
[66 150]
[67 149]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[78 137]
[79 136]
[81 135]
[82 134]
[83 133]
[87 125]
[88 124]
[89 123]
[90 122]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[97 113]
[98 112]
[100 110]
[101 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
