%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGCGUGCUGAAGCCGGAGCGAGCUAGCCGCCCGGAGCCGCGCCGACCCAGCUGAGCCCAGCCCACGGGACGCCAGACCUCGACCGUCGCUCCUACCCCGGCCACCGCUCGGAGCCGAGGCGGACGCGUCCCGAUCUUCCCCUGUCCCCACCCUGCCCCGACCCUCCUCUCCACCUCUCGCGUCGUGACACCAGCUGUCUCCGGCAGCCUCUUGGUC\
) } def
/len { sequence length } bind def

/coor [
[6.49474955 368.56091309]
[-3.23463821 357.14431763]
[4.61658287 344.36325073]
[-2.67430329 342.60455322]
[-11.86960888 354.45556641]
[-21.06491470 366.30657959]
[-23.85074425 374.99942017]
[-30.47810936 378.26037598]
[-39.84246826 389.97824097]
[-49.20682526 401.69613647]
[-49.70463181 405.99612427]
[-51.37405396 409.55810547]
[-53.84028244 412.10491943]
[-56.67705154 413.50921631]
[-59.45980072 413.79714966]
[-69.48075867 424.95870972]
[-79.50171661 436.12026978]
[-89.52267456 447.28182983]
[-92.92430878 455.75271606]
[-99.76832581 458.53030396]
[-109.94836426 469.54696655]
[-120.12839508 480.56362915]
[-117.97282410 496.05194092]
[-126.32099915 509.27471924]
[-141.23118591 513.98858643]
[-155.66323853 507.96780396]
[-162.80278015 494.05517578]
[-159.27874756 478.81985474]
[-146.75508118 469.45547485]
[-131.14506531 470.38360596]
[-120.96502686 459.36694336]
[-110.78498840 448.35028076]
[-100.68423462 437.26089478]
[-90.66327667 426.09933472]
[-80.64231873 414.93777466]
[-70.62136078 403.77621460]
[-60.92470932 392.33178711]
[-51.56035233 380.61389160]
[-42.19599152 368.89599609]
[-32.91592026 357.11126709]
[-23.72061539 345.26025391]
[-14.52530956 333.40924072]
[-6.74754333 320.58325195]
[-0.48963952 306.95098877]
[5.76826429 293.31872559]
[12.02616882 279.68646240]
[3.52744865 265.63873291]
[5.09440899 249.12818909]
[16.30654335 236.68299866]
[32.89063263 233.34237671]
[38.95234299 219.62174988]
[45.01405334 205.90110779]
[51.07576370 192.18048096]
[57.13747025 178.45985413]
[63.19918060 164.73922729]
[51.70285416 156.68203735]
[41.92298889 146.61038208]
[34.20715714 134.88221741]
[28.82958031 121.91436005]
[25.98137474 108.16766357]
[25.76376343 94.13069153]
[28.18448067 80.30231476]
[33.15749359 67.17398834]
[40.50606918 55.21228409]
[49.96903229 44.84231949]
[61.21007919 36.43263626]
[73.82970428 30.28211594]
[69.99940491 15.77939892]
[66.16910553 1.27668166]
[62.33880615 -13.22603512]
[58.50850677 -27.72875214]
[54.67820740 -42.23146820]
[50.84790802 -56.73418808]
[47.01760864 -71.23690796]
[30.29084778 -80.14221191]
[25.47374153 -98.13871002]
[35.17675018 -113.66687775]
[29.74990463 -121.00691223]
[30.97588730 -128.29063416]
[26.93794441 -142.73692322]
[22.90000153 -157.18319702]
[18.86206055 -171.62947083]
[14.82411766 -186.07575989]
[6.57271528 -173.54920959]
[-8.09215641 -170.39619446]
[-20.76292610 -178.42436218]
[-24.17526436 -193.03108215]
[-16.37283325 -205.84208679]
[-1.82887387 -209.51268005]
[11.11778259 -201.93920898]
[8.33665943 -216.67912292]
[5.55553675 -231.41905212]
[2.77441382 -246.15898132]
[-0.00670898 -260.89889526]
[-11.90675735 -264.70507812]
[-21.00815773 -273.15875244]
[-25.62693596 -284.61215210]
[-24.94419861 -296.87060547]
[-19.15062714 -307.61322021]
[-9.39871979 -314.83218384]
[-11.75586319 -329.64581299]
[-14.11300564 -344.45947266]
[-22.57323074 -359.15167236]
[-10.79722595 -371.34848022]
[4.18284559 -363.40908813]
[0.70063263 -346.81661987]
[3.05777550 -332.00296021]
[5.41491842 -317.18933105]
[21.51400757 -309.91912842]
[30.09776688 -294.30059814]
[27.56101608 -276.50122070]
[14.73321533 -263.68002319]
[17.51433754 -248.94009399]
[20.29545975 -234.20018005]
[23.07658386 -219.46025085]
[25.85770607 -204.72032166]
[29.27039909 -190.11369324]
[33.30834198 -175.66741943]
[37.34628296 -161.22114563]
[41.38422394 -146.77485657]
[45.42216873 -132.32858276]
[49.56362152 -117.91162872]
[60.52188492 -114.76129913]
[68.68505096 -106.63002014]
[71.94539642 -95.45411682]
[69.38275146 -83.97509766]
[61.52032852 -75.06720734]
[65.35062408 -60.56448746]
[69.18092346 -46.06176758]
[73.01122284 -31.55905151]
[76.84152222 -17.05633545]
[80.67182159 -2.55361772]
[84.50212097 11.94909954]
[88.33242035 26.45181656]
[98.04482269 25.06471443]
[107.91980743 24.96311378]
[117.78686523 26.16566658]
[127.47341919 28.66836357]
[136.80781555 32.44430923]
[145.62240601 37.44391632]
[153.75654602 43.59548187]
[161.05946350 50.80619431]
[167.39311218 58.96348190]
[172.63471985 67.93677521]
[176.67912292 77.57955933]
[191.03517151 73.23171997]
[205.39123535 68.88388824]
[207.24504089 53.76822281]
[215.09222412 40.71673203]
[227.57324219 31.99066353]
[242.52565002 29.10186005]
[257.35888672 32.55082703]
[269.50296021 41.74000931]
[276.85388184 55.07732391]
[278.13803101 70.25199890]
[273.13293457 84.63494110]
[262.70574951 95.73419952]
[248.66304016 101.62677765]
[233.43780518 101.29174805]
[219.66790771 94.78714752]
[209.73905945 83.23994446]
[195.38301086 87.58777618]
[181.02694702 91.93561554]
[180.38221741 99.40785217]
[195.32669067 100.69731903]
[210.27116394 101.98679352]
[224.88270569 98.59523773]
[232.62332153 111.44369507]
[222.79556274 122.77572632]
[208.98168945 116.93126678]
[194.03721619 115.64179230]
[179.09274292 114.35232544]
[178.44801331 121.82455444]
[191.84712219 128.56723022]
[205.24624634 135.30989075]
[220.08840942 130.58253479]
[233.58097839 137.61143494]
[237.99632263 151.79029846]
[254.32853699 150.31013489]
[263.55404663 163.86822510]
[256.18246460 178.51716614]
[239.79701233 179.18739319]
[231.25366211 165.18942261]
[217.23596191 170.09245300]
[203.55130005 163.44531250]
[198.50358582 148.70901489]
[185.10446167 141.96633911]
[171.70533752 135.22367859]
[158.06391907 153.28097534]
[140.12333679 166.56326294]
[119.44998932 174.12738037]
[97.78955078 175.51991272]
[76.91981506 170.80093384]
[70.85810089 184.52156067]
[64.79639435 198.24218750]
[58.73468399 211.96282959]
[52.67297363 225.68345642]
[46.61126328 239.40408325]
[54.40344238 250.76982117]
[55.55450439 264.39340210]
[49.87044907 276.70889282]
[38.93238831 284.54559326]
[25.65843391 285.94436646]
[19.40052986 299.57662964]
[13.14262486 313.20889282]
[6.88472080 326.84115601]
[25.52583694 329.59783936]
[41.22916794 346.85818481]
[44.01028824 361.59808350]
[46.79141235 376.33801270]
[57.88648605 388.41409302]
[52.71834946 403.97756958]
[36.60353851 407.01812744]
[26.11958694 394.40783691]
[32.05148697 379.11914062]
[29.27036476 364.37921143]
[26.48924255 349.63928223]
[19.19835663 347.88061523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 42]
[5 41]
[6 40]
[8 39]
[9 38]
[10 37]
[15 36]
[16 35]
[17 34]
[18 33]
[20 32]
[21 31]
[22 30]
[43 206]
[44 205]
[45 204]
[46 203]
[50 198]
[51 197]
[52 196]
[53 195]
[54 194]
[55 193]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[77 122]
[79 121]
[80 120]
[81 119]
[82 118]
[83 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
[100 108]
[101 107]
[102 106]
[145 163]
[146 162]
[147 161]
[173 188]
[174 187]
[175 186]
[178 183]
[208 217]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
