%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGAGCGGCGGCGGAAGCGGAAGUGCCUCAGCGGUAGGGGCCGGGGAAGUGUCUGUAGCGUCCCUCCCUCUCAACCACAAUAACAGGCGGAGGGUCGGCGUAGGUACUUUGAACUCAAGUAAACAAAAGGGAAGAUUUUCUCGUUGAUACUGGAGACUGCACAACA\
) } def
/len { sequence length } bind def

/coor [
[96.39652252 251.93383789]
[84.08179474 242.97462463]
[76.48139954 229.77789307]
[74.91214752 214.63003540]
[79.64591980 200.15553284]
[89.86255646 188.86216736]
[103.79197693 182.70658875]
[103.79197693 167.70658875]
[103.79197693 152.70658875]
[103.79197693 137.70658875]
[96.64201355 135.44206238]
[82.34209442 130.91300964]
[75.19213867 128.64848328]
[66.55679321 140.91351318]
[65.62504578 157.28616333]
[50.86027145 164.42292786]
[37.45120621 154.98211670]
[39.19194794 138.67561340]
[54.29176712 132.27816772]
[62.92711258 120.01314545]
[63.93689346 96.83980560]
[76.26809692 81.20540619]
[67.18283844 69.26983643]
[58.09756851 57.33425903]
[49.01230240 45.39868546]
[39.92703629 33.46311188]
[30.84177017 21.52753639]
[21.75650597 9.59196091]
[12.67123890 -2.34361386]
[3.58597326 -14.27918816]
[-11.82603645 -16.53921127]
[-20.86976242 -28.77300453]
[-18.62019730 -43.45207214]
[-27.70546341 -55.38764572]
[-39.72496414 -64.36158752]
[-53.75020981 -69.68065643]
[-62.92522812 -69.80249786]
[-67.98519135 -75.23115540]
[-81.90914154 -80.81001282]
[-95.83309174 -86.38887024]
[-109.75704193 -91.96772766]
[-123.68098450 -97.54659271]
[-137.60493469 -103.12545013]
[-151.58013916 -108.57465363]
[-167.37588501 -101.10221863]
[-183.38113403 -107.22618103]
[-189.89282227 -122.71243286]
[-204.01451111 -127.76988220]
[-218.13619995 -132.82733154]
[-234.16580200 -129.36550903]
[-244.97662354 -141.69670105]
[-239.44743347 -157.13560486]
[-223.26617432 -159.80003357]
[-213.07875061 -146.94902039]
[-198.95706177 -141.89157104]
[-184.83537292 -136.83412170]
[-174.04789734 -143.92390442]
[-160.95166016 -143.48690796]
[-150.35008240 -135.45861816]
[-146.26106262 -122.59989166]
[-138.86187744 -123.17047882]
[-132.02607727 -117.04940033]
[-118.10212708 -111.47053528]
[-104.17817688 -105.89167786]
[-90.25423431 -100.31282043]
[-76.33028412 -94.73396301]
[-62.40633392 -89.15510559]
[-48.43113708 -83.70590210]
[-34.40589142 -78.38682556]
[-22.30350113 -87.24866486]
[-23.13958549 -102.22534180]
[-23.97567177 -117.20202637]
[-24.81175613 -132.17871094]
[-25.64784050 -147.15538025]
[-37.14600754 -157.66395569]
[-37.78056717 -172.86434937]
[-27.69139671 -183.76132202]
[-28.52748299 -198.73800659]
[-42.00091553 -206.25267029]
[-49.25259781 -219.86944580]
[-47.96854401 -235.24328613]
[-38.55848694 -247.46842957]
[-24.02514458 -252.64390564]
[-9.00605392 -249.11822510]
[1.70624912 -238.01641846]
[4.69350672 -222.88102722]
[-0.99750394 -208.54171753]
[-13.55080223 -199.57409668]
[-12.71471691 -184.59741211]
[-1.47535181 -174.89111328]
[-0.41409403 -159.71453857]
[-10.67116070 -147.99147034]
[-9.83507538 -133.01478577]
[-8.99899006 -118.03810883]
[-8.16290474 -103.06143188]
[-7.32681990 -88.08474731]
[-6.80488729 -80.52375031]
[-8.35810566 -73.75587463]
[-11.53454018 -68.29443359]
[-15.76988792 -64.47291565]
[-6.68462229 -52.53733826]
[8.06345940 -50.79674530]
[17.44723892 -38.82179642]
[15.52154827 -23.36445427]
[24.60681343 -11.42887974]
[33.69208145 0.50669485]
[42.77734375 12.44226933]
[51.86260986 24.37784386]
[60.94787598 36.31341934]
[70.03314209 48.24899292]
[79.11840820 60.18456650]
[88.20367432 72.12014008]
[103.63994598 69.94686890]
[118.11105347 75.74243927]
[127.77986908 87.97009277]
[130.08262634 103.38758087]
[144.10786438 108.70665741]
[158.13310242 114.02572632]
[173.78018188 111.68483734]
[182.93669128 123.43248749]
[196.96194458 128.75155640]
[210.98718262 134.07063293]
[225.01243591 139.38970947]
[237.09965515 134.81323242]
[248.68737793 139.56250000]
[253.74977112 150.57667542]
[267.67370605 156.15553284]
[281.59765625 161.73439026]
[293.76785278 157.38339233]
[305.26531982 162.34722900]
[310.12210083 173.45361328]
[323.93994141 179.29032898]
[337.75778198 185.12704468]
[351.57562256 190.96376038]
[365.39346313 196.80047607]
[381.59109497 194.23751831]
[391.69778442 207.15211487]
[385.31665039 222.25883484]
[369.01202393 224.01718140]
[359.55673218 210.61831665]
[345.73889160 204.78160095]
[331.92105103 198.94488525]
[318.10321045 193.10816956]
[304.28536987 187.27145386]
[287.03350830 190.39163208]
[276.01879883 175.65834045]
[262.09484863 170.07948303]
[248.17091370 164.50062561]
[230.98001099 167.94094849]
[219.69335938 153.41494751]
[205.66810608 148.09588623]
[191.64286804 142.77680969]
[177.61763000 137.45773315]
[162.97373962 140.17907715]
[152.81402588 128.05096436]
[138.78878784 122.73189545]
[124.76354980 117.41282654]
[123.60129547 127.45019531]
[118.79197693 137.70658875]
[118.79197693 152.70658875]
[118.79197693 167.70658875]
[118.79197693 182.70658875]
[132.72138977 188.86216736]
[142.93803406 200.15553284]
[147.67181396 214.63003540]
[146.10255432 229.77789307]
[138.50215149 242.97462463]
[126.18743134 251.93383789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 162]
[8 161]
[9 160]
[10 159]
[13 20]
[14 19]
[22 112]
[23 111]
[24 110]
[25 109]
[26 108]
[27 107]
[28 106]
[29 105]
[30 104]
[33 101]
[34 100]
[35 69]
[36 68]
[38 67]
[39 66]
[40 65]
[41 64]
[42 63]
[43 62]
[44 60]
[47 56]
[48 55]
[49 54]
[70 96]
[71 95]
[72 94]
[73 93]
[74 92]
[77 89]
[78 88]
[116 157]
[117 156]
[118 155]
[120 153]
[121 152]
[122 151]
[123 150]
[126 148]
[127 147]
[128 146]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
