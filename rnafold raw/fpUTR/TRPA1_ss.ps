%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGAAGUUCUCCAGGGCUUCCGCAGAGCGACUUUUUCGCUGCCUGUGAGCUGCAGCGCGGGAGAGCUCGGGCUCGCGCGGACCCCAGCGCCUGGCAGGCUGACAGCGCUCUCUCGCCCCAGGUGCCCGCGCGCGUGGUGAGCAGCUGCACCAGGUGGCGUCCGGGGUGGGGUCA\
) } def
/len { sequence length } bind def

/coor [
[119.60893250 127.26522064]
[111.50404358 132.74887085]
[101.86768341 135.78840637]
[91.44593048 135.96014404]
[84.97216034 149.49122620]
[78.49839020 163.02230835]
[72.02461243 176.55339050]
[65.55084229 190.08447266]
[59.07706833 203.61557007]
[52.60329819 217.14665222]
[54.40927887 233.44604492]
[41.03810120 242.94044495]
[26.24488640 235.86282349]
[25.24762154 219.49403381]
[39.07221222 210.67288208]
[45.54598236 197.14178467]
[52.01975632 183.61070251]
[58.49353027 170.07962036]
[64.96730042 156.54853821]
[71.44107819 143.01745605]
[77.91484833 129.48635864]
[67.99115753 118.23824310]
[53.75876617 122.97523499]
[39.52637863 127.71222687]
[25.29398918 132.44921875]
[11.06159973 137.18621826]
[-3.08397079 142.17648315]
[-17.13821602 147.41845703]
[-31.19246292 152.66041565]
[-45.24670792 157.90237427]
[-59.30095291 163.14433289]
[-67.24658966 177.08157349]
[-83.11879730 179.41668701]
[-94.74176788 168.35838318]
[-93.19935608 152.38964844]
[-79.67477417 143.76033020]
[-64.54291534 149.09008789]
[-50.48867035 143.84812927]
[-36.43442535 138.60617065]
[-22.38017845 133.36421204]
[-8.32593346 128.12223816]
[-5.55193090 124.19847107]
[-0.26968354 121.99398041]
[6.32460594 122.95382690]
[20.55699539 118.21683502]
[34.78938293 113.47983551]
[49.02177429 108.74284363]
[63.25416183 104.00585175]
[66.99604797 93.78378296]
[73.22118378 86.02733612]
[62.06207275 76.00364685]
[53.55717087 72.58158112]
[50.79528809 65.70007324]
[39.81687164 55.47880936]
[28.74766541 45.35592651]
[17.58855820 35.33224106]
[6.42944956 25.30855370]
[-9.00747681 21.84273720]
[-13.30539227 7.58169985]
[-24.46450043 -2.44198704]
[-35.62360764 -12.46567440]
[-46.78271866 -22.48936081]
[-62.93068314 -25.34860420]
[-68.27339935 -40.85303497]
[-57.31473541 -53.05302811]
[-41.32802963 -49.39827347]
[-36.75902939 -33.64846802]
[-25.59992218 -23.62478256]
[-14.44081402 -13.60109520]
[-3.28170538 -3.57740879]
[11.35704708 -0.82855433]
[16.45313644 14.14944458]
[27.61224556 24.17313194]
[38.77135468 34.19681931]
[45.87163544 36.33435059]
[50.03813934 44.50038910]
[61.01655579 54.72166061]
[72.08576202 64.84454346]
[83.24487305 74.86822510]
[108.50972748 71.01853943]
[127.68257141 87.91631317]
[142.48942566 85.51692200]
[157.29627991 83.11753082]
[172.10313416 80.71813965]
[186.90998840 78.31874084]
[201.71684265 75.91934967]
[216.52369690 73.51995850]
[229.49171448 65.98134613]
[238.90374756 54.30172348]
[248.31578064 42.62210083]
[257.72781372 30.94247818]
[267.13986206 19.26285362]
[276.55187988 7.58323097]
[285.96392822 -4.09639215]
[295.37594604 -15.77601528]
[296.78109741 -22.28996658]
[300.69253540 -26.46877480]
[305.33834839 -27.69665718]
[315.16125488 -39.03290176]
[324.98416138 -50.36914444]
[328.25387573 -58.93377686]
[335.08499146 -61.81804657]
[345.10867310 -72.97714996]
[348.57449341 -88.41407776]
[362.83554077 -92.71199799]
[372.85922241 -103.87110138]
[375.71844482 -120.01906586]
[391.22290039 -125.36178589]
[403.42288208 -114.40312195]
[399.76812744 -98.41641235]
[384.01831055 -93.84741974]
[373.99462891 -82.68830872]
[371.24578857 -68.04955292]
[356.26779175 -62.95346832]
[346.24411011 -51.79435730]
[336.32040405 -40.54623413]
[326.49749756 -29.20998955]
[316.67459106 -17.87374687]
[307.05557251 -6.36397982]
[297.64355469 5.31564331]
[288.23150635 16.99526596]
[278.81945801 28.67488861]
[269.40744019 40.35451126]
[259.99539185 52.03413391]
[250.58335876 63.71376038]
[241.17132568 75.39337921]
[244.09768677 90.10516357]
[257.26287842 97.29389191]
[270.42807007 104.48262787]
[283.71945190 111.43523407]
[297.13284302 118.14949036]
[310.54620361 124.86375427]
[324.01898193 131.45802307]
[337.55007935 137.93180847]
[353.33813477 136.90814209]
[361.47973633 149.38064575]
[375.01083374 155.85441589]
[388.54190063 162.32818604]
[402.07299805 168.80197144]
[415.60409546 175.27574158]
[429.18493652 167.76971436]
[444.57980347 169.71324158]
[455.86907959 180.35899353]
[458.71179199 195.61346436]
[452.01486206 209.61097717]
[438.35339355 216.96923828]
[422.98049927 214.85881042]
[411.80737305 204.09123230]
[409.13031006 188.80682373]
[395.59921265 182.33305359]
[382.06814575 175.85928345]
[368.53704834 169.38549805]
[355.00598145 162.91172791]
[340.18576050 164.39843750]
[331.07629395 151.46289062]
[317.54519653 144.98912048]
[310.13034058 144.93855286]
[303.83197021 138.27713013]
[290.41857910 131.56286621]
[277.00518799 124.84860992]
[272.24316406 125.49206543]
[267.03027344 123.12819672]
[263.23931885 117.64781189]
[250.07414246 110.45908356]
[236.90895081 103.27034760]
[228.37963867 100.37464905]
[222.19676208 94.97769165]
[218.92309570 88.32681274]
[204.11624146 90.72620392]
[189.30938721 93.12559509]
[174.50253296 95.52499390]
[159.69567871 97.92438507]
[144.88882446 100.32377625]
[130.08197021 102.72316742]
[129.14314270 111.50365448]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 21]
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[50 79]
[51 78]
[53 77]
[54 76]
[55 74]
[56 73]
[57 72]
[59 70]
[60 69]
[61 68]
[62 67]
[81 174]
[82 173]
[83 172]
[84 171]
[85 170]
[86 169]
[87 168]
[88 126]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[98 118]
[99 117]
[100 116]
[102 115]
[103 114]
[105 112]
[106 111]
[127 165]
[128 164]
[129 163]
[130 160]
[131 159]
[132 158]
[133 156]
[134 155]
[136 153]
[137 152]
[138 151]
[139 150]
[140 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
