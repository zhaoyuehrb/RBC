%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGGUACGGACAGCGCAUGAGCUUAUGUUGAGGGCGGAGCCCAGACCAGCCCUUCGUCCUAUCCUGCCCUUCCAGCACCUCUCAGCCGUAACUUAAACUACACUUCCCAGAAGCCUCCUCAGCCAGGGACUUCCGUUGUCGUCAGCGGAAGCGGUGACAGAUCAUCCCAGGCCACACAGAGGCCGGCUUGGUCACU\
) } def
/len { sequence length } bind def

/coor [
[-3.69106817 243.88801575]
[-11.82081699 234.65258789]
[-25.32800293 241.17607117]
[-38.83518982 247.69956970]
[-52.34237289 254.22305298]
[-65.84955597 260.74655151]
[-68.71236420 275.88293457]
[-79.80931091 286.30941772]
[-94.74129486 288.18017578]
[-107.75585938 280.98580933]
[-121.26304626 287.50930786]
[-134.77023315 294.03277588]
[-148.27742004 300.55627441]
[-159.72569275 310.24838257]
[-168.38850403 322.49401855]
[-177.05133057 334.73965454]
[-174.13536072 350.27261353]
[-183.12574768 363.27062988]
[-198.68865967 366.02221680]
[-211.59089661 356.89489746]
[-214.17779541 341.30377197]
[-204.91458130 328.49874878]
[-189.29696655 326.07684326]
[-180.63414001 313.83120728]
[-171.97132874 301.58557129]
[-176.00801086 295.26455688]
[-188.65003967 303.33792114]
[-201.29219055 311.41107178]
[-209.36515808 298.76879883]
[-196.72338867 290.69589233]
[-184.08135986 282.62252808]
[-188.11804199 276.30151367]
[-202.87152100 279.00982666]
[-217.62500000 281.71813965]
[-232.37847900 284.42642212]
[-247.13195801 287.13473511]
[-261.88543701 289.84304810]
[-276.61706543 292.66772461]
[-291.32595825 295.60858154]
[-297.68582153 309.76245117]
[-311.16720581 317.44567871]
[-326.58621216 315.70394897]
[-338.01394653 305.20697021]
[-341.05618286 289.99102783]
[-334.54315186 275.90701294]
[-320.97921753 268.37045288]
[-305.58001709 270.27935791]
[-294.26681519 280.89968872]
[-279.55795288 277.95883179]
[-273.60943604 273.56036377]
[-264.59375000 275.08956909]
[-249.84025574 272.38125610]
[-235.08677673 269.67294312]
[-220.33329773 266.96466064]
[-205.57983398 264.25634766]
[-190.82635498 261.54803467]
[-163.83195496 268.60891724]
[-154.80090332 287.04910278]
[-141.29371643 280.52560425]
[-127.78653717 274.00210571]
[-114.27935028 267.47860718]
[-111.82276917 252.81222534]
[-101.07392120 242.28007507]
[-86.00829315 240.07093811]
[-72.37304688 247.23936462]
[-58.86586380 240.71586609]
[-45.35868073 234.19238281]
[-31.85149384 227.66888428]
[-18.34430885 221.14540100]
[-20.61392975 208.45886230]
[-19.59074974 195.59577942]
[-15.33369541 183.39778137]
[-8.11355019 172.66508484]
[1.60424495 164.10388184]
[13.18959522 158.27995300]
[25.88860321 155.58120728]
[38.87262344 156.19195557]
[51.29234314 160.08024597]
[59.56426620 147.56724548]
[67.83618927 135.05422974]
[76.10811615 122.54122925]
[68.71960449 119.55047607]
[61.70862579 114.45195770]
[55.62911987 107.30529022]
[51.02059555 98.30778503]
[48.37528610 87.78987122]
[48.10679245 76.20302582]
[50.52187729 64.10057831]
[55.79696655 52.11215210]
[63.96071243 40.91298676]
[62.54201508 25.98022652]
[61.12332153 11.04746723]
[47.69538879 3.27120113]
[41.43352890 -10.92628860]
[44.74555206 -26.08577919]
[56.35791397 -36.37813568]
[71.80543518 -37.84573746]
[85.14821625 -29.92426109]
[91.25569153 -15.65967846]
[87.77941132 -0.53700930]
[76.05607605 9.62876987]
[77.47477722 24.56152916]
[78.89347076 39.49428940]
[86.34096527 40.38022614]
[108.68343353 43.03804779]
[113.56571198 28.85483932]
[118.44799042 14.67163277]
[123.33026886 0.48842594]
[122.76857758 -16.45621490]
[138.89552307 -21.68670273]
[148.38598633 -7.63794756]
[137.51347351 5.37070417]
[132.63119507 19.55391121]
[127.74891663 33.73711777]
[122.86663818 47.92032623]
[129.21931458 51.90698624]
[141.92468262 59.88030243]
[148.27735901 63.86696243]
[158.92573547 53.30230331]
[169.57412720 42.73764801]
[180.22250366 32.17298889]
[180.03424072 16.36982155]
[191.13526917 5.12069893]
[206.93954468 5.09952641]
[218.07066345 16.31886482]
[217.92474365 32.12247849]
[206.58834839 43.13436890]
[190.78715515 42.82136917]
[180.13877869 53.38602829]
[169.49040222 63.95068359]
[158.84202576 74.51534271]
[165.99766541 87.69853973]
[180.65829468 84.52584076]
[195.31892395 81.35314178]
[209.97955322 78.18043518]
[224.64016724 75.00773621]
[239.30079651 71.83503723]
[253.96142578 68.66233826]
[268.62203979 65.48963928]
[283.28268433 62.31693649]
[295.05895996 50.90417862]
[310.75457764 55.65598297]
[314.22323608 71.68409729]
[301.89663696 82.50017548]
[286.45538330 76.97756195]
[271.79473877 80.15026093]
[257.13412476 83.32295990]
[242.47349548 86.49566650]
[227.81288147 89.66836548]
[213.15225220 92.84106445]
[198.49162292 96.01376343]
[183.83099365 99.18647003]
[169.17036438 102.35916901]
[128.45297241 142.36000061]
[88.62111664 130.81315613]
[80.34919739 143.32615662]
[72.07727051 155.83915710]
[63.80535126 168.35217285]
[75.81554413 184.80450439]
[80.39365387 204.59597778]
[76.84775543 224.54171753]
[65.78964996 241.44955444]
[74.83473206 253.41561890]
[83.87980652 265.38168335]
[92.92488098 277.34774780]
[101.96996307 289.31381226]
[117.37428284 291.62564087]
[126.37681580 303.88977051]
[124.07789612 318.56118774]
[133.12297058 330.52725220]
[140.80206299 335.49243164]
[142.21461487 342.75436401]
[151.06967163 354.86172485]
[159.92471313 366.96908569]
[168.77976990 379.07644653]
[184.39363098 379.93740845]
[195.76570129 390.67098999]
[197.52644348 406.20913696]
[188.84448242 419.21517944]
[173.81916809 423.54809570]
[159.54501343 417.16198730]
[152.76181030 403.07220459]
[156.67240906 387.93148804]
[147.81735229 375.82412720]
[138.96231079 363.71676636]
[130.10725403 351.60940552]
[121.15691376 339.57232666]
[112.11183929 327.60626221]
[97.36969757 325.81610107]
[88.02623749 313.80966187]
[90.00389862 298.35888672]
[80.95882416 286.39282227]
[71.91374969 274.42675781]
[62.86867142 262.46069336]
[53.82359314 250.49464417]
[42.37641907 255.00555420]
[30.17713928 256.60671997]
[17.95360947 255.20263672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 69]
[3 68]
[4 67]
[5 66]
[6 65]
[10 61]
[11 60]
[12 59]
[13 58]
[14 25]
[15 24]
[16 23]
[32 56]
[33 55]
[34 54]
[35 53]
[36 52]
[37 51]
[38 49]
[39 48]
[78 158]
[79 157]
[80 156]
[81 155]
[90 103]
[91 102]
[92 101]
[105 115]
[106 114]
[107 113]
[108 112]
[118 131]
[119 130]
[120 129]
[121 128]
[132 153]
[133 152]
[134 151]
[135 150]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
[162 195]
[163 194]
[164 193]
[165 192]
[166 191]
[169 188]
[170 187]
[172 186]
[173 185]
[174 184]
[175 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
