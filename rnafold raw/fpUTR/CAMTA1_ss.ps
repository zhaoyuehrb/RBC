%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUCCUCCCGGAGAGUAGUGAGACCCCUGGUGCGGGGCGAUUGGCGGCGGGAGCGAUGAGUGGCAGCCGCACGGCCCAACGGGAGCUGUGCGUGGGCCGCGGGGCGGGGCCAGGGCGGGUGCGCGGCGGCGGCGGGGUGGCUGGGCCGGCGGCGGCGGCGGUACGAGGCGCGCGCUCGGGGUCCCGGUCGCGAGGAGGAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[90.25437927 318.74664307]
[80.17753601 307.06500244]
[78.03855133 291.78665161]
[84.51997375 277.78683472]
[97.55360413 269.53286743]
[97.55360413 254.53286743]
[97.55360413 239.53286743]
[97.55360413 224.53286743]
[97.55360413 209.53286743]
[97.55360413 194.53286743]
[97.55360413 179.53286743]
[97.44033051 164.53329468]
[97.21378326 149.53500366]
[96.87397003 134.53884888]
[96.42092896 119.54569244]
[96.25284576 134.54475403]
[89.37924957 147.87718201]
[77.25860596 156.71403503]
[62.46273804 159.18028259]
[48.13110733 154.75259399]
[37.30466461 144.37049866]
[32.28061676 130.23687744]
[34.12499619 115.35070801]
[42.44644928 102.87058258]
[55.47929001 95.44461060]
[70.45814514 94.64846802]
[84.20457458 100.65096283]
[70.71825409 94.08444977]
[57.23193359 87.51792908]
[43.74560928 80.95141602]
[27.14415359 90.92714691]
[6.71133947 86.36305237]
[-5.83374166 67.67812347]
[-20.80637550 66.77244568]
[-35.77900696 65.86676788]
[-50.75164032 64.96109009]
[-65.72427368 64.05541229]
[-80.69690704 63.14973450]
[-96.97406006 71.75763702]
[-111.22651672 61.52047348]
[-126.21112061 60.84103394]
[-140.34759521 67.94529724]
[-152.71133423 59.63944626]
[-167.69593811 58.96001053]
[-182.68054199 58.28057098]
[-196.81701660 65.38483429]
[-209.18077087 57.07898331]
[-220.79594421 67.45806885]
[-235.98278809 66.55556488]
[-245.80607605 55.41830444]
[-260.79067993 54.73886490]
[-275.09262085 62.76298141]
[-289.05261230 54.15769196]
[-288.30978394 37.77537537]
[-273.62832642 30.46875763]
[-260.11123657 39.75426102]
[-245.12663269 40.43370056]
[-234.33573914 30.23113823]
[-219.12954712 30.70672417]
[-208.50132751 42.09437943]
[-195.43664551 34.94151688]
[-182.00111389 43.29596710]
[-167.01651001 43.97540665]
[-152.03190613 44.65484238]
[-138.96722412 37.50197983]
[-125.53168488 45.85643005]
[-110.54708099 46.53586960]
[-101.40502930 38.61216354]
[-88.91410065 39.05703354]
[-79.79122925 48.17710114]
[-64.81859589 49.08277893]
[-49.84596252 49.98845673]
[-34.87332916 50.89413452]
[-19.90069771 51.79981232]
[-4.92806387 52.70549011]
[3.31106496 40.17086792]
[-3.45838857 26.78526115]
[-10.22784233 13.39965248]
[-16.99729538 0.01404474]
[-23.76675034 -13.37156296]
[-30.53620338 -26.75717163]
[-37.20325851 -33.00473404]
[-37.30509186 -40.39645767]
[-43.87160873 -53.88277817]
[-56.86939240 -62.90320969]
[-55.48446655 -77.73329163]
[-70.11988831 -84.30473328]
[-73.96743774 -99.87958527]
[-64.07559967 -112.51014709]
[-48.03254700 -112.50733185]
[-38.14513779 -99.87330627]
[-41.99814606 -84.29980469]
[-29.47004128 -76.24400330]
[-30.38528633 -60.44929504]
[-23.81877136 -46.96297073]
[-17.15059662 -33.52662277]
[-10.38114166 -20.14101601]
[-3.61168838 -6.75540876]
[3.15776539 6.63019896]
[9.92721939 20.01580620]
[16.69667244 33.40141296]
[36.53576660 36.46167755]
[49.16635132 50.22080231]
[50.31212616 67.46509552]
[63.79844666 74.03160858]
[77.28476715 80.59812927]
[90.77108765 87.16464233]
[105.67495728 88.86019135]
[120.29163361 85.49082947]
[134.90832520 82.12146759]
[149.52500916 78.75210571]
[164.14167786 75.38275146]
[178.75836182 72.01338959]
[193.37504578 68.64402771]
[206.55009460 55.78090668]
[223.11732483 61.56526566]
[237.68144226 57.97553253]
[252.24557495 54.38579559]
[266.80969238 50.79606247]
[281.37384033 47.20632553]
[292.92132568 36.39126205]
[307.13043213 40.85789490]
[321.69454956 37.26815796]
[336.25869751 33.67842484]
[350.82281494 30.08868790]
[365.24105835 25.95170784]
[379.49282837 21.27338028]
[390.19146729 9.61791229]
[404.69705200 12.99977589]
[418.94882202 8.32144833]
[429.64746094 -3.33402014]
[444.15304565 0.04784388]
[458.40484619 -4.63048363]
[469.10345459 -16.28595161]
[483.60903931 -12.90408802]
[497.86083984 -17.58241653]
[504.36856079 -28.72027588]
[516.33703613 -32.32266998]
[527.19158936 -26.98037720]
[538.06506348 -38.47293091]
[552.51788330 -34.87237167]
[566.83874512 -39.33491898]
[581.15954590 -43.79746246]
[595.48034668 -48.26000977]
[608.80346680 -58.74476624]
[622.56671143 -48.84476471]
[616.86364746 -32.87882233]
[599.94287109 -33.93919754]
[585.62207031 -29.47665215]
[571.30126953 -25.01410484]
[556.98046875 -20.55155945]
[547.13134766 -9.37819481]
[531.65417480 -12.65956402]
[520.46868896 0.86143839]
[502.53915405 -3.33063507]
[488.28738403 1.34769249]
[478.60812378 12.66853619]
[463.08316040 9.62129688]
[448.83139038 14.29962444]
[439.15213013 25.62046814]
[423.62716675 22.57322884]
[409.37536621 27.25155640]
[399.69613647 38.57239914]
[384.17114258 35.52516174]
[369.91937256 40.20348740]
[381.91458130 49.20986938]
[382.50704956 64.19816589]
[371.26019287 74.12328339]
[356.46197510 71.67127228]
[349.01739502 58.64904404]
[354.41253662 44.65281677]
[339.84841919 48.24254990]
[325.28430176 51.83228683]
[310.72018433 55.42201996]
[300.21438599 65.98032379]
[284.96356201 61.77045441]
[270.39944458 65.36019135]
[255.83531189 68.94992065]
[241.27117920 72.53965759]
[226.70706177 76.12939453]
[220.18167114 86.31671143]
[208.07563782 89.42559052]
[196.74441528 83.26071167]
[182.12773132 86.63007355]
[167.51104736 89.99942780]
[152.89436340 93.36878967]
[138.27767944 96.73815155]
[123.66099548 100.10751343]
[109.04431152 103.47686768]
[112.21742249 110.28000641]
[111.41408539 119.09264374]
[111.86712646 134.08580017]
[115.25496674 142.57133484]
[112.21206665 149.30845642]
[112.43861389 164.30673218]
[115.69790649 172.84246826]
[112.55360413 179.53286743]
[112.55360413 194.53286743]
[112.55360413 209.53286743]
[112.55360413 224.53286743]
[112.55360413 239.53286743]
[112.55360413 254.53286743]
[112.55360413 269.53286743]
[125.58723450 277.78683472]
[132.06866455 291.78665161]
[129.92967224 307.06500244]
[119.85282898 318.74664307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 195]
[13 194]
[14 192]
[15 191]
[27 107]
[28 106]
[29 105]
[30 104]
[33 75]
[34 74]
[35 73]
[36 72]
[37 71]
[38 70]
[40 67]
[41 66]
[43 64]
[44 63]
[45 62]
[47 60]
[50 57]
[51 56]
[76 101]
[77 100]
[78 99]
[79 98]
[80 97]
[81 96]
[83 95]
[84 94]
[86 92]
[108 189]
[109 188]
[110 187]
[111 186]
[112 185]
[113 184]
[114 183]
[116 180]
[117 179]
[118 178]
[119 177]
[120 176]
[122 174]
[123 173]
[124 172]
[125 171]
[126 165]
[127 164]
[129 162]
[130 161]
[132 159]
[133 158]
[135 156]
[136 155]
[139 153]
[141 151]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
