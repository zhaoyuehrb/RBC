%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUCUGGCAGCCAUGCCACUUGGAAAAGGCCAAUUCAGACGCUCCCUCGUUUCACCAGCCUUGGCCAGCCCUUGCCUCUGGAAAGGGGGCAGCUGUUUGUCUCUGCCAGGCGUCCCAUUGGCCAGGGAGUGAGGCUGGAGGGCCCGGCAGCAGGCAUUUGCGAGUGCUGGCCAGCCGGCACCCCGCCCCGCUUCUCCUCCCCACCUUCCCGUCGCCCACUC\
) } def
/len { sequence length } bind def

/coor [
[109.16961670 148.13301086]
[110.61785126 133.20188904]
[104.87760162 147.06007385]
[99.13734436 160.91827393]
[106.12598419 176.95996094]
[99.47702789 192.77946472]
[83.75804138 198.77072144]
[78.21270752 212.70805359]
[72.66738129 226.64538574]
[67.12204742 240.58271790]
[61.57671356 254.52005005]
[64.47916412 270.66030884]
[51.77960205 281.03591919]
[36.54224014 274.97332764]
[34.44197464 258.70922852]
[47.63937759 248.97471619]
[53.18471146 235.03738403]
[58.73004532 221.10005188]
[64.27537537 207.16271973]
[69.82070923 193.22538757]
[63.11941147 182.22625732]
[63.98682404 169.18077087]
[72.32992554 158.86308289]
[85.27915192 155.17800903]
[91.01940918 141.31982422]
[96.75965881 127.46163177]
[88.09963226 122.85869598]
[82.17031097 115.90020752]
[79.44705963 107.87052917]
[79.87298584 100.06378174]
[65.93564606 94.51845551]
[51.99831390 88.97312164]
[40.73521423 99.21538544]
[26.20128250 103.53416443]
[11.29449749 101.12419891]
[-1.03701782 92.51636505]
[-8.37803268 79.46190643]
[-9.31918240 64.57635498]
[-23.25651741 59.03101730]
[-37.19385147 53.48568726]
[-51.13118362 47.94035339]
[-65.06851959 42.39501953]
[-79.04439545 36.94755936]
[-93.05812836 31.59823608]
[-107.07186890 26.24891281]
[-121.12276459 20.99799156]
[-135.21014404 15.84573078]
[-149.29751587 10.69347000]
[-163.38490295 5.54120874]
[-177.47227478 0.38894764]
[-186.59704590 0.38130146]
[-191.72024536 -4.93561697]
[-205.73397827 -10.28493977]
[-219.74771118 -15.63426304]
[-226.31022644 -14.96811390]
[-231.45587158 -17.35237503]
[-234.07597351 -21.33513641]
[-247.93415833 -27.07538795]
[-261.79235840 -32.81563950]
[-275.65054321 -38.55589294]
[-283.78945923 -33.82843018]
[-293.05325317 -33.37684250]
[-301.36328125 -37.17606354]
[-306.91284180 -44.26126862]
[-308.55957031 -52.96932983]
[-322.16403198 -59.28741074]
[-335.76852417 -65.60549164]
[-349.26232910 -57.94412994]
[-364.67849731 -59.71087646]
[-376.08920288 -70.22637939]
[-379.10675049 -85.44721985]
[-372.57089233 -99.52066803]
[-358.99475098 -107.03520203]
[-343.59866333 -105.10131836]
[-332.30270386 -94.46264648]
[-329.45043945 -79.20996857]
[-315.84597778 -72.89189148]
[-302.24148560 -66.57380676]
[-281.91384888 -70.17318726]
[-269.91030884 -52.41408539]
[-256.05209351 -46.67383194]
[-242.19390869 -40.93358231]
[-228.33572388 -35.19332886]
[-214.39839172 -29.64799690]
[-200.38464355 -24.29867363]
[-186.37091064 -18.94935036]
[-172.32002258 -13.69843006]
[-158.23263550 -8.54616833]
[-144.14526367 -3.39390755]
[-130.05787659 1.75835371]
[-115.97050476 6.91061497]
[-108.61597443 6.25671148]
[-101.72254181 12.23517895]
[-87.70880890 17.58450317]
[-73.69507599 22.93382454]
[-66.33209229 22.38313103]
[-59.52318573 28.45768738]
[-45.58585358 34.00302124]
[-31.64851761 39.54835129]
[-17.71118355 45.09368515]
[-3.77384973 50.63901901]
[7.13637638 40.46884155]
[21.43917465 36.02593994]
[36.31354904 38.24268341]
[48.80135727 46.73237228]
[56.39559937 59.85542297]
[57.54364777 75.03578186]
[71.48097992 80.58111572]
[85.41831207 86.12644958]
[110.79360962 78.68773651]
[127.21976471 104.87087250]
[142.14753723 103.40061951]
[157.07530212 101.93035889]
[172.00308228 100.46010590]
[184.97840881 91.40740967]
[198.40278625 97.85996246]
[203.70841980 83.59070587]
[214.63879395 73.08290100]
[228.98878479 68.38207245]
[243.89550781 70.36972046]
[256.40936279 78.59851074]
[264.07772827 91.39154053]
[279.00549316 89.92128754]
[286.29083252 78.59936523]
[298.58612061 73.61058044]
[311.32168579 76.56742096]
[319.90191650 86.17304230]
[334.84881592 84.91228485]
[349.79574585 83.65152740]
[364.74267578 82.39076996]
[379.68960571 81.13001251]
[394.56423950 70.26786041]
[410.14111328 78.35917664]
[425.06887817 76.88892365]
[439.99664307 75.41866302]
[454.92440796 73.94840240]
[469.85217285 72.47814941]
[482.82751465 63.42545319]
[496.25189209 69.87800598]
[511.17965698 68.40774536]
[525.90051270 57.33805466]
[541.58929443 65.21011353]
[556.49499512 63.53065109]
[571.40069580 61.85118103]
[587.07409668 49.16436386]
[604.43896484 57.68236923]
[619.29168701 55.58551407]
[634.14440918 53.48865891]
[648.99713135 51.39180374]
[663.84985352 49.29494858]
[678.09210205 37.61585617]
[694.09808350 44.82104111]
[708.91998291 42.51609039]
[721.36730957 32.75010300]
[735.13232422 38.43979263]
[749.95416260 36.13484192]
[764.77606201 33.82989120]
[779.59790039 31.52494240]
[794.41973877 29.21999168]
[809.24157715 26.91503906]
[821.66870117 16.21465492]
[837.05767822 21.88136482]
[839.57763672 38.08574295]
[826.63623047 48.15811539]
[811.54650879 41.73688889]
[796.72467041 44.04183960]
[781.90283203 46.34679031]
[767.08099365 48.65174103]
[752.25915527 50.95669174]
[737.43731689 53.26164246]
[726.05010986 62.86276627]
[711.22491455 57.33794022]
[696.40307617 59.64289093]
[689.01965332 69.21724701]
[676.69702148 71.26342010]
[665.94671631 64.14766693]
[651.09399414 66.24452209]
[636.24127197 68.34137726]
[621.38854980 70.43823242]
[606.53582764 72.53508759]
[601.15814209 81.21021271]
[591.69641113 85.58985901]
[581.16845703 84.01147461]
[573.08013916 76.75686646]
[558.17449951 78.43633270]
[543.26879883 80.11579895]
[535.48919678 89.37111664]
[523.09143066 90.89716339]
[512.64990234 83.33551788]
[497.72213745 84.80577850]
[485.81454468 93.75331116]
[471.32244873 87.40592194]
[456.39468384 88.87617493]
[441.46688843 90.34643555]
[426.53912354 91.81668854]
[411.61135864 93.28694916]
[403.70269775 102.43225098]
[391.28479004 103.78427124]
[380.95034790 96.07693481]
[366.00341797 97.33769226]
[351.05651855 98.59844971]
[336.10958862 99.85920715]
[321.16265869 101.11996460]
[310.86639404 114.42292786]
[293.79800415 116.19342041]
[280.47573853 104.84906006]
[265.54797363 106.31931305]
[260.52276611 120.36255646]
[249.85470581 130.87455750]
[235.62219238 135.73217773]
[220.63084412 133.92121887]
[207.86053467 125.74772644]
[199.87304688 112.78773499]
[187.96543884 121.73526764]
[173.47332764 115.38787842]
[158.54556274 116.85813141]
[143.61779785 118.32839203]
[128.69001770 119.79864502]
[143.39752197 122.74641418]
[153.22319031 134.08026123]
[154.05514526 149.05717468]
[145.54521179 161.40954590]
[131.25466919 165.96812439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 26]
[3 25]
[4 24]
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[30 109]
[31 108]
[32 107]
[38 101]
[39 100]
[40 99]
[41 98]
[42 97]
[43 95]
[44 94]
[45 93]
[46 91]
[47 90]
[48 89]
[49 88]
[50 87]
[52 86]
[53 85]
[54 84]
[57 83]
[58 82]
[59 81]
[60 80]
[65 78]
[66 77]
[67 76]
[111 218]
[112 217]
[113 216]
[114 215]
[116 213]
[122 207]
[123 206]
[127 203]
[128 202]
[129 201]
[130 200]
[131 199]
[133 196]
[134 195]
[135 194]
[136 193]
[137 192]
[139 190]
[140 189]
[142 186]
[143 185]
[144 184]
[146 180]
[147 179]
[148 178]
[149 177]
[150 176]
[152 173]
[153 172]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
