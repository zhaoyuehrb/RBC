%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUGCCACCGCCAUCUUUACCGGCUGUGGCUCAGCAUGGUCAGUGCCGUUUAACCUUUAUUGUGGUGGAGUCCACCCCGCUGUGGGCCUCAGAUAACCCUGUACAAAGGGGAAUGGAGAUUGCCUGUAUCCACCUAGAUUCAUAAGCUGCCCUGAGGCGAUCUUGGCAUCAAGAAAGACAGCAUUGAGGCACAUCUCACCAUCAGCUUCAGAGG\
) } def
/len { sequence length } bind def

/coor [
[107.45272064 133.27084351]
[99.15461731 135.80792236]
[90.07462311 136.20462036]
[82.23251343 148.99137878]
[81.61334991 164.80046082]
[68.36377716 171.60472107]
[60.52166748 184.39149475]
[52.67956161 197.17825317]
[44.83745575 209.96502686]
[36.99534607 222.75178528]
[36.37619019 238.56086731]
[23.12661171 245.36512756]
[15.28450394 258.15188599]
[7.44239664 270.93865967]
[14.23769093 284.78884888]
[12.44358540 300.11154175]
[2.63257194 312.01730347]
[-12.06468964 316.70709229]
[-26.95835876 312.68438721]
[-37.29591751 301.23281860]
[-39.77868652 286.00653076]
[-33.61442947 271.86419678]
[-20.77013397 263.31860352]
[-5.34436798 263.09655762]
[2.49773884 250.30979919]
[10.33984566 237.52302551]
[10.39808464 222.62854004]
[24.20858192 214.90968323]
[32.05068970 202.12290955]
[39.89279556 189.33615112]
[47.73490524 176.54939270]
[55.57701111 163.76261902]
[55.63525009 148.86813354]
[69.44574738 141.14927673]
[77.28785706 128.36250305]
[67.76670837 116.77165985]
[53.70042801 121.98123932]
[39.63414764 127.19081879]
[25.56786537 132.40039062]
[17.59014893 146.31929016]
[1.71260977 148.61784363]
[-9.88486195 137.53279114]
[-8.30567932 121.56764984]
[5.23874426 112.96950531]
[20.35828590 118.33411407]
[34.42456818 113.12453461]
[48.49084854 107.91495514]
[62.55713272 102.70537567]
[70.00420380 83.79061127]
[85.09616089 73.21735382]
[81.23136139 58.72378922]
[77.36655426 44.23022842]
[73.50175476 29.73666763]
[69.63695526 15.24310780]
[58.39332199 13.04770470]
[48.82297516 6.84490108]
[42.28635406 -2.43796659]
[39.69559860 -13.43909836]
[41.38737869 -24.56195641]
[47.07970810 -34.20695496]
[55.91806412 -41.00148773]
[52.68619537 -55.64918518]
[49.45432281 -70.29688263]
[36.41693115 -78.82120514]
[33.34801865 -93.72209167]
[41.55500412 -106.09872437]
[38.32313156 -120.74642181]
[35.09126282 -135.39411926]
[31.85939407 -150.04180908]
[28.62752533 -164.68951416]
[25.39565468 -179.33720398]
[18.02138138 -192.39936829]
[7.14948845 -202.73387146]
[-3.72240329 -213.06837463]
[-14.59429455 -223.40287781]
[-25.46618652 -233.73738098]
[-36.33807755 -244.07188416]
[-52.12895966 -243.42102051]
[-63.69827652 -254.18794250]
[-64.18215179 -269.98480225]
[-53.29352188 -281.43963623]
[-37.49241257 -281.75650024]
[-26.15333748 -270.74734497]
[-26.00357437 -254.94377136]
[-15.13168335 -244.60926819]
[-4.25979137 -234.27476501]
[6.61210060 -223.94026184]
[17.48399162 -213.60575867]
[28.35588455 -203.27125549]
[41.82295227 -209.87716675]
[40.30542755 -224.80021667]
[38.78790283 -239.72325134]
[29.30487633 -248.46162415]
[28.34591866 -260.91925049]
[35.88128281 -270.37844849]
[34.57995605 -285.32189941]
[22.76062393 -295.46789551]
[21.65376854 -310.64120483]
[31.39925766 -321.84658813]
[30.09793091 -336.79003906]
[28.79660416 -351.73348999]
[27.49527740 -366.67694092]
[15.23291779 -376.64739990]
[13.69542885 -392.37670898]
[23.79497719 -404.53298950]
[39.53967667 -405.90408325]
[51.58848190 -395.67657471]
[52.79304504 -379.91827393]
[42.43872452 -367.97827148]
[43.74005127 -353.03482056]
[45.04137802 -338.09136963]
[46.34270477 -323.14791870]
[57.87841797 -313.79577637]
[59.41102219 -298.65951538]
[49.52339935 -286.62322998]
[50.82472610 -271.67977905]
[61.64436340 -257.86059570]
[53.71094131 -241.24078369]
[55.22846603 -226.31773376]
[56.74599075 -211.39469910]
[71.22740936 -215.30476379]
[85.90343475 -212.20405579]
[97.56564331 -202.77046204]
[103.66449738 -189.06629944]
[102.86669159 -174.08752441]
[95.34662628 -161.10874939]
[82.74831390 -152.96734619]
[67.82595825 -151.44313049]
[53.84181595 -156.86935425]
[43.85305405 -168.05973816]
[40.04335022 -182.56907654]
[43.27522278 -167.92137146]
[46.50709152 -153.27368164]
[49.73896027 -138.62599182]
[52.97082901 -123.97828674]
[56.20269775 -109.33058929]
[68.85573578 -101.55651855]
[72.34197235 -86.74771118]
[64.10202026 -73.52874756]
[67.33389282 -58.88105392]
[70.56575775 -44.23335648]
[88.10410309 -37.76291275]
[98.27573395 -21.89978790]
[96.81441498 -2.96170568]
[84.13051605 11.37830544]
[87.99531555 25.87186623]
[91.86011505 40.36542511]
[95.72492218 54.85898590]
[99.58972168 69.35254669]
[118.23941040 75.36753082]
[129.43379211 91.45094299]
[128.59722900 111.02875519]
[140.84632874 119.68667603]
[153.15777588 128.25569153]
[165.53092957 136.73538208]
[177.90408325 145.21505737]
[190.27725220 153.69474792]
[202.65040588 162.17442322]
[215.02355957 170.65409851]
[227.39671326 179.13378906]
[247.14753723 167.56529236]
[272.04418945 172.05661011]
[289.60763550 193.49180603]
[304.32205200 196.40484619]
[319.03646851 199.31788635]
[333.75088501 202.23092651]
[348.46530151 205.14396667]
[363.80654907 199.34925842]
[376.32238770 209.94573975]
[373.13763428 226.03266907]
[357.52847290 231.06118774]
[345.55227661 219.85838318]
[330.83786011 216.94534302]
[316.12344360 214.03230286]
[301.40899658 211.11926270]
[286.69458008 208.20622253]
[282.81991577 214.62782288]
[295.66311646 222.37716675]
[308.50631714 230.12651062]
[321.34951782 237.87585449]
[334.19259644 245.62539673]
[326.44284058 258.46835327]
[313.60015869 250.71903992]
[300.75695801 242.96969604]
[287.91375732 235.22035217]
[275.07058716 227.47102356]
[271.19589233 233.89260864]
[280.63290405 245.55207825]
[290.06988525 257.21154785]
[299.50686646 268.87100220]
[315.24847412 270.27734375]
[325.32080078 282.45617676]
[323.74810791 298.18200684]
[311.46347046 308.12500000]
[295.75512695 306.38616943]
[285.94256592 293.99707031]
[287.84741211 278.30801392]
[278.41043091 266.64852905]
[268.97341919 254.98907471]
[259.53643799 243.32960510]
[246.48339844 243.25181580]
[234.56230164 239.24246216]
[224.87939453 231.98377991]
[218.23532104 222.44322205]
[215.06111145 211.75355530]
[215.39743042 201.08258057]
[218.91703796 191.50694275]
[206.54388428 183.02725220]
[194.17073059 174.54757690]
[181.79756165 166.06790161]
[169.42440796 157.58821106]
[157.05125427 149.10853577]
[144.67810059 140.62886047]
[137.38694763 139.44104004]
[132.18840027 131.93577576]
[119.93930817 123.27786255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 35]
[4 34]
[6 32]
[7 31]
[8 30]
[9 29]
[10 28]
[12 26]
[13 25]
[14 24]
[36 48]
[37 47]
[38 46]
[39 45]
[50 149]
[51 148]
[52 147]
[53 146]
[54 145]
[61 141]
[62 140]
[63 139]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[72 89]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[90 120]
[91 119]
[92 118]
[95 116]
[96 115]
[99 112]
[100 111]
[101 110]
[102 109]
[152 216]
[153 215]
[154 213]
[155 212]
[156 211]
[157 210]
[158 209]
[159 208]
[160 207]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
[187 200]
[188 199]
[189 198]
[190 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
