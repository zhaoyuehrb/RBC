%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCCAGGGCGCAGGCGCGGGUGUCGGUCCCACCGCGCGUCGUCCUCGCCCCGGCCCCGGCCAAUCCCUUCGAAUUUGGCCGAGGCCGGGAAAUACUAGCUAAUCACGGCGCGCGCUGUUGACGCCGGCCAAUGGGAGCUCCGGAAGGCUGCGUGGAGACGCCAGCGGCGGGCGGUGGACAGUC\
) } def
/len { sequence length } bind def

/coor [
[100.61951447 115.25481415]
[93.78708649 128.60838318]
[86.95466614 141.96195984]
[80.12224579 155.31553650]
[73.40283966 168.72634888]
[66.79692841 182.19340515]
[67.66599274 197.99072266]
[55.11439514 206.00987244]
[55.98346329 221.80718994]
[43.43186569 229.82632446]
[36.82595062 243.29339600]
[38.47230148 259.60971069]
[25.00882912 268.97274780]
[10.28560066 261.75067139]
[9.44861126 245.37289429]
[23.35888481 236.68748474]
[29.96479607 223.22041321]
[28.62322998 208.38635254]
[41.64732742 199.40396118]
[40.30575943 184.56990051]
[53.32986069 175.58749390]
[59.93577194 162.12042236]
[60.05901718 154.71430969]
[66.76866913 148.48312378]
[73.60108948 135.12954712]
[80.43350983 121.77596283]
[87.26593781 108.42238617]
[76.75065613 119.11952972]
[61.88758087 121.14167786]
[48.89667130 113.64259338]
[43.21441269 99.76052094]
[47.21873093 85.30488586]
[59.23389053 76.32513428]
[74.23174286 76.57914734]
[85.93659973 85.96169281]
[77.57673645 73.50727081]
[69.21686554 61.05284882]
[60.85699844 48.59842682]
[52.49713135 36.14400482]
[44.13726425 23.68958473]
[35.77739716 11.23516178]
[27.41753197 -1.21925998]
[19.05766487 -13.67368221]
[10.69779682 -26.12810326]
[-5.77606678 -24.83919334]
[-20.57009697 -31.98722267]
[-29.69342804 -45.53890991]
[-30.73799324 -61.74803543]
[-23.51345825 -76.19081879]
[-32.08248138 -88.50226593]
[-41.46309662 -100.20713806]
[-51.61250687 -111.25202179]
[-61.76191711 -122.29691315]
[-71.91132355 -133.34179688]
[-82.06073761 -144.38667297]
[-92.21014404 -155.43156433]
[-102.35955048 -166.47645569]
[-117.39430237 -171.40260315]
[-120.30874634 -186.00929260]
[-130.45816040 -197.05416870]
[-140.60755920 -208.09906006]
[-150.75697327 -219.14395142]
[-160.90638733 -230.18882751]
[-171.05578613 -241.23371887]
[-181.20520020 -252.27861023]
[-195.98036194 -248.28445435]
[-210.91676331 -251.62550354]
[-222.58212280 -261.53396606]
[-228.29583740 -275.73300171]
[-226.74491882 -290.95971680]
[-218.28578186 -303.71517944]
[-204.86225891 -311.06823730]
[-189.55897522 -311.32922363]
[-175.89251709 -304.43817139]
[-167.00334167 -291.97860718]
[-164.93411255 -276.81359863]
[-170.16030884 -262.42800903]
[-160.01091003 -251.38313293]
[-149.86149597 -240.33824158]
[-139.71208191 -229.29335022]
[-129.56268311 -218.24847412]
[-119.41326904 -207.20358276]
[-109.26386261 -196.15870667]
[-94.95507050 -192.02255249]
[-91.31466675 -176.62585449]
[-81.16526031 -165.58097839]
[-71.01584625 -154.53608704]
[-60.86643982 -143.49121094]
[-50.71702957 -132.44631958]
[-40.56762314 -121.40143585]
[-30.41821289 -110.35654449]
[-30.60504913 -125.35538483]
[-22.04698372 -137.67445374]
[-7.92588615 -142.73356628]
[6.50805902 -138.65174866]
[15.88834953 -126.94661713]
[16.72741890 -111.97010040]
[8.71330166 -99.29043579]
[-5.17437267 -93.62188721]
[-19.77103043 -97.07128906]
[-11.20200634 -84.75984192]
[2.31276202 -86.80603027]
[15.45238781 -82.80596924]
[25.63214111 -73.48684692]
[30.82387161 -60.62795258]
[29.95993805 -46.72113800]
[23.15221977 -34.48797226]
[31.51208687 -22.03354836]
[39.87195206 -9.57912731]
[48.23181915 2.87529492]
[56.59168625 15.32971668]
[64.95155334 27.78413963]
[73.31142426 40.23855972]
[81.67128754 52.69298172]
[90.03115082 65.14740753]
[98.39102173 77.60182953]
[126.79352570 93.01892090]
[140.85980225 98.22849274]
[154.92608643 103.43807220]
[168.99237061 108.64765167]
[183.05865479 113.85723114]
[198.68699646 111.39443207]
[207.93481445 123.07035065]
[222.00109863 128.27993774]
[236.11087036 133.37052917]
[250.26313782 138.34179688]
[264.41540527 143.31306458]
[279.99990845 140.58665466]
[289.44363403 152.10472107]
[303.59588623 157.07598877]
[317.74813843 162.04725647]
[331.86273193 155.45812988]
[346.14431763 160.70129395]
[352.33905029 174.19799805]
[366.49130249 179.16925049]
[380.64358521 184.14051819]
[393.39117432 175.49150085]
[408.60937500 176.00114441]
[420.46911621 185.26451111]
[424.55123901 199.56396484]
[438.70352173 204.53521729]
[452.85577393 209.50648499]
[467.00802612 214.47775269]
[481.16030884 219.44902039]
[492.76156616 209.38391113]
[507.84414673 206.48365784]
[522.35089111 211.52842712]
[532.37957764 223.16117859]
[535.23254395 238.25276184]
[530.14233398 252.74363708]
[518.47821045 262.73580933]
[503.37774658 265.54144287]
[488.90289307 260.40585327]
[478.94732666 248.71046448]
[476.18902588 233.60127258]
[462.03677368 228.63002014]
[447.88452148 223.65875244]
[433.73223877 218.68748474]
[419.57998657 213.71621704]
[407.45208740 222.32157898]
[392.40454102 222.13322449]
[380.21069336 213.01382446]
[375.67230225 198.29278564]
[361.52005005 193.32151794]
[347.36779785 188.35025024]
[334.09338379 195.00802612]
[319.67016602 190.16806030]
[312.77688599 176.19950867]
[298.62463379 171.22825623]
[284.47235107 166.25698853]
[269.90011597 169.33895874]
[259.44415283 157.46533203]
[245.29187012 152.49406433]
[231.13961792 147.52279663]
[223.77066040 148.27401733]
[216.79151917 142.34620667]
[202.72523499 137.13664246]
[188.10301208 139.97206116]
[177.84907532 127.92351532]
[163.78279114 122.71393585]
[149.71650696 117.50435638]
[135.65022278 112.29477692]
[121.58394623 107.08519745]
[128.38784790 120.45332336]
[119.39969635 132.46220398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[5 22]
[6 21]
[8 19]
[10 17]
[11 16]
[35 116]
[36 115]
[37 114]
[38 113]
[39 112]
[40 111]
[41 110]
[42 109]
[43 108]
[44 107]
[49 101]
[50 100]
[51 91]
[52 90]
[53 89]
[54 88]
[55 87]
[56 86]
[57 85]
[59 83]
[60 82]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[117 183]
[118 182]
[119 181]
[120 180]
[121 179]
[123 177]
[124 176]
[125 174]
[126 173]
[127 172]
[129 170]
[130 169]
[131 168]
[134 165]
[135 164]
[136 163]
[140 159]
[141 158]
[142 157]
[143 156]
[144 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
