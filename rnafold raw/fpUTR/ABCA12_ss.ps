%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGAGUUGAUUGAGAAGUGCCUCUUGGUUAAGGAUUAACCACAGGGAAAAAUCCAGCAGAAACAGAAGAACUGUGGGUUUCUUACCCCAGCCCUCAAGGAAGCUAUGCCGUGAAAGGGGUACUGAUACACUGACAUACAGCAAGUUGGACGGGGCAUCAGUUCUUCAUUUGUGGAGUGGAGAAAAGAAGAGGAAAUCUCUCAUUUGGGGCAUUUGAAGG\
) } def
/len { sequence length } bind def

/coor [
[137.81478882 333.47250366]
[127.45239258 344.45083618]
[114.51174927 352.22528076]
[99.95314789 356.21902466]
[84.85693359 356.13562012]
[70.34335327 351.98129272]
[57.48939514 344.06433105]
[47.24892044 332.97219849]
[40.38183212 319.52801514]
[37.39772415 304.72946167]
[38.51802444 289.67465210]
[43.65961075 275.48074341]
[52.44093704 263.20104980]
[64.21037292 253.74679565]
[78.09454346 247.81953430]
[93.06315613 245.85913086]
[95.18828583 231.01043701]
[97.31341553 216.16174316]
[99.43854523 201.31303406]
[101.56367493 186.46434021]
[103.68879700 171.61564636]
[105.81392670 156.76695251]
[107.93905640 141.91824341]
[110.06418610 127.06954956]
[101.23659515 133.01048279]
[89.68492889 135.72814941]
[77.34017181 144.24911499]
[64.99541473 152.77009583]
[52.65065384 161.29106140]
[40.30589676 169.81204224]
[27.96113777 178.33300781]
[15.61637878 186.85397339]
[6.01574135 200.82766724]
[-10.06957531 195.47053528]
[-9.37465477 178.53083801]
[7.09540796 174.50921631]
[19.44016647 165.98825073]
[31.78492355 157.46726990]
[44.12968063 148.94630432]
[56.47444153 140.42533875]
[68.81919861 131.90435791]
[81.16395569 123.38339233]
[78.45464325 116.38984680]
[63.63211441 114.08927917]
[73.03601837 102.40276337]
[70.32670593 95.40922546]
[55.46327972 97.42876434]
[40.59984970 99.44829559]
[27.96926498 109.90776062]
[12.69209671 103.94620514]
[10.48418522 87.69636536]
[23.61684227 77.87468719]
[38.58031464 84.58486938]
[53.44374084 82.56533051]
[68.30716705 80.54579926]
[93.08013153 66.28458405]
[118.27055359 74.15721130]
[128.60707092 96.03973389]
[130.94305420 81.22274780]
[125.44929504 66.38599396]
[135.07424927 55.01895523]
[137.41023254 40.20196533]
[139.74621582 25.38497734]
[132.80416870 14.52005005]
[135.05004883 2.23095012]
[144.74438477 -4.99642611]
[147.29075623 -19.77871323]
[149.83712769 -34.56099701]
[152.38349915 -49.34328461]
[154.92987061 -64.12557220]
[157.47624207 -78.90785980]
[160.02261353 -93.69014740]
[162.56898499 -108.47242737]
[165.11535645 -123.25471497]
[154.03269958 -137.07803345]
[155.45564270 -154.29736328]
[144.58850098 -164.63684082]
[133.72134399 -174.97633362]
[122.85419464 -185.31582642]
[106.84488678 -186.35578918]
[97.79493713 -199.60260010]
[102.64669037 -214.89443970]
[117.67830658 -220.50070190]
[131.35879517 -212.12075806]
[133.19367981 -196.18296814]
[144.06083679 -185.84349060]
[154.92797852 -175.50399780]
[165.79513550 -165.16450500]
[169.46298218 -166.68399048]
[173.33711243 -167.55169678]
[177.30267334 -167.74189758]
[182.72129822 -181.72898865]
[188.13992310 -195.71606445]
[193.55854797 -209.70315552]
[198.97717285 -223.69023132]
[189.96670532 -232.93041992]
[185.13534546 -244.84780884]
[185.16738892 -257.66055298]
[190.02278137 -269.46725464]
[198.94828796 -278.52914429]
[210.59416199 -283.52618408]
[223.21818542 -283.74920654]
[229.03222656 -297.57659912]
[234.84626770 -311.40402222]
[240.66032410 -325.23141479]
[241.10067749 -334.34768677]
[246.65653992 -339.21310425]
[252.66654968 -352.95645142]
[258.67657471 -366.69979858]
[257.11672974 -382.44393921]
[269.30523682 -391.00488281]
[275.31524658 -404.74822998]
[281.32525635 -418.49157715]
[272.33587646 -430.86648560]
[270.75799561 -445.97961426]
[276.91577148 -459.76177979]
[289.06402588 -468.55242920]
[303.88146973 -470.07186890]
[309.89151001 -483.81521606]
[315.80368042 -497.60092163]
[321.61770630 -511.42831421]
[327.43176270 -525.25573730]
[324.84222412 -541.44915771]
[337.74023438 -551.57696533]
[352.85742188 -545.22064209]
[354.64248657 -528.91894531]
[341.25915527 -519.44165039]
[335.44509888 -505.61428833]
[329.63107300 -491.78689575]
[329.93582153 -484.40808105]
[323.63485718 -477.80520630]
[317.62484741 -464.06185913]
[326.56930542 -452.15127563]
[328.36303711 -437.26373291]
[322.42483521 -423.38552856]
[310.25747681 -414.28323364]
[295.06863403 -412.48156738]
[289.05862427 -398.73822021]
[283.04858398 -384.99487305]
[285.03829956 -370.23373413]
[272.41992188 -360.68978882]
[266.40991211 -346.94644165]
[260.39990234 -333.20309448]
[254.48771667 -319.41735840]
[248.67367554 -305.58996582]
[242.85961914 -291.76257324]
[237.04557800 -277.93518066]
[247.94664001 -264.60052490]
[250.60174561 -247.49279785]
[244.18951416 -231.31562805]
[230.39416504 -220.56315613]
[212.96426392 -218.27160645]
[207.54563904 -204.28453064]
[202.12701416 -190.29743958]
[196.70838928 -176.31036377]
[191.28976440 -162.32327271]
[199.74536133 -147.14421082]
[195.24177551 -130.05636597]
[179.89764404 -120.70834351]
[177.35127258 -105.92605591]
[174.80490112 -91.14377594]
[172.25852966 -76.36148834]
[169.71215820 -61.57920074]
[167.16578674 -46.79691315]
[164.61940002 -32.01462555]
[162.07302856 -17.23233986]
[159.52665710 -2.45005417]
[166.47039795 13.67015457]
[154.56320190 27.72096252]
[152.22721863 42.53795242]
[149.89123535 57.35494232]
[155.55207825 71.13188171]
[145.76005554 83.55873108]
[143.42405701 98.37571716]
[148.64331055 112.43841553]
[160.08050537 122.14360809]
[171.51770020 131.84880066]
[182.95487976 141.55398560]
[194.39207458 151.25917053]
[205.89794922 160.88282776]
[217.47195435 170.42445374]
[229.04594421 179.96607971]
[240.61993408 189.50772095]
[254.23019409 182.67539978]
[269.44305420 181.97605896]
[283.62277222 187.53083801]
[294.31262207 198.37734985]
[299.66052246 212.63638306]
[298.73995972 227.83744812]
[291.71035767 241.34687805]
[279.78970337 250.82409668]
[265.04327393 254.62709045]
[250.02600098 252.09700012]
[237.33970642 243.67214966]
[229.18238831 230.81222534]
[226.96731567 215.74525452]
[231.07830811 201.08171082]
[219.50430298 191.54008484]
[207.93031311 181.99844360]
[196.35632324 172.45681763]
[189.20104980 170.62873840]
[184.68688965 162.69636536]
[173.24969482 152.99116516]
[161.81250000 143.28598022]
[150.37532043 133.58079529]
[138.93812561 123.87560272]
[124.91287994 129.19467163]
[122.78775787 144.04338074]
[120.66262817 158.89207458]
[118.53749847 173.74076843]
[116.41236877 188.58947754]
[114.28723907 203.43817139]
[112.16210938 218.28686523]
[110.03698730 233.13555908]
[107.91185760 247.98426819]
[121.72969055 254.06454468]
[133.39395142 263.64825439]
[142.03907776 276.02423096]
[147.02352905 290.27407837]
[147.97743225 305.34033203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 215]
[17 214]
[18 213]
[19 212]
[20 211]
[21 210]
[22 209]
[23 208]
[24 207]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[46 55]
[47 54]
[48 53]
[58 174]
[59 173]
[61 171]
[62 170]
[63 169]
[66 167]
[67 166]
[68 165]
[69 164]
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
[76 88]
[77 87]
[78 86]
[79 85]
[91 156]
[92 155]
[93 154]
[94 153]
[95 152]
[102 147]
[103 146]
[104 145]
[105 144]
[107 143]
[108 142]
[109 141]
[111 139]
[112 138]
[113 137]
[118 132]
[119 131]
[120 129]
[121 128]
[122 127]
[175 206]
[176 205]
[177 204]
[178 203]
[179 202]
[180 200]
[181 199]
[182 198]
[183 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
