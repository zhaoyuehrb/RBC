%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAGCCCACUUCCGGGGAGGGAGGCAGAGGAACCCCUCCCCGCCGCUCACCCCUAAGCCCAGCCCUCGGCUCCCACCCUUGUGUACCUGGGCCGAACCAUUCACCGGAGCGCGCAGCGGGUGGAGUGUGGCUCGGAGGACCGCGGCGGGUCAAGCACCUUUCUCCCCCAUAUCUGAAAGCAUGCCCUUUGUCCACGUCGUUUACGCUCAUUAAAACUUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[196.02763367 136.09849548]
[209.33148193 129.16975403]
[224.10635376 126.57627869]
[209.88002014 121.82113647]
[195.65367126 117.06600189]
[181.42733765 112.31086731]
[167.16799927 107.65560913]
[152.87637329 103.10045624]
[138.58474731 98.54530334]
[124.29312897 93.99015808]
[126.27476501 108.57334137]
[119.42948914 123.18628693]
[104.57114410 132.54394531]
[85.58691406 132.41625977]
[73.47644043 141.26704407]
[61.36596680 150.11782837]
[49.25548935 158.96861267]
[42.67912292 173.35826111]
[27.83815765 174.62120056]
[15.72768116 183.47198486]
[3.61720467 192.32275391]
[-2.95916128 206.71240234]
[-17.80012703 207.97534180]
[-29.91060448 216.82612610]
[-42.02108002 225.67691040]
[-49.33913422 244.46669006]
[-68.64250183 245.68211365]
[-80.49997711 254.86907959]
[-92.35746002 264.05603027]
[-104.21494293 273.24298096]
[-109.91548920 288.61944580]
[-126.12536621 291.10375977]
[-136.16925049 278.14025879]
[-129.71484375 263.06466675]
[-113.40189362 261.38549805]
[-101.54441833 252.19854736]
[-89.68693542 243.01159668]
[-77.82945251 233.82463074]
[-77.46210480 223.62451172]
[-71.41806030 215.12893677]
[-61.49327087 211.27822876]
[-50.87186432 213.56642151]
[-38.76138687 204.71565247]
[-26.65091133 195.86486816]
[-20.94076729 182.10827637]
[-5.23357868 180.21228027]
[6.87689734 171.36149597]
[18.98737335 162.51071167]
[24.69751740 148.75413513]
[40.40470505 146.85813904]
[52.51518250 138.00735474]
[64.62565613 129.15657043]
[76.73613739 120.30579376]
[75.16993713 112.97114563]
[72.03754425 98.30184937]
[70.47135162 90.96720886]
[55.80205917 87.83481598]
[41.13276672 84.70242310]
[26.46347427 81.57003021]
[15.01278687 92.04196167]
[-0.41000342 93.74993134]
[-13.87451935 86.03718567]
[-20.20338058 71.86943817]
[-16.96300888 56.69446945]
[-5.39939451 46.34737015]
[10.04101658 44.80680847]
[23.42107201 52.66516495]
[29.59586716 66.90073395]
[44.26515961 70.03312683]
[58.93445206 73.16551971]
[73.60374451 76.29791260]
[89.90100098 71.48475647]
[103.94673157 75.28770447]
[98.20647430 61.42951202]
[92.46622467 47.57131958]
[86.72597504 33.71312714]
[80.98572540 19.85493279]
[75.24546814 5.99674034]
[69.40818024 -7.82085848]
[63.47414017 -21.59718513]
[57.54010010 -35.37351227]
[51.60605621 -49.14983749]
[45.67201614 -62.92616272]
[39.73797607 -76.70249176]
[27.17248344 -86.31597137]
[29.24364471 -101.06587219]
[23.21314430 -114.80024719]
[17.08648109 -128.49198914]
[10.95981693 -142.18374634]
[4.83315277 -155.87548828]
[-10.39559937 -155.80480957]
[-24.33388901 -161.94027710]
[-34.56682587 -173.21888733]
[-39.32148743 -187.68653870]
[-37.77410126 -202.83663940]
[-30.19276428 -216.04434204]
[-17.89098549 -225.02131653]
[-3.00012493 -228.21226501]
[11.89988804 -225.06431580]
[24.22753525 -216.12289429]
[31.84697533 -202.93714905]
[33.43809891 -187.79158020]
[28.72522926 -173.31025696]
[18.52490234 -162.00215149]
[24.65156555 -148.31040955]
[30.77822876 -134.61865234]
[36.90489197 -120.92691040]
[42.50070572 -116.10989380]
[43.01996994 -106.99990845]
[55.16101837 -98.37180328]
[53.51430130 -82.63652802]
[59.44834137 -68.86020660]
[65.38238525 -55.08387756]
[71.31642151 -41.30755234]
[77.25046539 -27.53122520]
[83.18450928 -13.75489998]
[88.71221161 -8.85988235]
[89.10366058 0.25648898]
[94.84391785 14.11468220]
[100.58416748 27.97287560]
[106.32441711 41.83106613]
[112.06466675 55.68926239]
[117.80492401 69.54745483]
[128.84828186 79.69853210]
[143.13990784 84.25367737]
[157.43153381 88.80883026]
[171.72315979 93.36398315]
[180.84016418 92.98780823]
[186.18247986 98.08452606]
[200.40881348 102.83966827]
[214.63514709 107.59480286]
[228.86148071 112.34993744]
[236.37065125 110.07087708]
[243.21307373 111.82727051]
[247.58055115 116.34709167]
[262.50833130 117.81735229]
[277.43609619 119.28760529]
[286.93188477 105.74620056]
[301.87643433 98.88316345]
[318.14877319 100.48672485]
[331.31411743 110.02464294]
[337.83245850 124.81529999]
[352.77938843 126.07605743]
[367.72631836 127.33681488]
[382.67321777 128.59757996]
[397.62014771 129.85833740]
[412.56707764 131.11909485]
[427.52246094 132.27500916]
[442.48559570 133.32601929]
[456.79400635 126.57467651]
[468.94784546 135.18472290]
[483.91098022 136.23573303]
[498.87411499 137.28674316]
[513.85607910 138.02276611]
[528.85015869 138.44345093]
[543.84423828 138.86415100]
[559.84155273 129.73573303]
[574.41455078 139.52021790]
[589.41302490 139.73059082]
[604.41156006 139.94096375]
[619.41009521 140.15132141]
[634.40863037 140.36169434]
[641.17712402 126.68140411]
[653.21624756 117.29939270]
[668.13562012 114.07847595]
[682.97302246 117.65815735]
[694.78247070 127.32769775]
[701.21917725 141.16719055]
[701.00512695 156.42881775]
[694.18280029 170.08233643]
[682.10681152 179.41687012]
[667.17486572 182.57901001]
[652.35168457 178.94091797]
[640.58038330 169.22496033]
[634.19824219 155.36021423]
[619.19970703 155.14985657]
[604.20123291 154.93948364]
[589.20269775 154.72911072]
[574.20416260 154.51875305]
[565.32128906 162.72105408]
[552.83007812 162.67420959]
[543.42358398 153.85824585]
[528.42944336 153.43754578]
[513.43536377 153.01686096]
[510.64047241 155.15188599]
[506.67556763 156.04431152]
[502.13366699 155.16029358]
[497.82312012 152.24987793]
[482.85998535 151.19886780]
[467.89685059 150.14785767]
[454.65872192 156.97438049]
[441.43460083 148.28915405]
[426.47146606 147.23814392]
[419.58538818 149.90248108]
[411.30630493 146.06600952]
[396.35940552 144.80525208]
[381.41247559 143.54449463]
[366.46554565 142.28373718]
[351.51861572 141.02297974]
[336.57171631 139.76222229]
[329.53262329 151.45968628]
[318.08645630 159.02110291]
[304.43408203 160.92427063]
[291.23022461 156.74156189]
[281.06713867 147.23443604]
[275.96582031 134.21537781]
[261.03805542 132.74511719]
[246.11029053 131.27487183]
[258.53668213 139.67633057]
[267.85040283 151.43450928]
[273.18395996 165.45425415]
[274.04058838 180.42976379]
[270.34054565 194.96626282]
[262.42840576 207.70980835]
[251.04109192 217.47348022]
[237.23924255 223.34791565]
[222.30833435 224.78596497]
[207.63902283 221.65368652]
[194.59757996 214.24282837]
[184.39869690 203.24360657]
[177.99226379 189.68051147]
[175.97499084 174.81677246]
[178.53474426 160.03680420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 132]
[4 131]
[5 130]
[6 129]
[7 127]
[8 126]
[9 125]
[10 124]
[14 53]
[15 52]
[16 51]
[17 50]
[19 48]
[20 47]
[21 46]
[23 44]
[24 43]
[25 42]
[27 38]
[28 37]
[29 36]
[30 35]
[56 71]
[57 70]
[58 69]
[59 68]
[73 123]
[74 122]
[75 121]
[76 120]
[77 119]
[78 118]
[79 116]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
[86 109]
[87 107]
[88 106]
[89 105]
[90 104]
[135 208]
[136 207]
[137 206]
[142 200]
[143 199]
[144 198]
[145 197]
[146 196]
[147 195]
[148 193]
[149 192]
[151 190]
[152 189]
[153 188]
[154 184]
[155 183]
[156 182]
[158 179]
[159 178]
[160 177]
[161 176]
[162 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
