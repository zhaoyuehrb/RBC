%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGACUGCGCGCAUGCGCUGCAGGGCCCUGCGCGGCUUCCGUCCUGGCUGAGAUGGCGGCGCCCGGGAUCCUGUGUAGCGGCUGCAGAGGGUGCCGCCGCCCUAGGCGAAGUAGGGCCGUCCUGAGCGAAAGAACCGCCCCCAGCAGGAGCACCACCACGGCUUAGCAAAGAAUCCCAGACCCCGCCCGGGAAGGCAGCCGCACC\
) } def
/len { sequence length } bind def

/coor [
[40.76394272 405.55215454]
[47.25855637 419.07324219]
[47.82571030 434.06250000]
[42.37140274 448.03570557]
[31.79960442 458.67700195]
[17.86243248 464.22274780]
[2.87197852 463.75436401]
[1.52040839 448.81536865]
[-4.45560789 462.57354736]
[-10.43162441 476.33169556]
[-16.40764046 490.08987427]
[-14.00845337 506.31256104]
[-27.02449417 516.28826904]
[-42.06597900 509.75485229]
[-43.65951538 493.43328857]
[-30.16580963 484.11386108]
[-24.18979454 470.35568237]
[-18.21377754 456.59750366]
[-12.23776150 442.83935547]
[-18.39767838 438.56085205]
[-36.87743378 425.72543335]
[-47.68333054 436.12890625]
[-58.48923111 446.53240967]
[-69.29512787 456.93588257]
[-73.31689453 472.83422852]
[-89.16769409 477.03948975]
[-100.54158020 465.22564697]
[-95.73807526 449.54577637]
[-79.69861603 446.12997437]
[-68.89271545 435.72650146]
[-58.08681870 425.32299805]
[-47.28092194 414.91952515]
[-38.53797531 402.73095703]
[-32.14716339 389.16049194]
[-25.75635529 375.59002686]
[-19.36554718 362.01956177]
[-12.97473907 348.44909668]
[-6.58393002 334.87863159]
[-8.16134453 320.06777954]
[4.71819162 310.87930298]
[11.10900021 297.30883789]
[9.53158665 282.49801636]
[22.41112137 273.30953979]
[28.80193138 259.73907471]
[35.19274139 246.16859436]
[41.58354950 232.59812927]
[47.97435760 219.02766418]
[54.36516571 205.45719910]
[60.02645493 191.56655884]
[64.94225311 177.39492798]
[69.85804749 163.22331238]
[66.71901703 148.66323853]
[78.55161285 138.16084290]
[83.46741486 123.98921967]
[88.38320923 109.81759644]
[85.33136749 95.13133240]
[75.17655182 84.09141541]
[65.02174377 73.05149841]
[54.86692429 62.01158524]
[44.71210861 50.97167206]
[34.55729294 39.93175507]
[30.36308479 38.78093719]
[27.08445549 36.57576370]
[24.94062233 33.73413849]
[23.99234581 30.70222473]
[24.14645195 27.90024185]
[14.68013287 16.26457214]
[-0.03090068 10.44254017]
[-2.06101727 -4.31306553]
[-11.52733612 -15.94873524]
[-20.99365616 -27.58440399]
[-30.45997429 -39.22007370]
[-39.92629242 -50.85574341]
[-54.63732910 -56.67777634]
[-56.66744614 -71.43338013]
[-66.13376617 -83.06905365]
[-75.60008240 -94.70471954]
[-85.06639862 -106.34038544]
[-94.53272247 -117.97605896]
[-109.21881866 -126.44687653]
[-105.14456177 -142.90399170]
[-88.20272064 -143.54473877]
[-82.89704895 -127.44237518]
[-73.43073273 -115.80670929]
[-63.96441269 -104.17103577]
[-54.49809265 -92.53536987]
[-45.03177643 -80.89969635]
[-30.99783516 -75.90992737]
[-28.29062462 -60.32206345]
[-18.82430458 -48.68639374]
[-9.35798645 -37.05072403]
[0.10833284 -25.41505432]
[9.57465172 -13.77938461]
[23.60859108 -8.78961277]
[26.31580162 6.79825354]
[35.78211975 18.43392181]
[45.59720993 29.77693939]
[55.75202560 40.81685638]
[65.90683746 51.85676956]
[76.06165314 62.89668655]
[86.21646881 73.93659973]
[96.37128448 84.97651672]
[111.28672028 86.56708527]
[123.54126740 77.91687775]
[135.79580688 69.26667023]
[148.05036926 60.61646652]
[160.30491638 51.96626282]
[172.55946350 43.31605911]
[172.55972290 26.40318108]
[182.54078674 12.95586586]
[198.41090393 8.15453911]
[213.85958862 13.70145988]
[225.98144531 4.86627340]
[231.07528687 -2.71985793]
[238.35498047 -4.00936222]
[250.60952759 -12.65956688]
[262.79809570 -21.40251350]
[274.91995239 -30.23769951]
[286.97442627 -39.16461563]
[293.35028076 -53.64421463]
[308.17227173 -55.11314774]
[314.54815674 -69.59275055]
[329.37014771 -71.06168365]
[341.35653687 -80.07981873]
[353.34289551 -89.09794617]
[360.38455200 -107.98431396]
[379.65954590 -109.49819183]
[391.36672974 -118.87594604]
[403.07388306 -128.25369263]
[403.24893188 -143.89030457]
[413.47323608 -155.72238159]
[428.91915894 -158.16317749]
[442.29360962 -150.06024170]
[447.28161621 -135.23951721]
[441.52795410 -120.69889832]
[427.74935913 -113.30402374]
[412.45162964 -116.54653168]
[400.74447632 -107.16877747]
[389.03729248 -97.79102325]
[388.83273315 -87.57096863]
[382.91079712 -78.97097015]
[373.02899170 -74.96923828]
[362.36105347 -77.11156464]
[350.37466431 -68.09343719]
[338.38827515 -59.07530212]
[332.86975098 -45.24074173]
[317.19042969 -43.12677002]
[311.67187500 -29.29220772]
[295.99255371 -27.17823601]
[292.53643799 -20.64279175]
[283.75512695 -18.11584091]
[271.63327026 -9.28065395]
[268.07836914 -2.79841256]
[259.25973511 -0.40501851]
[247.00518799 8.24518585]
[234.81663513 16.98813438]
[222.69477844 25.82332039]
[223.95358276 39.11632156]
[218.43463135 51.39363480]
[207.48225403 59.40380096]
[193.89472961 60.96774292]
[181.20967102 55.57060623]
[168.95510864 64.22080994]
[156.70056152 72.87101746]
[144.44601440 81.52121735]
[132.19146729 90.17142487]
[119.93692017 98.82163239]
[134.58738708 102.04091644]
[143.38185120 114.19235992]
[141.86146545 129.11511230]
[130.79708862 139.24325562]
[115.79840088 139.44178772]
[104.46981812 129.61004639]
[102.55483246 114.73339081]
[97.63903809 128.90501404]
[92.72324371 143.07664490]
[95.51065826 158.65036011]
[84.02967072 168.13909912]
[79.11387634 182.31072998]
[74.19808197 196.48234558]
[87.66686249 189.87992859]
[102.25868225 193.35537720]
[111.30512238 205.32040405]
[110.67196655 220.30703735]
[100.64857483 231.46641541]
[85.81561279 233.69871521]
[72.95170593 225.98381042]
[67.93563080 211.84800720]
[61.54482269 225.41847229]
[55.15401459 238.98893738]
[48.76320648 252.55940247]
[42.37239838 266.12988281]
[35.98159027 279.70034790]
[37.10189056 295.48184204]
[24.67946625 303.69964600]
[18.28865814 317.27011108]
[19.40895844 333.05160522]
[6.98653698 341.26943970]
[0.59572798 354.83990479]
[-5.79508066 368.41036987]
[-12.18588924 381.98083496]
[-18.57669830 395.55130005]
[-24.96750641 409.12176514]
[-12.85301685 400.27648926]
[0.18748772 392.86398315]
[15.10185337 391.26345825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 19]
[9 18]
[10 17]
[11 16]
[21 32]
[22 31]
[23 30]
[24 29]
[33 203]
[34 202]
[35 201]
[36 200]
[37 199]
[38 198]
[40 196]
[41 195]
[43 193]
[44 192]
[45 191]
[46 190]
[47 189]
[48 188]
[49 180]
[50 179]
[51 178]
[53 176]
[54 175]
[55 174]
[56 102]
[57 101]
[58 100]
[59 99]
[60 98]
[61 97]
[66 96]
[67 95]
[69 93]
[70 92]
[71 91]
[72 90]
[73 89]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[103 167]
[104 166]
[105 165]
[106 164]
[107 163]
[108 162]
[112 157]
[113 156]
[115 155]
[116 154]
[117 152]
[118 151]
[119 149]
[121 147]
[123 145]
[124 144]
[125 143]
[127 139]
[128 138]
[129 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
