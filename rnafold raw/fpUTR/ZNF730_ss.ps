%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAGGCCCGCAGCUGGAGCAGACAGGGCGGCUUCCGGGAUUUGGCGCGGCCUUUGUUUCUCGCUGCCGCCGAAGCUCCAAUUUUCGUCUGUCUGCUUUGUGUCCUCUGCACGUAGAAGCCCAGCCUGUGUGGCCCUGCGACCUGCGGGUAUUGGGAGAUCCACAGCUAAGACGCCAGGGCCCCCUGGAAGCCUAGAA\
) } def
/len { sequence length } bind def

/coor [
[89.48716736 235.43043518]
[81.74919128 220.97167969]
[90.63053131 207.18568420]
[90.86614227 192.18753052]
[90.98394775 177.18798828]
[90.98394775 162.18798828]
[90.98394775 147.18798828]
[90.98394775 132.18798828]
[76.85730743 113.24970245]
[80.75012207 94.92547607]
[68.75485229 85.91917419]
[56.75958252 76.91287231]
[44.76431274 67.90657043]
[32.76904297 58.90026474]
[20.70340729 49.98844910]
[8.56815243 41.17166901]
[-3.56710291 32.35489273]
[-15.70235825 23.53811264]
[-59.13713455 17.02515793]
[-73.60549927 13.06706142]
[-88.07386017 9.10896587]
[-102.54222107 5.15086985]
[-117.01058197 1.19277406]
[-131.47894287 -2.76532173]
[-145.94729614 -6.72341728]
[-160.41566467 -10.68151283]
[-174.88403320 -14.63960934]
[-189.35238647 -18.59770393]
[-198.46484375 -17.84385681]
[-204.01599121 -22.73326683]
[-218.42039490 -26.91813469]
[-232.82479858 -31.10300064]
[-243.05506897 -19.82901001]
[-257.10852051 -14.13797379]
[-272.17758179 -15.10903072]
[-285.27688599 -22.49612427]
[-293.83456421 -34.78741455]
[-296.19717407 -49.51438141]
[-310.60159302 -53.69924545]
[-325.00598145 -57.88411331]
[-342.77688599 -53.07527924]
[-354.42495728 -66.19608307]
[-368.89334106 -70.15417480]
[-383.36169434 -74.11227417]
[-397.83004761 -78.07036591]
[-412.29840088 -82.02846527]
[-426.76678467 -85.98655701]
[-441.23513794 -89.94465637]
[-455.73413086 -93.78899384]
[-470.26287842 -97.51934052]
[-484.79162598 -101.24969482]
[-499.32037354 -104.98004150]
[-509.53265381 -93.57968903]
[-523.87725830 -88.24192810]
[-539.05786133 -90.19333649]
[-551.58605957 -98.98549652]
[-558.58300781 -112.59802246]
[-558.44085693 -127.90287018]
[-551.19226074 -141.38310242]
[-538.50292969 -149.94104004]
[-523.28869629 -151.61013794]
[-509.04571533 -146.00686646]
[-499.04696655 -134.41879272]
[-495.59002686 -119.50878906]
[-481.06127930 -115.77844238]
[-466.53253174 -112.04808807]
[-452.00378418 -108.31774139]
[-444.73678589 -109.70050049]
[-437.27703857 -104.41301727]
[-422.80868530 -100.45491791]
[-408.34033203 -96.49682617]
[-393.87194824 -92.53872681]
[-379.40359497 -88.58063507]
[-364.93524170 -84.62253571]
[-350.46688843 -80.66444397]
[-339.80191040 -86.38466644]
[-327.71151733 -83.19889069]
[-320.82113647 -72.28852081]
[-306.41671753 -68.10365295]
[-292.01229858 -63.91878510]
[-282.12637329 -75.08721924]
[-268.31491089 -80.87966919]
[-253.29660034 -80.09783936]
[-240.05302429 -72.84331512]
[-231.23672485 -60.50800705]
[-228.63992310 -45.50740433]
[-214.23551941 -41.32254028]
[-199.83111572 -37.13767242]
[-185.39428711 -33.06606674]
[-170.92593384 -29.10797119]
[-156.45756531 -25.14987373]
[-141.98921204 -21.19177818]
[-127.52084351 -17.23368263]
[-113.05248260 -13.27558708]
[-98.58412170 -9.31749153]
[-84.11576080 -5.35939598]
[-69.64739990 -1.40129995]
[-55.17903900 2.55679584]
[-48.75365829 -1.31159854]
[-35.90289688 -9.04838657]
[-29.47751427 -12.91678143]
[-26.20536613 -27.55553246]
[-22.93321800 -42.19428253]
[-19.66106796 -56.83303452]
[-27.00873566 -71.09456635]
[-20.30862617 -85.67153931]
[-4.70048857 -89.38174438]
[7.84244823 -79.37902832]
[7.69831705 -63.33662415]
[-5.02231741 -53.56088638]
[-8.29446602 -38.92213440]
[-11.56661415 -24.28338432]
[-14.83876324 -9.64463234]
[-9.08547115 -23.49741745]
[3.45743561 -31.72392845]
[18.45547295 -31.48131180]
[30.72573471 -22.85340881]
[36.02795410 -8.82178593]
[32.52983093 5.76461649]
[21.44022179 15.86513901]
[6.59138727 17.98931885]
[-6.88557911 11.40285778]
[5.24967575 20.21963692]
[17.38493156 29.03641510]
[29.52018547 37.85319519]
[36.78591156 39.24270248]
[41.77534485 46.90499496]
[53.77061462 55.91130066]
[65.76588440 64.91760254]
[77.76115417 73.92390442]
[89.75642395 82.93020630]
[112.88455963 76.65203857]
[133.41894531 99.27203369]
[147.94769287 103.00238037]
[162.47644043 106.73272705]
[177.00518799 110.46307373]
[191.53393555 114.19342804]
[206.06268311 117.92377472]
[220.59143066 121.65412140]
[235.14903259 125.27024841]
[249.73457336 128.77192688]
[264.95968628 124.46999359]
[275.52905273 134.96463013]
[290.21740723 138.00645447]
[304.99404907 140.58538818]
[319.77069092 143.16432190]
[334.69564819 137.91488647]
[345.90310669 147.72515869]
[360.67974854 150.30409241]
[375.45639038 152.88302612]
[390.23303223 155.46197510]
[401.28213501 144.56713867]
[416.62985229 142.28082275]
[430.37466431 149.48214722]
[437.23147583 163.40205383]
[434.56362915 178.68807983]
[423.39700317 189.46240234]
[408.02539062 191.58209229]
[394.35949707 184.23208618]
[387.65411377 170.23860168]
[372.87747192 167.65966797]
[358.10083008 165.08073425]
[343.32418823 162.50180054]
[329.45617676 167.93569946]
[317.19174194 157.94096375]
[302.41510010 155.36203003]
[287.63845825 152.78308105]
[285.26565552 154.29154968]
[282.14971924 154.94668579]
[278.61425781 154.45976257]
[275.08166504 152.66494751]
[272.02737427 149.55018616]
[257.84552002 154.10258484]
[246.23289490 143.35748291]
[231.64735413 139.85580444]
[224.40295410 141.35253906]
[216.86108398 136.18287659]
[202.33233643 132.45251465]
[187.80358887 128.72216797]
[173.27484131 124.99182129]
[158.74609375 121.26147461]
[144.21734619 117.53112793]
[129.68859863 113.80078125]
[123.76243591 118.39758301]
[134.72418213 128.63671875]
[147.82974243 135.93359375]
[148.96636963 150.89047241]
[137.11398315 160.08398438]
[122.90974426 155.26324463]
[119.10149384 140.75492859]
[111.91011047 127.59118652]
[105.98394775 132.18798828]
[105.98394775 147.18798828]
[105.98394775 162.18798828]
[105.98394775 177.18798828]
[109.11560822 185.77856445]
[105.86428833 192.42314148]
[105.62867737 207.42129517]
[114.07260895 221.47946167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[4 197]
[5 195]
[6 194]
[7 193]
[8 192]
[10 131]
[11 130]
[12 129]
[13 128]
[14 127]
[15 125]
[16 124]
[17 123]
[18 122]
[19 98]
[20 97]
[21 96]
[22 95]
[23 94]
[24 93]
[25 92]
[26 91]
[27 90]
[28 89]
[30 88]
[31 87]
[32 86]
[38 80]
[39 79]
[40 78]
[42 75]
[43 74]
[44 73]
[45 72]
[46 71]
[47 70]
[48 69]
[49 67]
[50 66]
[51 65]
[52 64]
[101 113]
[102 112]
[103 111]
[104 110]
[133 183]
[134 182]
[135 181]
[136 180]
[137 179]
[138 178]
[139 177]
[140 175]
[141 174]
[143 172]
[144 167]
[145 166]
[146 165]
[148 163]
[149 162]
[150 161]
[151 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
