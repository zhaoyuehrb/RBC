%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUCCCCGCCUCUUCCCCAGGGGCCGCGUCGGAGCCUCGGCGGCGGCGGCGGUGCUUACAGCCUGAGAAGAGCGUCUCGCCCGGGAGCGGCGGCGGCCAUCGAGACCCACCCAAGGCGCGUCCCCCUCGGCCUCCCAGCGCUCCCAAGCCGCAGCGGCCGCGCCCCUUCAGCUAGCUCGCUCGCUCGCUCUGCUUCCCUGCUGCCGGCUGCGCC\
) } def
/len { sequence length } bind def

/coor [
[-81.38454437 423.68438721]
[-82.03582764 408.69851685]
[-82.68710327 393.71267700]
[-83.33837891 378.72680664]
[-83.98965454 363.74096680]
[-84.64093781 348.75509644]
[-92.35022736 346.32455444]
[-99.24674988 342.10806274]
[-110.97422028 351.46041870]
[-122.70169830 360.81274414]
[-134.42916870 370.16510010]
[-146.15664673 379.51745605]
[-152.12191772 394.17098999]
[-166.89663696 396.05703735]
[-178.62409973 405.40939331]
[-184.58938599 420.06292725]
[-199.36408997 421.94897461]
[-211.09156799 431.30133057]
[-222.75103760 440.73831177]
[-234.34188843 450.25946045]
[-238.98400879 458.12106323]
[-246.17015076 459.83306885]
[-257.89761353 469.18542480]
[-269.62509155 478.53778076]
[-281.35256958 487.89013672]
[-293.08004761 497.24246216]
[-304.73950195 506.67947388]
[-306.03186035 522.43084717]
[-318.13745117 532.59106445]
[-333.87426758 531.13226318]
[-343.90591431 518.91992188]
[-342.28082275 503.19937134]
[-329.96310425 493.29739380]
[-314.26065063 495.08862305]
[-311.08871460 488.41699219]
[-302.43237305 485.51498413]
[-290.70492554 476.16265869]
[-278.97744751 466.81030273]
[-267.24996948 457.45794678]
[-255.52249146 448.10562134]
[-243.86302185 438.66860962]
[-232.27217102 429.14746094]
[-229.10025024 422.47583008]
[-220.44390869 419.57385254]
[-208.71644592 410.22149658]
[-203.58998108 396.23690796]
[-187.97645569 393.68191528]
[-176.24897766 384.32955933]
[-171.12252808 370.34497070]
[-155.50898743 367.78997803]
[-143.78150940 358.43762207]
[-132.05404663 349.08529663]
[-120.32656860 339.73294067]
[-108.59909821 330.38058472]
[-111.84611511 318.95965576]
[-110.88373566 307.08261108]
[-105.80427551 296.25665283]
[-97.22438049 287.86596680]
[-86.21029663 282.99481201]
[-74.14542389 282.28753662]
[-62.55656052 285.86334229]
[-52.78597260 274.48199463]
[-43.01538467 263.10061646]
[-33.24479675 251.71923828]
[-35.72843170 233.57907104]
[-23.95837402 219.13940430]
[-5.05230618 217.87164307]
[4.38468647 206.21217346]
[13.82167912 194.55271912]
[15.81463814 179.79203796]
[30.51096535 173.93298340]
[39.94795990 162.27352905]
[49.38495255 150.61405945]
[58.82194519 138.95458984]
[68.25893402 127.29512024]
[77.69593048 115.63565826]
[73.23785400 105.07276154]
[73.52118683 93.61113739]
[78.49571228 83.28141785]
[87.28012085 75.91369629]
[98.31808472 72.81330872]
[101.54995728 58.16560745]
[93.31000519 44.94664764]
[96.79624176 30.13784027]
[109.44927979 22.36376762]
[112.68114471 7.71607018]
[115.91301727 -6.93162632]
[119.14488983 -21.57932281]
[122.37675476 -36.22702026]
[125.60862732 -50.87471771]
[128.84049988 -65.52241516]
[120.60054016 -78.74137115]
[124.08677673 -93.55018616]
[136.73982239 -101.32425690]
[139.97167969 -115.97195435]
[134.01200867 -133.39723206]
[146.35610962 -145.87348938]
[149.37557983 -160.56643677]
[152.39506531 -175.25938416]
[155.41453552 -189.95234680]
[143.84225464 -202.29132080]
[141.92553711 -218.93159485]
[150.22317505 -233.29057312]
[165.29246521 -239.80679321]
[160.27377319 -254.81089783]
[170.25567627 -265.86581421]
[173.06211853 -280.60092163]
[175.86857605 -295.33605957]
[170.84988403 -310.34014893]
[180.83178711 -321.39505005]
[175.81307983 -336.39916992]
[185.79498291 -347.45407104]
[188.60144043 -362.18917847]
[185.62532043 -378.87988281]
[200.83985901 -386.36013794]
[212.23957825 -373.81091309]
[203.33656311 -359.38272095]
[200.53010559 -344.64761353]
[205.74954224 -330.69744873]
[195.56690979 -318.58859253]
[200.78634644 -304.63845825]
[190.60369873 -292.52960205]
[187.79724121 -277.79446411]
[184.99079895 -263.05935669]
[190.21023560 -249.10919189]
[180.02758789 -237.00033569]
[190.03146362 -228.16302490]
[194.39837646 -215.43482971]
[191.88691711 -202.10464478]
[183.04780579 -191.67298889]
[170.10748291 -186.93286133]
[167.08801270 -172.23991394]
[164.06852722 -157.54696655]
[161.04905701 -142.85401917]
[167.44082642 -132.58738708]
[165.04869080 -120.32405090]
[154.61938477 -112.74008179]
[151.38751221 -98.09238434]
[159.59449768 -85.71575165]
[156.52558899 -70.81486511]
[143.48818970 -62.29054260]
[140.25631714 -47.64284897]
[137.02445984 -32.99515152]
[133.79258728 -18.34745407]
[130.56071472 -3.69975710]
[127.32884216 10.94793987]
[124.09697723 25.59563637]
[132.30395508 37.97226715]
[129.23504639 52.87315369]
[116.19765472 61.39747620]
[112.96578217 76.04517365]
[122.79762268 85.09317017]
[127.14376068 97.72814178]
[141.85818481 100.64118195]
[156.59330750 103.44763947]
[171.34835815 106.14735413]
[186.10340881 108.84706879]
[200.85845947 111.54679108]
[215.63265991 114.13963318]
[230.42524719 116.62545776]
[247.52630615 109.79085541]
[260.61178589 121.48719788]
[275.43881226 123.75861359]
[285.57125854 112.12516022]
[300.39108276 107.83843994]
[315.16937256 112.26632690]
[325.19036865 123.99589539]
[327.25646973 139.28428650]
[320.70834351 153.25302124]
[307.63549805 161.44473267]
[292.20944214 161.24548340]
[279.35253906 152.71884155]
[273.16738892 138.58563232]
[258.34036255 136.31422424]
[248.41065979 143.21778870]
[236.04190063 141.44984436]
[227.93942261 131.41804504]
[213.14683533 128.93222046]
[206.03280640 130.92276001]
[198.15873718 126.30184174]
[183.40368652 123.60211945]
[168.64863586 120.90240479]
[153.89358521 118.20269012]
[146.75148010 120.09003448]
[138.94514465 115.35560608]
[124.23072052 112.44256592]
[109.27498627 125.61093140]
[89.35540009 125.07264709]
[79.91840363 136.73211670]
[70.48141479 148.39158630]
[61.04441833 160.05104065]
[51.60742569 171.71051025]
[42.17043304 183.36997986]
[39.50247574 198.96461487]
[25.48114586 203.98970032]
[16.04415321 215.64916992]
[6.60716057 227.30863953]
[10.12908363 238.65788269]
[7.76151848 250.18046570]
[0.20546582 259.03915405]
[-10.57527351 263.10974121]
[-21.86342621 261.48983765]
[-31.63401413 272.87118530]
[-41.40460205 284.25256348]
[-51.17518616 295.63394165]
[-44.70119858 316.24609375]
[-51.89693451 336.43002319]
[-69.65508270 348.10382080]
[-69.00379944 363.08969116]
[-68.35252380 378.07553101]
[-67.70124817 393.06137085]
[-67.04997253 408.04724121]
[-66.39868927 423.03308105]
[-57.13861084 436.56759644]
[-64.47280121 451.23532104]
[-80.85648346 451.94732666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 213]
[2 212]
[3 211]
[4 210]
[5 209]
[6 208]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[14 48]
[15 47]
[17 45]
[18 44]
[19 42]
[20 41]
[22 40]
[23 39]
[24 38]
[25 37]
[26 36]
[27 34]
[61 205]
[62 204]
[63 203]
[64 202]
[67 197]
[68 196]
[69 195]
[71 193]
[72 192]
[73 191]
[74 190]
[75 189]
[76 188]
[81 151]
[82 150]
[85 147]
[86 146]
[87 145]
[88 144]
[89 143]
[90 142]
[91 141]
[94 138]
[95 137]
[97 134]
[98 133]
[99 132]
[100 131]
[104 126]
[106 124]
[107 123]
[108 122]
[110 120]
[112 118]
[113 117]
[153 186]
[154 185]
[155 183]
[156 182]
[157 181]
[158 180]
[159 178]
[160 177]
[162 174]
[163 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
