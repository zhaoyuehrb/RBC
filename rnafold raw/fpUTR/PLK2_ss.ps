%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGCCCCCUUCCCGCCUCCCCGUAUAUAAGACUUCGCCGAGCGCUCUCACUCGCACAAGUGGACCGGGGUGUUGGGUGCUAGUCGGCACCAGAGGCAAGGGUGCGAGGACCACGGCCGGCUCGGACGUGUGACCGCGCCUAGGGGGUGGCAGCGGGCAGUGCGGGGCGGCAAGGCGACC\
) } def
/len { sequence length } bind def

/coor [
[100.54402924 456.67913818]
[100.43681335 440.87521362]
[111.59538269 429.68316650]
[111.33504486 414.68542480]
[111.07469940 399.68768311]
[110.81436157 384.68994141]
[99.65684509 368.91677856]
[109.62981415 351.41845703]
[108.84910583 336.43878174]
[100.45987701 324.13146973]
[107.46842957 309.94729614]
[106.68772125 294.96762085]
[105.90702057 279.98794556]
[105.12631226 265.00830078]
[104.34560394 250.02862549]
[103.56489563 235.04895020]
[102.65422058 220.07661438]
[101.61364746 205.11276245]
[93.01207733 192.95289612]
[99.77339172 178.64921570]
[98.73281860 163.68534851]
[97.69224548 148.72149658]
[96.65166473 133.75762939]
[95.61109161 118.79376984]
[90.63972473 132.94599915]
[77.46170807 140.11117554]
[62.88087463 136.58990479]
[54.42534637 124.20023346]
[56.46072388 109.33896637]
[67.93614960 99.67901611]
[82.92871094 100.20863342]
[69.37409210 93.78427887]
[55.81947708 87.35991669]
[42.26485825 80.93556213]
[23.96418190 82.86117554]
[14.54000664 68.07099915]
[0.87593061 61.88286591]
[-12.78814602 55.69473267]
[-26.45222282 49.50659561]
[-42.21529388 50.86164474]
[-50.61709213 38.56290436]
[-64.28116608 32.37476730]
[-77.94524384 26.18663406]
[-91.60932159 19.99849892]
[-105.27339935 13.81036282]
[-118.93746948 7.62222815]
[-132.60154724 1.43409300]
[-146.26562500 -4.75404215]
[-159.71978760 2.74873042]
[-174.83535767 0.91209936]
[-185.84086609 -9.35155106]
[-188.65869141 -23.95285034]
[-202.32275391 -30.14098549]
[-215.98683167 -36.32912064]
[-229.65090942 -42.51725388]
[-245.90878296 -40.36931229]
[-255.68194580 -53.53812027]
[-248.91659546 -68.47673035]
[-232.57235718 -69.81758881]
[-223.46278381 -56.18133163]
[-209.79870605 -49.99319458]
[-196.13462830 -43.80506134]
[-182.47055054 -37.61692810]
[-169.63751221 -45.13032913]
[-154.66390991 -43.62865067]
[-143.31300354 -33.47924805]
[-140.07748413 -18.41811943]
[-126.41341400 -12.22998333]
[-112.74933624 -6.04184818]
[-99.08525848 0.14628670]
[-85.42118835 6.33442163]
[-71.75711060 12.52255726]
[-58.09303284 18.71069145]
[-44.42895508 24.89882660]
[-29.64323044 23.10116196]
[-20.26408768 35.84252167]
[-6.60001087 42.03065491]
[7.06406546 48.21879196]
[20.72814178 54.40692520]
[32.17281723 50.43768311]
[43.61650085 55.50301361]
[48.68921661 67.38094330]
[62.24383163 73.80530548]
[75.79844666 80.22966003]
[89.35306549 86.65401459]
[104.30733490 85.48361969]
[111.34513855 71.31393433]
[126.21916199 70.53112030]
[138.60925293 62.07619858]
[150.99934387 53.62127686]
[163.38941956 45.16635513]
[160.80914307 34.14402771]
[161.71775818 22.88697052]
[166.01214600 12.47044849]
[173.26657104 3.88445115]
[182.77479553 -2.06039953]
[193.61885071 -4.80936813]
[204.75769043 -4.11533833]
[215.12699890 -0.06093489]
[223.74107361 6.95092869]
[236.68783569 -0.62410277]
[249.63461304 -8.19913387]
[262.58139038 -15.77416611]
[275.52816772 -23.34919739]
[288.47491455 -30.92422867]
[301.42169189 -38.49925995]
[307.26809692 -45.55350113]
[314.65957642 -46.09117126]
[316.57748413 -61.37606049]
[327.00595093 -72.47110748]
[341.79306030 -75.26498413]
[355.22900391 -68.89216614]
[368.30529785 -76.24134827]
[381.38159180 -83.59053802]
[394.45788574 -90.93972015]
[402.69738770 -104.44607544]
[417.58328247 -103.93672943]
[430.65957642 -111.28591919]
[443.73587036 -118.63510132]
[454.58129883 -131.66633606]
[470.10556030 -124.85214996]
[467.85522461 -108.04821014]
[451.08505249 -105.55880737]
[438.00875854 -98.20962524]
[424.93246460 -90.86043549]
[417.62829590 -77.87975311]
[401.80709839 -77.86342621]
[388.73080444 -70.51424408]
[375.65451050 -63.16505814]
[362.57821655 -55.81586838]
[361.03656006 -41.02528763]
[350.96206665 -29.84635353]
[336.06259155 -26.70648766]
[322.00875854 -33.01487732]
[308.99673462 -25.55248833]
[296.04995728 -17.97745705]
[283.10317993 -10.40242577]
[270.15640259 -2.82739401]
[257.20965576 4.74763727]
[244.26287842 12.32266903]
[231.31610107 19.89770126]
[232.46939087 38.73303604]
[223.88676453 55.63031006]
[207.85943604 65.89658356]
[188.75878906 66.63380432]
[171.84434509 57.55644226]
[159.45425415 66.01136780]
[147.06417847 74.46628571]
[134.67408752 82.92121124]
[128.52250671 96.48613739]
[112.76226044 97.87371063]
[115.24183655 107.06858826]
[110.57495880 117.75318909]
[111.61553192 132.71705627]
[112.65610504 147.68092346]
[113.69668579 162.64477539]
[114.73725891 177.60864258]
[123.41326141 190.83882141]
[116.57751465 204.07217407]
[117.61808777 219.03604126]
[121.34391785 227.40629578]
[118.54457092 234.26824951]
[119.32527161 249.24790955]
[120.10597992 264.22756958]
[120.88668823 279.20724487]
[121.66738892 294.18692017]
[122.44809723 309.16659546]
[130.89317322 322.54534912]
[123.82877350 335.65808105]
[124.60948181 350.63775635]
[133.12258911 357.46237183]
[136.39250183 367.64105225]
[133.56524658 377.72323608]
[125.81210327 384.42962646]
[126.07244110 399.42736816]
[126.33278656 414.42510986]
[126.59312439 429.42285156]
[138.13340759 440.22085571]
[138.57476807 456.01898193]
[127.65532684 467.44445801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[6 174]
[8 170]
[9 169]
[11 167]
[12 166]
[13 165]
[14 164]
[15 163]
[16 162]
[17 160]
[18 159]
[20 157]
[21 156]
[22 155]
[23 154]
[24 153]
[31 85]
[32 84]
[33 83]
[34 82]
[36 79]
[37 78]
[38 77]
[39 76]
[41 74]
[42 73]
[43 72]
[44 71]
[45 70]
[46 69]
[47 68]
[48 67]
[52 63]
[53 62]
[54 61]
[55 60]
[86 151]
[88 149]
[89 148]
[90 147]
[91 146]
[100 141]
[101 140]
[102 139]
[103 138]
[104 137]
[105 136]
[106 135]
[108 134]
[112 130]
[113 129]
[114 128]
[115 127]
[117 125]
[118 124]
[119 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
