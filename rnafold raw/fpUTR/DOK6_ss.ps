%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCCCGUUCCCCGUCCGCGGCGGCCCUGCAGGCGACCCCGCGUCCCCACCGGCGGGAGCUCGGGGAAGAGCGGGCGGCGGCGCUGCUGCUGGCGGCGGCCGGCUGGAUGCGAGACCCGCGCAGACCCGGCGGCGGACGGCGGCUCUCGACUCCGGAGAGCGGAUCGCGGGGCGCAGGAGCCCGAUCGCGCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[145.53579712 366.87435913]
[142.46368408 352.19232178]
[139.39158630 337.51031494]
[136.31948853 322.82827759]
[133.13101196 308.17105103]
[129.82635498 293.53961182]
[119.47520447 282.82965088]
[123.98207855 267.66394043]
[120.67742157 253.03250122]
[110.32627106 242.32255554]
[114.83314514 227.15684509]
[111.52848816 212.52540588]
[108.22383118 197.89395142]
[104.91916656 183.26251221]
[101.61450958 168.63105774]
[98.30985260 153.99961853]
[94.65793610 139.45095825]
[90.66082764 124.99332428]
[79.32458496 115.17041016]
[64.44526672 113.27152252]
[49.56594086 111.37263489]
[34.68661880 109.47374725]
[19.80729675 107.57486725]
[4.92797518 105.67597961]
[-3.99169660 107.69515228]
[-10.17164993 103.62710571]
[-25.01897240 101.49238586]
[-39.88276291 99.47551727]
[-54.76208496 97.57662964]
[-69.64140320 95.67774200]
[-84.52072906 93.77885437]
[-96.94345093 103.17639160]
[-112.00614929 101.03868866]
[-120.88871002 89.13760376]
[-135.76803589 87.23871613]
[-150.28820801 99.39454651]
[-168.76716614 97.12686157]
[-179.54130554 82.33660889]
[-194.47338867 80.91077423]
[-209.40547180 79.48493195]
[-224.33753967 78.05908966]
[-239.26962280 76.63324738]
[-253.74278259 83.02372742]
[-265.67694092 74.11165619]
[-280.60903931 72.68581390]
[-295.08218384 79.07629395]
[-307.01635742 70.16422272]
[-321.94842529 68.73838043]
[-336.88052368 67.31253815]
[-348.90640259 77.56697845]
[-364.65414429 76.23110199]
[-374.78085327 64.09747314]
[-373.27856445 48.36474609]
[-361.03854370 38.36687469]
[-345.32257080 40.03541946]
[-335.45468140 52.38046265]
[-320.52258301 53.80630112]
[-305.59051514 55.23214340]
[-292.18539429 48.73968124]
[-279.18319702 57.75373840]
[-264.25109863 59.17957687]
[-250.84599304 52.68711472]
[-237.84378052 61.70117188]
[-222.91171265 63.12701035]
[-207.97962952 64.55284882]
[-193.04754639 65.97869110]
[-178.11546326 67.40453339]
[-171.09230042 58.39755249]
[-160.48162842 53.85680771]
[-148.87829590 55.01873016]
[-139.18121338 61.70944595]
[-133.86914062 72.35939789]
[-118.98982239 74.25828552]
[-107.40303040 64.96948242]
[-92.28623199 66.68325806]
[-82.62184143 78.89953613]
[-67.74251556 80.79842377]
[-52.86319733 82.69731140]
[-37.98387527 84.59619904]
[-30.94334602 82.32203674]
[-22.88424873 86.64506531]
[-8.03692722 88.77978516]
[6.82686186 90.79665375]
[21.70618439 92.69554138]
[36.58550644 94.59442902]
[51.46482849 96.49331665]
[66.34415436 98.39220428]
[81.22347260 100.29109192]
[97.84904480 73.64187622]
[105.55420685 60.77212524]
[113.25936890 47.90237045]
[120.96453094 35.03261948]
[128.66969299 22.16287041]
[129.12005615 6.34807491]
[142.29623413 -0.59723723]
[142.74659729 -16.41203308]
[155.92279053 -23.35734367]
[163.62794495 -36.22709656]
[164.07830811 -52.04188919]
[177.25450134 -58.98720169]
[184.95965576 -71.85695648]
[192.66481018 -84.72670746]
[200.36997986 -97.59645844]
[208.07513428 -110.46620941]
[208.56283569 -117.07695770]
[211.83100891 -121.74268341]
[216.23446655 -123.61653900]
[213.08840942 -138.87236023]
[221.49246216 -151.55409241]
[236.05595398 -154.45936584]
[244.16555786 -167.07817078]
[252.27517700 -179.69697571]
[260.38479614 -192.31578064]
[255.56921387 -207.19342041]
[261.49130249 -221.66624451]
[275.35482788 -228.90063477]
[290.61386108 -225.48072815]
[300.06356812 -213.02130127]
[299.24206543 -197.40531921]
[288.53723145 -186.00614929]
[273.00360107 -184.20616150]
[264.89398193 -171.58735657]
[256.78436279 -158.96855164]
[248.67475891 -146.34976196]
[252.08190918 -131.89544678]
[244.03736877 -118.98266602]
[228.85327148 -115.50692749]
[220.94488525 -102.76104736]
[213.23973083 -89.89129639]
[205.53456116 -77.02154541]
[197.82940674 -64.15179443]
[190.12425232 -51.28204346]
[190.22500610 -36.38777924]
[176.49769592 -28.52193451]
[168.79254150 -15.65218353]
[168.89329529 -0.75791907]
[155.16598511 7.10792351]
[155.26675415 22.00218773]
[141.53944397 29.86803055]
[133.83427429 42.73778152]
[126.12911987 55.60753250]
[118.42395782 68.47728729]
[110.71879578 81.34703827]
[117.16571808 94.89093018]
[132.01304626 97.02565765]
[146.86036682 99.16037750]
[161.70768738 101.29510498]
[176.55500793 103.42982483]
[191.40232849 105.56454468]
[202.93504333 95.00374603]
[218.56011963 94.37844086]
[230.89987183 103.98388672]
[234.12785339 119.28467560]
[226.71989441 133.05624390]
[212.17382812 138.79609680]
[197.35784912 133.79402161]
[189.26760864 120.41186523]
[174.42028809 118.27714539]
[159.57296753 116.14242554]
[144.72564697 114.00769806]
[129.87831116 111.87297821]
[115.03099823 109.73825836]
[105.11846161 120.99621582]
[109.11557007 135.45384216]
[112.85294342 139.12835693]
[114.62284088 143.43917847]
[114.51325989 147.52757263]
[112.94129944 150.69496155]
[116.24595642 165.32640076]
[119.55061340 179.95785522]
[122.85527802 194.58929443]
[126.15993500 209.22074890]
[129.46458435 223.85218811]
[140.05210876 235.60867310]
[135.30886841 249.72784424]
[138.61352539 264.35928345]
[149.20103455 276.11578369]
[144.45779419 290.23495483]
[147.76245117 304.86639404]
[152.71057129 312.55755615]
[151.00152588 319.75616455]
[154.07362366 334.43820190]
[157.14572144 349.12023926]
[160.21781921 363.80227661]
[171.25526428 368.25363159]
[178.69342041 377.38998413]
[180.77125549 388.86471558]
[177.08569336 399.80187988]
[168.66362000 407.51675415]
[171.26834106 422.28887939]
[182.21827698 434.49670410]
[176.86445618 449.99731445]
[160.71444702 452.84500122]
[150.38198853 440.11032104]
[156.49623108 424.89361572]
[153.89151001 410.12149048]
[138.29393005 400.55334473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 184]
[2 183]
[3 182]
[4 181]
[5 179]
[6 178]
[8 176]
[9 175]
[11 173]
[12 172]
[13 171]
[14 170]
[15 169]
[16 168]
[17 164]
[18 163]
[19 88]
[20 87]
[21 86]
[22 85]
[23 84]
[24 83]
[26 82]
[27 81]
[28 79]
[29 78]
[30 77]
[31 76]
[34 73]
[35 72]
[38 67]
[39 66]
[40 65]
[41 64]
[42 63]
[44 61]
[45 60]
[47 58]
[48 57]
[49 56]
[89 143]
[90 142]
[91 141]
[92 140]
[93 139]
[95 137]
[97 135]
[98 134]
[100 132]
[101 131]
[102 130]
[103 129]
[104 128]
[107 127]
[110 124]
[111 123]
[112 122]
[113 121]
[144 162]
[145 161]
[146 160]
[147 159]
[148 158]
[149 157]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
