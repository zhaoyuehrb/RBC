%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAUGCAGCCGCCAUCAUUGAUUCGAUAGGCGACGCGGGGAGCGGAAGCCCUUUACACUACGGUGUUUCCGGCUUCAAGAUGGUCGCCUAAGCUGUUUAGUGAAACUUCUUCCACCUUUCUCCAUUCCUCUAGGUGCUUUUUCUGAACCUGGAUGUGAGGCAUUAAAGGAUCCGACGGAAAUAGAAUUGAAGGCAUUCUAAA\
) } def
/len { sequence length } bind def

/coor [
[87.99714661 395.96435547]
[72.90774536 395.26675415]
[58.62656403 390.34490967]
[46.31131363 381.59780884]
[36.96033859 369.73461914]
[31.33167839 355.71694946]
[29.88162231 340.68118286]
[32.72772217 325.84622192]
[39.63925552 312.41464233]
[50.05593491 301.47528076]
[63.13333130 293.91494751]
[77.81130981 290.34655762]
[78.50406647 275.36254883]
[79.19681549 260.37857056]
[72.05556488 247.30754089]
[80.42194366 233.87942505]
[81.11470032 218.89543152]
[81.80744934 203.91143799]
[79.70998383 201.07064819]
[78.88732147 197.07106018]
[79.86985016 192.52433777]
[82.89409637 188.25616455]
[84.27812195 173.32015991]
[85.66214752 158.38414001]
[87.04617310 143.44813538]
[67.11569977 128.77014160]
[58.46544647 106.55345154]
[62.87746811 84.05121613]
[48.38858032 80.16893005]
[33.89969254 76.28664398]
[19.41080666 72.40435791]
[4.92191982 68.52207184]
[-9.56696796 64.63978577]
[-24.05585480 60.75750351]
[-38.54474258 56.87521744]
[-57.75580597 62.97036362]
[-70.82992554 48.72853088]
[-84.16165161 56.78476715]
[-98.92079926 53.09393692]
[-106.51902771 40.33452988]
[-121.12059784 36.90027237]
[-135.72216797 33.46601105]
[-150.32374573 30.03175354]
[-164.92530823 26.59749603]
[-179.55288696 23.27577019]
[-194.20561218 20.06677437]
[-208.85833740 16.85777855]
[-223.51106262 13.64878178]
[-238.16378784 10.43978500]
[-252.81651306 7.23078871]
[-267.49353027 4.13471222]
[-282.19390869 1.15173924]
[-292.30487061 12.71307087]
[-306.84704590 17.65481567]
[-321.90866089 14.64766693]
[-333.43823242 4.50053453]
[-338.33438110 -10.05705547]
[-335.28002930 -25.10918236]
[-325.09680176 -36.60690308]
[-310.52395630 -41.45738602]
[-295.48147583 -38.35587311]
[-284.01571655 -28.13666153]
[-279.21093750 -13.54866409]
[-264.51052856 -10.56569099]
[-257.32614136 -12.31735516]
[-249.60751343 -7.42193604]
[-234.95480347 -4.21293974]
[-220.30207825 -1.00394332]
[-205.64935303 2.20505285]
[-190.99662781 5.41404915]
[-176.34390259 8.62304497]
[-169.13337708 6.98222446]
[-161.49105835 11.99592495]
[-146.88948059 15.43018341]
[-132.28791809 18.86444092]
[-117.68634033 22.29870033]
[-103.08477020 25.73295784]
[-90.59575653 17.69802856]
[-75.73876190 20.97285080]
[-67.39566803 34.12695694]
[-59.22097397 27.98475266]
[-48.79582596 27.34562874]
[-39.55110168 32.66198730]
[-34.66245651 42.38632965]
[-20.17356873 46.26861572]
[-5.68468189 50.15090179]
[8.80420494 54.03318405]
[23.29309273 57.91547012]
[37.78197861 61.79775620]
[52.27086639 65.68004608]
[66.75975800 69.56232452]
[78.58939362 60.33954620]
[78.35839844 45.34132385]
[67.29369354 34.37728882]
[67.27309418 19.16366959]
[77.79381561 8.68273258]
[77.56282806 -6.31548834]
[77.33183289 -21.31370926]
[77.10084534 -36.31193161]
[68.22375488 -50.10066605]
[75.96617889 -64.55704498]
[92.36338043 -64.80957794]
[100.54732513 -50.59848785]
[92.09906769 -36.54292297]
[92.33005524 -21.54470062]
[92.56104279 -6.54647875]
[92.79203796 8.45174217]
[103.63053131 18.60372162]
[104.07843781 33.81076050]
[93.35662079 45.11033630]
[93.58761597 60.10855484]
[103.24160767 60.73018265]
[112.22984314 63.59617233]
[120.05290985 68.42675018]
[126.30556488 74.83674622]
[130.69738770 82.36408997]
[144.99151611 77.81680298]
[159.28564453 73.26951599]
[173.57978821 68.72222137]
[187.87391663 64.17493439]
[190.09106445 49.11353683]
[198.59304810 36.55952454]
[211.64918518 28.97286606]
[226.64297485 27.81202507]
[240.59632874 33.25384521]
[250.76113892 44.16906738]
[265.05526733 39.62177658]
[279.34939575 35.07448578]
[293.60809326 30.41726685]
[307.79336548 25.54102707]
[321.94067383 20.55570412]
[336.08801270 15.57038212]
[350.23532104 10.58506012]
[364.38262939 5.59973812]
[378.52996826 0.61441636]
[392.67727661 -4.37090588]
[394.81845093 -19.52590370]
[403.76663208 -31.94316483]
[417.46563721 -38.76928711]
[432.76751709 -38.43568420]
[446.15600586 -31.01901245]
[454.55450439 -18.22356796]
[456.03317261 -2.98965168]
[450.25213623 11.18209457]
[438.53988647 21.03510666]
[423.58779907 24.30523491]
[408.83175659 20.24102783]
[397.66259766 9.77641106]
[383.51528931 14.76173306]
[369.36795044 19.74705505]
[355.22064209 24.73237610]
[341.07333374 29.71769905]
[326.92602539 34.70302200]
[312.77868652 39.68834305]
[307.51196289 44.87924957]
[298.37496948 44.63967896]
[293.02893066 49.74886322]
[283.89669800 49.36861801]
[269.60256958 53.91590500]
[255.30842590 58.46319580]
[253.31846619 73.24513245]
[245.07392883 85.74860382]
[232.16534424 93.46414948]
[217.12559509 94.81543732]
[202.93292236 89.48110962]
[192.42120361 78.46906281]
[178.12707520 83.01634979]
[163.83294678 87.56364441]
[149.53881836 92.11093140]
[135.24467468 96.65822601]
[139.49813843 108.34671021]
[139.54542542 122.17433167]
[150.93649292 131.93360901]
[162.32757568 141.69288635]
[178.28974915 147.40649414]
[177.21820068 164.32653809]
[160.66275024 167.98080444]
[152.56829834 153.08395386]
[141.17721558 143.32467651]
[129.78614807 133.56539917]
[122.83515930 136.38209534]
[128.46830750 150.28416443]
[114.56613159 155.91708374]
[108.93317413 142.01547241]
[101.98218536 144.83215332]
[100.59815979 159.76817322]
[99.21413422 174.70417786]
[97.83010864 189.64019775]
[96.79144287 204.60418701]
[96.09869385 219.58818054]
[95.40593719 234.57217407]
[102.49764252 248.71496582]
[94.18080902 261.07131958]
[93.48806000 276.05529785]
[92.79531097 291.03930664]
[107.08142853 295.94680786]
[119.40545654 304.68148804]
[128.76834106 316.53530884]
[134.41108704 330.54733276]
[135.87625122 345.58160400]
[133.04504395 360.41943359]
[126.14701080 373.85794067]
[115.74132538 384.80776978]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 195]
[13 194]
[14 193]
[16 191]
[17 190]
[18 189]
[22 188]
[23 187]
[24 186]
[25 185]
[28 91]
[29 90]
[30 89]
[31 88]
[32 87]
[33 86]
[34 85]
[35 84]
[37 80]
[40 77]
[41 76]
[42 75]
[43 74]
[44 73]
[45 71]
[46 70]
[47 69]
[48 68]
[49 67]
[50 66]
[51 64]
[52 63]
[92 111]
[93 110]
[96 107]
[97 106]
[98 105]
[99 104]
[116 170]
[117 169]
[118 168]
[119 167]
[120 166]
[126 160]
[127 159]
[128 158]
[129 156]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[136 148]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
