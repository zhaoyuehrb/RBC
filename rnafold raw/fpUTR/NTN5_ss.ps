%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGCUCUGAGCCCCCGCCCAGCCCAGAAACCCCACUAGCCUGGGGCCUGAGAACAGCCACGCCACUCCCUCCUGAGAGCCCACCGCGCCACAGCUUGGAGGAAGAGCCUGCGGGGAACUGGCUGCAGGACGCUCUCUUCUUGAGUGCAGGUGCUGGCUCUGCUGUGACC\
) } def
/len { sequence length } bind def

/coor [
[-81.88644409 279.08972168]
[-89.50545502 292.01065063]
[-97.12446594 304.93161011]
[-104.74347687 317.85253906]
[-101.01384735 332.97628784]
[-108.92467499 345.97140503]
[-123.36583710 349.43383789]
[-130.98484802 362.35479736]
[-138.60385132 375.27572632]
[-138.94854736 391.09317017]
[-152.07804871 398.12637329]
[-159.69705200 411.04730225]
[-159.30654907 427.44180298]
[-173.44827271 435.74502563]
[-187.57443237 427.41534424]
[-187.15324402 411.02160645]
[-172.61799622 403.42828369]
[-164.99899292 390.50735474]
[-165.19924927 375.61410522]
[-151.52479553 367.65670776]
[-143.90577698 354.73577881]
[-136.28677368 341.81484985]
[-140.24653625 327.50204468]
[-132.70384216 314.28985596]
[-117.66442108 310.23352051]
[-110.04541016 297.31259155]
[-102.42639923 284.39166260]
[-94.80738831 271.47070312]
[-100.77868652 265.45578003]
[-105.54396820 258.44665527]
[-108.94117737 250.68168640]
[-123.75865173 253.01460266]
[-138.57612610 255.34750366]
[-153.39360046 257.68041992]
[-168.21107483 260.01330566]
[-177.30853271 272.93661499]
[-192.89366150 275.55953979]
[-205.72004700 266.32592773]
[-208.17803955 250.71395874]
[-198.80935669 237.98591614]
[-183.17227173 235.69311523]
[-170.54397583 245.19584656]
[-155.72650146 242.86293030]
[-140.90902710 240.53002930]
[-126.09155273 238.19712830]
[-111.27407837 235.86421204]
[-109.35682678 222.81645203]
[-103.80698395 210.82920837]
[-95.06953430 200.89302063]
[-83.85340881 193.83280945]
[-71.07399750 190.23941040]
[-57.77842712 190.42007446]
[-45.05976868 194.37234497]
[-33.96717453 201.78312683]
[-22.21519661 192.46159363]
[-10.46321964 183.14006042]
[1.28875816 173.81852722]
[13.04073620 164.49699402]
[12.22785282 149.64851379]
[20.41102982 137.01919556]
[34.62791061 131.56634521]
[49.50147247 135.57675171]
[61.25344849 126.25521088]
[73.00542450 116.93367767]
[84.75740051 107.61214447]
[87.90303040 92.94568634]
[81.00737762 79.62464905]
[74.11171722 66.30361938]
[60.89638138 57.60503006]
[61.91677475 42.74541855]
[47.82189560 34.36291504]
[48.30444336 17.97086906]
[62.86801529 10.43201160]
[76.53086090 19.50167274]
[75.23780823 35.84976196]
[87.95992279 43.59553909]
[87.43275452 59.40795898]
[94.32840729 72.72899628]
[101.22406006 86.05002594]
[97.67053223 71.47702789]
[104.80651855 58.28317642]
[118.94770813 53.28049469]
[132.79296875 59.05187607]
[139.19395447 72.61754608]
[134.84584045 86.97351074]
[121.99152374 94.70812225]
[136.30760193 90.23040009]
[150.62367249 85.75267792]
[164.93974304 81.27495575]
[179.25582886 76.79723358]
[184.30174255 62.24234009]
[196.80436707 53.55109406]
[211.84939575 53.88443756]
[223.67172241 62.90501022]
[237.98779297 58.42728806]
[252.30387878 53.94956589]
[266.61993408 49.47184372]
[280.93603516 44.99412155]
[295.21035767 40.38508606]
[309.44177246 35.64511871]
[323.67315674 30.90515518]
[337.90457153 26.16518974]
[352.13595581 21.42522430]
[359.32199097 15.72330189]
[366.67254639 16.73151207]
[380.98861694 12.25378895]
[395.30468750 7.77606726]
[409.62075806 3.29834509]
[423.80801392 -1.57214689]
[437.85568237 -6.83171034]
[451.90335083 -12.09127331]
[465.95101929 -17.35083771]
[479.99868774 -22.61040115]
[494.04635620 -27.86996269]
[498.05630493 -42.85995865]
[510.13250732 -52.60395050]
[525.63140869 -53.35517883]
[538.59332275 -44.82477570]
[544.03417969 -30.29286003]
[539.86187744 -15.34724903]
[527.68066406 -5.73483324]
[512.17456055 -5.15178394]
[499.30593872 -13.82229519]
[485.25827026 -8.56273174]
[471.21060181 -3.30316830]
[457.16293335 1.95639503]
[443.11526489 7.21595812]
[429.06759644 12.47552204]
[427.27798462 15.55519962]
[423.88861084 17.90646935]
[419.26510620 18.77820969]
[414.09848022 17.61441994]
[399.78240967 22.09214211]
[385.46633911 26.56986427]
[371.15026855 31.04758644]
[356.87591553 35.65662384]
[342.64453125 40.39659119]
[328.41311646 45.13655472]
[314.18173218 49.87651825]
[299.95031738 54.61648560]
[294.57739258 59.73297501]
[285.41375732 59.31019974]
[271.09765625 63.78792191]
[256.78158569 68.26564026]
[242.46551514 72.74336243]
[228.14944458 77.22108459]
[223.57411194 91.37044525]
[211.40039062 100.21716309]
[196.17367554 100.19898224]
[183.73355103 91.11330414]
[169.41746521 95.59102631]
[155.10139465 100.06874847]
[140.78532410 104.54647064]
[126.46924591 109.02419281]
[94.07894135 119.36412048]
[82.32696533 128.68565369]
[70.57498169 138.00718689]
[58.82300568 147.32872009]
[59.34238052 162.72471619]
[50.79641342 175.32708740]
[36.63587952 180.42054749]
[22.36227036 176.24896240]
[10.61029339 185.57051086]
[-1.14168394 194.89204407]
[-12.89366150 204.21357727]
[-24.64563942 213.53511047]
[-19.08331680 231.54765320]
[-21.12174988 250.24763489]
[-30.39374924 266.56729126]
[-45.34814072 277.84240723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[7 22]
[8 21]
[9 20]
[11 18]
[12 17]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[54 166]
[55 165]
[56 164]
[57 163]
[58 162]
[62 158]
[63 157]
[64 156]
[65 155]
[66 79]
[67 78]
[68 77]
[70 75]
[86 154]
[87 153]
[88 152]
[89 151]
[90 150]
[94 146]
[95 145]
[96 144]
[97 143]
[98 142]
[99 140]
[100 139]
[101 138]
[102 137]
[103 136]
[105 135]
[106 134]
[107 133]
[108 132]
[109 128]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
