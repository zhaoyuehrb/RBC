%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGCGCGCCGGCGGCGGGGCAGCCUCGCUCUGGCUCGCGCCGCGCCCCCGCGCCCAGUCCGCGCGUCAGUCGGUCCCUAGCGCGGCUGCGGGGCGGAGAGCUGCGGCUGGCCCAGCGCGCCCACCUGAGGAGGCGGCGGGGUCCGCAGGCGUCGCGGGACGAGGAGAUCGGAGCCGGGAGACUCGCGCAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[114.48907471 134.67556763]
[99.48954010 134.79409790]
[99.37078094 119.79502869]
[91.87101746 119.85453033]
[81.69337463 130.87339783]
[71.51573181 141.89228821]
[61.33809280 152.91116333]
[51.16044998 163.93003845]
[47.48065948 179.31735229]
[33.16133118 183.41687012]
[22.98368835 194.43574524]
[12.80604744 205.45462036]
[2.62840605 216.47349548]
[-7.54923534 227.49237061]
[-11.07837772 235.92936707]
[-17.97683716 238.60371399]
[-28.32802200 249.45971680]
[-38.67920685 260.31573486]
[-49.03039169 271.17175293]
[-59.38157654 282.02774048]
[-69.73276520 292.88375854]
[-80.08394623 303.73977661]
[-86.63825989 319.37554932]
[-103.47739410 317.40579224]
[-106.24615479 300.67944336]
[-90.93995667 293.38858032]
[-80.58877563 282.53256226]
[-70.23758698 271.67657471]
[-59.88640213 260.82055664]
[-49.53521729 249.96453857]
[-39.18403244 239.10853577]
[-28.83284760 228.25251770]
[-18.56811142 217.31472778]
[-8.39046955 206.29585266]
[1.78717160 195.27697754]
[11.96481323 184.25810242]
[22.14245415 173.23922729]
[25.09427071 158.64004517]
[40.14157486 153.75239563]
[50.31921387 142.73352051]
[60.49685669 131.71464539]
[70.67449951 120.69576263]
[80.85214233 109.67688751]
[80.97113800 94.67736053]
[70.96960449 83.49839020]
[60.96806717 72.31942749]
[50.87816238 61.22015762]
[40.70051956 50.20128250]
[30.43578529 39.26349258]
[15.31282806 34.61518860]
[12.12975216 20.06467819]
[1.77856708 9.20866871]
[-8.57261848 -1.64734209]
[-18.92380333 -12.50335312]
[-34.04676056 -17.15165901]
[-37.22983551 -31.70216751]
[-47.58102036 -42.55817795]
[-58.01800537 -53.33172989]
[-68.54013062 -64.02214050]
[-79.06224823 -74.71255493]
[-87.32176208 -78.63914490]
[-89.66483307 -85.65704346]
[-100.01601410 -96.51305389]
[-110.36720276 -107.36906433]
[-120.71838379 -118.22507477]
[-131.06956482 -129.08108521]
[-141.42076111 -139.93708801]
[-155.43600464 -134.11154175]
[-170.60937500 -133.74617004]
[-184.88877869 -138.89039612]
[-196.34303284 -148.84852600]
[-203.42308044 -162.27377319]
[-205.17137146 -177.35050964]
[-201.35147095 -192.03971863]
[-192.47999573 -204.35481262]
[-179.75674438 -212.63026428]
[-164.90240479 -215.74688721]
[-149.92593384 -213.28320312]
[-136.85276794 -205.57237244]
[-127.45094299 -193.65725708]
[-122.99198151 -179.14926147]
[-124.07891083 -164.01046753]
[-130.56474304 -150.28828430]
[-120.21356201 -139.43226624]
[-109.86237335 -128.57626343]
[-99.51119232 -117.72024536]
[-89.16000366 -106.86423492]
[-78.80882263 -96.00822449]
[-68.37184143 -85.23468018]
[-57.84971619 -74.54426575]
[-47.32759094 -63.85385132]
[-40.38756943 -61.28929520]
[-36.72500992 -52.90936279]
[-26.37382507 -42.05335236]
[-11.99125481 -38.18154144]
[-8.06779289 -22.85453796]
[2.28339243 -11.99852753]
[12.63457775 -1.14251673]
[22.98576355 9.71349430]
[37.36833191 13.58530521]
[41.29179382 28.91230774]
[48.19025421 31.58665085]
[51.71939468 40.02363968]
[61.89703751 51.04251480]
[68.75219727 53.82596970]
[72.14703369 62.31789017]
[82.14856720 73.49685669]
[92.15010071 84.67582703]
[107.05767822 86.33840179]
[119.27632141 77.63754272]
[126.02953339 63.33003998]
[140.88493347 62.25011826]
[153.10357666 53.54926300]
[165.32221985 44.84841156]
[177.54086304 36.14755630]
[189.75949097 27.44670296]
[196.51271057 13.13919830]
[211.36811829 12.05927563]
[223.58674622 3.35842180]
[228.76904297 -4.17693186]
[236.06898499 -5.38173437]
[248.42413330 -13.88763237]
[260.77929688 -22.39352989]
[273.13442993 -30.89942741]
[276.12667847 -46.18616486]
[288.77770996 -54.63635254]
[303.33285522 -51.68951035]
[309.88870239 -66.72122955]
[326.21261597 -68.29041290]
[335.51190186 -54.78281784]
[328.22027588 -40.09390259]
[311.83874512 -39.33436203]
[309.39700317 -24.68603325]
[296.98828125 -15.88383961]
[281.64031982 -18.54427910]
[269.28518677 -10.03838158]
[256.93002319 -1.53248346]
[244.57489014 6.97341442]
[232.28761292 15.57706070]
[220.06896973 24.27791405]
[214.18971252 37.96307373]
[198.46034241 39.66534042]
[186.24171448 48.36619568]
[174.02307129 57.06705093]
[161.80442810 65.76790619]
[149.58578491 74.46875763]
[143.70654297 88.15391541]
[127.97717285 89.85618591]
[115.75853729 98.55703735]
[124.81237793 102.29652405]
[132.72607422 109.26535034]
[143.07727051 120.12136078]
[153.42845154 130.97737122]
[163.77963257 141.83337402]
[174.13082886 152.68939209]
[189.25378418 157.33769226]
[192.43685913 171.88819885]
[202.78804016 182.74421692]
[213.13922119 193.60021973]
[218.16891479 195.07408142]
[221.76487732 198.03799438]
[223.59910583 201.69346619]
[223.70936584 205.22776794]
[233.53227234 216.56401062]
[243.35517883 227.90025330]
[253.17810059 239.23649597]
[268.21612549 236.44273376]
[282.53887939 241.51766968]
[292.33328247 253.00401306]
[295.04510498 267.75195312]
[290.04452515 281.78262329]
[299.86743164 293.11889648]
[309.69036865 304.45513916]
[325.35610962 309.30450439]
[328.72491455 325.35391235]
[316.33126831 336.09307861]
[300.92468262 330.47445679]
[298.35412598 314.27804565]
[288.53118896 302.94180298]
[278.70828247 291.60556030]
[264.10876465 294.55844116]
[249.89686584 289.77539062]
[239.92132568 278.44598389]
[236.93638611 263.54678345]
[241.84185791 249.05941772]
[232.01893616 237.72317505]
[222.19602966 226.38691711]
[212.37312317 215.05067444]
[202.28321838 203.95141602]
[191.93202209 193.09539795]
[181.58084106 182.23939514]
[167.19827271 178.36758423]
[163.27481079 163.04057312]
[152.92362976 152.18457031]
[142.57244873 141.32855225]
[132.22125244 130.47254944]
[121.87007141 119.61653137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 43]
[5 42]
[6 41]
[7 40]
[8 39]
[10 37]
[11 36]
[12 35]
[13 34]
[14 33]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[44 108]
[45 107]
[46 106]
[47 104]
[48 103]
[49 101]
[51 99]
[52 98]
[53 97]
[54 96]
[56 94]
[57 93]
[58 91]
[59 90]
[60 89]
[62 88]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[109 149]
[110 148]
[112 146]
[113 145]
[114 144]
[115 143]
[116 142]
[118 140]
[119 139]
[121 138]
[122 137]
[123 136]
[124 135]
[127 132]
[151 197]
[152 196]
[153 195]
[154 194]
[155 193]
[157 191]
[158 190]
[159 189]
[163 188]
[164 187]
[165 186]
[166 185]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
