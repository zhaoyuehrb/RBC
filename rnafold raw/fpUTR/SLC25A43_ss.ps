%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGGGCCCGCCCCAUGCCGGGCGGGGCCUGGGGCCCGCCACCUCCGCCCGUGGCCGGAGAGCCCCAGGCCCGAGCCACGCGGUCUUCCGGGCCCGGGUCGGGGCUCG\
) } def
/len { sequence length } bind def

/coor [
[93.53616333 124.57664490]
[83.08039856 118.96100616]
[75.25815582 132.71321106]
[60.36364365 132.65971375]
[47.51840973 140.40567017]
[34.67317581 148.15164185]
[21.82793808 155.89759827]
[8.98270321 163.64355469]
[-3.86253190 171.38952637]
[-16.70776749 179.13548279]
[-29.44108391 187.06407166]
[-42.05988693 195.17369080]
[-54.67869186 203.28330994]
[-67.29749298 211.39291382]
[-70.41160583 226.88735962]
[-83.61594391 235.57189941]
[-99.07659912 232.29414368]
[-107.62104034 218.99871826]
[-104.18000793 203.57359314]
[-90.79499817 195.17018127]
[-75.40710449 198.77410889]
[-62.78830338 190.66450500]
[-50.16949844 182.55488586]
[-37.55069733 174.44528198]
[-33.56594086 168.08692932]
[-24.45372963 166.29025269]
[-11.60849380 158.54428101]
[1.23674166 150.79832458]
[14.08197689 143.05236816]
[26.92721176 135.30639648]
[39.77244949 127.56044006]
[52.61768341 119.81447601]
[59.52114868 106.61631775]
[75.33443451 106.11576843]
[75.72164917 92.49303436]
[83.09127808 81.02928925]
[76.86004639 67.38481140]
[64.08915710 58.04592514]
[65.84014893 43.25460052]
[59.60892487 29.61011887]
[53.37770081 15.96563911]
[47.14647675 2.32115912]
[40.91524887 -11.32332039]
[25.68106461 -14.27276421]
[15.11462021 -25.63629723]
[13.27892876 -41.04440689]
[20.87985229 -54.57236099]
[34.99468231 -61.01839066]
[50.19597244 -57.90385818]
[60.63852310 -46.42636871]
[62.30695724 -30.99925041]
[54.55973053 -17.55454636]
[60.79095459 -3.91006589]
[67.02217865 9.73441410]
[73.25340271 23.37889481]
[79.48463440 37.02337265]
[91.80982971 45.38631821]
[90.50453186 61.15358734]
[96.73575592 74.79806519]
[114.93706512 79.44089508]
[124.97717285 95.31665802]
[139.87939453 97.02652740]
[154.78161621 98.73639679]
[169.68385315 100.44626617]
[184.58607483 102.15614319]
[199.48829651 103.86601257]
[214.39053345 105.57588196]
[223.42565918 103.42485046]
[229.69166565 107.55327606]
[244.53898621 109.68800354]
[259.38632202 111.82272339]
[274.23364258 113.95745087]
[289.08096313 116.09217072]
[303.92828369 118.22689056]
[318.68911743 112.53231812]
[330.18569946 122.00214386]
[345.03302002 124.13686371]
[359.88034058 126.27158356]
[365.00100708 124.20155334]
[369.88827515 124.39029694]
[373.68777466 126.34012604]
[375.88534546 129.27735901]
[390.49554443 132.67480469]
[405.10571289 136.07226562]
[420.62997437 130.78739929]
[432.78900146 141.79148865]
[429.07464600 157.76446533]
[413.30792236 162.27468872]
[401.70825195 150.68243408]
[387.09808350 147.28498840]
[372.48791504 143.88754272]
[357.74563599 141.11891174]
[342.89831543 138.98419189]
[328.05099487 136.84945679]
[314.35214233 142.69673157]
[301.79354858 133.07421875]
[286.94622803 130.93949890]
[272.09890747 128.80476379]
[257.25158691 126.67004395]
[242.40426636 124.53532410]
[227.55694580 122.40060425]
[212.68064880 120.47811127]
[197.77842712 118.76823425]
[182.87620544 117.05836487]
[167.97398376 115.34849548]
[153.07174683 113.63862610]
[138.16952515 111.92874908]
[123.26730347 110.21887970]
[116.08921814 119.67053223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[4 32]
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[10 26]
[11 24]
[12 23]
[13 22]
[14 21]
[36 59]
[37 58]
[39 56]
[40 55]
[41 54]
[42 53]
[43 52]
[61 108]
[62 107]
[63 106]
[64 105]
[65 104]
[66 103]
[67 102]
[69 101]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[76 94]
[77 93]
[78 92]
[82 91]
[83 90]
[84 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
