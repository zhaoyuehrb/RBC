%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUGCUAGACGCGGGCGUGAAGACAGUGUCGCCAUGUUGAUAUCUGGCGUCGCCGUGUAGGGGAAGGGAGAGGGCGGCUGACUAGCUACCCGUAAUUUCGGCUCCUGUGCGCAAGUGCGGAAGUGCGCUGGCCAGGAGCGUGAUCGGUUUCCGGUCAGUGGUGUGGUACCGGGUACCCGGAGACGUGUAUCGGACGGUGGGCCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[104.17063904 153.49334717]
[94.23851013 153.34545898]
[84.50383759 151.36926270]
[75.30027008 147.63250732]
[66.94322205 142.26324463]
[56.14107132 152.67062378]
[45.33891296 163.07798767]
[34.53675842 173.48536682]
[23.73460007 183.89273071]
[12.93244362 194.30010986]
[16.51579094 209.16976929]
[12.20363998 223.74037170]
[1.25009203 234.12719727]
[-13.33422661 237.61340332]
[-27.60920715 233.36009216]
[-38.41136169 243.76747131]
[-49.21352005 254.17485046]
[-60.01567459 264.58221436]
[-70.81783295 274.98959351]
[-81.61998749 285.39697266]
[-82.07852936 300.96704102]
[-93.18170929 311.36773682]
[-108.02257538 310.83462524]
[-118.82472992 321.24200439]
[-129.62689209 331.64938354]
[-136.83824158 346.99319458]
[-153.57872009 344.31124878]
[-155.63581848 327.48257446]
[-140.03425598 320.84722900]
[-129.23210144 310.43984985]
[-118.42994690 300.03247070]
[-118.41039276 285.18203735]
[-107.60372162 274.47360229]
[-92.02735901 274.59481812]
[-81.22520447 264.18743896]
[-70.42304993 253.78005981]
[-59.62089157 243.37269592]
[-48.81873703 232.96531677]
[-38.01657867 222.55793762]
[-41.73570251 208.13456726]
[-37.70917130 193.69009399]
[-26.92191315 183.13066101]
[-12.20094109 179.36372375]
[2.52507067 183.49795532]
[13.32722664 173.09057617]
[24.12938309 162.68321228]
[34.93154144 152.27583313]
[45.73369598 141.86846924]
[56.53585434 131.46109009]
[48.82432938 116.12399292]
[46.35126877 99.13640594]
[31.53420067 96.80091858]
[16.69763565 102.29518890]
[5.33027077 92.67061615]
[-9.48679733 90.33513641]
[-23.25269508 98.57404327]
[-38.22589874 92.81359100]
[-42.92024612 77.47270966]
[-33.73463440 64.31961060]
[-17.71548271 63.44421768]
[-7.15130997 75.51806641]
[7.66575766 77.85355377]
[21.44250488 72.19223785]
[33.86968613 81.98384857]
[48.68675613 84.31933594]
[53.86925125 72.59769440]
[61.68370438 62.43946838]
[52.54489899 50.54483414]
[43.40609741 38.65019989]
[34.26729584 26.75556946]
[15.40258598 25.01286697]
[3.99792409 10.28715515]
[6.92760992 -7.78305912]
[-2.56128812 -19.40032196]
[-12.05018616 -31.01758575]
[-26.77249908 -36.81103897]
[-28.83126831 -51.56267166]
[-38.32016754 -63.17993546]
[-47.80906296 -74.79720306]
[-57.29796219 -86.41445923]
[-72.81597137 -91.71762848]
[-75.71637726 -107.85825348]
[-63.01549530 -118.23223877]
[-47.77890396 -112.16772461]
[-45.68069839 -95.90335846]
[-36.19180298 -84.28609467]
[-26.70290375 -72.66883087]
[-17.21400452 -61.05157089]
[-3.17040181 -56.08906174]
[-0.43292326 -40.50648499]
[9.05597496 -28.88922119]
[18.54487419 -17.27195740]
[29.87460899 -18.61482811]
[40.55625916 -14.27684689]
[47.89261246 -5.22854090]
[49.97125244 6.35507536]
[46.16193008 17.61676598]
[55.30073166 29.51139832]
[64.43953705 41.40603256]
[73.57833862 53.30066299]
[94.81536102 46.59539413]
[116.94557953 49.09047699]
[123.62577820 35.66010284]
[130.30596924 22.22972488]
[136.98616028 8.79934883]
[143.66636658 -4.63102674]
[150.34655762 -18.06140327]
[157.02674866 -31.49177933]
[158.04661560 -40.56909561]
[163.90768433 -45.07126999]
[170.78709412 -58.40069962]
[171.94200134 -67.46183014]
[177.86946106 -71.87623596]
[184.94656372 -85.10176849]
[186.23623657 -94.14469147]
[192.22875977 -98.47036743]
[199.50198364 -111.58905792]
[206.77522278 -124.70775604]
[214.04844666 -137.82644653]
[221.32167053 -150.94514465]
[220.49598694 -167.32348633]
[234.41223145 -175.99931335]
[248.75459290 -168.04765320]
[248.76887512 -151.64851379]
[234.44036865 -143.67190552]
[227.16714478 -130.55322266]
[219.89390564 -117.43452454]
[212.62068176 -104.31583405]
[205.34745789 -91.19713593]
[198.17208862 -78.02465820]
[191.09498596 -64.79913330]
[184.11653137 -51.52128601]
[177.23712158 -38.19185638]
[170.45712280 -24.81158447]
[163.77693176 -11.38120842]
[157.09674072 2.04916763]
[150.41653442 15.47954369]
[143.73634338 28.90991974]
[137.05615234 42.34029388]
[130.37596130 55.77067184]
[141.80700684 66.36808014]
[149.70967102 79.80392456]
[164.25929260 76.15583801]
[178.80889893 72.50775146]
[193.35852051 68.85966492]
[207.90814209 65.21157837]
[222.45776367 61.56348801]
[237.00738525 57.91540146]
[250.90043640 48.19843292]
[264.08364868 58.85861588]
[257.48953247 74.47764587]
[240.65547180 72.46501923]
[226.10585022 76.11310577]
[211.55622864 79.76119232]
[197.00660706 83.40928650]
[182.45700073 87.05737305]
[167.90737915 90.70545959]
[153.35775757 94.35354614]
[153.06524658 107.93800354]
[149.36972046 121.01339722]
[142.50816345 132.74122620]
[157.68862915 137.19812012]
[161.05526733 151.70726013]
[171.54277039 162.43164062]
[182.03027344 173.15602112]
[192.51777649 183.88040161]
[203.00527954 194.60478210]
[213.49278259 205.32916260]
[224.13877869 215.89620972]
[234.94094849 226.30357361]
[245.74310303 236.71095276]
[256.54525757 247.11831665]
[267.57711792 257.28186035]
[278.83322144 267.19653320]
[290.08932495 277.11117554]
[301.34542847 287.02581787]
[312.60150146 296.94046021]
[328.07144165 300.25595093]
[332.50787354 314.47448730]
[343.76397705 324.38916016]
[359.93899536 327.09115601]
[365.43228149 342.54287720]
[354.59283447 354.84890747]
[338.57131958 351.34985352]
[333.84933472 335.64523315]
[322.59323120 325.73059082]
[307.92843628 323.12426758]
[302.68685913 308.19656372]
[291.43075562 298.28192139]
[280.17468262 288.36727905]
[268.91857910 278.45260620]
[257.66247559 268.53796387]
[254.13943481 268.39486694]
[250.51066589 266.53823853]
[247.58079529 262.93695068]
[246.13787842 257.92047119]
[235.33572388 247.51310730]
[224.53356934 237.10572815]
[213.73141479 226.69836426]
[209.02444458 225.88999939]
[204.77529907 222.11616516]
[202.76840210 215.81665039]
[192.28089905 205.09226990]
[181.79339600 194.36788940]
[171.30589294 183.64352417]
[160.81838989 172.91914368]
[150.33088684 162.19476318]
[135.90055847 158.50494385]
[131.78378296 143.22872925]
[123.27058411 148.34678650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 49]
[6 48]
[7 47]
[8 46]
[9 45]
[10 44]
[15 39]
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[23 31]
[24 30]
[25 29]
[51 65]
[52 64]
[54 62]
[55 61]
[67 100]
[68 99]
[69 98]
[70 97]
[73 92]
[74 91]
[75 90]
[77 88]
[78 87]
[79 86]
[80 85]
[102 140]
[103 139]
[104 138]
[105 137]
[106 136]
[107 135]
[108 134]
[110 133]
[111 132]
[113 131]
[114 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
[142 158]
[143 157]
[144 156]
[145 155]
[146 154]
[147 153]
[148 152]
[161 209]
[163 207]
[164 206]
[165 205]
[166 204]
[167 203]
[168 202]
[169 199]
[170 198]
[171 197]
[172 196]
[173 192]
[174 191]
[175 190]
[176 189]
[177 188]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
