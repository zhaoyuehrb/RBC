%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCGGCAUUCUGGCGCGGAGCGGAGCGGCGGCGGGCGCAGCUAGCGGGUCGGCCGCGGAGCGGAGGUGCAGCUCGGCUUCCCCCGGCACCCCUCCCCCUCGGGCGCCAGCCCCACCCCUCCGCCGGCCGGGCCGACCCCGCCGUACUAUCCCCUGCGGCGCGAGCCCGGGGCGGCUCCAAGCGCCCCCCAGCAGACCCCCAUC\
) } def
/len { sequence length } bind def

/coor [
[85.17604828 627.99523926]
[85.10328674 612.19110107]
[96.28623199 601.02337646]
[96.05858612 586.02514648]
[95.83094025 571.02685547]
[92.58518982 564.38439941]
[95.71539307 555.79962158]
[95.71539307 540.79962158]
[85.03451538 530.48193359]
[84.82083893 515.26983643]
[95.71539307 504.13671875]
[87.97808838 491.40942383]
[95.71539307 477.60925293]
[95.71539307 462.60925293]
[95.71539307 447.60925293]
[95.71539307 432.60925293]
[92.57081604 425.91833496]
[95.83094025 417.38204956]
[88.28768158 404.53881836]
[96.23352814 390.85766602]
[96.46117401 375.85937500]
[88.91791534 363.01617432]
[96.86375427 349.33499146]
[97.09140015 334.33673096]
[97.09140015 319.33673096]
[96.86375427 304.33843994]
[96.63611603 289.34017944]
[96.40847015 274.34191895]
[96.18082428 259.34362793]
[88.25126648 246.73526001]
[95.77824402 232.81924438]
[95.55059814 217.82096863]
[84.71437073 207.66658020]
[84.26985168 192.45944214]
[94.99419403 181.16226196]
[94.76655579 166.16398621]
[94.53890991 151.16571045]
[94.31126404 136.16743469]
[94.08362579 121.16916656]
[82.23548889 111.97016907]
[67.64861298 115.46631622]
[58.06900406 128.33529663]
[42.03068924 128.72531128]
[31.83689499 116.33716583]
[35.30742264 100.67398834]
[49.77997971 93.75122833]
[64.15246582 100.87943268]
[78.73934174 97.38329315]
[86.43562317 84.50822449]
[82.60833740 70.00471497]
[78.78105164 55.50120163]
[74.95376587 40.99768829]
[71.12648010 26.49417305]
[67.29920197 11.99066067]
[63.47191620 -2.51285267]
[59.64463043 -17.01636505]
[55.81734848 -31.51987839]
[50.60032654 -39.02183151]
[52.04381561 -46.27256775]
[48.43708038 -60.83249283]
[44.83034515 -75.39241791]
[30.20726776 -89.26489258]
[36.35898590 -107.59446716]
[32.31203461 -122.03822327]
[28.26508331 -136.48197937]
[24.21813202 -150.92575073]
[20.17118073 -165.36950684]
[15.90549278 -179.75018311]
[11.42205334 -194.06446838]
[6.93861389 -208.37875366]
[2.45517445 -222.69303894]
[-11.26898766 -230.06088257]
[-15.61192036 -244.64146423]
[-8.50323009 -257.67996216]
[-12.98666954 -271.99423218]
[-17.47010994 -286.30853271]
[-23.02317047 -293.56524658]
[-21.91119194 -300.87417603]
[-26.17687798 -315.25485229]
[-30.44256401 -329.63552856]
[-41.38864899 -336.46188354]
[-44.64435959 -348.52978516]
[-38.99059677 -359.22601318]
[-43.03754807 -373.66976929]
[-47.08449936 -388.11352539]
[-60.57873535 -395.89450073]
[-64.47716522 -410.60015869]
[-56.97604370 -423.41690063]
[-61.02299500 -437.86065674]
[-75.92250824 -441.58892822]
[-86.95057678 -452.27899170]
[-91.14069366 -467.05526733]
[-87.36573792 -481.94302368]
[-76.64116669 -492.93753052]
[-61.85182190 -497.08132935]
[-46.97597122 -493.25970459]
[-36.01514053 -482.50073242]
[-31.91773796 -467.69848633]
[-35.78594589 -452.83468628]
[-46.57923508 -441.90762329]
[-42.53228378 -427.46386719]
[-29.46380997 -420.41046143]
[-25.15386963 -405.82006836]
[-32.64074326 -392.16049194]
[-28.59379005 -377.71673584]
[-24.54683876 -363.27297974]
[-11.35463715 -351.70205688]
[-16.06188583 -333.90121460]
[-11.79619980 -319.52053833]
[-7.53051281 -305.13986206]
[-3.15582371 -290.79196167]
[1.32761586 -276.47769165]
[5.81105518 -262.16339111]
[19.08757210 -255.50985718]
[23.83832932 -241.05699158]
[16.76946068 -227.17648315]
[21.25289917 -212.86219788]
[25.73633957 -198.54791260]
[30.21977806 -184.23362732]
[33.96430969 -181.26464844]
[35.88166428 -175.91061401]
[34.61494064 -169.41645813]
[38.66189194 -154.97270203]
[42.70884323 -140.52893066]
[46.75579453 -126.08517456]
[50.80274582 -111.64141846]
[60.12725067 -107.45273590]
[65.72301483 -98.63702393]
[65.53741455 -87.97731781]
[59.39027405 -78.99915314]
[62.99700928 -64.43923187]
[66.60374451 -49.87930298]
[70.32086182 -35.34716415]
[74.14814758 -20.84365082]
[77.97542572 -6.34013700]
[81.80271149 8.16337585]
[85.62999725 22.66688919]
[89.45728302 37.17040253]
[93.28456879 51.67391586]
[97.11184692 66.17742920]
[100.93913269 80.68093872]
[113.19367981 89.33114624]
[128.14144897 88.08051300]
[143.08923340 86.82988739]
[158.03700256 85.57925415]
[172.98477173 84.32862854]
[187.93254089 83.07799530]
[202.88032532 81.82736206]
[210.80714417 68.48775482]
[225.07417297 62.38599777]
[240.19544983 65.86833954]
[250.35652161 77.59574890]
[251.65026855 93.05879211]
[243.57920837 106.31162262]
[229.24682617 112.25825500]
[214.16421509 108.61208344]
[204.13095093 96.77513885]
[189.18318176 98.02576447]
[174.23541260 99.27639771]
[159.28762817 100.52703094]
[144.33985901 101.77765656]
[129.39208984 103.02828979]
[114.44431305 104.27892303]
[114.87089539 108.24800110]
[114.18315887 112.56051636]
[112.26414490 116.90574646]
[109.08189392 120.94152832]
[109.30953979 135.93980408]
[109.53718567 150.93806458]
[109.76482391 165.93634033]
[109.99246979 180.93461609]
[121.05472565 191.90112305]
[121.07192993 207.11474609]
[110.54887390 217.59333801]
[110.77651215 232.59159851]
[118.72235870 246.27276611]
[111.17910004 259.11599731]
[111.40674591 274.11425781]
[111.63438416 289.11254883]
[111.86203003 304.11080933]
[112.08966827 319.10906982]
[115.15090179 324.97488403]
[114.83528137 330.65310669]
[112.08966827 334.56436157]
[111.86203003 349.56265259]
[119.38900757 363.47863770]
[111.45944214 376.08703613]
[111.23180389 391.08529663]
[118.75877380 405.00131226]
[110.82921600 417.60968018]
[110.71539307 432.60925293]
[110.71539307 447.60925293]
[110.71539307 462.60925293]
[110.71539307 477.60925293]
[118.45269012 491.40942383]
[110.71539307 504.13671875]
[121.60993958 515.26983643]
[121.39626312 530.48193359]
[110.71539307 540.79962158]
[110.71539307 555.79962158]
[110.82921600 570.79919434]
[111.05685425 585.79748535]
[111.28450012 600.79577637]
[122.80122375 611.61889648]
[123.20812988 627.41796875]
[112.26381683 638.81964111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 203]
[4 202]
[5 201]
[7 200]
[8 199]
[11 196]
[13 194]
[14 193]
[15 192]
[16 191]
[18 190]
[20 188]
[21 187]
[23 185]
[24 184]
[25 181]
[26 180]
[27 179]
[28 178]
[29 177]
[31 175]
[32 174]
[35 171]
[36 170]
[37 169]
[38 168]
[39 167]
[40 48]
[41 47]
[49 141]
[50 140]
[51 139]
[52 138]
[53 137]
[54 136]
[55 135]
[56 134]
[57 133]
[59 132]
[60 131]
[61 130]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[68 119]
[69 118]
[70 117]
[71 116]
[74 113]
[75 112]
[76 111]
[78 110]
[79 109]
[80 108]
[83 106]
[84 105]
[85 104]
[88 101]
[89 100]
[142 163]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
