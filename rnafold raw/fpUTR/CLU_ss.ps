%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUCCGCGGCAUUCUUUGGGCGUGAGUCAUGCAGGUUUGCAGCCAGCCCCAAAGGGGGUGUGUGCGCGAGCAGAGCGCUAUAAAUACGGCGCCUCCCAGUGCCCACAACGCGGCGUCGCCAGGAGGAGCGCGCGGGCACAGGGUGCCGCUGACCGAGGCGUGCAAAGACUCCAGAAUUGGAGGC\
) } def
/len { sequence length } bind def

/coor [
[79.28400421 416.50213623]
[76.03399658 431.14581299]
[72.78398132 445.78952026]
[81.48285675 458.98440552]
[78.22190094 474.44860840]
[64.93577576 483.00747681]
[49.50690842 479.58322144]
[41.08897400 466.20733643]
[44.67617798 450.81555176]
[58.14030075 442.53948975]
[61.39031219 427.89581299]
[64.64032745 413.25213623]
[77.38045502 398.43829346]
[92.70338440 392.91049194]
[105.86438751 396.02035522]
[105.36048889 381.02883911]
[104.85658264 366.03729248]
[104.35267639 351.04577637]
[103.84877777 336.05422974]
[103.34487152 321.06271362]
[95.18437958 308.60253906]
[102.45372009 294.55023193]
[101.94981384 279.55868530]
[101.44590759 264.56716919]
[100.94200897 249.57562256]
[86.84435272 237.92146301]
[85.70144653 219.34666443]
[98.70182037 205.58843994]
[97.69458008 190.62228394]
[96.68733978 175.65614319]
[95.68010712 160.69000244]
[92.08650208 154.21383667]
[94.78380585 145.46437073]
[94.02812958 130.48341370]
[73.93964386 122.47074127]
[62.28163910 101.72848511]
[66.54463959 76.11695862]
[52.11725616 72.01201630]
[37.68987274 67.90706635]
[23.26248741 63.80212402]
[8.83510208 59.69717789]
[-5.59228277 55.59223175]
[-14.72420502 56.25305557]
[-20.22646523 51.29524994]
[-34.58285522 46.94851685]
[-48.97525024 42.72252655]
[-63.40263367 38.61758423]
[-77.86399078 34.63397217]
[-92.35829926 30.77197266]
[-106.85260773 26.90997505]
[-121.34691620 23.04797935]
[-135.84121704 19.18598175]
[-151.52622986 23.97269249]
[-163.32788086 12.58616352]
[-159.10565186 -3.26012349]
[-143.20300293 -7.26486540]
[-131.97923279 4.69167280]
[-117.48491669 8.55366993]
[-102.99060822 12.41566753]
[-88.49629974 16.27766418]
[-74.00199127 20.13966179]
[-66.71392822 18.82101822]
[-59.29769135 24.19019890]
[-44.87030411 28.29514313]
[-37.56111526 27.09911919]
[-30.23612213 32.59212494]
[-15.87973213 36.93886185]
[-1.48733783 41.16484833]
[12.94004726 45.26979446]
[27.36743164 49.37473679]
[41.79481506 53.47968292]
[56.22220230 57.58462906]
[70.64958191 61.68957138]
[81.21154785 51.03851700]
[76.98555756 36.64612198]
[71.55427551 29.27524567]
[72.81165314 21.97636223]
[68.82804108 7.51500463]
[64.84442902 -6.94635201]
[60.86081696 -21.40770912]
[56.87720490 -35.86906433]
[42.30536270 -41.20208740]
[33.67913437 -54.10044861]
[34.31547546 -69.60446930]
[43.96969986 -81.75254059]
[58.92956543 -85.87347412]
[73.44269562 -80.38269043]
[81.92849731 -67.39151001]
[81.12400055 -51.89530182]
[71.33856201 -39.85267639]
[75.32217407 -25.39132118]
[79.30578613 -10.92996311]
[83.28939819 3.53139305]
[87.27301025 17.99275017]
[91.37795258 32.42013550]
[95.60394287 46.81253052]
[109.84624481 51.51962280]
[121.81650543 42.48010635]
[133.78675842 33.44058609]
[140.13677979 18.94962502]
[154.95611572 17.45422935]
[166.92637634 8.41470909]
[178.89663696 -0.62481040]
[190.86689758 -9.66432953]
[202.83715820 -18.70384979]
[214.80741882 -27.74336815]
[214.85632324 -37.20943832]
[219.20231628 -45.46363068]
[226.75286865 -50.70356750]
[235.73260498 -51.85177231]
[244.10003662 -48.77524948]
[256.51049805 -57.20024490]
[268.92092896 -65.62524414]
[281.33139038 -74.05023956]
[288.95523071 -90.80146790]
[306.48452759 -91.41747284]
[313.31774902 -105.68693542]
[328.17895508 -106.68365479]
[340.44613647 -115.31594849]
[344.60064697 -130.81173706]
[359.36306763 -137.09274292]
[373.40890503 -129.34071350]
[375.96340942 -113.50233459]
[365.06698608 -101.72747040]
[349.07843018 -103.04877472]
[336.81124878 -94.41648102]
[330.85546875 -80.76445770]
[315.11682129 -79.15029907]
[312.72967529 -67.27828979]
[302.56219482 -59.98853302]
[289.75640869 -61.63978195]
[277.34594727 -53.21478653]
[264.93548584 -44.78979111]
[252.52502441 -36.36479187]
[245.22326660 -17.07250404]
[223.84693909 -15.77311039]
[211.87667847 -6.73359108]
[199.90641785 2.30592847]
[187.93615723 11.34544849]
[175.96589661 20.38496780]
[163.99563599 29.42448807]
[158.50181580 43.26888275]
[142.82627869 45.41084290]
[130.85601807 54.45036316]
[118.88576508 63.48988342]
[131.83308411 77.30138397]
[136.69686890 94.62491608]
[133.20347595 111.31942749]
[122.98053741 123.78259277]
[109.00907898 129.72773743]
[109.76475525 144.70869446]
[110.64624786 159.68276978]
[111.65348816 174.64891052]
[112.66072845 189.61505127]
[113.66796875 204.58119202]
[123.99172974 210.52667236]
[130.09275818 220.61932373]
[130.54974365 232.28376770]
[125.36468506 242.60829163]
[115.93354034 249.07171631]
[116.43744659 264.06326294]
[116.94134521 279.05477905]
[117.44525146 294.04632568]
[125.64178467 307.57879639]
[118.33640289 320.55880737]
[118.84030914 335.55032349]
[119.34421539 350.54187012]
[119.84811401 365.53338623]
[120.35202026 380.52493286]
[120.85592651 395.51644897]
[123.48822021 410.28369141]
[128.19531250 424.52600098]
[132.90240479 438.76831055]
[137.60949707 453.01062012]
[142.31660461 467.25289917]
[154.91204834 477.75466919]
[151.84877014 493.86517334]
[136.27798462 499.01132202]
[124.21759796 487.89920044]
[128.07429504 471.95999146]
[123.36719513 457.71771240]
[118.66010284 443.47540283]
[113.95301056 429.23309326]
[109.24591064 414.99078369]
[101.75543213 415.36862183]
[94.91967010 428.72048950]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[15 170]
[16 169]
[17 168]
[18 167]
[19 166]
[20 165]
[22 163]
[23 162]
[24 161]
[25 160]
[28 155]
[29 154]
[30 153]
[31 152]
[33 151]
[34 150]
[37 73]
[38 72]
[39 71]
[40 70]
[41 69]
[42 68]
[44 67]
[45 66]
[46 64]
[47 63]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[74 96]
[75 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[97 145]
[98 144]
[99 143]
[101 141]
[102 140]
[103 139]
[104 138]
[105 137]
[106 136]
[111 134]
[112 133]
[113 132]
[114 131]
[116 128]
[118 126]
[119 125]
[171 184]
[172 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
