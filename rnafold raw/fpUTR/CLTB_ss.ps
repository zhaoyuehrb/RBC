%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCUCCUCCCGCCGCGGCGCCCGCACCGCAGUGACAGCCAGCCGGGCCCGGUGGCGGAGAGGAAGUGCGGUCCGCGCCAAGCCCGUCCCCGCCGACGCCGGCUCCCCCGCGGCUCGGGUGACAGCGUCGCGGCCGCCGGACGCAGCGCGGGGCAGGCGCGGGCAGAGCCGAGCGCAGCGGAGGCUCCGGCGGAGGCGCGGGGAAA\
) } def
/len { sequence length } bind def

/coor [
[-122.12342072 249.89299011]
[-135.44169617 256.79394531]
[-148.75997925 263.69494629]
[-162.07826233 270.59591675]
[-175.23599243 277.79827881]
[-188.22637939 285.29827881]
[-201.21675110 292.79827881]
[-214.20713806 300.29827881]
[-227.19752502 307.79827881]
[-240.13061523 315.39663696]
[-253.00567627 323.09289551]
[-265.88073730 330.78918457]
[-278.75579834 338.48547363]
[-291.63085938 346.18173218]
[-304.50592041 353.87802124]
[-317.38098145 361.57431030]
[-330.19729614 369.36807251]
[-342.95407104 377.25885010]
[-348.60836792 384.43698120]
[-355.96487427 385.17089844]
[-368.83993530 392.86718750]
[-381.71499634 400.56344604]
[-394.59005737 408.25973511]
[-407.46511841 415.95602417]
[-407.33566284 431.25079346]
[-414.82977295 444.46957397]
[-427.84765625 452.11160278]
[-442.84252930 452.21093750]
[-455.78662109 444.84097290]
[-468.66168213 452.53726196]
[-470.96429443 468.00439453]
[-482.70446777 478.33404541]
[-498.33889771 478.64892578]
[-510.48544312 468.80029297]
[-513.40887451 453.43841553]
[-505.72888184 439.81668091]
[-491.07168579 434.36685181]
[-476.35797119 439.66220093]
[-463.48287964 431.96591187]
[-463.84548950 417.07519531]
[-456.65814209 403.91470337]
[-443.76321411 396.06695557]
[-428.57177734 395.72506714]
[-415.16140747 403.08096313]
[-402.28634644 395.38467407]
[-389.41128540 387.68838501]
[-376.53622437 379.99212646]
[-363.66113281 372.29583740]
[-350.84484863 364.50207520]
[-338.08807373 356.61129761]
[-334.05197144 350.41720581]
[-325.07727051 348.69924927]
[-312.20220947 341.00296021]
[-299.32714844 333.30667114]
[-286.45208740 325.61041260]
[-273.57702637 317.91412354]
[-260.70196533 310.21783447]
[-247.82688904 302.52154541]
[-243.69725037 296.38943481]
[-234.69752502 294.80789185]
[-221.70713806 287.30789185]
[-208.71675110 279.80789185]
[-195.72637939 272.30789185]
[-182.73599243 264.80789185]
[-181.47537231 261.51181030]
[-178.55390930 258.66351318]
[-174.19985962 257.03768921]
[-168.97923279 257.27761841]
[-155.66094971 250.37666321]
[-142.34268188 243.47567749]
[-129.02439880 236.57470703]
[-115.97747803 229.17349243]
[-103.22069550 221.28269958]
[-90.46391296 213.39192200]
[-77.70713806 205.50112915]
[-64.95035553 197.61033630]
[-52.19357300 189.71955872]
[-39.43679428 181.82876587]
[-26.68001366 173.93797302]
[-23.52641106 157.41992188]
[-9.11911964 148.10891724]
[7.89350653 152.17553711]
[20.52906609 144.09205627]
[33.16462326 136.00857544]
[40.77704620 118.23590088]
[60.92401123 117.61965942]
[73.30842590 109.15642548]
[85.69284058 100.69319153]
[91.91821289 88.17375183]
[105.84393311 86.92239380]
[118.22834778 78.45915985]
[130.61276245 69.99592590]
[142.99717712 61.53269577]
[150.02546692 47.35829926]
[164.89897156 46.56550217]
[170.22068787 39.13745880]
[177.53616333 38.06948090]
[190.04759216 29.79517174]
[202.55902100 21.52086258]
[215.00729370 13.15185261]
[227.39170837 4.68862104]
[239.77612305 -3.77461028]
[252.16053772 -12.23784161]
[264.54495239 -20.70107269]
[276.92938232 -29.16430473]
[284.51181030 -45.94330597]
[302.04739380 -46.59354782]
[314.30194092 -55.24375153]
[326.55648804 -63.89395905]
[338.81103516 -72.54415894]
[351.06558228 -81.19436646]
[363.32012939 -89.84457397]
[375.37460327 -98.77149200]
[387.22274780 -107.97048950]
[399.07089233 -117.16949463]
[410.91903687 -126.36849213]
[413.30194092 -139.04672241]
[423.36230469 -146.46449280]
[435.38171387 -145.08325195]
[447.36810303 -154.10137939]
[459.35446167 -163.11952209]
[464.33258057 -170.78208923]
[471.59188843 -172.18191528]
[478.18676758 -186.56307983]
[493.02935791 -187.80691528]
[505.15121460 -196.64208984]
[517.27307129 -205.47727966]
[529.39489746 -214.31246948]
[541.51678467 -223.14765930]
[546.61065674 -230.73377991]
[553.89031982 -232.02328491]
[566.14489746 -240.67349243]
[578.39941406 -249.32369995]
[587.85272217 -263.39749146]
[603.99340820 -258.20965576]
[603.47650146 -241.26359558]
[587.04962158 -237.06915283]
[574.79510498 -228.41894531]
[562.54052734 -219.76873779]
[550.35198975 -211.02578735]
[538.23010254 -202.19061279]
[526.10827637 -193.35542297]
[513.98638916 -184.52023315]
[501.86453247 -175.68504333]
[496.13668823 -161.93583679]
[480.42706299 -160.06005859]
[468.37258911 -151.13313293]
[456.38623047 -142.11500549]
[444.39984131 -133.09687805]
[438.41265869 -116.60221863]
[420.11801147 -114.52035522]
[408.26989746 -105.32135010]
[396.42175293 -96.12235260]
[384.57360840 -86.92334747]
[383.77355957 -83.48632812]
[381.26712036 -80.26673126]
[377.17501831 -78.06317902]
[371.97033691 -77.59002686]
[359.71578979 -68.93981934]
[347.46124268 -60.28961563]
[335.20669556 -51.63940811]
[322.95214844 -42.98920441]
[310.69760132 -34.33900070]
[308.33303833 -22.47379684]
[298.19161987 -15.16722393]
[285.39260864 -16.77989006]
[273.00817871 -8.31665802]
[260.62377930 0.14657287]
[248.23936462 8.60980415]
[235.85494995 17.07303619]
[223.47053528 25.53626633]
[219.72053528 31.90763474]
[210.83332825 34.03229141]
[198.32189941 42.30659866]
[185.81047058 50.58090591]
[173.36219788 58.94991684]
[167.21971130 72.51896667]
[151.46040344 73.91711426]
[139.07598877 82.38034058]
[126.69157410 90.84357452]
[114.30715942 99.30680847]
[108.08178711 111.82624817]
[94.15606689 113.07760620]
[81.77165222 121.54084015]
[69.38723755 130.00407410]
[67.99701691 140.79583740]
[61.03890991 148.87348938]
[50.99447250 151.72630310]
[41.24810410 148.64413452]
[28.61254501 156.72761536]
[15.97698593 164.81109619]
[14.61972237 178.21345520]
[5.91754389 188.24002075]
[-6.78259945 191.37635803]
[-18.78922462 186.69474792]
[-31.54600525 194.58554077]
[-44.30278397 202.47633362]
[-57.05956650 210.36712646]
[-69.81634521 218.25790405]
[-82.57312775 226.14869690]
[-95.32991028 234.03948975]
[-108.08668518 241.93028259]
[-94.31534576 247.87586975]
[-90.22721863 262.30801392]
[-98.83457184 274.59271240]
[-113.79524231 275.67819214]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 71]
[2 70]
[3 69]
[4 68]
[5 64]
[6 63]
[7 62]
[8 61]
[9 60]
[10 58]
[11 57]
[12 56]
[13 55]
[14 54]
[15 53]
[16 52]
[17 50]
[18 49]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[29 39]
[30 38]
[72 202]
[73 201]
[74 200]
[75 199]
[76 198]
[77 197]
[78 196]
[79 195]
[82 191]
[83 190]
[84 189]
[86 185]
[87 184]
[88 183]
[90 181]
[91 180]
[92 179]
[93 178]
[95 176]
[97 175]
[98 174]
[99 173]
[100 171]
[101 170]
[102 169]
[103 168]
[104 167]
[105 166]
[107 163]
[108 162]
[109 161]
[110 160]
[111 159]
[112 158]
[113 154]
[114 153]
[115 152]
[116 151]
[119 149]
[120 148]
[121 147]
[123 146]
[125 144]
[126 143]
[127 142]
[128 141]
[129 140]
[131 139]
[132 138]
[133 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
