%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGGGCGGGGGAAGGCGCGAGAGCGAGCGCGAGAGGGAAAAGGAGGGAGGGGGUGGGGAAGAGGGAAUCUUAUAUCACGUGACAGGGGCGGCGCGGCCCGGGGUGUCAGUGUGGAGGAGACUGAGUAUUCUACCUUGUAAAUACUGUUAUUUGUAUAUACUGUAA\
) } def
/len { sequence length } bind def

/coor [
[106.22435760 214.97740173]
[91.14089203 218.21661377]
[76.70867157 212.76550293]
[67.53297424 200.36347961]
[66.54172516 184.96798706]
[74.05123138 171.49168396]
[87.66523743 164.23480225]
[88.78618622 149.27674866]
[89.90714264 134.31867981]
[91.02809143 119.36062622]
[84.43028259 115.79426575]
[77.29756165 128.98988342]
[70.16464233 142.18539429]
[56.96924591 135.05226135]
[64.10194397 121.85717010]
[71.23466492 108.66155243]
[64.63685608 105.09519196]
[52.73655701 114.22661591]
[40.83625412 123.35803223]
[28.93595505 132.48945618]
[29.47674942 147.99710083]
[20.77120399 160.84207153]
[6.16677809 166.08518982]
[-8.72082710 161.71040344]
[-18.16702271 149.39987183]
[-18.53955650 133.88726807]
[-9.69518089 121.13750458]
[4.96526289 116.05311584]
[19.80453300 120.58915710]
[31.70483398 111.45773315]
[43.60513306 102.32630920]
[55.50543213 93.19489288]
[42.36341476 100.42588806]
[27.60827065 103.12510681]
[12.75743675 101.01496124]
[-0.66182196 94.31246185]
[-11.26945877 83.70689392]
[-17.97457886 70.28894806]
[-20.08762360 55.43852615]
[-17.39128304 40.68285751]
[-10.16285515 27.53942299]
[0.85428673 17.35990524]
[14.52713203 11.19117069]
[29.44955826 9.66761494]
[44.08692932 12.94592285]
[56.93393707 20.68894958]
[66.66938019 32.10039902]
[72.29206085 46.00671005]
[73.22373962 60.97774506]
[69.36886597 75.47328949]
[67.79573059 59.73048401]
[79.97698212 51.15923309]
[85.97535706 37.41080093]
[91.97373962 23.66236496]
[97.97212219 9.91393185]
[103.97050476 -3.83450198]
[109.96887970 -17.58293533]
[115.96726227 -31.33136940]
[121.96564484 -45.07980347]
[127.96401978 -58.82823563]
[118.09576416 -70.42042542]
[114.25482941 -85.08788300]
[117.15124512 -99.90782928]
[126.15794373 -111.95110321]
[139.44560242 -118.86106110]
[154.35397339 -119.31466675]
[160.35235596 -133.06309509]
[154.81887817 -147.62394714]
[161.09793091 -161.48136902]
[175.01358032 -166.66696167]
[181.01196289 -180.41540527]
[187.01034546 -194.16383362]
[193.00871277 -207.91226196]
[192.40881348 -213.18150330]
[193.77856445 -217.68885803]
[196.48811340 -220.80540466]
[199.74829102 -222.24850464]
[206.50811768 -235.63897705]
[213.26794434 -249.02944946]
[220.02777100 -262.41992188]
[226.78759766 -275.81039429]
[233.42192078 -289.26348877]
[239.93017578 -302.77801514]
[246.43843079 -316.29254150]
[252.94668579 -329.80709839]
[259.45495605 -343.32162476]
[256.49163818 -364.51766968]
[273.91775513 -375.53475952]
[279.65798950 -389.39294434]
[285.39825439 -403.25112915]
[291.13848877 -417.10934448]
[284.85968018 -431.61285400]
[290.75299072 -446.27722168]
[305.32208252 -452.40237427]
[319.92333984 -446.35433960]
[325.89410400 -431.72131348]
[319.69201660 -417.18481445]
[304.99670410 -411.36907959]
[299.25643921 -397.51089478]
[293.51620483 -383.65267944]
[287.77593994 -369.79449463]
[292.49856567 -362.19052124]
[293.17880249 -353.12683105]
[289.53527832 -344.64950562]
[282.27703857 -338.73138428]
[272.96948242 -336.81335449]
[266.46121216 -323.29882812]
[259.95297241 -309.78430176]
[253.44471741 -296.26977539]
[246.93644714 -282.75521851]
[246.86712646 -275.33349609]
[240.17807007 -269.05056763]
[233.41824341 -255.66009521]
[226.65841675 -242.26962280]
[219.89859009 -228.87915039]
[213.13876343 -215.48867798]
[206.75715637 -201.91387939]
[200.75877380 -188.16545105]
[194.76039124 -174.41702271]
[188.76200867 -160.66857910]
[194.42573547 -146.94059753]
[188.53837585 -132.91227722]
[174.10079956 -127.06472015]
[168.10241699 -113.31628418]
[177.91017151 -102.07913971]
[181.88272095 -87.63863373]
[179.18048096 -72.84474945]
[170.28675842 -60.64140320]
[156.92225647 -53.48060226]
[141.71246338 -52.82985687]
[135.71408081 -39.08142471]
[129.71569824 -25.33298874]
[123.71731567 -11.58455563]
[117.71893311 2.16387820]
[111.72055817 15.91231251]
[105.72217560 29.66074562]
[99.72379303 43.40917969]
[93.72541046 57.15761185]
[95.72760010 71.91703796]
[83.11730194 81.47166443]
[101.63856506 67.75814056]
[129.42735291 73.64997864]
[146.63505554 102.77592468]
[155.76647949 114.67622375]
[164.89790344 126.57652283]
[174.02932739 138.47682190]
[189.53697205 137.93603516]
[202.38192749 146.64157104]
[207.62506104 161.24600220]
[203.25025940 176.13360596]
[190.93974304 185.57980347]
[175.42713928 185.95233154]
[162.67736816 177.10795593]
[157.59298706 162.44750977]
[162.12902832 147.60824585]
[152.99760437 135.70794678]
[143.86618042 123.80764771]
[134.73475647 111.90734100]
[127.54760742 114.05090332]
[124.07323456 128.64297485]
[113.17330170 118.33802032]
[105.98614502 120.48158264]
[104.86519623 135.43963623]
[103.74424744 150.39768982]
[102.62329102 165.35574341]
[115.00365448 174.56065369]
[120.42075348 189.00567627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 165]
[8 164]
[9 163]
[10 162]
[17 32]
[18 31]
[19 30]
[20 29]
[50 140]
[52 138]
[53 137]
[54 136]
[55 135]
[56 134]
[57 133]
[58 132]
[59 131]
[60 130]
[66 124]
[67 123]
[70 120]
[71 119]
[72 118]
[73 117]
[77 116]
[78 115]
[79 114]
[80 113]
[81 112]
[82 110]
[83 109]
[84 108]
[85 107]
[86 106]
[88 101]
[89 100]
[90 99]
[91 98]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
