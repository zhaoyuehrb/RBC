%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGUCCUUGAGCCUCGACUCUGGGUGAGCCCUCUGGGUCUUAGAUUUGAGAUGCAAUUUUCAAACUUGAAGAUCACGGUGAGCAGAGAGAUCUCUGAGCUACUGCCAAUCCUAAUGUCCCUUGUAUUGAGCGUUGACUGUGUUGACAAUGAAAAGCCAGAAGAGCCUCAAGGAGGAAAGAGGUCAAUAGCCAA\
) } def
/len { sequence length } bind def

/coor [
[199.29609680 579.43621826]
[201.21910095 565.51531982]
[208.32681274 553.34204102]
[219.57379150 544.77239990]
[209.02845764 534.25366211]
[213.25712585 519.00799561]
[209.68534851 504.43948364]
[206.11357117 489.87094116]
[202.54179382 475.30239868]
[198.97001648 460.73385620]
[195.39825439 446.16531372]
[191.82647705 431.59677124]
[188.25469971 417.02822876]
[177.70935059 406.50942993]
[181.93803406 391.26379395]
[178.36625671 376.69525146]
[174.79447937 362.12670898]
[165.60263062 357.62850952]
[160.29850769 348.62100220]
[160.84570312 337.96209717]
[167.30468750 329.19104004]
[164.20170593 314.51550293]
[161.09870911 299.83996582]
[157.99571228 285.16442871]
[154.89271545 270.48889160]
[159.93855286 228.39163208]
[152.78822327 215.20555115]
[139.91961670 207.70565796]
[140.14286804 191.88601685]
[132.99253845 178.69995117]
[125.84220123 165.51387024]
[112.97360229 158.01396179]
[113.19685364 142.19433594]
[106.04651642 129.00825500]
[98.89617920 115.82217407]
[85.71009827 108.67183685]
[70.75824738 109.87269592]
[57.62179184 118.68995667]
[44.31594849 111.99639893]
[29.36409378 113.19725037]
[14.41223812 114.39810181]
[-0.53961599 115.59896088]
[-15.49147034 116.79981232]
[-30.44332504 118.00066376]
[-43.62884903 127.75125885]
[-58.55585480 120.96034241]
[-59.86871719 104.61383057]
[-46.21688080 95.52761078]
[-31.64417839 103.04881287]
[-16.69232368 101.84796143]
[-1.74046957 100.64710236]
[13.21138477 99.44625092]
[28.16323853 98.24539948]
[43.11509323 97.04454041]
[55.18209076 88.31317139]
[69.55739594 94.92083740]
[84.50924683 93.71998596]
[88.08102417 79.15144348]
[75.38015747 71.17095947]
[62.67929459 63.19047928]
[49.97843170 55.20999908]
[37.27756882 47.22951889]
[24.57670784 39.24903870]
[11.87584400 31.26855659]
[-4.52314425 31.19641304]
[-12.42413139 16.82608032]
[-3.69925928 2.94052577]
[12.67607212 3.82401609]
[19.85632515 18.56769180]
[32.55718994 26.54817390]
[45.25805283 34.52865601]
[57.95891571 42.50913620]
[70.65977478 50.48961639]
[83.36064148 58.47009659]
[96.06150055 66.45057678]
[102.24698639 62.20914078]
[114.61795044 53.72626114]
[120.80342865 49.48482132]
[117.93605042 34.76143265]
[115.06867218 20.03804588]
[112.20129395 5.31465912]
[109.21601105 -9.38527584]
[96.25404358 -18.02386475]
[93.31622314 -32.95115280]
[101.63168335 -45.25516510]
[98.52868652 -59.93070602]
[95.42568970 -74.60623932]
[92.32269287 -89.28178406]
[89.21970367 -103.95732117]
[77.86303711 -115.78771210]
[82.68937683 -131.46057129]
[98.73379517 -134.85299683]
[109.49117279 -122.47516632]
[103.89524078 -107.06031799]
[106.99823761 -92.38477325]
[110.10122681 -77.70923615]
[113.20422363 -63.03369904]
[116.30722046 -48.35816193]
[128.89143372 -40.47317505]
[132.24737549 -25.63429451]
[123.89154816 -12.48827076]
[128.35662842 -6.58711481]
[126.92468262 2.44727969]
[129.79205322 17.17066765]
[132.65943909 31.89405441]
[135.52682495 46.61744308]
[140.06922913 32.32175827]
[152.54158020 23.98866081]
[166.54724121 18.61825752]
[181.39350891 16.47616959]
[196.34605408 17.66834641]
[210.66532898 22.13582230]
[223.64309692 29.65763474]
[234.63745117 39.86174774]
[243.10462952 52.24346542]
[248.62583923 66.19037628]
[250.92797852 81.01265717]
[249.89720154 95.97720337]
[245.58447266 110.34384155]
[238.20312500 123.40200806]
[228.11822510 134.50582886]
[215.82858276 143.10609436]
[201.94204712 148.77745056]
[187.14546204 151.23937988]
[172.17066956 150.37011719]
[157.75833130 146.21264648]
[144.62129211 138.97261047]
[133.40931702 129.00810242]
[124.67901611 116.81565857]
[112.08226013 108.67183685]
[119.23259735 121.85791779]
[126.38293457 135.04399109]
[139.76296997 143.48706055]
[139.02827454 158.36352539]
[146.17861938 171.54960632]
[153.32894897 184.73568726]
[166.70898438 193.17874146]
[165.97430420 208.05522156]
[173.12463379 221.24130249]
[186.31071472 228.39163208]
[201.26257324 227.19078064]
[216.21441650 225.98992920]
[229.39994812 216.23933411]
[244.32695007 223.03025818]
[245.63981628 239.37675476]
[231.98797607 248.46298218]
[217.41528320 240.94178772]
[202.46342468 242.14263916]
[187.51156616 243.34349060]
[183.02574158 249.35409546]
[196.72294617 255.46853638]
[211.12568665 259.65911865]
[215.89021301 273.88232422]
[206.91799927 285.90310669]
[191.92707825 285.38101196]
[183.81304932 272.76663208]
[174.05407715 261.37530518]
[169.56825256 267.38589478]
[172.67124939 282.06143188]
[175.77424622 296.73696899]
[178.87724304 311.41250610]
[181.98023987 326.08804321]
[196.11911011 340.44515991]
[189.36302185 358.55493164]
[192.93479919 373.12347412]
[196.50657654 387.69201660]
[207.30738831 399.25286865]
[202.82324219 413.45645142]
[206.39501953 428.02499390]
[209.96679688 442.59353638]
[213.53855896 457.16207886]
[217.11033630 471.73062134]
[220.68211365 486.29916382]
[224.25389099 500.86770630]
[227.82566833 515.43621826]
[238.62648010 526.99707031]
[234.14233398 541.20062256]
[250.08215332 544.43572998]
[262.97116089 554.26062012]
[270.26177979 568.66961670]
[270.54086304 584.75750732]
[263.80328369 599.30511475]
[251.44281006 609.42376709]
[255.24761963 623.93316650]
[259.05242920 638.44262695]
[272.12176514 647.74707031]
[272.85192871 663.77349854]
[260.68283081 674.22778320]
[244.94956970 671.09033203]
[237.72132874 656.76788330]
[244.54301453 642.24743652]
[240.73820496 627.73797607]
[236.93338013 613.22857666]
[223.19570923 611.24761963]
[211.21403503 604.15588379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 177]
[6 175]
[7 174]
[8 173]
[9 172]
[10 171]
[11 170]
[12 169]
[13 168]
[15 166]
[16 165]
[17 164]
[21 162]
[22 161]
[23 160]
[24 159]
[25 158]
[26 139]
[27 138]
[29 136]
[30 135]
[31 134]
[33 132]
[34 131]
[35 130]
[36 57]
[37 56]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[78 106]
[79 105]
[80 104]
[81 103]
[82 101]
[85 98]
[86 97]
[87 96]
[88 95]
[89 94]
[140 149]
[141 148]
[142 147]
[183 193]
[184 192]
[185 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
