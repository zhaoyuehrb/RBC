%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCCGAGGGCGGCUGGCCCGGUCGCGGUCGCGGCUCUUUCCAGCUCCUGGCAGCCGGGCACCCGAAGGAACGGGUCGUGCAACGACGCAGCUGGACCUGGCCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[10.02191544 388.03329468]
[5.87611532 390.66934204]
[0.03706361 404.48620605]
[-5.80198812 418.30303955]
[-11.64103985 432.11990356]
[-12.23731422 449.06335449]
[-28.68368149 453.18081665]
[-37.19301987 438.51699829]
[-25.45789528 426.28085327]
[-19.61884308 412.46398926]
[-13.77979088 398.64715576]
[-7.94073963 384.83029175]
[-2.49862409 370.85232544]
[2.54211688 356.72467041]
[7.58285761 342.59698486]
[12.62359905 328.46932983]
[17.66433907 314.34167480]
[22.70508003 300.21398926]
[27.54357147 286.01580811]
[32.17882538 271.74993896]
[28.75316048 257.25463867]
[40.37625885 246.52085876]
[45.01151276 232.25500488]
[49.64676666 217.98915100]
[54.28202057 203.72331238]
[53.34187317 196.27864075]
[59.25869751 189.11961365]
[64.29943848 174.99195862]
[69.34017944 160.86428833]
[74.38092041 146.73661804]
[71.37057495 132.14939880]
[83.29544830 121.75189972]
[88.33618927 107.62422943]
[86.83928680 92.69911194]
[79.09333038 79.85387421]
[71.34736633 67.00863647]
[63.60140610 54.16340256]
[53.96461487 53.10148621]
[46.06431961 47.72531891]
[41.66993332 39.39655685]
[41.69125748 30.11871338]
[45.99305725 22.05571747]
[39.37474442 8.59474182]
[32.75642776 -4.86623478]
[26.13810921 -18.32721138]
[13.72357464 -29.87345123]
[21.38189697 -44.99913788]
[38.03650284 -41.82731247]
[39.59908676 -24.94552803]
[46.21740341 -11.48455143]
[52.83572006 1.97642493]
[59.45403671 15.43740177]
[77.58583069 25.11962509]
[76.44664001 46.41744232]
[84.19260406 59.26267624]
[91.93856049 72.10791016]
[99.68452454 84.95314789]
[114.49984741 87.29966736]
[119.86247253 72.41501617]
[134.54795837 69.92788696]
[145.88420105 60.10497284]
[157.07902527 50.12118912]
[168.13014221 39.97856522]
[179.18125916 29.83594131]
[190.23237610 19.69331741]
[201.28349304 9.55069351]
[201.70985413 -6.24784327]
[213.23988342 -17.05681419]
[229.03303528 -16.46344566]
[239.71949768 -4.81977701]
[238.95918274 10.96621323]
[227.20318604 21.52897453]
[211.42611694 20.60181046]
[200.37500000 30.74443436]
[189.32388306 40.88705826]
[178.27276611 51.02968216]
[167.22164917 61.17230606]
[164.37948608 68.11701965]
[155.70710754 71.44121552]
[144.37086487 81.26412964]
[139.81909180 95.44618225]
[124.32276154 98.63591003]
[137.93289185 104.94180298]
[144.11132812 118.61026764]
[139.85295105 132.99310303]
[127.22897339 141.09466553]
[112.37957764 138.97444153]
[102.52733612 127.66367340]
[102.46385956 112.66497040]
[97.42311859 126.79264069]
[100.07290649 142.39036560]
[88.50858307 151.77735901]
[83.46784210 165.90502930]
[78.42710114 180.03269958]
[73.38636017 194.16035461]
[68.54786682 208.35856628]
[63.91261673 222.62440491]
[59.27735901 236.89025879]
[54.64210510 251.15611267]
[57.73622894 266.67181396]
[46.44467545 276.38519287]
[41.80941772 290.65106201]
[42.12332153 299.93341064]
[36.83274460 305.25473022]
[31.79200554 319.38241577]
[26.75126457 333.51007080]
[21.71052361 347.63772583]
[16.66978264 361.76541138]
[11.62904167 375.89306641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[5 9]
[13 109]
[14 108]
[15 107]
[16 106]
[17 105]
[18 104]
[19 102]
[20 101]
[22 99]
[23 98]
[24 97]
[25 96]
[27 95]
[28 94]
[29 93]
[30 92]
[32 90]
[33 89]
[34 57]
[35 56]
[36 55]
[37 54]
[42 52]
[43 51]
[44 50]
[45 49]
[58 82]
[60 80]
[61 79]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
