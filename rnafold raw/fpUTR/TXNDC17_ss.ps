%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCAAAAAGCCAUGCGGAUGGAUUGUGGUCGUCAGAGGCUCCCGUAGUCUUUAGCGGCGCUGGCUUCCGCAGGCUCCGCCCUCUCUUGCCCACCCGGAAACAGCCUCGCCCCGCCUACGCGGGACCCAACCGCGGCGACCGGACGUGCACUCCUCCAGUAGCGGCUGCACGUCGUGCCA\
) } def
/len { sequence length } bind def

/coor [
[166.15702820 260.77700806]
[152.07763672 255.60295105]
[152.64739990 240.61442566]
[145.43162537 242.65957642]
[141.34132385 257.09112549]
[147.87525940 271.74331665]
[140.36590576 285.92037964]
[124.57379913 288.74688721]
[112.61329651 278.05453491]
[113.65946960 262.04565430]
[126.90978241 253.00082397]
[131.00007629 238.56927490]
[137.29020691 229.34104919]
[145.15272522 222.97906494]
[153.70991516 219.68455505]
[162.07743835 219.42735291]
[154.42845154 206.52413940]
[146.77946472 193.62092590]
[139.13046265 180.71771240]
[125.98468018 173.71502686]
[125.60325623 157.89842224]
[117.95426941 144.99520874]
[110.30528259 132.09199524]
[97.96107483 135.31825256]
[84.68892670 133.73623657]
[72.37525177 127.13018799]
[62.92491150 116.02521515]
[57.97170639 101.66528320]
[58.61010742 85.87934113]
[65.19069672 70.84902191]
[50.19293594 71.10793304]
[35.19516754 71.36684418]
[20.19740295 71.62574768]
[5.19963789 71.88465881]
[-8.46492767 79.85900879]
[-21.32385445 72.34254456]
[-36.32162094 72.60144806]
[-51.31938553 72.86035919]
[-66.31715393 73.11927032]
[-81.31491852 73.37818146]
[-96.31268311 73.63709259]
[-111.31044769 73.89599609]
[-123.44636536 84.38880157]
[-139.18949890 81.30120087]
[-146.46305847 67.00173187]
[-139.68739319 52.45972443]
[-124.06021881 48.83056641]
[-111.56935883 58.89823532]
[-96.57159424 58.63932419]
[-81.57382202 58.38041306]
[-66.57605743 58.12150574]
[-51.57829285 57.86259460]
[-36.58052826 57.60368729]
[-21.58276367 57.34477615]
[-8.99093914 49.38894653]
[4.94072866 56.88689423]
[19.93849373 56.62798691]
[34.93626022 56.36907578]
[49.93402481 56.11016846]
[64.93179321 55.85125732]
[73.97738647 43.88558960]
[70.13680267 29.38559341]
[66.29621124 14.88559628]
[62.45562744 0.38560012]
[51.70449829 -6.77075481]
[48.81412506 -18.94632149]
[54.80575943 -29.47342873]
[51.21602631 -44.03755569]
[47.62628937 -58.60168457]
[44.03655624 -73.16580963]
[40.44681931 -87.72993469]
[23.88132668 -96.88055420]
[19.31661987 -114.91806030]
[29.19131851 -130.31027222]
[25.10102463 -144.74182129]
[21.01073074 -159.17335510]
[5.93065357 -161.29730225]
[-6.97835398 -169.37675476]
[-15.47972679 -182.01188660]
[-18.10055161 -197.01358032]
[-14.38675499 -211.78273010]
[-4.98177338 -223.76046753]
[8.48492241 -230.87158203]
[23.68014717 -231.88403320]
[37.97123337 -226.62240601]
[48.88216782 -215.99830627]
[54.52256393 -201.85243225]
[53.91518402 -186.63563538]
[47.16526794 -172.98431396]
[35.44227600 -163.26365662]
[39.53256989 -148.83210754]
[43.62286377 -134.40055847]
[54.58087540 -131.11746216]
[62.66848373 -122.85865021]
[65.78546906 -111.60292816]
[63.04253387 -100.12680817]
[55.01094818 -91.31967163]
[58.60068130 -76.75554657]
[62.19041824 -62.19141769]
[65.78015137 -47.62729263]
[69.36988831 -33.06316376]
[82.19110870 -21.09670258]
[76.95561981 -3.45498633]
[80.79621124 11.04501057]
[84.63679504 25.54500580]
[88.47737885 40.04500198]
[95.53486633 42.58309937]
[96.00087738 27.59034157]
[110.40384674 23.40054893]
[118.83931732 35.80388641]
[109.64982605 47.65929794]
[116.70731354 50.19739532]
[128.90315247 41.46461487]
[141.09899902 32.73183441]
[153.29483032 23.99905396]
[165.49067688 15.26627445]
[171.76762390 0.11596416]
[188.05973816 -1.75463223]
[197.60708618 11.57879448]
[190.58816528 26.39995766]
[174.22346497 27.46211624]
[162.02761841 36.19489670]
[149.83177185 44.92767715]
[137.63594055 53.66045761]
[125.44009399 62.39323807]
[138.53959656 84.59537506]
[136.73512268 108.04212952]
[123.20849609 124.44300079]
[130.85748291 137.34620667]
[138.50646973 150.24943542]
[152.19937134 158.17503357]
[152.03367615 173.06871033]
[159.68267822 185.97193909]
[167.33166504 198.87515259]
[174.98065186 211.77836609]
[184.43386841 223.42468262]
[195.48815918 233.56384277]
[206.54246521 243.70298767]
[215.00550842 247.21014404]
[217.69813538 254.11383057]
[228.57579041 264.44229126]
[234.94430542 266.36819458]
[238.78973389 270.59689331]
[239.64283752 275.31991577]
[250.15750122 286.01766968]
[260.67214966 296.71542358]
[271.18682861 307.41317749]
[281.70147705 318.11093140]
[292.21615601 328.80865479]
[302.73083496 339.50640869]
[313.24548340 350.20416260]
[323.85208130 360.81076050]
[334.54983521 371.32543945]
[349.81555176 375.48092651]
[353.46875000 389.92056274]
[364.16650391 400.43524170]
[380.15682983 401.73513794]
[388.99038696 415.12722778]
[383.89083862 430.33822632]
[368.77014160 435.69955444]
[355.22756958 427.09848022]
[353.65185547 411.13299561]
[342.95410156 400.61831665]
[328.45355225 397.21490479]
[324.03518677 382.02316284]
[313.33743286 371.50851440]
[306.34490967 369.05578613]
[302.54772949 360.71884155]
[292.03308105 350.02108765]
[281.51840210 339.32333374]
[271.00375366 328.62557983]
[260.48907471 317.92782593]
[249.97441101 307.23007202]
[239.45974731 296.53234863]
[228.94508362 285.83459473]
[218.24732971 275.31991577]
[207.36968994 264.99148560]
[196.40330505 254.75729370]
[185.34901428 244.61813354]
[174.29470825 234.47898865]
[167.07893372 236.52412415]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 12]
[5 11]
[16 135]
[17 134]
[18 133]
[19 132]
[21 130]
[22 129]
[23 128]
[30 60]
[31 59]
[32 58]
[33 57]
[34 56]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[61 106]
[62 105]
[63 104]
[64 103]
[67 101]
[68 100]
[69 99]
[70 98]
[71 97]
[74 92]
[75 91]
[76 90]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
[136 180]
[137 179]
[138 178]
[140 177]
[141 176]
[144 175]
[145 174]
[146 173]
[147 172]
[148 171]
[149 170]
[150 169]
[151 168]
[152 166]
[153 165]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
