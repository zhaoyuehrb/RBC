%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCUGGAGUAGGCACCCAUUUAAAGAAAAAAUGAAGAAGCAGCAAUAAAGAAGUUGUAAUCGUUACCUAGACAAACAGAGAACUGGUUUUGACAGUGUUUCUAGAGUGCUUUUUAUUAUUUUCCUGACAGUUGUGUUCCACCAUGAUUACUUUCUCCUUCAGCGAAUAGGCUAA\
) } def
/len { sequence length } bind def

/coor [
[242.38902283 595.46368408]
[254.93365479 586.76916504]
[252.53425598 571.96228027]
[250.13487244 557.15545654]
[247.73547363 542.34857178]
[245.33609009 527.54174805]
[242.93669128 512.73486328]
[240.53729248 497.92803955]
[238.13790894 483.12118530]
[228.46438599 471.79544067]
[233.89459229 456.93533325]
[231.49519348 442.12847900]
[229.09580994 427.32162476]
[217.08258057 426.59555054]
[205.44393921 423.50402832]
[194.64122009 418.16665649]
[185.10319519 410.79217529]
[177.20903015 401.67022705]
[171.27328491 391.15994263]
[167.53330994 379.67590332]
[166.13980103 367.67175293]
[167.15066528 355.62222290]
[170.52871704 344.00442505]
[176.14295959 333.27893066]
[183.77368164 323.87149048]
[193.12107849 316.15618896]
[186.40681458 302.74279785]
[179.69255066 289.32943726]
[172.97830200 275.91604614]
[166.26403809 262.50268555]
[153.64820862 254.58497620]
[154.38990784 238.78115845]
[140.22042847 234.33576965]
[133.22013855 220.82835388]
[137.97894287 205.99623108]
[131.26467896 192.58285522]
[124.55042267 179.16947937]
[117.83616638 165.75610352]
[111.12190247 152.34272766]
[104.40764618 138.92933655]
[97.69338989 125.51596069]
[90.97913361 112.10258484]
[79.21597290 102.79516602]
[64.61801910 99.34557343]
[50.02005768 95.89598846]
[35.42210007 92.44639587]
[20.82414436 88.99681091]
[7.51174784 97.51477051]
[-7.90650797 94.04303741]
[-16.28324318 80.64132690]
[-12.64869118 65.26063538]
[0.84083378 57.02605820]
[16.18223572 60.82302094]
[24.27373314 74.39885712]
[38.87168884 77.84844208]
[53.46964645 81.29802704]
[68.06760406 84.74761963]
[82.66555786 88.19720459]
[86.55000305 81.78150940]
[73.71874237 74.01242065]
[81.48804474 61.18128967]
[94.31887817 68.95012665]
[98.20331573 62.53442764]
[88.38040924 51.19818497]
[78.55749512 39.86194229]
[62.72229385 37.28784180]
[54.98764420 23.23242569]
[61.28690720 8.47780418]
[76.78782654 4.34246111]
[89.59942627 13.99867725]
[89.89373779 30.03903008]
[99.71665192 41.37527466]
[109.53955841 52.71151733]
[116.67661285 50.40662766]
[112.06704712 36.13245773]
[126.34128571 31.52311516]
[130.95071411 45.79684448]
[138.08775330 43.49195099]
[139.42472839 28.55165291]
[140.76170349 13.61135578]
[142.09866333 -1.32894254]
[143.43563843 -16.26924133]
[144.63922119 -31.22087669]
[145.70930481 -46.18265915]
[146.77938843 -61.14443970]
[147.84947205 -76.10622406]
[136.49285889 -86.85615540]
[134.75445557 -102.39681244]
[143.45512390 -115.39036560]
[158.48664856 -119.70166779]
[172.75160217 -113.29504395]
[179.51452637 -99.19551086]
[175.58216858 -84.06043243]
[162.81126404 -75.03613281]
[161.74118042 -60.07435226]
[160.67108154 -45.11257172]
[159.60099792 -30.15078926]
[162.26876831 -23.23225975]
[158.37593079 -14.93227005]
[157.03897095 0.00802770]
[155.70199585 14.94832611]
[154.36502075 29.88862419]
[153.02806091 44.82892227]
[155.91099548 71.82459259]
[148.29403687 93.76589203]
[134.01609802 107.25155640]
[117.80580139 110.87886047]
[104.39250946 105.38832855]
[111.10676575 118.80170441]
[117.82102966 132.21508789]
[124.53528595 145.62846375]
[131.24954224 159.04183960]
[137.96380615 172.45521545]
[144.67805481 185.86860657]
[151.39231873 199.28198242]
[166.11787415 204.36091614]
[172.73600769 218.05963135]
[167.80328369 232.06690979]
[180.89936829 240.94401550]
[179.67741394 255.78842163]
[186.39167786 269.20178223]
[193.10594177 282.61517334]
[199.82019043 296.02856445]
[206.53445435 309.44192505]
[227.00726318 306.01586914]
[247.41569519 309.65969849]
[265.39224243 319.93276978]
[278.85748291 335.62640381]
[286.26071167 354.90612793]
[286.75845337 375.52603149]
[301.22399902 379.49447632]
[315.68951416 383.46289062]
[330.15505981 387.43130493]
[344.62057495 391.39974976]
[359.08612061 395.36816406]
[373.55163574 399.33657837]
[387.15957642 391.29919434]
[402.44412231 395.31903076]
[410.33715820 409.01119995]
[406.15594482 424.25234985]
[392.38110352 432.00021362]
[377.18502808 427.65811157]
[369.58322144 413.80212402]
[355.11770630 409.83370972]
[340.65216064 405.86526489]
[326.18661499 401.89685059]
[311.72109985 397.92840576]
[297.25555420 393.95999146]
[282.79003906 389.99157715]
[277.79064941 399.56054688]
[271.16955566 408.08819580]
[263.13778687 415.30276489]
[253.95123291 420.97436523]
[243.90266418 424.92221069]
[246.30204773 439.72906494]
[248.70144653 454.53591919]
[258.54656982 466.92074585]
[252.94476318 480.72180176]
[255.34414673 495.52865601]
[257.74353027 510.33551025]
[260.14294434 525.14233398]
[262.54232788 539.94921875]
[264.94171143 554.75604248]
[267.34112549 569.56292725]
[269.74050903 584.36975098]
[284.38891602 588.65777588]
[295.72039795 598.88323975]
[301.48510742 613.01586914]
[300.53845215 628.24957275]
[293.06838989 641.55975342]
[280.55810547 650.30364990]
[265.49151611 652.74511719]
[250.86012268 648.39947510]
[239.56898499 638.12945557]
[233.85997009 623.97424316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 165]
[3 164]
[4 163]
[5 162]
[6 161]
[7 160]
[8 159]
[9 158]
[11 156]
[12 155]
[13 154]
[26 124]
[27 123]
[28 122]
[29 121]
[30 120]
[32 118]
[35 115]
[36 114]
[37 113]
[38 112]
[39 111]
[40 110]
[41 109]
[42 108]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[63 73]
[64 72]
[65 71]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[83 97]
[84 96]
[85 95]
[86 94]
[130 149]
[131 148]
[132 147]
[133 146]
[134 145]
[135 144]
[136 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
