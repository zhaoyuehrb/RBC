%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGAAAUGUGGUCUCCGACGGAUGGCCUACACCCGGGAGGAGUCCAGGAACUCUAGGUGGACAGUUACUUCCGCACACGCGUAGUAGGACGGUAGCCGGUAUUCAAUCUUCAAAUCAGCGCCGCGGGAAGUGCGGGCGGGUGUUGCUCCCCUGUCUCUGGACGACGCUGUGACUGAUCCCAGGCUUGGAGCCGGAGCUGCGAGCGAGGCAGUGAAAGGGUGGCAGAUUUCUGUGUAAGAGCUGCAGAAA\
) } def
/len { sequence length } bind def

/coor [
[298.37588501 505.93167114]
[298.16888428 490.93310547]
[290.68069458 491.35360718]
[283.67166138 504.61535645]
[276.66262817 517.87707520]
[276.85491943 523.04083252]
[275.22521973 527.34191895]
[272.40109253 530.23413086]
[269.13549805 531.49639893]
[261.63549805 544.48675537]
[254.13549805 557.47717285]
[246.71661377 570.51403809]
[239.37913513 583.59692383]
[232.04165649 596.67980957]
[224.70417786 609.76263428]
[217.44839478 622.89099121]
[210.27459717 636.06433105]
[203.10078430 649.23767090]
[200.83567810 666.03961182]
[184.06330872 668.51428223]
[177.04229736 653.08239746]
[189.92745972 642.06384277]
[197.10127258 628.89050293]
[204.27507019 615.71716309]
[204.71275330 608.35943604]
[211.62130737 602.42517090]
[218.95878601 589.34228516]
[226.29626465 576.25946045]
[233.63374329 563.17657471]
[234.16310120 555.82489014]
[241.14511108 549.97717285]
[248.64511108 536.98675537]
[256.14511108 523.99639893]
[263.40087891 510.86804199]
[270.40991211 497.60632324]
[277.41894531 484.34460449]
[277.97982788 469.35507202]
[271.98144531 455.60665894]
[265.98306274 441.85821533]
[259.98468018 428.10977173]
[246.06903076 422.92416382]
[239.78997803 409.06677246]
[245.32345581 394.50592041]
[239.32508850 380.75747681]
[233.32670593 367.00903320]
[227.32832336 353.26062012]
[221.24435425 339.54983521]
[215.07505798 325.87725830]
[208.90574646 312.20465088]
[194.30834961 309.36672974]
[184.05986023 298.34707642]
[182.24404907 283.22900391]
[189.76535034 269.78518677]
[183.51094055 256.15133667]
[177.17166138 242.55670166]
[170.83239746 228.96209717]
[164.49311829 215.36747742]
[158.15383911 201.77285767]
[154.07598877 199.33326721]
[151.47355652 194.31849670]
[151.83071899 187.75936890]
[145.83233643 174.01094055]
[139.83396912 160.26251221]
[133.83558655 146.51406860]
[127.83720398 132.76564026]
[121.83882141 119.01720428]
[32.01122284 143.90460205]
[18.04811478 138.42448425]
[4.08500910 132.94436646]
[-9.87809658 127.46424866]
[-23.84120369 121.98413086]
[-35.93613052 126.41461945]
[-47.44319153 121.58265686]
[-52.41820908 110.57472229]
[-66.31191254 104.92095947]
[-80.20561981 99.26720428]
[-96.36799622 102.04381561]
[-106.64433289 89.26378632]
[-100.46321106 74.07412720]
[-84.18324280 72.10065460]
[-74.55185699 85.37349701]
[-60.65815353 91.02725983]
[-46.76445007 96.68101501]
[-29.52135468 93.35885620]
[-18.36108780 108.02102661]
[-4.39798164 113.50114441]
[9.56512451 118.98126221]
[23.52823067 124.46137238]
[37.49133682 129.94148254]
[41.71623611 123.74469757]
[50.16603851 111.35112000]
[54.39093781 105.15432739]
[44.18834686 94.15854645]
[33.98575592 83.16277313]
[18.78013039 75.66442108]
[21.77610588 58.97728348]
[38.64046860 57.23671722]
[44.98153305 72.96018219]
[55.18412399 83.95595551]
[65.38671875 94.95173645]
[72.48114777 92.51881409]
[67.61531067 78.32996368]
[62.74946976 64.14110565]
[57.88363266 49.95224762]
[53.01779556 35.76339340]
[48.15195847 21.57453728]
[43.28612137 7.38568211]
[38.42028427 -6.80317354]
[29.40801811 -18.79396629]
[38.02701569 -31.07048225]
[52.36608887 -26.66695786]
[52.60913849 -11.66901112]
[57.47497559 2.51984477]
[62.34081268 16.70870018]
[67.20664978 30.89755630]
[72.07248688 45.08641052]
[76.93832397 59.27526855]
[81.80416107 73.46412659]
[86.66999817 87.65297699]
[93.76442719 85.22006226]
[95.07176208 70.27713776]
[92.70654297 61.48226929]
[96.48967743 55.15647888]
[97.98319244 40.23101425]
[99.47671509 25.30555344]
[100.97023010 10.38009262]
[102.46374512 -4.54536963]
[93.45927429 -17.82313156]
[98.36343384 -33.09823227]
[113.41417694 -38.65292740]
[127.06586456 -30.22612190]
[128.84608459 -14.28214645]
[117.38921356 -3.05185175]
[115.89569092 11.87360954]
[114.40217590 26.79907227]
[112.90865326 41.72453308]
[111.41513824 56.64999390]
[110.01468658 71.58447266]
[108.70735168 86.52739716]
[123.06822205 90.85929108]
[130.24203491 77.68596649]
[137.41584778 64.51264191]
[131.53474426 50.02310562]
[136.39242554 35.15915680]
[149.69523621 26.93910599]
[165.16200256 29.24420357]
[175.48977661 40.98605728]
[175.80210876 56.62052155]
[165.95152283 68.76548004]
[150.58917236 71.68645477]
[143.41535950 84.85977936]
[136.24154663 98.03310394]
[135.58724976 113.01882935]
[141.58563232 126.76725769]
[147.58401489 140.51568604]
[153.58239746 154.26412964]
[159.58078003 168.01255798]
[165.57916260 181.76100159]
[171.74845886 195.43357849]
[178.08773804 209.02819824]
[184.42701721 222.62281799]
[190.76628113 236.21743774]
[197.10556030 249.81205750]
[203.55133057 256.24603271]
[203.43794250 263.61587524]
[218.49459839 266.87213135]
[228.62835693 278.23703003]
[230.10940552 293.21267700]
[222.57833862 306.03533936]
[228.74763489 319.70794678]
[234.91694641 333.38052368]
[241.28201294 339.89434814]
[241.07675171 347.26223755]
[247.07513428 361.01065063]
[253.07351685 374.75909424]
[259.07189941 388.50753784]
[273.50949097 394.35510254]
[279.39685059 408.38339233]
[273.73312378 422.11138916]
[279.73150635 435.85983276]
[285.72985840 449.60827637]
[291.72824097 463.35668945]
[303.37207031 447.56866455]
[324.58303833 438.74395752]
[351.56643677 441.11651611]
[366.36987305 443.53689575]
[381.17330933 445.95724487]
[395.97674561 448.37762451]
[410.78018188 450.79797363]
[425.64797974 445.38885498]
[436.96002197 455.07839966]
[451.76345825 457.49874878]
[466.56689453 459.91912842]
[481.70617676 453.61566162]
[494.56869507 463.78857422]
[491.92257690 479.97280884]
[476.48989868 485.51947021]
[464.14651489 474.72256470]
[449.34307861 472.30221558]
[434.53964233 469.88183594]
[420.73068237 475.46411133]
[408.35980225 465.60144043]
[393.55636597 463.18106079]
[378.75292969 460.76068115]
[363.94949341 458.34033203]
[349.14605713 455.91995239]
[345.11630249 462.24539185]
[352.04257202 475.55053711]
[337.05682373 474.89627075]
[333.02706909 481.22171021]
[341.47686768 493.61529541]
[349.92666626 506.00888062]
[358.37646484 518.40246582]
[366.82626343 530.79602051]
[379.02166748 527.24163818]
[391.70663452 527.24798584]
[403.86419678 530.80450439]
[414.52252197 537.61651611]
[422.83251953 547.12945557]
[428.13549805 558.57403564]
[430.01544189 571.02862549]
[428.33154297 583.49316406]
[423.22869873 594.96978760]
[415.12512207 604.54241943]
[423.10562134 617.24328613]
[431.08609009 629.94415283]
[439.06658936 642.64501953]
[453.81024170 649.82525635]
[454.69375610 666.20062256]
[440.80819702 674.92547607]
[426.43786621 667.02447510]
[426.36572266 650.62548828]
[418.38522339 637.92462158]
[410.40475464 625.22375488]
[402.42425537 612.52288818]
[385.36904907 615.94903564]
[368.27462769 612.53857422]
[353.78118896 602.79046631]
[344.13784790 588.18469238]
[340.85375977 570.95745850]
[344.46188354 553.75903320]
[354.43267822 539.24584961]
[345.98287964 526.85223389]
[337.53308105 514.45867920]
[329.08328247 502.06509399]
[320.63348389 489.67150879]
[313.14529419 490.09204102]
[314.61889648 505.01947021]
[322.42449951 517.82855225]
[315.44848633 531.10766602]
[300.47207642 531.94854736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 36]
[4 35]
[5 34]
[9 33]
[10 32]
[11 31]
[12 29]
[13 28]
[14 27]
[15 26]
[16 24]
[17 23]
[18 22]
[37 182]
[38 181]
[39 180]
[40 179]
[43 176]
[44 175]
[45 174]
[46 173]
[47 171]
[48 170]
[49 169]
[53 165]
[54 163]
[55 162]
[56 161]
[57 160]
[58 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[66 153]
[67 89]
[68 88]
[69 87]
[70 86]
[71 85]
[74 83]
[75 82]
[76 81]
[92 100]
[93 99]
[94 98]
[120 139]
[121 138]
[123 137]
[124 136]
[125 135]
[126 134]
[127 133]
[140 152]
[141 151]
[142 150]
[185 206]
[186 205]
[187 204]
[188 203]
[189 202]
[191 200]
[192 199]
[193 198]
[210 246]
[211 245]
[212 244]
[213 243]
[214 242]
[224 235]
[225 234]
[226 233]
[227 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
