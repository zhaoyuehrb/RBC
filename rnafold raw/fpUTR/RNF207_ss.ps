%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGCAGAGUGGGAACCAUCGCCCGGUGCGGGCCUGAACUUCCAGGGCCGGCUACUCCUCGGCAGAGCGACCGCGCGGUGUCUCAGAGCGCGGCCCGGAGCCGCACUAAGAGCGCUGGACGGCGGGAGAGAGGCUCGGAGGACCGGUAGCUCCCAGCAAAGCGGCCCAGCGG\
) } def
/len { sequence length } bind def

/coor [
[99.87295532 126.90395355]
[95.62348938 141.28942871]
[91.37401581 155.67491150]
[87.12454224 170.06039429]
[82.87507629 184.44586182]
[89.24674225 199.16937256]
[81.58123016 213.26260376]
[65.75886536 215.91445923]
[53.91720963 205.09065247]
[55.14017105 189.09428406]
[68.48959351 180.19639587]
[72.73906708 165.81091309]
[76.98854065 151.42544556]
[81.23800659 137.03996277]
[85.48748016 122.65447998]
[80.51424408 118.55111694]
[76.66008759 113.38235474]
[74.14636993 107.44503021]
[73.11743927 101.08012390]
[58.55579376 97.48033905]
[43.99414825 93.88054657]
[29.43250275 90.28075409]
[14.87085819 86.68096924]
[0.30921283 83.08117676]
[-14.94451141 87.28051758]
[-25.44300270 76.71495819]
[-40.00464630 73.11517334]
[-54.56629181 69.51538086]
[-69.12793732 65.91558838]
[-85.03590393 77.97206116]
[-107.57936859 70.20496368]
[-122.53044891 71.41540527]
[-137.48153687 72.62584686]
[-150.61233521 81.45153046]
[-163.92245483 74.76650238]
[-178.87355042 75.97694397]
[-193.82463074 77.18737793]
[-208.77571106 78.39781952]
[-218.82054138 90.59932709]
[-234.55892944 92.04114532]
[-246.65354919 81.86787415]
[-247.92889404 66.11511993]
[-237.62831116 54.12873077]
[-221.86296082 53.02000809]
[-209.98614502 63.44673920]
[-195.03506470 62.23629761]
[-180.08398438 61.02585983]
[-165.13290405 59.81541824]
[-153.07150269 51.07631302]
[-138.69197083 57.67476273]
[-123.74089050 56.46432114]
[-108.78981018 55.25388336]
[-104.66963196 40.83084106]
[-116.72525787 31.90549278]
[-128.78088379 22.98014450]
[-137.57194519 20.37589645]
[-140.97088623 13.78478527]
[-152.86434937 4.64446545]
[-164.83938599 -4.38873291]
[-181.18516541 -5.71062708]
[-187.96783447 -20.64138222]
[-178.20996094 -33.82151413]
[-161.94961548 -31.69243813]
[-155.91403198 -16.44436073]
[-148.64282227 -14.98659611]
[-143.72402954 -7.24900103]
[-131.83056641 1.89131904]
[-119.85553741 10.92451668]
[-107.79991150 19.84986496]
[-95.74427795 28.77521324]
[-73.23560333 33.66774368]
[-65.52814484 51.35394669]
[-50.96650314 54.95373535]
[-36.40485764 58.55352783]
[-21.84321213 62.15331650]
[-7.63103437 57.69649506]
[3.90900278 68.51953125]
[18.47064781 72.11932373]
[33.03229523 75.71910858]
[47.59393692 79.31890106]
[62.15558243 82.91869354]
[76.71723175 86.51847839]
[93.95416260 71.02389526]
[119.14528656 73.99060822]
[125.16422272 60.25115967]
[131.18316650 46.51171494]
[125.67147064 31.94260597]
[131.97125244 18.09459877]
[145.89463806 12.92981911]
[151.91357422 -0.80962539]
[150.36399841 -16.55476379]
[162.55805969 -25.10778236]
[168.57699585 -38.84722900]
[174.59593201 -52.58667374]
[180.61488342 -66.32611847]
[186.63381958 -80.06555939]
[182.15774536 -95.47154236]
[191.52915955 -108.49291229]
[207.55912781 -109.14079285]
[217.95082092 -96.91818237]
[214.73262024 -81.20121765]
[200.37326050 -74.04662323]
[194.35432434 -60.30717468]
[188.33538818 -46.56772995]
[182.31643677 -32.82828522]
[176.29750061 -19.08884048]
[178.27760315 -4.32644081]
[165.65303040 5.20931578]
[159.63407898 18.94876099]
[165.27726746 32.68521118]
[159.36892700 46.70470428]
[144.92260742 52.53065491]
[138.90367126 66.27010345]
[132.88473511 80.00954437]
[138.02908325 94.09981537]
[151.48466492 100.72911072]
[164.94023132 107.35840607]
[178.39579773 113.98770905]
[191.85137939 120.61700439]
[205.30694580 127.24630737]
[221.10574341 126.40467834]
[229.10307312 138.97019958]
[244.90187073 138.12857056]
[252.89920044 150.69407654]
[266.35476685 157.32337952]
[280.14767456 163.21875000]
[294.23794556 168.36311340]
[308.32821655 173.50747681]
[322.41848755 178.65182495]
[336.50875854 183.79618835]
[346.14093018 176.76000977]
[357.85586548 175.27806091]
[368.71362305 179.60513306]
[376.04583740 188.55278015]
[378.11135864 199.81295776]
[392.00787354 205.45977783]
[401.17037964 205.79595947]
[406.10168457 211.33473206]
[419.89459229 217.23010254]
[433.68753052 223.12547302]
[449.89590454 220.63136292]
[459.94763184 233.58879089]
[453.50234985 248.66825867]
[437.19042969 250.35731506]
[427.79214478 236.91839600]
[413.99923706 231.02301025]
[400.20629883 225.12763977]
[386.36102295 219.35630798]
[372.46450806 213.70947266]
[356.09024048 221.84045410]
[338.66223145 215.34118652]
[331.36437988 197.88645935]
[317.27413940 192.74209595]
[303.18386841 187.59773254]
[289.09359741 182.45338440]
[275.00332642 177.30902100]
[280.12222290 191.40856934]
[273.92300415 205.06761169]
[259.94042969 210.49789429]
[246.14727783 204.60308838]
[240.40827942 190.74438477]
[245.99578857 176.82389832]
[259.72546387 170.77894592]
[246.26989746 164.14965820]
[231.43353271 165.46545410]
[222.47377014 152.42576599]
[207.63740540 153.74156189]
[198.67764282 140.70187378]
[185.22207642 134.07257080]
[171.76651001 127.44327545]
[158.31092834 120.81398010]
[144.85536194 114.18468475]
[131.39979553 107.55538177]
[123.66518402 119.23882294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[19 82]
[20 81]
[21 80]
[22 79]
[23 78]
[24 77]
[26 75]
[27 74]
[28 73]
[29 72]
[31 52]
[32 51]
[33 50]
[35 48]
[36 47]
[37 46]
[38 45]
[53 70]
[54 69]
[55 68]
[57 67]
[58 66]
[59 64]
[84 114]
[85 113]
[86 112]
[89 109]
[90 108]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[115 173]
[116 172]
[117 171]
[118 170]
[119 169]
[120 168]
[122 166]
[124 164]
[125 163]
[126 156]
[127 155]
[128 154]
[129 153]
[130 152]
[135 149]
[136 148]
[138 147]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
