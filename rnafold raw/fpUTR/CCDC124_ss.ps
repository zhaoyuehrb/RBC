%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACGGACUCUUGCUAUGUUGCCCAGGCUGGUCUUGAACUCCUGGCCUCAAGCAAUCCUCCUGCCUCAGCCUCCCAAAGCACGGGGAUUACAAACCCUGCUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[155.59332275 134.19892883]
[141.99870300 127.85964966]
[128.40408325 121.52037811]
[113.59934235 123.15397644]
[104.36206055 110.30939484]
[90.67668152 104.16851044]
[76.90344238 98.22731781]
[63.13019943 92.28611755]
[49.81325531 100.02983093]
[34.66708374 98.46556091]
[23.47861481 88.40165710]
[20.39845467 73.85343933]
[6.62521315 67.91224670]
[-7.14802885 61.97105026]
[-20.92127037 56.02985382]
[-34.69451141 50.08865738]
[-43.97174454 49.53744125]
[-48.77796555 43.76914597]
[-62.37258148 37.42987442]
[-77.06685638 42.59862900]
[-90.76342773 35.97604370]
[-95.60048676 21.93544579]
[-109.19510651 15.59617138]
[-122.78972626 9.25689793]
[-132.04699707 8.43608952]
[-136.68342590 2.53044868]
[-150.08790588 -4.20153904]
[-163.49240112 -10.93352699]
[-170.35675049 -10.92984295]
[-175.35841370 -14.02165508]
[-177.46342468 -18.46664047]
[-190.45381165 -25.96664047]
[-203.44419861 -33.46664047]
[-219.25038147 -30.71998024]
[-231.15670776 -41.47260666]
[-230.02966309 -57.47602081]
[-216.73381042 -66.45378113]
[-201.46861267 -61.51890945]
[-195.94419861 -46.45702362]
[-182.95381165 -38.95702362]
[-169.96342468 -31.45702171]
[-156.76040649 -24.33801651]
[-143.35592651 -17.60602951]
[-129.95143127 -10.87404060]
[-116.45044708 -4.33771896]
[-102.85583496 2.00155497]
[-89.26121521 8.34082890]
[-75.39628601 3.02111173]
[-61.51910782 9.25637627]
[-56.03330994 23.83525658]
[-42.43869019 30.17453003]
[-28.75331497 36.31541443]
[-14.98007393 42.25661087]
[-1.20683217 48.19780731]
[12.56640911 54.13900375]
[26.33965111 60.08020020]
[39.03537369 52.33703613]
[54.03358459 53.56896591]
[65.56533051 63.51242065]
[69.07139587 78.51287842]
[82.84464264 84.45407104]
[96.61788177 90.39527130]
[104.81382751 90.45684814]
[110.70133209 96.71478271]
[126.47846222 95.53460693]
[134.74336243 107.92576599]
[148.33798218 114.26503754]
[161.93260193 120.60430908]
[169.40583801 116.16123962]
[177.94438171 115.14250183]
[186.07127380 117.64661407]
[192.41215515 123.16938019]
[195.92758179 130.70317078]
[196.08309937 138.92016602]
[208.84985352 146.79481506]
[221.61660767 154.66946411]
[236.81158447 151.24156189]
[249.64669800 159.40943909]
[252.82104492 173.91665649]
[265.58779907 181.79130554]
[278.35455322 189.66595459]
[291.12130737 197.54060364]
[300.22067261 199.43055725]
[304.14013672 205.83453369]
[316.67245483 214.07716370]
[329.20477295 222.31979370]
[343.26296997 215.96598816]
[358.52124023 218.24386597]
[370.11074829 228.42654419]
[374.33328247 243.26480103]
[369.84149170 258.02377319]
[358.06866455 267.99392700]
[342.77148438 269.99386597]
[328.83120728 263.38534546]
[320.69613647 250.27717590]
[320.96215820 234.85211182]
[308.42984009 226.60948181]
[295.89752197 218.36683655]
[283.24664307 210.30734253]
[270.47988892 202.43269348]
[257.71313477 194.55804443]
[244.94639587 186.68341064]
[230.55763245 190.35752869]
[217.49815369 182.55339050]
[213.74195862 167.43621826]
[200.97520447 159.56156921]
[188.20845032 151.68692017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 68]
[2 67]
[3 66]
[5 64]
[6 62]
[7 61]
[8 60]
[12 56]
[13 55]
[14 54]
[15 53]
[16 52]
[18 51]
[19 50]
[22 47]
[23 46]
[24 45]
[26 44]
[27 43]
[28 42]
[31 41]
[32 40]
[33 39]
[74 107]
[75 106]
[76 105]
[79 102]
[80 101]
[81 100]
[82 99]
[84 98]
[85 97]
[86 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
