%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAACUGGUGCGCAUGCGCACUGGUGUCUCGCGGCCUGGCGCGCCCCCUCCGAAGCGCAUGCUCGUGGGCACGCACGAGCCUCAAGAUCCAAGGUGCGCGCGUCGGCGUCCGAGGCGGUUGGUGUCGGAGAAUUUGUUAAGCGGGACUCCAGGCAAUUAUUUCCAGUCAGAGAAGGAAACCAGUGCCUGGCAUUCUCACCAUCUUUCUACCUACC\
) } def
/len { sequence length } bind def

/coor [
[136.56306458 126.11384583]
[127.41300201 137.99981689]
[112.46612549 139.26109314]
[101.45365906 129.07652283]
[101.54514313 114.07720947]
[95.03688812 127.59174347]
[88.52863312 141.10627747]
[82.02037811 154.62080383]
[75.51212311 168.13534546]
[69.00386810 181.64987183]
[62.49560928 195.16441345]
[55.98735428 208.67893982]
[49.47909546 222.19346619]
[51.24351120 238.49742126]
[37.84816742 247.95770264]
[23.07304573 240.84237671]
[22.11752510 224.47108459]
[35.96456528 215.68521118]
[42.47282028 202.17068481]
[48.98107529 188.65615845]
[55.48933029 175.14161682]
[61.99758911 161.62709045]
[68.50584412 148.11254883]
[75.01409912 134.59802246]
[81.52235413 121.08348846]
[88.03060913 107.56895447]
[83.54016876 93.25686646]
[70.47800446 85.88259125]
[57.41584015 78.50831604]
[44.35367966 71.13404083]
[31.29151917 63.75976562]
[18.22935677 56.38549042]
[9.22235680 54.89293671]
[5.03258991 48.80873108]
[-7.92144632 41.24612808]
[-20.87548256 33.68352890]
[-33.88392258 26.21489525]
[-46.94608307 18.84062004]
[-60.00824738 11.46634483]
[-73.07041168 4.09207010]
[-86.13256836 -3.28220463]
[-99.19473267 -10.65647984]
[-112.25689697 -18.03075409]
[-125.31905365 -25.40502930]
[-138.38121033 -32.77930450]
[-154.20236206 -32.82599640]
[-161.48159790 -45.82068253]
[-174.59680176 -53.10021210]
[-187.76434326 -60.28461456]
[-200.93190002 -67.46901703]
[-215.92301941 -63.23770142]
[-229.17443848 -70.71128082]
[-233.11596680 -85.02910614]
[-246.28352356 -92.21350861]
[-257.67929077 -82.24548340]
[-271.77142334 -76.78799438]
[-286.85208130 -76.48174286]
[-301.10076904 -81.34438324]
[-312.80395508 -90.77075958]
[-320.56127930 -103.60813904]
[-323.45300293 -118.29715729]
[-321.14904785 -133.06120300]
[-334.31658936 -140.24560547]
[-347.48413086 -147.43000793]
[-360.65167236 -154.61441040]
[-373.81924438 -161.79881287]
[-386.98678589 -168.98321533]
[-400.15432739 -176.16761780]
[-415.24438477 -171.47013855]
[-429.19720459 -178.89266968]
[-433.73486328 -194.03152466]
[-426.16525269 -207.90512085]
[-410.97924805 -212.28247070]
[-397.18649292 -204.56658936]
[-392.96994019 -189.33515930]
[-379.80236816 -182.15075684]
[-366.63482666 -174.96635437]
[-353.46728516 -167.78195190]
[-340.29974365 -160.59754944]
[-327.13217163 -153.41314697]
[-313.96463013 -146.22874451]
[-302.79647827 -156.15637207]
[-288.87954712 -161.67434692]
[-273.88641357 -162.09873962]
[-259.62606812 -157.35905457]
[-247.82579041 -148.00900269]
[-239.92175293 -135.16197205]
[-236.88435364 -120.35837555]
[-239.09912109 -105.38105774]
[-225.93156433 -98.19665527]
[-211.75862122 -102.63095856]
[-198.30250549 -95.53252411]
[-193.74749756 -80.63656616]
[-180.57994080 -73.45216370]
[-167.41239929 -66.26776123]
[-160.03849792 -65.82366943]
[-154.10733032 -58.88284302]
[-139.22048950 -59.36360931]
[-131.00694275 -45.84146500]
[-117.94477844 -38.46718979]
[-104.88262177 -31.09291649]
[-91.82045746 -23.71864128]
[-78.75829315 -16.34436607]
[-65.69613647 -8.97009182]
[-52.63397217 -1.59581697]
[-39.57181168 5.77845764]
[-26.50964737 13.15273285]
[-19.14294243 13.70352936]
[-13.31288147 20.72949219]
[-0.35884508 28.29209328]
[12.59519100 35.85469437]
[25.60363197 43.32332993]
[38.66579437 50.69760132]
[51.72795486 58.07187653]
[64.79011536 65.44615173]
[77.85227966 72.82042694]
[90.91444397 80.19470215]
[123.13768005 88.41403198]
[138.02424622 90.25524902]
[152.91081238 92.09645844]
[167.55636597 86.11160278]
[179.23765564 95.35263062]
[194.12423706 97.19384766]
[209.01080322 99.03505707]
[223.89736938 100.87626648]
[234.52682495 93.57546997]
[246.88548279 95.41263580]
[254.43075562 104.86394501]
[269.28912354 106.92047882]
[284.14746094 108.97700500]
[299.00582886 111.03353882]
[313.86416626 113.09006500]
[318.69107056 111.12671661]
[323.32568359 111.20079041]
[327.02505493 112.89867401]
[329.31756592 115.57205200]
[344.07260132 118.27177429]
[348.09866333 116.67277527]
[352.02929688 116.45701599]
[355.44213867 117.42517853]
[358.02264404 119.26140594]
[359.59277344 121.57851410]
[374.83181763 117.32619476]
[385.36694336 127.85520935]
[399.94100952 131.40438843]
[414.51507568 134.95355225]
[429.08914185 138.50273132]
[444.32818604 134.25041199]
[454.86334229 144.77943420]
[469.46270752 148.22300720]
[484.08660889 151.56082153]
[498.71054077 154.89863586]
[513.33447266 158.23645020]
[527.95837402 161.57426453]
[542.58227539 164.91207886]
[557.20623779 168.24989319]
[567.68469238 157.10771179]
[582.23736572 152.73530579]
[596.92700195 156.21104431]
[607.83160400 166.50401306]
[612.09136963 180.77706909]
[626.71527100 184.11488342]
[641.33917236 187.45269775]
[655.96313477 190.79051208]
[670.58703613 194.12832642]
[680.97479248 182.81503296]
[695.63226318 178.22662354]
[710.61669922 181.59735107]
[721.89739990 192.02050781]
[726.43981934 206.69230652]
[723.02215576 221.66610718]
[712.56365967 232.91406250]
[697.87774658 237.41049194]
[682.91467285 233.94589233]
[671.69958496 223.45223999]
[667.24920654 208.75224304]
[652.62530518 205.41442871]
[638.00134277 202.07661438]
[623.37744141 198.73880005]
[608.75354004 195.40098572]
[598.72277832 206.41233826]
[584.43212891 210.95465088]
[569.68914795 207.71257019]
[558.47479248 197.45903015]
[553.86840820 182.87380981]
[539.24450684 179.53599548]
[524.62054443 176.19818115]
[509.99664307 172.86036682]
[495.37271118 169.52255249]
[480.74880981 166.18473816]
[466.12487793 162.84692383]
[458.90756226 164.42239380]
[451.31414795 159.35350037]
[437.11755371 163.85966492]
[425.53997803 153.07679749]
[410.96591187 149.52761841]
[396.39184570 145.97845459]
[381.81777954 142.42927551]
[367.62118530 146.93545532]
[356.04360962 136.15257263]
[341.37289429 133.02682495]
[326.61782837 130.32710266]
[311.80764771 127.94841766]
[296.94927979 125.89189148]
[282.09094238 123.83535767]
[267.23257446 121.77883148]
[252.37423706 119.72229767]
[236.49394226 127.19561005]
[222.05615234 115.76284027]
[207.16958618 113.92162323]
[192.28302002 112.08041382]
[177.39645386 110.23920441]
[163.81568909 116.35575104]
[151.06961060 106.98302460]
[136.18304443 105.14181519]
[121.29647064 103.30060577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[12 19]
[13 18]
[27 117]
[28 116]
[29 115]
[30 114]
[31 113]
[32 112]
[34 111]
[35 110]
[36 109]
[37 107]
[38 106]
[39 105]
[40 104]
[41 103]
[42 102]
[43 101]
[44 100]
[45 99]
[47 97]
[48 95]
[49 94]
[50 93]
[53 90]
[54 89]
[62 81]
[63 80]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[118 216]
[119 215]
[120 214]
[122 212]
[123 211]
[124 210]
[125 209]
[128 207]
[129 206]
[130 205]
[131 204]
[132 203]
[136 202]
[137 201]
[142 200]
[144 198]
[145 197]
[146 196]
[147 195]
[149 193]
[150 191]
[151 190]
[152 189]
[153 188]
[154 187]
[155 186]
[156 185]
[161 180]
[162 179]
[163 178]
[164 177]
[165 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
