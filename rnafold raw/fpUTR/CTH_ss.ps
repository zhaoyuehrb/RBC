%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGUGAGACUGCAGACCCGCUAAUAAAAUCCACCCCAACAAUCGCUGUGUGCCGCUUUAGUGCGCUCGCCGUCGGCUCUACCUGCGUGCUUUAGCUCCUUCUCGCCUGAUCCUUCUGUCUCUCCCAACCCCGGACACCCGGCUUCGACUGGUUAUAUCUUCGGUGUUCUUUUCCUCUCUUCUUCUUUCGCGGUUCAGC\
) } def
/len { sequence length } bind def

/coor [
[209.15776062 125.57115936]
[205.45991516 124.14299774]
[202.10453796 121.35213470]
[187.23937988 119.34534454]
[172.37423706 117.33854675]
[157.50907898 115.33175659]
[142.64392090 113.32495880]
[127.77877045 111.31816864]
[115.47282410 125.69732666]
[97.00711823 129.84632874]
[79.73287964 122.11345673]
[67.15497589 130.28634644]
[54.57706451 138.45924377]
[47.22098923 152.46633911]
[32.33308029 152.91297913]
[19.75517273 161.08587646]
[16.31531906 173.52354431]
[5.66273689 180.07055664]
[-6.20135975 177.67921448]
[-18.90672112 185.65252686]
[-14.30978680 200.01634216]
[-13.43023109 215.07214355]
[-16.32334137 229.87351990]
[-22.80725670 243.49003601]
[-32.47439194 255.06576538]
[-44.71706009 263.87301636]
[-58.76567841 269.35818481]
[-73.73714447 271.17648315]
[-88.69033051 269.21356201]
[-102.68527222 263.59283447]
[-114.84223175 254.66764832]
[-124.39701080 242.99900818]
[-130.74899292 229.32044983]
[-133.49890137 214.49180603]
[-132.47384644 199.44520569]
[-127.73827362 185.12649536]
[-119.58987427 172.43577576]
[-108.54085541 162.17079163]
[-95.28577423 154.97679138]
[-80.65784454 151.30601501]
[-65.57659912 151.38920593]
[-50.99006271 155.22113037]
[-37.81514359 162.56091309]
[-26.88003922 172.94717407]
[-14.17467880 164.97384644]
[-6.81951952 149.04519653]
[11.58227730 148.50796509]
[24.16018677 140.33506775]
[30.61660767 126.91255951]
[46.40417099 125.88134003]
[58.98207855 117.70844269]
[71.55998993 109.53554535]
[70.16177368 96.92736053]
[74.10009003 84.86871338]
[63.45171356 74.30406189]
[52.80333328 63.73939896]
[37.22686768 63.63217926]
[26.57839203 52.76642227]
[26.77660370 37.91730499]
[16.12822342 27.35264778]
[5.47984266 16.78799057]
[-5.16853762 6.22333241]
[-15.81691837 -4.34132528]
[-26.46529770 -14.90598297]
[-37.11367798 -25.47064018]
[-58.84826660 -23.73307419]
[-74.57772064 -38.41991425]
[-74.33879852 -59.65503693]
[-85.78707123 -69.34715271]
[-97.23535156 -79.03926086]
[-113.23085022 -84.65888977]
[-112.25883484 -101.58495331]
[-95.72516632 -105.33651733]
[-87.54323578 -90.48753357]
[-76.09496307 -80.79542542]
[-64.64669037 -71.10330963]
[-56.78065872 -74.67896271]
[-48.13602448 -75.50547028]
[-39.65042496 -73.46478271]
[-32.25350571 -68.75139618]
[-26.76506615 -61.85414886]
[-23.80423737 -53.50569153]
[-23.71973228 -44.60467148]
[-26.54902077 -36.11902237]
[-15.90064049 -25.55436325]
[-5.25226021 -14.98970604]
[5.39612007 -4.42504787]
[16.04450035 6.13961029]
[26.69288063 16.70426750]
[37.34126282 27.26892662]
[52.18835068 26.95351219]
[63.13782120 37.51588821]
[63.36798859 53.09101868]
[74.01637268 63.65567780]
[84.66474915 74.22033691]
[95.84841919 70.29267120]
[107.68036652 71.00391388]
[118.31300354 76.24300385]
[126.08599854 85.19183350]
[129.78556824 96.45301056]
[144.65071106 98.45980835]
[159.51586914 100.46659851]
[174.38102722 102.47339630]
[189.24617004 104.48018646]
[204.11132812 106.48698425]
[219.03242493 108.02350616]
[233.99458313 109.08822632]
[248.95675659 110.15294647]
[263.91891479 111.21766663]
[278.23348999 104.47943878]
[290.37945557 113.10061646]
[305.34161377 114.16533661]
[308.87161255 96.83900452]
[314.78210449 80.17565155]
[322.95721436 64.50057983]
[333.23684692 50.11974335]
[345.41979980 37.31373978]
[359.26779175 26.33237648]
[374.51000977 17.38976097]
[390.84854126 10.66014671]
[407.96405029 6.27453327]
[425.52209473 4.31811428]
[443.17971802 4.82862377]
[460.59201050 7.79560995]
[477.41894531 13.16064548]
[493.33206177 20.81847954]
[508.02066040 30.61910820]
[521.19818115 42.37069702]
[532.60754395 55.84335709]
[542.02624512 70.77362823]
[555.63470459 64.46417999]
[569.24322510 58.15472794]
[582.85168457 51.84527588]
[591.83959961 38.12851334]
[608.19512939 39.32391357]
[615.09307861 54.20175171]
[605.43750000 67.45697784]
[589.16113281 65.45375824]
[575.55267334 71.76320648]
[561.94415283 78.07266235]
[548.33569336 84.38211060]
[551.85198975 94.58128357]
[554.48516846 105.04332733]
[556.21588135 115.69190979]
[557.03155518 126.44934082]
[556.92626953 137.23713684]
[555.90075684 147.97660828]
[570.60968018 150.91748047]
[585.31854248 153.85833740]
[600.02740479 156.79920959]
[614.73632812 159.74008179]
[626.04949951 149.11975098]
[641.44866943 147.21084595]
[655.01263428 154.74737549]
[661.52569580 168.83140564]
[658.48339844 184.04733276]
[647.05572510 194.54432678]
[631.63665771 196.28605652]
[618.15533447 188.60282898]
[611.79541016 174.44897461]
[597.08654785 171.50810242]
[582.37768555 168.56723022]
[567.66876221 165.62635803]
[552.95989990 162.68548584]
[548.83099365 175.58476257]
[543.34423828 187.96858215]
[536.56262207 199.69448853]
[528.56390381 210.62754822]
[519.43994141 220.64193726]
[509.29547119 229.62240601]
[498.24703979 237.46553040]
[486.42150879 244.08099365]
[473.95483398 249.39254761]
[460.99026489 253.33895874]
[447.67675781 255.87466431]
[434.16741943 256.97033691]
[420.61755371 256.61315918]
[407.18295288 254.80708313]
[394.01812744 251.57266235]
[381.27444458 246.94691467]
[369.09857178 240.98284912]
[357.63052368 233.74887085]
[347.00228882 225.32798767]
[337.33621216 215.81687927]
[328.74353027 205.32478333]
[321.32321167 193.97219849]
[315.16073608 181.88957214]
[310.32711792 169.21572876]
[306.87811279 156.09632874]
[304.85354614 142.68218994]
[304.27688599 129.12750244]
[289.31472778 128.06278992]
[276.07037354 134.87716675]
[262.85418701 126.17983246]
[247.89202881 125.11511230]
[232.92987061 124.05039215]
[217.96771240 122.98567200]
[215.76002502 124.72824097]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 105]
[4 104]
[5 103]
[6 102]
[7 101]
[8 100]
[11 52]
[12 51]
[13 50]
[15 48]
[16 47]
[19 45]
[20 44]
[54 95]
[55 94]
[56 93]
[59 90]
[60 89]
[61 88]
[62 87]
[63 86]
[64 85]
[65 84]
[68 76]
[69 75]
[70 74]
[106 197]
[107 196]
[108 195]
[109 194]
[111 192]
[112 191]
[130 141]
[131 140]
[132 139]
[133 138]
[147 164]
[148 163]
[149 162]
[150 161]
[151 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
