%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGCUGGUCCCUGCGCUCCCUGCGCCCUGGGGAUGCCCCUGCCGCCCUGACGCCCGCCAGCCUGAGCCACCGGCGCAUGUGACCGCGCGUCCGCCCCAGUCCCAUCCGUAGGCGCCCGGCGCCCGGCCCCGCAGCGGCCUCGUUGUCCCCGCCGGCCCCCGCCCGGUCUCCCGCGCUGCCACCCGCCGCCGGCCCUGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[101.59189606 146.02757263]
[96.41362000 160.10542297]
[91.23534393 174.18325806]
[86.05707550 188.26109314]
[80.87879944 202.33892822]
[75.70052338 216.41676331]
[85.59441376 228.16438293]
[88.27315521 243.28787231]
[83.01619720 257.71908569]
[71.23762512 267.57611084]
[56.10581207 270.20742798]
[41.69114685 264.90524292]
[31.87109947 253.09584045]
[29.28721428 237.95585632]
[34.63454056 223.55789185]
[46.47467804 213.77490234]
[61.62268829 211.23847961]
[66.80096436 197.16064453]
[71.97923279 183.08280945]
[77.15750885 169.00497437]
[82.33578491 154.92713928]
[87.51406097 140.84930420]
[69.09339142 116.18768311]
[74.21989441 91.76450348]
[61.75584030 83.41900635]
[49.29178238 75.07350922]
[36.82772827 66.72801208]
[24.36367035 58.38251877]
[15.48715401 56.20667648]
[11.77390385 49.81241226]
[-0.56080049 41.27689362]
[-16.31166077 39.78660965]
[-22.37467957 26.18186378]
[-34.70938492 17.64634514]
[-47.04409027 9.11082840]
[-59.37879181 0.57531047]
[-71.71350098 -7.96020699]
[-86.29395294 -2.98862934]
[-100.83609009 -7.50300026]
[-109.82524109 -19.57193375]
[-109.98215485 -34.44181442]
[-122.31686401 -42.97733307]
[-134.65156555 -51.51285172]
[-150.00585938 -48.88924408]
[-162.39341736 -57.72118378]
[-164.80000305 -72.37532806]
[-177.13470459 -80.91084290]
[-187.71128845 -78.34666443]
[-197.74559021 -81.95491028]
[-204.00370789 -90.31596375]
[-204.61093140 -100.52199554]
[-216.67826843 -109.43149567]
[-228.74560547 -118.34100342]
[-240.81295776 -127.25051117]
[-252.88029480 -136.16001892]
[-268.57809448 -138.13227844]
[-274.22134399 -151.91644287]
[-286.28869629 -160.82594299]
[-301.01464844 -156.30351257]
[-315.41162109 -161.26141357]
[-324.02667236 -173.60014343]
[-323.72784424 -188.46784973]
[-335.79519653 -197.37734985]
[-351.49298096 -199.34962463]
[-357.13623047 -213.13377380]
[-369.20358276 -222.04328918]
[-384.90136719 -224.01554871]
[-390.54461670 -237.79971313]
[-402.61196899 -246.70921326]
[-414.67929077 -255.61871338]
[-431.01303101 -260.16241455]
[-431.16854858 -277.11566162]
[-414.92089844 -281.95819092]
[-405.76980591 -267.68606567]
[-393.70245361 -258.77655029]
[-381.63510132 -249.86705017]
[-366.80044556 -248.53204346]
[-360.29406738 -234.11062622]
[-348.22671509 -225.20112610]
[-333.39205933 -223.86611938]
[-326.88568115 -209.44470215]
[-314.81832886 -200.53518677]
[-300.69754028 -205.19793701]
[-286.36932373 -200.59729004]
[-277.39260864 -188.29801941]
[-277.37918091 -172.89328003]
[-265.31182861 -163.98377991]
[-250.47717285 -162.64877319]
[-243.97079468 -148.22735596]
[-231.90344238 -139.31785583]
[-219.83610535 -130.40834045]
[-207.76876831 -121.49884033]
[-195.70141602 -112.58933258]
[-176.38264465 -111.83735657]
[-168.59918213 -93.24555206]
[-156.26448059 -84.71002960]
[-141.70233154 -87.62194061]
[-129.07159424 -79.14142609]
[-126.11605072 -63.84755325]
[-113.78134155 -55.31203842]
[-101.44664001 -46.77651978]
[-87.47536469 -51.86981201]
[-73.01288605 -47.71039963]
[-63.66347504 -35.69200516]
[-63.17798233 -20.29491234]
[-50.84327698 -11.75939369]
[-38.50857162 -3.22387648]
[-26.17386627 5.31164122]
[-13.83916187 13.84715939]
[1.02943814 14.72692871]
[7.97471714 28.94219017]
[20.30942154 37.47770691]
[32.70916748 45.91846085]
[45.17322159 54.26395798]
[57.63727951 62.60945511]
[70.10133362 70.95494843]
[82.56539154 79.30044556]
[102.89084625 67.84901428]
[128.88516235 76.08905792]
[142.50912476 104.18798065]
[156.62622070 99.11772919]
[170.74331665 94.04747772]
[184.86042786 88.97722626]
[197.67591858 71.80617523]
[217.81297302 76.31848145]
[231.68212891 70.60478973]
[245.55130005 64.89109039]
[259.42047119 59.17739868]
[273.28961182 53.46370316]
[277.04421997 36.97363663]
[289.76046753 26.07760048]
[306.29962158 24.91797256]
[320.13180542 33.75408554]
[333.91177368 27.82852745]
[347.69174194 21.90296936]
[361.47174072 15.97741222]
[375.25170898 10.05185413]
[389.03167725 4.12629652]
[398.40051270 -9.33316517]
[414.71609497 -7.67982674]
[421.19436646 7.38549805]
[411.17105103 20.36489487]
[394.95724487 17.90627289]
[381.17727661 23.83183098]
[367.39727783 29.75738907]
[353.61730957 35.68294525]
[339.83734131 41.60850525]
[326.05734253 47.53406143]
[324.33520508 60.77591324]
[316.22888184 71.52312469]
[303.77105713 76.90312195]
[290.17443848 75.41194153]
[279.00332642 67.33287048]
[265.13415527 73.04656219]
[251.26498413 78.76025391]
[237.39582825 84.47395325]
[223.52665710 90.18764496]
[221.49134827 98.83850861]
[215.61190796 105.68518829]
[207.11276245 109.10749054]
[197.85534668 108.21939850]
[189.93067932 103.09432220]
[175.81356812 108.16457367]
[161.69647217 113.23483276]
[147.57937622 118.30508423]
[143.27323914 132.67370605]
[152.27494812 144.67242432]
[161.27665710 156.67114258]
[170.27836609 168.66986084]
[187.18336487 168.17968750]
[200.91418457 177.76565552]
[206.17460632 193.48876953]
[201.07992554 209.09167480]
[210.26445007 220.95103455]
[219.44897461 232.81039429]
[227.18156433 237.68212891]
[228.68170166 244.92260742]
[237.68341064 256.92132568]
[252.15426636 263.31701660]
[253.60290527 278.14102173]
[262.60461426 290.13973999]
[278.21969604 293.82064819]
[284.94714355 308.38500977]
[277.62625122 322.66030884]
[261.87298584 325.69573975]
[249.77188110 315.16281128]
[250.60588074 299.14144897]
[241.60418701 287.14273071]
[227.77719116 281.60525513]
[225.68469238 265.92303467]
[216.68298340 253.92431641]
[207.58959961 241.99491882]
[198.40509033 230.13555908]
[189.22056580 218.27618408]
[175.96896362 219.92158508]
[163.53549194 214.76168823]
[155.20996094 204.04594421]
[153.25221252 190.50862122]
[158.27964783 177.67156982]
[149.27793884 165.67285156]
[140.27622986 153.67413330]
[131.27452087 141.67541504]
[123.85386658 142.76345825]
[118.31777954 156.70446777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 18]
[6 17]
[24 117]
[25 116]
[26 115]
[27 114]
[28 113]
[30 112]
[31 111]
[33 109]
[34 108]
[35 107]
[36 106]
[37 105]
[41 101]
[42 100]
[43 99]
[46 96]
[47 95]
[51 93]
[52 92]
[53 91]
[54 90]
[55 89]
[57 87]
[58 86]
[62 82]
[63 81]
[65 79]
[66 78]
[68 76]
[69 75]
[70 74]
[120 165]
[121 164]
[122 163]
[123 162]
[125 157]
[126 156]
[127 155]
[128 154]
[129 153]
[133 148]
[134 147]
[135 146]
[136 145]
[137 144]
[138 143]
[166 202]
[167 201]
[168 200]
[169 199]
[173 194]
[174 193]
[175 192]
[177 191]
[178 190]
[180 188]
[181 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
