%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAAAGUGCUGGGAUUACAGGAGUGUGCCACUGCGCCUGACCAGCUUUAUAAAGUUUAUAGGGACAGUGUCACCACUUUACAGAAGAGGGACUGAGGCUCUGAGGAGGAAGUUCCUUGCCAGGGUCCGAGUGUCGCCACCCUGAGAACUCCAGCACCCACCUCCCUACUCUCCCUC\
) } def
/len { sequence length } bind def

/coor [
[103.40621948 501.00177002]
[99.53735352 486.45471191]
[98.67633057 471.42663574]
[100.85841370 456.53289795]
[105.99423981 442.38339233]
[113.87349701 429.55755615]
[124.17354584 418.58059692]
[136.47259521 409.90197754]
[150.26701355 403.87710571]
[147.14833069 389.20489502]
[144.02966309 374.53268433]
[140.91098022 359.86047363]
[137.79231262 345.18826294]
[134.67362976 330.51605225]
[131.55496216 315.84384155]
[128.43627930 301.17163086]
[118.22191620 290.33114624]
[122.92092133 275.22387695]
[119.80224609 260.55166626]
[107.37312317 248.17968750]
[113.17143250 230.71588135]
[109.79716492 216.10032654]
[106.42290497 201.48478699]
[103.04863739 186.86923218]
[98.46749878 181.04277039]
[99.74537659 171.96919250]
[96.62670135 157.29698181]
[93.50802612 142.62477112]
[89.02927399 136.71923828]
[90.46531677 127.66935730]
[87.60317993 112.94495392]
[77.27786255 102.06433868]
[62.72342682 98.43550873]
[48.16899109 94.80667877]
[33.61455536 91.17784882]
[19.06011772 87.54902649]
[5.62206411 95.42661285]
[-9.08650970 91.53913116]
[-16.51377487 78.67945862]
[-31.06821060 75.05062866]
[-45.62264633 71.42179871]
[-60.17708206 67.79296875]
[-70.86225128 76.02059937]
[-84.14171600 76.57476807]
[-95.14780426 69.47701263]
[-99.97544098 57.51279068]
[-114.46432495 53.63050461]
[-128.95321655 49.74821854]
[-143.44209290 45.86593246]
[-157.93098450 41.98364639]
[-173.62268066 46.74839401]
[-185.40837097 35.34535599]
[-181.16397095 19.50499344]
[-165.25573730 15.52252007]
[-154.04870605 27.49475861]
[-139.55981445 31.37704468]
[-125.07092285 35.25933075]
[-110.58203888 39.14161682]
[-96.09315491 43.02390289]
[-81.91624451 34.00007629]
[-65.26843262 38.08896255]
[-56.54825592 53.23853302]
[-41.99382019 56.86736298]
[-27.43938255 60.49619293]
[-12.88494682 64.12502289]
[-0.28980726 56.25748825]
[14.52215481 59.73030090]
[22.68894768 72.99459076]
[37.24338150 76.62341309]
[51.79781723 80.25224304]
[66.35225677 83.88107300]
[80.90669250 87.50990295]
[86.34700012 82.34724426]
[82.84529114 67.76170349]
[97.22761536 72.02192688]
[102.66792297 66.85926056]
[99.80578613 52.13485718]
[95.08415985 44.28190231]
[97.02454376 37.12862015]
[94.41982269 22.35650444]
[91.81510162 7.58438778]
[89.21038055 -7.18772888]
[76.94629669 -17.53044701]
[77.53004456 -33.56287766]
[90.51382446 -42.98630905]
[105.93758392 -38.57189178]
[111.96954346 -23.70599174]
[103.98249054 -9.79245186]
[106.58721924 4.97966480]
[109.19194031 19.75178146]
[111.79666138 34.52389908]
[114.53019714 49.27272034]
[117.39232635 63.99712753]
[131.61718750 68.75669861]
[142.76435852 58.71973801]
[153.91152954 48.68278122]
[154.89517212 33.13703537]
[166.34297180 23.11692619]
[181.15740967 24.15048599]
[192.30458069 14.11352634]
[203.45175171 4.07656717]
[214.59892273 -5.96039152]
[225.74609375 -15.99735069]
[236.89326477 -26.03430939]
[248.04043579 -36.07126999]
[249.02407837 -51.61701584]
[260.47189331 -61.63712311]
[275.28631592 -60.60356522]
[286.43347168 -70.64052582]
[297.58065796 -80.67748260]
[308.72781372 -90.71443939]
[319.87500000 -100.75140381]
[327.59997559 -115.84315491]
[344.24041748 -112.59788513]
[345.72851562 -95.70937347]
[329.91195679 -89.60422516]
[318.76480103 -79.56726837]
[307.61761475 -69.53031158]
[296.47042847 -59.49335098]
[285.32327271 -49.45639038]
[284.80264282 -34.61508179]
[273.64080811 -24.27737999]
[258.07739258 -24.92409706]
[246.93022156 -14.88713741]
[235.78305054 -4.85017824]
[224.63587952 5.18678045]
[213.48870850 15.22373962]
[202.34153748 25.26069832]
[191.19436646 35.29765701]
[190.67372131 50.13896942]
[179.51188660 60.47666931]
[163.94848633 59.82995224]
[152.80131531 69.86691284]
[141.65414429 79.90386963]
[137.27333069 99.95704651]
[125.51535034 112.23752594]
[112.07845306 115.08289337]
[102.32759094 110.08281708]
[105.18972015 124.80722809]
[108.18024445 139.50610352]
[111.29891968 154.17831421]
[114.41759491 168.85052490]
[117.66418457 183.49496460]
[121.03845215 198.11051941]
[124.41271973 212.72605896]
[127.78698730 227.34161377]
[138.30436707 234.83961487]
[140.80249023 247.10304260]
[134.47445679 257.43298340]
[137.59313965 272.10519409]
[148.03057861 283.99511719]
[143.10850525 298.05294800]
[146.22717285 312.72515869]
[149.34585571 327.39736938]
[152.46452332 342.06958008]
[155.58320618 356.74179077]
[158.70187378 371.41403198]
[161.82055664 386.08624268]
[164.93922424 400.75845337]
[179.99159241 400.65173340]
[194.75723267 403.57754517]
[208.63153076 409.41610718]
[221.04634094 417.92831421]
[231.49325562 428.76559448]
[239.54452515 441.48416138]
[244.87040710 455.56323242]
[247.25285339 470.42623901]
[246.59426880 485.46453857]
[242.92164612 500.06237793]
[236.38536072 513.62194824]
[227.25308228 525.58801270]
[215.89877319 535.47052002]
[202.78736877 542.86486816]
[188.45579529 547.46820068]
[173.49089050 549.09204102]
[158.50549316 547.66986084]
[144.11322021 543.25994873]
[130.90344238 536.04284668]
[119.41707611 526.31408691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 159]
[10 158]
[11 157]
[12 156]
[13 155]
[14 154]
[15 153]
[16 152]
[18 150]
[19 149]
[21 146]
[22 145]
[23 144]
[24 143]
[26 142]
[27 141]
[28 140]
[30 139]
[31 138]
[32 72]
[33 71]
[34 70]
[35 69]
[36 68]
[39 65]
[40 64]
[41 63]
[42 62]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[76 93]
[77 92]
[79 91]
[80 90]
[81 89]
[82 88]
[94 134]
[95 133]
[96 132]
[99 129]
[100 128]
[101 127]
[102 126]
[103 125]
[104 124]
[105 123]
[108 120]
[109 119]
[110 118]
[111 117]
[112 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
