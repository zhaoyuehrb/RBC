%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUGCAUUAGUCUAAUGAGAUGUUUGCAGCUGGAGCGCAGGGCUGCUGGAGACUAACUGUGAGCUACUAACACGGGUGGAAGAUAGCUUUUGCAAUACUCGGUUUGCAUGUGCUGAAAGUCAUCUGUCUUCUGAGUCAACACUCCCGACCUGGUAAACAACCUGCUCAGGGCUCUGGUGAACAAGCUGUAGCACCUCUUCUGCCUGUGAGCGAUUUGUCACCUCAUUCUGUAAGACUGGCACCAGCAGAA\
) } def
/len { sequence length } bind def

/coor [
[-139.20373535 931.90124512]
[-154.19479370 931.38342285]
[-166.07757568 922.22918701]
[-170.40280151 907.86779785]
[-176.40118408 921.61621094]
[-182.39956665 935.36468506]
[-188.39794922 949.11309814]
[-180.70964050 962.46209717]
[-182.33683777 977.60162354]
[-192.44714355 988.74816895]
[-207.00804138 991.76788330]
[-213.00642395 1005.51629639]
[-219.00479126 1019.26470947]
[-225.00317383 1033.01318359]
[-222.63037109 1049.23974609]
[-235.66261292 1059.19433594]
[-250.69345093 1052.63635254]
[-252.26045227 1036.31225586]
[-238.75161743 1027.01477051]
[-232.75323486 1013.26635742]
[-226.75485229 999.51794434]
[-220.75646973 985.76947021]
[-228.44680786 973.04168701]
[-227.15257263 958.04870605]
[-217.16127014 946.55841064]
[-202.14637756 943.11468506]
[-196.14799500 929.36627197]
[-190.14961243 915.61785889]
[-184.15124512 901.86938477]
[-178.84561157 887.83905029]
[-174.24594116 873.56170654]
[-169.64627075 859.28436279]
[-165.04660034 845.00695801]
[-160.44692993 830.72961426]
[-163.90873718 816.24291992]
[-152.31243896 805.48016357]
[-147.71276855 791.20281982]
[-148.65060425 783.89196777]
[-142.96572876 776.77679443]
[-138.18843079 762.55786133]
[-133.41113281 748.33892822]
[-142.18150330 736.32983398]
[-142.19891357 721.28112793]
[-133.24708557 708.96374512]
[-118.58946991 704.22448730]
[-113.81217194 690.00561523]
[-109.03487396 675.78668213]
[-112.31580353 661.25793457]
[-100.58623505 650.64062500]
[-95.80893707 636.42169189]
[-91.03163147 622.20275879]
[-86.34305573 607.95434570]
[-81.74338531 593.67700195]
[-91.84799194 580.72436523]
[-92.23531342 564.13464355]
[-82.55405426 550.45288086]
[-66.46434021 545.19512939]
[-62.04301071 530.86157227]
[-73.04725647 520.79321289]
[-78.61165619 506.88827515]
[-77.58280182 491.88485718]
[-70.11132812 478.76245117]
[-57.63261795 470.15032959]
[-42.59132004 467.80072021]
[-38.16999054 453.46713257]
[-33.74866486 439.13354492]
[-47.98025513 443.87292480]
[-60.62822342 435.80886841]
[-62.33667374 420.90649414]
[-51.84183884 410.18927002]
[-36.90690994 411.58493042]
[-28.57957268 424.06039429]
[-23.27395058 410.03005981]
[-17.96833038 395.99972534]
[-12.66270924 381.96939087]
[-7.35708761 367.93902588]
[-2.05146670 353.90869141]
[3.25415444 339.87835693]
[8.55977535 325.84802246]
[13.86539650 311.81768799]
[19.17101669 297.78735352]
[24.47663879 283.75701904]
[29.78225899 269.72668457]
[35.08787918 255.69633484]
[27.52394867 240.66217041]
[33.29961395 224.49501038]
[49.29525375 217.38160706]
[54.42555618 203.28622437]
[59.55585861 189.19082642]
[51.08760452 176.96681213]
[51.44538116 161.92234802]
[60.70150375 149.83195496]
[75.47271729 145.45960999]
[80.60301971 131.36422729]
[67.19120026 116.83864594]
[63.20905304 97.47341156]
[69.80110931 78.83435822]
[85.07272339 66.27858734]
[81.91747284 51.61419296]
[78.76222992 36.94979858]
[75.60697937 22.28540802]
[72.45172882 7.62101507]
[69.29648590 -7.04337788]
[55.26165009 -13.39394474]
[47.74522781 -26.63617897]
[49.44744110 -41.58831787]
[59.50726318 -52.53993607]
[56.35201645 -67.20433044]
[53.19676590 -81.86872101]
[42.72971725 -93.73258972]
[47.61672211 -107.80264282]
[44.46147537 -122.46704102]
[41.30622482 -137.13142395]
[38.05963135 -151.77586365]
[34.72181702 -166.39979553]
[25.30253410 -180.49636841]
[36.24069214 -193.44985962]
[51.71594238 -186.52505493]
[49.34573746 -169.73760986]
[52.68355179 -155.11367798]
[57.22389603 -149.30738831]
[55.97061920 -140.28668213]
[59.12586594 -125.62228394]
[62.28111649 -110.95789337]
[72.52248383 -100.14292145]
[67.86116028 -85.02397156]
[71.01641083 -70.35958099]
[74.17165375 -55.69518661]
[87.84550476 -49.85019684]
[95.54670715 -36.92133331]
[94.14179993 -21.75955009]
[83.96087646 -10.19862556]
[87.11612701 4.46576643]
[90.27136993 19.13015938]
[93.42662048 33.79455185]
[96.58187103 48.45894241]
[99.73711395 63.12333679]
[105.82073212 63.58466721]
[111.74502563 65.04271698]
[117.34784698 67.45757294]
[122.47584534 70.76314545]
[133.84541321 60.97883224]
[145.21499634 51.19451904]
[156.58457947 41.41020966]
[152.72323608 26.68433189]
[155.62664795 11.80289459]
[164.66636658 -0.29271597]
[178.00650024 -7.23546982]
[192.97637939 -7.69582319]
[206.60517883 -1.63600373]
[217.97476196 -11.42031479]
[229.34432983 -21.20462608]
[240.71391296 -30.98893738]
[252.02227783 -40.84392929]
[263.26898193 -50.76921463]
[274.51571655 -60.69450378]
[273.94500732 -76.32167053]
[283.59350586 -88.62778473]
[298.90548706 -91.80227661]
[312.65109253 -84.34625244]
[318.34005737 -69.78021240]
[313.28625488 -54.98180008]
[299.87591553 -46.93836975]
[284.44100952 -49.44778442]
[273.19427490 -39.52249908]
[261.94757080 -29.59720993]
[259.01977539 -22.83289909]
[250.49821472 -19.61936188]
[239.12864685 -9.83505058]
[227.75906372 -0.05073907]
[216.38949585 9.73357201]
[220.35035706 24.11331367]
[217.66400146 38.84738922]
[208.81054688 51.00376129]
[195.50274658 58.13974762]
[180.35478210 58.79277039]
[166.36888123 52.77978516]
[154.99931335 62.56409836]
[143.62973022 72.34841156]
[132.26016235 82.13272095]
[136.53881836 95.01280212]
[135.86837769 108.56839752]
[130.33961487 120.96341705]
[120.70143127 130.51898193]
[108.25926971 135.94081116]
[94.69841003 136.49452209]
[89.56810760 150.58992004]
[98.07303619 163.43408203]
[97.39208221 178.64556885]
[87.99575806 190.40028381]
[73.65124512 194.32113647]
[68.52094269 208.41651917]
[63.39064407 222.51191711]
[70.44454193 233.96748352]
[69.63317871 247.20137024]
[61.47539902 257.40560913]
[49.11821747 261.00195312]
[43.81259918 275.03228760]
[38.50697708 289.06262207]
[33.20135498 303.09295654]
[27.89573479 317.12332153]
[22.59011269 331.15365601]
[17.28449249 345.18399048]
[11.97887135 359.21432495]
[6.67325020 373.24465942]
[1.36762929 387.27499390]
[-3.93799186 401.30532837]
[-9.24361324 415.33566284]
[-14.54923344 429.36602783]
[-19.41507149 443.55487061]
[-23.83639908 457.88845825]
[-28.25772667 472.22204590]
[-17.15360260 482.63644409]
[-11.69459057 496.78164673]
[-12.91348076 511.83270264]
[-20.51512718 524.80865479]
[-32.94556808 533.16290283]
[-47.70941925 535.28289795]
[-52.13074493 549.61645508]
[-43.07314682 559.98651123]
[-40.33728027 573.37036133]
[-44.53179550 586.25732422]
[-54.46163177 595.32080078]
[-67.46602631 598.27667236]
[-72.06569672 612.55401611]
[-71.71681976 621.65472412]
[-76.81272125 626.98010254]
[-81.59002686 641.19897461]
[-86.36732483 655.41790771]
[-83.42809296 670.96368408]
[-94.81596375 680.56396484]
[-99.59326172 694.78289795]
[-104.37055969 709.00183105]
[-95.54806519 721.62994385]
[-95.84957123 736.85369873]
[-104.94992828 748.83898926]
[-119.19222260 753.11627197]
[-123.96952057 767.33514404]
[-128.74682617 781.55407715]
[-133.43539429 795.80249023]
[-138.03506470 810.07983398]
[-134.90226746 825.58776855]
[-146.16957092 835.32928467]
[-150.76924133 849.60668945]
[-155.36891174 863.88403320]
[-159.96858215 878.16137695]
[-164.56825256 892.43872070]
[-151.82110596 884.53240967]
[-136.85447693 885.53234863]
[-125.27236176 895.06408691]
[-121.41152191 909.55871582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 29]
[5 28]
[6 27]
[7 26]
[11 22]
[12 21]
[13 20]
[14 19]
[30 247]
[31 246]
[32 245]
[33 244]
[34 243]
[36 241]
[37 240]
[39 239]
[40 238]
[41 237]
[45 233]
[46 232]
[47 231]
[49 229]
[50 228]
[51 227]
[52 225]
[53 224]
[57 219]
[58 218]
[64 212]
[65 211]
[66 210]
[72 209]
[73 208]
[74 207]
[75 206]
[76 205]
[77 204]
[78 203]
[79 202]
[80 201]
[81 200]
[82 199]
[83 198]
[84 197]
[87 193]
[88 192]
[89 191]
[93 187]
[94 186]
[98 137]
[99 136]
[100 135]
[101 134]
[102 133]
[103 132]
[107 128]
[108 127]
[109 126]
[111 124]
[112 123]
[113 122]
[114 120]
[115 119]
[141 180]
[142 179]
[143 178]
[144 177]
[150 171]
[151 170]
[152 169]
[153 168]
[154 166]
[155 165]
[156 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
