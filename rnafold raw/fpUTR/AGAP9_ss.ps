%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGGAAGACCAUCUCUGCAAGUGCAGCAUAGCCUCGGCCUAGGACAGCGGGAGUGCGUGGCCAAAGCUGUGAGCAGAGGCACAGGUGGUGGCAGACAGUAGAGGCGCCCC\
) } def
/len { sequence length } bind def

/coor [
[147.36505127 385.99218750]
[132.64668274 383.09915161]
[120.54592896 374.23507690]
[113.34880066 361.07449341]
[112.41491699 346.10357666]
[117.92070770 332.15057373]
[128.82606506 321.85137939]
[143.07080078 317.15164185]
[157.96389771 318.93923950]
[170.69216919 326.87670898]
[165.78016663 312.70376587]
[160.86817932 298.53082275]
[155.95619202 284.35787964]
[151.04420471 270.18493652]
[146.13221741 256.01199341]
[141.22023010 241.83903503]
[129.74179077 232.34721375]
[132.53338623 216.77423096]
[127.62139893 202.60128784]
[122.70940399 188.42834473]
[108.42716980 184.28640747]
[99.21351624 172.38798523]
[98.76757812 157.16778564]
[107.46986389 144.45651245]
[102.55787659 130.28356934]
[97.64588165 116.11062622]
[87.42602539 110.34355927]
[83.73778534 99.20347595]
[88.49703979 88.47714996]
[83.98092651 74.17314148]
[79.46482086 59.86912537]
[74.94870758 45.56511307]
[70.43259430 31.26110268]
[65.91648865 16.95709229]
[51.34811401 11.95023060]
[42.62335587 -0.52903318]
[42.91633987 -15.57490158]
[51.90516663 -27.42137909]
[47.38905716 -41.72539139]
[42.87294769 -56.02939987]
[38.35683441 -70.33341217]
[24.61588669 -77.66989899]
[20.23967361 -92.24053955]
[27.31857681 -105.29521942]
[15.78540707 -116.12557220]
[19.33185196 -130.59181213]
[14.81574059 -144.89582825]
[0.29798040 -150.70690918]
[-7.04237318 -164.51461792]
[-3.73942924 -179.79940796]
[8.64726257 -189.34423828]
[24.26908684 -188.64234924]
[35.74989319 -178.02514648]
[37.66879654 -162.50573730]
[29.11975288 -149.41192627]
[33.63586426 -135.10792542]
[44.84600830 -125.30068207]
[41.62258911 -109.81133270]
[54.91426086 -103.18811798]
[59.69800568 -88.74614716]
[52.66084671 -74.84952545]
[57.17695618 -60.54551315]
[61.69306946 -46.24150085]
[66.20918274 -31.93748856]
[80.37076569 -27.40013695]
[89.25009918 -15.25018597]
[89.27277374 -0.02346978]
[80.22049713 12.44098091]
[84.73661041 26.74499321]
[89.25272369 41.04900360]
[93.76882935 55.35301590]
[98.28494263 69.65702820]
[102.80104828 83.96103668]
[115.45661163 94.88265228]
[111.81882477 111.19863892]
[116.73081970 125.37158203]
[121.64280701 139.54452515]
[136.34472656 144.14448547]
[145.41302490 156.37638855]
[145.53839111 171.42459106]
[136.88235474 183.51635742]
[141.79434204 197.68930054]
[146.70632935 211.86224365]
[158.53610229 222.36781311]
[155.39317322 236.92704773]
[160.30516052 251.09999084]
[165.21714783 265.27294922]
[170.12913513 279.44589233]
[175.04112244 293.61883545]
[179.95312500 307.79177856]
[184.86511230 321.96472168]
[192.06216431 335.12536621]
[201.34448242 346.90832520]
[210.62678528 358.69131470]
[225.37799072 354.90689087]
[240.39207458 357.45593262]
[253.06771851 365.89675903]
[261.20883179 378.76696777]
[263.40490723 393.83673096]
[259.27542114 408.49508667]
[249.53588867 420.20239258]
[235.87371826 426.93029785]
[220.65596008 427.51318359]
[206.51919556 421.85000610]
[195.91268921 410.92196655]
[190.67408752 396.62243652]
[191.71101379 381.42886353]
[198.84381104 367.97363281]
[189.56149292 356.19064331]
[180.27917480 344.40765381]
[180.09423828 359.40652466]
[173.56344604 372.91018677]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 91]
[11 90]
[12 89]
[13 88]
[14 87]
[15 86]
[16 85]
[18 83]
[19 82]
[20 81]
[24 77]
[25 76]
[26 75]
[29 73]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[38 64]
[39 63]
[40 62]
[41 61]
[44 58]
[46 56]
[47 55]
[92 110]
[93 109]
[94 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
