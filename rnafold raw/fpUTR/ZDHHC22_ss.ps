%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUACUCGCUGGCGCCCAAGUGGGAAGCCAGCAGCUGCCCGCUCCCUCCUCCCCACAUCCCCGCUACUUGCCCAGUUCCCGAAGCGAAGCGCAGGCUGCGAGCCAGCCGGGCCGAGUCCACAACUUUGCAGCCUCGGGCAGGGCGAGAGCCGGCGUCCGGGGCUCCUCUUGUCGGCGACCAGAGCUCGGAAUGUAAUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[116.87224579 314.66012573]
[111.92858124 310.07012939]
[108.15447235 304.45666504]
[105.75659180 298.11221313]
[104.86965179 291.36953735]
[105.54885101 284.58447266]
[107.76655579 278.11685181]
[111.41329193 272.31173706]
[116.30312347 267.48077393]
[122.18312836 263.88552856]
[119.65426636 249.10025024]
[117.12541199 234.31495667]
[114.59654999 219.52966309]
[111.95392609 204.76428223]
[109.19767761 190.01968384]
[106.44143677 175.27508545]
[103.68519592 160.53048706]
[85.19289398 158.80705261]
[68.08943939 151.56777954]
[53.97905350 139.49168396]
[41.47501755 147.77716064]
[28.97098160 156.06263733]
[16.46694565 164.34809875]
[3.96290946 172.63357544]
[-8.54112625 180.91905212]
[-15.77116966 194.99162292]
[-30.65446663 195.57188416]
[-43.15850449 203.85736084]
[-55.66254044 212.14283752]
[-60.24925232 227.51623535]
[-75.18170929 233.38148499]
[-89.00501251 225.23927307]
[-91.11510468 209.33558655]
[-79.89330292 197.87039185]
[-63.94801331 199.63879395]
[-51.44397736 191.35331726]
[-38.93994141 183.06785583]
[-32.60427094 169.58792114]
[-16.82660103 168.41502380]
[-4.32256508 160.12954712]
[8.18147087 151.84407043]
[20.68550682 143.55859375]
[33.18954086 135.27311707]
[45.69357681 126.98764801]
[40.58474731 112.13871002]
[39.45992279 96.47583008]
[42.39453125 81.04926300]
[49.19179153 66.89340973]
[59.39592361 54.95746994]
[72.32270813 46.04179382]
[87.10535431 40.74421310]
[102.75262451 39.41994095]
[105.28148651 24.63464928]
[107.81034851 9.84935665]
[110.33920288 -4.93593597]
[101.47753143 -17.74642181]
[104.25277710 -32.70478821]
[116.52023315 -41.07408905]
[119.04908752 -55.85938263]
[113.74911499 -70.76645660]
[123.52136230 -82.00711823]
[126.05022430 -96.79241180]
[120.75025177 -111.69948578]
[130.52250671 -122.94013977]
[133.05136108 -137.72543335]
[135.58021545 -152.51072693]
[133.94194031 -161.50285339]
[138.26354980 -167.50349426]
[141.01979065 -182.24809265]
[143.77603149 -196.99269104]
[146.53227234 -211.73728943]
[149.28851318 -226.48188782]
[152.04475403 -241.22647095]
[154.80099487 -255.97106934]
[146.29751587 -264.28884888]
[142.90232849 -275.56402588]
[145.34877014 -286.95974731]
[152.91537476 -295.66680908]
[163.63334656 -299.59619141]
[166.84234619 -314.24890137]
[170.05134583 -328.90164185]
[173.26034546 -343.55435181]
[176.46932983 -358.20709229]
[157.49584961 -356.29379272]
[137.84448242 -368.88238525]
[131.99769592 -382.69598389]
[126.15090179 -396.50955200]
[114.40892792 -408.73913574]
[122.91004944 -423.40771484]
[139.35871887 -419.29946899]
[139.96447754 -402.35635376]
[145.81127930 -388.54275513]
[151.65806580 -374.72918701]
[159.15783691 -374.78692627]
[181.65716553 -374.96017456]
[187.29054260 -388.86215210]
[192.92391968 -402.76412964]
[198.55729675 -416.66613770]
[204.19067383 -430.56811523]
[209.82405090 -444.47009277]
[215.45741272 -458.37207031]
[221.09078979 -472.27404785]
[226.72416687 -486.17602539]
[216.83128357 -496.27359009]
[211.55114746 -509.33984375]
[211.65065002 -523.38897705]
[217.08171082 -536.29931641]
[226.99362183 -546.13366699]
[239.86605835 -551.43017578]
[253.74224854 -551.41949463]
[259.58901978 -565.23309326]
[265.43582153 -579.04663086]
[271.28262329 -592.86022949]
[271.88836670 -609.80334473]
[288.33703613 -613.91162109]
[296.83816528 -599.24304199]
[285.09619141 -587.01342773]
[279.24942017 -573.19989014]
[273.40261841 -559.38629150]
[267.55581665 -545.57269287]
[278.33843994 -533.78271484]
[282.91796875 -518.41522217]
[280.32931519 -502.53131104]
[271.04049683 -489.31793213]
[256.86892700 -481.44863892]
[240.62614441 -480.54266357]
[234.99276733 -466.64068604]
[229.35940552 -452.73870850]
[223.72602844 -438.83670044]
[218.09265137 -424.93472290]
[212.45927429 -411.03274536]
[206.82589722 -397.13076782]
[201.19252014 -383.22879028]
[195.55915833 -369.32681274]
[191.12205505 -354.99807739]
[187.91307068 -340.34536743]
[184.70407104 -325.69262695]
[181.49507141 -311.03991699]
[178.28607178 -296.38717651]
[189.07214355 -281.60107422]
[185.57058716 -263.31182861]
[169.54559326 -253.21482849]
[166.78935242 -238.47023010]
[164.03311157 -223.72563171]
[161.27687073 -208.98104858]
[158.52062988 -194.23645020]
[155.76438904 -179.49185181]
[153.00813293 -164.74725342]
[150.36550903 -149.98187256]
[147.83665466 -135.19657898]
[145.30780029 -120.41128540]
[150.78865051 -106.56175232]
[140.83551025 -94.26354980]
[138.30665588 -79.47825623]
[143.78750610 -65.62872314]
[133.83438110 -53.33052063]
[131.30552673 -38.54523087]
[140.09403992 -26.57453918]
[137.74005127 -11.54412556]
[125.12449646 -2.40707755]
[122.59563446 12.37821484]
[120.06678009 27.16350746]
[117.53791809 41.94879913]
[129.33984375 46.92746735]
[139.83277893 54.27396393]
[148.54856873 63.66053009]
[155.09835815 74.66838074]
[159.18994141 86.80640411]
[160.64076233 99.53305817]
[159.38609314 112.28054810]
[155.48191833 124.48013306]
[149.10241699 135.58753967]
[140.53221130 145.10720825]
[130.15365601 152.61442566]
[118.42979431 157.77424622]
[121.18603516 172.51884460]
[123.94227600 187.26344299]
[126.69851685 202.00802612]
[131.35392761 209.87374878]
[129.38185120 217.00079346]
[131.91070557 231.78608704]
[134.43955994 246.57138062]
[136.96841431 261.35668945]
[157.96226501 273.10574341]
[163.40545654 296.27691650]
[150.12739563 315.72189331]
[154.67468262 330.01602173]
[159.22196960 344.31015015]
[163.76925659 358.60427856]
[168.31654358 372.89840698]
[182.84695435 378.67782593]
[190.21739197 392.46951294]
[186.94778442 407.76144409]
[174.58193970 417.33328247]
[158.95861816 416.66543579]
[147.45468140 406.07330322]
[145.50195312 390.55810547]
[154.02241516 377.44570923]
[149.47512817 363.15158081]
[144.92784119 348.85745239]
[140.38055420 334.56329346]
[135.83325195 320.26916504]
[129.15280151 319.89044189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 183]
[11 182]
[12 181]
[13 180]
[14 178]
[15 177]
[16 176]
[17 175]
[20 44]
[21 43]
[22 42]
[23 41]
[24 40]
[25 39]
[27 37]
[28 36]
[29 35]
[52 163]
[53 162]
[54 161]
[55 160]
[58 157]
[59 156]
[61 154]
[62 153]
[64 151]
[65 150]
[66 149]
[68 148]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[79 139]
[80 138]
[81 137]
[82 136]
[83 135]
[85 93]
[86 92]
[87 91]
[95 134]
[96 133]
[97 132]
[98 131]
[99 130]
[100 129]
[101 128]
[102 127]
[103 126]
[110 120]
[111 119]
[112 118]
[113 117]
[186 202]
[187 201]
[188 200]
[189 199]
[190 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
