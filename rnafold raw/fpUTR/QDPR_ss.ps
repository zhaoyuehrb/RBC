%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGUCCCUCCGGGUGGCGGGGCGCCCCGAGCGUGGCAGCGCGCUAGGCGGCAGCAGCGGGCGCGGAGCGGGGCGCGGCCGCCGCGCGUUCCCUCUUGGCGGGGUUGGCCGGCCGGGGCGGGGCGCGGCGCUCCGGCUCGAGGCAUUCGGAGCUGCGGGAGCCGGGCUGGCAGGAGCAGG\
) } def
/len { sequence length } bind def

/coor [
[108.64911652 249.44886780]
[122.30496979 255.65476990]
[119.71449280 240.88015747]
[117.12401581 226.10552979]
[114.53353882 211.33090210]
[111.94306183 196.55628967]
[109.35258484 181.78166199]
[106.50606537 167.05422974]
[103.40437317 152.37841797]
[100.30267334 137.70260620]
[97.20098114 123.02679443]
[82.52944183 117.64170074]
[73.76518250 103.44880676]
[75.74517822 85.82603455]
[60.90813065 83.62105560]
[46.07107925 81.41606903]
[31.23402977 79.21109009]
[16.39698029 77.00611115]
[1.55992997 74.80113220]
[-13.27712059 72.59614563]
[-30.22691536 79.76044464]
[-43.54484177 68.35004425]
[-58.41792679 66.40290833]
[-73.29100800 64.45577240]
[-88.16409302 62.50863647]
[-103.03717804 60.56150055]
[-117.91026306 58.61436081]
[-132.78335571 56.66722488]
[-139.06700134 58.85935593]
[-144.66589355 57.70327759]
[-148.13542175 54.38570404]
[-162.93197632 51.92354202]
[-177.81498718 57.29068375]
[-189.09960938 47.56922150]
[-203.98263550 52.93635941]
[-215.26724243 43.21490097]
[-230.06378174 40.75273895]
[-239.07035828 42.43335342]
[-245.09484863 38.11730194]
[-259.84643555 35.39870071]
[-274.82037354 40.50672150]
[-285.93453979 30.59086990]
[-300.68612671 27.87227249]
[-315.43771362 25.15367317]
[-330.18930054 22.43507385]
[-336.57852173 24.29718781]
[-342.10968018 22.85127068]
[-345.40182495 19.35761642]
[-360.05017090 16.12867546]
[-375.51251221 21.59199333]
[-387.79748535 10.72868919]
[-384.26736450 -5.28599930]
[-368.55361938 -9.97753429]
[-356.82122803 1.48033309]
[-342.17288208 4.70927334]
[-327.47070312 7.68349075]
[-312.71911621 10.40208912]
[-297.96752930 13.12068844]
[-283.21594238 15.83928680]
[-269.29714966 10.53681374]
[-257.12783813 20.64711761]
[-242.37625122 23.36571693]
[-227.60162354 25.95619392]
[-212.80508423 28.41835403]
[-198.98040771 22.87510490]
[-186.63745117 32.77267456]
[-172.81277466 27.22942734]
[-160.46980286 37.12699890]
[-145.67326355 39.58915710]
[-130.83621216 41.79413986]
[-115.96312714 43.74127579]
[-101.09004211 45.68841553]
[-86.21695709 47.63555145]
[-71.34387207 49.58268738]
[-56.47079086 51.52982712]
[-41.59770584 53.47696304]
[-31.80190468 46.35110855]
[-19.37977219 47.86966324]
[-11.07213879 57.75909805]
[3.76491094 59.96408081]
[18.60196114 62.16905975]
[33.43901062 64.37403870]
[48.27606201 66.57902527]
[63.11311340 68.78400421]
[77.95016479 70.98898315]
[91.50477600 64.56462860]
[99.19187927 51.68408203]
[106.87898254 38.80353546]
[114.56608582 25.92299080]
[122.25318909 13.04244518]
[129.94029236 0.16189988]
[137.62739563 -12.71864605]
[138.05557251 -28.53405762]
[151.22200012 -35.49784088]
[158.90910339 -48.37838745]
[166.59620667 -61.25893402]
[174.28330994 -74.13948059]
[181.97041321 -87.02002716]
[189.65751648 -99.90057373]
[197.34461975 -112.78111267]
[197.77279663 -128.59652710]
[210.93923950 -135.56031799]
[218.62634277 -148.44085693]
[216.10858154 -164.28511047]
[227.03228760 -176.03466797]
[243.01773071 -174.67628479]
[251.80223083 -161.25198364]
[246.64709473 -146.05973816]
[231.50688171 -140.75375366]
[223.81977844 -127.87320709]
[223.94143677 -112.97910309]
[210.22517395 -105.09401703]
[202.53807068 -92.21347046]
[194.85096741 -79.33292389]
[187.16386414 -66.45237732]
[179.47676086 -53.57183075]
[171.78965759 -40.69128418]
[164.10255432 -27.81073952]
[164.22421265 -12.91663170]
[150.50793457 -5.03154325]
[142.82083130 7.84900236]
[135.13372803 20.72954750]
[127.44663239 33.61009216]
[119.75952911 46.49063873]
[112.07242584 59.37118530]
[104.38532257 72.25173187]
[118.53197479 82.27416992]
[123.05021667 97.40091705]
[137.69856262 100.62985992]
[152.37437439 103.73155212]
[167.07655334 106.70577240]
[181.77873230 109.67999268]
[196.48091125 112.65420532]
[211.18307495 115.62842560]
[225.88525391 118.60264587]
[240.65988159 121.19312286]
[255.49693298 123.39810181]
[270.33398438 125.60308075]
[286.88986206 121.95075989]
[294.98257446 136.84855652]
[282.90725708 148.74911499]
[268.12899780 140.44012451]
[253.29194641 138.23515320]
[238.45489502 136.03016663]
[235.40383911 137.84770203]
[231.31399536 138.26213074]
[226.86169434 136.79838562]
[222.91104126 133.30482483]
[208.20886230 130.33059692]
[193.50668335 127.35638428]
[178.80450439 124.38216400]
[164.10232544 121.40795135]
[149.40014648 118.43373108]
[142.20124817 120.19396973]
[134.46961975 115.27819824]
[119.82127380 112.04926300]
[116.33092499 116.47326660]
[111.87679291 119.92509460]
[114.97848511 134.60090637]
[118.08018494 149.27671814]
[121.18187714 163.95252991]
[125.33602905 169.15184021]
[126.10456085 174.81695557]
[124.12720490 179.19119263]
[126.71768188 193.96580505]
[129.30815125 208.74043274]
[131.89863586 223.51504517]
[134.48910522 238.28967285]
[137.07958984 253.06430054]
[140.30853271 267.71264648]
[144.16986084 282.20712280]
[156.12586975 293.43145752]
[152.12039185 309.33392334]
[136.27391052 313.55541992]
[124.88792419 301.75323486]
[129.67536926 286.06845093]
[125.81404114 271.57397461]
[116.03277588 282.94616699]
[101.03755951 282.56735229]
[91.84297180 270.71578979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 169]
[3 168]
[4 167]
[5 166]
[6 165]
[7 164]
[8 161]
[9 160]
[10 159]
[11 158]
[14 85]
[15 84]
[16 83]
[17 82]
[18 81]
[19 80]
[20 79]
[22 76]
[23 75]
[24 74]
[25 73]
[26 72]
[27 71]
[28 70]
[31 69]
[32 68]
[34 66]
[36 64]
[37 63]
[39 62]
[40 61]
[42 59]
[43 58]
[44 57]
[45 56]
[48 55]
[49 54]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
[102 110]
[103 109]
[128 156]
[129 155]
[130 153]
[131 152]
[132 151]
[133 150]
[134 149]
[135 148]
[136 144]
[137 143]
[138 142]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
