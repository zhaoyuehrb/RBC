%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUCCCAUUGGCUGAGAAGGGUCAUGAGGAUGAACUGUGCAGUCACCUGGCAGGAACCGGAACCCGCGGUUAUAAAGUAAAGGAACCCGAGAUCUGCGCAGGGGUUCCCUUUGCCGAUUUCUCUCACCUCACCUUUCAAACCUAAACUCGAGCCUACUGUUCACCGGCCUAGCAUUGCUCUCGCC\
) } def
/len { sequence length } bind def

/coor [
[103.74657440 459.33816528]
[96.13790894 446.41113281]
[92.78252411 431.79122925]
[93.99295044 416.84014893]
[99.65644836 402.95040894]
[109.24552917 391.41567993]
[121.86706543 383.31033325]
[136.34550476 379.38925171]
[151.33233643 380.01766968]
[165.43170166 385.13705444]
[177.33039856 394.27053833]
[185.92051697 406.56820679]
[184.66868591 391.62054443]
[183.41685486 376.67285156]
[182.16500854 361.72518921]
[180.91317749 346.77752686]
[184.49810791 319.88061523]
[201.07737732 308.50253296]
[193.64985657 295.47058105]
[186.22233582 282.43862915]
[178.79481506 269.40667725]
[171.36727905 256.37472534]
[163.93975830 243.34275818]
[156.51223755 230.31080627]
[153.20590210 229.03282166]
[150.36022949 226.07882690]
[148.76118469 221.68565369]
[149.05783081 216.43440247]
[142.29267883 203.04663086]
[135.52752686 189.65884399]
[128.76237488 176.27105713]
[122.92793274 171.71003723]
[121.99814606 162.60256958]
[115.45764923 149.10360718]
[108.91715240 135.60466003]
[81.03166199 131.42306519]
[64.34078979 108.69641113]
[49.34916687 109.19763184]
[34.35754013 109.69886017]
[19.36591721 110.20008087]
[10.87395763 113.62017059]
[4.12005281 110.58231354]
[-10.87785339 110.83296204]
[-25.87575912 111.08361053]
[-39.65284729 119.97876740]
[-54.11936188 112.25528717]
[-54.39338684 95.85843658]
[-40.19303513 87.65587616]
[-26.12640572 96.08570099]
[-11.12849998 95.83505249]
[3.86940551 95.58440399]
[18.86469269 95.20845795]
[33.85631561 94.70723724]
[48.84793854 94.20600891]
[63.83956528 93.70478821]
[60.90099716 86.43054962]
[59.47660065 78.08604431]
[47.10997772 69.59683990]
[34.74335480 61.10762787]
[22.37673187 52.61842346]
[10.01010799 44.12921524]
[-5.00695610 48.49061584]
[-19.29320335 42.13159561]
[-26.10310555 28.05469131]
[-22.22123528 12.90658569]
[-9.48049164 3.83975196]
[6.10333490 5.13527155]
[17.17203712 16.18144035]
[18.49931335 31.76259422]
[30.86593819 40.25180054]
[43.23255920 48.74100494]
[55.59918594 57.23021317]
[67.96580505 65.71942139]
[74.79512787 62.61936188]
[64.67785645 51.54503250]
[72.08391571 38.50086975]
[86.77821350 41.51376724]
[88.45377350 56.41924286]
[95.28309631 53.31918335]
[97.03370667 38.42169189]
[98.78432465 23.52419472]
[100.53493500 8.62670040]
[102.28555298 -6.27079391]
[104.03616333 -21.16828918]
[105.78678131 -36.06578445]
[107.41286469 -50.97738647]
[108.91429901 -65.90205383]
[110.41573334 -80.82672119]
[111.91716766 -95.75138855]
[113.41860199 -110.67605591]
[100.17529297 -118.19499969]
[91.14037323 -130.45428467]
[87.87921143 -145.32992554]
[90.95682526 -160.24462891]
[99.83998871 -172.61431885]
[112.98963928 -180.29588318]
[128.12753296 -181.95843506]
[142.63093567 -177.31394958]
[153.98703003 -167.16708374]
[160.22831726 -153.27584839]
[160.27346802 -138.04699707]
[154.11462402 -124.11901855]
[142.81887817 -113.90501404]
[128.34327698 -109.17462158]
[126.84183502 -94.24995422]
[125.34040070 -79.32528687]
[123.83896637 -64.40061951]
[122.33753204 -49.47594833]
[124.80113220 -42.49208069]
[120.68427277 -34.31517029]
[118.93366241 -19.41767502]
[117.18304443 -4.52017975]
[115.43243408 10.37731457]
[113.68181610 25.27480888]
[111.93120575 40.17230606]
[110.18058777 55.06979752]
[119.59066772 59.34088135]
[127.62442017 65.50080109]
[133.92312622 73.15556335]
[138.23315430 81.84839630]
[140.41546631 91.08642578]
[140.44857788 100.36834717]
[138.42507935 109.21149445]
[134.54212952 117.17696381]
[129.08665466 123.89134979]
[122.41610718 129.06414795]
[128.95660400 142.56311035]
[135.49710083 156.06207275]
[142.15016174 169.50590515]
[148.91531372 182.89369202]
[155.68046570 196.28147888]
[162.44561768 209.66925049]
[169.54418945 222.88327026]
[176.97171021 235.91523743]
[184.39924622 248.94718933]
[191.82676697 261.97915649]
[199.25428772 275.01110840]
[206.68180847 288.04306030]
[214.10934448 301.07501221]
[210.89559937 286.42333984]
[214.12434387 271.77493286]
[223.19998169 259.83203125]
[236.44831848 252.79772949]
[251.42544556 251.96963501]
[265.36853027 257.50048828]
[275.70547485 268.37005615]
[280.52944946 282.57321167]
[278.95056152 297.48986816]
[271.26010132 310.36840820]
[258.87664795 318.83306885]
[244.08467102 321.32244873]
[229.61549377 317.37866211]
[242.25888062 325.44992065]
[254.90225220 333.52114868]
[267.54565430 341.59237671]
[283.45849609 339.55255127]
[294.87399292 350.82489014]
[293.03518677 366.76220703]
[279.35260010 375.13876343]
[264.32238770 369.52877808]
[259.47439575 354.23574829]
[246.83102417 346.16452026]
[234.18763733 338.09329224]
[221.54425049 330.02206421]
[215.12339783 333.89794922]
[202.28169250 341.64978027]
[195.86083984 345.52569580]
[197.11268616 360.47335815]
[198.36451721 375.42102051]
[199.61636353 390.36871338]
[200.86819458 405.31637573]
[206.71199036 413.99114990]
[204.95112610 423.10699463]
[210.34225464 437.10467529]
[215.73336792 451.10238647]
[227.06840515 463.71008301]
[218.09129333 478.09228516]
[201.78604126 473.44738770]
[201.73565674 456.49353027]
[196.34454346 442.49581909]
[190.95343018 428.49810791]
[188.58532715 443.30999756]
[181.86004639 456.71783447]
[171.40399170 467.47286987]
[158.19099426 474.57336426]
[143.45173645 477.35797119]
[128.55899048 475.56738281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 171]
[13 170]
[14 169]
[15 168]
[16 167]
[18 139]
[19 138]
[20 137]
[21 136]
[22 135]
[23 134]
[24 133]
[28 132]
[29 131]
[30 130]
[31 129]
[33 128]
[34 127]
[35 126]
[37 55]
[38 54]
[39 53]
[40 52]
[42 51]
[43 50]
[44 49]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[79 116]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
[85 110]
[86 108]
[87 107]
[88 106]
[89 105]
[90 104]
[152 164]
[153 163]
[154 162]
[155 161]
[173 181]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
