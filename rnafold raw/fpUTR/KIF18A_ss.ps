%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAAACGAAGCGCUGAGGAAAGUGGCUUGGGUUUGAAUAUUGUGGUUGAGUCUGAAGCGCUGGGAGGCGGACAUUAAAGUGAAGUGGUUGCGGUAACCUGGCCUGGGCCUGAAGUGAGUGAGAGGCACAUGAAGAGAAGUAUUCAAGUAUUUAUACAGAUAGGAAUCAAGAUAAUCAACA\
) } def
/len { sequence length } bind def

/coor [
[-59.78035355 417.81716919]
[-62.44490051 424.58587646]
[-66.69173431 430.46466064]
[-72.24675751 435.09268188]
[-78.75598907 438.18923950]
[-85.80816650 439.57083130]
[-92.96070862 439.16180420]
[-99.76746368 436.99865723]
[-102.53282928 452.57632446]
[-116.58528900 457.51367188]
[-126.09497070 469.11392212]
[-135.60464478 480.71420288]
[-145.11431885 492.31445312]
[-154.52407837 503.99591064]
[-163.83322144 515.75769043]
[-173.14236450 527.51953125]
[-171.06636047 543.18682861]
[-180.74308777 555.68231201]
[-196.43150330 557.59252930]
[-208.82395935 547.78424072]
[-210.56822205 532.07653809]
[-200.62947083 519.78845215]
[-184.90415955 518.21038818]
[-175.59501648 506.44857788]
[-166.28587341 494.68676758]
[-164.59588623 487.47265625]
[-156.71458435 482.80477905]
[-147.20491028 471.20452881]
[-137.69522095 459.60424805]
[-128.18554688 448.00399780]
[-126.10037994 433.25607300]
[-111.36772156 427.48898315]
[-116.34367371 404.96575928]
[-102.98473358 385.84408569]
[-79.60983276 382.69873047]
[-71.77783966 369.90576172]
[-63.94585419 357.11279297]
[-56.11386490 344.31982422]
[-56.06740952 329.42529297]
[-42.26302338 321.69552612]
[-34.43103409 308.90255737]
[-26.59904480 296.10958862]
[-18.76705742 283.31661987]
[-18.72060013 268.42208862]
[-4.91621399 260.69232178]
[2.91577482 247.89935303]
[10.74776363 235.10638428]
[18.57975197 222.31341553]
[26.41174126 209.52044678]
[21.77955055 193.36482239]
[30.42482948 178.56016541]
[47.42787170 174.49816895]
[55.03909683 161.57264709]
[62.65032196 148.64712524]
[70.26155090 135.72158813]
[77.87277222 122.79606628]
[68.39929962 96.73347473]
[83.00362396 73.15977478]
[78.19727325 58.95065308]
[72.46921539 51.80270004]
[73.43265533 44.45618057]
[68.87092590 30.16664886]
[64.30920410 15.87711716]
[59.74748611 1.58758676]
[55.18576050 -12.70194435]
[50.62403870 -26.99147415]
[32.31598282 -35.21131897]
[26.01407051 -53.94410324]
[35.33980942 -71.02413940]
[30.04853058 -85.05989075]
[24.75724792 -99.09564209]
[10.63579845 -105.67002106]
[5.46963167 -119.97964478]
[11.82431984 -133.40177917]
[6.53303862 -147.43753052]
[1.24175739 -161.47328186]
[-4.04952383 -175.50903320]
[-18.86323738 -180.51780701]
[-26.94740868 -193.90364075]
[-24.48494148 -209.34611511]
[-12.63853455 -219.55378723]
[2.99829912 -219.70690918]
[15.04232502 -209.73316956]
[17.80672264 -194.34187317]
[9.98622799 -180.80030823]
[15.27750969 -166.76455688]
[20.56879044 -152.72880554]
[25.86007309 -138.69305420]
[39.49392700 -132.80632019]
[45.05998611 -118.64745331]
[38.79299927 -104.38692474]
[44.08428192 -90.35117340]
[49.37556458 -76.31542206]
[59.56372452 -74.74988556]
[68.24326324 -69.04117584]
[73.80189514 -60.16915512]
[75.17371368 -49.70829391]
[72.04298401 -39.54839325]
[64.91356659 -31.55319786]
[69.47529602 -17.26366615]
[74.03701782 -2.97413564]
[78.59873962 11.31539536]
[83.16046143 25.60492516]
[87.72218323 39.89445496]
[92.40638733 54.14430618]
[97.21273804 68.35342407]
[105.81584167 66.52861786]
[115.14424133 67.14569092]
[124.48414612 70.44345093]
[136.48173523 61.44023514]
[148.47932434 52.43701935]
[160.47691345 43.43380356]
[157.46936035 28.46993637]
[161.26052856 13.68515778]
[171.09771729 2.01499462]
[185.02770996 -4.22343159]
[200.28471375 -3.79147720]
[213.83943176 3.22509265]
[223.00057983 15.43313313]
[225.94918823 30.40872765]
[222.09980774 45.17846298]
[212.21675110 56.80979919]
[198.26229858 62.99332047]
[183.00711060 62.50128555]
[169.48013306 55.43139267]
[157.48254395 64.43460846]
[145.48495483 73.43782043]
[133.48736572 82.44104004]
[137.67964172 96.84328461]
[152.63490295 98.00091553]
[166.99105835 91.35173035]
[179.08323669 100.04818726]
[194.03849792 101.20581818]
[208.99375916 102.36344910]
[223.94902039 103.52108002]
[233.90846252 91.62195587]
[248.96810913 87.88204193]
[263.33718872 93.73941040]
[271.49053955 106.94178009]
[270.29299927 122.41258240]
[260.20507812 134.20295715]
[245.10574341 137.77928162]
[230.80104065 131.76638794]
[222.79139709 118.47634125]
[207.83613586 117.31871033]
[192.88087463 116.16107941]
[177.92559814 115.00344849]
[164.63916016 121.73543549]
[151.47727966 112.95617676]
[136.52201843 111.79854584]
[132.83921814 118.21797180]
[128.07867432 123.67506409]
[122.46984100 128.00007629]
[116.26634216 131.07487488]
[109.73475647 132.83572388]
[103.14339447 133.27378845]
[96.75134277 132.43321228]
[90.79830170 130.40728760]
[83.18707275 143.33282471]
[75.57585144 156.25834656]
[67.96462250 169.18386841]
[60.35339737 182.10940552]
[65.20891571 194.68875122]
[61.97230911 207.57775879]
[52.04506683 216.11672974]
[39.20470428 217.35244751]
[31.37271690 230.14540100]
[23.54072762 242.93836975]
[15.70874023 255.73133850]
[7.87675095 268.52429199]
[7.27009916 284.33386230]
[-5.97409201 291.14862061]
[-13.80608082 303.94158936]
[-21.63806915 316.73455811]
[-29.47005844 329.52749634]
[-30.07670975 345.33706665]
[-43.32089996 352.15182495]
[-51.15288925 364.94479370]
[-58.98487854 377.73776245]
[-66.81686401 390.53070068]
[-62.49554062 396.49145508]
[-59.79531097 403.31707764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 32]
[10 30]
[11 29]
[12 28]
[13 27]
[14 25]
[15 24]
[16 23]
[35 180]
[36 179]
[37 178]
[38 177]
[40 175]
[41 174]
[42 173]
[43 172]
[45 170]
[46 169]
[47 168]
[48 167]
[49 166]
[52 162]
[53 161]
[54 160]
[55 159]
[56 158]
[58 106]
[59 105]
[61 104]
[62 103]
[63 102]
[64 101]
[65 100]
[66 99]
[69 93]
[70 92]
[71 91]
[74 88]
[75 87]
[76 86]
[77 85]
[109 128]
[110 127]
[111 126]
[112 125]
[129 150]
[130 149]
[132 147]
[133 146]
[134 145]
[135 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
