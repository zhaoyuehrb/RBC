%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGAUAUUAACCCGGGAGGCGGCGGCGGGGAGGGGAGAGGCUCUGAGAGGCGAGGCCGGGUGAGGCGGCGAGGGCGGCCCGACGGGCGCGGGACGGGACGGGGCAGCGAGGGCGCCGGGAGCCGCGGCCCGGAAUCGGGGCGCUUCGCCCCGGGCCCCCCAGC\
) } def
/len { sequence length } bind def

/coor [
[127.88162994 203.86724854]
[121.29301453 217.47172546]
[110.98591614 228.52862549]
[97.87681580 236.05477905]
[83.13138580 239.38096619]
[68.06076050 238.21144104]
[54.00502777 232.65016174]
[42.21400070 223.19166565]
[33.73613358 210.67698669]
[29.32527733 196.21891785]
[29.37363434 181.10307312]
[33.87691116 166.67352295]
[42.43467331 154.21333313]
[54.28597641 144.83047485]
[68.37700653 139.35926819]
[83.45480347 138.28617859]
[86.83214569 123.67133331]
[90.20948029 109.05649567]
[80.43498230 97.67760468]
[70.66136169 86.29972076]
[55.70431900 87.43415070]
[40.74728012 88.56858063]
[30.46998024 100.27391815]
[15.28525448 101.21131897]
[4.18934059 91.34135437]
[-10.76770020 92.47578430]
[-23.94318771 101.23461151]
[-37.21916962 94.48201752]
[-43.93554688 108.22383881]
[-56.54521561 116.70281982]
[-71.60581207 117.72492218]
[-85.06584167 111.11556244]
[-93.35454559 98.73966217]
[-108.31158447 99.87409210]
[-123.26863098 101.00852203]
[-138.22566223 102.14295959]
[-148.33239746 114.29325104]
[-164.07789612 115.65505981]
[-176.12066650 105.42044067]
[-177.31591797 89.66141510]
[-166.95454407 77.72753143]
[-151.18376160 76.69895172]
[-139.36010742 87.18591309]
[-124.40306091 86.05148315]
[-109.44602203 84.91705322]
[-94.48897552 83.78262329]
[-88.16167450 70.29815674]
[-75.85247803 61.73430252]
[-60.81000137 60.47321320]
[-47.06574631 66.95335388]
[-38.35360336 79.52497864]
[-26.24794197 70.84729004]
[-11.90213108 77.51874542]
[3.05490971 76.38431549]
[12.53526115 64.95371246]
[27.68766594 63.59017181]
[39.61284637 73.61154175]
[54.56988907 72.47711182]
[69.52693176 71.34267426]
[105.41342926 87.53621674]
[118.06005859 79.47006989]
[130.70669556 71.40392303]
[143.35333252 63.33778381]
[146.88128662 48.16572952]
[159.82168579 40.16566849]
[174.26417542 43.62254715]
[186.91081238 35.55640411]
[192.49440002 28.27022743]
[199.87397766 27.45990944]
[212.67098999 19.63453674]
[225.46800232 11.80916405]
[238.26501465 3.98379183]
[251.06202698 -3.84158087]
[263.85903931 -11.66695309]
[276.65603638 -19.49232674]
[282.37652588 -26.67153358]
[289.77011108 -27.34205437]
[302.71292114 -34.92385101]
[310.70962524 -48.57535553]
[325.60223389 -48.33223724]
[338.54504395 -55.91403580]
[351.48785400 -63.49583435]
[364.43066406 -71.07762909]
[377.37347412 -78.65943146]
[390.09585571 -86.60554504]
[402.58758545 -94.90956879]
[415.07931519 -103.21360016]
[427.57104492 -111.51762390]
[440.06274414 -119.82164764]
[452.47534180 -128.24349976]
[464.80767822 -136.78244019]
[477.14001465 -145.32136536]
[489.47235107 -153.86030579]
[486.95123291 -165.68629456]
[488.57986450 -177.63282776]
[494.14245605 -188.29084778]
[502.96060181 -196.41137695]
[513.97595215 -201.05175781]
[525.87731934 -201.68513489]
[537.25646973 -198.26011658]
[546.77514648 -191.20407104]
[559.57214355 -199.02943420]
[572.36920166 -206.85481262]
[580.10607910 -220.65519714]
[595.00067139 -220.69395447]
[607.79766846 -228.51933289]
[609.94458008 -244.00881958]
[621.58032227 -254.45603943]
[637.21075439 -254.92810059]
[649.45574951 -245.20213318]
[652.53356934 -229.87042236]
[644.99090576 -216.17214966]
[630.38928223 -210.57521057]
[615.62304688 -215.72230530]
[602.82604980 -207.89694214]
[596.00445557 -194.65628052]
[580.19458008 -194.05780029]
[567.39752197 -186.23242188]
[554.60052490 -178.40705872]
[555.91333008 -160.38214111]
[547.89404297 -144.09169006]
[532.66748047 -134.04576111]
[514.36669922 -133.07374573]
[498.01129150 -141.52796936]
[485.67895508 -132.98902893]
[473.34661865 -124.45009613]
[461.01428223 -115.91116333]
[457.28866577 -109.48975372]
[448.36679077 -107.32992554]
[435.87506104 -99.02590179]
[423.38333130 -90.72187042]
[410.89160156 -82.41784668]
[398.39990234 -74.11382294]
[397.35501099 -70.70264435]
[394.58041382 -67.63954926]
[390.26342773 -65.74366760]
[384.95526123 -65.71662140]
[372.01245117 -58.13482285]
[359.06964111 -50.55302429]
[346.12683105 -42.97122574]
[333.18402100 -35.38942719]
[326.11309814 -22.28022385]
[310.29470825 -21.98104286]
[297.35189819 -14.39924335]
[284.48141479 -6.69531298]
[271.68441772 1.13005960]
[258.88739014 8.95543194]
[246.09037781 16.78080559]
[233.29336548 24.60617828]
[220.49635315 32.43154907]
[207.69934082 40.25692368]
[194.97694397 48.20303726]
[182.33032227 56.26918030]
[179.37495422 70.82257843]
[166.66436768 79.18295288]
[151.41946411 75.98441315]
[138.77284241 84.05056000]
[126.12620544 92.11669922]
[113.47956848 100.18284607]
[104.82432556 112.43383789]
[101.44698334 127.04867554]
[98.06964874 141.66351318]
[111.14788055 149.24316406]
[121.40972900 160.34208679]
[127.94269562 173.97335815]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 162]
[17 161]
[18 160]
[20 59]
[21 58]
[22 57]
[25 54]
[26 53]
[28 51]
[33 46]
[34 45]
[35 44]
[36 43]
[60 159]
[61 158]
[62 157]
[63 156]
[66 153]
[67 152]
[69 151]
[70 150]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[77 144]
[78 143]
[80 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 127]
[91 126]
[92 125]
[93 124]
[101 119]
[102 118]
[103 117]
[105 115]
[106 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
