%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGAGGCGAGCCGGGCGCGGCGGCAGCAGGGACGACCCAGGCUGGAGCUGAGGCCGAGCUGAGGGCGCCCGAGCCCCCCGCCCCGCCCGUCCUCUGGCUCCGCAGCGCUCAGCCCCGGGCCCGCGGAGACAUGAACGCCCCGCGGCCCCACGCACCCCGGGCGCAGCGGCCCGGCCCCGCGGCCCCGUG\
) } def
/len { sequence length } bind def

/coor [
[78.84070587 248.58517456]
[78.84070587 233.58517456]
[78.84070587 218.58517456]
[78.84070587 203.58517456]
[71.10340118 190.85789490]
[78.84070587 177.05772400]
[78.84070587 162.05772400]
[78.84070587 147.05772400]
[69.00085449 135.73617554]
[54.14721298 133.64587402]
[39.29357529 131.55555725]
[22.39372063 138.84848022]
[8.99208927 127.52996063]
[-5.89392090 125.68423462]
[-20.77993202 123.83850861]
[-35.66594315 121.99279022]
[-50.55195236 120.14706421]
[-65.43796539 118.30133820]
[-80.08532715 124.28175354]
[-91.76381683 115.03717804]
[-106.64982605 113.19145203]
[-121.53583527 111.34573364]
[-136.42184448 109.50000763]
[-151.30786133 107.65428162]
[-164.89706421 118.65737152]
[-181.90588379 116.47940063]
[-191.88325500 102.95043182]
[-206.79760742 101.34979248]
[-223.44845581 109.19461823]
[-237.21510315 98.32299805]
[-252.15376282 96.96788025]
[-267.09243774 95.61276245]
[-275.93902588 97.95682526]
[-282.26495361 94.11051941]
[-297.17932129 92.50988007]
[-306.06326294 94.70812988]
[-312.32510376 90.75830078]
[-327.21109009 88.91257477]
[-342.09710693 87.06684875]
[-358.87472534 94.63674164]
[-372.46072388 83.54017639]
[-387.37506104 81.93953705]
[-402.28942871 80.33889771]
[-417.20376587 78.73825836]
[-431.75079346 84.95877075]
[-443.57974243 75.90753174]
[-452.46368408 78.10578156]
[-458.72552490 74.15594482]
[-473.61154175 72.31022644]
[-488.49557495 79.19478607]
[-501.74209595 69.52722931]
[-499.72421265 53.25270462]
[-484.51773071 47.11304855]
[-471.76580811 57.42421341]
[-456.87979126 59.26993942]
[-441.97912598 60.99317932]
[-428.49887085 54.65817261]
[-415.60311890 63.82390213]
[-400.68878174 65.42454529]
[-385.77441406 67.02517700]
[-370.86007690 68.62581635]
[-361.23867798 61.27641296]
[-348.79031372 62.49906921]
[-340.25137329 72.18083954]
[-325.36538696 74.02656555]
[-310.47937012 75.87228394]
[-295.57867432 77.59552765]
[-280.66433716 79.19616699]
[-265.73730469 80.67409515]
[-250.79864502 82.02922058]
[-235.85998535 83.38433838]
[-226.36077881 75.87767792]
[-213.89399719 76.89542389]
[-205.19697571 86.43544006]
[-190.28262329 88.03607941]
[-181.47282410 78.61950684]
[-168.65560913 75.96194458]
[-156.47090149 81.25450897]
[-149.46212769 92.76827240]
[-134.57612610 94.61399841]
[-119.69010925 96.45971680]
[-104.80410004 98.30544281]
[-89.91809082 100.15116882]
[-76.33547211 94.03873444]
[-63.59223557 103.41532898]
[-48.70622635 105.26105499]
[-33.82021713 107.10677338]
[-18.93420601 108.95249939]
[-4.04819632 110.79822540]
[10.83781433 112.64395142]
[20.57877922 105.45378876]
[33.00534058 106.88101959]
[41.38388824 116.70191956]
[56.23752594 118.79222870]
[71.09116364 120.88254547]
[72.82003021 85.12471771]
[101.48015594 73.73546600]
[106.55889893 59.62141418]
[111.63764954 45.50737000]
[116.71639252 31.39332199]
[110.23480225 17.22904587]
[115.58643341 2.98774362]
[129.12985229 -3.10417581]
[134.20860291 -17.21822357]
[133.88223267 -34.16902924]
[150.08026123 -39.17508316]
[159.37472534 -24.99590492]
[148.32264709 -12.13947582]
[143.24389648 1.97457147]
[149.80052185 15.29921818]
[144.85101318 29.68521690]
[130.83044434 36.47206879]
[125.75169373 50.58611679]
[120.67295074 64.70016479]
[115.59420013 78.81420898]
[117.90849304 80.73078156]
[119.98912048 82.89878082]
[121.80893707 85.28990173]
[136.11984253 80.79566193]
[150.43074036 76.30141449]
[161.27870178 64.78481293]
[175.73950195 68.35336304]
[190.05039978 63.85911942]
[204.36129761 59.36487579]
[218.67219543 54.87063217]
[232.98309326 50.37638855]
[247.29399109 45.88214493]
[258.14196777 34.36554337]
[272.60275269 37.93409348]
[279.86746216 32.36806488]
[287.18612671 33.48571014]
[294.50796509 19.47978783]
[309.61376953 14.83323765]
[323.54150391 22.30277443]
[328.02807617 37.45685196]
[320.41171265 51.30482864]
[305.21105957 55.63094330]
[291.44436646 47.86859131]
[277.09698486 52.24498749]
[267.27264404 63.44013214]
[251.78822327 60.19304276]
[237.47734070 64.68728638]
[223.16644287 69.18152618]
[208.85554504 73.67577362]
[194.54464722 78.17001343]
[180.23374939 82.66426086]
[170.40939331 93.85940552]
[154.92497253 90.61231232]
[140.61407471 95.10655975]
[126.30318451 99.60079956]
[127.05338287 115.10427856]
[118.24996185 130.63887024]
[128.90008545 141.20176697]
[139.55021667 151.76466370]
[156.19824219 148.82109070]
[171.17454529 156.30059814]
[178.67210388 171.08189392]
[175.91592407 187.25671387]
[186.73834229 197.64302063]
[197.56076050 208.02932739]
[208.38317871 218.41561890]
[219.20559692 228.80192566]
[230.02801514 239.18823242]
[245.82182312 238.61277771]
[257.33959961 249.43481445]
[257.74801636 265.23382568]
[246.80482483 276.63653564]
[231.00238037 276.87789917]
[219.71600342 265.81475830]
[219.64170837 250.01065063]
[208.81929016 239.62434387]
[197.99687195 229.23803711]
[187.17445374 218.85174561]
[176.35203552 208.46543884]
[165.52961731 198.07913208]
[152.65498352 201.64808655]
[139.59437561 198.35879517]
[129.78956604 188.96765137]
[125.87876129 175.85328674]
[128.98731995 162.41479492]
[118.33719635 151.85189819]
[107.68706512 141.28898621]
[93.84070587 147.05772400]
[93.84070587 162.05772400]
[93.84070587 177.05772400]
[101.57800293 190.85789490]
[93.84070587 203.58517456]
[93.84070587 218.58517456]
[93.84070587 233.58517456]
[93.84070587 248.58517456]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[3 188]
[4 187]
[6 185]
[7 184]
[8 183]
[9 95]
[10 94]
[11 93]
[13 90]
[14 89]
[15 88]
[16 87]
[17 86]
[18 85]
[20 83]
[21 82]
[22 81]
[23 80]
[24 79]
[27 75]
[28 74]
[30 71]
[31 70]
[32 69]
[34 68]
[35 67]
[37 66]
[38 65]
[39 64]
[41 61]
[42 60]
[43 59]
[44 58]
[46 56]
[48 55]
[49 54]
[97 115]
[98 114]
[99 113]
[100 112]
[103 109]
[104 108]
[118 150]
[119 149]
[120 148]
[122 146]
[123 145]
[124 144]
[125 143]
[126 142]
[127 141]
[129 139]
[131 138]
[152 182]
[153 181]
[154 180]
[158 175]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
