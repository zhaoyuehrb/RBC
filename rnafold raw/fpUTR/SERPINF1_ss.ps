%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAGACAGUGAUGCAAUCACAGAAUCCAAAUUGAGUGCAGGUCGCUUUAAGAAAGGAGUAGCUGUAAUCUGAAGCCUGCUGGACGCUGGAUUAGAAGGCAGCAAAAAAAGCUCUGUGCUGGCUGGAGCCCCCUCAGUGUGCAGGCUUAGAGGGACUAGGCUGGGUGUGGAGCUGCAGCGUAUCCACAGGCCCCAGG\
) } def
/len { sequence length } bind def

/coor [
[-98.47908020 246.12985229]
[-112.83260345 252.99629211]
[-129.57028198 253.24064636]
[-136.44367981 266.57318115]
[-131.86170959 281.46087646]
[-139.02223206 294.88403320]
[-153.24360657 299.16049194]
[-152.69003296 314.97201538]
[-165.39918518 322.73901367]
[-172.27258301 336.07156372]
[-179.14598083 349.40408325]
[-186.01937866 362.73663330]
[-192.89277649 376.06915283]
[-194.77648926 392.91812134]
[-211.48846436 395.77230835]
[-218.85742188 380.50354004]
[-206.22531128 369.19573975]
[-199.35191345 355.86322021]
[-192.47851562 342.53070068]
[-185.60511780 329.19815063]
[-178.73171997 315.86563110]
[-179.77693176 301.00775146]
[-166.57614136 292.28710938]
[-171.34184265 278.22210693]
[-164.56117249 264.60311890]
[-149.77621460 259.69976807]
[-142.90281677 246.36724854]
[-146.54928589 239.81336975]
[-158.97322083 248.21849060]
[-171.39714050 256.62359619]
[-183.13647461 265.96105957]
[-196.40843201 258.97143555]
[-195.35017395 244.00880432]
[-181.22674561 238.95671082]
[-167.53448486 232.83117676]
[-153.84223938 226.70562744]
[-157.48870850 220.15176392]
[-172.44152832 218.96301270]
[-187.39436340 217.77426147]
[-202.34718323 216.58551025]
[-217.30000305 215.39675903]
[-231.66995239 222.01606750]
[-243.74400330 213.29446411]
[-252.55749512 215.73577881]
[-258.92401123 211.96638489]
[-273.85610962 210.54054260]
[-288.78817749 209.11470032]
[-303.72024536 207.68885803]
[-318.65234375 206.26303101]
[-330.67822266 216.51745605]
[-346.42596436 215.18159485]
[-356.55267334 203.04795837]
[-355.05038452 187.31523132]
[-342.81036377 177.31735229]
[-327.09439087 178.98590088]
[-317.22650146 191.33094788]
[-302.29440308 192.75679016]
[-287.36233521 194.18263245]
[-272.43026733 195.60845947]
[-257.49816895 197.03430176]
[-242.55526733 198.34164429]
[-229.25483704 191.63731384]
[-216.11125183 200.44393921]
[-201.15843201 201.63269043]
[-186.20561218 202.82144165]
[-171.25279236 204.01019287]
[-156.29995728 205.19894409]
[-138.32962036 184.45993042]
[-113.39136505 181.28569031]
[-94.61376190 194.28933716]
[-81.39196014 187.20526123]
[-68.17015839 180.12120056]
[-64.11987305 165.83377075]
[-50.81200027 158.46116638]
[-35.85348892 162.80635071]
[-22.63168907 155.72229004]
[-9.40988731 148.63822937]
[3.81191278 141.55415344]
[17.03371239 134.47009277]
[21.44961548 128.53370667]
[30.52196503 127.38040924]
[43.85449600 120.50701141]
[57.18702698 113.63361359]
[70.51956177 106.76021576]
[66.42938995 86.59523773]
[76.75971222 64.95555115]
[74.62498474 50.10822678]
[72.49026489 35.26090622]
[70.35554504 20.41358376]
[56.06721497 14.77982807]
[46.52260208 2.74670792]
[44.28916168 -12.44892693]
[49.96767807 -26.71952820]
[62.03065491 -36.22637558]
[77.23321533 -38.41217041]
[91.48594666 -32.68895340]
[100.95493317 -20.59623528]
[103.09307098 -5.38689756]
[97.32520294 8.84782410]
[85.20286560 18.27886009]
[87.33758545 33.12618256]
[89.47231293 47.97350311]
[91.60703278 62.82082748]
[98.98252869 64.18173981]
[101.70436096 49.43075562]
[104.42641449 34.67980957]
[119.17732239 37.40209579]
[116.45534515 52.15258408]
[113.73351288 66.90357208]
[121.10900879 68.26448822]
[128.40196228 55.15674591]
[135.69491577 42.04900742]
[132.69781494 26.28839302]
[143.26017761 14.21296310]
[159.27946472 15.08595562]
[168.46704102 28.23768425]
[163.77499390 43.57926941]
[148.80264282 49.34195709]
[141.50970459 62.44969940]
[134.21675110 75.55744171]
[133.24209595 85.80013275]
[129.71765137 94.37348175]
[144.68745422 95.32484436]
[159.65725708 96.27619934]
[174.62705994 97.22756195]
[188.89018250 90.38109589]
[201.10108948 98.91003418]
[216.07089233 99.86138916]
[231.04069519 100.81275177]
[246.01756287 101.64531708]
[261.00057983 102.35904694]
[275.98876953 102.95389557]
[290.98452759 103.31085968]
[305.98263550 103.54884338]
[320.98074341 103.78683472]
[335.97888184 104.02482605]
[350.97698975 104.26281738]
[365.97509766 104.50080109]
[379.89630127 96.98342896]
[392.49920654 104.92169189]
[407.49731445 105.15967560]
[414.93624878 93.54848480]
[427.04629517 87.18219757]
[440.61209106 87.63021851]
[452.09106445 94.66847992]
[458.53851318 106.36592102]
[473.53094482 106.84184265]
[487.72262573 98.62427521]
[501.79815674 107.03923035]
[501.27786255 123.43011475]
[486.69696045 130.93540955]
[473.05502319 121.83428955]
[458.06259155 121.35836792]
[448.42239380 134.63931274]
[432.60836792 139.61070251]
[416.78909302 134.12585449]
[407.25930786 120.15779114]
[392.26119995 119.91979980]
[379.41278076 127.45419312]
[365.73709106 119.49891663]
[350.73898315 119.26092529]
[335.74087524 119.02294159]
[320.74276733 118.78495026]
[305.74465942 118.54695892]
[290.74655151 118.30896759]
[284.00146484 121.34947968]
[275.51284790 117.94634247]
[268.72039795 120.87944794]
[260.28686523 117.34205627]
[245.30384827 116.62833405]
[238.46568298 119.45330048]
[230.08934021 115.78255463]
[215.11953735 114.83119202]
[200.14973450 113.87983704]
[186.95735168 120.79434204]
[173.67570496 112.19735718]
[158.70590210 111.24600220]
[143.73609924 110.29463959]
[128.76629639 109.34328461]
[120.20379639 122.50785065]
[106.19450378 129.60447693]
[90.51522064 128.71995544]
[77.39295959 120.09275055]
[64.06042480 126.96614838]
[50.72789383 133.83953857]
[37.39536285 140.71293640]
[24.11777878 147.69189453]
[10.89597893 154.77595520]
[-2.32582164 161.86003113]
[-15.54762173 168.94409180]
[-28.76942253 176.02815247]
[-33.43756866 190.88905334]
[-46.94727325 197.88494873]
[-61.08609390 193.34300232]
[-74.30789185 200.42706299]
[-87.52969360 207.51113892]
[-85.19528198 220.73812866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 27]
[4 26]
[7 23]
[9 21]
[10 20]
[11 19]
[12 18]
[13 17]
[37 67]
[38 66]
[39 65]
[40 64]
[41 63]
[43 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[70 196]
[71 195]
[72 194]
[75 191]
[76 190]
[77 189]
[78 188]
[79 187]
[81 186]
[82 185]
[83 184]
[84 183]
[86 103]
[87 102]
[88 101]
[89 100]
[110 120]
[111 119]
[112 118]
[122 179]
[123 178]
[124 177]
[125 176]
[127 174]
[128 173]
[129 172]
[130 170]
[131 169]
[132 167]
[133 165]
[134 164]
[135 163]
[136 162]
[137 161]
[138 160]
[140 158]
[141 157]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
