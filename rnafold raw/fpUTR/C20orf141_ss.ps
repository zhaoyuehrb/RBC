%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGAGGUGAGGAGGGUUUGCUGGGUGGGUAUGGGGGAGGGGGAGACUCUGCAGGAGCCUAAUUCCCCACUCUGAGCUCACCCUUCUGUCUGCCCGGGCCCUACCCCUUCCCCUACUCUCACCCUUAUAAUCCUUUUCAGCACUAGGUCUUCCCGUCACCUCCACCUCUCUCC\
) } def
/len { sequence length } bind def

/coor [
[93.90403748 230.77000427]
[93.90403748 215.77000427]
[93.90403748 200.77000427]
[93.90403748 185.77000427]
[93.76940155 170.77061462]
[93.50013733 155.77302551]
[93.23086548 140.77545166]
[92.96160126 125.77786255]
[92.69233704 110.78028107]
[89.09255219 96.21863556]
[82.34274292 82.82311249]
[75.59293365 69.42758179]
[68.84313202 56.03205872]
[62.09332275 42.63653183]
[55.34351730 29.24100685]
[48.59370804 15.84548187]
[41.84390259 2.44995594]
[35.09409714 -10.94556999]
[28.34428978 -24.34109497]
[13.07984066 -25.31262779]
[0.43465310 -33.73854065]
[-6.25078058 -47.27262115]
[-5.27077913 -62.23576355]
[3.01154113 -74.61593628]
[-3.73826551 -88.01146698]
[-10.48807240 -101.40699005]
[-17.23787880 -114.80251312]
[-23.98768616 -128.19804382]
[-30.73749161 -141.59356689]
[-37.48730087 -154.98908997]
[-52.22628021 -160.02896118]
[-58.88071823 -173.71008301]
[-53.98514938 -187.73037720]
[-60.73495483 -201.12591553]
[-67.48476410 -214.52143860]
[-74.23456573 -227.91696167]
[-80.98437500 -241.31248474]
[-87.73418427 -254.70800781]
[-94.48398590 -268.10354614]
[-101.23379517 -281.49905396]
[-107.98360443 -294.89459229]
[-114.73340607 -308.29010010]
[-121.48321533 -321.68563843]
[-128.23301697 -335.08117676]
[-135.10279846 -348.41555786]
[-142.09197998 -361.68777466]
[-157.88679504 -371.12362671]
[-156.55973816 -388.60806274]
[-163.78604126 -401.75268555]
[-171.01234436 -414.89727783]
[-186.97401428 -424.04809570]
[-185.96101379 -441.55352783]
[-193.42211914 -454.56631470]
[-200.88322449 -467.57907104]
[-208.34431458 -480.59182739]
[-216.94183350 -492.88339233]
[-226.60655212 -504.35479736]
[-236.27127075 -515.82623291]
[-245.93597412 -527.29760742]
[-255.70327759 -538.68182373]
[-270.09539795 -533.78942871]
[-285.26388550 -534.78204346]
[-298.89566040 -541.50836182]
[-308.91198730 -552.94256592]
[-313.78546143 -567.34106445]
[-312.77288818 -582.50823975]
[-306.02868652 -596.13116455]
[-294.58129883 -606.13250732]
[-280.17636108 -610.98699951]
[-265.01052856 -609.95446777]
[-251.39648438 -603.19232178]
[-241.41026306 -591.73181152]
[-236.57470703 -577.32049561]
[-237.62718201 -562.15606689]
[-244.40719604 -548.55090332]
[-237.61567688 -545.57257080]
[-234.46456909 -536.96234131]
[-224.79985046 -525.49090576]
[-215.13513184 -514.01953125]
[-205.47042847 -502.54812622]
[-206.17672729 -517.53149414]
[-199.40261841 -530.91473389]
[-186.90989685 -539.21722412]
[-171.94757080 -540.27972412]
[-158.40696716 -533.82586670]
[-149.80966187 -521.53417969]
[-148.39157104 -506.60137939]
[-154.52151489 -492.91107178]
[-166.60523987 -484.02383423]
[-181.50010681 -482.25094604]
[-195.33155823 -488.05291748]
[-187.87045288 -475.04016113]
[-180.40936279 -462.02740479]
[-172.94825745 -449.01464844]
[-161.34089661 -445.53564453]
[-155.02488708 -434.72698975]
[-157.86775208 -422.12359619]
[-150.64143372 -408.97897339]
[-143.41513062 -395.83438110]
[-131.87210083 -392.14761353]
[-125.75112915 -381.22729492]
[-128.81977844 -368.67694092]
[-121.83058929 -355.40475464]
[-115.91196442 -350.93649292]
[-114.83749390 -341.83096313]
[-108.08769226 -328.43545532]
[-101.33788300 -315.03991699]
[-94.58807373 -301.64440918]
[-87.83827209 -288.24887085]
[-81.08846283 -274.85333252]
[-74.33865356 -261.45782471]
[-67.58885193 -248.06228638]
[-60.83904266 -234.66676331]
[-54.08923721 -221.27124023]
[-47.33943176 -207.87571716]
[-40.58962250 -194.48019409]
[-26.40840721 -190.07238770]
[-19.37231827 -176.58357239]
[-24.09177399 -161.73890686]
[-17.34196663 -148.34336853]
[-10.59216022 -134.94784546]
[-3.84235334 -121.55232239]
[2.90745354 -108.15679932]
[9.65725994 -94.76126862]
[16.40706635 -81.36574554]
[31.28529167 -80.65582275]
[43.89442062 -72.54004669]
[50.79388809 -59.11381149]
[50.04168701 -43.93715286]
[41.73981476 -31.09090233]
[48.48962021 -17.69537735]
[55.23942947 -4.29985094]
[61.98923492 9.09567451]
[68.73904419 22.49120140]
[75.48884583 35.88672638]
[82.23865509 49.28225327]
[88.98846436 62.67777634]
[95.73826599 76.07330322]
[102.48807526 89.46882629]
[98.93985748 74.89453125]
[104.23045349 60.85852051]
[116.51604462 52.25245667]
[131.51499939 52.07562256]
[144.00007629 60.38964462]
[149.62011719 74.29701996]
[146.41749573 88.94915009]
[156.68569946 99.88368225]
[166.95390320 110.81820679]
[177.22212219 121.75273895]
[192.37345886 118.84749603]
[206.68173218 124.61608124]
[215.58123779 137.21775818]
[216.23217773 152.63137817]
[208.42681885 165.93852234]
[194.65583801 172.89291382]
[179.31349182 171.27543640]
[167.29548645 161.60223389]
[162.43670654 146.95996094]
[166.28758240 132.02095032]
[156.01937866 121.08641815]
[145.75117493 110.15188599]
[135.48297119 99.21736145]
[128.53469849 102.04077148]
[114.63818359 107.68759918]
[107.68991852 110.51101685]
[107.95919037 125.50859833]
[108.22845459 140.50617981]
[108.49771881 155.50376892]
[108.76698303 170.50134277]
[112.05895233 179.05867004]
[108.90403748 185.77000427]
[108.90403748 200.77000427]
[108.90403748 215.77000427]
[108.90403748 230.77000427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[4 171]
[5 169]
[6 168]
[7 167]
[8 166]
[9 165]
[10 139]
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[24 125]
[25 124]
[26 123]
[27 122]
[28 121]
[29 120]
[30 119]
[33 116]
[34 115]
[35 114]
[36 113]
[37 112]
[38 111]
[39 110]
[40 109]
[41 108]
[42 107]
[43 106]
[44 105]
[45 103]
[46 102]
[48 99]
[49 98]
[50 97]
[52 94]
[53 93]
[54 92]
[55 91]
[56 80]
[57 79]
[58 78]
[59 77]
[60 75]
[146 162]
[147 161]
[148 160]
[149 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
