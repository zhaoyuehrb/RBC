%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUGUGCGUCAUGUACCAGCGCCGGAAGUUGGUCUCGACACCUGGACUAGCCGGGUUGUAUUUGGAAACGCGGAGUGAGUUUUUCCGUGCUGUGUAGGGGCUAACA\
) } def
/len { sequence length } bind def

/coor [
[196.86404419 214.57905579]
[197.24870300 203.51725769]
[186.41531372 193.14239502]
[175.58193970 182.76753235]
[164.74855042 172.39266968]
[150.20503235 169.17782593]
[145.58975220 154.04475403]
[134.75637817 143.66989136]
[123.92298889 133.29502869]
[113.08960724 122.92016602]
[102.25622559 112.54529572]
[90.98456573 102.64833832]
[79.29570007 93.24778748]
[63.69281769 90.62851715]
[58.62398911 76.62294006]
[46.93512344 67.22238922]
[35.24625778 57.82183075]
[23.55739212 48.42127609]
[14.76624680 45.41613007]
[11.67226124 38.57749557]
[0.25915509 28.84399796]
[-11.15395069 19.11049843]
[-19.85484123 15.85325432]
[-22.75046730 8.92830086]
[-33.87833405 -1.13005865]
[-45.00619888 -11.18841839]
[-56.13406754 -21.24677849]
[-61.54411697 -22.38820076]
[-65.49690247 -25.27680969]
[-67.56029510 -29.02017593]
[-67.74021912 -32.68687057]
[-77.95789337 -43.66863632]
[-88.17556763 -54.65040207]
[-98.39324188 -65.63216400]
[-108.61091614 -76.61392975]
[-118.82859039 -87.59569550]
[-129.04626465 -98.57746124]
[-144.11125183 -103.41033173]
[-147.11618042 -117.99867249]
[-162.94361877 -122.29100800]
[-166.87792969 -138.21122742]
[-154.87181091 -149.38197327]
[-139.27615356 -144.31173706]
[-136.13441467 -128.21633911]
[-121.80025482 -124.16896820]
[-118.06449127 -108.79513550]
[-107.84682465 -97.81336975]
[-97.62915039 -86.83160400]
[-87.41147614 -75.84983826]
[-77.19380188 -64.86807251]
[-66.97612762 -53.88631058]
[-56.75845718 -42.90454483]
[-46.07570648 -32.37464523]
[-34.94784164 -22.31628418]
[-23.81997299 -12.25792503]
[-12.69210815 -2.19956541]
[-1.42045128 7.69739199]
[9.99265480 17.43089104]
[21.40575981 27.16439056]
[32.95794678 36.73241043]
[44.64681244 46.13296509]
[56.33567810 55.53351974]
[68.02454376 64.93407440]
[82.79135895 66.88095093]
[88.69625854 81.55892181]
[100.38512421 90.95947266]
[104.41244507 91.05602264]
[108.35771179 93.00662231]
[111.35835266 96.72128296]
[112.63108826 101.71191406]
[123.46446991 112.08677673]
[134.29785156 122.46164703]
[145.13124084 132.83650208]
[155.96461487 143.21138000]
[171.28302002 147.16828918]
[175.12341309 161.55928040]
[185.95680237 171.93414307]
[196.79019165 182.30900574]
[207.62356567 192.68386841]
[227.32893372 196.42164612]
[232.26661682 215.02328491]
[243.67971802 224.75679016]
[255.09281921 234.49028015]
[270.63320923 233.42518616]
[282.06906128 243.45892334]
[282.98867798 258.28085327]
[294.40179443 268.01437378]
[305.81491089 277.74786377]
[321.33581543 280.81567383]
[325.99893188 294.96151733]
[337.41204834 304.69500732]
[348.82516479 314.42852783]
[364.80020142 320.10601807]
[363.76690674 337.02847290]
[347.21975708 340.72015381]
[339.09164429 325.84161377]
[327.67855835 316.10812378]
[316.26544189 306.37463379]
[301.56085205 304.00302124]
[296.08139038 289.16098022]
[284.66830444 279.42745972]
[273.25518799 269.69396973]
[258.47390747 271.12561035]
[246.76075745 261.41705322]
[245.35932922 245.90338135]
[233.94621277 236.16989136]
[222.53311157 226.43638611]
[212.27352905 228.16375732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 79]
[3 78]
[4 77]
[5 76]
[7 74]
[8 73]
[9 72]
[10 71]
[11 70]
[12 66]
[13 65]
[15 63]
[16 62]
[17 61]
[18 60]
[20 59]
[21 58]
[22 57]
[24 56]
[25 55]
[26 54]
[27 53]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[39 44]
[81 107]
[82 106]
[83 105]
[86 102]
[87 101]
[88 100]
[90 98]
[91 97]
[92 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
