%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUUCUCACUGCCCCUGUGAUAAACUGUGGUCACUGGCUGUGGCAGCAACUAUUAUAAGAUGCUCUGAAAACUCUUCAGACACUGAGGGGCACCAGAGGAGCAGACUACAAGA\
) } def
/len { sequence length } bind def

/coor [
[119.42345428 344.73623657]
[127.48683929 331.87753296]
[139.65316772 322.80310059]
[135.60621643 308.35934448]
[131.55926514 293.91558838]
[127.51231384 279.47183228]
[123.46536255 265.02807617]
[119.41841125 250.58432007]
[104.45685577 243.03947449]
[99.41945648 226.70642090]
[107.85726166 211.45700073]
[103.41729736 197.12918091]
[98.97732544 182.80134583]
[94.53735352 168.47352600]
[90.09738159 154.14569092]
[85.65741730 139.81785583]
[81.21744537 125.49003601]
[71.59307861 113.98474884]
[58.27480316 107.08377075]
[44.95652390 100.18279266]
[31.63824654 93.28182220]
[18.31996727 86.38084412]
[5.00168991 79.47986603]
[-7.36232948 85.02402496]
[-20.46256256 82.42929077]
[-29.51092148 72.87447357]
[-31.33395958 60.03941345]
[-44.45877075 52.77722549]
[-57.58358002 45.51504135]
[-73.40453339 45.60378647]
[-80.79475403 32.67189026]
[-93.91957092 25.40970230]
[-107.04438019 18.14751625]
[-120.16918945 10.88532925]
[-133.29399109 3.62314272]
[-149.04754639 6.65719604]
[-161.14770508 -3.87681746]
[-160.31228638 -19.89810371]
[-147.18214417 -29.11650467]
[-131.82960510 -24.46044922]
[-126.03181458 -9.50166702]
[-112.90700531 -2.23948050]
[-99.78218842 5.02270603]
[-86.65737915 12.28489304]
[-73.53256989 19.54707909]
[-58.65038681 18.93889427]
[-50.32139206 32.39022827]
[-37.19658279 39.65241623]
[-24.07177162 46.91460419]
[-8.19353008 41.56163788]
[6.97185612 49.44548416]
[11.90266514 66.16159058]
[25.22094345 73.06256866]
[38.53922272 79.96353912]
[51.85750198 86.86451721]
[65.17578125 93.76549530]
[78.49405670 100.66646576]
[88.60942841 84.51933289]
[105.53314209 84.00701904]
[116.21193695 73.47310638]
[120.19641876 65.09900665]
[127.32923126 62.80228043]
[138.29177856 52.56398392]
[142.50349426 44.30184937]
[149.69639587 42.20080948]
[160.93449402 32.26577377]
[172.17260742 22.33073425]
[183.41070557 12.39569759]
[194.64881897 2.46065998]
[205.88691711 -7.47437763]
[208.30358887 -23.33436775]
[222.28147888 -31.20825768]
[237.09794617 -25.05587578]
[241.38706970 -9.59679985]
[231.85859680 3.31008768]
[215.82196045 3.76372862]
[204.58384705 13.69876575]
[193.34574890 23.63380432]
[182.10763550 33.56884003]
[170.86953735 43.50387955]
[159.63142395 53.43891525]
[148.53007507 63.52652359]
[137.56753540 73.76482391]
[126.74585724 84.15189362]
[116.06706238 94.68581390]
[114.32252502 112.81645203]
[95.54527283 121.05006409]
[99.98524475 135.37789917]
[104.42521667 149.70571899]
[108.86518097 164.03355408]
[113.30515289 178.36137390]
[117.74512482 192.68920898]
[122.18509674 207.01702881]
[134.81484985 211.92578125]
[142.16738892 223.07426453]
[141.71945190 236.22595215]
[133.86216736 246.53736877]
[137.90911865 260.98114014]
[141.95606995 275.42489624]
[146.00302124 289.86865234]
[150.04997253 304.31240845]
[154.09692383 318.75616455]
[169.20698547 320.18807983]
[182.77767944 326.98519897]
[192.97367859 338.22827148]
[198.41604614 352.39669800]
[198.36875916 367.57440186]
[192.83821106 381.70864868]
[182.57235718 392.88796997]
[168.95957947 399.60040283]
[153.84089661 400.93814087]
[139.26097107 396.72030640]
[127.19161987 387.51730347]
[119.26513672 374.57376099]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 102]
[4 101]
[5 100]
[6 99]
[7 98]
[8 97]
[11 93]
[12 92]
[13 91]
[14 90]
[15 89]
[16 88]
[17 87]
[18 57]
[19 56]
[20 55]
[21 54]
[22 53]
[23 52]
[27 49]
[28 48]
[29 47]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[59 85]
[60 84]
[62 83]
[63 82]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
