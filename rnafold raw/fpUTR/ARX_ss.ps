%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUCCUGAGCGCGGAGAGGGCGAGCUCGGGCCGCGGGCAGGGCGGGAGCCGGCAGCCGGCAACCAAGGGAGGCAGAAAGGCACAAAGAUCGCAAUAAUAUCCGUUAUAACCCGCUAUCUAACCCCACCCCCAACACACACCCAUCCAUCCCACCCUCCGGGAGAGGCAGCCGGCGAUCCGCUCUCUGCGCCCUGGGAAAAAGCCCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[18.37665176 505.31048584]
[24.46416092 491.60137939]
[17.00447655 490.82479858]
[16.64881134 506.64199829]
[3.51444507 513.66607666]
[-4.11352158 526.58172607]
[-11.74148846 539.49737549]
[-19.36945534 552.41302490]
[-26.99742126 565.32867432]
[-34.62538910 578.24432373]
[-42.25335693 591.16003418]
[-42.60902023 606.97723389]
[-55.74338531 614.00128174]
[-63.37135315 626.91693115]
[-57.99813843 641.60241699]
[-63.37022400 656.28826904]
[-76.95108032 664.04034424]
[-92.32823181 661.19830322]
[-102.24106598 649.10412598]
[-102.00904846 633.46826172]
[-91.74172211 621.67346191]
[-76.28701019 619.28900146]
[-68.65904236 606.37335205]
[-68.84897614 591.47991943]
[-55.16901016 583.53204346]
[-47.54104233 570.61639404]
[-39.91307449 557.70074463]
[-32.28511047 544.78509521]
[-24.65714264 531.86944580]
[-17.02917671 518.95379639]
[-9.40120888 506.03811646]
[-9.59114838 491.14471436]
[4.08882189 483.19683838]
[9.41588783 469.17462158]
[12.28771973 454.45208740]
[15.15955162 439.72958374]
[10.00208759 425.75640869]
[20.23837662 413.69287109]
[15.08091164 399.71966553]
[25.31719971 387.65612793]
[28.18903160 372.93362427]
[31.06086540 358.21109009]
[33.93269730 343.48858643]
[36.80452728 328.76605225]
[39.67636108 314.04354858]
[42.54819107 299.32101440]
[45.42002487 284.59851074]
[38.83173752 268.33279419]
[51.03776550 254.54486084]
[53.69111633 239.78140259]
[56.34447098 225.01794434]
[58.99782562 210.25448608]
[61.65118027 195.49102783]
[64.30453491 180.72755432]
[58.94057846 166.83233643]
[68.99697876 154.61843872]
[71.65033722 139.85498047]
[74.30368805 125.09152222]
[66.29634094 112.40758514]
[51.82680511 108.45377350]
[34.95407867 110.11129761]
[28.69049454 94.35681152]
[42.09535980 83.97673798]
[55.78061295 93.98423767]
[70.25014496 97.93804932]
[73.74922943 84.47677612]
[83.12730408 73.78802490]
[96.59539032 68.33361816]
[92.64157867 53.86408615]
[88.68777466 39.39455414]
[83.40740967 31.94195366]
[84.78427887 24.68127441]
[71.45852661 16.61517906]
[67.87361908 1.82994521]
[75.64553070 -10.82442188]
[71.90657043 -25.35095596]
[68.16761017 -39.87748718]
[57.47930527 -47.09621048]
[54.66387939 -59.27179718]
[60.69917679 -69.75464630]
[57.17588806 -84.33499146]
[53.65259552 -98.91532898]
[38.62271881 -98.20872498]
[23.73076439 -100.35957336]
[9.51506519 -105.29013824]
[-3.51048827 -112.82216644]
[-14.87503147 -122.68338013]
[-24.16774178 -134.51731873]
[-31.05269623 -147.89617920]
[-35.28100586 -162.33633423]
[-36.69982147 -177.31576538]
[-35.25785065 -192.29298401]
[-31.00722122 -206.72657776]
[-24.10159302 -220.09478760]
[-14.79059887 -231.91433716]
[-3.41082501 -241.75798035]
[9.62635708 -249.26985168]
[23.84966087 -254.17843628]
[38.74492264 -256.30627441]
[53.77368927 -255.57641602]
[68.39267731 -252.01528931]
[82.07342529 -245.75161743]
[94.32138062 -237.01181030]
[104.69378662 -226.11183167]
[112.81568146 -213.44567871]
[118.39347076 -199.47123718]
[121.22551727 -184.69369507]
[121.20944977 -169.64723206]
[118.34584045 -154.87576294]
[112.73822021 -140.91326904]
[104.58928680 -128.26449585]
[94.19362640 -117.38668823]
[81.92703247 -108.67306519]
[68.23294067 -102.43862152]
[71.75623322 -87.85827637]
[75.27952576 -73.27793884]
[88.04568481 -61.23619843]
[82.69414520 -43.61644745]
[86.43310547 -29.08991432]
[90.17206573 -14.56338120]
[103.08763123 -7.23372793]
[107.08640289 7.44498014]
[99.31081390 20.94231415]
[103.15730286 35.44074631]
[107.11111450 49.91027832]
[111.06491852 64.37981415]
[114.53218842 49.78604507]
[117.99946594 35.19227982]
[121.46673584 20.59851265]
[118.09453583 5.98248434]
[119.20185089 -8.97658825]
[124.68934631 -22.93679619]
[134.06475830 -34.64583588]
[146.48707581 -43.05334473]
[160.84193420 -47.40512085]
[175.84164429 -47.31078720]
[190.14062500 -42.77881241]
[202.45622253 -34.21573257]
[211.68362427 -22.38970184]
[216.99510193 -8.36157990]
[217.91418457 6.61023617]
[214.35842896 21.18269539]
[206.64678955 34.04857254]
[195.47106934 44.05372620]
[181.83377075 50.30064392]
[166.95776367 52.22893143]
[154.48458862 60.56079483]
[142.01141357 68.89265442]
[129.53823853 77.22451782]
[144.47898865 75.89257812]
[159.41973877 74.56063843]
[174.36048889 73.22870636]
[183.15974426 60.30171967]
[198.22363281 56.10490799]
[212.43945312 62.61988068]
[219.09489441 76.77046204]
[215.04750061 91.87518311]
[202.20829773 100.80205536]
[186.63958740 99.33608246]
[175.69242859 88.16944885]
[160.75167847 89.50138855]
[145.81092834 90.83332825]
[130.87017822 92.16526794]
[127.60665894 114.47853088]
[110.63492584 128.58271790]
[89.06714630 127.74487305]
[86.41379547 142.50833130]
[83.76043701 157.27178955]
[88.93460846 172.22299194]
[79.06799316 183.38092041]
[76.41464233 198.14437866]
[73.76128387 212.90783691]
[71.10793304 227.67129517]
[68.45457458 242.43475342]
[65.80122375 257.19821167]
[72.51004791 268.21371460]
[69.99663544 280.45523071]
[60.14254379 287.47033691]
[57.27071381 302.19284058]
[54.39888000 316.91537476]
[51.52705002 331.63787842]
[48.65521622 346.36041260]
[45.78338242 361.08291626]
[42.91155243 375.80545044]
[40.03971863 390.52795410]
[44.99177170 405.55419922]
[34.96089554 416.56469727]
[39.91294861 431.59091187]
[29.88207245 442.60140991]
[27.01023865 457.32391357]
[24.13840675 472.04644775]
[43.24208450 472.28393555]
[61.05311203 489.12713623]
[65.85716248 503.33700562]
[70.66120911 517.54693604]
[75.46525574 531.75683594]
[80.26930237 545.96667480]
[94.90145111 551.48339844]
[102.51914215 565.14007568]
[99.52553558 580.48846436]
[87.33412170 590.28149414]
[71.70130920 589.89520264]
[60.00843811 579.51202393]
[57.77652359 564.03454590]
[66.05941010 550.77075195]
[61.25535965 536.56085205]
[56.45131302 522.35095215]
[51.64726257 508.14105225]
[46.84321594 493.93118286]
[39.38352966 493.15457153]
[42.51667786 507.82369995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 33]
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[10 26]
[11 25]
[13 23]
[14 22]
[34 191]
[35 190]
[36 189]
[38 187]
[40 185]
[41 184]
[42 183]
[43 182]
[44 181]
[45 180]
[46 179]
[47 178]
[49 175]
[50 174]
[51 173]
[52 172]
[53 171]
[54 170]
[56 168]
[57 167]
[58 166]
[59 65]
[60 64]
[68 126]
[69 125]
[70 124]
[72 123]
[75 120]
[76 119]
[77 118]
[80 116]
[81 115]
[82 114]
[149 163]
[150 162]
[151 161]
[152 160]
[193 209]
[194 208]
[195 207]
[196 206]
[197 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
