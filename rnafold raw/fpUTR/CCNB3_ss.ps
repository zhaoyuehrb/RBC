%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGUCUGGAACUGGAUUACAGUUUCUUCUGAUUGAACGCAGCCUUUGAAUACUGCCUGGCCUAUCGCGAAUACAUCCCUGCCUUGGACAAGACGCAGCUGAAUCUCUAAGUG\
) } def
/len { sequence length } bind def

/coor [
[110.77520752 211.93478394]
[119.18743896 199.38842773]
[130.79452515 189.72134399]
[124.81850433 175.96318054]
[118.84249115 162.20500183]
[112.86647034 148.44683838]
[106.89045715 134.68867493]
[100.91443634 120.93050385]
[86.52730560 116.68664551]
[74.04104614 124.99889374]
[61.55479431 133.31114197]
[49.06853867 141.62338257]
[36.58228683 149.93563843]
[24.09603119 158.24787903]
[11.60977554 166.56011963]
[7.05601358 181.94332886]
[-7.86384678 187.84056091]
[-21.70456505 179.72796631]
[-23.84872627 163.82884216]
[-12.65151405 152.33963013]
[3.29752922 154.07386780]
[15.78378391 145.76162720]
[28.27003860 137.44937134]
[40.75629425 129.13713074]
[53.24254608 120.82488251]
[65.72880554 112.51263428]
[78.21505737 104.20038605]
[82.45891571 89.81325531]
[76.48289490 76.05508423]
[70.50688171 62.29691315]
[64.34350586 48.62165451]
[57.99391556 35.03184891]
[51.64432526 21.44204712]
[45.29473877 7.85224533]
[32.44315338 -1.37528408]
[34.06551743 -16.18126869]
[19.48247719 -21.65600586]
[13.23668385 -35.52845001]
[18.54587746 -49.39741135]
[11.82745647 -62.80870438]
[4.74521399 -76.03147888]
[-2.33702755 -89.25425720]
[-9.41926956 -102.47703552]
[-24.77270889 -102.88626099]
[-37.85617065 -110.93104553]
[-45.15026474 -124.44739532]
[-44.69292068 -139.79948425]
[-36.60716248 -152.85766602]
[-23.06801224 -160.10934448]
[-7.71744013 -159.60388184]
[5.31533051 -151.47723389]
[12.52454853 -137.91542053]
[11.97097111 -122.56651306]
[3.80350828 -109.55928040]
[10.88574982 -96.33650208]
[17.96799278 -83.11372375]
[25.05023384 -69.89094543]
[29.40763092 -67.64903259]
[32.33274460 -62.57669449]
[32.13568115 -55.74699783]
[46.17994690 -50.92058945]
[52.81292343 -37.22904968]
[47.65531921 -22.53085709]
[60.05273819 -14.27536201]
[58.88454056 1.50265729]
[65.23413086 15.09245968]
[71.58371735 28.68226242]
[77.93330383 42.27206421]
[83.69364929 47.06481552]
[84.26505280 56.32089996]
[90.24106598 70.07907104]
[96.21708679 83.83723450]
[97.56864929 68.89825439]
[98.06695557 53.90653229]
[108.31875610 42.95661926]
[123.24522400 41.47319794]
[135.45166016 50.19116592]
[138.89068604 64.79307556]
[126.95169830 73.87385559]
[141.78269958 71.62857819]
[150.95640564 58.75928116]
[166.55674744 56.22853088]
[179.32833862 65.53778076]
[181.69401550 81.16400909]
[172.25025940 93.83646393]
[156.59988403 96.03678894]
[144.02798462 86.45957947]
[129.19697571 88.70486450]
[125.56588745 95.26726532]
[133.30123901 108.11889648]
[118.30370331 108.39208221]
[114.67260742 114.95448303]
[120.64862823 128.71264648]
[126.62464142 142.47082520]
[132.60066223 156.22898865]
[138.57667542 169.98716736]
[144.55268860 183.74533081]
[159.54019165 181.86074829]
[174.45130920 184.27633667]
[188.07728577 190.79627991]
[199.31350708 200.89201355]
[207.24911499 213.74513245]
[211.24081421 228.31370544]
[210.96498108 243.41670227]
[206.44401550 257.82980347]
[198.04438782 270.38458252]
[186.44702148 280.06332397]
[172.59207153 286.08139038]
[157.60269165 287.95089722]
[142.69400024 285.52032471]
[129.07458496 278.98672485]
[117.84850311 268.87969971]
[109.92581177 256.01861572]
[105.94876099 241.44604492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 97]
[4 96]
[5 95]
[6 94]
[7 93]
[8 92]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[15 21]
[28 72]
[29 71]
[30 70]
[31 68]
[32 67]
[33 66]
[34 65]
[36 63]
[39 60]
[40 57]
[41 56]
[42 55]
[43 54]
[79 88]
[80 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
