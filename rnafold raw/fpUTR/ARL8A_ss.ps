%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGAGCCGAUUCCGGGGCAGCGAGUCGUCGGCAGCCGCGCUCGAGCCUCCGCCCGCACCGAGCCGCGGGACCCGGGCCGUACCGGGGAGGGGCCGCUCCGGGCCGCAGCGCGAGGGCAGCGAGGGGCGGCGGGGACCUGGCACCGGGCGGGGCCGGCGGCAGCGACC\
) } def
/len { sequence length } bind def

/coor [
[-218.06945801 508.94900513]
[-229.28332520 498.98663330]
[-230.33718872 484.02468872]
[-241.13574219 494.43579102]
[-251.93429565 504.84689331]
[-262.73284912 515.25799561]
[-263.75512695 528.13977051]
[-272.99465942 536.58996582]
[-285.11367798 536.46795654]
[-296.10058594 546.68011475]
[-307.08749390 556.89227295]
[-318.07440186 567.10443115]
[-329.06127930 577.31652832]
[-340.04818726 587.52868652]
[-345.03079224 605.23822021]
[-362.25308228 608.52600098]
[-372.95608521 619.03527832]
[-383.56268311 629.64190674]
[-383.31207275 645.44415283]
[-394.36859131 656.73699951]
[-410.17266846 656.82055664]
[-421.34799194 645.64526367]
[-421.26443481 629.84118652]
[-409.97158813 618.78466797]
[-394.16931152 619.03527832]
[-383.56268311 608.42864990]
[-381.04711914 601.44970703]
[-372.66418457 597.72741699]
[-372.12231445 585.61987305]
[-363.17877197 576.85705566]
[-350.26034546 576.54180908]
[-339.27343750 566.32965088]
[-328.28652954 556.11749268]
[-317.29965210 545.90533447]
[-306.31274414 535.69317627]
[-295.32583618 525.48101807]
[-291.09979248 508.46469116]
[-273.14395142 504.45947266]
[-262.34539795 494.04833984]
[-251.54685974 483.63723755]
[-240.74830627 473.22613525]
[-230.53614807 462.23922729]
[-220.94105530 450.70953369]
[-211.34596252 439.17980957]
[-201.75086975 427.65011597]
[-201.72212219 424.08944702]
[-199.94410706 420.36886597]
[-196.36225891 417.32104492]
[-191.30072021 415.77050781]
[-181.08856201 404.78363037]
[-170.87641907 393.79672241]
[-167.87882996 379.20687866]
[-152.81626892 374.36642456]
[-142.60411072 363.37951660]
[-132.39196777 352.39263916]
[-122.38218689 341.22103882]
[-112.57810974 329.86849976]
[-102.77403259 318.51596069]
[-92.96996307 307.16342163]
[-83.16588593 295.81088257]
[-81.16645813 288.66693115]
[-73.07759094 284.34265137]
[-63.06780624 273.17108154]
[-53.05802536 261.99948120]
[-50.40145493 244.66862488]
[-32.88572311 239.04255676]
[-23.08164978 227.69001770]
[-13.27757454 216.33747864]
[-3.47350073 204.98493958]
[-1.47407246 197.84097290]
[6.61479616 193.51669312]
[16.62457848 182.34512329]
[15.55494499 167.53324890]
[25.54714394 156.06108093]
[41.09044647 155.03958130]
[51.10023117 143.86799622]
[61.11001205 132.69641113]
[61.74282074 127.92877197]
[65.40111542 123.51918793]
[71.69519043 121.30818176]
[82.10630798 110.50962830]
[92.51741791 99.71108246]
[87.13607025 96.03256989]
[83.53030396 89.68064117]
[82.67069244 81.41711426]
[85.23205566 72.30893707]
[90.33374023 58.20316696]
[95.43542480 44.09739304]
[100.53710938 29.99162292]
[105.63880157 15.88585091]
[110.74048615 1.78007865]
[108.15805054 -13.82894516]
[119.76279449 -23.16592598]
[116.35124207 -39.20629120]
[128.71624756 -49.97841644]
[144.13775635 -44.40086365]
[146.75143433 -28.21134186]
[133.86856079 -18.06424141]
[136.81590271 -3.46415639]
[124.84625244 6.88176441]
[119.74456787 20.98753548]
[114.64288330 35.09330750]
[109.54119873 49.19908142]
[104.43951416 63.30485153]
[99.33782959 77.41062164]
[110.13637543 87.82173920]
[124.04641724 82.20828247]
[137.95645142 76.59483337]
[147.85832214 64.25531006]
[162.55630493 66.66745758]
[173.53652954 51.90642166]
[190.79690552 54.98793411]
[204.60209656 49.12136078]
[218.35313416 43.12896347]
[232.04887390 37.01123047]
[241.22851562 23.42203522]
[257.56564331 24.84699059]
[264.25399780 39.82022476]
[254.41320801 52.93855667]
[238.16661072 50.70697403]
[224.47087097 56.82470322]
[219.62818909 62.44451904]
[210.46865845 62.92655563]
[196.66346741 68.79312897]
[191.83216858 79.90818787]
[180.34838867 84.89791107]
[168.16975403 80.57749939]
[159.26283264 92.51550293]
[143.56990051 90.50486755]
[129.65986633 96.11832428]
[115.74983215 101.73177338]
[103.31597137 110.12219238]
[92.90486145 120.92074585]
[82.49374390 131.71929932]
[72.28159332 142.70619202]
[62.27181244 153.87777710]
[52.26203156 165.04936218]
[52.94664764 180.61114502]
[42.63616180 191.79812622]
[27.79616165 192.35490417]
[17.78637886 203.52647400]
[7.87903786 214.78901672]
[-1.92503631 226.14155579]
[-11.72911072 237.49409485]
[-21.53318405 248.84663391]
[-21.37641907 261.76794434]
[-29.80677414 271.02557373]
[-41.88644409 272.00927734]
[-51.89622498 283.18084717]
[-61.90600586 294.35244751]
[-71.81334686 305.61495972]
[-81.61742401 316.96749878]
[-91.42149353 328.32003784]
[-101.22557068 339.67257690]
[-111.02964783 351.02511597]
[-112.65742493 357.49459839]
[-116.71500397 361.53979492]
[-121.40506744 362.60476685]
[-131.61721802 373.59167480]
[-141.82936096 384.57858276]
[-145.55740356 399.95428467]
[-159.88951111 404.00888062]
[-170.10166931 414.99575806]
[-180.31382751 425.98266602]
[-190.22116089 437.24520874]
[-199.81625366 448.77490234]
[-209.41134644 460.30462646]
[-219.00645447 471.83432007]
[-204.00650024 471.79360962]
[-193.25268555 482.25094604]
[-192.87413025 497.24615479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 41]
[4 40]
[5 39]
[6 38]
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[14 31]
[16 28]
[17 26]
[18 25]
[42 168]
[43 167]
[44 166]
[45 165]
[49 164]
[50 163]
[51 162]
[53 160]
[54 159]
[55 158]
[56 155]
[57 154]
[58 153]
[59 152]
[60 151]
[62 150]
[63 149]
[64 148]
[66 145]
[67 144]
[68 143]
[69 142]
[71 141]
[72 140]
[75 137]
[76 136]
[77 135]
[80 134]
[81 133]
[82 132]
[86 105]
[87 104]
[88 103]
[89 102]
[90 101]
[91 100]
[93 98]
[106 131]
[107 130]
[108 129]
[110 127]
[112 124]
[113 123]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
