%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGGCCCCUGGCACCCAGGGGGAGGGGAGGGGCUGGCAAGUGGGGGCCUAGACCCUGGAAGGCAGGGGACUGCGAGCUGGGCUGGCGGAGCAGAGGUGCAGAAGCAACUGAGUCCAAGUUGUCUGGCGGCUUCAGGUGGACCCAGAAGACGUCCCCAACUCAGGGAGAUUCAGCGAUCACUCACUCGCUGUACAGA\
) } def
/len { sequence length } bind def

/coor [
[64.34395599 135.26969910]
[59.61558151 129.73893738]
[55.73729706 123.58216095]
[41.59306717 128.57624817]
[27.44884109 133.57032776]
[13.30461311 138.56440735]
[-0.79975331 143.66996765]
[-14.86338043 148.88671875]
[-28.92700768 154.10345459]
[-42.99063492 159.32019043]
[-57.05426025 164.53694153]
[-71.11788940 169.75367737]
[-81.36568451 181.80743408]
[-95.98936462 178.97946167]
[-102.63856506 193.06584167]
[-116.97539520 198.15600586]
[-130.36361694 191.73020935]
[-144.42724609 196.94694519]
[-158.49087524 202.16368103]
[-172.55450439 207.38043213]
[-186.61813354 212.59716797]
[-200.68176270 217.81390381]
[-204.96333313 232.61169434]
[-216.99665833 241.94186401]
[-232.03865051 242.39199829]
[-244.31443787 233.99894714]
[-258.37805176 239.21569824]
[-272.44168091 244.43243408]
[-273.94564819 259.58166504]
[-281.84576416 272.52288818]
[-294.52935791 280.71719360]
[-309.45166016 282.58428955]
[-323.64624023 277.80697632]
[-334.31481934 267.38357544]
[-348.37844849 272.60031128]
[-362.44207764 277.81704712]
[-372.48358154 290.78237915]
[-388.69390869 288.30102539]
[-394.39727783 272.92559814]
[-383.72650146 260.47299194]
[-367.65881348 263.75341797]
[-353.59518433 258.53668213]
[-339.53155518 253.31993103]
[-338.24133301 238.46057129]
[-330.59600830 225.58197021]
[-318.06588745 217.26588440]
[-303.10665894 215.20640564]
[-288.67807007 219.86505127]
[-277.65841675 230.36880493]
[-263.59478760 225.15206909]
[-249.53117371 219.93531799]
[-245.69845581 205.56701660]
[-234.00166321 196.09870911]
[-218.79463196 195.32437134]
[-205.89849854 203.75028992]
[-191.83486938 198.53353882]
[-177.77124023 193.31680298]
[-163.70761108 188.10006714]
[-149.64399719 182.88331604]
[-135.58036804 177.66658020]
[-129.62138367 164.06414795]
[-115.43318176 158.57328796]
[-101.20610046 164.91583252]
[-91.96422577 153.23521423]
[-76.33463287 155.69004822]
[-62.27100372 150.47331238]
[-48.20737457 145.25656128]
[-34.14374924 140.03982544]
[-20.08012199 134.82308960]
[-6.01649475 129.60633850]
[-0.83346498 124.32739258]
[8.31053352 124.42017365]
[22.45476151 119.42609406]
[36.59898758 114.43201447]
[50.74321747 109.43793488]
[52.38922119 84.23550415]
[66.10913849 63.03089142]
[88.42364502 51.20149994]
[113.67387390 51.74722290]
[119.87570953 38.08935928]
[126.07754517 24.43149757]
[132.27938843 10.77363396]
[138.48121643 -2.88422823]
[144.57505798 -16.59061813]
[150.56051636 -30.34468269]
[156.54597473 -44.09874725]
[154.95805359 -59.84006500]
[167.13124084 -68.42276001]
[173.00794983 -82.22364044]
[178.77552795 -96.07048035]
[184.54312134 -109.91732025]
[190.31071472 -123.76415253]
[196.07829285 -137.61099243]
[188.78884888 -145.34979248]
[184.50946045 -155.04000854]
[183.70574951 -165.56417847]
[186.44413757 -175.71795654]
[192.38713074 -184.34788513]
[200.83474731 -190.48242188]
[210.80683899 -193.44128418]
[221.15679932 -192.91084290]
[227.78671265 -206.36611938]
[234.41661072 -219.82138062]
[234.36357117 -226.44848633]
[237.23928833 -231.36454773]
[241.47410583 -233.59178162]
[248.52546692 -246.83105469]
[255.57682800 -260.07031250]
[262.62820435 -273.30960083]
[269.67956543 -286.54885864]
[276.73092651 -299.78811646]
[270.71572876 -314.22253418]
[275.43539429 -329.13085938]
[288.66143799 -337.47390747]
[304.14889526 -335.31231689]
[314.58508301 -323.66671753]
[315.04235840 -308.03582764]
[305.30480957 -295.80004883]
[289.97018433 -292.73675537]
[282.91882324 -279.49749756]
[275.86746216 -266.25823975]
[268.81610107 -253.01895142]
[261.76473999 -239.77967834]
[254.71336365 -226.54042053]
[247.87188721 -213.19148254]
[241.24197388 -199.73620605]
[234.61207581 -186.28092957]
[244.87304688 -169.64056396]
[243.00186157 -150.03591919]
[229.58341980 -135.42483521]
[209.92514038 -131.84341431]
[204.15754700 -117.99656677]
[198.38995361 -104.14972687]
[192.62237549 -90.30289459]
[186.85478210 -76.45605469]
[187.18528748 -69.06539154]
[180.88529968 -62.43730164]
[182.90135193 -47.67976761]
[170.30004883 -38.11328888]
[164.31459045 -24.35922432]
[158.32913208 -10.60516071]
[158.54290771 -3.21020174]
[152.13908386 3.31760931]
[145.93725586 16.97547150]
[139.73541260 30.63333511]
[133.53356934 44.29119873]
[127.33173370 57.94905853]
[135.41979980 64.49305725]
[141.98365784 72.56501770]
[146.74082947 81.81758881]
[149.48661804 91.85259247]
[150.10285950 102.23820496]
[148.56301880 112.52750397]
[162.36390686 118.40421295]
[176.16477966 124.28091431]
[190.01162720 130.04850769]
[203.90354919 135.70661926]
[217.79548645 141.36471558]
[232.26156616 135.00013733]
[246.96058655 140.80654907]
[253.17187500 155.33911133]
[247.21038818 169.97592163]
[232.61296082 176.03321838]
[218.03999329 169.91729736]
[212.13737488 155.25665283]
[198.24545288 149.59854126]
[184.35351562 143.94042969]
[176.96568298 144.32926941]
[170.28807068 138.08180237]
[156.48719788 132.20509338]
[142.68630981 126.32838440]
[137.49951172 133.30303955]
[131.18638611 139.27740479]
[138.65217590 152.28747559]
[146.11798096 165.29754639]
[153.58377075 178.30761719]
[161.04956055 191.31768799]
[168.51535034 204.32775879]
[183.95695496 205.85638428]
[195.52856445 216.19453430]
[198.78067017 231.36698914]
[192.46276855 245.53962708]
[179.00421143 253.26278687]
[163.58010864 251.56674194]
[152.12132263 241.10366821]
[149.03401184 225.89682007]
[155.50529480 211.79354858]
[148.03948975 198.78347778]
[140.57369995 185.77340698]
[133.10791016 172.76333618]
[125.64211273 159.75326538]
[118.17631531 146.74319458]
[111.22110748 148.88140869]
[104.02968597 149.99066162]
[96.75344849 150.04762268]
[89.54554749 149.05108643]
[82.55771637 147.02203369]
[75.93703461 144.00317383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 75]
[4 74]
[5 73]
[6 72]
[7 70]
[8 69]
[9 68]
[10 67]
[11 66]
[12 65]
[14 63]
[17 60]
[18 59]
[19 58]
[20 57]
[21 56]
[22 55]
[26 51]
[27 50]
[28 49]
[34 43]
[35 42]
[36 41]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[84 141]
[85 140]
[86 139]
[88 137]
[89 135]
[90 134]
[91 133]
[92 132]
[93 131]
[101 127]
[102 126]
[103 125]
[106 124]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[153 171]
[154 170]
[155 169]
[156 167]
[157 166]
[158 165]
[173 192]
[174 191]
[175 190]
[176 189]
[177 188]
[178 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
