%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGAGAGCUGGGCUCUGCGUCCUCGUCCAGCCGCCAACUCGGCCAAAGGCGAAGCCAGCAGUUUCUUCUGCUGCCGGGCAACGCGCCUUUUAAACCUGAGGGAGUGGGCGCGUGAGCACUUAAUGGCGCCGGUGACAGAGUGAGCUUAACGGAUUAAUAAGCGCAGCCAGGCCAGCUCUGGGGUCUCGGCAGGUGGUCCGCGAC\
) } def
/len { sequence length } bind def

/coor [
[241.55270386 517.12536621]
[236.83050537 502.88803101]
[232.10830688 488.65072632]
[220.75772095 479.00637817]
[223.75712585 463.47210693]
[219.03494263 449.23480225]
[214.31274414 434.99749756]
[209.59056091 420.76019287]
[204.86836243 406.52288818]
[200.14616394 392.28558350]
[195.42398071 378.04827881]
[190.70178223 363.81094360]
[179.35119629 354.16662598]
[182.35060120 338.63232422]
[177.62841797 324.39501953]
[172.68965149 310.23138428]
[167.53547668 296.14471436]
[162.38130188 282.05804443]
[157.22711182 267.97137451]
[152.07293701 253.88468933]
[146.91876221 239.79800415]
[129.86459351 237.45661926]
[116.27399445 226.74699402]
[109.94494629 210.54722595]
[112.70411682 193.28507996]
[123.88081360 179.72792053]
[118.29943848 165.80497742]
[112.71807098 151.88203430]
[107.13669586 137.95909119]
[83.73606873 135.03297424]
[66.39862823 119.04659271]
[52.16131973 123.76878357]
[37.92401123 128.49098206]
[23.83733559 133.64515686]
[9.91439438 139.22653198]
[-4.00854635 144.80789185]
[-11.61373234 158.93379211]
[-27.42461395 161.65327454]
[-39.31243515 150.88018799]
[-38.15787888 134.87873840]
[-24.84662056 125.92385101]
[-9.58991814 130.88496399]
[4.33302307 125.30358887]
[18.25596428 119.72221375]
[19.48063278 117.19647980]
[21.78154373 115.00467682]
[25.03616333 113.55989838]
[28.97456741 113.22315216]
[33.20182037 114.25366974]
[47.43912506 109.53147888]
[61.67643356 104.80928802]
[61.38394928 100.79099274]
[61.51163864 96.76409912]
[62.05810928 92.77241516]
[63.01741791 88.85936737]
[49.76843262 81.82627869]
[36.51945114 74.79318237]
[18.13901901 75.87677002]
[9.41378021 60.65250397]
[-3.94091702 53.82227325]
[-17.29561424 46.99204254]
[-30.65031052 40.16180801]
[-44.00500870 33.33157730]
[-58.33737564 39.58595657]
[-73.32214355 35.11486053]
[-81.88396454 22.02939987]
[-79.98020935 6.50813341]
[-68.50976562 -4.12027407]
[-52.88863754 -4.83741236]
[-40.49263763 4.69532824]
[-37.17477417 19.97687912]
[-23.82007980 26.80711174]
[-10.46538162 33.63734436]
[2.88931489 40.46757507]
[16.24401283 47.29780960]
[27.84934616 43.87689590]
[39.03247070 49.46121979]
[43.55254364 61.54419708]
[56.80152893 68.57729340]
[70.05051422 75.61038971]
[79.58751678 64.18729401]
[93.50620270 56.66482544]
[91.22749329 41.83891678]
[88.94878387 27.01301384]
[86.67007446 12.18710709]
[84.39136505 -2.63879824]
[82.11265564 -17.46470451]
[79.83393860 -32.29061127]
[77.55522919 -47.11651611]
[65.12541962 -50.63674164]
[54.98790359 -58.56881714]
[48.62771606 -69.70588684]
[46.95953751 -82.37503052]
[50.19626617 -94.68849945]
[57.82261276 -104.82501984]
[68.67675018 -111.29916382]
[66.85123444 -126.18766785]
[58.92219925 -141.17321777]
[71.12713623 -152.94079590]
[85.81349182 -144.47042847]
[81.73973846 -128.01318359]
[83.56525421 -113.12467957]
[99.64419556 -106.97695923]
[110.45215607 -93.46443939]
[112.94275665 -76.25147247]
[106.34098053 -60.06471634]
[92.38113403 -49.39522552]
[94.65984344 -34.56932068]
[96.93856049 -19.74341393]
[99.21726990 -4.91750908]
[101.49597931 9.90839672]
[103.77468872 24.73430252]
[106.05339813 39.56020737]
[108.33210754 54.38611221]
[122.45767975 59.43273163]
[123.45713043 43.88799286]
[134.91511536 33.87952805]
[149.72848511 34.92815018]
[160.88584900 24.90252876]
[172.04322815 14.87690735]
[183.20059204 4.85128689]
[194.35797119 -5.17433357]
[195.35740662 -20.71907043]
[206.81539917 -30.72753525]
[221.62876892 -29.67891502]
[226.72225952 -44.65779495]
[241.36053467 -47.40918732]
[252.51791382 -57.43480682]
[257.08416748 -73.18540192]
[273.07025146 -76.84292603]
[284.03103638 -64.64483643]
[278.69100952 -49.13948059]
[262.54351807 -46.27743912]
[251.38615417 -36.25181580]
[247.09071350 -21.99003410]
[231.65438843 -18.52154350]
[231.11866760 -3.68076944]
[219.94631958 6.64557648]
[204.38359070 5.98303747]
[193.22621155 16.00865746]
[182.06884766 26.03427887]
[170.91146851 36.05989838]
[159.75410461 46.08552170]
[159.21838379 60.92629623]
[148.04603577 71.25263977]
[132.48329163 70.59010315]
[138.72430420 81.41489410]
[141.55551147 93.33002472]
[140.87820435 105.30963898]
[136.88972473 116.36266327]
[130.05557251 125.61483765]
[121.05963898 132.37771606]
[126.64100647 146.30065918]
[132.22238159 160.22360229]
[137.80375671 174.14654541]
[150.70802307 174.75639343]
[162.38018799 180.18298340]
[171.10020447 189.58764648]
[175.59785461 201.54844666]
[175.23773193 214.27513123]
[170.10868835 225.87698364]
[161.00543213 234.64382935]
[166.15960693 248.73049927]
[171.31379700 262.81716919]
[176.46797180 276.90386963]
[181.62214661 290.99053955]
[186.77633667 305.07720947]
[191.59947205 309.60855103]
[193.17118835 315.07510376]
[191.86572266 319.67282104]
[196.58790588 333.91015625]
[208.27627563 344.57281494]
[204.93908691 359.08877563]
[209.66128540 373.32608032]
[214.38348389 387.56338501]
[219.10566711 401.80068970]
[223.82786560 416.03799438]
[228.55004883 430.27529907]
[233.27224731 444.51260376]
[237.99444580 458.74990845]
[249.68280029 469.41259766]
[246.34562683 483.92852783]
[251.06781006 498.16583252]
[255.79000854 512.40313721]
[260.72875977 526.56677246]
[265.88293457 540.65344238]
[277.89105225 550.95471191]
[274.99807739 565.56567383]
[280.15228271 579.65234375]
[285.30645752 593.73907471]
[290.56790161 607.78601074]
[304.57617188 615.60571289]
[307.05419922 631.45623779]
[296.10110474 643.17840576]
[280.11911011 641.77996826]
[271.36825562 628.33367920]
[276.56146240 613.15441895]
[271.23007202 608.03167725]
[271.21978760 598.89324951]
[266.06558228 584.80657959]
[260.91140747 570.71984863]
[249.27198792 561.42614746]
[251.79626465 545.80761719]
[246.64208984 531.72094727]
[242.76086426 528.93182373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 184]
[2 183]
[3 182]
[5 180]
[6 179]
[7 178]
[8 177]
[9 176]
[10 175]
[11 174]
[12 173]
[14 171]
[15 170]
[16 167]
[17 166]
[18 165]
[19 164]
[20 163]
[21 162]
[26 155]
[27 154]
[28 153]
[29 152]
[31 51]
[32 50]
[33 49]
[34 44]
[35 43]
[36 42]
[55 80]
[56 79]
[57 78]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[82 114]
[83 113]
[84 112]
[85 111]
[86 110]
[87 109]
[88 108]
[89 107]
[96 102]
[97 101]
[115 146]
[118 143]
[119 142]
[120 141]
[121 140]
[122 139]
[125 136]
[127 134]
[128 133]
[185 204]
[186 203]
[188 201]
[189 200]
[190 199]
[191 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
