%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCGCGUGCUCCCGCCCCUCGCCGCCGCUCGCUCGCUCGCCGGCCGGCGGCCUCCGCUCGGCCCCCUCCCUCAGCUCCGGUGCGCGGCGGCCGACGACCCGCGCGGCCUGGGCCUCGGCCCGCGCCACCGGCGCCCGCGCGGAGCGGCCCGGGGGCCCUCACGCAGGCCC\
) } def
/len { sequence length } bind def

/coor [
[97.40554810 436.74887085]
[96.58403015 421.77136230]
[87.77478027 413.44772339]
[86.98829651 400.95147705]
[95.19325256 390.96829224]
[94.64542389 375.97830200]
[94.09759521 360.98831177]
[93.54975891 345.99832153]
[93.00193024 331.00833130]
[81.99880981 325.78213501]
[74.22711945 316.30847168]
[71.21726990 304.35574341]
[73.60327911 292.18933105]
[80.99041748 282.14227295]
[92.01898193 276.16793823]
[92.01898193 261.16793823]
[92.01898193 246.16793823]
[92.01898193 231.16793823]
[92.01898193 216.16793823]
[92.01898193 201.16793823]
[82.43231201 186.48760986]
[91.72315979 170.60888672]
[91.44919586 155.61138916]
[91.17523193 140.61389160]
[90.90127563 125.61639404]
[90.62731171 110.61889648]
[83.76867676 97.27876282]
[71.73077393 88.32952881]
[56.03956604 86.30551910]
[50.44178391 72.50283813]
[38.40388107 63.55359650]
[26.36597443 54.60436249]
[14.32806969 45.65512466]
[5.53893232 43.03210068]
[2.15402722 36.43086624]
[-9.71842003 27.26325989]
[-21.59086800 18.09565544]
[-37.24248886 15.78539848]
[-42.58724594 1.88277841]
[-54.45969391 -7.28482723]
[-66.33213806 -16.45243263]
[-78.20458984 -25.62003899]
[-91.21774292 -33.08045959]
[-105.12777710 -38.69391251]
[-119.03781891 -44.30736542]
[-132.94784546 -49.92081833]
[-146.85789490 -55.53427124]
[-160.81861877 -61.02045822]
[-174.82885742 -66.37892151]
[-188.83909607 -71.73738861]
[-202.84933472 -77.09584808]
[-219.80328369 -77.10669708]
[-224.48617554 -93.40107727]
[-210.12493896 -102.41169739]
[-197.49087524 -91.10609436]
[-183.48063660 -85.74762726]
[-169.47038269 -80.38916779]
[-155.46014404 -75.03070068]
[-148.06204224 -75.58021545]
[-141.24443054 -69.44431305]
[-127.33439636 -63.83085632]
[-113.42436218 -58.21740341]
[-99.51432800 -52.60395050]
[-85.60428619 -46.99049759]
[-94.51538086 -59.05666351]
[-98.55184174 -73.50335693]
[-97.18570709 -88.44101715]
[-90.59566498 -101.91585541]
[-79.64366150 -112.16542816]
[-65.76217651 -117.84912872]
[-50.76684952 -118.22354889]
[-36.61900711 -113.23972321]
[-25.16912460 -103.54951477]
[-17.91479683 -90.42035675]
[-15.80486298 -75.56949615]
[-19.11528969 -60.93935013]
[-27.41309166 -48.44348907]
[-39.61294556 -39.71632004]
[-54.11916733 -35.89931488]
[-69.03697968 -37.49248505]
[-57.16453552 -28.32488060]
[-45.29208755 -19.15727425]
[-33.41963959 -9.98966885]
[-18.61721420 -8.33514118]
[-12.42326164 6.22320747]
[-0.55081445 15.39081383]
[11.32163334 24.55841827]
[23.27730751 33.61721802]
[35.31521225 42.56645584]
[47.35311508 51.51569366]
[59.39102173 60.46493149]
[74.22119904 61.84883118]
[80.68000793 76.29162598]
[92.71791840 85.24085999]
[87.95806122 71.01610565]
[95.24980164 57.90768814]
[109.84581757 54.44991302]
[122.24330902 62.89397812]
[124.37082672 77.74233246]
[114.84364319 89.32769012]
[129.28417969 85.26927185]
[143.72473145 81.21084595]
[158.16526794 77.15242767]
[172.60580444 73.09400940]
[187.04634094 69.03559113]
[201.48689270 64.97716522]
[215.92742920 60.91874695]
[213.50767517 54.29203033]
[213.87269592 46.18590927]
[217.60140991 37.72949600]
[224.83645630 30.23697090]
[238.29963684 23.62312508]
[251.76280212 17.00927925]
[265.22598267 10.39543343]
[273.90319824 -3.51995420]
[290.28146362 -2.69261456]
[297.51220703 12.02635670]
[288.15707397 25.49534416]
[271.83981323 23.85860825]
[258.37664795 30.47245407]
[244.91348267 37.08629990]
[231.45030212 43.70014572]
[234.84532166 58.31088638]
[249.84532166 58.31088638]
[264.84533691 58.31088638]
[279.84533691 58.31088638]
[294.84533691 58.31088638]
[310.68444824 52.26454926]
[320.87921143 65.81089020]
[310.68444824 79.35722351]
[294.84533691 73.31089020]
[279.84533691 73.31089020]
[264.84533691 73.31089020]
[249.84532166 73.31089020]
[234.84532166 73.31089020]
[219.98585510 75.35929108]
[205.54530334 79.41770935]
[191.10476685 83.47612762]
[176.66423035 87.53454590]
[162.22369385 91.59297180]
[147.78314209 95.65139008]
[133.34260559 99.70980835]
[118.90206146 103.76823425]
[112.50046539 109.20610046]
[105.62480927 110.34494019]
[105.89877319 125.34243774]
[106.17272949 140.33993530]
[106.44669342 155.33743286]
[106.72065735 170.33493042]
[115.46005249 179.85375977]
[115.35913849 192.37431335]
[107.01898193 201.16793823]
[107.01898193 216.16793823]
[107.01898193 231.16793823]
[107.01898193 246.16793823]
[107.01898193 261.16793823]
[107.01898193 276.16793823]
[121.98365784 286.35168457]
[127.81570435 303.32186890]
[122.36865234 320.25488281]
[107.99192047 330.46051025]
[108.53975677 345.45050049]
[109.08758545 360.44049072]
[109.63541412 375.43048096]
[110.18324280 390.42047119]
[120.32978821 405.76654053]
[111.56151581 420.94985962]
[112.38303375 435.92733765]
[121.79631042 449.35574341]
[114.62925720 464.10583496]
[98.25472260 465.00399780]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[5 165]
[6 164]
[7 163]
[8 162]
[9 161]
[15 157]
[16 156]
[17 155]
[18 154]
[19 153]
[20 152]
[22 149]
[23 148]
[24 147]
[25 146]
[26 145]
[27 94]
[28 93]
[30 91]
[31 90]
[32 89]
[33 88]
[35 87]
[36 86]
[37 85]
[39 83]
[40 82]
[41 81]
[42 80]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[48 58]
[49 57]
[50 56]
[51 55]
[100 143]
[101 142]
[102 141]
[103 140]
[104 139]
[105 138]
[106 137]
[107 136]
[111 122]
[112 121]
[113 120]
[114 119]
[123 135]
[124 134]
[125 133]
[126 132]
[127 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
