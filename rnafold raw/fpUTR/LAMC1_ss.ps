%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCAGGCUGCUCCCGGGGUAGGUGAGGGAAGCGCGGAGGCGGCGCGCGGGGGCAGUGGUCGGCGAGCAGCGCGGUCCUCGCUAGGGGCGCCCACCCGUCAGUCUCUCCGGCGCGAGCCGCCGCCACCGCCCGCGCCGGAGUCAGGCCCCUGGGCCCCCAGGCUCAAGCAGCGAAGCGGCCUCCGGGGGACGCCGCUAGGCGAGAGGAACGCGCCGGUGCCCUUGCCUUCGCCGUGACCCAGCGUGCGGGCGGCG\
GG\
) } def
/len { sequence length } bind def

/coor [
[64.33840942 862.30175781]
[48.98976517 861.74084473]
[35.98645020 853.56713867]
[28.82629395 839.97937012]
[29.43533897 824.63256836]
[37.64975739 811.65490723]
[51.25991440 804.53741455]
[51.80774307 789.54742432]
[52.35557556 774.55743408]
[52.90340424 759.56744385]
[53.45123291 744.57745361]
[53.99906540 729.58746338]
[54.54689407 714.59741211]
[55.00345230 699.60437012]
[55.27741241 684.60687256]
[55.46006012 669.60803223]
[55.46006012 654.60803223]
[55.27741241 639.60913086]
[55.09476471 624.61022949]
[54.91212082 609.61132812]
[43.86734772 593.71929932]
[54.08068085 576.31744385]
[53.53285217 561.32745361]
[52.98501968 546.33746338]
[52.43719101 531.34747314]
[51.88935852 516.35748291]
[51.34152985 501.36746216]
[50.79369736 486.37747192]
[44.06211090 483.07055664]
[31.60278320 491.42309570]
[30.59893799 476.45669556]
[23.86735153 473.14978027]
[11.66800499 481.87765503]
[-0.53134066 490.60556030]
[-12.73068714 499.33343506]
[-13.75497532 514.93743896]
[-24.60696602 526.19659424]
[-40.16267776 527.79461670]
[-53.07718277 518.97705078]
[-57.25264359 503.90725708]
[-50.71753693 489.70068359]
[-36.55754089 483.06527710]
[-21.45857048 487.13409424]
[-9.25922394 478.40618896]
[2.94012165 469.67831421]
[15.13946819 460.95043945]
[23.18612099 448.29138184]
[25.91067314 433.54089355]
[28.63522530 418.79040527]
[31.35977936 404.03994751]
[34.08433151 389.28945923]
[36.80888367 374.53897095]
[39.53343582 359.78848267]
[42.25799179 345.03799438]
[44.98254395 330.28750610]
[39.68568802 316.36657715]
[49.80090332 304.20132446]
[52.52545547 289.45083618]
[55.25001144 274.70034790]
[57.97456360 259.94985962]
[53.35470200 254.04167175]
[44.11498260 242.22525024]
[39.49512482 236.31704712]
[24.52291679 235.40435791]
[11.60490513 244.91775513]
[-3.84914780 240.61056519]
[-9.98421574 225.78692627]
[-2.09399867 211.81823730]
[13.76880360 209.42010498]
[25.43560600 220.43215942]
[40.40781403 221.34484863]
[52.81607437 212.91661072]
[57.48605728 198.66209412]
[62.15604401 184.40757751]
[58.76568604 169.90396118]
[70.41489410 159.19851685]
[75.08487701 144.94400024]
[79.75485992 130.68948364]
[84.42484283 116.43496704]
[89.09482574 102.18045044]
[90.18975067 87.22046661]
[87.64501190 72.43789673]
[85.10026550 57.65533447]
[75.13393402 45.36783218]
[80.59989929 31.51241875]
[78.05516052 16.72985268]
[75.51041412 1.94728518]
[72.96567535 -12.83528137]
[68.43811798 -20.73378372]
[70.48108673 -27.81325531]
[68.11653137 -42.62571335]
[65.75197601 -57.43816757]
[63.38742065 -72.25062561]
[61.02286530 -87.06307983]
[47.34867096 -94.15692139]
[40.55296707 -107.78306580]
[43.05431747 -122.62245178]
[53.68678665 -133.01901245]
[51.32223129 -147.83146667]
[48.95767593 -162.64392090]
[37.19425964 -166.77236938]
[28.34540176 -175.45153809]
[24.04035187 -186.99778748]
[25.03529930 -199.20794678]
[31.08129501 -209.77978516]
[40.98280716 -216.74597168]
[38.97964859 -231.61160278]
[36.97649384 -246.47724915]
[34.97333908 -261.34289551]
[32.97018433 -276.20852661]
[30.96702576 -291.07418823]
[28.96387100 -305.93981934]
[26.96071434 -320.80548096]
[24.95755959 -335.67111206]
[22.95440292 -350.53677368]
[13.44348049 -363.18005371]
[19.41183090 -376.82659912]
[17.40867424 -391.69223022]
[7.89775133 -404.33554077]
[13.86610031 -417.98208618]
[1.14809608 -427.36437988]
[-1.12794530 -443.00393677]
[8.38831139 -455.62203979]
[24.05104065 -457.73260498]
[36.56782150 -448.08346558]
[38.51267242 -432.39929199]
[28.73174477 -419.98522949]
[38.09938812 -408.40521240]
[32.27431870 -393.69540405]
[34.27747345 -378.82974243]
[43.64511871 -367.24975586]
[37.82004929 -352.53991699]
[39.82320404 -337.67428589]
[41.82635880 -322.80862427]
[43.82951355 -307.94299316]
[45.83267212 -293.07733154]
[47.83582687 -278.21170044]
[49.83898163 -263.34603882]
[51.84213638 -248.48040771]
[53.84529495 -233.61476135]
[55.84844971 -218.74911499]
[71.78123474 -211.07855225]
[79.97217560 -195.22924805]
[76.96062469 -177.48458862]
[63.77013397 -165.00848389]
[66.13468933 -150.19602966]
[68.49924469 -135.38357544]
[81.84008026 -128.81393433]
[88.83708954 -115.49079895]
[86.62138367 -100.42613983]
[75.83531952 -89.42763519]
[78.19987488 -74.61518097]
[80.56443024 -59.80272293]
[82.92898560 -44.99026871]
[85.29354095 -30.17781067]
[87.74823761 -15.38002491]
[90.29298401 -0.59745765]
[92.83772278 14.18510914]
[95.38246918 28.96767616]
[105.16678619 40.19783020]
[99.88283539 55.11059189]
[102.42757416 69.89315796]
[104.97232056 84.67572784]
[111.12467957 88.96507263]
[110.15975189 73.99613953]
[121.26120758 63.90864182]
[136.06961060 66.29850769]
[143.43414307 79.36615753]
[137.80931091 93.27159119]
[123.42939758 97.54376221]
[129.58175659 101.83310699]
[144.33224487 99.10855865]
[153.30131531 86.37303925]
[168.29922485 83.82008362]
[180.38531494 92.44921875]
[195.13580322 89.72466278]
[209.88629150 87.00010681]
[224.63676453 84.27555847]
[239.38725281 81.55100250]
[254.13774109 78.82645416]
[266.30297852 68.71123505]
[280.22390747 74.00808716]
[294.97439575 71.28353882]
[309.72488403 68.55898285]
[324.20230103 59.73625183]
[336.68798828 71.20551300]
[329.12335205 86.37826538]
[312.44943237 83.30947113]
[297.69894409 86.03401947]
[282.94845581 88.75857544]
[271.83828735 98.67890930]
[256.86230469 93.57693481]
[242.11180115 96.30149078]
[227.36132812 99.02603912]
[212.61083984 101.75059509]
[197.86035156 104.47515106]
[183.10986328 107.19969940]
[174.90385437 119.57697296]
[159.98358154 122.55018616]
[147.05679321 113.85903931]
[132.30630493 116.58359528]
[120.66265869 116.99060822]
[110.65589905 113.48662567]
[103.34934235 106.85043335]
[98.67935944 121.10494995]
[94.00937653 135.35946655]
[89.33939362 149.61398315]
[84.66941071 163.86849976]
[87.72573090 179.39169312]
[76.41056061 189.07756042]
[71.74057770 203.33207703]
[67.07059479 217.58659363]
[72.72504425 262.67443848]
[70.00049591 277.42492676]
[67.27593994 292.17538452]
[64.55139160 306.92587280]
[69.65336609 321.90188599]
[59.73302841 333.01205444]
[57.00847626 347.76254272]
[54.28392410 362.51303101]
[51.55936813 377.26351929]
[48.83481598 392.01400757]
[46.11026382 406.76449585]
[43.38571167 421.51498413]
[40.66115952 436.26544189]
[37.93660736 451.01593018]
[65.78369141 485.82965088]
[66.33152008 500.81964111]
[66.87934875 515.80963135]
[67.42718506 530.79962158]
[67.97501373 545.78961182]
[68.52284241 560.77960205]
[69.07067108 575.76959229]
[77.42542267 582.67584229]
[80.55170441 592.82574463]
[77.65247345 602.81475830]
[69.91101074 609.42871094]
[70.09365082 624.42761230]
[70.27629852 639.42645264]
[70.45894623 654.42535400]
[73.47814941 660.25347900]
[73.16915131 665.89093018]
[70.45894623 669.79064941]
[70.27629852 684.78955078]
[73.29387665 693.37902832]
[69.99900055 699.96966553]
[72.91177368 708.59527588]
[69.53688812 715.14526367]
[68.98905945 730.13525391]
[68.44123077 745.12524414]
[67.89339447 760.11523438]
[67.34556580 775.10522461]
[66.79773712 790.09521484]
[66.24990845 805.08520508]
[79.30420685 813.17724609]
[86.54940796 826.71984863]
[86.03658295 842.07019043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 254]
[8 253]
[9 252]
[10 251]
[11 250]
[12 249]
[13 248]
[14 246]
[15 244]
[16 243]
[17 240]
[18 239]
[19 238]
[20 237]
[22 233]
[23 232]
[24 231]
[25 230]
[26 229]
[27 228]
[28 227]
[32 46]
[33 45]
[34 44]
[35 43]
[47 226]
[48 225]
[49 224]
[50 223]
[51 222]
[52 221]
[53 220]
[54 219]
[55 218]
[57 216]
[58 215]
[59 214]
[60 213]
[63 71]
[64 70]
[72 212]
[73 211]
[74 210]
[76 208]
[77 207]
[78 206]
[79 205]
[80 204]
[81 163]
[82 162]
[83 161]
[85 159]
[86 158]
[87 157]
[88 156]
[90 155]
[91 154]
[92 153]
[93 152]
[94 151]
[98 147]
[99 146]
[100 145]
[106 141]
[107 140]
[108 139]
[109 138]
[110 137]
[111 136]
[112 135]
[113 134]
[114 133]
[115 132]
[117 130]
[118 129]
[120 127]
[171 201]
[172 200]
[175 197]
[176 196]
[177 195]
[178 194]
[179 193]
[180 192]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
