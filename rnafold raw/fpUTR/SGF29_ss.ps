%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGACUACGCUCAUAAAAGGAAAAAAAAGCGUGUGCGGUUCUCGACGUGCCGCCAAUCUUCGAACGCAGGUCUGUGAUCAUCCGCAGACUCCGAAAAAGGGUUCGAGGAACGCGCCUGCUCCCCUCGUCGCAGUUUCCAGCCCGACGAGCUUGUUUUGUCCCGGACUCGGUGCCCCUGUAGACA\
) } def
/len { sequence length } bind def

/coor [
[83.86931610 263.56790161]
[70.41985321 264.62200928]
[67.15264893 279.26187134]
[63.88544464 293.90173340]
[69.30834198 309.37829590]
[58.41297913 321.63485718]
[42.40756607 318.06289673]
[37.75710678 302.33694458]
[49.24559021 290.63452148]
[52.51279449 275.99465942]
[55.77999496 261.35482788]
[41.75411606 252.77882385]
[31.48962975 239.90415955]
[26.23739243 224.27163696]
[26.64705276 207.75984192]
[32.68675995 192.35928345]
[43.64488602 179.93257141]
[58.21382523 171.98904419]
[74.64601898 169.50148010]
[77.41691589 154.75962830]
[80.18780518 140.01777649]
[74.97483063 134.62567139]
[65.47552490 146.23442078]
[60.09173584 160.23495483]
[45.39287949 163.22554016]
[34.96652603 152.44171143]
[38.45075989 137.85197449]
[52.62591934 132.94325256]
[64.54888153 123.84143829]
[59.33590698 118.44932556]
[44.50888062 120.72074127]
[29.68185616 122.99215698]
[21.65232086 127.39372253]
[14.58543396 125.17453003]
[-0.27783927 127.19519806]
[-15.14111233 129.21586609]
[-30.00438499 131.23654175]
[-44.86765671 133.25721741]
[-52.09522629 146.98826599]
[-66.02821350 153.81845093]
[-81.30910492 151.12142944]
[-92.06208801 139.93424988]
[-94.15241241 124.55860901]
[-86.77631378 110.90676880]
[-72.77005005 104.22813416]
[-57.51931763 107.09076691]
[-46.88832855 118.39394379]
[-32.02505875 116.37326813]
[-17.16178513 114.35260010]
[-2.29851127 112.33192444]
[12.56476212 110.31125641]
[27.41044044 108.16513824]
[42.23746490 105.89371490]
[57.06449127 103.62229919]
[60.12331009 92.04424286]
[66.04888153 82.41031647]
[74.02033234 75.35188293]
[83.10482788 71.20436859]
[78.61437988 56.89228058]
[74.12393188 42.58019257]
[69.63348389 28.26810455]
[65.14303589 13.95601463]
[60.65259171 -0.35607380]
[56.16214371 -14.66816235]
[51.67169571 -28.98025131]
[47.18125153 -43.29233932]
[40.07057953 -41.40080643]
[31.68314362 -42.63730240]
[23.37931633 -47.53819275]
[16.69709396 -56.06874084]
[10.54978943 -69.75123596]
[4.40248442 -83.43373108]
[-1.74482036 -97.11621857]
[-7.89212513 -110.79871368]
[-14.03942966 -124.48120880]
[-20.18673515 -138.16369629]
[-26.33403969 -151.84619141]
[-41.19483185 -157.22508240]
[-47.82380676 -171.57192993]
[-42.28810501 -186.37503052]
[-27.87196732 -192.85194397]
[-13.12822819 -187.16004944]
[-6.80408716 -172.67623901]
[-12.65154552 -157.99349976]
[-6.50424099 -144.31100464]
[-0.35693610 -130.62850952]
[5.79036856 -116.94602203]
[11.93767357 -103.26352692]
[18.08497810 -89.58103180]
[24.23228264 -75.89853668]
[30.37958908 -62.21604538]
[45.20661163 -64.48746490]
[46.97596359 -79.38274384]
[37.00120544 -91.64160156]
[38.69939423 -107.35439301]
[51.06303406 -117.19898987]
[66.75698853 -115.33476257]
[76.47031403 -102.86773682]
[74.44026947 -87.19436646]
[61.87124634 -77.61338806]
[60.10189438 -62.71810913]
[61.49333954 -47.78278732]
[65.98378754 -33.47069931]
[70.47423553 -19.15860939]
[74.96468353 -4.84652042]
[79.45512390 9.46556854]
[83.94557190 23.77765656]
[88.43601990 38.08974457]
[92.92646790 52.40183640]
[97.41691589 66.71392059]
[114.26522827 69.81493378]
[127.35752869 80.86363220]
[133.24662781 96.95091248]
[148.10989380 98.97158051]
[162.97317505 100.99225616]
[177.83644104 103.01292419]
[192.69972229 105.03359985]
[203.44532776 93.99555969]
[218.45458984 91.43135834]
[231.93629456 98.11775970]
[238.81330872 111.30277252]
[253.67658997 113.32344055]
[268.53985596 115.34411621]
[279.10720825 111.36176300]
[287.99371338 116.00152588]
[302.95947266 114.98887634]
[317.92526245 113.97623444]
[332.89105225 112.96358490]
[347.85681152 111.95094299]
[362.82260132 110.93829346]
[377.78839111 109.92565155]
[386.85665894 100.73338318]
[399.35702515 100.20939636]
[408.55294800 108.08934784]
[423.53369141 107.32960510]
[438.51443481 106.56987000]
[454.02697754 99.72904968]
[464.89477539 112.74165344]
[455.39920044 126.78695679]
[439.27416992 121.55062103]
[424.29342651 122.31035614]
[409.31268311 123.07009125]
[395.12741089 133.38604736]
[378.80102539 124.89142609]
[363.83523560 125.90407562]
[348.86947632 126.91671753]
[333.90368652 127.92936707]
[318.93789673 128.94201660]
[303.97213745 129.95466614]
[289.00634766 130.96730042]
[301.85070801 138.71470642]
[310.60324097 150.89639282]
[313.84765625 165.54130554]
[311.05905151 180.27981567]
[302.68862915 192.72714233]
[290.09075928 200.86923218]
[275.30386353 203.38865662]
[260.72052002 199.87773132]
[248.70043945 190.90458679]
[241.18852234 177.92108154]
[239.40023804 163.02807617]
[243.62495422 148.63529968]
[253.17907715 137.07160950]
[266.51919556 130.20738220]
[251.65591431 128.18672180]
[236.79263306 126.16604614]
[226.64524841 137.03657532]
[211.86781311 139.88113403]
[198.08786011 133.40301514]
[190.67904663 119.89687347]
[175.81578064 117.87619781]
[160.95249939 115.85552216]
[146.08923340 113.83485413]
[131.22595215 111.81417847]
[119.84158325 132.68618774]
[94.92965698 142.78868103]
[92.15876770 157.53053284]
[89.38787079 172.27236938]
[101.42338562 178.69543457]
[111.14685059 188.24031067]
[117.77549744 200.12528992]
[120.77946472 213.38087463]
[119.92412567 226.92875671]
[115.28839874 239.66964722]
[107.25756073 250.57240295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 11]
[3 10]
[4 9]
[19 178]
[20 177]
[21 176]
[30 54]
[31 53]
[32 52]
[34 51]
[35 50]
[36 49]
[37 48]
[38 47]
[58 110]
[59 109]
[60 108]
[61 107]
[62 106]
[63 105]
[64 104]
[65 103]
[66 102]
[70 91]
[71 90]
[72 89]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[92 101]
[93 100]
[113 174]
[114 173]
[115 172]
[116 171]
[117 170]
[121 166]
[122 165]
[123 164]
[125 150]
[126 149]
[127 148]
[128 147]
[129 146]
[130 145]
[131 144]
[134 142]
[135 141]
[136 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
