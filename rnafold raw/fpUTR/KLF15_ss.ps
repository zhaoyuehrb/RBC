%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGACCCGCGGGCCGGCGGGCGAUCGAGCCAGCGCAGGACCCGCGGCUCGGCCCCCGGCCGCCGCCGGACCGAGAGUCUAGCCGCCGCCCCCAGCCCAGCCCGCCCGGCCGCAGGACCGCCGGGGCCUGGCCGCCGGUCCGGCGUGCGCCAAGUUCAGCCGCCACCGGCACGGCCAGGCCAGC\
) } def
/len { sequence length } bind def

/coor [
[67.23455811 164.52462769]
[55.35000610 155.37272644]
[48.93622971 141.81309509]
[49.40018845 126.82027435]
[56.64011002 113.68316650]
[69.06780243 105.28361511]
[83.95870209 103.46437836]
[69.70885468 98.78017426]
[55.45900345 94.09596252]
[41.20915604 89.41175079]
[26.95930672 84.72754669]
[12.70945740 80.04333496]
[-5.20946169 84.23504639]
[-16.40291977 70.73312378]
[-30.73108101 66.29422760]
[-45.05923843 61.85532761]
[-59.49694061 57.78681946]
[-74.03461456 54.09140015]
[-88.57228088 50.39598083]
[-103.10995483 46.70056152]
[-117.64762878 43.00514221]
[-129.12837219 48.91911316]
[-141.17240906 45.52449036]
[-147.45770264 35.17078781]
[-161.92979431 31.22635460]
[-171.05795288 31.98849297]
[-176.61535645 27.08800316]
[-191.01759338 22.89571762]
[-206.43029785 26.46773529]
[-216.48793030 15.48167801]
[-230.89016724 11.28939342]
[-245.32786560 7.22088480]
[-258.36068726 17.98378563]
[-275.07427979 18.85832977]
[-288.88244629 9.69791126]
[-294.46173096 -5.72853851]
[-308.99938965 -9.42395782]
[-324.28039551 -5.32496405]
[-334.70922852 -15.95929241]
[-349.24688721 -19.65471268]
[-364.52789307 -15.55571842]
[-374.95669556 -26.19004631]
[-389.49438477 -29.88546562]
[-404.03204346 -33.58088684]
[-418.56970215 -37.27630234]
[-433.10739136 -40.97172165]
[-439.60321045 -39.54018021]
[-445.02368164 -41.34928513]
[-448.07635498 -45.05157852]
[-462.47860718 -49.24386215]
[-476.88082886 -53.43614960]
[-491.28308105 -57.62843323]
[-508.18090820 -56.24985123]
[-514.18341064 -72.10565186]
[-500.60888672 -82.26288605]
[-487.09082031 -72.03067780]
[-472.68856812 -67.83839417]
[-458.28631592 -63.64611053]
[-443.88406372 -59.45382690]
[-429.41195679 -55.50939560]
[-414.87429810 -51.81397629]
[-400.33663940 -48.11855698]
[-385.79895020 -44.42313766]
[-371.26129150 -40.72771835]
[-357.02011108 -45.09103394]
[-345.55145264 -34.19238281]
[-331.01379395 -30.49696350]
[-316.77264404 -34.86027908]
[-305.30398560 -23.96162796]
[-290.76629639 -20.26621056]
[-281.32440186 -29.72451782]
[-268.33602905 -33.30489731]
[-255.17141724 -29.96720886]
[-245.30162048 -20.48098373]
[-241.38343811 -7.25120687]
[-234.08502197 -8.52895832]
[-226.69789124 -3.11285448]
[-212.29563904 1.07942998]
[-197.91308594 -2.79244828]
[-186.82531738 8.49346924]
[-172.42306519 12.68575382]
[-157.98536682 16.75426292]
[-143.51327515 20.69869614]
[-126.82207489 15.31359386]
[-113.95220947 28.46747017]
[-99.41453552 32.16288757]
[-84.87686157 35.85830688]
[-70.33919525 39.55372620]
[-55.80152130 43.24914551]
[-52.58356476 41.75140762]
[-48.47544098 41.75286102]
[-44.19664383 43.65690231]
[-40.62033844 47.52716827]
[-26.29217911 51.96606827]
[-11.96401978 56.40496826]
[-1.10385025 51.04206085]
[10.88049221 54.64174652]
[17.39366531 65.79348755]
[31.64351463 70.47769928]
[45.89336395 75.16190338]
[60.14321136 79.84611511]
[74.39305878 84.53031921]
[88.64290619 89.21453094]
[103.14832306 85.39446259]
[113.24256134 74.29913330]
[123.33679962 63.20379639]
[133.43103027 52.10846329]
[143.52526855 41.01313400]
[147.08888245 25.59848976]
[161.37689209 21.39107704]
[162.05909729 5.36253548]
[175.10050964 -3.98097229]
[190.49687195 0.52809310]
[196.43740845 15.43076324]
[188.36505127 29.29498291]
[172.47221375 31.48531151]
[169.63059998 46.10634232]
[154.62060547 51.10736847]
[144.52636719 62.20270157]
[134.43212891 73.29803467]
[124.33789062 84.39336395]
[114.24365997 95.48870087]
[116.93286896 110.24566650]
[130.29211426 117.06699371]
[143.65136719 123.88832092]
[157.01062012 130.70965576]
[170.36985779 137.53097534]
[183.72911072 144.35231018]
[197.08834839 151.17362976]
[210.44760132 157.99496460]
[223.80685425 164.81628418]
[237.28123474 171.40727234]
[250.86676025 177.76599121]
[264.45230103 184.12471008]
[278.03784180 190.48342896]
[291.62335205 196.84214783]
[305.20889282 203.20085144]
[311.85797119 203.01414490]
[316.84246826 205.80860901]
[319.14587402 210.01814270]
[332.50512695 216.83946228]
[345.86437988 223.66079712]
[359.22363281 230.48211670]
[368.31466675 231.60327148]
[372.75216675 237.53692627]
[385.99234009 244.58657837]
[398.97940063 236.38710022]
[414.32690430 235.79571533]
[427.90643311 242.97151184]
[436.06518555 255.98422241]
[436.60845947 271.33349609]
[429.39013672 284.89047241]
[416.35189819 293.00836182]
[401.00097656 293.50354004]
[387.46670532 286.24273682]
[379.38970947 273.17913818]
[378.94268799 257.82675171]
[365.70251465 250.77711487]
[352.40231323 243.84136963]
[339.04306030 237.02003479]
[325.68380737 230.19871521]
[312.32455444 223.37738037]
[298.85018921 216.78639221]
[285.26464844 210.42767334]
[271.67910767 204.06895447]
[258.09356689 197.71023560]
[244.50804138 191.35153198]
[230.92251587 184.99281311]
[226.18547058 185.75849915]
[220.91970825 183.53904724]
[216.98551941 178.17553711]
[203.62628174 171.35420227]
[190.26702881 164.53288269]
[176.90777588 157.71154785]
[163.54853821 150.89022827]
[150.18928528 144.06889343]
[136.83003235 137.24757385]
[123.47078705 130.42623901]
[110.11154175 123.60491943]
[112.15654755 138.46485901]
[107.21090698 152.62609863]
[96.35951996 162.98213196]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 103]
[8 102]
[9 101]
[10 100]
[11 99]
[12 98]
[14 95]
[15 94]
[16 93]
[17 89]
[18 88]
[19 87]
[20 86]
[21 85]
[24 83]
[25 82]
[27 81]
[28 80]
[30 78]
[31 77]
[32 75]
[36 70]
[37 69]
[39 67]
[40 66]
[42 64]
[43 63]
[44 62]
[45 61]
[46 60]
[49 59]
[50 58]
[51 57]
[52 56]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
[110 116]
[123 179]
[124 178]
[125 177]
[126 176]
[127 175]
[128 174]
[129 173]
[130 172]
[131 171]
[132 168]
[133 167]
[134 166]
[135 165]
[136 164]
[137 163]
[140 162]
[141 161]
[142 160]
[143 159]
[145 158]
[146 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
