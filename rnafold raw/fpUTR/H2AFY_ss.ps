%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGUUCCAGUUCACUCGGCAGCGGCGCCGGGCGGAGGGGGAGAGCGCGGGCCGCGCGGGCGGGAAGCGAAGAGGCGGGCGGGCCAGCGAGGAGCGCGGAGAGAAAAGGCGCGAGCGGCCAGGAGGGCUCAGGCCGAGACACCUUGCAGCUGCCGCCGCCGCCACCGAGCCGCCGCUGUGCUCACUGAUCCGCCUCCAGGGCCACCGCC\
) } def
/len { sequence length } bind def

/coor [
[129.48649597 107.45748901]
[127.00172424 117.54316711]
[121.00258636 126.71910095]
[111.85245514 133.75021362]
[100.34838867 137.55461121]
[87.65531158 137.35459900]
[77.65714264 148.53657532]
[67.65896606 159.71855164]
[57.66079330 170.90052795]
[58.36157608 186.46159363]
[48.06271744 197.65927124]
[33.22330475 198.23146057]
[23.22513199 209.41343689]
[13.22695923 220.59541321]
[9.79641247 236.04022217]
[-4.45477104 240.37069702]
[-14.45294285 251.55267334]
[-24.45111465 262.73464966]
[-34.44928741 273.91662598]
[-44.44746017 285.09860229]
[-54.44563293 296.28057861]
[-53.31354141 312.04425049]
[-63.72265625 323.93652344]
[-79.49743652 324.90188599]
[-91.27897644 314.36761475]
[-92.07750702 298.58352661]
[-81.41926575 286.91400146]
[-65.62760925 286.28240967]
[-55.62943268 275.10043335]
[-45.63125992 263.91845703]
[-35.63309097 252.73648071]
[-25.63491821 241.55450439]
[-15.63674545 230.37252808]
[-12.92133522 215.72753906]
[2.04498434 210.59724426]
[12.04315662 199.41526794]
[22.04132843 188.23329163]
[20.95631027 173.42254639]
[30.93658638 161.94000244]
[46.47882080 160.90235901]
[56.47699356 149.72038269]
[66.47516632 138.53840637]
[76.47333527 127.35643768]
[73.33465576 120.54477692]
[67.05729675 106.92146301]
[63.91861343 100.10980225]
[48.92235565 100.44477844]
[33.92609787 100.77975464]
[18.92983818 101.11473083]
[3.93357801 101.44970703]
[-11.76657867 107.84825134]
[-22.26130486 94.53295898]
[-12.37160587 80.76232910]
[3.59860206 86.45344543]
[18.59486198 86.11846924]
[33.59112167 85.78349304]
[48.58737946 85.44851685]
[63.58363724 85.11354065]
[90.41905975 68.32435608]
[115.05303955 77.77342987]
[126.59934235 68.19831085]
[138.14564514 58.62319183]
[149.69194031 49.04807281]
[161.23825073 39.47295380]
[160.93774414 26.00728035]
[168.33950806 14.98800945]
[180.55534363 10.31305599]
[193.04536438 13.47992802]
[204.73294067 4.07777691]
[203.67245483 -12.80331993]
[212.79231262 -26.85071945]
[228.33224487 -32.63621902]
[244.09881592 -28.06537819]
[255.64512634 -37.64049911]
[267.19143677 -47.21561813]
[278.73773193 -56.79073715]
[290.28402710 -66.36585999]
[301.83032227 -75.94097900]
[313.37661743 -85.51609802]
[324.92294312 -95.09121704]
[336.39764404 -104.75202942]
[347.57962036 -114.75019836]
[358.53552246 -124.99559021]
[369.49142456 -135.24098206]
[380.44732666 -145.48637390]
[391.32666016 -155.81304932]
[402.12881470 -166.22041321]
[412.93096924 -176.62779236]
[423.73315430 -187.03515625]
[434.53530884 -197.44253540]
[434.99383545 -213.01261902]
[446.09701538 -223.41329956]
[460.93789673 -222.88018799]
[464.94662476 -231.08798218]
[471.97918701 -233.36061096]
[482.93511963 -243.60600281]
[487.72988892 -258.68316650]
[502.31060791 -261.72494507]
[513.26647949 -271.97033691]
[524.22241211 -282.21572876]
[520.01135254 -292.65985107]
[519.18151855 -303.86367798]
[521.79553223 -314.76251221]
[527.58947754 -324.32559204]
[535.99957275 -331.65356445]
[546.21685791 -336.06298828]
[557.26507568 -337.15017700]
[568.09387207 -334.82809448]
[577.67877197 -329.33291626]
[589.22509766 -338.90805054]
[600.77136230 -348.48315430]
[612.31768799 -358.05828857]
[623.79235840 -367.71908569]
[635.19482422 -377.46505737]
[639.68499756 -385.41967773]
[646.84039307 -387.26971436]
[658.38665771 -396.84484863]
[669.93298340 -406.41995239]
[681.47930908 -415.99508667]
[693.02557373 -425.57019043]
[692.17120361 -440.95123291]
[700.44085693 -453.73663330]
[714.48718262 -459.13708496]
[728.84820557 -455.27719116]
[740.39453125 -464.85229492]
[751.94079590 -474.42742920]
[763.48712158 -484.00253296]
[774.96179199 -493.66336060]
[786.29138184 -503.49392700]
[797.54748535 -513.40856934]
[808.80358887 -523.32324219]
[811.24902344 -539.17883301]
[825.24114990 -547.02734375]
[840.04644775 -540.84814453]
[844.30755615 -525.38128662]
[834.75567627 -512.49169922]
[818.71826172 -512.06713867]
[807.46215820 -502.15249634]
[796.20605469 -492.23785400]
[793.26452637 -485.45779419]
[784.70776367 -482.26089478]
[781.66558838 -475.52539062]
[773.06225586 -472.45623779]
[761.51593018 -462.88113403]
[749.96960449 -453.30599976]
[738.42333984 -443.73089600]
[739.55920410 -428.90362549]
[731.65283203 -416.09918213]
[717.55804443 -410.33816528]
[702.60070801 -414.02389526]
[691.05438232 -404.44876099]
[679.50811768 -394.87365723]
[667.96179199 -385.29852295]
[656.41552734 -375.72341919]
[644.94079590 -366.06259155]
[633.53833008 -356.31665039]
[630.49615479 -349.58114624]
[621.89282227 -346.51199341]
[610.34649658 -336.93685913]
[598.80017090 -327.36175537]
[587.25390625 -317.78662109]
[591.43206787 -299.34899902]
[585.63781738 -281.26779175]
[571.39916992 -268.58404541]
[552.61053467 -264.87817383]
[534.46783447 -271.25982666]
[523.51190186 -261.01443481]
[512.55596924 -250.76904297]
[508.54483032 -236.42469788]
[493.18051147 -232.65010071]
[482.22457886 -222.40470886]
[471.34524536 -212.07803345]
[471.32568359 -197.22761536]
[460.51904297 -186.51918030]
[444.94265747 -186.64038086]
[434.14050293 -176.23300171]
[423.33834839 -165.82563782]
[412.53619385 -155.41825867]
[401.73403931 -145.01087952]
[399.09817505 -138.10624695]
[390.69271851 -134.53047180]
[379.73681641 -124.28507233]
[368.78091431 -114.03968048]
[357.82501221 -103.79428864]
[357.34213257 -100.30155945]
[355.14355469 -96.86917114]
[351.27603149 -94.30098724]
[346.14358521 -93.34956360]
[343.10144043 -86.61405945]
[334.49804688 -83.54491425]
[322.95175171 -73.96979523]
[311.40545654 -64.39467621]
[299.85916138 -54.81955719]
[288.31283569 -45.24443436]
[276.76654053 -35.66931534]
[265.22024536 -26.09419632]
[253.67393494 -16.51907730]
[255.76071167 -3.33243537]
[251.02113342 9.26441288]
[240.59312439 17.94347000]
[227.13204956 20.35555458]
[214.13510132 15.76535797]
[202.44750977 25.16750908]
[201.35169983 41.94958115]
[188.19839478 52.96346283]
[170.81336975 51.01925278]
[159.26705933 60.59437180]
[147.72076416 70.16949463]
[136.17446899 79.74461365]
[124.62815857 89.31973267]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 43]
[7 42]
[8 41]
[9 40]
[12 37]
[13 36]
[14 35]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[60 210]
[61 209]
[62 208]
[63 207]
[64 206]
[68 203]
[69 202]
[73 197]
[74 196]
[75 195]
[76 194]
[77 193]
[78 192]
[79 191]
[80 190]
[81 188]
[82 184]
[83 183]
[84 182]
[85 181]
[86 179]
[87 178]
[88 177]
[89 176]
[90 175]
[93 172]
[95 171]
[96 170]
[98 168]
[99 167]
[100 166]
[109 161]
[110 160]
[111 159]
[112 158]
[113 156]
[114 155]
[116 154]
[117 153]
[118 152]
[119 151]
[120 150]
[124 146]
[125 145]
[126 144]
[127 143]
[128 141]
[129 139]
[130 138]
[131 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
