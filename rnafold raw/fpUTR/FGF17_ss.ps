%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUCCUCCUCCCUCUUUUCUCUCCUCCUCCUCCCCUUUCUCUCCUCCUCGCCCCCCUGAAAACCUGUGGCUCGGAGAGACCUUGGCUUCUCUGGGACUCUACCCCUGGGGACUUCCCACAUCUGCUCCUGAGCUUGGGGGCAGGGGGGCAACCGCCUGAGGAACCUCUCCAGCG\
) } def
/len { sequence length } bind def

/coor [
[-10.80520058 346.43606567]
[-17.24460983 359.98352051]
[-25.17718506 372.71435547]
[-34.50080490 384.46469116]
[-45.09545135 395.08322144]
[-56.82473755 404.43331909]
[-69.53767395 412.39453125]
[-83.07060242 418.86447144]
[-97.24932098 423.75976562]
[-111.89129639 427.01745605]
[-126.80805206 428.59558105]
[-141.80755615 428.47381592]
[-156.69673157 426.65374756]
[-171.28388977 423.15881348]
[-185.38127136 418.03396606]
[-198.80738831 411.34521484]
[-211.38940430 403.17864990]
[-222.96536255 393.63940430]
[-233.38623047 382.85028076]
[-242.51788330 370.95016479]
[-250.24273682 358.09222412]
[-256.46139526 344.44198608]
[-261.09375000 330.17520142]
[-264.08020020 315.47549438]
[-265.38229370 300.53213501]
[-264.98327637 285.53744507]
[-262.88827515 270.68444824]
[-259.12426758 256.16439819]
[-253.73970032 242.16416931]
[-246.80390930 228.86399841]
[-238.40614319 216.43508911]
[-228.65452576 205.03746033]
[-217.67460632 194.81781006]
[-205.60769653 185.90771484]
[-192.60916138 178.42185974]
[-178.84631348 172.45663452]
[-164.49632263 168.08880615]
[-149.74392700 165.37460327]
[-134.77903748 164.34896851]
[-119.79428101 165.02511597]
[-104.98256683 167.39433289]
[-90.53456879 171.42611694]
[-76.63626862 177.06857300]
[-63.46658325 184.24905396]
[-51.19504929 192.87513733]
[-39.97963333 202.83578491]
[-29.96471024 214.00276184]
[-21.27920914 226.23231506]
[-14.03493214 239.36701965]
[-8.32513905 253.23779297]
[-4.22333002 267.66607666]
[-1.78176379 282.47119141]
[4.89730120 269.04025269]
[11.57636642 255.60932922]
[18.25543022 242.17839050]
[24.93449593 228.74745178]
[31.61355972 215.31651306]
[38.29262543 201.88557434]
[44.97169113 188.45463562]
[51.65075684 175.02369690]
[45.74694824 165.21839905]
[45.31937408 153.66076660]
[50.59082031 143.23170471]
[60.34901047 136.58702087]
[72.22339630 135.48143005]
[79.37492371 122.29599762]
[86.52645874 109.11056519]
[83.89232635 97.74574280]
[89.54514313 87.54067993]
[100.57669067 83.74558258]
[107.96111298 70.68915558]
[115.34553528 57.63272476]
[122.72995758 44.57629776]
[130.11437988 31.51986885]
[137.38264465 18.39842415]
[144.53417969 5.21299171]
[151.68569946 -7.97243929]
[158.83723450 -21.15787125]
[165.87147522 -34.40625000]
[172.78785706 -47.71652985]
[179.70425415 -61.02680969]
[174.18879700 -73.33528900]
[176.74206543 -86.38071442]
[186.20936584 -95.43233490]
[198.97094727 -97.33996582]
[206.12248230 -110.52539825]
[213.27401733 -123.71083069]
[207.18466187 -141.62483215]
[215.94407654 -158.03553772]
[233.60115051 -162.78063965]
[240.28021240 -176.21157837]
[246.95927429 -189.64251709]
[253.63833618 -203.07345581]
[260.31741333 -216.50439453]
[266.99645996 -229.93533325]
[273.67553711 -243.36627197]
[280.35461426 -256.79721069]
[273.05624390 -270.49078369]
[275.23397827 -285.85427856]
[286.05038452 -296.98013306]
[301.34637451 -299.59020996]
[315.24029541 -292.68090820]
[322.38967896 -278.90899658]
[320.04541016 -263.57000732]
[309.10894775 -252.56214905]
[293.78555298 -250.11813354]
[287.10647583 -236.68719482]
[280.42739868 -223.25625610]
[273.74835205 -209.82533264]
[267.06927490 -196.39439392]
[260.39022827 -182.96345520]
[253.71115112 -169.53251648]
[247.03208923 -156.10157776]
[252.93589783 -146.29627991]
[253.36346436 -134.73863220]
[248.09202576 -124.30957794]
[238.33383179 -117.66490173]
[226.45944214 -116.55930328]
[219.30792236 -103.37387085]
[212.15638733 -90.18843842]
[217.62882996 -74.30078888]
[209.77630615 -59.06415176]
[193.01452637 -54.11042404]
[186.09814453 -40.80014038]
[179.18174744 -27.48986053]
[178.88674927 -20.08150864]
[172.02265930 -14.00633907]
[164.87113953 -0.82090807]
[157.71960449 12.36452293]
[150.56806946 25.54995537]
[150.14163208 32.95190430]
[143.17080688 38.90429306]
[135.78637695 51.96072006]
[128.40196228 65.01715088]
[121.01753998 78.07357788]
[113.63311768 91.13000488]
[114.22771454 107.88105011]
[99.71189117 116.26209259]
[92.56035614 129.44752502]
[85.40882874 142.63294983]
[91.49818420 160.54695129]
[82.73876953 176.95765686]
[65.08169556 181.70275879]
[58.40262985 195.13369751]
[51.72356415 208.56463623]
[45.04449844 221.99557495]
[38.36543274 235.42651367]
[31.68636894 248.85745239]
[25.00730324 262.28839111]
[18.32823944 275.71932983]
[11.64917374 289.15026855]
[26.60967827 288.06246948]
[34.19360733 301.00402832]
[25.93268585 313.52429199]
[11.05021286 311.64230347]
[17.00498772 325.40966797]
[22.95976257 339.17703247]
[37.37873840 345.07034302]
[43.22160721 359.11724854]
[37.51440048 372.82720947]
[43.46917343 386.59457397]
[49.42395020 400.36196899]
[55.37872314 414.12933350]
[68.85802460 423.46960449]
[67.23930359 439.78866577]
[52.18775558 446.29888916]
[39.18712234 436.30310059]
[41.61134720 420.08410645]
[35.65657043 406.31674194]
[29.70179749 392.54937744]
[23.74702263 378.78198242]
[9.84788513 373.55230713]
[3.61277485 359.67504883]
[9.19238567 345.13183594]
[3.23761082 331.36444092]
[-2.71716404 317.59707642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 151]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 143]
[65 140]
[66 139]
[67 138]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[75 130]
[76 129]
[77 128]
[78 127]
[79 125]
[80 124]
[81 123]
[85 120]
[86 119]
[87 118]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[155 176]
[156 175]
[157 174]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
