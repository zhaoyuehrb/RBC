%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCUAACUAGCAGGAAGUCCGGGGUUGACGAUGGCUGUGUUGUUGAAGGGCCUGUAGCCGGGGGGUUCCUGGCCGGAUCCCGGUCUACCCUUAGCCCAGACUCGUUCCGGACCCCAGCCCGGCCCGGAACACUCUGGGCGAGACGGCGGUGGCAACUCUCCCCUUGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[119.52555084 174.19917297]
[118.22667694 169.68295288]
[118.89873505 164.43673706]
[113.09598541 150.60458374]
[107.29324341 136.77244568]
[98.21457672 138.02998352]
[88.96057129 137.04513550]
[80.08506012 133.80871582]
[72.13541412 128.44822693]
[65.61888885 121.22402954]
[60.97047806 112.51721191]
[58.52430725 102.80975342]
[58.49041367 92.65792847]
[43.49285889 92.92874146]
[28.49530411 93.19955444]
[13.49774837 93.47036743]
[-1.49980640 93.74118042]
[-16.49736214 94.01199341]
[-30.15559387 101.99718475]
[-43.02048111 94.49092102]
[-58.01803589 94.76173401]
[-73.01559448 95.03254700]
[-83.95021057 106.12632751]
[-99.16371918 106.18731689]
[-109.67255402 95.69446564]
[-124.67011261 95.96527863]
[-139.66766357 96.23609161]
[-154.66522217 96.50690460]
[-169.66278076 96.77771759]
[-178.22088623 100.07087708]
[-184.93298340 96.91557312]
[-199.93298340 96.91557312]
[-205.88993835 99.91041565]
[-211.60075378 99.48518372]
[-215.47207642 96.63497925]
[-230.46229553 96.09344482]
[-245.45251465 95.55191040]
[-260.44271851 95.01036835]
[-274.51324463 102.24440765]
[-286.95288086 94.05266571]
[-296.41448975 106.35135651]
[-311.30755615 110.70751953]
[-325.90539551 105.44611359]
[-334.59484863 92.59026337]
[-334.03466797 77.08329773]
[-324.44021606 64.88797760]
[-309.50076294 60.69363403]
[-294.96084595 66.11309052]
[-286.41134644 79.06244659]
[-273.41302490 71.78967285]
[-259.90118408 80.02014923]
[-244.91098022 80.56168365]
[-229.92076111 81.10322571]
[-214.93052673 81.64476013]
[-199.93298340 81.91557312]
[-184.93298340 81.91557312]
[-169.93359375 81.78015900]
[-154.93603516 81.50934601]
[-139.93847656 81.23853302]
[-124.94092560 80.96772003]
[-109.94336700 80.69690704]
[-99.82020569 69.83150482]
[-84.61441040 69.34321594]
[-73.28640747 80.03499603]
[-58.28884888 79.76418304]
[-43.29129410 79.49337006]
[-30.70578766 71.52754974]
[-16.76817322 79.01443481]
[-1.77061868 78.74362183]
[13.22693634 78.47281647]
[28.22449112 78.20200348]
[43.22204590 77.93119049]
[58.21960068 77.66037750]
[67.29721832 65.71897888]
[63.54588699 51.19563675]
[59.79455566 36.67229080]
[56.04322433 22.14894867]
[52.29189682 7.62560368]
[42.47650528 -6.19808674]
[53.04278946 -19.45666695]
[68.70825958 -12.97365856]
[66.81523895 3.87427378]
[70.56656647 18.39761734]
[74.31790161 32.92096329]
[78.06922913 47.44430542]
[81.82055664 61.96765137]
[91.02790070 59.60809708]
[100.35473633 59.40270615]
[109.31288910 61.28298569]
[117.45115662 65.07330322]
[124.37805939 70.50395966]
[129.78057861 77.22893524]
[143.27827454 70.68583679]
[156.77598572 64.14274597]
[163.16033936 57.56050110]
[170.57695007 57.60583878]
[184.19058228 51.30750275]
[197.80421448 45.00916672]
[211.41784668 38.71083069]
[225.03147888 32.41249466]
[238.64511108 26.11415863]
[252.25874329 19.81582069]
[255.42599487 6.70318365]
[265.42852783 -2.05490017]
[278.45715332 -3.42162132]
[289.71936035 2.87996554]
[303.44448853 -3.17156196]
[317.16961670 -9.22308922]
[330.89471436 -15.27461720]
[344.61984253 -21.32614326]
[358.34497070 -27.37767220]
[372.07009888 -33.42919922]
[381.57586670 -46.07636642]
[396.34292603 -44.13130188]
[410.06805420 -50.18283081]
[414.25857544 -65.24847412]
[427.18188477 -74.05313110]
[442.73599243 -72.43952179]
[453.57672119 -61.16953659]
[454.58541870 -45.56452179]
[445.28579712 -32.99268341]
[430.06884766 -29.39006233]
[416.11956787 -36.45770645]
[402.39443970 -30.40617943]
[393.87039185 -18.19185638]
[378.12161255 -19.70407486]
[364.39651489 -13.65254784]
[350.67138672 -7.60102081]
[336.94625854 -1.54949331]
[323.22113037 4.50203419]
[309.49600220 10.55356121]
[295.77087402 16.60508919]
[290.37753296 32.51817322]
[274.84527588 39.76472855]
[258.55706787 33.42945099]
[244.94345093 39.72779083]
[231.32981873 46.02612686]
[217.71618652 52.32446289]
[204.10255432 58.62279892]
[190.48892212 64.92113495]
[176.87528992 71.21947479]
[163.31907654 77.64044952]
[149.82136536 84.18354034]
[136.32366943 90.72663116]
[137.02520752 105.87696075]
[131.66676331 120.06539917]
[121.12538147 130.96971130]
[126.92813110 144.80184937]
[132.73088074 158.63398743]
[138.90606689 172.30392456]
[145.44915771 185.80162048]
[151.99224854 199.29933167]
[158.53533936 212.79702759]
[165.07843018 226.29472351]
[171.62152100 239.79243469]
[178.16461182 253.29013062]
[184.70770264 266.78784180]
[200.00564575 269.38644409]
[210.83039856 280.50421143]
[213.01963806 295.86605835]
[205.73155212 309.56509399]
[191.76856995 316.33374023]
[176.49972534 313.56930542]
[165.79620361 302.33480835]
[163.77374268 286.95007324]
[171.21000671 273.33093262]
[164.66691589 259.83322144]
[158.12382507 246.33552551]
[151.58073425 232.83781433]
[145.03764343 219.34011841]
[138.49453735 205.84242249]
[131.95144653 192.34471130]
[125.40835571 178.84701538]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 149]
[4 148]
[5 147]
[13 73]
[14 72]
[15 71]
[16 70]
[17 69]
[18 68]
[20 66]
[21 65]
[22 64]
[25 61]
[26 60]
[27 59]
[28 58]
[29 57]
[31 56]
[32 55]
[35 54]
[36 53]
[37 52]
[38 51]
[40 49]
[74 86]
[75 85]
[76 84]
[77 83]
[78 82]
[92 144]
[93 143]
[94 142]
[96 141]
[97 140]
[98 139]
[99 138]
[100 137]
[101 136]
[102 135]
[106 132]
[107 131]
[108 130]
[109 129]
[110 128]
[111 127]
[112 126]
[114 124]
[115 123]
[150 173]
[151 172]
[152 171]
[153 170]
[154 169]
[155 168]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
