%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUGGCCAAUGGCCGCGCGCUCUGCCCGCCCCGCCUCCUCGCUGCGGGAAGGGUCCUGGGCCCCGGGCGGCGGUCGCCAGGUCUCAGGGCCGGGGGUACCCGAGUCUCGUUUCCUCUCAGUCCAUCCACCCUUCAUGGGGCCAGAGCCCUCUCUCCAGAAUCUGAGCAGCA\
) } def
/len { sequence length } bind def

/coor [
[113.78016663 215.77674866]
[109.22341156 230.06787109]
[95.97399902 237.10015869]
[81.58425903 232.86514282]
[74.25627136 219.77485657]
[68.92740631 233.79637146]
[63.59853745 247.81790161]
[58.26966858 261.83941650]
[58.29462051 278.79336548]
[42.01016235 283.51065063]
[32.96924210 269.16845703]
[44.24814224 256.51055908]
[49.57701111 242.48902893]
[54.90587997 228.46751404]
[60.23474884 214.44598389]
[64.79221344 200.15509033]
[68.56475830 185.63725281]
[62.70447922 175.02943420]
[65.75491333 162.88650513]
[76.60612488 155.87103271]
[80.64167023 141.42407227]
[84.67721558 126.97712708]
[88.71276855 112.53018188]
[83.58065033 107.06105042]
[73.31641388 96.12279510]
[68.18429565 90.65366364]
[53.51019669 93.76345825]
[38.83609772 96.87325287]
[24.16199875 99.98303986]
[9.48789978 103.09283447]
[4.06979847 112.57617188]
[-5.48592234 117.39485168]
[-15.89539623 116.16464996]
[-23.72849655 109.53524017]
[-38.50584030 112.11015320]
[-47.39075089 125.18049622]
[-62.93088913 128.05793762]
[-75.90656281 119.03533173]
[-78.61954498 103.46563721]
[-69.46025848 90.58608246]
[-53.86275101 88.03786469]
[-41.08074951 97.33280945]
[-26.30340958 94.75789642]
[-12.45414162 81.29374695]
[6.37810612 88.41873932]
[21.05220604 85.30894470]
[35.72630310 82.19915009]
[50.40040207 79.08935547]
[65.07450104 75.97956085]
[86.33514404 76.63351440]
[98.94382477 88.29827118]
[106.48310852 75.33065033]
[114.02239227 62.36302567]
[121.56167603 49.39540482]
[129.10095215 36.42778015]
[129.34822083 20.60850716]
[142.43414307 13.49458885]
[149.97343445 0.52696705]
[157.51271057 -12.44065475]
[165.05198669 -25.40827751]
[166.67004395 -34.43542862]
[172.84774780 -38.54114151]
[180.62126160 -51.36972427]
[188.39477539 -64.19830322]
[196.16827393 -77.02688599]
[203.35157776 -90.19503784]
[209.92987061 -103.67562103]
[216.50816345 -117.15620422]
[215.60670471 -132.95170593]
[228.14183044 -140.99656677]
[234.72012329 -154.47715759]
[232.99966431 -172.79417419]
[247.88777161 -182.05578613]
[254.22018433 -195.65361023]
[253.03205872 -211.43013000]
[265.41903687 -219.70129395]
[257.01300049 -234.35931396]
[258.96755981 -250.97610474]
[270.31802368 -263.04171753]
[286.45791626 -265.94775391]
[292.54235840 -279.65832520]
[298.62680054 -293.36886597]
[291.02233887 -306.76580811]
[292.74441528 -321.89486694]
[302.92440796 -332.97781372]
[317.50396729 -335.90615845]
[316.02954102 -351.65850830]
[328.26428223 -360.15322876]
[334.34875488 -373.86376953]
[340.43319702 -387.57434082]
[346.51766968 -401.28488159]
[352.47738647 -415.05014038]
[358.31185913 -428.86889648]
[364.14636230 -442.68768311]
[369.98083496 -456.50646973]
[367.41528320 -472.70370483]
[380.32824707 -482.81246948]
[395.43600464 -476.43374634]
[397.19696045 -460.12942505]
[383.79962158 -450.67199707]
[377.96514893 -436.85321045]
[372.13064575 -423.03442383]
[366.29617310 -409.21563721]
[366.59228516 -401.80395508]
[360.22821045 -395.20043945]
[354.14376831 -381.48986816]
[348.05929565 -367.77932739]
[341.97485352 -354.06875610]
[343.88446045 -339.29708862]
[331.21450806 -329.82168579]
[338.82492065 -317.04592896]
[337.43670654 -302.06137085]
[327.37356567 -290.63391113]
[312.33737183 -287.28442383]
[306.25292969 -273.57385254]
[300.16845703 -259.86331177]
[307.90914917 -248.96142578]
[309.25396729 -235.54985046]
[303.74404907 -223.13000488]
[292.72433472 -214.99772644]
[279.01684570 -213.36886597]
[280.65792847 -198.56494141]
[267.81799316 -189.32118225]
[261.48556519 -175.72337341]
[265.33374023 -164.23162842]
[260.14047241 -152.83927917]
[248.20069885 -147.89886475]
[241.62242126 -134.41827393]
[242.99440002 -119.58699799]
[229.98873901 -110.57791901]
[223.41044617 -97.09733582]
[216.83216858 -83.61675262]
[231.67961121 -85.75066376]
[242.73191833 -75.60934448]
[241.87995911 -60.63356018]
[229.74879456 -51.81114578]
[215.23916626 -55.61516953]
[208.99685669 -69.25337219]
[201.22335815 -56.42479324]
[193.44984436 -43.59621048]
[185.67633057 -30.76762962]
[178.01962280 -17.86899567]
[170.48033142 -4.90137291]
[162.94105530 8.06624889]
[155.40176392 21.03387070]
[155.69375610 35.92561340]
[142.06857300 43.96706390]
[134.52929688 56.93468475]
[126.99001312 69.90230560]
[119.45072937 82.86992645]
[111.91144562 95.83755493]
[123.73998260 86.61335754]
[138.24618530 82.79624176]
[153.08283997 85.00383759]
[165.84930420 92.87893677]
[174.47990417 105.14730835]
[177.57812500 119.82385254]
[174.64268494 134.53381348]
[166.14854431 146.89704895]
[153.47010803 154.91310120]
[138.65881348 157.28492737]
[124.11122131 153.62876892]
[112.18121338 144.53617859]
[104.79914856 131.47842407]
[103.15971375 116.56572723]
[99.12416840 131.01268005]
[95.08862305 145.45962524]
[91.05307770 159.90657043]
[96.05326843 177.61169434]
[83.08261108 189.40979004]
[79.31006622 203.92764282]
[92.86156464 197.49671936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 15]
[6 14]
[7 13]
[8 12]
[16 171]
[17 170]
[20 168]
[21 167]
[22 166]
[23 165]
[26 49]
[27 48]
[28 47]
[29 46]
[30 45]
[34 43]
[35 42]
[51 151]
[52 150]
[53 149]
[54 148]
[55 147]
[57 145]
[58 144]
[59 143]
[60 142]
[62 141]
[63 140]
[64 139]
[65 138]
[66 132]
[67 131]
[68 130]
[70 128]
[71 127]
[73 124]
[74 123]
[76 121]
[80 116]
[81 115]
[82 114]
[86 110]
[88 108]
[89 107]
[90 106]
[91 105]
[92 103]
[93 102]
[94 101]
[95 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
