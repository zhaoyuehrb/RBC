%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGGCUGCUGGAGUGCGGCGCCACCGCGGAGGACAGGGGCAGCUGGCGGGCAGCGGGUGAGGGGGUGGCGGGGACGCGAGUGGCGGCCGCGGGGCCCCGGACAAGGGUCCGCAGAGCUGCAGCCUUCGAGGGCCAGCCCUCUCCGAGUCCGGGGCUGGGUCCCACCAGUGACAAGGCGGCAGCCCCGCGCACACCAAAGAGAAGGCGGCUGUGGCGGCAGCGGCAGCCCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[83.28426361 446.43707275]
[89.33060455 430.59796143]
[89.33060455 415.59796143]
[89.33060455 400.59796143]
[89.33060455 385.59796143]
[89.33060455 370.59796143]
[89.33060455 355.59796143]
[89.23160553 340.59826660]
[89.03360748 325.59957886]
[88.83561707 310.60089111]
[88.63761902 295.60220337]
[88.43962860 280.60351562]
[88.24163818 265.60479736]
[80.32541656 259.17935181]
[77.17713165 249.25154114]
[80.06252289 239.01606750]
[88.26379395 231.90673828]
[88.46179199 216.90805054]
[88.65978241 201.90934753]
[86.04152679 197.93516541]
[85.87957001 192.27760315]
[89.06619263 186.51872253]
[89.66003418 171.53048706]
[90.25387573 156.54225159]
[90.84771729 141.55400085]
[91.44156647 126.56576538]
[92.03540802 111.57752991]
[84.99721527 98.33124542]
[69.19091034 97.64477539]
[62.44313049 84.36634827]
[49.68987274 76.46986389]
[36.93661499 68.57337952]
[24.18335915 60.67689896]
[11.43010235 52.78041840]
[-1.32315421 44.88393402]
[-9.68460751 49.72268295]
[-19.17536163 51.18532944]
[-28.49280548 49.11360168]
[-36.37349319 43.83143234]
[-41.76446533 36.09513474]
[-43.96387482 26.98532486]
[-42.71213150 17.75608063]
[-55.03087616 9.19754505]
[-67.34962463 0.63900930]
[-79.66836548 -7.91952610]
[-91.98711395 -16.47806168]
[-104.30585480 -25.03659821]
[-122.69446564 -26.15638351]
[-129.52790833 -42.32876587]
[-141.95854187 -50.72395706]
[-154.38917542 -59.11914444]
[-166.81982422 -67.51432800]
[-179.25045776 -75.90951538]
[-191.68110657 -84.30470276]
[-204.45671082 -82.62084961]
[-214.63360596 -89.85406494]
[-217.08016968 -101.68880463]
[-232.43934631 -99.09387207]
[-244.81037903 -107.94892883]
[-247.18960571 -122.60754395]
[-259.50833130 -131.16607666]
[-272.38992310 -127.26970673]
[-284.98165894 -131.43727112]
[-292.76336670 -141.93698120]
[-293.07785034 -154.80766296]
[-305.28253174 -163.52804565]
[-317.48724365 -172.24844360]
[-329.69195557 -180.96884155]
[-341.89666748 -189.68922424]
[-357.28872681 -187.29725647]
[-369.54180908 -196.31483459]
[-371.72732544 -211.00357056]
[-383.93203735 -219.72396851]
[-399.65866089 -221.45140076]
[-405.51602173 -235.14595032]
[-417.72070312 -243.86634827]
[-433.44732666 -245.59378052]
[-439.30468750 -259.28833008]
[-451.50939941 -268.00872803]
[-463.71408081 -276.72909546]
[-479.71173096 -275.52294922]
[-490.52310181 -287.37597656]
[-487.85461426 -303.19552612]
[-473.75332642 -310.84625244]
[-459.03652954 -304.45910645]
[-454.99368286 -288.93380737]
[-442.78900146 -280.21340942]
[-430.58428955 -271.49304199]
[-415.73062134 -270.38934326]
[-409.00030518 -256.07104492]
[-396.79562378 -247.35064697]
[-381.94195557 -246.24696350]
[-375.21163940 -231.92866516]
[-363.00695801 -223.20828247]
[-348.40255737 -225.90045166]
[-335.90103149 -217.23059082]
[-333.17626953 -201.89393616]
[-320.97155762 -193.17353821]
[-308.76684570 -184.45314026]
[-296.56216431 -175.73275757]
[-284.35745239 -167.01235962]
[-267.89196777 -170.47735596]
[-253.74139404 -160.76296997]
[-250.94981384 -143.48481750]
[-238.63105774 -134.92628479]
[-224.06349182 -137.81100464]
[-211.44862366 -129.30691528]
[-208.52163696 -114.00755310]
[-190.97282410 -113.47769928]
[-183.28591919 -96.73534393]
[-170.85527039 -88.34015656]
[-158.42463684 -79.94496918]
[-145.99398804 -71.54978180]
[-133.56335449 -63.15459442]
[-121.13271332 -54.75940704]
[-109.21334076 -56.75324631]
[-98.79225159 -49.87652206]
[-95.74732208 -37.35534286]
[-83.42857361 -28.79680634]
[-71.10983276 -20.23827171]
[-58.79108810 -11.67973518]
[-46.47234344 -3.12119985]
[-34.15359879 5.43733597]
[-14.39066982 0.16123535]
[3.06520057 11.37997532]
[6.57332802 32.13068008]
[19.32658577 40.02716064]
[32.07984161 47.92364502]
[44.83309937 55.82012558]
[57.58635712 63.71660995]
[70.33961487 71.61309052]
[85.23371887 71.73474884]
[92.89369965 85.57798767]
[115.15483093 86.21672821]
[130.02433777 84.24247742]
[144.89384460 82.26822662]
[159.76336670 80.29397583]
[167.84083557 76.06932831]
[174.84202576 78.39314270]
[189.73629761 76.61533356]
[204.63056946 74.83752441]
[217.41644287 65.51915741]
[230.97103882 71.69348145]
[245.86531067 69.91567230]
[260.75958252 68.13787079]
[275.65386963 66.36006165]
[284.29309082 49.25909042]
[301.36840820 40.90647125]
[319.87606812 44.52590942]
[332.34606934 58.47137451]
[347.15829468 56.10530472]
[361.95455933 53.64152527]
[376.71701050 50.98265457]
[391.46160889 48.22641373]
[406.20620728 45.47016907]
[420.95080566 42.71392822]
[435.69540405 39.95768356]
[450.44000244 37.20144272]
[465.18460083 34.44519806]
[479.92919922 31.68895531]
[483.09558105 28.77883911]
[486.66247559 27.17744064]
[490.17279053 26.85087013]
[493.22674561 27.62133217]
[495.52340698 29.19797134]
[510.39291382 27.22372055]
[523.05468750 17.73739624]
[536.68957520 23.73226547]
[551.55908203 21.75801468]
[558.82952881 8.04959488]
[572.78375244 1.26294899]
[588.05615234 4.00768089]
[598.77416992 15.22838593]
[600.81646729 30.61047363]
[593.39776611 44.23921585]
[579.37072754 50.87408447]
[564.12896729 47.96384048]
[553.53332520 36.62752533]
[538.66381836 38.60177612]
[527.06567383 47.94688797]
[512.36718750 42.09323120]
[497.49765015 44.06748199]
[482.68545532 46.43355179]
[467.94085693 49.18979645]
[453.19625854 51.94603729]
[438.45166016 54.70228195]
[423.70706177 57.45852280]
[408.96246338 60.21476746]
[394.21786499 62.97100830]
[379.47326660 65.72724915]
[373.48699951 70.03783417]
[364.51593018 68.42121887]
[358.47329712 72.65241241]
[349.52435303 70.91751862]
[334.71212769 73.28359222]
[331.64135742 83.97612762]
[324.77764893 92.79614258]
[315.07855225 98.45109558]
[303.92041016 100.09432220]
[292.90319824 97.45162964]
[283.62106323 90.86614990]
[277.43167114 81.25433350]
[262.53738403 83.03214264]
[247.64311218 84.80995178]
[232.74884033 86.58775330]
[221.02830505 95.77896118]
[206.40837097 89.73180389]
[191.51409912 91.50960541]
[176.61982727 93.28741455]
[161.73760986 95.16348267]
[146.86810303 97.13773346]
[131.99859619 99.11198425]
[117.12908173 101.08623505]
[107.02364349 112.17137146]
[106.42980194 127.15960693]
[105.83596039 142.14785767]
[105.24211884 157.13609314]
[104.64827728 172.12432861]
[104.05442810 187.11257935]
[103.65847778 202.10734558]
[103.46047974 217.10603333]
[103.26248932 232.10473633]
[113.88476562 249.25154114]
[103.24032593 265.40682983]
[103.43832397 280.40551758]
[103.63631439 295.40420532]
[103.83431244 310.40289307]
[104.03230286 325.40158081]
[104.23030090 340.40026855]
[107.46781921 348.92153931]
[104.33060455 355.59796143]
[104.33060455 370.59796143]
[104.33060455 385.59796143]
[104.33060455 400.59796143]
[104.33060455 415.59796143]
[104.33060455 430.59796143]
[110.37694550 446.43707275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 236]
[3 235]
[4 234]
[5 233]
[6 232]
[7 231]
[8 229]
[9 228]
[10 227]
[11 226]
[12 225]
[13 224]
[17 222]
[18 221]
[19 220]
[22 219]
[23 218]
[24 217]
[25 216]
[26 215]
[27 214]
[28 133]
[30 131]
[31 130]
[32 129]
[33 128]
[34 127]
[35 126]
[42 123]
[43 122]
[44 121]
[45 120]
[46 119]
[47 118]
[49 115]
[50 114]
[51 113]
[52 112]
[53 111]
[54 110]
[57 108]
[60 105]
[61 104]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[72 94]
[73 93]
[75 91]
[76 90]
[78 88]
[79 87]
[80 86]
[134 213]
[135 212]
[136 211]
[137 210]
[139 209]
[140 208]
[141 207]
[143 205]
[144 204]
[145 203]
[146 202]
[150 195]
[151 194]
[152 192]
[153 190]
[154 189]
[155 188]
[156 187]
[157 186]
[158 185]
[159 184]
[160 183]
[165 182]
[166 181]
[168 179]
[169 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
