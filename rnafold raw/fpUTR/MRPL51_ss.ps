%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGUGGCUGUUGCGGAUGGGGCGUAGGUGGGCGGUGCGCCCACAGCUGCCUGGGUAAGGCCCAAGAUGGCUGUCUUCGCCUUAGUACUCGUGUGAAGUUGGCGGGGACGGUUCCUGUCAUCUUCUUGGGCUUAUUUGGUGUGCUGUUGAAGGGGGGAGACUAGAGAA\
) } def
/len { sequence length } bind def

/coor [
[84.38846588 117.04888153]
[71.21724701 124.22655487]
[58.04602432 131.40422058]
[44.87480545 138.58189392]
[31.70358658 145.75956726]
[25.63600540 152.64126587]
[18.22199440 152.94563293]
[4.92038965 159.87869263]
[-8.38121510 166.81173706]
[-17.04263496 180.05146790]
[-31.90505409 179.07283020]
[-45.20666122 186.00588989]
[-58.50826645 192.93894958]
[-71.80986786 199.87200928]
[-80.47129059 213.11174011]
[-95.33370972 212.13308716]
[-108.63531494 219.06614685]
[-117.29673767 232.30587769]
[-132.15914917 231.32723999]
[-145.46075439 238.26029968]
[-154.12217712 251.50003052]
[-168.98460388 250.52139282]
[-177.64602661 263.76110840]
[-192.50843811 262.78247070]
[-205.81004333 269.71554565]
[-219.11164856 276.64859009]
[-223.61668396 291.79718018]
[-237.55349731 299.24975586]
[-252.65362549 294.58480835]
[-259.95843506 280.56997681]
[-255.13409424 265.52001953]
[-241.04283142 258.36380005]
[-226.04470825 263.34698486]
[-212.74310303 256.41394043]
[-199.44149780 249.48086548]
[-191.73149109 236.73704529]
[-175.91766357 237.21978760]
[-168.20765686 224.47595215]
[-152.39381409 224.95869446]
[-139.09220886 218.02563477]
[-131.38221741 205.28179932]
[-115.56837463 205.76454163]
[-102.26676941 198.83148193]
[-94.55677032 186.08766174]
[-78.74292755 186.57040405]
[-65.44132233 179.63734436]
[-52.13971710 172.70428467]
[-38.83811188 165.77122498]
[-31.12811279 153.02740479]
[-15.31427383 153.51013184]
[-2.01266837 146.57708740]
[11.28893661 139.64402771]
[24.52591324 132.58834839]
[37.69713211 125.41068268]
[50.86835098 118.23300934]
[64.03957367 111.05533600]
[77.21079254 103.87766266]
[83.06114197 84.26915741]
[102.18402863 76.98664856]
[108.36937714 63.32130814]
[114.55471802 49.65596771]
[120.74006653 35.99062729]
[126.92540741 22.32528877]
[133.11074829 8.65994835]
[139.29609680 -5.00539112]
[145.48144531 -18.67073059]
[151.66679382 -32.33607101]
[157.85212708 -46.00141144]
[156.49386597 -61.76420593]
[168.79089355 -70.16851044]
[173.81976318 -84.30040741]
[177.65740967 -98.80118561]
[181.49504089 -113.30195618]
[185.33268738 -127.80273438]
[189.17033386 -142.30351257]
[193.00798035 -156.80429077]
[196.84561157 -171.30506897]
[200.68325806 -185.80584717]
[204.52090454 -200.30661011]
[208.35853577 -214.80738831]
[212.19618225 -229.30816650]
[216.03382874 -243.80894470]
[204.19558716 -255.32560730]
[199.79464722 -271.14712524]
[203.93809509 -286.94113159]
[215.40658569 -298.43194580]
[231.01119995 -302.55813599]
[234.58023071 -317.12734985]
[238.14926147 -331.69656372]
[233.04733276 -347.28189087]
[244.19364929 -359.31066895]
[260.12182617 -355.40875244]
[264.44631958 -339.59005737]
[252.71847534 -328.12753296]
[249.14944458 -313.55831909]
[245.58042908 -298.98910522]
[256.05825806 -290.19683838]
[261.74530029 -277.68432617]
[261.47671509 -263.87637329]
[255.24790955 -251.47610474]
[244.22665405 -242.93562317]
[230.53459167 -239.97129822]
[226.69696045 -225.47052002]
[222.85931396 -210.96975708]
[219.02166748 -196.46897888]
[215.18403625 -181.96820068]
[211.34638977 -167.46742249]
[207.50874329 -152.96664429]
[203.67111206 -138.46586609]
[199.83346558 -123.96509552]
[195.99581909 -109.46431732]
[192.15818787 -94.96353912]
[188.32054138 -80.46276855]
[200.54473877 -89.15581512]
[215.52143860 -89.99159241]
[228.63694763 -82.71262360]
[235.85092163 -69.56125641]
[234.94105530 -54.58887863]
[226.18763733 -42.40784836]
[212.28720093 -36.77062988]
[197.52192688 -39.41381836]
[186.44035339 -49.52315521]
[182.45623779 -63.98316956]
[184.25691223 -49.19781113]
[171.51747131 -39.81606674]
[165.33212280 -26.15072632]
[159.14678955 -12.48538589]
[152.96144104 1.17995358]
[146.77609253 14.84529305]
[140.59074402 28.51063347]
[134.40541077 42.17597198]
[128.22006226 55.84131241]
[122.03471375 69.50665283]
[115.84937286 83.17198944]
[122.89507294 96.80627441]
[119.84953308 111.84822083]
[129.53845215 123.29919434]
[139.22737122 134.75016785]
[148.91629028 146.20114136]
[158.60522461 157.65211487]
[168.29414368 169.10308838]
[183.11470032 174.64038086]
[185.42895508 189.35409546]
[200.24952698 194.89138794]
[202.56378174 209.60510254]
[212.25270081 221.05607605]
[227.07325745 226.59336853]
[229.38752747 241.30708313]
[239.07644653 252.75805664]
[253.92314148 260.94412231]
[250.16697693 277.47674561]
[233.24064636 278.44406128]
[227.62547302 262.44699097]
[217.93655396 250.99600220]
[203.80900574 246.27777100]
[200.80172729 230.74499512]
[191.11280823 219.29402161]
[176.98526001 214.57579041]
[173.97798157 199.04301453]
[159.85044861 194.32478333]
[156.84317017 178.79202271]
[147.15423584 167.34103394]
[137.46531677 155.89006042]
[127.77640533 144.43908691]
[118.08747864 132.98811340]
[108.39855957 121.53714752]
[103.43558502 122.86003113]
[98.30300140 123.05438232]
[93.25419617 122.11059570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 57]
[2 56]
[3 55]
[4 54]
[5 53]
[7 52]
[8 51]
[9 50]
[11 48]
[12 47]
[13 46]
[14 45]
[16 43]
[17 42]
[19 40]
[20 39]
[22 37]
[24 35]
[25 34]
[26 33]
[59 134]
[60 133]
[61 132]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
[68 125]
[70 123]
[71 113]
[72 112]
[73 111]
[74 110]
[75 109]
[76 108]
[77 107]
[78 106]
[79 105]
[80 104]
[81 103]
[82 102]
[87 96]
[88 95]
[89 94]
[136 166]
[137 165]
[138 164]
[139 163]
[140 162]
[141 161]
[143 159]
[145 157]
[146 156]
[148 154]
[149 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
