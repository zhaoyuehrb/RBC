%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGACGGCGCUGCCGCCAUUUUGUGGGGUGUUUGUCGCAGCGGCCGAGGAGGGAAGACGGCAGUUUGGCGACAUUUCUCGGCCGAAGGGCCAUUUGCUUUUGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[78.09086609 128.32948303]
[70.44387817 120.22387695]
[56.56509399 125.91416168]
[42.68630981 131.60444641]
[28.80752754 137.29473877]
[14.92874432 142.98503113]
[1.04996061 148.67530823]
[-12.82882309 154.36560059]
[-26.62416649 160.25529480]
[-40.33320236 166.34317017]
[-54.04224014 172.43106079]
[-67.75127411 178.51893616]
[-74.44788361 184.95870972]
[-81.94421387 184.57838440]
[-95.82299805 190.26866150]
[-109.70178223 195.95895386]
[-123.58056641 201.64924622]
[-129.44918823 216.32353210]
[-144.00794983 222.47319031]
[-158.61936951 216.44975281]
[-164.61476135 201.82679749]
[-158.43716431 187.27987671]
[-143.75164795 181.43940735]
[-129.27085876 187.77046204]
[-115.39206696 182.08016968]
[-101.51328278 176.38987732]
[-87.63449860 170.69960022]
[-73.83915710 164.80990601]
[-60.13012314 158.72201538]
[-46.42108536 152.63414001]
[-32.71204758 146.54624939]
[-27.80183220 140.86915588]
[-18.51910973 140.48681641]
[-4.64032602 134.79652405]
[9.23845768 129.10624695]
[23.11724091 123.41595459]
[36.99602509 117.72566986]
[50.87480927 112.03537750]
[64.75359344 106.34509277]
[68.70012665 82.59634399]
[86.79070282 66.71210480]
[110.85041046 65.87027740]
[118.28792572 52.84401703]
[125.72543335 39.81776047]
[133.16294861 26.79150009]
[140.60046387 13.76524162]
[148.03797913 0.73898339]
[155.47547913 -12.28727531]
[162.91299438 -25.31353378]
[170.35050964 -38.33979034]
[177.78802490 -51.36605072]
[185.22554016 -64.39231110]
[178.63470459 -74.08547211]
[176.22132874 -85.50296783]
[178.30723572 -96.93209839]
[184.54235840 -106.67362976]
[193.96269226 -113.29438782]
[205.13925171 -115.83809662]
[216.39471436 -113.96331787]
[224.92936707 -126.29862213]
[226.41854858 -142.04959106]
[240.02285767 -148.11355591]
[248.55751038 -160.44886780]
[252.59738159 -176.91445923]
[269.53784180 -177.59060669]
[274.87713623 -161.49935913]
[260.89282227 -151.91421509]
[252.35816956 -139.57891846]
[251.47944641 -124.71025085]
[237.26466370 -117.76396942]
[228.73001099 -105.42866516]
[235.97509766 -88.37071228]
[231.61502075 -70.20675659]
[217.19093323 -58.10703659]
[198.25178528 -56.95479584]
[190.81428528 -43.92853928]
[183.37677002 -30.90227890]
[175.93925476 -17.87602043]
[168.50173950 -4.84976292]
[161.06422424 8.17649555]
[153.62672424 21.20275497]
[146.18920898 34.22901154]
[138.75169373 47.25527191]
[131.31417847 60.28152847]
[123.87667084 73.30778503]
[128.49012756 78.30017090]
[132.07714844 84.07434845]
[134.50849915 90.42228699]
[135.69660950 97.11528778]
[135.59864807 103.91221619]
[134.21815491 110.56819916]
[131.60487366 116.84343719]
[127.85294342 122.51184082]
[123.09753418 127.36920166]
[130.15657043 140.60438538]
[137.21560669 153.83956909]
[144.27464294 167.07475281]
[151.33366394 180.30993652]
[165.53062439 188.51838684]
[165.24980164 204.91511536]
[150.78007507 212.63259888]
[137.00668335 203.73173523]
[138.09848022 187.36897278]
[131.03945923 174.13378906]
[123.98042297 160.89860535]
[116.92138672 147.66342163]
[109.86235809 134.42823792]
[98.80275726 135.79296875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 39]
[3 38]
[4 37]
[5 36]
[6 35]
[7 34]
[8 33]
[9 31]
[10 30]
[11 29]
[12 28]
[14 27]
[15 26]
[16 25]
[17 24]
[42 85]
[43 84]
[44 83]
[45 82]
[46 81]
[47 80]
[48 79]
[49 78]
[50 77]
[51 76]
[52 75]
[59 71]
[60 70]
[62 68]
[63 67]
[94 107]
[95 106]
[96 105]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
