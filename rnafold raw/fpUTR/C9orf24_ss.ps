%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGGCAGUGCCCAUCCUGGAGGGGGCAUCAGUGUGGGGUGGGAGCAGGAAGGCUGUUGGGGAAGGAAGCUGAGAGAUCCUCUGCAGGAGGGGAUUAUAGCAGCUAAGGGCACCUGCCAGGCUGGAGGUGUGGCCUGUCUAGGGGAAGGGUGGUCACUGAUGUCCAGCAGGAGCCCUUGACAGGUAGAGCCCACCACGGCAUCUCCAAGACCACACC\
) } def
/len { sequence length } bind def

/coor [
[-16.63515091 448.32385254]
[-25.76298332 450.31042480]
[-29.59328270 464.81314087]
[-33.42358398 479.31585693]
[-37.25388336 493.81857300]
[-41.08418274 508.32128906]
[-44.91448212 522.82403564]
[-43.11316681 539.68200684]
[-58.81367874 546.07965088]
[-69.30766296 532.76379395]
[-59.41719818 518.99371338]
[-55.58689880 504.49099731]
[-51.75659943 489.98828125]
[-47.92630005 475.48556519]
[-44.09600067 460.98284912]
[-40.26570129 446.48013306]
[-51.99213409 429.73251343]
[-47.46770477 409.49288940]
[-29.21549034 399.03997803]
[-26.22321320 384.34146118]
[-23.23093796 369.64294434]
[-34.23290253 355.00637817]
[-30.98069382 336.66238403]
[-15.08139515 326.35214233]
[-12.51199722 311.57385254]
[-9.94260025 296.79553223]
[-7.37320328 282.01724243]
[-20.94047356 288.41482544]
[-34.46572113 281.92886353]
[-37.97106934 267.34420776]
[-28.87053680 255.42025757]
[-13.87779713 254.95361328]
[-4.05344629 266.28808594]
[-0.43157798 251.73193359]
[3.19029045 237.17575073]
[6.81215906 222.61958313]
[2.37689567 208.40066528]
[13.21741962 196.87705994]
[16.73479080 182.29528809]
[20.14748383 167.68865967]
[23.56017494 153.08203125]
[26.97286797 138.47540283]
[30.38555908 123.86877441]
[33.79825211 109.26215363]
[24.01976776 97.88756561]
[9.06643009 99.06981659]
[-5.88690710 100.25205994]
[-20.84024429 101.43431091]
[-35.79357910 102.61656189]
[-47.26012039 113.83699036]
[-63.16354752 111.72499084]
[-71.30411530 97.90071106]
[-65.43707275 82.96895599]
[-50.06311798 78.38408661]
[-36.97583008 87.66322327]
[-22.02249336 86.48097229]
[-7.06915617 85.29872894]
[7.88418102 84.11647797]
[22.83751869 82.93422699]
[25.96647072 76.11809540]
[12.27688122 69.98660278]
[-1.41270661 63.85511398]
[-16.28156853 61.87599182]
[-19.15205002 47.15320969]
[-6.11567402 39.73344421]
[5.07682657 49.71826553]
[18.65060043 56.10205078]
[32.22437286 62.48583221]
[35.35332489 55.66969681]
[26.50176620 43.55978775]
[17.65020752 31.44988060]
[8.79864883 19.33996964]
[-0.05290972 7.23006105]
[-16.96784019 7.50752497]
[-30.57871437 -2.25664091]
[-35.63488388 -18.05183983]
[-30.33163834 -33.59025192]
[-39.35599899 -45.57194138]
[-48.38035965 -57.55363464]
[-57.40472031 -69.53532410]
[-66.42908478 -81.51701355]
[-75.45344543 -93.49870300]
[-84.47780609 -105.48039246]
[-93.50216675 -117.46208954]
[-109.12416840 -121.11347198]
[-115.87913513 -135.66510010]
[-108.58523560 -149.95420837]
[-92.83772278 -153.01942444]
[-80.71674347 -142.50935364]
[-81.52047729 -126.48645020]
[-72.49611664 -114.50475311]
[-63.47175217 -102.52306366]
[-54.44739151 -90.54137421]
[-45.42303085 -78.55968475]
[-36.39867020 -66.57799530]
[-27.37430954 -54.59630203]
[-18.34994698 -42.61461258]
[-5.08344507 -44.08238220]
[7.27566719 -38.76189804]
[15.45825291 -27.94410324]
[17.24265671 -14.38892078]
[12.05699921 -1.62149787]
[20.90855789 10.48841190]
[29.76011658 22.59832001]
[38.61167526 34.70822906]
[47.46323395 46.81813812]
[54.88619995 45.74593735]
[52.74204254 30.89997673]
[67.58803558 28.75606537]
[69.73212433 43.60153580]
[77.15509033 42.52933121]
[82.21793365 28.40957260]
[87.28077698 14.28981304]
[92.34362030 0.17005359]
[97.40646362 -13.94970608]
[102.46930695 -28.06946564]
[102.41944885 -37.19768143]
[107.70737457 -42.35457230]
[112.97223663 -56.40025330]
[118.23710632 -70.44593811]
[118.13483429 -87.39957428]
[134.39759827 -92.19108582]
[143.50384521 -77.89028931]
[132.28279114 -65.18106842]
[127.01792145 -51.13538742]
[121.75305176 -37.08970642]
[116.58906555 -23.00662231]
[111.52622223 -8.88686275]
[106.46337891 5.23289728]
[101.40053558 19.35265732]
[96.33769226 33.47241592]
[91.27484894 47.59217453]
[122.84035492 61.66646957]
[134.15336609 88.25868225]
[149.04199219 86.43419647]
[163.93063354 84.60971832]
[178.81925964 82.78524017]
[193.70788574 80.96075439]
[208.59651184 79.13627625]
[223.48513794 77.31179810]
[236.24174500 67.95339966]
[249.81562805 74.08521271]
[264.70425415 72.26072693]
[279.59289551 70.43624878]
[294.48150635 68.61177063]
[300.79046631 53.32511139]
[313.87377930 43.36445236]
[330.10171509 41.37411118]
[345.03182983 47.80350494]
[354.62496948 60.81011581]
[367.24603271 51.26969528]
[380.90646362 57.20616150]
[395.76739502 55.16829300]
[410.62832642 53.13042831]
[423.24935913 43.59000778]
[436.90982056 49.52647018]
[451.77072144 47.48860550]
[464.38839722 37.01357269]
[479.67291260 42.95628357]
[481.90087891 59.20338440]
[468.78033447 69.04125214]
[453.80859375 62.34953308]
[438.94766235 64.38739777]
[427.38958740 73.78205872]
[412.66616821 67.99135590]
[397.80526733 70.02922058]
[382.94433594 72.06708527]
[371.38623047 81.46174622]
[356.66284180 75.67104340]
[352.35079956 88.62622070]
[342.83276367 98.50795746]
[329.92446899 103.34906006]
[316.12387085 102.15180206]
[304.12808228 95.09295654]
[296.30599976 83.50039673]
[281.41735840 85.32487488]
[266.52874756 87.14936066]
[251.64010620 88.97383881]
[239.94844055 98.20173645]
[225.30963135 92.20042419]
[210.42098999 94.02490234]
[195.53236389 95.84938812]
[180.64373779 97.67386627]
[165.75511169 99.49834442]
[150.86648560 101.32283020]
[135.97784424 103.14730835]
[131.46095276 123.91408539]
[115.04599762 140.19718933]
[90.59143066 145.35807800]
[65.48317719 135.79528809]
[48.40487671 112.67484283]
[44.99218750 127.28147125]
[41.57949448 141.88809204]
[38.16680145 156.49472046]
[34.75410843 171.10134888]
[31.34141731 185.70797729]
[32.43621445 194.77043152]
[27.77359009 200.49893188]
[31.94979286 215.75900269]
[21.36832809 226.24145508]
[17.74645996 240.79762268]
[14.12459183 255.35379028]
[10.50272274 269.90997314]
[7.40509844 284.58663940]
[4.83570099 299.36492920]
[2.26630402 314.14324951]
[-0.30309317 328.92153931]
[8.29598713 337.12057495]
[11.83594227 348.33679199]
[9.54839516 359.75158691]
[2.11445403 368.55453491]
[-8.53242493 372.63522339]
[-11.52470112 387.33374023]
[-14.51697731 402.03225708]
[-7.06095648 408.21926880]
[-2.39550591 416.64462280]
[-1.12349010 426.13272095]
[-3.37759066 435.37698364]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[7 11]
[19 214]
[20 213]
[21 212]
[24 207]
[25 206]
[26 205]
[27 204]
[33 203]
[34 202]
[35 201]
[36 200]
[38 198]
[39 196]
[40 195]
[41 194]
[42 193]
[43 192]
[44 191]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[69 106]
[70 105]
[71 104]
[72 103]
[73 102]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[111 132]
[112 131]
[113 130]
[114 129]
[115 128]
[116 127]
[118 126]
[119 125]
[120 124]
[134 186]
[135 185]
[136 184]
[137 183]
[138 182]
[139 181]
[140 180]
[142 178]
[143 177]
[144 176]
[145 175]
[150 169]
[152 167]
[153 166]
[154 165]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
