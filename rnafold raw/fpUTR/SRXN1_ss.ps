%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCACCUGGCGAGCGGAGCCGGAGUCGGGCUGGGGACCGCGGGGUCGAGGCCGGACCGCGGCGGGGUCGGGGGAGAAACGCGCGCUGCCCUGGCACGGGCCCCCCCCCCCGGCCGCGCGGAAUGGUAUGGCCCGGCCGGAGUUAAGGCCGGGGGGAGGCGGCGAGUCCCGCGGCGGCGGCGACG\
) } def
/len { sequence length } bind def

/coor [
[35.78019714 162.03878784]
[24.14400291 163.28759766]
[12.64386845 161.22454834]
[2.20191598 156.02603149]
[-6.34766531 148.11946106]
[-12.32526684 138.14808655]
[-26.96512222 141.41528320]
[-41.60497665 144.68247986]
[-49.17673111 155.14193726]
[-61.45360565 157.55279541]
[-71.73670197 151.15621948]
[-86.42964935 154.17570496]
[-101.12259674 157.19517517]
[-113.08277130 167.55204773]
[-127.10702515 162.53511047]
[-133.18321228 174.57037354]
[-144.91374207 180.81129456]
[-157.90359497 179.17379761]
[-167.43052673 170.47930908]
[-182.17237854 173.25019836]
[-196.91423035 176.02108765]
[-211.65608215 178.79197693]
[-220.58509827 191.55561829]
[-235.57490540 194.15568542]
[-247.68804932 185.56457520]
[-262.42990112 188.33546448]
[-277.17175293 191.10636902]
[-289.30514526 201.25975037]
[-303.24267578 196.00666809]
[-317.98452759 198.77755737]
[-332.72637939 201.54844666]
[-347.46823120 204.31935120]
[-353.74679565 216.25025940]
[-365.58108521 222.29217529]
[-378.54141235 220.43551636]
[-387.92013550 211.58135986]
[-402.70669556 214.10287476]
[-417.49325562 216.62438965]
[-432.27978516 219.14590454]
[-444.54907227 230.02691650]
[-460.01928711 224.58592224]
[-462.77600098 208.42013550]
[-449.98333740 198.15954590]
[-434.80130005 204.35935974]
[-420.01473999 201.83784485]
[-405.22821045 199.31632996]
[-390.44165039 196.79481506]
[-381.32397461 182.67478943]
[-364.48568726 179.44392395]
[-350.23910522 189.57749939]
[-335.49725342 186.80661011]
[-320.75540161 184.03570557]
[-306.01354980 181.26481628]
[-294.93460083 171.30961609]
[-279.94265747 176.36451721]
[-265.20080566 173.59362793]
[-250.45895386 170.82272339]
[-242.29187012 158.41972351]
[-227.38101196 155.39964294]
[-214.42697144 164.05012512]
[-199.68511963 161.27923584]
[-184.94326782 158.50834656]
[-170.20141602 155.73745728]
[-161.32351685 141.46545410]
[-144.54219055 137.95065308]
[-130.12651062 147.84216309]
[-119.21726990 137.70126343]
[-104.14207458 142.50222778]
[-89.44912720 139.48275757]
[-74.75617981 136.46327209]
[-62.29662323 124.11823273]
[-44.87218094 130.04263306]
[-30.23232651 126.77542877]
[-15.59247017 123.50822449]
[-12.22742748 105.44755554]
[-1.28910649 90.62416840]
[15.06586266 82.03531647]
[33.58017349 81.44162750]
[50.54456711 89.00639343]
[62.54093933 103.25393677]
[76.92682648 99.00585175]
[91.31271362 94.75777435]
[97.55286407 89.62549591]
[105.97754669 90.56163025]
[120.43312836 86.55712891]
[134.88871765 82.55261993]
[149.34429932 78.54811096]
[163.79988098 74.54360962]
[178.25546265 70.53910065]
[192.71104431 66.53459167]
[203.94474792 55.39392090]
[218.27569580 59.45264053]
[232.73127747 55.44813156]
[247.18687439 51.44362640]
[258.42056274 40.30295563]
[272.75152588 44.36167145]
[287.20709229 40.35716629]
[295.02767944 26.88584518]
[309.74472046 23.03063011]
[322.53936768 30.56936646]
[336.99496460 26.56485939]
[351.45056152 22.56035423]
[365.87179565 18.43391228]
[380.25769043 14.18582916]
[391.30163574 2.85701513]
[405.69909668 6.67311096]
[420.08496094 2.42502832]
[434.47085571 -1.82305419]
[448.85675049 -6.07113695]
[463.24264526 -10.31921959]
[477.62854004 -14.56730175]
[492.01440430 -18.81538391]
[506.40029907 -23.06346703]
[520.78619385 -27.31155014]
[535.17205811 -31.55963326]
[549.44573975 -36.17078400]
[563.59802246 -41.14204788]
[575.25134277 -55.38665390]
[592.35516357 -51.50076675]
[606.42144775 -56.71034622]
[620.48773193 -61.91992569]
[624.77685547 -76.71552277]
[636.81494141 -86.03956604]
[651.85711670 -86.48204041]
[664.12866211 -78.08274078]
[678.19494629 -83.29232025]
[692.26123047 -88.50189972]
[705.01446533 -99.67288208]
[719.27935791 -90.51046753]
[714.42388916 -74.26666260]
[697.47076416 -74.43561554]
[683.40447998 -69.22603607]
[669.33819580 -64.01646423]
[665.49816895 -49.65010452]
[653.79656982 -40.18775177]
[638.58917236 -39.42116547]
[625.69732666 -47.85364151]
[611.63104248 -42.64406204]
[597.56475830 -37.43448639]
[592.22161865 -26.56668663]
[580.52764893 -22.11861420]
[568.56927490 -26.98978615]
[554.41699219 -22.01852226]
[552.56683350 -18.99279785]
[549.14837646 -16.72148132]
[544.53631592 -15.93673134]
[539.42016602 -17.17374420]
[525.03430176 -12.92566109]
[510.64837646 -8.67757893]
[496.26251221 -4.42949581]
[481.87661743 -0.18141332]
[467.49072266 4.06666946]
[453.10482788 8.31475163]
[438.71893311 12.56283474]
[424.33303833 16.81091690]
[409.94717407 21.05900002]
[399.93218994 32.08396149]
[384.50576782 28.57171822]
[370.11987305 32.81980133]
[364.58319092 37.74023056]
[355.45504761 37.01593781]
[340.99948120 41.02044296]
[326.54388428 45.02495193]
[319.45211792 58.07265091]
[304.84915161 62.33971405]
[291.21160889 54.81274796]
[276.75601196 58.81725693]
[266.55627441 69.67150116]
[251.19137573 65.89920807]
[236.73579407 69.90371704]
[222.28021240 73.90822601]
[212.08045959 84.76246643]
[196.71556091 80.99018097]
[182.25997925 84.99468231]
[167.80438232 88.99919128]
[153.34880066 93.00370026]
[138.89321899 97.00820160]
[124.43763733 101.01271057]
[109.98204803 105.01721954]
[95.56079865 109.14366150]
[81.17491150 113.39173889]
[66.78902435 117.63982391]
[66.29605865 129.42900085]
[62.52104568 140.58793640]
[55.77756500 150.22351074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 74]
[7 73]
[8 72]
[11 70]
[12 69]
[13 68]
[15 66]
[19 63]
[20 62]
[21 61]
[22 60]
[25 57]
[26 56]
[27 55]
[29 53]
[30 52]
[31 51]
[32 50]
[36 47]
[37 46]
[38 45]
[39 44]
[80 182]
[81 181]
[82 180]
[84 179]
[85 178]
[86 177]
[87 176]
[88 175]
[89 174]
[90 173]
[92 171]
[93 170]
[94 169]
[96 167]
[97 166]
[100 163]
[101 162]
[102 161]
[103 159]
[104 158]
[106 156]
[107 155]
[108 154]
[109 153]
[110 152]
[111 151]
[112 150]
[113 149]
[114 148]
[115 147]
[116 143]
[117 142]
[119 139]
[120 138]
[121 137]
[125 133]
[126 132]
[127 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
