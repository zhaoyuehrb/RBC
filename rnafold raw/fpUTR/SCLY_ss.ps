%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUGGCUGGGGUGCUUCGCUCAGCCAAUCCGGACGCGCCCGGGCGUCGCGGCCCCGCCUCCUCCCCGGCGCUCUGGGCCCGUAGCGCUCCGCGGGAAGGAGGCUGG\
) } def
/len { sequence length } bind def

/coor [
[78.00836945 117.00624084]
[66.24213409 126.30977631]
[54.47589874 135.61331177]
[42.70966339 144.91683960]
[30.94342804 154.22036743]
[19.17719460 163.52391052]
[7.41095877 172.82743835]
[-4.35527611 182.13096619]
[-16.12151146 191.43449402]
[-27.88774681 200.73803711]
[-39.65398026 210.04156494]
[-38.88770294 225.53970337]
[-47.40551376 238.50993347]
[-61.93213654 243.96490479]
[-76.88179016 239.80709839]
[-86.50603485 227.63525391]
[-87.10414124 212.12971497]
[-78.44612885 199.25265503]
[-63.86118698 193.95559692]
[-48.95751190 198.27532959]
[-37.19128036 188.97180176]
[-25.42504311 179.66825867]
[-13.65880871 170.36473083]
[-1.89257371 161.06120300]
[9.87366104 151.75767517]
[21.63989639 142.45413208]
[33.40613174 133.15060425]
[45.17236710 123.84706879]
[56.93860245 114.54354095]
[68.70483398 105.24000549]
[69.79470825 90.27965546]
[59.50107956 79.36904907]
[49.04986191 68.60930634]
[38.44326019 58.00270462]
[27.83665848 47.39610291]
[17.23005676 36.78950119]
[6.62345552 26.18289948]
[-9.17884541 26.43353271]
[-20.47169304 15.37699032]
[-20.55524063 -0.42707795]
[-9.37992096 -11.60239792]
[6.42414713 -11.51885033]
[17.48069000 -0.22600292]
[17.23005676 15.57629871]
[27.83665848 26.18289948]
[38.44326019 36.78950119]
[49.04986191 47.39610291]
[59.65646362 58.00270462]
[66.72071075 60.54620361]
[70.41168213 69.07542419]
[80.70530701 79.98603058]
[96.92770386 74.75357819]
[111.55877686 80.04000854]
[119.06493378 91.94209290]
[134.05859375 91.50582123]
[147.62788391 83.37042236]
[160.57481384 90.73427582]
[175.56846619 90.29800415]
[190.56211853 89.86174011]
[205.55577087 89.42546844]
[220.54942322 88.98919678]
[235.54309082 88.55292511]
[250.53674316 88.11665344]
[265.52246094 87.46236420]
[280.49707031 86.59018707]
[295.47171021 85.71801758]
[310.43206787 84.62815094]
[325.37496948 83.32081604]
[340.31790161 82.01347351]
[353.39120483 73.10285187]
[366.74441528 79.70145416]
[381.68731689 78.39411926]
[394.76062012 69.48349762]
[408.11383057 76.08209991]
[423.05673218 74.77476501]
[437.99966431 73.46743011]
[447.96517944 61.20106125]
[463.69390869 59.65724564]
[475.85421753 69.75190735]
[477.23165894 85.49605560]
[467.00900269 97.54896545]
[451.25115967 98.75987244]
[439.30700684 88.41034698]
[424.36407471 89.71768951]
[409.42114258 91.02502441]
[397.41665649 99.84213257]
[382.99465942 93.33704376]
[368.05172729 94.64437866]
[356.04724121 103.46148682]
[341.62524414 96.95639801]
[326.68231201 98.26373291]
[311.73941040 99.57106781]
[305.25015259 103.34766388]
[296.34387207 100.69264221]
[281.36926270 101.56481171]
[266.39462280 102.43698883]
[259.79827881 106.02324677]
[250.97300720 103.11030579]
[235.97935486 103.54657745]
[220.98570251 103.98284912]
[205.99205017 104.41912079]
[190.99839783 104.85539246]
[176.00474548 105.29166412]
[161.01107788 105.72793579]
[148.51423645 113.83213043]
[134.49485779 106.49947357]
[119.50120544 106.93574524]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[3 28]
[4 27]
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[31 51]
[32 50]
[33 48]
[34 47]
[35 46]
[36 45]
[37 44]
[54 107]
[55 106]
[57 104]
[58 103]
[59 102]
[60 101]
[61 100]
[62 99]
[63 98]
[64 96]
[65 95]
[66 94]
[67 92]
[68 91]
[69 90]
[71 88]
[72 87]
[74 85]
[75 84]
[76 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
