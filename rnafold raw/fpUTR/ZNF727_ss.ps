%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGAAGAGGCGGGCUCUUCAAUAUGGCAAGGCCUUCGUCUCCUAGCUUCUAGGCUCUGAGUCCAGUACCCGUCUGUACUAUUCCAUCUCUUCCGCUCCAUUAGCUCCUCGGUGACUCCACCAUAGCCCCUGUUAUCCUGUGACCUGCAGGUACUGGGAGAUCCAUAGGGAAGAAGGCGGAACAUCCGGAGGCUGGGAA\
) } def
/len { sequence length } bind def

/coor [
[-6.70696688 264.04873657]
[-10.15827084 264.80682373]
[-19.49751854 276.54473877]
[-22.03508759 292.16110229]
[-36.01394653 297.30316162]
[-45.35319519 309.04107666]
[-54.69244385 320.77899170]
[-64.03169250 332.51687622]
[-66.92935181 341.18826294]
[-73.60977936 344.36376953]
[-76.39111328 359.93856812]
[-90.44863129 364.86154175]
[-89.09738159 380.37963867]
[-98.91870880 391.99844360]
[-113.72119141 393.19100952]
[-123.24275208 404.78152466]
[-126.27558136 413.40655518]
[-133.00483704 416.47723389]
[-129.19871521 431.52029419]
[-134.99281311 445.91500854]
[-148.15919495 454.12634277]
[-163.63510132 452.99685669]
[-175.46975708 442.96087646]
[-179.11245728 427.87744141]
[-173.16253662 413.54641724]
[-159.90785217 405.47839355]
[-144.44511414 406.77569580]
[-134.83326721 395.25994873]
[-125.31169891 383.66943359]
[-127.01544952 368.91705322]
[-117.52434540 357.02700806]
[-102.03913879 355.33996582]
[-99.93885040 340.59417725]
[-85.20028687 334.84219360]
[-75.76959991 323.17764282]
[-66.43035126 311.43972778]
[-57.09109879 299.70181274]
[-47.75185013 287.96392822]
[-45.88228607 273.18710327]
[-31.23542595 267.20547485]
[-21.89617729 255.46757507]
[-12.83466148 243.51396179]
[-4.05586004 231.35119629]
[4.72294140 219.18844604]
[13.50174236 207.02568054]
[22.28054428 194.86293030]
[31.05934525 182.70018005]
[39.83814621 170.53741455]
[48.61694717 158.37466431]
[57.39574814 146.21189880]
[66.17455292 134.04914856]
[74.95335388 121.88639069]
[65.36739349 117.71212006]
[56.60958862 110.03761292]
[42.16720581 105.98575592]
[27.72482109 101.93389130]
[13.28243828 97.88203430]
[-3.60114479 99.42507935]
[-9.75772476 83.62846375]
[3.71723628 73.33955383]
[17.33429718 83.43965149]
[31.77667999 87.49150848]
[46.21906281 91.54337311]
[60.66144562 95.59523010]
[64.25815582 89.01391602]
[75.04827118 69.26996613]
[63.83856583 59.30289459]
[52.62886047 49.33582306]
[41.41915512 39.36875153]
[30.20945168 29.40167999]
[14.44896698 30.57755280]
[2.52783823 20.20151138]
[1.51865959 4.42947578]
[12.02015877 -7.38128471]
[27.80198288 -8.22365570]
[39.50105286 2.40212727]
[40.17652512 18.19197464]
[51.38622665 28.15904808]
[62.59593201 38.12611771]
[73.80563354 48.09319305]
[85.01534271 58.06026459]
[108.59032440 62.06132507]
[123.59246063 76.55336761]
[136.34208679 68.65102386]
[149.09170532 60.74868393]
[161.84133911 52.84633636]
[169.49494934 38.99957657]
[184.38900757 38.87107086]
[197.13862610 30.96872711]
[209.88825989 23.06638336]
[222.57572937 15.06464386]
[235.20030212 6.96399832]
[247.82485962 -1.13664675]
[260.44943237 -9.23729229]
[273.07397461 -17.33793640]
[278.61230469 -24.61229706]
[285.95974731 -25.46474075]
[298.70938110 -33.36708450]
[295.99981689 -47.35380173]
[298.22384644 -61.39564514]
[305.09405518 -73.80818939]
[315.76690674 -83.10951233]
[328.94628906 -88.19712067]
[343.04086304 -88.47859192]
[356.35626221 -83.94048309]
[367.29879761 -75.14752197]
[380.17037964 -82.84963226]
[393.04196167 -90.55174255]
[405.91351318 -98.25386047]
[418.78509521 -105.95597076]
[416.47299194 -133.67582703]
[443.70947266 -156.03536987]
[451.31076050 -168.96675110]
[458.91204834 -181.89811707]
[466.51333618 -194.82949829]
[466.10034180 -211.22343445]
[480.23068237 -219.54605103]
[494.36825562 -211.23574829]
[493.96954346 -194.84144592]
[479.44470215 -187.22821045]
[471.84341431 -174.29682922]
[464.24212646 -161.36546326]
[456.64083862 -148.43408203]
[467.77230835 -138.37971497]
[479.86608887 -147.25329590]
[491.95986938 -156.12687683]
[504.05364990 -165.00045776]
[516.14746094 -173.87405396]
[522.24835205 -189.09611511]
[538.51763916 -191.15545654]
[548.21893311 -177.93360901]
[541.37231445 -163.03207397]
[525.02099609 -161.78027344]
[512.92724609 -152.90667725]
[500.83346558 -144.03309631]
[488.73968506 -135.15951538]
[476.64590454 -126.28593445]
[482.57513428 -112.50753784]
[497.33346558 -115.18918610]
[512.09179688 -117.87083435]
[526.85015869 -120.55248260]
[541.60852051 -123.23413849]
[551.88720703 -135.55194092]
[567.92242432 -135.05172729]
[577.41339111 -122.11721802]
[573.07940674 -106.67066193]
[558.24511719 -100.56134033]
[544.29016113 -108.47579193]
[529.53179932 -105.79414368]
[514.77349854 -103.11249542]
[500.01513672 -100.43083954]
[485.25677490 -97.74919128]
[473.89053345 -85.42836761]
[459.76870728 -79.23288727]
[445.68328857 -79.26517487]
[434.04757690 -84.49711609]
[426.48721313 -93.08439636]
[413.61563110 -85.38228607]
[400.74404907 -77.68016815]
[387.87249756 -69.97805786]
[375.00091553 -62.27594376]
[377.55572510 -46.64004898]
[373.90744019 -31.18298912]
[364.58563232 -18.27717972]
[350.99301147 -9.91509819]
[335.19433594 -7.40169525]
[319.60287476 -11.15083027]
[306.61172485 -20.61746025]
[293.86212158 -12.71511459]
[281.17462158 -4.71337605]
[268.55007935 3.38726926]
[255.92550659 11.48791409]
[243.30094910 19.58856010]
[230.67637634 27.68920517]
[226.74136353 33.95240021]
[217.79060364 35.81600952]
[205.04096985 43.71835327]
[192.29135132 51.62069702]
[185.54966736 64.90222931]
[169.74368286 65.59596252]
[156.99404907 73.49830627]
[144.24443054 81.40065002]
[131.49481201 89.30299377]
[133.21107483 101.83653259]
[130.12332153 114.10440826]
[122.67816925 124.33206177]
[111.95258331 131.04003906]
[99.49804688 133.25802612]
[87.11611176 130.66519165]
[78.33731079 142.82794189]
[69.55850983 154.99070740]
[60.77970505 167.15345764]
[52.00090408 179.31622314]
[43.22210312 191.47897339]
[34.44330215 203.64172363]
[25.66449928 215.80448914]
[16.88569832 227.96723938]
[8.10689640 240.13000488]
[-0.67190492 252.29275513]
[-1.20034707 257.50204468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[5 38]
[6 37]
[7 36]
[8 35]
[10 34]
[12 32]
[15 29]
[16 28]
[18 27]
[42 199]
[43 198]
[44 197]
[45 196]
[46 195]
[47 194]
[48 193]
[49 192]
[50 191]
[51 190]
[52 189]
[54 64]
[55 63]
[56 62]
[57 61]
[66 81]
[67 80]
[68 79]
[69 78]
[70 77]
[83 183]
[84 182]
[85 181]
[86 180]
[88 178]
[89 177]
[90 176]
[91 174]
[92 173]
[93 172]
[94 171]
[95 170]
[97 169]
[98 168]
[106 161]
[107 160]
[108 159]
[109 158]
[110 157]
[112 123]
[113 122]
[114 121]
[115 120]
[124 137]
[125 136]
[126 135]
[127 134]
[128 133]
[138 152]
[139 151]
[140 150]
[141 149]
[142 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
