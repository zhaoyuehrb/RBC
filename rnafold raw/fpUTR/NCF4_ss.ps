%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGAGGAGCCUCUGCCAGACUGGAGAGAAGCAGGCCUGAGCCUCCCCAAAGGCAGCUCCUGGGGACUCCCAGGACCACAGGCUGAGACGAGACGCAGGGUGGCUGGAGGAAGUGAGAGGUGAACUCAGCCUGGGACUGGCUGGGCGAGACUCUCCACCUGCUCCCUGGGACCAUCGCCCACC\
) } def
/len { sequence length } bind def

/coor [
[130.89422607 222.82612610]
[126.38026428 208.52142334]
[121.86630249 194.21673584]
[117.35234070 179.91204834]
[106.14366913 170.10313416]
[109.36941528 154.61425781]
[104.85546112 140.30957031]
[100.34149933 126.00487518]
[85.65367889 121.69224548]
[75.93619537 109.86425781]
[74.55569458 94.61876678]
[61.39884186 87.41479492]
[48.24198914 80.21082306]
[35.08513641 73.00685120]
[21.92828369 65.80287170]
[8.71073914 58.71087265]
[-4.56654596 51.73134995]
[-17.84383011 44.75183105]
[-31.12111473 37.77230835]
[-46.04487610 42.23538971]
[-59.41050720 34.96802139]
[-63.57340240 20.71299171]
[-76.85068512 13.73347092]
[-90.12796783 6.75395012]
[-100.70339966 18.27894974]
[-113.88703156 26.67593575]
[-128.78134155 31.38008118]
[-144.37414551 32.07772064]
[-159.60729980 28.72727013]
[-173.44860840 21.56164551]
[-184.96163940 11.07209110]
[-193.36921692 -2.02550387]
[-198.10577393 -16.83945274]
[-198.85545349 -32.36298370]
[-195.57310486 -47.54265594]
[-208.96699524 -54.29571152]
[-222.36088562 -61.04876709]
[-235.75477600 -67.80182648]
[-249.14866638 -74.55487823]
[-262.54254150 -81.30793762]
[-277.78689575 -69.56565857]
[-301.95843506 -75.60822296]
[-316.91464233 -76.75336456]
[-331.87088013 -77.89850616]
[-346.82711792 -79.04364777]
[-358.65829468 -68.56515503]
[-374.42831421 -69.60502625]
[-384.78115845 -81.54631805]
[-383.57461548 -97.30448914]
[-371.52450562 -107.53047943]
[-355.77996826 -106.15740204]
[-345.68197632 -93.99987030]
[-330.72573853 -92.85472870]
[-315.76950073 -91.70958710]
[-300.81329346 -90.56444550]
[-294.98464966 -104.38642120]
[-289.15652466 -118.20716095]
[-304.62777710 -121.51641083]
[-309.06994629 -135.73316956]
[-320.33001709 -145.64329529]
[-331.59011841 -155.55342102]
[-342.85018921 -165.46353149]
[-354.11029053 -175.37365723]
[-365.37036133 -185.28378296]
[-376.63043213 -195.19389343]
[-392.80654907 -197.88940430]
[-398.30606079 -213.33891296]
[-387.47155762 -225.64929199]
[-371.44863892 -222.15669250]
[-366.72033691 -206.45397949]
[-355.46023560 -196.54386902]
[-344.20016479 -186.63374329]
[-332.94006348 -176.72361755]
[-321.67999268 -166.81350708]
[-310.41989136 -156.90338135]
[-299.15982056 -146.99325562]
[-284.49395752 -144.39285278]
[-279.24639893 -129.46723938]
[-256.68878174 -115.20357513]
[-255.78948975 -94.70182800]
[-242.39559937 -87.94876862]
[-229.00170898 -81.19570923]
[-215.60783386 -74.44265747]
[-202.21394348 -67.68959808]
[-188.82005310 -60.93654251]
[-179.40980530 -71.84944916]
[-167.64855957 -80.19152069]
[-154.22065735 -85.47180939]
[-139.90873718 -87.37767029]
[-125.54815674 -85.79328156]
[-111.97818756 -80.80667114]
[-99.99301147 -72.70484161]
[-90.29521179 -61.95724487]
[-83.45459747 -49.18860245]
[-79.87473297 -35.14256287]
[-79.76911163 -20.63842773]
[-83.14844513 -6.52333450]
[-69.87116241 0.45618632]
[-56.59387970 7.43570709]
[-42.49133682 2.78234005]
[-28.92685509 9.67142677]
[-24.14159393 24.49502373]
[-10.86430931 31.47454453]
[2.41297507 38.45406723]
[15.69025993 45.43358612]
[23.09079552 45.76367950]
[29.13225746 52.64602280]
[42.28910828 59.84999466]
[55.44596100 67.05397034]
[68.60281372 74.25794220]
[81.75966644 81.46191406]
[96.65673065 74.20866394]
[112.91079712 77.42387390]
[123.92449951 89.80250549]
[132.13122559 85.73858643]
[139.10009766 88.25090027]
[154.03472900 86.85195160]
[168.96934509 85.45301056]
[183.90397644 84.05406952]
[198.83859253 82.65512085]
[204.21232605 68.41136932]
[215.19274902 57.95588684]
[229.56503296 53.32365417]
[244.46209717 55.38247299]
[256.93649292 63.67093277]
[264.54367065 76.50044250]
[279.47830200 75.10150146]
[294.41293335 73.70255280]
[309.34753418 72.30361176]
[324.28216553 70.90467072]
[339.21679688 69.50572205]
[354.15139771 68.10678101]
[362.89260864 55.14045334]
[377.93750000 50.87611389]
[392.18240356 57.32725143]
[398.90127563 71.44783783]
[394.92166138 86.57055664]
[382.12261963 95.55493164]
[366.54748535 94.15881348]
[355.55035400 83.04140472]
[340.61572266 84.44034576]
[325.68112183 85.83928680]
[310.74649048 87.23823547]
[295.81185913 88.63717651]
[280.87722778 90.03612518]
[265.94262695 91.43506622]
[260.85037231 105.45414734]
[250.13226318 115.91508484]
[235.87669373 120.70466614]
[220.89416504 118.82213593]
[208.16304016 110.58773804]
[200.23753357 97.58974457]
[185.30291748 98.98868561]
[170.36828613 100.38763428]
[155.43367004 101.78657532]
[140.49903870 103.18552399]
[125.57684326 104.71121979]
[121.79134369 114.19534302]
[114.64618683 121.49092102]
[119.16014862 135.79560852]
[123.67411041 150.10029602]
[135.20565796 160.93238831]
[131.65702820 175.39808655]
[136.17098999 189.70277405]
[140.68495178 204.00747681]
[145.19891357 218.31216431]
[160.66709900 231.21546936]
[155.72863770 249.89665222]
[160.72573853 264.03982544]
[165.72283936 278.18298340]
[170.71992493 292.32614136]
[185.42584229 297.64309692]
[193.22879028 311.19479370]
[190.44445801 326.58248901]
[178.38752747 336.54061890]
[162.75090027 336.36724854]
[150.91772461 326.14422607]
[148.47526550 310.69857788]
[156.57676697 297.32324219]
[151.57966614 283.18008423]
[146.58258057 269.03692627]
[141.58547974 254.89375305]
[131.98200989 251.32194519]
[125.81034088 242.86923218]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[6 161]
[7 160]
[8 159]
[11 111]
[12 110]
[13 109]
[14 108]
[15 107]
[16 105]
[17 104]
[18 103]
[19 102]
[22 99]
[23 98]
[24 97]
[35 85]
[36 84]
[37 83]
[38 82]
[39 81]
[40 80]
[42 55]
[43 54]
[44 53]
[45 52]
[57 78]
[59 76]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[65 70]
[114 157]
[116 156]
[117 155]
[118 154]
[119 153]
[120 152]
[126 146]
[127 145]
[128 144]
[129 143]
[130 142]
[131 141]
[132 140]
[168 182]
[169 181]
[170 180]
[171 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
