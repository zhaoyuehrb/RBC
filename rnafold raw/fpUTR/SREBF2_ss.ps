%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGCGGGGGAAUCCCGCCCCGCCCUUUCUGUGCGGCGCCCGGGCGCAACGCAAACAUGGCGGCGGGUGGCACCCGUCGGUGAGGCGGUGCCGGGCGGGGGUUGUCGGGUGUCAUGGGCGGUGGCGACGGCACCGCCCCCGCGUCUCCCUGAGCGGGACGGCAGGGGGGGCUUCUGCGCUGAGCCGGGCG\
) } def
/len { sequence length } bind def

/coor [
[10.40332985 328.39962769]
[8.10591793 330.61553955]
[5.51873827 331.73159790]
[-0.64173520 345.40817261]
[-6.80220890 359.08474731]
[-12.96268272 372.76132202]
[-19.12315559 386.43786621]
[-25.28363037 400.11444092]
[-31.44410324 413.79101562]
[-37.60457611 427.46759033]
[-33.28779602 442.91897583]
[-42.79315567 455.84289551]
[-58.82895660 456.32522583]
[-69.09390259 443.99597168]
[-65.71360779 428.31307983]
[-51.28114700 421.30712891]
[-45.12067413 407.63055420]
[-38.96020126 393.95397949]
[-32.79972458 380.27740479]
[-26.63925171 366.60083008]
[-20.47877884 352.92425537]
[-14.31830502 339.24771118]
[-8.15783119 325.57113647]
[-2.44578934 311.70129395]
[2.81176805 297.65286255]
[8.06932545 283.60443115]
[13.32688332 269.55603027]
[9.50184917 252.43557739]
[23.79384995 240.83547974]
[28.82204437 226.70335388]
[33.85023880 212.57121277]
[30.82694817 197.98666382]
[42.74258423 187.57858276]
[47.77077866 173.44644165]
[52.79897690 159.31431580]
[57.82717133 145.18217468]
[62.85536575 131.05004883]
[67.88356018 116.91790771]
[63.78552628 102.48855591]
[52.07983017 93.10896301]
[40.37413788 83.72937012]
[28.66844559 74.34977722]
[16.96275330 64.97018433]
[5.25706053 55.59059525]
[-6.44863224 46.21100235]
[-15.11660957 43.28049088]
[-18.26688957 36.58222961]
[-29.81835938 27.01334572]
[-41.36983109 17.44446182]
[-47.83709717 15.95764065]
[-51.95490265 12.01327038]
[-53.13494492 7.37123966]
[-64.36882782 -2.56856894]
[-75.60271454 -12.50837803]
[-88.87194824 -10.14473152]
[-100.90209198 -15.77722073]
[-107.39127350 -27.14407539]
[-106.16243744 -39.97943497]
[-117.23304749 -50.10078049]
[-128.30364990 -60.22212601]
[-134.69062805 -62.02286530]
[-138.61099243 -66.16353607]
[-139.56303406 -70.85763550]
[-150.29832458 -81.33396149]
[-161.03363037 -91.81028748]
[-171.76892090 -102.28661346]
[-182.50421143 -112.76294708]
[-193.23951721 -123.23927307]
[-203.97480774 -133.71559143]
[-214.71009827 -144.19192505]
[-230.26885986 -150.92703247]
[-228.10403442 -167.74220276]
[-211.34674072 -170.31689453]
[-204.23377991 -154.92721558]
[-193.49848938 -144.45089722]
[-182.76318359 -133.97456360]
[-172.02789307 -123.49823761]
[-161.29258728 -113.02191162]
[-150.55729675 -102.54558563]
[-139.82200623 -92.06925964]
[-129.08670044 -81.59293365]
[-118.18231201 -71.29273224]
[-107.11170197 -61.17138672]
[-96.04109192 -51.05004120]
[-79.29483032 -52.52372360]
[-66.40557861 -41.21264648]
[-65.66291046 -23.74226379]
[-54.42902374 -13.80245495]
[-43.19513702 -3.86264658]
[-31.80094719 5.89299154]
[-20.24947739 15.46187496]
[-8.69800663 25.03075790]
[2.93096042 34.50531006]
[14.63665295 43.88490295]
[26.34234619 53.26449585]
[38.04803848 62.64408875]
[49.75373077 72.02368164]
[61.45942307 81.40327454]
[73.16511536 90.78286743]
[82.97805786 76.33657074]
[99.78379059 70.07509613]
[117.56622314 74.82022858]
[127.59713745 63.66761017]
[137.62803650 52.51499176]
[141.04736328 44.02794266]
[147.91413879 41.26418304]
[158.12524414 30.27631569]
[168.33636475 19.28844833]
[178.54747009 8.30058193]
[178.85823059 -4.60376501]
[187.60202026 -13.54651928]
[199.69499207 -14.10914993]
[210.08360291 -24.92935562]
[220.47221375 -35.74956131]
[230.86082458 -46.56976318]
[241.24942017 -57.38996887]
[251.63803101 -68.21017456]
[252.75051880 -84.21460724]
[266.03817749 -93.20446014]
[281.30786133 -88.28348541]
[286.84600830 -73.22663116]
[278.40417480 -59.58423233]
[262.45825195 -57.82156754]
[252.06962585 -47.00136185]
[241.68103027 -36.18115616]
[231.29241943 -25.36095238]
[220.90380859 -14.54074764]
[210.51519775 -3.72054267]
[207.25154114 13.51572895]
[189.53533936 18.51169395]
[179.32423401 29.49955940]
[169.11311340 40.48742676]
[158.90200806 51.47529221]
[148.78065491 62.54590225]
[138.74975586 73.69851685]
[128.71884155 84.85113525]
[132.46337891 99.37622833]
[146.63597107 104.28924561]
[160.80856323 109.20225525]
[174.98115540 114.11526489]
[189.15374756 119.02827454]
[203.32632446 123.94128418]
[218.89950562 121.15081024]
[228.39050293 132.62992859]
[242.60261536 137.42742920]
[256.85330200 142.10910034]
[271.10397339 146.79077148]
[285.39230347 151.35630798]
[299.71728516 155.80540466]
[314.04229736 160.25450134]
[328.36727905 164.70359802]
[343.17794800 158.53727722]
[357.16323853 166.39802551]
[359.59481812 182.25573730]
[348.60739136 193.94573975]
[332.62957764 192.50045776]
[323.91818237 179.02859497]
[309.59320068 174.57949829]
[295.26818848 170.13040161]
[280.94320679 165.68130493]
[273.61172485 166.70132446]
[266.42230225 161.04145813]
[252.17161560 156.35978699]
[237.92094421 151.67811584]
[230.57383728 152.57865906]
[223.47749329 146.80252075]
[208.91802979 149.94441223]
[198.41331482 138.11387634]
[184.24072266 133.20086670]
[170.06814575 128.28785706]
[155.89555359 123.37484741]
[141.72296143 118.46183014]
[127.55036926 113.54882050]
[114.70455170 126.06381989]
[97.48397064 129.04090881]
[82.01569366 121.94609833]
[76.98750305 136.07823181]
[71.95930481 150.21037292]
[66.93111420 164.34251404]
[61.90291595 178.47463989]
[56.87472153 192.60678101]
[59.53836060 208.20214844]
[47.98237610 217.59941101]
[42.95418167 231.73153687]
[37.92598343 245.86367798]
[42.74818039 257.83718872]
[38.25802231 269.51046753]
[27.37530327 274.81356812]
[22.11774445 288.86199951]
[16.86018753 302.91043091]
[11.60263062 316.95883179]
[12.47953987 321.24661255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 23]
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[24 191]
[25 190]
[26 189]
[27 188]
[29 185]
[30 184]
[31 183]
[33 181]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[39 99]
[40 98]
[41 97]
[42 96]
[43 95]
[44 94]
[45 93]
[47 92]
[48 91]
[49 90]
[52 89]
[53 88]
[54 87]
[58 84]
[59 83]
[60 82]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[102 136]
[103 135]
[104 134]
[106 133]
[107 132]
[108 131]
[109 130]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
[137 173]
[138 172]
[139 171]
[140 170]
[141 169]
[142 168]
[144 166]
[145 164]
[146 163]
[147 162]
[148 160]
[149 159]
[150 158]
[151 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
