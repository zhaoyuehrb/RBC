%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCACGUGAGGGCCGCGCUGGGUGCGCGGGGCUAGCUGCGCCUGCUGCGCUCCGCGGGCUCUCAGAGCGCUGGGCACCGGCCGGGCUGUGGUCCCCGCGCGCCGCCGUCGCCUCUCGAGCGGGCUCGGCUCACAGCGACCGGCGGCCGGGGAGAUGUGAGCUGGGGCCGGCGGGCGCGGCCGGACCGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[82.62158966 126.87857056]
[73.96364594 119.86598206]
[68.07063293 110.11186981]
[54.22402573 115.88002014]
[51.91823578 127.55899048]
[44.33382034 136.57843018]
[33.44751740 140.76760864]
[22.01100922 139.19181824]
[12.85556412 132.35810852]
[-1.16967952 137.67718506]
[-15.19492340 142.99626160]
[-29.22016716 148.31533813]
[-43.24541092 153.63439941]
[-57.27065277 158.95347595]
[-71.29589844 164.27255249]
[-85.32114410 169.59162903]
[-92.24667358 175.56863403]
[-99.61541748 174.88142395]
[-113.72452545 179.97386169]
[-127.83364105 185.06628418]
[-138.18740845 197.02915955]
[-152.78555298 194.07225037]
[-166.89466858 199.16468811]
[-181.00378418 204.25711060]
[-195.11289978 209.34954834]
[-209.22201538 214.44198608]
[-223.33113098 219.53442383]
[-237.39875793 224.74034119]
[-251.42401123 230.05941772]
[-265.44924927 235.37849426]
[-279.47448730 240.69757080]
[-293.49972534 246.01664734]
[-307.48168945 251.44851685]
[-321.41940308 256.99285889]
[-329.06213379 271.09844971]
[-344.88018799 273.77587891]
[-356.73931885 262.97125244]
[-355.54223633 246.97291565]
[-342.20718384 238.05345154]
[-326.96374512 243.05511475]
[-313.02600098 237.51078796]
[-307.96612549 232.11001587]
[-298.81881714 231.99139404]
[-284.79357910 226.67231750]
[-270.76831055 221.35325623]
[-256.74307251 216.03417969]
[-242.71783447 210.71510315]
[-237.57160950 205.39656067]
[-228.42356873 205.42530823]
[-214.31445312 200.33287048]
[-200.20533752 195.24043274]
[-186.09622192 190.14801025]
[-171.98710632 185.05557251]
[-157.87799072 179.96313477]
[-148.53340149 168.36451721]
[-132.92607117 170.95718384]
[-118.81696320 165.86474609]
[-104.70784760 160.77230835]
[-90.64021301 155.56637573]
[-76.61496735 150.24731445]
[-62.58972549 144.92823792]
[-48.56448364 139.60916138]
[-34.53924179 134.29008484]
[-20.51399612 128.97100830]
[-6.48875284 123.65193939]
[7.53649092 118.33287048]
[14.01925659 101.22332001]
[31.23948860 94.15198517]
[48.45587921 102.03340912]
[62.30248260 96.26526642]
[66.70731354 81.92658997]
[58.48712540 69.37953949]
[50.26694107 56.83248901]
[36.23225021 49.52919388]
[35.72956848 34.64307404]
[27.50938034 22.09602165]
[19.28919220 9.54897022]
[4.41184616 2.64994216]
[3.21760440 -13.70566368]
[16.93500137 -22.69260025]
[31.45275497 -15.06588078]
[31.83624458 1.32878256]
[40.05643082 13.87583447]
[48.27661896 26.42288589]
[61.72334671 32.82873154]
[62.81399155 48.61230087]
[71.03417969 61.15935516]
[79.25436401 73.70640564]
[106.44810486 70.16661072]
[124.47583008 87.34852600]
[139.17268372 84.34814453]
[153.86955261 81.34775543]
[168.56640625 78.34737396]
[183.26327515 75.34698486]
[197.96012878 72.34660339]
[212.65698242 69.34621429]
[227.30360413 66.10945129]
[241.89617920 62.63714981]
[256.48873901 59.16485214]
[271.08132935 55.69255066]
[285.67388916 52.22024918]
[300.26644897 48.74795151]
[307.90277100 43.71065521]
[315.12207031 45.33926392]
[329.76867676 42.10250092]
[344.41528320 38.86573792]
[359.06192017 35.62897491]
[373.70852661 32.39221191]
[388.35513306 29.15544891]
[384.60156250 18.46026421]
[387.73934937 5.02542925]
[396.55612183 -7.10982561]
[405.37289429 -19.24508095]
[414.09164429 -31.45096397]
[415.00308228 -47.82476044]
[429.75900269 -54.97982025]
[443.17977905 -45.55562973]
[441.45922852 -29.24698830]
[426.36737061 -22.83082771]
[425.09460449 -15.54037476]
[417.50814819 -10.42830181]
[408.69137573 1.70695305]
[399.87460327 13.84220791]
[406.63055420 27.23462486]
[420.49261475 19.60873985]
[433.15713501 27.44831085]
[448.15667725 27.56914139]
[463.15618896 27.68997002]
[478.15570068 27.81079865]
[493.15521240 27.93162727]
[508.15472412 28.05245781]
[523.15423584 28.17328644]
[538.15374756 28.29411507]
[553.15325928 28.41494560]
[568.15277100 28.53577423]
[583.15228271 28.65660286]
[597.01434326 21.03071785]
[609.67889404 28.87028885]
[621.91387939 16.37628365]
[639.06201172 16.58578682]
[650.52746582 28.88134766]
[665.52697754 28.76051903]
[680.52648926 28.63969040]
[695.52600098 28.51886177]
[711.31591797 22.34512901]
[721.61944580 35.80890656]
[711.53411865 49.43692780]
[695.64685059 43.51837540]
[680.64727783 43.63920212]
[665.64776611 43.76003265]
[650.64825439 43.88086319]
[642.97851562 54.24446869]
[630.55340576 58.35573196]
[617.84320068 54.49926758]
[609.55804443 43.86980057]
[596.76885986 51.50432968]
[583.03143311 43.65611649]
[568.03192139 43.53528595]
[553.03240967 43.41445923]
[538.03289795 43.29362869]
[523.03338623 43.17279816]
[508.03387451 43.05197144]
[493.03436279 42.93114090]
[478.03485107 42.81031036]
[463.03533936 42.68948364]
[448.03582764 42.56865311]
[433.03631592 42.44782639]
[420.24713135 50.08235168]
[406.50973511 42.23413849]
[391.59191895 43.80206680]
[376.94528198 47.03882980]
[362.29867554 50.27559280]
[347.65206909 53.51235580]
[333.00543213 56.74911880]
[318.35882568 59.98588181]
[303.73876953 63.34052277]
[289.14617920 66.81282043]
[274.55361938 70.28511810]
[259.96105957 73.75742340]
[245.36846924 77.22972107]
[230.77590942 80.70202637]
[227.54817200 84.23852539]
[222.05982971 85.77675629]
[215.65737915 84.04307556]
[200.96051025 87.04345703]
[186.26365662 90.04384613]
[171.56678772 93.04422760]
[156.86993408 96.04461670]
[142.17308044 99.04499817]
[127.47621155 102.04538727]
[125.84278870 111.52141571]
[120.95799255 120.09787750]
[113.25459290 126.66739655]
[103.53866577 130.31645203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 70]
[4 69]
[9 66]
[10 65]
[11 64]
[12 63]
[13 62]
[14 61]
[15 60]
[16 59]
[18 58]
[19 57]
[20 56]
[22 54]
[23 53]
[24 52]
[25 51]
[26 50]
[27 49]
[28 47]
[29 46]
[30 45]
[31 44]
[32 43]
[33 41]
[34 40]
[71 88]
[72 87]
[73 86]
[75 84]
[76 83]
[77 82]
[90 190]
[91 189]
[92 188]
[93 187]
[94 186]
[95 185]
[96 184]
[97 181]
[98 180]
[99 179]
[100 178]
[101 177]
[102 176]
[104 175]
[105 174]
[106 173]
[107 172]
[108 171]
[109 170]
[111 123]
[112 122]
[113 121]
[114 119]
[124 169]
[126 167]
[127 166]
[128 165]
[129 164]
[130 163]
[131 162]
[132 161]
[133 160]
[134 159]
[135 158]
[136 157]
[138 155]
[141 151]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
