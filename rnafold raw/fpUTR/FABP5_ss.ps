%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCGCCCAGCGCGGGCCGCCGUUAUAAAGCAGCCGCCGGCGCCGGGUGCCUCACAGCACGCUGCCACGCCGACGCAGACCCCUCUCUGCACGCCAGCCCGCCCGCACCCACC\
) } def
/len { sequence length } bind def

/coor [
[144.09840393 157.16864014]
[134.57740784 168.75961304]
[121.25949097 175.66127014]
[106.29955292 176.75689697]
[92.11821747 171.86918640]
[81.01009369 161.78903198]
[74.77255249 148.14743042]
[74.41486359 133.15170288]
[79.99489594 119.22821808]
[90.61193848 108.62847900]
[75.70298004 110.27860260]
[60.79402161 111.92872620]
[45.88505936 113.57884979]
[33.01981354 122.78731537]
[19.51861954 116.49708557]
[4.60965919 118.14720917]
[-10.29930115 119.79733276]
[-23.16454887 129.00579834]
[-36.66574097 122.71556854]
[-51.57470322 124.36569214]
[-64.43994904 133.57415771]
[-77.94113922 127.28392792]
[-92.85010529 128.93405151]
[-107.75906372 130.58416748]
[-120.64527893 140.72702026]
[-135.76982117 134.38824463]
[-137.57386780 118.08863068]
[-124.20156097 108.59582520]
[-109.40918732 115.67521667]
[-94.50022888 114.02509308]
[-79.59126282 112.37496948]
[-67.79240417 103.28452301]
[-53.22482300 109.45672607]
[-38.31586456 107.80661011]
[-26.51700592 98.71616364]
[-11.94942379 104.88836670]
[2.95953608 103.23824310]
[17.86849594 101.58811951]
[29.66735649 92.49768066]
[44.23493576 98.66988373]
[59.14389801 97.01976013]
[74.05285645 95.36963654]
[88.96181488 93.71951294]
[96.47845459 87.89363861]
[105.86132050 88.94078827]
[119.42668152 82.53914642]
[132.99203491 76.13749695]
[146.55740356 69.73584747]
[160.12275696 63.33420563]
[173.68811035 56.93255997]
[174.20169067 46.93215179]
[178.37202454 37.89270782]
[185.56172180 31.09199905]
[194.71008301 27.47343636]
[204.48947144 27.51536369]
[213.49798584 31.16826248]
[220.46038818 37.86808014]
[234.64765930 32.99758911]
[241.64010620 19.07841301]
[256.09738159 14.34114552]
[269.32409668 21.09315300]
[283.51135254 16.22266006]
[297.69860840 11.35216904]
[311.88586426 6.48167658]
[314.80020142 2.84049988]
[318.39123535 0.62815046]
[322.09515381 -0.12174248]
[325.40020752 0.42706168]
[327.91015625 1.95043743]
[342.54711914 -1.32977891]
[346.91064453 -12.56533909]
[356.10488892 -20.17109108]
[367.72164917 -22.30765533]
[378.79168701 -18.54859734]
[386.54357910 -9.95931149]
[401.33898926 -12.42823029]
[416.13439941 -14.89714909]
[430.92984009 -17.36606789]
[445.72525024 -19.83498764]
[454.70361328 -32.84130478]
[470.26397705 -35.60727692]
[483.17465210 -26.49189186]
[485.77597046 -10.90315342]
[476.52459717 1.91041958]
[460.90921021 4.34676123]
[448.19418335 -5.03956699]
[433.39874268 -2.57064843]
[418.60333252 -0.10172950]
[403.80792236 2.36718941]
[389.01248169 4.83610821]
[379.42440796 20.31103706]
[361.28872681 24.06482124]
[345.82733154 13.30716705]
[331.19036865 16.58738327]
[316.75634766 20.66893578]
[302.56909180 25.53942680]
[288.38183594 30.40991974]
[274.19458008 35.28041077]
[267.90402222 48.73271179]
[253.58549500 53.87418365]
[239.51814270 47.18484879]
[225.33088684 52.05533981]
[218.17747498 71.07177734]
[199.16543579 79.01163483]
[180.08975220 70.49791718]
[166.52439880 76.89955902]
[152.95904541 83.30120850]
[139.39369202 89.70285797]
[125.82833099 96.10449982]
[112.26296997 102.50614929]
[126.85628510 105.97532654]
[138.90199280 114.91405487]
[146.45103455 127.87599945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 43]
[11 42]
[12 41]
[13 40]
[15 38]
[16 37]
[17 36]
[19 34]
[20 33]
[22 31]
[23 30]
[24 29]
[45 110]
[46 109]
[47 108]
[48 107]
[49 106]
[50 105]
[57 102]
[58 101]
[61 98]
[62 97]
[63 96]
[64 95]
[69 94]
[70 93]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
