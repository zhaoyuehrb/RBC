%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAUCCAAUCAGGAACUCUGCAAGGGGGACAGGGGCAAUGUUCAACAACUCCGCGGGGUCUUCCUGUUUCGUGUCCGCUGCGUUUGGGUUCCGGUCUCCGCUUCUCCAGUGGCCCCGGUGGCUCCACCGCAGCGUCUGGCGCGCUGGGACCUGCACAGGCCGGAGAGAGCCGUAGGCAGGACCCCGGGACACCCUGGAAGCCAGGAA\
) } def
/len { sequence length } bind def

/coor [
[68.03530884 179.65783691]
[68.18968964 194.65704346]
[59.99977493 207.22387695]
[46.21532440 213.13902283]
[31.46446991 210.41647339]
[20.69981003 199.97032166]
[17.53557968 185.30786133]
[23.03417015 171.35202026]
[35.34947968 162.78845215]
[45.25043106 151.52030945]
[55.15138245 140.25216675]
[65.05233765 128.98400879]
[58.38762283 125.54430389]
[44.29648209 130.68626404]
[30.20533943 135.82823181]
[16.11419868 140.97018433]
[2.02305841 146.11215210]
[-11.98996449 151.46333313]
[-25.92176247 157.02255249]
[-39.85356140 162.58178711]
[-53.78535843 168.14100647]
[-67.71715546 173.70024109]
[-81.64895630 179.25946045]
[-95.58075714 184.81867981]
[-99.96657562 189.76602173]
[-105.37989807 191.49604797]
[-110.01104736 190.32920837]
[-124.10218811 195.47117615]
[-138.19332886 200.61312866]
[-152.28446960 205.75509644]
[-153.86888123 220.89613342]
[-161.83763123 233.79521179]
[-174.56457520 241.92201233]
[-189.49658203 243.70980835]
[-203.66560364 238.85714722]
[-214.27864075 228.37721252]
[-228.36978149 233.51918030]
[-242.46092224 238.66113281]
[-256.55206299 243.80310059]
[-269.35882568 254.91270447]
[-283.57952881 245.68186951]
[-278.64611816 229.46157837]
[-261.69403076 229.71195984]
[-247.60287476 224.56999207]
[-233.51173401 219.42803955]
[-219.42059326 214.28607178]
[-218.05146790 199.43377686]
[-210.33782959 186.59597778]
[-197.76371765 178.34657288]
[-182.79374695 176.36657715]
[-168.39012146 181.10180664]
[-157.42642212 191.66395569]
[-143.33528137 186.52198792]
[-129.24414062 181.38003540]
[-115.15300751 176.23806763]
[-101.13998413 170.88688660]
[-87.20818329 165.32766724]
[-73.27638245 159.76843262]
[-59.34458542 154.20921326]
[-45.41278839 148.64997864]
[-31.48098946 143.09075928]
[-17.54919052 137.53153992]
[-14.87458134 133.57482910]
[-9.68599701 131.25628662]
[-3.11890125 132.02101135]
[10.97223949 126.87904358]
[25.06338120 121.73708344]
[39.15452194 116.59512329]
[53.24566269 111.45316315]
[61.60667038 89.87808228]
[77.24098206 78.55081177]
[92.87945557 78.29608917]
[102.59400940 85.82482147]
[104.37648010 70.93110657]
[106.15894318 56.03739166]
[107.94140625 41.14367294]
[109.72387695 26.24995613]
[111.50634003 11.35623837]
[112.95575714 -3.57357025]
[114.07141113 -18.53202438]
[115.18705750 -33.49047852]
[116.30270386 -48.44892883]
[117.41835785 -63.40738297]
[118.53400421 -78.36583710]
[119.64965057 -93.32428741]
[111.83966064 -103.58912659]
[113.07683563 -116.02508545]
[122.15521240 -124.01943207]
[123.49344635 -138.95962524]
[124.83168030 -153.89981079]
[126.05866241 -168.84953308]
[127.17430878 -183.80799866]
[128.28996277 -198.76644897]
[129.29421997 -213.73278809]
[130.18702698 -228.70619202]
[131.07984924 -243.67959595]
[131.97267151 -258.65301514]
[121.93216705 -267.63092041]
[118.93935394 -280.56356812]
[123.86853790 -292.67907715]
[134.71260071 -299.63864136]
[135.82826233 -314.59710693]
[136.94390869 -329.55554199]
[138.05955505 -344.51400757]
[139.17520142 -359.47247314]
[129.83787537 -372.51831055]
[134.35423279 -387.91250610]
[149.25971985 -393.84597778]
[163.12011719 -385.76705933]
[165.30290222 -369.87319946]
[154.13365173 -358.35681152]
[153.01800537 -343.39834595]
[151.90235901 -328.43991089]
[150.78671265 -313.48144531]
[149.67106628 -298.52301025]
[161.18011475 -286.26004028]
[160.24053955 -269.13015747]
[146.94607544 -257.76019287]
[146.05325317 -242.78678894]
[145.16043091 -227.81338501]
[144.26762390 -212.83998108]
[147.00743103 -205.97592163]
[143.24841309 -197.65080261]
[142.13276672 -182.69233704]
[141.01710510 -167.73388672]
[143.65441895 -160.82980347]
[139.77186584 -152.56156921]
[138.43363953 -137.62138367]
[137.09539795 -122.68119812]
[145.32615662 -107.18211365]
[134.60810852 -92.20864105]
[133.49246216 -77.25019073]
[132.37681580 -62.29173660]
[131.26115417 -47.33328247]
[130.14550781 -32.37482834]
[129.02986145 -17.41637421]
[127.91421509 -2.45792150]
[129.92565918 0.43800899]
[130.63436890 4.45208120]
[129.53009033 8.96139050]
[126.40006256 13.13870430]
[124.61759186 28.03242111]
[122.83512878 42.92613983]
[121.05265808 57.81985474]
[119.27019501 72.71357727]
[117.48773193 87.60729218]
[125.62294769 100.20960236]
[139.92962646 104.71723175]
[154.23631287 109.22486115]
[168.54299927 113.73249054]
[182.84968567 118.24011993]
[200.72912598 113.83473206]
[212.07402039 127.22354126]
[226.44624329 131.51766968]
[240.81845093 135.81178284]
[255.19065857 140.10591125]
[269.56286621 144.40003967]
[282.86529541 133.95294189]
[299.60726929 133.49777222]
[313.18545532 143.01591492]
[318.36230469 158.59402466]
[332.79687500 162.67369080]
[347.23141479 166.75335693]
[361.69595337 170.72544861]
[376.24429321 163.96339417]
[390.53695679 171.25030518]
[393.60983276 186.99632263]
[383.10568237 199.12243652]
[367.08239746 198.32652283]
[357.83163452 185.21914673]
[350.55877686 186.53337097]
[343.15176392 181.18791199]
[328.71719360 177.10824585]
[314.28265381 173.02857971]
[304.60513306 182.22573853]
[291.54202271 185.46601868]
[278.47970581 181.79922485]
[268.85897827 172.08018494]
[265.26873779 158.77224731]
[250.89654541 154.47811890]
[236.52432251 150.18400574]
[222.15211487 145.88987732]
[207.77990723 141.59574890]
[196.99028015 147.06480408]
[184.98139954 143.60491943]
[178.34205627 132.54679871]
[164.03536987 128.03916931]
[149.72868347 123.53154755]
[135.42199707 119.02391815]
[121.11531830 114.51628876]
[115.71424103 119.71997833]
[128.95027161 126.77740479]
[126.32839966 141.54647827]
[111.47196198 143.61680603]
[104.91207886 130.12734985]
[99.51100159 135.33103943]
[103.48310089 149.79556274]
[107.45520020 164.26008606]
[111.42729187 178.72460938]
[115.39939117 193.18913269]
[125.42418671 206.86172485]
[115.06106567 220.27969360]
[99.29867554 214.03604126]
[100.93486786 197.16122437]
[96.96276855 182.69670105]
[92.99066925 168.23217773]
[89.01857758 153.76765442]
[85.04647827 139.30313110]
[78.38176727 135.86341858]
[74.93294525 150.46156311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 69]
[14 68]
[15 67]
[16 66]
[17 65]
[18 62]
[19 61]
[20 60]
[21 59]
[22 58]
[23 57]
[24 56]
[27 55]
[28 54]
[29 53]
[30 52]
[36 46]
[37 45]
[38 44]
[39 43]
[73 146]
[74 145]
[75 144]
[76 143]
[77 142]
[78 141]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[88 129]
[89 128]
[90 127]
[91 125]
[92 124]
[93 123]
[94 121]
[95 120]
[96 119]
[97 118]
[101 115]
[102 114]
[103 113]
[104 112]
[105 111]
[147 190]
[148 189]
[149 188]
[150 187]
[151 186]
[153 183]
[154 182]
[155 181]
[156 180]
[157 179]
[161 174]
[162 173]
[163 172]
[164 170]
[196 208]
[197 207]
[198 206]
[199 205]
[200 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
