%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGAAGCGUUCCGUGCGUGCAAGUGCUGCGAACCACGUGGGUCCCGGGCGCGUUUCGGGUGCUGGCGGCUGCAGCCGGAGUUCAAACCUAAGCAGCUGGAAGGGCCCUGUGGCUAGGUACCAUAGAGUCUCUACACAGGACUAAGUCAGCCUGGUGUGCAGGGGAGGCAGACACACAAACAGAAAAUUGGACUACAGUGCUAAGAUGCUGUAAGAAGAGGUUAACUAAAGGACAGGAAGAUGGGGCCAAGAG\
) } def
/len { sequence length } bind def

/coor [
[397.38055420 421.99426270]
[386.68682861 405.40097046]
[379.50656128 387.00811768]
[376.12829590 367.55044556]
[376.68869019 347.80554199]
[381.16696167 328.56283569]
[389.38565063 310.59204102]
[377.05712891 302.04760742]
[362.18914795 301.15707397]
[355.25418091 286.93676758]
[342.92565918 278.39233398]
[330.59713745 269.84790039]
[318.26861572 261.30343628]
[303.40066528 260.41290283]
[296.46566772 246.19261169]
[284.13714600 237.64817810]
[271.80862427 229.10372925]
[259.48010254 220.55928040]
[247.15158081 212.01483154]
[234.82305908 203.47038269]
[222.49453735 194.92594910]
[207.62657166 194.03541565]
[200.69158936 179.81512451]
[188.36306763 171.27067566]
[181.09544373 170.04701233]
[175.93579102 162.54353333]
[163.71389771 153.84725952]
[151.49200439 145.15098572]
[139.27009583 136.45471191]
[126.99465179 127.83418274]
[116.78505707 134.95303345]
[104.84594727 138.47038269]
[92.40752411 138.02377319]
[80.75141144 133.65925598]
[71.07865143 125.82651520]
[64.38591766 115.33264923]
[61.36280823 103.25892639]
[62.32082748 90.84941101]
[48.70451355 84.55688477]
[35.08819580 78.26435089]
[21.47187996 71.97182465]
[6.79545069 77.19103241]
[-6.92379093 70.61554718]
[-11.80906487 56.59164810]
[-25.42538071 50.29911804]
[-41.19836044 51.53348541]
[-49.50578690 39.17080307]
[-63.12210083 32.87827301]
[-78.89508057 34.11264038]
[-87.20250702 21.74995613]
[-100.81882477 15.45742702]
[-114.43514252 9.16489697]
[-128.05145264 2.87236714]
[-132.29815674 3.40678430]
[-136.11712646 2.65327215]
[-139.15946960 0.90036857]
[-141.20410156 -1.48042393]
[-142.17364502 -4.08287907]
[-155.46211243 -11.04108715]
[-168.75057983 -17.99929428]
[-182.03904724 -24.95750237]
[-197.85375977 -24.50467682]
[-205.53964233 -37.26306534]
[-218.82810974 -44.22127533]
[-233.74468994 -39.73425293]
[-247.12196350 -46.98016739]
[-251.30772400 -61.22849655]
[-264.59619141 -68.18670654]
[-277.88467407 -75.14491272]
[-291.17312622 -82.10311890]
[-304.46160889 -89.06133270]
[-317.75006104 -96.01953888]
[-331.03851318 -102.97774506]
[-342.88433838 -95.96077728]
[-356.54199219 -95.70815277]
[-368.44912720 -102.17897797]
[-375.55273438 -113.59259796]
[-376.09161377 -126.91721344]
[-389.29299927 -134.03924561]
[-403.22171021 -127.20032501]
[-418.50427246 -129.88777161]
[-429.26428223 -141.06820679]
[-431.36422729 -156.44253540]
[-423.99670410 -170.09899902]
[-409.99462891 -176.78642273]
[-394.74209595 -173.93333435]
[-384.10403442 -162.63682556]
[-382.17095947 -147.24063110]
[-368.96957397 -140.11860657]
[-354.39328003 -147.69630432]
[-338.00988770 -145.05627441]
[-326.31964111 -133.04492188]
[-324.08032227 -116.26621246]
[-310.79183960 -109.30800629]
[-297.50338745 -102.34979248]
[-284.21493530 -95.39158630]
[-270.92645264 -88.43338013]
[-257.63800049 -81.47517395]
[-244.34951782 -74.51696777]
[-230.25445557 -79.19295502]
[-216.67893982 -72.32563782]
[-211.86990356 -57.50974274]
[-198.58143616 -50.55153275]
[-183.71719360 -51.50205612]
[-175.08084106 -38.24596786]
[-161.79237366 -31.28776169]
[-148.50390625 -24.32955360]
[-135.21543884 -17.37134552]
[-121.75892639 -10.74394894]
[-108.14260864 -4.45141935]
[-94.52629089 1.84111035]
[-80.90998077 8.13364029]
[-66.11092377 6.44918728]
[-56.82957077 19.26195526]
[-43.21325684 25.55448532]
[-28.41420555 23.87003326]
[-19.13285065 36.68280029]
[-5.51653528 42.97533035]
[8.33003330 37.60800934]
[22.22855377 43.79555893]
[27.76441002 58.35550690]
[41.38072586 64.64803314]
[54.99704361 70.94056702]
[68.61335754 77.23309326]
[77.22682190 68.61791229]
[88.08833313 63.10060501]
[100.12570953 61.22581482]
[103.07480621 46.51857758]
[106.02390289 31.81134033]
[108.97299957 17.10410309]
[111.92209625 2.39686656]
[102.01240540 -9.69991207]
[102.24848938 -25.33571243]
[112.51888275 -37.12778854]
[127.97421265 -39.50828171]
[141.31695557 -31.35319901]
[146.24705505 -16.51311684]
[140.43669128 -1.99506986]
[126.62933350 5.34596300]
[123.68023682 20.05319977]
[120.73114014 34.76043701]
[117.78204346 49.46767426]
[114.83294678 64.17491150]
[130.90600586 76.58479309]
[138.50254822 95.41670227]
[135.53909302 115.50566101]
[144.34844971 117.81201935]
[147.96636963 124.23281097]
[160.18827820 132.92907715]
[172.41017151 141.62535095]
[184.63206482 150.32162476]
[196.90751648 158.94215393]
[209.23603821 167.48660278]
[224.98580933 168.98829651]
[231.03898621 182.59742737]
[243.36750793 191.14186096]
[255.69602966 199.68630981]
[268.02453613 208.23075867]
[280.35305786 216.77520752]
[292.68157959 225.31965637]
[305.01010132 233.86408997]
[320.75988770 235.36578369]
[326.81304932 248.97491455]
[339.14157104 257.51937866]
[351.47009277 266.06381226]
[363.79861450 274.60824585]
[379.54840088 276.10995483]
[385.60156250 289.71908569]
[397.93008423 298.26351929]
[405.20407104 290.25958252]
[413.30825806 283.09902954]
[422.14544678 276.86749268]
[431.60964966 271.63937378]
[441.58743286 267.47705078]
[451.95925903 264.43017578]
[462.60083008 262.53497314]
[473.38467407 261.81396484]
[484.18170166 262.27551270]
[494.86254883 263.91384888]
[505.29943848 266.70913696]
[515.36737061 270.62768555]
[524.94592285 275.62231445]
[533.92053223 281.63305664]
[542.18377686 288.58770752]
[549.63696289 296.40283203]
[556.19091797 304.98464966]
[561.76745605 314.23028564]
[566.29986572 324.02893066]
[569.73419189 334.26309204]
[572.02947998 344.81018066]
[573.15850830 355.54385376]
[573.10797119 366.33554077]
[571.87872314 377.05603027]
[569.48571777 387.57696533]
[565.95782471 397.77243042]
[561.33752441 407.52041626]
[555.68029785 416.70428467]
[549.05419922 425.21417236]
[559.59497070 435.88616943]
[574.79748535 440.26736450]
[578.23638916 454.75955200]
[588.77716064 465.43154907]
[599.31799316 476.10354614]
[614.56689453 473.91787720]
[628.02154541 481.04705811]
[634.62036133 494.57183838]
[632.02099609 509.21359253]
[647.22351074 513.59478760]
[650.66241455 528.08697510]
[661.20318604 538.75897217]
[671.74401855 549.43096924]
[682.28479004 560.10296631]
[695.45434570 555.01373291]
[709.52630615 555.32226562]
[722.38079834 560.94903564]
[732.09393311 571.01586914]
[737.22558594 583.98291016]
[737.03308105 597.88378906]
[731.57843018 610.62420654]
[741.98645020 621.42572021]
[757.93548584 623.15979004]
[766.40179443 636.78704834]
[760.89068604 651.85375977]
[745.62988281 656.80218506]
[732.32611084 647.83618164]
[731.18487549 631.83374023]
[720.77685547 621.03222656]
[705.68389893 626.31964111]
[689.73883057 624.48254395]
[676.14538574 615.83886719]
[667.65728760 602.07928467]
[666.02008057 585.93676758]
[671.61285400 570.64373779]
[661.07202148 559.97174072]
[650.53118896 549.29974365]
[639.99041748 538.62774658]
[625.54187012 535.00988770]
[621.34906006 519.75439453]
[606.67620850 522.17248535]
[593.23413086 515.40686035]
[586.27191162 501.86505127]
[588.64599609 486.64434814]
[578.10516357 475.97235107]
[567.56439209 465.30035400]
[553.11584473 461.68249512]
[548.92297363 446.42697144]
[538.38220215 435.75497437]
[522.16027832 446.94680786]
[504.03225708 454.68923950]
[484.72235107 458.67126465]
[465.00213623 458.73205566]
[445.66006470 454.86761475]
[427.46966553 447.23080444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 169]
[8 168]
[10 166]
[11 165]
[12 164]
[13 163]
[15 161]
[16 160]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[23 153]
[24 152]
[26 151]
[27 150]
[28 149]
[29 148]
[30 146]
[38 124]
[39 123]
[40 122]
[41 121]
[44 118]
[45 117]
[47 115]
[48 114]
[50 112]
[51 111]
[52 110]
[53 109]
[58 108]
[59 107]
[60 106]
[61 105]
[63 103]
[64 102]
[67 99]
[68 98]
[69 97]
[70 96]
[71 95]
[72 94]
[73 93]
[78 89]
[79 88]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[198 247]
[199 246]
[201 244]
[202 243]
[203 242]
[207 238]
[209 236]
[210 235]
[211 234]
[212 233]
[219 227]
[220 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
