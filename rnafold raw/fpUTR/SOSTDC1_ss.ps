%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAUCCCACCCCUUCUCUGUGUUUUCACUCUGAAGCUCUACACAACUUUACACCUGAAUGAACGCCAAACCUCUAUGGAUAUAUAAAGGGAAGCUUGAGGAGGAAUUUCACAGUUACAGUGCAGAAGCAGAAGCAAAAGAAUUAACCAGCUCUUCAGUCAAGCAAAUCCUCUACUCACC\
) } def
/len { sequence length } bind def

/coor [
[73.69791412 214.80294800]
[86.17917633 205.94424438]
[84.11437225 191.08703613]
[82.04957581 176.22982788]
[79.98477173 161.37261963]
[77.91996765 146.51541138]
[70.93055725 143.79545593]
[65.61967468 157.82379150]
[64.64548492 172.79212952]
[50.12871933 176.56881714]
[41.98343658 163.97300720]
[51.38325500 152.28363037]
[56.95174789 138.35552979]
[49.96233749 135.63557434]
[38.39804077 145.18894958]
[26.83374405 154.74232483]
[15.26944637 164.29570007]
[16.09486198 179.67831421]
[7.80117846 192.44813538]
[-6.25527096 197.82215881]
[-20.60900879 193.93524170]
[-32.17330551 203.48861694]
[-43.73760223 213.04199219]
[-48.95436478 228.58926392]
[-65.07859802 231.57940674]
[-75.52308655 218.93643188]
[-69.54342651 203.66633606]
[-53.29098129 201.47769165]
[-41.72668457 191.92431641]
[-30.16238594 182.37094116]
[-31.27036667 167.54156494]
[-23.33993721 154.75202942]
[-9.23429680 149.01754761]
[5.71606874 152.73139954]
[17.28036690 143.17802429]
[28.84466362 133.62464905]
[40.40896225 124.07127380]
[25.68020248 126.91092682]
[10.95144367 129.75057983]
[-3.77731538 132.59024048]
[-16.92601585 139.80908203]
[-31.84855843 141.33149719]
[-46.18413544 136.91661072]
[-57.66480255 127.26288605]
[-64.47426605 113.89759064]
[-65.53524780 98.93515778]
[-60.67989349 84.74271393]
[-50.67633820 73.56555939]
[-37.10718536 67.17195892]
[-22.11913109 66.57341766]
[-8.08334732 71.86461639]
[2.78150916 82.21113586]
[16.29224205 88.72727966]
[29.80297661 95.24341583]
[43.31370926 101.75955963]
[34.58092880 89.56372070]
[25.84814835 77.36787415]
[10.50872421 74.65866852]
[1.82617760 62.16595078]
[4.50352287 47.55884933]
[-4.22925711 35.36300659]
[-12.96203709 23.16716576]
[-26.72909927 24.09622765]
[-39.05675507 18.14255714]
[-46.76563644 6.96060419]
[-47.92663193 -6.46266413]
[-42.34264374 -18.60530472]
[-50.86361694 -30.95006180]
[-59.38458633 -43.29481888]
[-74.89980316 -43.53512955]
[-87.29038239 -52.87606430]
[-91.79190826 -67.72584534]
[-86.67343903 -82.37442780]
[-73.90313721 -91.18912506]
[-58.39144135 -90.78051758]
[-46.10291672 -81.30572510]
[-41.76275253 -66.40798187]
[-47.03982925 -51.81579208]
[-38.51885605 -39.47103500]
[-29.99788666 -27.12627602]
[-13.59453392 -27.26094246]
[-0.20351724 -17.50166321]
[4.79040241 -1.52813542]
[-0.76619589 14.43438625]
[7.96658421 26.63022804]
[16.69936371 38.82606888]
[31.39031601 40.99667740]
[40.42033005 53.24059296]
[38.04399109 68.63509369]
[46.77677155 80.83094025]
[55.50955200 93.02677917]
[70.50875092 70.43598175]
[94.13478851 61.96637344]
[116.20064545 68.74071503]
[128.59242249 85.78108978]
[143.21633911 82.44327545]
[157.84027100 79.10546112]
[172.46418762 75.76764679]
[187.08810425 72.42983246]
[201.71202087 69.09201813]
[214.89993286 56.25770950]
[231.45402527 62.04924774]
[246.01815796 58.45951080]
[260.58227539 54.86977768]
[275.14642334 51.28004074]
[289.71054077 47.69030762]
[291.38763428 32.64329147]
[298.09899902 19.10336685]
[309.01733398 8.69614410]
[322.81152344 2.66373849]
[337.80902100 1.71653664]
[352.19842529 5.94959784]
[364.24856567 14.83350277]
[372.51644897 27.28048325]
[387.08056641 23.69074821]
[401.64468384 20.10101318]
[416.20883179 16.51127815]
[420.56277466 1.84873140]
[431.59848022 -8.59685516]
[446.28329468 -12.09291649]
[460.65023804 -7.79795313]
[470.86956787 3.03861904]
[485.43368530 -0.55111599]
[499.99780273 -4.14085102]
[504.19378662 -18.91546822]
[515.22607422 -29.60114670]
[530.12707520 -33.32349777]
[544.88848877 -29.08122253]
[555.53955078 -18.01547432]
[559.21514893 -3.10288286]
[554.92663574 11.64513874]
[543.82757568 22.26144791]
[528.90350342 25.89030838]
[514.16900635 21.55557823]
[503.58755493 10.42327595]
[489.02340698 14.01301098]
[474.45928955 17.60274696]
[470.44653320 31.94720459]
[459.72122192 42.42686081]
[445.09375000 46.15562820]
[430.46783447 42.03506088]
[419.79855347 31.07540703]
[405.23443604 34.66514206]
[390.67031860 38.25487518]
[376.10617065 41.84461212]
[374.56973267 56.70814514]
[368.02844238 70.17442322]
[357.25442505 80.60971069]
[343.53463745 86.74067688]
[328.51708984 87.80973816]
[314.01290894 83.66860199]
[301.77795410 74.79852295]
[293.30026245 62.25443268]
[278.73614502 65.84416962]
[264.17202759 69.43390656]
[249.60789490 73.02363586]
[235.04376221 76.61337280]
[228.50692749 86.81089783]
[216.38276672 89.90986633]
[205.04983521 83.71593475]
[190.42591858 87.05374908]
[175.80200195 90.39156342]
[161.17808533 93.72937775]
[146.55415344 97.06719208]
[131.93023682 100.40500641]
[130.24851990 120.06735229]
[116.28401184 137.26405334]
[92.77717590 144.45060730]
[94.84197998 159.30781555]
[96.90677643 174.16502380]
[98.97158051 189.02223206]
[101.03638458 203.87944031]
[115.46028900 208.99896240]
[125.84435272 220.24305725]
[129.80238342 235.02793884]
[126.42485809 249.95613098]
[116.48790741 261.59725952]
[102.27497101 267.27624512]
[87.05207825 265.68814087]
[74.31733704 257.19784546]
[66.99709320 243.75639343]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 172]
[3 171]
[4 170]
[5 169]
[6 168]
[14 37]
[15 36]
[16 35]
[17 34]
[21 30]
[22 29]
[23 28]
[55 91]
[56 90]
[57 89]
[60 86]
[61 85]
[62 84]
[67 80]
[68 79]
[69 78]
[95 165]
[96 164]
[97 163]
[98 162]
[99 161]
[100 160]
[102 157]
[103 156]
[104 155]
[105 154]
[106 153]
[114 145]
[115 144]
[116 143]
[117 142]
[122 137]
[123 136]
[124 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
