%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGAAAGAGCUGUGGGGCCGGAGCGCCAACUCCAGCUGGAACCCAGAGACCCUGACACGCCGGAGGAGCCCGCCGGGGCGAGGAAAAAAGAGGGACAUCCCCCACGCAGCGGCUCUGCAAGUGCAAGUCCGGGUCCUCGAGGUGAAAACCGAGCGGCCCGCCUGCGCCCAACCACACUGUGACUCUCGAUCCGGCUUCCGGAGCAGCAGAGCGCACAGAAAGGAGGCGCCGAGACAGACAUCACC\
) } def
/len { sequence length } bind def

/coor [
[351.02774048 150.99926758]
[348.56866455 165.79632568]
[346.10961914 180.59338379]
[355.50442505 193.30216980]
[353.07849121 208.91915894]
[340.27108765 218.17907715]
[324.68063354 215.58818054]
[315.55664062 202.68357849]
[318.31222534 187.12138367]
[331.31256104 178.13433838]
[333.77160645 163.33728027]
[336.23068237 148.54020691]
[327.27612305 136.50625610]
[312.39630127 134.61119080]
[297.51651001 132.71611023]
[282.63668823 130.82102966]
[267.75689697 128.92594910]
[252.87707520 127.03086853]
[237.99726868 125.13578796]
[223.11746216 123.24070740]
[208.23765564 121.34563446]
[193.35784912 119.45055389]
[181.77343750 128.74232483]
[166.65618896 127.03240967]
[156.98867798 114.81861115]
[142.10887146 112.92353058]
[127.22906494 111.02845001]
[124.06332397 122.47068787]
[115.96993256 132.78739929]
[103.47297668 139.86497498]
[87.98413086 141.87210083]
[71.64808655 137.62110901]
[57.04606247 126.84796906]
[42.62480927 130.97441101]
[28.20355988 135.10084534]
[21.28442383 145.96726990]
[9.20636082 149.11621094]
[-1.43169463 143.38992310]
[-15.90405941 147.33335876]
[-30.37642479 151.27677917]
[-44.84878922 155.22021484]
[-48.90233994 171.26203918]
[-60.43176270 182.99841309]
[-76.21755219 187.28741455]
[-91.91941071 183.04803467]
[-103.26956940 171.53082275]
[-117.69081879 175.65725708]
[-132.11207581 179.78370667]
[-141.12365723 193.05664062]
[-157.12989807 194.14291382]
[-167.85215759 182.20924377]
[-165.06524658 166.41011047]
[-150.90704346 158.86524963]
[-136.23851013 165.36245728]
[-121.81726074 161.23600769]
[-107.39601135 157.10957336]
[-104.96983337 143.68284607]
[-96.96106720 132.55488586]
[-84.88382721 125.92695618]
[-71.06368256 125.14025879]
[-58.18992615 130.40489197]
[-48.79222107 140.74784851]
[-34.31985474 136.80441284]
[-19.84749031 132.86099243]
[-5.37512589 128.91755676]
[6.30732918 115.80844879]
[24.07711792 120.67960358]
[38.49837112 116.55316162]
[52.91962051 112.42671967]
[53.39458084 97.43424225]
[39.26343536 92.40325928]
[25.13228989 87.37228394]
[11.00114536 82.34130859]
[-5.02193356 85.83315277]
[-15.85585022 73.52224731]
[-10.35560036 58.07300186]
[5.82063055 55.37826920]
[16.03212357 68.21015930]
[30.16326714 73.24114227]
[44.29441452 78.27211761]
[58.42556000 83.30309296]
[62.94085693 77.31459808]
[50.96386719 68.28400421]
[38.98687363 59.25340652]
[27.00988388 50.22280884]
[15.03289318 41.19221115]
[3.05604148 32.16142654]
[12.08700848 20.18471527]
[24.06348991 29.21521950]
[36.04048157 38.24581528]
[48.01747131 47.27641296]
[59.99446487 56.30701065]
[71.97145081 65.33760834]
[76.48675537 59.34911346]
[67.76246643 47.14719772]
[59.03817368 34.94527817]
[43.40857697 32.60194016]
[34.08108902 19.84366798]
[36.58954239 4.23972034]
[49.44571686 -4.95235920]
[65.02227020 -2.27907157]
[74.07791138 10.67356873]
[71.24008942 26.22098923]
[79.96437836 38.42290497]
[88.68866730 50.62482452]
[122.82726288 67.13368988]
[129.12414551 96.14864349]
[144.00395203 98.04372406]
[158.88375854 99.93879700]
[171.30407715 90.53808594]
[186.36732483 92.67193604]
[195.25292969 104.57074738]
[210.13273621 106.46582031]
[225.01254272 108.36090088]
[239.89234924 110.25598145]
[254.77215576 112.15106201]
[269.65194702 114.04614258]
[284.53176880 115.94121552]
[299.41159058 117.83629608]
[314.29138184 119.73137665]
[329.17120361 121.62645721]
[351.73904419 102.62015533]
[372.42605591 116.83822632]
[387.41522217 116.26831055]
[402.40438843 115.69840240]
[410.83697510 112.25222778]
[417.58679199 115.21743011]
[431.18652344 107.13301086]
[444.10571289 114.54541779]
[459.10089111 114.16542816]
[474.09609985 113.78543091]
[487.21127319 106.50590515]
[495.46566772 93.98133087]
[503.72006226 81.45674896]
[511.97445679 68.93217468]
[520.22882080 56.40759659]
[528.48321533 43.88301849]
[536.65814209 31.30640984]
[544.75323486 18.67827797]
[552.84826660 6.05014324]
[553.53216553 -0.48654839]
[556.89697266 -5.02855968]
[561.31182861 -6.79174089]
[569.72418213 -19.21075249]
[578.13653564 -31.62976265]
[578.77239990 -48.01657867]
[593.40588379 -55.41888809]
[606.98327637 -46.22182846]
[605.53735352 -29.88654709]
[590.55560303 -23.21738052]
[582.14318848 -10.79836941]
[573.73083496 1.62064111]
[565.47644043 14.14521790]
[557.38134766 26.77335167]
[549.28625488 39.40148544]
[548.32476807 46.71090698]
[541.00781250 52.13740921]
[532.75341797 64.66198730]
[524.49902344 77.18656158]
[516.24462891 89.71114349]
[507.99026489 102.23571777]
[499.73587036 114.76029205]
[513.91015625 124.04942322]
[517.99249268 138.88822937]
[533.51593018 135.83343506]
[543.20074463 147.14956665]
[557.45477295 151.82093811]
[571.70886230 156.49232483]
[585.96289062 161.16371155]
[600.21697998 165.83509827]
[609.59301758 160.38224792]
[620.20422363 160.96392822]
[628.57519531 167.14866638]
[632.09661865 176.70941162]
[646.22772217 181.74038696]
[659.01171875 173.14527893]
[674.22766113 173.71916199]
[686.04815674 183.03253174]
[690.06988525 197.34909058]
[704.20104980 202.38006592]
[718.33215332 207.41104126]
[732.46331787 212.44203186]
[746.59448242 217.47300720]
[764.63696289 213.73638916]
[775.46624756 227.55865479]
[789.65997314 232.41021729]
[803.85369873 237.26179504]
[818.04742432 242.11335754]
[832.27160645 246.87493896]
[847.74456787 238.68876648]
[864.02612305 244.13032532]
[871.17987061 259.36285400]
[885.49194336 263.85330200]
[899.80401611 268.34375000]
[914.11614990 272.83419800]
[928.42822266 277.32464600]
[945.35101318 276.29724121]
[951.02294922 292.27426147]
[937.24047852 302.14743042]
[923.93774414 291.63671875]
[909.62567139 287.14627075]
[895.31359863 282.65582275]
[881.00152588 278.16537476]
[866.68939209 273.67492676]
[856.22888184 281.17453003]
[843.16381836 281.28912354]
[832.25329590 273.75326538]
[827.60021973 261.12899780]
[820.28314209 262.03033447]
[813.19586182 256.30709839]
[799.00213623 251.45553589]
[784.80841064 246.60395813]
[770.61462402 241.75239563]
[759.63549805 246.79385376]
[747.78094482 242.88673401]
[741.56347656 231.60415649]
[727.43237305 226.57316589]
[713.30120850 221.54219055]
[699.17004395 216.51121521]
[685.03887939 211.48023987]
[672.87481689 220.03431702]
[657.82818604 219.78242493]
[645.67291260 210.61161804]
[641.19677734 195.87153625]
[627.06561279 190.84056091]
[608.33367920 195.69239807]
[595.54559326 180.08915710]
[581.29150391 175.41777039]
[567.03747559 170.74638367]
[552.78338623 166.07499695]
[538.52935791 161.40362549]
[524.02539062 164.79255676]
[513.32110596 153.14228821]
[505.60278320 159.83470154]
[495.29525757 162.20759583]
[484.72885132 159.37820435]
[476.45587158 151.68058777]
[472.63516235 140.66236877]
[474.47607422 128.78062439]
[459.48089600 129.16061401]
[444.48571777 129.54060364]
[431.95852661 137.59783936]
[417.96676636 130.21261597]
[402.97430420 130.68757629]
[387.98513794 131.25747681]
[372.99594116 131.82739258]
[369.86718750 140.71452332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[13 121]
[14 120]
[15 119]
[16 118]
[17 117]
[18 116]
[19 115]
[20 114]
[21 113]
[22 112]
[25 109]
[26 108]
[27 107]
[33 69]
[34 68]
[35 67]
[38 65]
[39 64]
[40 63]
[41 62]
[46 56]
[47 55]
[48 54]
[70 81]
[71 80]
[72 79]
[73 78]
[94 105]
[95 104]
[96 103]
[123 246]
[124 245]
[125 244]
[127 243]
[129 241]
[130 240]
[131 239]
[132 162]
[133 161]
[134 160]
[135 159]
[136 158]
[137 157]
[138 155]
[139 154]
[140 153]
[143 152]
[144 151]
[145 150]
[164 233]
[166 231]
[167 230]
[168 229]
[169 228]
[170 227]
[174 225]
[175 224]
[179 220]
[180 219]
[181 218]
[182 217]
[183 216]
[185 213]
[186 212]
[187 211]
[188 210]
[189 208]
[192 204]
[193 203]
[194 202]
[195 201]
[196 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
