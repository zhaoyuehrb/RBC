%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCUCGGCUGGGGCUGCGGGGGCGGCGACGGCGGGAGCGGCAGUGGCGGCGGCGGCGGGUCCGGAGGUGGCGGCAGGUGGCCCCGCGCGCGGCGGCCGGCCCGGCCGGGGGCGGGCGGGAAGGUGGCGCCUCGGGCGGGGGCCGGUCCCUGCACCAGGUGACCUGUUCCGGCCCGGAUCCGGGCGGCCUCGCC\
) } def
/len { sequence length } bind def

/coor [
[-113.84069824 348.16989136]
[-116.89482880 363.69351196]
[-131.03654480 368.36911011]
[-140.75996399 379.79080200]
[-150.48339844 391.21249390]
[-160.20681763 402.63418579]
[-169.93025208 414.05587769]
[-172.82955933 432.23452759]
[-189.57026672 437.48141479]
[-199.10937500 449.05749512]
[-208.64848328 460.63357544]
[-218.18760681 472.20962524]
[-216.85986328 487.72976685]
[-226.69879150 499.33367920]
[-241.50306702 500.50381470]
[-251.04217529 512.07989502]
[-260.58129883 523.65594482]
[-270.12039185 535.23199463]
[-279.65951538 546.80810547]
[-281.82812500 563.06323242]
[-297.09082031 569.06170654]
[-309.74667358 558.63281250]
[-306.77639771 542.50488281]
[-291.23556519 537.26898193]
[-281.69647217 525.69287109]
[-272.15734863 514.11682129]
[-262.61822510 502.54077148]
[-253.07913208 490.96469116]
[-254.76052856 476.20974731]
[-245.25141907 464.33407593]
[-229.76367188 462.67053223]
[-220.22456360 451.09445190]
[-210.68544006 439.51837158]
[-201.14633179 427.94232178]
[-201.99374390 415.86767578]
[-194.13049316 406.14385986]
[-181.35192871 404.33242798]
[-171.62850952 392.91073608]
[-161.90507507 381.48907471]
[-152.18165588 370.06738281]
[-142.45823669 358.64569092]
[-140.09959412 343.93902588]
[-125.26239014 338.44647217]
[-126.99377441 328.36053467]
[-122.79350281 318.78833008]
[-113.83003235 312.99459839]
[-102.93788147 313.09942627]
[-92.85336304 301.99526978]
[-82.76885223 290.89108276]
[-72.68434143 279.78692627]
[-62.59982681 268.68276978]
[-60.42750931 261.60873413]
[-52.26358795 257.48309326]
[-42.00239182 246.54197693]
[-31.74119759 235.60086060]
[-28.67837524 221.02456665]
[-13.59431553 216.25154114]
[-3.33312130 205.31044006]
[6.75139189 194.20626831]
[16.65663338 182.94189453]
[26.56187630 171.67750549]
[36.46711731 160.41313171]
[46.37236023 149.14875793]
[56.27760315 137.88438416]
[66.18284607 126.62000275]
[76.08808899 115.35562897]
[78.14674377 108.24771118]
[86.24349213 103.99172211]
[89.39630127 90.37000275]
[102.65233612 85.92375946]
[112.73685455 74.81958771]
[122.82136536 63.71541977]
[126.28021240 55.24741364]
[133.15760803 52.51574707]
[143.41879272 41.57463455]
[153.67999268 30.63352585]
[163.94119263 19.69241524]
[174.20237732 8.75130463]
[184.46357727 -2.18980622]
[194.72476196 -13.13091660]
[198.52154541 -28.48979378]
[212.87165833 -32.48022842]
[223.13284302 -43.42134094]
[233.39404297 -54.36244965]
[233.06341553 -69.93577576]
[243.62557983 -80.88544464]
[258.47439575 -81.10466766]
[262.27117920 -96.46354675]
[276.62127686 -100.45397949]
[286.88247681 -111.39509583]
[297.14367676 -122.33620453]
[300.73779297 -130.74768066]
[307.65811157 -133.36877441]
[318.09332275 -144.14401245]
[321.82180786 -152.49681091]
[328.78323364 -155.00663757]
[339.38983154 -165.61323547]
[349.99642944 -176.21984863]
[360.60302734 -186.82644653]
[371.20962524 -197.43304443]
[381.81625366 -208.03964233]
[392.42285156 -218.64625549]
[403.02944946 -229.25285339]
[413.63604736 -239.85945129]
[417.98138428 -257.74765015]
[435.08840942 -261.63751221]
[445.52365112 -272.41275024]
[455.95889282 -283.18798828]
[460.00134277 -298.48403931]
[474.41357422 -302.24395752]
[484.84881592 -313.01919556]
[495.28402710 -323.79443359]
[505.71926880 -334.56967163]
[516.15454102 -345.34490967]
[526.58978271 -356.12014771]
[530.64782715 -374.07571411]
[547.69030762 -378.23925781]
[557.95147705 -389.18035889]
[557.19451904 -404.96652222]
[567.88342285 -416.60794067]
[583.67669678 -417.19799805]
[595.20446777 -406.38659668]
[595.62750244 -390.58798218]
[584.69482422 -379.17517090]
[568.89263916 -378.91915894]
[558.63140869 -367.97805786]
[558.70343018 -355.87393188]
[550.23333740 -346.67388916]
[537.36499023 -345.68493652]
[526.92974854 -334.90969849]
[516.49450684 -324.13442993]
[506.05926514 -313.35919189]
[495.62405396 -302.58395386]
[485.18881226 -291.80871582]
[481.89276123 -277.28338623]
[466.73413086 -272.75274658]
[456.29888916 -261.97750854]
[445.86364746 -251.20227051]
[445.74166870 -239.09852600]
[437.12521362 -230.03544617]
[424.24264526 -229.25285339]
[413.63604736 -218.64625549]
[403.02944946 -208.03964233]
[392.42285156 -197.43304443]
[381.81625366 -186.82644653]
[371.20962524 -176.21984863]
[360.60302734 -165.61323547]
[349.99642944 -155.00663757]
[339.38983154 -144.40003967]
[328.86859131 -133.70877075]
[318.43334961 -122.93353271]
[308.08477783 -112.07501221]
[297.82360840 -101.13389587]
[287.56240845 -90.19278717]
[284.49957275 -75.61649323]
[269.41552734 -70.84347534]
[270.14810181 -56.01111603]
[259.89767456 -44.76910019]
[244.33514404 -44.10125732]
[234.07395935 -33.16014481]
[223.81275940 -22.21903610]
[220.74993896 -7.64274073]
[205.66587830 -2.86972284]
[195.40467834 8.07138824]
[185.14349365 19.01249886]
[174.88229370 29.95360947]
[164.62110901 40.89471817]
[154.35990906 51.83583069]
[144.09870911 62.77693939]
[133.92553711 73.79993439]
[123.84101868 84.90410614]
[113.75650787 96.00827789]
[110.60369873 109.62999725]
[97.34766388 114.07624054]
[87.35246277 125.26087189]
[77.44721985 136.52525330]
[67.54197693 147.78962708]
[57.63673782 159.05400085]
[47.73149490 170.31837463]
[37.82625198 181.58274841]
[27.92101097 192.84713745]
[18.01576805 204.11151123]
[16.34004784 210.52787781]
[12.27970219 214.52648926]
[7.60798931 215.57162476]
[-2.65320468 226.51274109]
[-6.44997692 241.87161255]
[-20.80008698 245.86206055]
[-31.06128120 256.80316162]
[-41.32247543 267.74426270]
[-51.49565506 278.76727295]
[-61.58016968 289.87142944]
[-71.66468048 300.97561646]
[-81.74919891 312.07977295]
[-91.83370972 323.18395996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[3 41]
[4 40]
[5 39]
[6 38]
[7 37]
[9 34]
[10 33]
[11 32]
[12 31]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[47 195]
[48 194]
[49 193]
[50 192]
[51 191]
[53 190]
[54 189]
[55 188]
[57 186]
[58 185]
[59 182]
[60 181]
[61 180]
[62 179]
[63 178]
[64 177]
[65 176]
[66 175]
[68 174]
[70 172]
[71 171]
[72 170]
[74 169]
[75 168]
[76 167]
[77 166]
[78 165]
[79 164]
[80 163]
[82 161]
[83 160]
[84 159]
[87 156]
[89 154]
[90 153]
[91 152]
[93 151]
[94 150]
[96 149]
[97 148]
[98 147]
[99 146]
[100 145]
[101 144]
[102 143]
[103 142]
[104 141]
[106 138]
[107 137]
[108 136]
[110 134]
[111 133]
[112 132]
[113 131]
[114 130]
[115 129]
[117 126]
[118 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
