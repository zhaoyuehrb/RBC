%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCAGGUCGGCCGCCCCCACCAGGUCCAGUUCCAGAGCCCAGGCCGGUCGGCCGGGCCCGCGUGCCCUCGGCGGGCUGCGCAGAGCGCGGGAGCGGUUUGGGGCUGGGCAUGCUGGGAGCCCCUCGGGCAACGGCCGCCGCCGCCACAGCCACACAGCCGCCGCCACUGCGUCCGUCCCCGGUGAGCGCCGCUGACGCGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[-512.52075195 633.31805420]
[-524.34295654 624.08575439]
[-524.65155029 609.08831787]
[-536.77343750 617.92352295]
[-548.89526367 626.75872803]
[-555.49017334 641.13989258]
[-570.33276367 642.38366699]
[-582.45458984 651.21887207]
[-594.57647705 660.05407715]
[-606.69830322 668.88928223]
[-618.82019043 677.72442627]
[-630.94207764 686.55963135]
[-643.06390381 695.39483643]
[-655.18579102 704.22998047]
[-667.30761719 713.06518555]
[-679.36212158 721.99212646]
[-691.34844971 731.01025391]
[-686.62176514 746.22375488]
[-687.38836670 762.10931396]
[-693.53723145 776.74755859]
[-704.30822754 788.37603760]
[-718.38574219 795.60156250]
[-734.05969238 797.56701660]
[-749.43310547 794.05316162]
[-762.65173340 785.50256348]
[-774.49987793 794.70153809]
[-774.91217041 810.33367920]
[-785.31488037 822.00927734]
[-800.79602051 824.21533203]
[-814.04602051 815.91040039]
[-818.80853271 801.01568604]
[-812.83483887 786.56402588]
[-798.94561768 779.37915039]
[-783.69885254 782.85339355]
[-771.85070801 773.65441895]
[-776.59149170 760.31335449]
[-776.98046875 746.13891602]
[-772.96630859 732.51684570]
[-764.92889404 720.78289795]
[-753.64331055 712.09210205]
[-740.20495605 707.30480957]
[-725.92358398 706.90161133]
[-712.19543457 710.93518066]
[-700.36663818 719.02386475]
[-688.38024902 710.00573730]
[-684.92413330 703.47027588]
[-676.14282227 700.94329834]
[-664.02093506 692.10815430]
[-651.89910889 683.27294922]
[-639.77722168 674.43774414]
[-627.65539551 665.60260010]
[-615.53350830 656.76739502]
[-603.41168213 647.93218994]
[-591.28979492 639.09704590]
[-579.16790771 630.26184082]
[-573.44006348 616.51263428]
[-557.73046875 614.63684082]
[-545.60864258 605.80163574]
[-533.48675537 596.96649170]
[-521.70874023 587.67785645]
[-510.29159546 577.94909668]
[-498.87442017 568.22033691]
[-487.45724487 558.49163818]
[-476.04006958 548.76287842]
[-464.62289429 539.03417969]
[-453.20574951 529.30541992]
[-452.56292725 525.83557129]
[-450.20565796 522.50524902]
[-446.21807861 520.11773682]
[-441.04034424 519.40814209]
[-429.19219971 510.20913696]
[-417.34405518 501.01016235]
[-405.49591064 491.81115723]
[-393.64779663 482.61215210]
[-381.79965210 473.41314697]
[-369.95150757 464.21414185]
[-358.17352295 454.92550659]
[-346.46633911 445.54776001]
[-334.75918579 436.17001343]
[-331.50299072 429.53268433]
[-322.80242920 426.74038696]
[-310.95431519 417.54138184]
[-299.10617065 408.34237671]
[-293.79821777 394.42565918]
[-278.15277100 392.07397461]
[-272.84484863 378.15725708]
[-257.19937134 375.80557251]
[-251.89144897 361.88885498]
[-236.24600220 359.53717041]
[-224.39785767 350.33819580]
[-212.54972839 341.13919067]
[-200.70158386 331.94018555]
[-188.85343933 322.74118042]
[-183.54551697 308.82446289]
[-167.90005493 306.47277832]
[-156.05192566 297.27377319]
[-144.20378113 288.07476807]
[-132.35563660 278.87576294]
[-120.50750732 269.67678833]
[-114.77134705 253.09315491]
[-96.51040649 250.73388672]
[-84.80323792 241.35614014]
[-73.09606934 231.97837830]
[-61.46039963 222.51206970]
[-49.89689636 212.95771790]
[-38.33339691 203.40338135]
[-26.76989555 193.84904480]
[-15.20639515 184.29469299]
[-18.35871315 171.00463867]
[-15.46279335 157.58865356]
[-7.02816916 146.67752075]
[5.34387684 140.43589783]
[19.26407242 140.13304138]
[32.01651764 145.88507080]
[43.72368622 136.50730896]
[55.43085480 127.12956238]
[67.13802338 117.75180817]
[78.77368927 108.28549194]
[90.33719635 98.73114777]
[74.93164062 83.14488220]
[74.93367767 55.96440506]
[84.40000153 44.32873535]
[93.86631775 32.69306564]
[103.33263397 21.05739594]
[108.63830566 4.95503044]
[125.58014679 5.59577608]
[129.65440369 22.05289459]
[114.96830750 30.52371597]
[105.50198364 42.15938568]
[96.03566742 53.79505539]
[86.56935120 65.43072510]
[91.30250549 71.24855804]
[100.76882935 82.88422394]
[105.50198364 88.70206451]
[118.82026672 81.80108643]
[132.13854980 74.90010834]
[145.45681763 67.99913788]
[153.83369446 53.90090561]
[170.22593689 54.37690735]
[177.77059937 68.93746948]
[168.70640564 82.60393524]
[152.35780334 81.31741333]
[139.03952026 88.21839142]
[125.72123718 95.11936188]
[112.40296173 102.02033997]
[99.89153290 110.29464722]
[88.32803345 119.84899139]
[83.70382690 127.73018646]
[76.51577759 129.45896912]
[64.80860901 138.83673096]
[53.10144043 148.21447754]
[41.39427185 157.59222412]
[44.06265259 173.90855408]
[38.17316437 189.25654602]
[25.42131424 199.48197937]
[9.34606552 201.86837769]
[-5.65205336 195.85820007]
[-17.21555328 205.41253662]
[-28.77905464 214.96688843]
[-40.34255600 224.52122498]
[-51.90605545 234.07556152]
[-56.53026199 241.95677185]
[-63.71831512 243.68554688]
[-75.42548370 253.06330872]
[-87.13265228 262.44104004]
[-89.32287598 275.15399170]
[-99.26950836 282.72357178]
[-111.30850220 281.52490234]
[-123.15663910 290.72390747]
[-135.00477600 299.92291260]
[-146.85292053 309.12191772]
[-158.70104980 318.32092285]
[-164.85644531 332.89559937]
[-179.65444946 334.58932495]
[-191.50257874 343.78833008]
[-203.35072327 352.98730469]
[-215.19885254 362.18630981]
[-227.04699707 371.38531494]
[-233.20239258 385.96002197]
[-248.00038147 387.65371704]
[-254.15577698 402.22842407]
[-268.95376587 403.92211914]
[-275.10916138 418.49682617]
[-289.90716553 420.19052124]
[-301.75531006 429.38952637]
[-313.60342407 438.58853149]
[-325.38143921 447.87716675]
[-337.08859253 457.25491333]
[-348.79577637 466.63265991]
[-353.53903198 474.44277954]
[-360.75250244 476.06228638]
[-372.60064697 485.26129150]
[-384.44879150 494.46029663]
[-396.29693604 503.65930176]
[-408.14505005 512.85827637]
[-419.99319458 522.05731201]
[-431.84133911 531.25628662]
[-443.47702026 540.72259521]
[-454.89416504 550.45135498]
[-466.31134033 560.18005371]
[-477.72851562 569.90881348]
[-489.14569092 579.63751221]
[-500.56286621 589.36627197]
[-511.98004150 599.09497070]
[-497.46807861 602.89019775]
[-491.24502563 616.53839111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 59]
[4 58]
[5 57]
[7 55]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[14 48]
[15 47]
[16 45]
[17 44]
[25 35]
[26 34]
[60 204]
[61 203]
[62 202]
[63 201]
[64 200]
[65 199]
[66 198]
[70 197]
[71 196]
[72 195]
[73 194]
[74 193]
[75 192]
[76 191]
[77 189]
[78 188]
[79 187]
[81 186]
[82 185]
[83 184]
[85 182]
[87 180]
[89 178]
[90 177]
[91 176]
[92 175]
[93 174]
[95 172]
[96 171]
[97 170]
[98 169]
[99 168]
[101 165]
[102 164]
[103 163]
[104 161]
[105 160]
[106 159]
[107 158]
[108 157]
[114 152]
[115 151]
[116 150]
[117 149]
[118 147]
[119 146]
[121 131]
[122 130]
[123 129]
[124 128]
[134 145]
[135 144]
[136 143]
[137 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
