%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUAUUCGGUAGGCGUCUUGAGAGCGGGUGUGCCGGGUGACGAGAAAAUGCUGCAAAGAUUAACGCUCUCAUUCCUGAAUCCCAGCAGAACCUCAUUAGAUCCAUAAAUGGGAACGCUGUAUCAUCCGUUGCAGUCGUCUUGAAGAACCAAGGAGGAAAAUUGCACCAGCAAAAAAAAAUUGAGUCAUGAAAGAUGUGAAAAG\
) } def
/len { sequence length } bind def

/coor [
[115.30745697 286.53524780]
[100.54446411 283.87927246]
[89.02223969 274.27520752]
[83.75081635 260.23190308]
[79.68470764 274.67028809]
[75.61860657 289.10867310]
[71.55250549 303.54705811]
[73.07889557 320.43215942]
[57.27621841 326.57315063]
[47.00059891 313.08804321]
[57.11412430 299.48095703]
[61.18022919 285.04257202]
[65.24633026 270.60418701]
[69.31243134 256.16580200]
[72.26683044 241.45964050]
[74.09234619 226.57113647]
[75.91786194 211.68263245]
[77.74337769 196.79412842]
[79.56889343 181.90562439]
[81.39441681 167.01712036]
[83.21993256 152.12863159]
[72.53276062 141.60321045]
[57.67382812 143.65556335]
[42.81489944 145.70791626]
[27.95596695 147.76026917]
[13.09703445 149.81262207]
[-1.76189709 151.86497498]
[-16.62082863 153.91732788]
[-23.09143639 172.02294922]
[-37.79779053 184.28135681]
[-56.61129379 187.35926819]
[-74.30493164 180.48568726]
[-86.00548553 165.64282227]
[-100.71166229 168.59721375]
[-115.41783905 171.55160522]
[-127.42375183 181.85542297]
[-141.42564392 176.77644348]
[-153.43156433 187.08026123]
[-167.43347168 182.00128174]
[-182.13963318 184.95567322]
[-187.66482544 199.35969543]
[-200.11383057 208.47155762]
[-215.51420593 209.38369751]
[-228.95175171 201.80505371]
[-236.13859558 188.15394592]
[-234.78144836 172.78639221]
[-225.31336975 160.60612488]
[-210.75558472 155.49981689]
[-195.75341797 159.09687805]
[-185.09403992 170.24949646]
[-170.38786316 167.29510498]
[-159.43382263 157.20260620]
[-144.38005066 162.07026672]
[-133.42601013 151.97776794]
[-118.37223053 156.84542847]
[-103.66605377 153.89103699]
[-88.95988464 150.93664551]
[-87.20182800 140.02030945]
[-82.19036102 130.13438416]
[-74.38726044 122.22565460]
[-64.52249146 117.05703735]
[-53.52597046 115.13404083]
[-42.43987656 116.65537262]
[-32.31989670 121.49250793]
[-24.13468933 129.20039368]
[-18.67318153 139.05839539]
[-3.81424952 137.00604248]
[11.04468155 134.95368958]
[25.90361404 132.90133667]
[40.76254654 130.84898376]
[55.62147522 128.79663086]
[70.48040771 126.74427795]
[70.80429840 84.59020233]
[103.56709290 74.05118561]
[109.77939606 60.39808273]
[115.99169922 46.74497604]
[122.20400238 33.09186935]
[128.41630554 19.43876266]
[116.33056641 7.57322979]
[112.36981201 -10.86662197]
[119.84104919 -30.26851273]
[138.24497986 -43.60125732]
[136.19262695 -58.46018600]
[134.14027405 -73.31912231]
[132.08792114 -88.17804718]
[130.03556824 -103.03697968]
[115.16474152 -105.74175262]
[101.87601471 -112.90081787]
[91.46482849 -123.80199432]
[84.94168854 -137.36900330]
[82.93408203 -152.26773071]
[85.62615204 -167.03741455]
[92.74186707 -180.23388672]
[103.57329559 -190.57072449]
[117.05098724 -197.04472351]
[114.99863434 -211.90365601]
[104.51130676 -224.51110840]
[110.43911743 -239.80140686]
[126.68403625 -242.04519653]
[136.53468323 -228.93426514]
[129.85757446 -213.95600891]
[131.90992737 -199.09707642]
[146.63792419 -196.51892090]
[159.86585999 -189.50521851]
[170.29235840 -178.73171997]
[176.88729858 -165.24478149]
[178.99351501 -150.35966492]
[176.39227295 -135.53237915]
[169.32591248 -122.21716309]
[158.47535706 -111.72392273]
[144.89450073 -105.08933258]
[146.94685364 -90.23040009]
[148.99920654 -75.37147522]
[151.05155945 -60.51253891]
[153.10391235 -45.65361023]
[167.37681580 -41.04011536]
[177.73803711 -51.88655472]
[188.09924316 -62.73299408]
[198.37745667 -73.65811920]
[208.57205200 -84.66130829]
[218.76666260 -95.66448975]
[228.96125793 -106.66767120]
[239.15586853 -117.67086029]
[236.01405334 -132.86653137]
[242.43472290 -146.99291992]
[255.94902039 -154.61811829]
[271.36038208 -152.81008911]
[282.74288940 -142.26405334]
[285.71966553 -127.03518677]
[279.14611816 -112.97929382]
[265.54989624 -105.50115204]
[250.15904236 -107.47625732]
[239.96444702 -96.47306824]
[229.76983643 -85.46988678]
[219.57524109 -74.46670532]
[209.38063049 -63.46352005]
[207.13973999 -56.41765976]
[198.94567871 -52.37177658]
[188.58447266 -41.52534103]
[178.22325134 -30.67889977]
[185.55755615 -17.59425545]
[200.21696472 -20.77257347]
[214.87638855 -23.95089149]
[229.53579712 -27.12920952]
[237.87762451 -40.55267715]
[253.28678894 -44.06452560]
[266.62130737 -35.58123779]
[269.97006226 -20.13580132]
[261.34625244 -6.89171791]
[245.86627197 -3.70646644]
[232.71411133 -12.46980095]
[218.05470276 -9.29148293]
[203.39529419 -6.11316442]
[188.73588562 -2.93484616]
[169.58718872 24.41274071]
[142.06941223 25.65106583]
[135.85710144 39.30417252]
[129.64480591 52.95727921]
[123.43250275 66.61038208]
[117.22019958 80.26348877]
[129.02162170 89.86763000]
[134.70611572 106.37210083]
[130.49002075 125.63242340]
[144.14312744 131.84472656]
[157.79623413 138.05702209]
[171.44934082 144.26933289]
[187.71098328 142.15016174]
[197.46083069 155.33622742]
[190.66906738 170.26284790]
[174.32247925 171.57478333]
[165.23704529 157.92243958]
[151.58393860 151.71012878]
[137.93083191 145.49783325]
[124.27772522 139.28552246]
[117.73539734 142.95268250]
[126.73879242 154.95013428]
[135.74218750 166.94758606]
[144.74557495 178.94505310]
[153.74896240 190.94250488]
[162.75234985 202.93995667]
[174.57208252 212.17544556]
[178.30798340 226.70275879]
[172.41004944 240.49458313]
[159.32531738 247.82873535]
[144.48258972 245.66229248]
[134.04006958 234.89411926]
[132.33018494 219.99243164]
[126.79429626 206.05134583]
[121.25841522 192.11026001]
[115.72252655 178.16917419]
[110.18663788 164.22807312]
[104.65075684 150.28698730]
[98.10843658 153.95414734]
[96.28291321 168.84265137]
[94.45739746 183.73114014]
[92.63188171 198.61964417]
[90.80636597 213.50814819]
[88.98085022 228.39665222]
[87.15532684 243.28515625]
[97.44126892 232.36730957]
[111.77864075 227.95825195]
[126.42198181 231.20982361]
[137.54588318 241.27256775]
[142.24435425 255.51773071]
[139.28997803 270.22390747]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 14]
[5 13]
[6 12]
[7 11]
[15 199]
[16 198]
[17 197]
[18 196]
[19 195]
[20 194]
[21 193]
[22 72]
[23 71]
[24 70]
[25 69]
[26 68]
[27 67]
[28 66]
[33 57]
[34 56]
[35 55]
[37 53]
[39 51]
[40 50]
[74 160]
[75 159]
[76 158]
[77 157]
[78 156]
[82 115]
[83 114]
[84 113]
[85 112]
[86 111]
[95 102]
[96 101]
[116 140]
[117 139]
[118 138]
[119 136]
[120 135]
[121 134]
[122 133]
[123 132]
[141 154]
[142 153]
[143 152]
[144 151]
[163 174]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
