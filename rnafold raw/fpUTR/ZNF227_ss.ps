%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAGAGCCACUUCCGCCCCGGAAAGCGAGGCCGCCACCAUCUUUUGGGUCCGGGAGAAGGAUUGAGUCAUCGGGCUCCAAUGCGUGGGGAUGUUUACCGCCGUUUAUCCGGGAUAGAGACUCCAUCGUGCUGACAGCAUCCUUUUAUUCACCGCCUCCGAAUUUGCAAAGAGGAGGAAGGAGGGACUUCUUGGCUUCUCCCAGCAUAGCCCCAGUU\
) } def
/len { sequence length } bind def

/coor [
[135.89285278 330.29846191]
[148.95646667 322.64205933]
[145.96418762 307.94354248]
[135.84350586 297.01556396]
[140.67236328 281.94927979]
[137.68008423 267.25076294]
[134.68780518 252.55226135]
[131.59017944 237.87557983]
[128.38737488 223.22151184]
[125.18455505 208.56742859]
[121.98174286 193.91336060]
[118.04752350 179.43847656]
[113.39180756 165.17930603]
[108.73609161 150.92012024]
[104.08037567 136.66093445]
[99.42465973 122.40174866]
[81.79354095 115.46456146]
[74.87058258 96.53996277]
[84.99765778 77.73806000]
[71.79747772 84.86231995]
[58.59729385 91.98658752]
[45.39710999 99.11085510]
[32.19692612 106.23512268]
[18.99674416 113.35939026]
[21.43655968 126.69672394]
[14.18967056 141.28672791]
[-2.66950631 150.19839478]
[-14.45425415 159.47846985]
[-26.23900223 168.75852966]
[-31.81825066 184.17942810]
[-48.00806046 186.79133606]
[-58.15374374 173.90734863]
[-51.81829071 158.78140259]
[-35.51907349 156.97378540]
[-23.73432541 147.69371033]
[-11.94957733 138.41365051]
[-15.46427917 131.78817749]
[-22.49368286 118.53723145]
[-26.00838661 111.91175842]
[-40.30059433 116.46508026]
[-54.59280777 121.01840210]
[-63.20584488 134.55335999]
[-79.17271423 136.11499023]
[-90.24499512 124.50532532]
[-87.92898560 108.63032532]
[-74.00132751 100.66792297]
[-59.14612579 106.72618866]
[-44.85391617 102.17287445]
[-30.56170654 97.61955261]
[-5.32699394 88.54536438]
[11.87247849 100.15920258]
[25.07266235 93.03493500]
[38.27284622 85.91067505]
[51.47302628 78.78640747]
[64.67321014 71.66213989]
[77.87339020 64.53787231]
[84.13129425 50.90560913]
[80.92848206 36.25153351]
[77.72566986 21.59745598]
[74.52285767 6.94337749]
[71.32004547 -7.71069956]
[68.11722565 -22.36477661]
[64.91441345 -37.01885605]
[61.71160126 -51.67293167]
[38.45221710 -41.34534836]
[7.25779676 -53.98374176]
[-5.83883286 -61.29662704]
[-18.93546295 -68.60951233]
[-32.03209305 -75.92240143]
[-45.12872314 -83.23528290]
[-61.50949097 -82.45914459]
[-70.14316559 -96.40158844]
[-62.14815903 -110.71982574]
[-45.74905014 -110.68447876]
[-37.81583786 -96.33191681]
[-24.71920586 -89.01902771]
[-11.62257671 -81.70614624]
[1.47405267 -74.39325714]
[14.57068253 -67.08037567]
[20.89852524 -71.10633850]
[12.84680462 -83.76216125]
[25.50275803 -91.81366730]
[33.55421066 -79.15827179]
[39.88205719 -83.18423462]
[38.80709076 -98.14566803]
[37.73212433 -113.10710144]
[36.54987335 -128.06044006]
[35.26040268 -143.00491333]
[33.97093201 -157.94938660]
[32.68145752 -172.89385986]
[31.39198685 -187.83833313]
[27.53844452 -196.11340332]
[30.19277954 -203.00616455]
[21.48639107 -216.21636963]
[28.29170609 -229.46540833]
[27.21673965 -244.42683411]
[26.14177513 -259.38827515]
[25.06680870 -274.34970093]
[16.36042213 -287.55990601]
[23.16573715 -300.80892944]
[19.43129349 -309.13845825]
[22.18422890 -315.99243164]
[21.32398987 -330.96774292]
[20.46375275 -345.94305420]
[8.50064468 -356.27066040]
[7.42751408 -372.03848267]
[17.88103104 -383.89172363]
[33.65930939 -384.79809570]
[45.40137482 -374.21984863]
[46.14086914 -358.43286133]
[35.43906403 -346.80328369]
[36.29930496 -331.82797241]
[37.15954208 -316.85266113]
[38.12716675 -301.88391113]
[46.75666809 -289.74383545]
[40.02824020 -275.42468262]
[41.10320663 -260.46322632]
[42.17817307 -245.50180054]
[43.25313950 -230.54037476]
[51.88263702 -218.40031433]
[45.15420914 -204.08113098]
[46.33646011 -189.12779236]
[47.62593079 -174.18331909]
[48.91540527 -159.23884583]
[50.20487595 -144.29437256]
[51.49434662 -129.34991455]
[55.19885254 -122.95989227]
[52.69355774 -114.18206024]
[53.76852036 -99.22063446]
[54.84348679 -84.25920105]
[69.03441620 -79.39942169]
[79.05537415 -90.56098175]
[89.07633209 -101.72254181]
[95.15878296 -117.54784393]
[112.04941559 -116.08397675]
[115.31855011 -99.44820404]
[100.23789215 -91.70158386]
[90.21693420 -80.54002380]
[80.19597626 -69.37846375]
[76.36567688 -54.87574387]
[79.56849670 -40.22166824]
[82.77130890 -25.56759071]
[85.97412109 -10.91351318]
[89.17693329 3.74056387]
[92.37974548 18.39464188]
[95.58256531 33.04871750]
[98.78537750 47.70279694]
[97.30855560 32.77567291]
[104.47427368 19.59794617]
[117.80625153 12.72347355]
[132.69732666 14.52788448]
[144.00155640 24.38762474]
[147.81250000 38.89543915]
[142.81321716 53.03782654]
[130.73130798 61.92756653]
[115.74161530 62.49252319]
[130.69494629 63.67477036]
[145.64828491 64.85702515]
[160.60162354 66.03926849]
[175.55496216 67.22151947]
[182.78926086 53.82059479]
[194.85273743 44.52584076]
[209.65531921 40.94762802]
[224.63235474 43.70590591]
[237.18901062 52.32278061]
[245.14973450 65.30532837]
[247.13531494 80.40425110]
[242.80171204 95.00356293]
[232.89978027 106.57384491]
[219.14505005 113.11047363]
[203.92063904 113.48094177]
[189.86427307 107.62107086]
[179.41127014 96.54610443]
[174.37271118 82.17485809]
[159.41937256 80.99260712]
[144.46603394 79.81035614]
[129.51269531 78.62811279]
[114.55936432 77.44586182]
[123.73683167 91.05446625]
[122.97875977 106.52722168]
[113.68384552 117.74603271]
[118.33956146 132.00521851]
[122.99527740 146.26440430]
[127.65099335 160.52359009]
[132.30670166 174.78277588]
[138.97933960 161.34863281]
[152.67729187 155.23587036]
[167.13253784 159.24159241]
[175.73051453 171.53283691]
[174.53688049 186.48527527]
[164.09783936 197.25682068]
[149.19017029 198.91854858]
[136.63581848 190.71054077]
[139.83863831 205.36462402]
[143.04144287 220.01869202]
[146.24426270 234.67277527]
[151.13113403 242.38284302]
[149.38632202 249.55998230]
[152.37860107 264.25848389]
[155.37088013 278.95700073]
[165.70559692 290.93634033]
[160.66270447 304.95126343]
[163.65498352 319.64978027]
[178.67216492 321.58959961]
[192.24472046 328.30261230]
[202.90039062 339.06063843]
[209.48332214 352.69677734]
[211.27946472 367.73181152]
[208.09397888 382.53491211]
[200.27239990 395.50030518]
[188.66316223 405.22161865]
[174.52552795 410.64437866]
[159.39306641 411.18032837]
[144.90722656 406.77136230]
[132.63931274 397.89572144]
[123.92006683 385.51614380]
[119.69528961 370.97552490]
[120.42324829 355.85107422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[5 200]
[6 199]
[7 198]
[8 196]
[9 195]
[10 194]
[11 193]
[12 185]
[13 184]
[14 183]
[15 182]
[16 181]
[19 56]
[20 55]
[21 54]
[22 53]
[23 52]
[24 51]
[27 36]
[28 35]
[29 34]
[39 49]
[40 48]
[41 47]
[57 147]
[58 146]
[59 145]
[60 144]
[61 143]
[62 142]
[63 141]
[64 140]
[66 79]
[67 78]
[68 77]
[69 76]
[70 75]
[84 130]
[85 129]
[86 128]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[93 121]
[95 119]
[96 118]
[97 117]
[98 116]
[100 114]
[102 113]
[103 112]
[104 111]
[131 139]
[132 138]
[133 137]
[156 178]
[157 177]
[158 176]
[159 175]
[160 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
