%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCUCUCUGGAGUCGGCUAGCCGGGGCUCGGGGAGCGGGGUGCGCAGGGCUCGGGGCCACGCCUUGCCACCUGCAGCGCCCGGGUGGGCCGCGGGGGCCUCGGCGGGACGCGCUCGGCCCUGUCGCAGGAGCUAACGCAGGGGGAAUCCUUGCAGGUGGGAGCAUUUCAGAGCGCACAAGCC\
) } def
/len { sequence length } bind def

/coor [
[-26.44512558 114.53457642]
[-31.44222260 128.67773438]
[-36.43931961 142.82090759]
[-32.64416885 160.82893372]
[-46.39158630 171.72087097]
[-51.14780045 185.94683838]
[-55.90401459 200.17282104]
[-52.10234451 216.12522888]
[-64.20100403 227.19566345]
[-79.75392914 221.99580383]
[-82.76160431 205.87483215]
[-70.12998962 195.41661072]
[-65.37377930 181.19062805]
[-60.61756134 166.96466064]
[-65.73758698 155.98928833]
[-61.87401962 144.08876038]
[-50.58248138 137.82380676]
[-45.58538437 123.68064117]
[-40.58828735 109.53748322]
[-55.32926178 95.38528442]
[-61.64396286 75.95063019]
[-58.03671646 55.83673096]
[-70.39259338 47.33189392]
[-82.74847412 38.82705688]
[-95.10435486 30.32221794]
[-107.46022797 21.81737900]
[-119.81610870 13.31254101]
[-132.17198181 4.80770302]
[-144.52786255 -3.69713521]
[-156.88374329 -12.20197392]
[-169.38226318 -20.49577332]
[-182.01980591 -28.57614326]
[-197.81451416 -29.49147606]
[-204.36926270 -42.86624527]
[-217.00680542 -50.94661713]
[-236.34597778 -45.57783127]
[-253.15931702 -55.97081375]
[-256.88635254 -75.07247162]
[-272.70718384 -75.18230438]
[-279.93450928 -88.20593262]
[-292.96713257 -95.63228607]
[-305.99975586 -103.05863190]
[-319.03237915 -110.48497772]
[-332.06500244 -117.91133118]
[-345.09762573 -125.33767700]
[-358.19284058 -132.65310669]
[-371.34970093 -139.85707092]
[-384.50656128 -147.06105042]
[-397.66342163 -154.26501465]
[-410.82025146 -161.46899414]
[-424.80340576 -155.00540161]
[-439.73672485 -157.98013306]
[-449.93435669 -169.04684448]
[-451.63964844 -183.81945801]
[-464.79650879 -191.02342224]
[-477.95336914 -198.22740173]
[-491.11019897 -205.43138123]
[-504.26705933 -212.63534546]
[-517.42388916 -219.83932495]
[-534.22064209 -222.14291382]
[-536.65686035 -238.92091370]
[-521.20898438 -245.90653992]
[-510.21994019 -232.99617004]
[-497.06307983 -225.79220581]
[-483.90625000 -218.58822632]
[-470.74938965 -211.38426208]
[-457.59252930 -204.18028259]
[-444.43566895 -196.97630310]
[-431.07107544 -203.49748230]
[-416.25396729 -200.86747742]
[-405.70327759 -189.88856506]
[-403.61630249 -174.62583923]
[-390.45944214 -167.42187500]
[-377.30258179 -160.21789551]
[-364.14572144 -153.01393127]
[-350.98889160 -145.80995178]
[-343.59500122 -145.35424805]
[-337.67129517 -138.37030029]
[-324.63867188 -130.94395447]
[-311.60604858 -123.51760864]
[-298.57342529 -116.09125519]
[-285.54077148 -108.66490936]
[-272.50814819 -101.23856354]
[-257.61950684 -101.65991211]
[-249.46000671 -88.10509491]
[-240.62144470 -93.40203094]
[-230.29985046 -94.54925537]
[-220.36024475 -91.27175903]
[-212.62681580 -84.10019684]
[-208.54820251 -74.28617096]
[-208.92643738 -63.58416367]
[-196.28889465 -55.50379562]
[-181.39811707 -55.16642380]
[-173.93943787 -41.21369171]
[-161.30189514 -33.13331985]
[-156.50723267 -33.27252579]
[-151.57865906 -30.38562775]
[-148.37890625 -24.55785179]
[-136.02302551 -16.05301285]
[-123.66715240 -7.54817533]
[-111.31127167 0.95666319]
[-98.95539093 9.46150112]
[-86.59951782 17.96633911]
[-74.24363708 26.47117805]
[-61.88775635 34.97601700]
[-49.53187943 43.48085403]
[-35.84034729 34.17845535]
[-19.57644081 30.87337685]
[-3.25450134 34.11092377]
[10.58888721 43.42226791]
[19.78909492 57.39200592]
[22.89190292 73.87322998]
[37.60678101 76.78396606]
[52.32165527 79.69470978]
[67.03652954 82.60544586]
[81.75141144 85.51618195]
[96.46628571 88.42692566]
[111.37500000 86.77458191]
[125.09539795 80.71233368]
[138.81579590 74.65009308]
[152.48422241 68.47157288]
[166.09968567 62.17722702]
[179.71516418 55.88287735]
[193.33064270 49.58852386]
[205.17060852 37.45380402]
[220.10873413 45.47183609]
[216.53933716 62.04578400]
[199.62498474 63.20399857]
[186.00952148 69.49835205]
[172.39404297 75.79270172]
[158.77856445 82.08705139]
[154.01553345 87.76071167]
[144.87803650 88.37049103]
[131.15763855 94.43273163]
[117.43724060 100.49497223]
[117.94629669 107.97767639]
[131.41590881 114.57839203]
[118.96440887 122.94308472]
[119.47346497 130.42579651]
[133.88848877 134.57394409]
[148.30349731 138.72210693]
[162.71852112 142.87026978]
[177.13354492 147.01843262]
[191.54855347 151.16659546]
[206.22686768 144.69151306]
[220.37368774 152.25767517]
[223.13679504 168.06100464]
[212.39656067 179.97850037]
[196.39198303 178.86811829]
[187.40039062 165.58161926]
[172.98538208 161.43345642]
[158.57035828 157.28529358]
[144.15533447 153.13713074]
[129.74032593 148.98896790]
[115.32530212 144.84080505]
[107.56942749 157.68005371]
[117.94850922 168.50939941]
[128.32759094 179.33874512]
[138.70668030 190.16809082]
[149.08575439 200.99742126]
[164.97499084 205.05505371]
[169.14448547 220.91529846]
[157.30502319 232.26249695]
[141.63603210 227.42362976]
[138.25642395 211.37651062]
[127.87733459 200.54716492]
[117.49825287 189.71781921]
[107.11917114 178.88848877]
[96.74008942 168.05914307]
[81.19082642 143.95967102]
[81.04534149 119.91317749]
[93.55554962 103.14179993]
[78.84066772 100.23106384]
[64.12579346 97.32032013]
[49.41091537 94.40958405]
[34.69604111 91.49884033]
[19.98116302 88.58810425]
[17.13313103 94.35114288]
[13.45698261 99.61106873]
[9.03912258 104.25009918]
[3.98251438 108.16497040]
[-1.59571779 111.26924133]
[-7.56700134 113.49520111]
[-13.79427719 114.79531860]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[5 14]
[6 13]
[7 12]
[22 106]
[23 105]
[24 104]
[25 103]
[26 102]
[27 101]
[28 100]
[29 99]
[30 98]
[31 95]
[32 94]
[34 92]
[35 91]
[38 85]
[40 83]
[41 82]
[42 81]
[43 80]
[44 79]
[45 78]
[46 76]
[47 75]
[48 74]
[49 73]
[50 72]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[59 63]
[112 177]
[113 176]
[114 175]
[115 174]
[116 173]
[117 172]
[118 135]
[119 134]
[120 133]
[121 131]
[122 130]
[123 129]
[124 128]
[139 155]
[140 154]
[141 153]
[142 152]
[143 151]
[144 150]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
