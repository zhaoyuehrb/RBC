%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGCGGCGCCGAGUCUGCGGGUCCUCCCGCCAGCCCGGCCGGAGGCAGCCGAGGCCGCUCGGGCGGCGGCGGCGGCGGCGGCGGGAGCCGGAGCGCAUCUCGCCCAGGAGCCGGAGCAGCGGCACUGCCUGAACCAGACAGCAGCCUUGGGUGCAGGCGUGGUCAUGAGGGCAG\
) } def
/len { sequence length } bind def

/coor [
[312.81060791 338.03033447]
[310.76589966 334.58352661]
[309.85839844 330.26205444]
[299.44281006 319.46783447]
[289.02722168 308.67358398]
[278.61163330 297.87936401]
[268.19604492 287.08514404]
[253.79067993 283.29898071]
[249.77609253 267.99557495]
[239.36050415 257.20135498]
[228.94490051 246.40711975]
[218.52931213 235.61289978]
[203.82929993 237.85961914]
[190.46701050 230.93769836]
[183.66325378 217.31556702]
[186.21472168 202.12359619]
[175.79913330 191.32936096]
[161.39378357 187.54319763]
[157.37919617 172.23980713]
[146.96359253 161.44557190]
[136.54800415 150.65135193]
[122.14264679 146.86517334]
[118.12805939 131.56179810]
[107.71246338 120.76756287]
[97.29687500 109.97333527]
[85.13021851 101.19993591]
[71.59913635 94.72615814]
[58.06804657 88.25238800]
[44.53696442 81.77861786]
[31.00587845 75.30484009]
[17.47479248 68.83106995]
[3.94370770 62.35729599]
[-5.18079805 61.46995163]
[-9.76954651 55.64531326]
[-23.18292618 48.93105316]
[-36.59630585 42.21679688]
[-50.06907272 35.62251663]
[-65.85713196 36.64617538]
[-73.99874878 24.17367363]
[-87.52983093 17.69990158]
[-101.06091309 11.22612762]
[-114.59200287 4.75235462]
[-129.33680725 9.77514172]
[-142.96702576 3.01705980]
[-147.66462708 -11.07081509]
[-163.45268250 -10.04715633]
[-171.59429932 -22.51965904]
[-186.33911133 -17.49687195]
[-199.96932983 -24.25495338]
[-204.66691589 -38.34282684]
[-218.19801331 -44.81660080]
[-231.72909546 -51.29037476]
[-245.26017761 -57.76414871]
[-258.79125977 -64.23792267]
[-275.09066772 -62.43193817]
[-284.58505249 -75.80311584]
[-277.50744629 -90.59632874]
[-261.13864136 -91.59359741]
[-252.31748962 -77.76900482]
[-238.78640747 -71.29523468]
[-225.25532532 -64.82145691]
[-211.72422791 -58.34768677]
[-198.19314575 -51.87391281]
[-184.27615356 -57.05587769]
[-170.46148682 -50.68330765]
[-165.12052917 -36.05074310]
[-150.30030823 -37.53744888]
[-141.19085693 -24.60190010]
[-127.27385712 -29.78386497]
[-113.45919037 -23.41129303]
[-108.11822510 -8.77873039]
[-94.58714294 -2.30495715]
[-81.05606079 4.16881561]
[-67.52497101 10.64258862]
[-52.70475006 9.15588188]
[-43.59529877 22.09143257]
[-36.18041611 22.14199638]
[-29.88204575 28.80341721]
[-16.46866798 35.51767349]
[-3.05528808 42.23193359]
[10.41748047 48.82621002]
[23.94856644 55.29998398]
[37.47965240 61.77375793]
[51.01073456 68.24752808]
[64.54182434 74.72130585]
[78.07290649 81.19507599]
[91.60398865 87.66884613]
[98.58321381 84.92285919]
[100.80620575 70.08849335]
[112.54165649 79.43087769]
[119.52087402 76.68488312]
[125.01285553 62.72644043]
[125.24700928 53.56188202]
[130.72944641 48.56930161]
[136.46969604 34.71110535]
[142.20994568 20.85291481]
[137.42367554 5.54046679]
[146.53021240 -7.66749907]
[162.54382324 -8.63896275]
[173.18023682 3.37130070]
[170.28009033 19.15004349]
[156.06814575 26.59316635]
[150.32789612 40.45135880]
[144.58764648 54.30955124]
[138.97129822 68.21842194]
[133.47932434 82.17686462]
[122.17000580 93.81881714]
[108.09110260 99.55773926]
[118.50669861 110.35196686]
[128.92228699 121.14619446]
[144.07263184 125.70443726]
[147.34222412 140.23574829]
[157.75782776 151.02998352]
[168.17341614 161.82420349]
[183.32376099 166.38244629]
[186.59335327 180.91377258]
[197.00895691 191.70799255]
[212.28231812 189.70037842]
[225.65292358 196.98600769]
[232.09350586 210.58685303]
[229.32353210 225.19729614]
[239.73913574 235.99153137]
[250.15472412 246.78575134]
[260.57031250 257.57998657]
[275.72067261 262.13824463]
[278.99026489 276.66955566]
[289.40585327 287.46377563]
[299.82144165 298.25799561]
[310.23706055 309.05221558]
[320.65264893 319.84646606]
[331.44686890 330.26205444]
[342.60598755 340.28573608]
[358.16860962 339.62051392]
[369.34274292 349.94491577]
[369.88101196 364.78558350]
[381.12915039 374.70928955]
[392.46539307 384.53219604]
[403.88885498 394.25354004]
[415.39862061 403.87255859]
[426.90838623 413.49154663]
[442.45916748 416.40417480]
[447.26336670 430.50274658]
[458.77313232 440.12173462]
[467.39477539 443.23806763]
[470.40051270 450.01660156]
[481.73675537 459.83950806]
[493.07299805 469.66241455]
[504.40924072 479.48535156]
[512.97387695 482.75506592]
[515.85815430 489.58618164]
[532.00610352 492.44540405]
[537.34881592 507.94982910]
[526.39013672 520.14984131]
[510.40344238 516.49505615]
[505.83444214 500.74526978]
[494.58633423 490.82159424]
[483.25009155 480.99865723]
[471.91381836 471.17575073]
[460.57757568 461.35284424]
[449.15414429 451.63150024]
[437.64434814 442.01251221]
[422.91683960 439.78787231]
[417.28936768 425.00131226]
[405.77960205 415.38232422]
[394.26983643 405.76330566]
[387.09780884 403.88058472]
[382.64248657 395.86843872]
[371.30624390 386.04553223]
[364.16894531 384.03506470]
[359.85733032 375.94470215]
[345.04415894 376.99588013]
[333.58444214 366.98941040]
[332.58230591 351.44485474]
[321.42318726 341.42117310]
[318.58938599 341.45501709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 130]
[4 129]
[5 128]
[6 127]
[7 126]
[9 124]
[10 123]
[11 122]
[12 121]
[16 117]
[17 116]
[19 114]
[20 113]
[21 112]
[23 110]
[24 109]
[25 108]
[26 87]
[27 86]
[28 85]
[29 84]
[30 83]
[31 82]
[32 81]
[34 80]
[35 79]
[36 78]
[37 76]
[39 74]
[40 73]
[41 72]
[42 71]
[45 68]
[47 66]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[91 106]
[92 105]
[94 104]
[95 103]
[96 102]
[131 174]
[132 173]
[135 170]
[136 168]
[137 167]
[138 165]
[139 164]
[140 163]
[142 161]
[143 160]
[145 159]
[146 158]
[147 157]
[148 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
