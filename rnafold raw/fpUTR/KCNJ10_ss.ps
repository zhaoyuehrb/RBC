%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUUUGGCUCCGGCGCUGCGGAGGGAGGGGGCGGCCCGGCCCGGCCCAGCUCUGCCCCCGGCCGGCCCGACCCCGGCCCCGGCCCCCGGACAAGCCCUUAUCUGAUCCCAGCUCCGGGUUUAAGAGUCCUGGCCCGGCCCGUCGCACAGCUCUGCUCCUAACUCCUGCCCGCCCCGUCCGUCCAUCUGUCCCGCUGCCCCGCGGCCCAUCCAAGGGGCCACUCCACCUCGGACCCAAG\
) } def
/len { sequence length } bind def

/coor [
[270.78036499 510.35842896]
[285.73220825 511.55960083]
[298.74249268 519.01837158]
[310.76837158 527.98376465]
[304.51290894 514.35034180]
[290.50234985 509.42697144]
[283.96420288 495.68988037]
[289.22329712 481.02770996]
[282.96783447 467.39431763]
[276.71237183 453.76095581]
[262.70181274 448.83752441]
[256.16366577 435.10046387]
[261.42279053 420.43829346]
[255.16731262 406.80490112]
[248.91183472 393.17150879]
[236.57179260 384.83050537]
[237.84906006 369.06094360]
[231.59359741 355.42755127]
[215.39537048 352.70745850]
[203.90040588 340.74340820]
[201.78805542 324.11938477]
[210.08871460 309.37078857]
[203.65606689 295.82009888]
[197.22341919 282.26940918]
[184.77569580 274.08996582]
[185.84729004 258.30508423]
[179.41464233 244.75440979]
[172.98197937 231.20373535]
[160.53425598 223.02427673]
[161.60586548 207.23939514]
[155.17320251 193.68872070]
[148.74055481 180.13803101]
[142.30790710 166.58735657]
[135.87524414 153.03666687]
[129.44259644 139.48599243]
[123.00994110 125.93531036]
[94.20332336 130.80255127]
[75.06159973 112.76432037]
[60.36674881 115.77452850]
[45.67189789 118.78474426]
[30.97704887 121.79495239]
[16.28219795 124.80516052]
[1.58734691 127.81536865]
[-12.89699173 141.85447693]
[-30.95239830 134.90185547]
[-45.56378174 138.29411316]
[-60.17516708 141.68637085]
[-66.09632874 156.02928162]
[-79.33480072 164.12388611]
[-94.80012512 162.85760498]
[-106.54556274 152.71737671]
[-110.05475616 137.60231018]
[-103.97834778 123.32446289]
[-90.65284729 115.37396240]
[-75.20217133 116.80792999]
[-63.56742477 127.07498169]
[-48.95603943 123.68272400]
[-34.34465408 120.29046631]
[-29.75661469 111.18782806]
[-20.73121262 105.99462891]
[-10.11795425 106.62822723]
[-1.42286265 113.12052155]
[13.27198792 110.11030579]
[27.96683884 107.10009766]
[42.66168976 104.08988953]
[57.35654068 101.07968140]
[72.05139160 98.06947327]
[73.88680267 89.85345459]
[78.08021545 82.55365753]
[84.25297546 76.82926178]
[79.45067596 62.61877823]
[74.64837646 48.40829086]
[69.84607697 34.19780731]
[59.85752487 29.95714378]
[53.96367264 21.10811996]
[53.90316772 10.69545555]
[59.45516968 2.14657354]
[55.02494431 -12.18427086]
[50.59471893 -26.51511574]
[46.16449738 -40.84596252]
[35.15233994 -47.53578186]
[31.75031471 -59.54769135]
[37.25503922 -70.30490112]
[33.01200104 -84.69228363]
[28.76895714 -99.07965851]
[24.52591705 -113.46703339]
[14.71079636 -118.09497833]
[9.16742134 -127.16766357]
[9.51406765 -137.57473755]
[15.39605999 -145.90000916]
[11.52951622 -160.39311218]
[7.66297197 -174.88619995]
[3.79642797 -189.37930298]
[-0.44661337 -203.76667786]
[-5.06326771 -218.03855896]
[-9.67992210 -232.31044006]
[-14.29657650 -246.58230591]
[-18.91323090 -260.85418701]
[-23.52988625 -275.12606812]
[-38.46500778 -278.42599487]
[-49.66915131 -288.69067383]
[-54.20095444 -303.08959961]
[-50.93885803 -317.72567749]
[-40.85668564 -328.68994141]
[-45.47333908 -342.96182251]
[-50.08999252 -357.23370361]
[-62.61857224 -367.81515503]
[-59.45315170 -383.90588379]
[-43.85004425 -388.95318604]
[-31.86038780 -377.76477051]
[-35.81811523 -361.85037231]
[-31.20146179 -347.57849121]
[-26.58480644 -333.30661011]
[-11.99124241 -330.32443237]
[-0.77519202 -320.37173462]
[3.98464823 -306.04656982]
[0.91493040 -291.16458130]
[-9.25800800 -279.74273682]
[-4.64135361 -265.47085571]
[-0.02469894 -251.19897461]
[4.59195566 -236.92709351]
[9.20861053 -222.65521240]
[13.82526493 -208.38333130]
[16.23481369 -206.98864746]
[18.24291039 -204.56510925]
[19.45845985 -201.25881958]
[19.54964828 -197.35342407]
[18.28952408 -193.24584961]
[22.15606880 -178.75274658]
[26.02261162 -164.25965881]
[29.88915634 -149.76655579]
[44.50629807 -137.09075928]
[38.91329193 -117.71007538]
[43.15633392 -103.32270050]
[47.39937592 -88.93531799]
[51.64241791 -74.54794312]
[64.99117279 -63.14271545]
[60.49534225 -45.27618408]
[64.92556763 -30.94534111]
[69.35578918 -16.61449623]
[73.78601074 -2.28365064]
[88.88756561 9.81097031]
[84.05656433 29.39550591]
[88.85886383 43.60599136]
[93.66116333 57.81647873]
[98.46346283 72.02696228]
[107.27987671 71.22744751]
[116.39611816 73.28733826]
[124.86706543 78.29496765]
[131.72938538 86.02346802]
[143.22703552 76.38997650]
[154.72468567 66.75648499]
[162.98237610 51.94950104]
[179.49665833 55.78549576]
[180.38217163 72.71630096]
[164.35816956 78.25413513]
[152.86051941 87.88761902]
[141.36288452 97.52111053]
[156.07154846 94.57919312]
[168.80041504 86.64344025]
[183.74130249 85.31314850]
[197.67198181 90.87520599]
[207.58802795 102.13007355]
[211.35089111 116.65042877]
[208.14903259 131.30471802]
[198.67301941 142.93247986]
[184.96647644 149.02600098]
[169.98548889 148.27108765]
[156.96095276 140.83056641]
[148.70234680 128.31051636]
[136.56062317 119.50265503]
[142.99327087 133.05334473]
[149.42593384 146.60401917]
[155.85858154 160.15470886]
[162.29122925 173.70538330]
[168.72389221 187.25607300]
[175.15653992 200.80674744]
[188.06436157 209.95544434]
[186.53266907 224.77107239]
[192.96531677 238.32176208]
[199.39796448 251.87243652]
[212.30580139 261.02111816]
[210.77409363 275.83676147]
[217.20674133 289.38745117]
[223.63940430 302.93814087]
[237.32768250 304.45666504]
[248.39346313 312.47262573]
[254.01319885 324.80877686]
[252.81837463 338.20330811]
[245.22697449 349.17208862]
[251.48243713 362.80545044]
[264.26992798 372.12164307]
[262.54522705 386.91604614]
[268.80068970 400.54943848]
[275.05615234 414.18280029]
[289.60098267 419.75823975]
[295.75070190 433.67355347]
[290.34576416 447.50546265]
[296.60122681 461.13885498]
[302.85668945 474.77224731]
[317.40151978 480.34768677]
[323.55123901 494.26296997]
[318.14627075 508.09487915]
[324.40176392 521.72827148]
[332.62319946 534.27447510]
[342.62622070 545.45214844]
[352.62921143 556.62982178]
[362.63223267 567.80743408]
[372.63522339 578.98510742]
[388.25805664 578.30609131]
[400.63076782 587.86907959]
[403.91131592 603.15863037]
[396.55075073 616.95562744]
[382.02450562 622.74542236]
[367.19140625 617.79431152]
[359.05520630 604.44006348]
[361.45758057 588.98809814]
[351.45455933 577.81048584]
[341.45156860 566.63281250]
[331.44854736 555.45513916]
[321.44555664 544.27752686]
[314.94223022 548.01336670]
[301.93557739 555.48516846]
[295.43225098 559.22100830]
[300.04891968 573.49291992]
[304.66555786 587.76477051]
[318.23858643 596.31768799]
[319.87100220 612.27752686]
[308.31054688 623.40118408]
[292.42544556 621.15557861]
[284.40136719 607.26336670]
[290.39367676 592.38140869]
[285.77703857 578.10955811]
[281.16036987 563.83770752]
[278.36956787 578.57574463]
[263.51361084 576.50213623]
[250.95945740 568.29278564]
[243.10339355 555.51458740]
[241.44487000 540.60656738]
[246.30046082 526.41418457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 204]
[5 203]
[8 200]
[9 199]
[10 198]
[13 195]
[14 194]
[15 193]
[17 191]
[18 190]
[22 185]
[23 184]
[24 183]
[26 181]
[27 180]
[28 179]
[30 177]
[31 176]
[32 175]
[33 174]
[34 173]
[35 172]
[36 171]
[38 67]
[39 66]
[40 65]
[41 64]
[42 63]
[43 62]
[45 58]
[46 57]
[47 56]
[70 146]
[71 145]
[72 144]
[73 143]
[77 141]
[78 140]
[79 139]
[80 138]
[83 136]
[84 135]
[85 134]
[86 133]
[90 131]
[91 130]
[92 129]
[93 128]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
[104 113]
[105 112]
[106 111]
[150 158]
[151 157]
[152 156]
[205 221]
[206 220]
[207 219]
[208 218]
[209 217]
[224 234]
[225 233]
[226 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
