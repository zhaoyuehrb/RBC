%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACUGCCUGGAAGUGUGGGGUGAGAGCUCCUCCUAGGACACCCCUUUCCCCUUGGGGAAAGAAUUGUGCCCCCAGGCCCUUCCCCGCGGAGGUCCCUCUCCUCCUUCCCCCUCAUCUCCCCUUCCUGGGACAGAAAGUGCCUCCACCUGCAUCCCCAGGGGCCCGGCCUCCAGGGCCCGCUGGCCCCACAGCAGGCAAGCUGAG\
) } def
/len { sequence length } bind def

/coor [
[91.60509491 413.03158569]
[90.92237091 398.04711914]
[90.23965454 383.06265259]
[81.51902008 374.67666626]
[80.82936859 362.19635010]
[89.08520508 352.28390503]
[88.62997437 337.29080200]
[88.17474365 322.29769897]
[87.71950531 307.30462646]
[87.26427460 292.31152344]
[86.80903625 277.31845093]
[79.43406677 272.36465454]
[75.10122681 264.45135498]
[74.89423370 255.29425049]
[78.98607635 246.94609070]
[86.57190704 241.33647156]
[86.79955292 226.33819580]
[87.02719116 211.33993530]
[87.25483704 196.34165955]
[87.48247528 181.34338379]
[87.71012115 166.34510803]
[87.93776703 151.34683228]
[54.26657486 114.57695770]
[67.56407928 71.38183594]
[53.43016434 66.35864258]
[39.29624939 61.33544540]
[25.16233444 56.31225204]
[11.02842140 51.28905869]
[-4.62746763 59.09033585]
[-20.76444244 53.27115250]
[-27.56464386 37.89102173]
[-41.77316284 33.08290482]
[-55.98168182 28.27478790]
[-70.19020081 23.46667099]
[-84.39871979 18.65855408]
[-98.43655396 25.40962791]
[-112.77751923 20.33110809]
[-119.12712097 6.90657520]
[-133.33564758 2.09845829]
[-164.64784241 17.33886337]
[-179.59562683 16.08823395]
[-194.54339600 14.83760262]
[-204.70480347 26.41567993]
[-219.56167603 29.75134850]
[-233.37059021 23.76988792]
[-240.91914368 10.95749760]
[-255.86691284 9.70686722]
[-270.81469727 8.45623589]
[-285.76245117 7.20560598]
[-300.71023560 5.95497513]
[-315.65802002 4.70434475]
[-330.60577393 3.45371413]
[-345.20346069 10.92634964]
[-358.82495117 1.79472780]
[-357.45767212 -14.54732132]
[-342.50814819 -21.28849792]
[-329.35516357 -11.49405861]
[-314.40737915 -10.24342823]
[-299.45959473 -8.99279785]
[-284.51184082 -7.74216747]
[-269.56405640 -6.49153709]
[-254.61628723 -5.24090624]
[-239.66851807 -3.99027586]
[-230.09587097 -15.37019348]
[-215.48500061 -18.97386360]
[-201.38897705 -13.21580315]
[-193.29277039 -0.11017061]
[-178.34498596 1.14045990]
[-163.39721680 2.39109039]
[-157.73593140 -11.49954700]
[-169.29942322 -21.05388832]
[-180.86293030 -30.60823059]
[-197.11518860 -32.79823303]
[-203.09358215 -48.06882477]
[-192.64804077 -60.71092606]
[-176.52404785 -57.71943283]
[-171.30859375 -42.17173004]
[-159.74508667 -32.61738968]
[-148.18157959 -23.06304741]
[-150.06286621 -37.94460678]
[-141.47940063 -50.24599838]
[-126.86286926 -53.61598587]
[-113.75980377 -46.31463623]
[-108.93534851 -32.11165619]
[-114.88038635 -18.34007263]
[-128.52752686 -12.11006069]
[-114.31900787 -7.30194426]
[-101.12208557 -14.11199474]
[-86.64413452 -9.43828678]
[-79.59060669 4.45003557]
[-65.38208771 9.25815201]
[-51.17356491 14.06626892]
[-36.96504593 18.87438583]
[-22.75652695 23.68250275]
[-12.11627769 16.41190147]
[0.96403396 16.60103035]
[11.70458794 24.40490341]
[16.05161476 37.15514374]
[30.18552971 42.17833710]
[44.31944275 47.20153427]
[58.45335770 52.22472763]
[72.58727264 57.24792099]
[62.59184265 46.06349564]
[49.02651215 39.66178513]
[39.09046555 28.42457199]
[34.39792252 14.17746639]
[35.71124268 -0.76492983]
[42.81705856 -13.97505379]
[54.56095123 -23.30677223]
[69.03499603 -27.24404144]
[83.88771820 -25.14720726]
[96.70612335 -17.35692406]
[105.40771484 -5.13881302]
[108.57882690 9.52215767]
[105.70427704 24.24414635]
[97.25091553 36.63553238]
[94.29834747 51.34207535]
[103.94016266 39.85140610]
[113.58197784 28.36074066]
[116.35630798 10.15823650]
[133.06620789 4.80105782]
[142.53253174 -6.83461142]
[151.99884033 -18.47028160]
[151.79515076 -34.51203918]
[164.30085754 -44.56125641]
[179.92266846 -40.90903091]
[186.67684937 -26.35703659]
[179.38218689 -12.06832027]
[163.63452148 -9.00396156]
[154.16819763 2.63170767]
[144.70187378 14.26737690]
[145.62619019 26.33053970]
[137.83213806 36.10228348]
[125.07264709 38.00255585]
[115.43083191 49.49322128]
[105.78901672 60.98389053]
[109.83075714 67.30166626]
[117.91423798 79.93722534]
[121.95597839 86.25500488]
[136.43002319 82.31777954]
[150.90408325 78.38054657]
[165.37812805 74.44331360]
[170.75784302 59.88864517]
[183.68379211 51.30381012]
[199.18569946 51.98984909]
[211.30274963 61.68296814]
[215.37570190 76.65596771]
[209.83842468 91.15142059]
[196.82009888 99.59552765]
[181.32655334 98.74136353]
[169.31536865 88.91736603]
[154.84130859 92.85459900]
[140.36726379 96.79183197]
[125.89320374 100.72905731]
[125.09792328 108.18677521]
[123.50736237 123.10221100]
[122.71207428 130.55992126]
[136.03034973 137.46089172]
[149.34863281 144.36187744]
[162.66691589 151.26284790]
[176.03717041 158.06256104]
[189.45864868 164.76062012]
[202.88012695 171.45867920]
[216.30158997 178.15673828]
[229.72306824 184.85479736]
[243.14454651 191.55285645]
[256.84841919 184.27389526]
[272.20883179 186.47335815]
[283.31936646 197.30551147]
[285.90780640 212.60516357]
[278.97888184 226.48930359]
[265.19683838 233.61917114]
[249.86119080 231.25321960]
[238.86882019 220.30117798]
[236.44648743 204.97433472]
[223.02500916 198.27627563]
[209.60353088 191.57821655]
[196.18206787 184.88015747]
[182.76058960 178.18209839]
[169.33911133 171.48403931]
[161.94813538 171.30993652]
[155.76593018 164.58113098]
[142.44766235 157.68016052]
[129.12937927 150.77917480]
[115.81110382 143.87820435]
[102.93603516 151.57447815]
[102.70839691 166.57275391]
[102.48075104 181.57102966]
[102.25310516 196.56930542]
[102.02546692 211.56756592]
[101.79782104 226.56584167]
[101.57018280 241.56411743]
[113.12448120 259.60919189]
[101.80213165 276.86318970]
[102.25736237 291.85629272]
[102.71260071 306.84939575]
[103.16783142 321.84246826]
[103.62306213 336.83557129]
[104.07830048 351.82864380]
[114.12627411 367.25805664]
[105.22410583 382.37994385]
[105.90682983 397.36441040]
[106.58954620 412.34884644]
[115.87800598 425.86389160]
[108.57460022 440.54696655]
[92.19245148 441.29336548]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[6 199]
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[16 192]
[17 191]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[24 102]
[25 101]
[26 100]
[27 99]
[28 98]
[31 94]
[32 93]
[33 92]
[34 91]
[35 90]
[38 87]
[39 86]
[40 69]
[41 68]
[42 67]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[70 79]
[71 78]
[72 77]
[117 136]
[118 135]
[119 134]
[121 131]
[122 130]
[123 129]
[139 154]
[140 153]
[141 152]
[142 151]
[157 185]
[158 184]
[159 183]
[160 182]
[161 180]
[162 179]
[163 178]
[164 177]
[165 176]
[166 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
