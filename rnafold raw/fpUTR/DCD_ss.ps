%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCAGCCUUUGUUGACUUAACAGGUGGCUCUGAGGUGGGAGAAGAGGAGGAGGAGAACACACCACUGGAAGACUGGUUCCCAUUGGUCCCUGUCAUGCUUAAAAAAAGGCCCAGAGAGGCAGUCUUGACACCCUAGAUCCCAAGAUCUCCAAGGAUUUGGUGGCAUACCCACUCCAGCACACAGAAGC\
) } def
/len { sequence length } bind def

/coor [
[-97.57662964 503.87573242]
[-110.92877197 497.04049683]
[-115.68164825 482.81356812]
[-123.42952728 495.65765381]
[-131.17741394 508.50173950]
[-138.92529297 521.34582520]
[-140.68341064 530.32720947]
[-146.90771484 534.33593750]
[-154.86579895 547.05084229]
[-162.82388306 559.76574707]
[-163.44311523 566.37579346]
[-166.81095886 570.97998047]
[-171.25865173 572.76196289]
[-179.63063049 585.20825195]
[-188.00260925 597.65447998]
[-196.37458801 610.10076904]
[-200.19793701 626.61798096]
[-217.12806702 627.51647949]
[-222.67814636 611.49670410]
[-208.82086182 601.72882080]
[-200.44888306 589.28253174]
[-192.07690430 576.83624268]
[-183.70492554 564.38995361]
[-175.53878784 551.80767822]
[-167.58070374 539.09277344]
[-159.62261963 526.37786865]
[-151.76937866 513.59790039]
[-144.02148438 500.75384521]
[-136.27360535 487.90975952]
[-128.52572632 475.06570435]
[-121.42079926 461.85510254]
[-114.97612762 448.31011963]
[-108.53145599 434.76516724]
[-102.08677673 421.22018433]
[-105.83925629 409.70916748]
[-100.56711578 398.36627197]
[-88.60556793 393.51123047]
[-81.93898773 380.07409668]
[-75.27240753 366.63693237]
[-80.42047119 360.44314575]
[-83.53069305 352.97738647]
[-84.30921173 344.89328003]
[-82.66729736 336.90499878]
[-78.73089600 329.72406006]
[-72.83123016 323.99609375]
[-65.47701263 320.24273682]
[-57.31059647 318.81411743]
[-49.05187225 319.85635376]
[-41.09378815 307.14144897]
[-33.13570023 294.42654419]
[-25.17761612 281.71163940]
[-28.75743675 267.29910278]
[-20.86793327 254.29103088]
[-5.72649431 250.63389587]
[2.23159194 237.91899109]
[-5.74221516 226.55534363]
[-8.78915977 212.96730042]
[-6.41643953 199.20146179]
[1.04987645 187.34419250]
[12.50920868 179.20536804]
[26.24859810 176.04211426]
[40.19872665 178.36477661]
[48.36486053 165.78247070]
[56.53099823 153.20018005]
[64.69713593 140.61787415]
[72.86327362 128.03558350]
[63.20996857 112.99574280]
[61.27483368 95.22953796]
[67.46383667 78.46412659]
[80.47859192 66.21671295]
[97.58873749 61.05668640]
[99.55682373 46.18635941]
[101.52490997 31.31603050]
[103.49298859 16.44570351]
[105.46107483 1.57537615]
[107.42916107 -13.29495144]
[109.39724731 -28.16527939]
[103.53749084 -42.86132812]
[112.87779236 -54.46339798]
[114.84587860 -69.33372498]
[116.81396484 -84.20405579]
[109.69776154 -92.45847321]
[108.33679962 -103.05002594]
[112.94171143 -112.44056702]
[121.77020264 -117.62673187]
[124.22631836 -132.42428589]
[126.68242645 -147.22183228]
[129.13853455 -162.01937866]
[122.27915192 -172.95552063]
[124.64068604 -185.23883057]
[134.41908264 -192.37800598]
[137.11824036 -207.13314819]
[139.81739807 -221.88830566]
[126.86686707 -229.80334473]
[117.65319824 -241.86456299]
[113.42247772 -256.44076538]
[114.74687195 -271.56060791]
[121.44726562 -285.17932129]
[132.61749268 -295.45504761]
[146.74687195 -300.99807739]
[161.92449951 -301.05877686]
[176.09776306 -295.62893677]
[187.34980774 -285.44287109]
[194.15892029 -271.87820435]
[195.60420227 -256.76940918]
[191.49018860 -242.15983582]
[182.37327576 -230.02531433]
[169.48645020 -222.00695801]
[154.57255554 -219.18914795]
[151.87339783 -204.43399048]
[149.17424011 -189.67883301]
[155.95744324 -173.50166321]
[143.93608093 -159.56327820]
[141.47998047 -144.76571655]
[139.02386475 -129.96817017]
[136.56774902 -115.17062378]
[144.68176270 -97.63011932]
[131.68429565 -82.23596954]
[129.71620178 -67.36563873]
[127.74812317 -52.49531174]
[133.74864197 -38.86288834]
[124.26757050 -26.19719505]
[122.29948425 -11.32686710]
[120.33140564 3.54346085]
[118.36331940 18.41378784]
[116.39523315 33.28411484]
[114.42714691 48.15444183]
[112.45906830 63.02477264]
[119.04755402 65.94729614]
[124.98606873 70.03181458]
[130.07197571 75.13895416]
[134.13172913 81.09442902]
[137.02679443 87.69503021]
[138.65837097 94.71552277]
[153.63352966 95.57856750]
[168.60867310 96.44161987]
[183.60057068 96.93497467]
[198.60005188 97.05833435]
[213.59954834 97.18169403]
[228.59904480 97.30505371]
[243.59854126 97.42841339]
[257.59310913 88.87950897]
[271.86257935 96.96126556]
[271.72769165 113.35985565]
[257.32727051 121.20582581]
[243.47517395 112.42790222]
[228.47567749 112.30454254]
[213.47619629 112.18118286]
[198.47669983 112.05782318]
[183.47720337 111.93446350]
[180.71272278 114.14884949]
[176.73269653 115.12512207]
[172.13499451 114.30410767]
[167.74563599 111.41677094]
[152.77047729 110.55371857]
[137.79533386 109.69067383]
[130.42472839 124.42809296]
[117.62792206 134.80879211]
[101.68720245 138.98139954]
[85.44557190 136.20172119]
[77.27943420 148.78401184]
[69.11329651 161.36631775]
[60.94715881 173.94860840]
[52.78102493 186.53091431]
[61.34340668 200.35693359]
[63.01729965 216.47473145]
[57.51838303 231.65582275]
[45.99399185 242.88159180]
[30.78413773 247.94338989]
[14.94649887 245.87707520]
[6.98841286 258.59197998]
[10.31673717 273.80908203]
[2.06497788 286.59045410]
[-12.46270847 289.66970825]
[-20.42079544 302.38461304]
[-28.37888145 315.09951782]
[-36.33696747 327.81442261]
[-29.44506264 349.20394897]
[-40.44909668 368.48211670]
[-61.83526993 373.30352783]
[-68.50185394 386.74066162]
[-75.16843414 400.17779541]
[-73.57540131 418.51504517]
[-88.54180908 427.66485596]
[-94.98648071 441.20983887]
[-101.43115997 454.75479126]
[-107.87583160 468.29977417]
[-93.38572693 464.42202759]
[-80.32216644 471.79382324]
[-76.15096283 486.20220947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 30]
[4 29]
[5 28]
[6 27]
[8 26]
[9 25]
[10 24]
[13 23]
[14 22]
[15 21]
[16 20]
[31 187]
[32 186]
[33 185]
[34 184]
[37 182]
[38 181]
[39 180]
[48 177]
[49 176]
[50 175]
[51 174]
[54 171]
[55 170]
[62 164]
[63 163]
[64 162]
[65 161]
[66 160]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
[76 123]
[77 122]
[79 120]
[80 119]
[81 118]
[85 116]
[86 115]
[87 114]
[88 113]
[91 111]
[92 110]
[93 109]
[134 156]
[135 155]
[136 154]
[137 150]
[138 149]
[139 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
