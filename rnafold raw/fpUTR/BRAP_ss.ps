%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCAGGUCAGCGACGGCGGCCGGGAGGCGGAAGUGGAGGUUGUUGUGGCUCCGAGGGCUGUUCGAGGAGCUGCUGCUGCUGAGGCGGCGGCAACUGCAUUGAGGUGGUGGCGGCGCUGCCGGCCCCGGGCCGCUCGGCCUCUCGGCUCGCCUUCCAGCCUCGCCUGAGCCCGCCGGGGCCCGCGCCGGCCAGCGCCUGCCCU\
) } def
/len { sequence length } bind def

/coor [
[362.88308716 825.83026123]
[359.01007080 817.52679443]
[359.40057373 808.23510742]
[364.09341431 800.04705811]
[358.27362061 786.22210693]
[346.20440674 777.49377441]
[347.98135376 761.77270508]
[342.16152954 747.94769287]
[336.23599243 734.16772461]
[330.20501709 720.43353271]
[324.17404175 706.69940186]
[318.14306641 692.96520996]
[312.57275391 688.10247803]
[312.12670898 678.97406006]
[306.63156128 674.02655029]
[306.32543945 664.89239502]
[300.71820068 650.97985840]
[295.11093140 637.06732178]
[289.69223022 632.03613281]
[289.52615356 622.89831543]
[284.13275146 608.90148926]
[278.73934937 594.90466309]
[266.94329834 585.81060791]
[269.20117188 570.15136719]
[263.80776978 556.15454102]
[258.41436768 542.15765381]
[253.02096558 528.16082764]
[247.62756348 514.16400146]
[242.23416138 500.16720581]
[236.84075928 486.17034912]
[231.44737244 472.17352295]
[226.05397034 458.17669678]
[211.31866455 456.00039673]
[199.57299805 446.67861938]
[194.03370667 432.63644409]
[196.28158569 417.60833740]
[205.81196594 405.64511108]
[200.41856384 391.64825439]
[195.02516174 377.65142822]
[189.63177490 363.65460205]
[184.23837280 349.65777588]
[178.84497070 335.66094971]
[173.45156860 321.66412354]
[168.05818176 307.66729736]
[157.12969971 302.47430420]
[152.52334595 290.85354614]
[157.21669006 278.83624268]
[152.03842163 264.75842285]
[146.86015320 250.68058777]
[141.68186951 236.60275269]
[136.50360107 222.52490234]
[131.24162292 217.33006287]
[131.35565186 208.19146729]
[126.39370728 194.03593445]
[121.43177795 179.88040161]
[116.25003052 174.60551453]
[116.50407410 165.46975708]
[111.75965118 151.23983765]
[107.01522064 137.00991821]
[102.27079010 122.78001404]
[97.52635956 108.55010223]
[88.65627289 111.43136597]
[77.66037750 106.64984131]
[70.16205597 93.62123108]
[62.10525513 80.96864319]
[54.04845047 68.31605530]
[45.99164963 55.66347122]
[37.83813858 43.07299042]
[23.78627014 35.80280304]
[23.24849129 20.91791153]
[14.99874496 8.39027405]
[0.94687748 1.12008858]
[0.40909883 -13.76480484]
[-7.84064770 -26.29244232]
[-16.09039497 -38.82007980]
[-24.34014130 -51.34771729]
[-32.58988571 -63.87535095]
[-40.83963394 -76.40299225]
[-49.08938217 -88.93062592]
[-57.33912659 -101.45825958]
[-65.58887482 -113.98590088]
[-80.48244476 -120.84983063]
[-81.71524048 -137.20257568]
[-68.01907349 -146.22183228]
[-53.48337936 -138.62936401]
[-53.06123734 -122.23564911]
[-44.81148911 -109.70800781]
[-36.56174469 -97.18037415]
[-28.31199646 -84.65273285]
[-20.06225014 -72.12509918]
[-11.81250381 -59.59746170]
[-3.56275749 -47.06982422]
[4.68698883 -34.54218674]
[12.93673515 -22.01455116]
[26.39852524 -15.64042664]
[27.52638245 0.14052734]
[35.77612686 12.66816425]
[49.23791885 19.04228973]
[50.36577606 34.82324219]
[56.67300034 38.68248367]
[58.64423752 47.60667038]
[66.70104218 60.25925827]
[74.75784302 72.91184235]
[82.81464386 85.56443024]
[97.71567535 83.84417725]
[102.67760468 69.68864441]
[107.63954163 55.53310776]
[112.60147858 41.37757111]
[117.56340790 27.22203445]
[122.52534485 13.06649685]
[127.48728180 -1.08903921]
[123.91725159 -17.09488106]
[136.17512512 -27.98876572]
[151.65103149 -22.56400108]
[154.42469788 -6.40111685]
[141.64280701 3.87289500]
[136.68087769 18.02843094]
[131.71894836 32.18396759]
[126.75701141 46.33950424]
[121.79507446 60.49504089]
[116.83314514 74.65057373]
[111.87120819 88.80611420]
[111.75627136 103.80567169]
[116.50070190 118.03558350]
[121.24513245 132.26550293]
[125.98956299 146.49540710]
[130.73399353 160.72532654]
[135.58731079 174.91845703]
[140.54924011 189.07400513]
[145.51118469 203.22953796]
[150.58143616 217.34663391]
[155.75970459 231.42446899]
[160.93798828 245.50230408]
[166.11625671 259.58013916]
[171.29452515 273.65798950]
[185.71014404 285.11184692]
[182.05500793 302.27389526]
[187.44841003 316.27072144]
[192.84179688 330.26754761]
[198.23519897 344.26437378]
[203.62860107 358.26119995]
[209.02200317 372.25802612]
[214.41539001 386.25488281]
[219.80879211 400.25170898]
[234.90258789 402.72650146]
[246.65348816 412.36044312]
[251.96914673 426.48880005]
[249.51568604 441.28192139]
[240.05079651 452.78329468]
[245.44419861 466.78012085]
[250.83760071 480.77697754]
[256.23098755 494.77380371]
[261.62438965 508.77062988]
[267.01779175 522.76745605]
[272.41119385 536.76428223]
[277.80459595 550.76110840]
[283.19799805 564.75793457]
[295.37982178 574.85314941]
[292.73620605 589.51129150]
[298.12957764 603.50811768]
[303.52297974 617.50494385]
[309.02346802 631.46002197]
[314.63073730 645.37255859]
[320.23797607 659.28509521]
[325.95169067 673.15429688]
[331.87722778 686.93426514]
[337.90820312 700.66839600]
[343.93917847 714.40258789]
[349.97015381 728.13677979]
[356.28884888 734.73986816]
[355.98651123 742.12792969]
[361.80630493 755.95288086]
[374.29180908 765.67004395]
[372.09860229 780.40228271]
[377.91839600 794.22729492]
[395.75180054 806.10382080]
[392.32556152 826.45379639]
[398.77459717 839.99670410]
[405.22360229 853.53961182]
[411.67263794 867.08245850]
[418.12164307 880.62536621]
[432.74441528 885.99310303]
[439.09170532 899.81939697]
[433.88430786 913.72686768]
[440.33334351 927.26977539]
[446.78234863 940.81268311]
[453.23138428 954.35559082]
[468.20773315 959.40380859]
[475.15301514 973.60021973]
[469.94674683 988.52239990]
[455.67767334 995.31719971]
[440.81143188 989.95343018]
[434.16784668 975.61334229]
[439.68847656 960.80462646]
[433.23944092 947.26171875]
[426.79043579 933.71881104]
[420.34143066 920.17590332]
[406.26214600 915.45257568]
[399.52902222 901.80999756]
[404.57873535 887.07440186]
[398.12973022 873.53149414]
[391.68069458 859.98858643]
[385.23168945 846.44567871]
[378.78265381 832.90283203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 175]
[5 174]
[7 172]
[8 171]
[9 169]
[10 168]
[11 167]
[12 166]
[14 165]
[16 164]
[17 163]
[18 162]
[20 161]
[21 160]
[22 159]
[24 157]
[25 156]
[26 155]
[27 154]
[28 153]
[29 152]
[30 151]
[31 150]
[32 149]
[37 144]
[38 143]
[39 142]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[47 135]
[48 134]
[49 133]
[50 132]
[51 131]
[53 130]
[54 129]
[55 128]
[57 127]
[58 126]
[59 125]
[60 124]
[61 123]
[64 104]
[65 103]
[66 102]
[67 101]
[68 99]
[70 97]
[71 96]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
[177 204]
[178 203]
[179 202]
[180 201]
[181 200]
[184 197]
[185 196]
[186 195]
[187 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
