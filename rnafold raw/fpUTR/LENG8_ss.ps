%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGCCGCCGCGUGACGUCAGGACGCCGCGGUCAGGACGUCGAAGCCAAAGAAGACCAGAGCCAGCCGGGUGGCACAGCGGUGUCGUGGCCGUGUUGCUGAUCGCCUGGGUGGUUGUUGGCGUGUCCCUGCAGCGAAGGAUCCUGGUUGGCAGUGAAAAAGCAGUCUGGCUCCCGAGGUCCACCCCUUAUACCCCAAGGUCCAG\
) } def
/len { sequence length } bind def

/coor [
[40.83347702 407.21029663]
[41.98171616 392.25430298]
[34.50372314 391.68017578]
[26.64175987 404.45474243]
[18.77979469 417.22930908]
[10.91783142 430.00387573]
[3.05586743 442.77844238]
[-4.80609655 455.55300903]
[-5.44981670 471.36111450]
[-18.70994949 478.14477539]
[-26.57191467 490.91934204]
[-34.43387985 503.69390869]
[-42.29584122 516.46850586]
[-35.52207565 530.32922363]
[-37.33998489 545.64910889]
[-47.16948318 557.53961182]
[-61.87401581 562.20654297]
[-76.76141357 558.16070557]
[-87.08116913 546.69311523]
[-89.54028320 531.46295166]
[-83.35405731 517.33026123]
[-70.49649811 508.80459595]
[-55.07040787 508.60653687]
[-47.20844269 495.83197021]
[-39.34648132 483.05740356]
[-31.48451614 470.28283691]
[-31.40313530 455.38842773]
[-17.58066177 447.69104004]
[-9.71869755 434.91647339]
[-1.85673416 422.14193726]
[6.00522995 409.36737061]
[13.86719418 396.59280396]
[21.72915840 383.81823730]
[24.41289139 351.83981323]
[48.03371048 340.55923462]
[50.55035019 325.77185059]
[53.06698990 310.98446655]
[55.58362961 296.19708252]
[50.09133530 282.35208130]
[60.03429794 270.04565430]
[62.55093765 255.25828552]
[65.06758118 240.47091675]
[58.08824158 224.37170410]
[69.95190430 210.29142761]
[72.24164581 195.46722412]
[74.53138733 180.64302063]
[76.82112885 165.81881714]
[79.11086273 150.99459839]
[65.63957214 157.59188843]
[52.01582336 151.31546021]
[48.27614212 136.78912354]
[57.17551804 124.71430206]
[72.15785217 123.98645782]
[82.18550873 135.14091492]
[85.60330963 120.53548431]
[89.02111053 105.93005371]
[87.41508484 91.01627350]
[80.96606445 77.47338104]
[74.51704407 63.93047714]
[67.96444702 50.43738937]
[61.30864716 36.99490738]
[54.65285110 23.55242348]
[47.99705505 10.10993958]
[41.34125519 -3.33254385]
[28.28394318 -12.26658916]
[29.57050323 -27.10552597]
[22.91470528 -40.54800797]
[16.25890732 -53.99049377]
[9.60311031 -67.43297577]
[2.94731236 -80.87545776]
[-3.70848513 -94.31793976]
[-10.36428261 -107.76042938]
[-17.42889786 -120.99263000]
[-24.89569473 -134.00212097]
[-32.36249161 -147.01161194]
[-47.35325241 -151.24421692]
[-54.74031830 -164.54405212]
[-50.61280441 -178.80937195]
[-58.07960129 -191.81886292]
[-65.54639435 -204.82836914]
[-73.01319122 -217.83786011]
[-80.47998810 -230.84735107]
[-95.79882812 -234.73432922]
[-103.81047058 -248.35745239]
[-99.76174164 -263.63433838]
[-86.05468750 -271.50149536]
[-70.82145691 -267.29147339]
[-63.09965897 -253.50201416]
[-67.47049713 -238.31414795]
[-60.00369644 -225.30465698]
[-52.53690338 -212.29516602]
[-45.07010651 -199.28565979]
[-37.60330963 -186.27616882]
[-23.20379066 -182.64443970]
[-15.44607162 -169.55732727]
[-19.35299492 -154.47840881]
[-11.88619900 -141.46891785]
[-4.41940308 -128.45942688]
[-1.74679899 -127.59880829]
[0.74506181 -125.62515259]
[2.62959576 -122.60229492]
[3.51130724 -118.74751282]
[3.07820058 -114.41622162]
[9.73399830 -100.97373962]
[16.38979530 -87.53125763]
[23.04559326 -74.08877563]
[29.70139122 -60.64628983]
[36.35718918 -47.20380783]
[43.01298523 -33.76132202]
[55.59423065 -25.78877449]
[54.78374100 -9.98834133]
[61.43953705 3.45414209]
[68.09533691 16.89662552]
[74.75112915 30.33910942]
[81.40692902 43.78159332]
[87.19486237 48.38319016]
[88.05994415 57.48145676]
[94.50896454 71.02436066]
[100.95798492 84.56726074]
[114.95481873 89.96065521]
[128.82397461 84.24696350]
[132.57858276 67.75689697]
[145.29481506 56.86085892]
[161.83398438 55.70122910]
[175.66615295 64.53734589]
[189.44613647 58.61178589]
[199.06735229 46.05221558]
[213.81597900 48.13245773]
[227.59594727 42.20690155]
[241.37593079 36.28134155]
[255.15589905 30.35578537]
[268.89007568 24.32481384]
[282.57763672 18.18878555]
[296.26516724 12.05275536]
[301.57946777 0.29684049]
[313.10998535 -4.53086424]
[324.46221924 -0.34451917]
[338.24221802 -6.27007675]
[347.61102295 -19.72953796]
[363.92663574 -18.07620049]
[370.40490723 -3.01087523]
[360.38156128 9.96852207]
[344.16775513 7.50990009]
[330.38778687 13.43545818]
[320.66839600 28.04468346]
[302.40121460 25.74031067]
[288.71365356 31.87633896]
[275.02609253 38.01236725]
[270.20617676 43.61979675]
[261.08145142 44.13576126]
[247.30148315 50.06132126]
[233.52149963 55.98687744]
[219.74153137 61.91243362]
[211.10595703 74.04817200]
[195.37168884 72.39176178]
[181.59172058 78.31732178]
[179.86958313 91.55917358]
[171.76322937 102.30638885]
[159.30540466 107.68637848]
[145.70878601 106.19519806]
[134.53767395 98.11612701]
[120.66851044 103.82981873]
[111.95297241 109.90483093]
[103.62654114 109.34785461]
[100.20874023 123.95328522]
[96.79093933 138.55871582]
[93.93507385 153.28434753]
[91.64533234 168.10855103]
[89.35559082 182.93275452]
[87.06585693 197.75695801]
[84.77611542 212.58116150]
[91.75495148 223.43193054]
[89.53953552 235.73443604]
[79.85495758 242.98754883]
[77.33831787 257.77493286]
[74.82167816 272.56231689]
[80.13396454 287.46499634]
[70.37100983 298.71374512]
[67.85437012 313.50109863]
[65.33772278 328.28848267]
[62.82108688 343.07586670]
[73.33444977 348.24700928]
[81.04923248 358.81835938]
[83.24748993 373.11663818]
[78.24067688 388.15686035]
[84.06047058 401.98184204]
[89.88026428 415.80682373]
[95.70006561 429.63180542]
[110.69308472 434.07516479]
[119.27911377 447.14474487]
[117.40409088 462.66949463]
[105.95334625 473.31912231]
[90.33356476 474.06518555]
[77.91993713 464.55538940]
[74.57379913 449.28002930]
[81.87508392 435.45159912]
[76.05529022 421.62661743]
[70.23549652 407.80163574]
[64.41569519 393.97665405]
[56.93770218 393.40255737]
[55.78946304 408.35852051]
[54.64122772 423.31451416]
[53.49274063 438.27047729]
[38.53678894 437.12176514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 33]
[4 32]
[5 31]
[6 30]
[7 29]
[8 28]
[10 26]
[11 25]
[12 24]
[13 23]
[35 181]
[36 180]
[37 179]
[38 178]
[40 176]
[41 175]
[42 174]
[44 171]
[45 170]
[46 169]
[47 168]
[48 167]
[54 166]
[55 165]
[56 164]
[57 119]
[58 118]
[59 117]
[60 115]
[61 114]
[62 113]
[63 112]
[64 111]
[66 109]
[67 108]
[68 107]
[69 106]
[70 105]
[71 104]
[72 103]
[73 98]
[74 97]
[75 96]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[120 162]
[121 161]
[125 156]
[126 155]
[128 153]
[129 152]
[130 151]
[131 150]
[132 148]
[133 147]
[134 146]
[137 144]
[138 143]
[185 199]
[186 198]
[187 197]
[188 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
