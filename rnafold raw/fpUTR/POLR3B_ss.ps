%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAGAGGGCGUACUUUCCUUACUCGGCCUCGGCCACAUCCGGGUUCCACCGCAGAUUCGGGCAGGGAGCGGGCGGAACCUUUCUACCGCGUCUCUAGCUAACACGCACGGCGGGGACAGUUUAGGCCUCCGCGCACCGUUCGCCGGGAGUCUUGCAGUUUGCUUGGUGCAGGGAAGGCGGGCGCGGAGGUUCUAUCUGUUUCUUCCUCCUUCGUGAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[116.74459076 127.17045593]
[110.84604645 130.01629639]
[104.49079895 131.59822083]
[97.94644928 131.84962463]
[91.48857880 130.75988770]
[84.20308685 143.87178040]
[76.91760254 156.98367310]
[69.63211060 170.09556580]
[69.69274902 185.91665649]
[56.74774933 193.28388977]
[49.46226120 206.39578247]
[58.64856720 218.54203796]
[62.09401703 233.37608337]
[59.20167160 248.32780457]
[50.47264862 260.80676270]
[37.41929626 268.65084839]
[22.30319595 270.50106812]
[7.74329615 266.03686523]
[-3.73780894 256.03164673]
[-10.15094948 242.21893311]
[-10.38500881 226.99180603]
[-4.39943647 212.98849487]
[6.76873159 202.63514709]
[21.18454361 197.72554016]
[36.35037231 199.11029053]
[43.63586044 185.99839783]
[43.05411148 171.11515808]
[56.52022171 162.81007385]
[63.80570984 149.69818115]
[71.09120178 136.58628845]
[78.37668610 123.47440338]
[70.82736206 119.44765472]
[64.10469818 113.08439636]
[49.46089172 116.33385468]
[34.81708527 119.58332062]
[25.68827248 134.51081848]
[8.91714954 138.14173889]
[-5.00871229 128.70555115]
[-19.60528755 132.16098022]
[-34.20186234 135.61640930]
[-48.74831009 139.27711487]
[-63.24174500 143.14239502]
[-77.73518372 147.00765991]
[-85.43548584 160.80914307]
[-100.66213989 165.04289246]
[-114.38143158 157.19709778]
[-118.45395660 141.92654419]
[-110.46356201 128.29096985]
[-95.15079498 124.38011169]
[-81.60045624 132.51423645]
[-67.10701752 128.64895630]
[-52.61358261 124.78368378]
[-49.49153900 121.18006897]
[-44.07582092 119.49420166]
[-37.65729141 121.01982880]
[-23.06071663 117.56439972]
[-8.46414185 114.10897064]
[-3.30069327 102.30908203]
[7.88183069 95.53421021]
[21.11959267 96.44763184]
[31.56762695 104.93951416]
[46.21143341 101.69005585]
[60.85523605 98.44058990]
[64.31066895 83.84401703]
[52.67789841 74.37413788]
[41.04512787 64.90425110]
[29.41235733 55.43437195]
[17.77958679 45.96448898]
[6.08040190 36.57678223]
[-5.68461943 27.27171516]
[-17.44964027 17.96664810]
[-29.21466255 8.66158009]
[-44.70506287 10.30025864]
[-56.50391388 0.69600040]
[-57.97068024 -14.08182716]
[-69.73570251 -23.38689423]
[-81.50072479 -32.69195938]
[-97.79606628 -34.53417969]
[-104.09939575 -49.67353439]
[-93.92638397 -62.53595734]
[-77.74215698 -59.88968658]
[-72.19565582 -44.45698166]
[-60.43063354 -35.15191650]
[-48.66561127 -25.84684753]
[-33.94734573 -27.82378006]
[-21.88338852 -18.55471611]
[-19.90959549 -3.10344076]
[-8.14457321 6.20162630]
[3.62044764 15.50669384]
[15.38546944 24.81175995]
[22.57530403 26.49421692]
[27.24946976 34.33171844]
[38.88224030 43.80160141]
[50.51501083 53.27148438]
[62.14777756 62.74136734]
[73.78054810 72.21125031]
[105.77085876 65.41747284]
[128.25364685 85.15592957]
[142.80009460 81.49520874]
[157.34654236 77.83449554]
[162.33961487 73.52237701]
[167.92283630 72.52252960]
[172.35437012 74.28170776]
[186.99818420 71.03224945]
[201.64198303 67.78279114]
[216.28579712 64.53333282]
[223.02003479 47.69084167]
[238.38513184 38.35014725]
[256.12374878 40.09399796]
[269.14376831 52.03525925]
[283.69021606 48.37454605]
[295.18484497 37.50329590]
[309.41555786 41.90058517]
[323.96200562 38.23986816]
[338.50845337 34.57915497]
[353.05490112 30.91843987]
[367.60134888 27.25772476]
[382.14779663 23.59700966]
[396.69424438 19.93629456]
[411.24069214 16.27557945]
[418.51300049 5.62999201]
[430.69760132 2.87701321]
[441.14724731 8.95970249]
[455.74380493 5.50427198]
[470.34039307 2.04884171]
[484.93698120 -1.40658832]
[499.50885010 -4.96474934]
[514.05529785 -8.62546444]
[528.60174561 -12.28617859]
[543.14819336 -15.94689369]
[557.69464111 -19.60760880]
[572.24108887 -23.26832390]
[586.78753662 -26.92903900]
[601.33398438 -30.58975410]
[615.88043213 -34.25046921]
[623.43096924 -39.37531662]
[630.65759277 -37.85875702]
[645.25415039 -41.31418610]
[659.85076904 -44.76961517]
[674.44732666 -48.22504807]
[689.04388428 -51.68047714]
[697.36791992 -64.84667206]
[712.22015381 -68.14303589]
[724.72076416 -60.12622452]
[739.31738281 -63.58165359]
[747.64135742 -76.74784851]
[762.49359131 -80.04421234]
[774.99426270 -72.02740479]
[783.31823730 -85.19359589]
[798.17047119 -88.48995972]
[810.67114258 -80.47315216]
[825.26770020 -83.92858124]
[833.59173584 -97.09477234]
[848.44396973 -100.39113617]
[860.94458008 -92.37432861]
[875.54119873 -95.82975769]
[890.13775635 -99.28518677]
[904.15802002 -108.81764984]
[917.19915771 -97.98412323]
[910.39916992 -82.45362854]
[893.59320068 -84.68861389]
[878.99658203 -81.23318481]
[864.40002441 -77.77775574]
[856.82031250 -65.00733948]
[842.06652832 -61.29511261]
[828.72314453 -69.33200836]
[814.12658691 -65.87657928]
[806.54681396 -53.10616302]
[791.79309082 -49.39393234]
[778.44964600 -57.43082809]
[770.86993408 -44.66041565]
[756.11614990 -40.94818497]
[742.77276611 -48.98508072]
[728.17620850 -45.52965164]
[720.59649658 -32.75923920]
[705.84271240 -29.04700661]
[692.49932861 -37.08390045]
[677.90277100 -33.62847137]
[663.30615234 -30.17304039]
[648.70959473 -26.71761131]
[634.11303711 -23.26218033]
[619.54113770 -19.70401955]
[604.99468994 -16.04330444]
[590.44824219 -12.38259029]
[575.90179443 -8.72187519]
[561.35534668 -5.06116009]
[546.80889893 -1.40044534]
[532.26245117 2.26026964]
[517.71600342 5.92098475]
[503.16955566 9.58169937]
[497.45513916 14.25821114]
[488.39239502 13.18998718]
[473.79583740 16.64541626]
[459.19924927 20.10084724]
[444.60266113 23.55627632]
[432.49661255 36.26614761]
[414.90139771 30.82202911]
[400.35494995 34.48274231]
[385.80850220 38.14345932]
[371.26205444 41.80417252]
[356.71560669 45.46488953]
[342.16915894 49.12560272]
[327.62271118 52.78631973]
[313.07626343 56.44703293]
[302.62210083 67.05644226]
[287.35092163 62.92099380]
[272.80447388 66.58171082]
[270.00518799 78.38427734]
[262.41122437 87.93537140]
[251.41383362 93.38657379]
[239.07022095 93.64978027]
[227.71856689 88.61382294]
[219.53524780 79.17713928]
[204.89144897 82.42659760]
[190.24763489 85.67605591]
[175.60383606 88.92551422]
[161.00726318 92.38094330]
[146.46081543 96.04165649]
[131.91436768 99.70237732]
[131.30319214 106.22296906]
[129.37391663 112.48152161]
[126.20776367 118.21451569]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 31]
[6 30]
[7 29]
[8 28]
[10 26]
[11 25]
[33 63]
[34 62]
[35 61]
[38 57]
[39 56]
[40 55]
[41 52]
[42 51]
[43 50]
[64 96]
[65 95]
[66 94]
[67 93]
[68 92]
[69 90]
[70 89]
[71 88]
[72 87]
[75 84]
[76 83]
[77 82]
[98 219]
[99 218]
[100 217]
[103 216]
[104 215]
[105 214]
[106 213]
[110 207]
[111 206]
[113 204]
[114 203]
[115 202]
[116 201]
[117 200]
[118 199]
[119 198]
[120 197]
[123 195]
[124 194]
[125 193]
[126 192]
[127 190]
[128 189]
[129 188]
[130 187]
[131 186]
[132 185]
[133 184]
[134 183]
[135 182]
[137 181]
[138 180]
[139 179]
[140 178]
[141 177]
[144 174]
[145 173]
[148 170]
[151 167]
[152 166]
[155 163]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
