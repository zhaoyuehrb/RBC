%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCACGCCGGGCAAGAGGAAGACCUCCAUCAGCUCGCCGCGCAGCGCGGCUGUAUUUGCGGCCUGUGCGAGUAGGCGCUUGGGCACUCAGUCUCCCUGGCGAGCGACGGGCAGAAAUCUCGAACCAGUGGAGCGCACUCGUAACCUGGAUCCCAGAAGGUCGCGAAGGCAGUACCGUUUCCUCAGCGGCGGACUGCUGCAGUAAGA\
) } def
/len { sequence length } bind def

/coor [
[97.27310181 179.51463318]
[88.78500366 167.27528381]
[95.67906952 153.03512573]
[94.77771759 138.06222534]
[93.87637329 123.08933258]
[86.78274536 120.65408325]
[86.53454590 135.65202332]
[72.19390106 140.05041504]
[63.57942963 127.77072906]
[72.59548187 115.78359222]
[65.50185394 113.34834290]
[55.59402084 124.61044312]
[45.68618774 135.87254333]
[35.77835464 147.13464355]
[38.12351990 167.08763123]
[25.23928452 182.10247803]
[5.77169275 182.79261780]
[-3.61838055 194.48989868]
[-13.00845337 206.18719482]
[-22.39852715 217.88447571]
[-24.35877419 234.16604614]
[-39.54340744 240.35951233]
[-52.33177567 230.09356689]
[-49.56830215 213.92893982]
[-34.09581375 208.49440002]
[-24.70573997 196.79711914]
[-15.31566715 185.09983826]
[-5.92559433 173.40254211]
[-9.75028324 163.87376404]
[-9.26999187 153.53645325]
[-4.50444794 144.25967407]
[3.74576902 137.74859619]
[14.03298473 135.23112488]
[24.51625633 137.22680664]
[34.42409134 125.96470642]
[44.33192444 114.70260620]
[54.23975754 103.44051361]
[46.60995865 90.52593994]
[31.96483994 93.76947784]
[17.31972313 97.01301575]
[2.67460561 100.25654602]
[-11.97051239 103.50008392]
[-26.61562920 106.74362183]
[-40.77259064 116.07189941]
[-53.65535355 105.05052185]
[-46.63099670 89.62020111]
[-29.85916710 92.09850311]
[-15.21404934 88.85496521]
[-0.56893128 85.61143494]
[14.07618618 82.36789703]
[28.72130394 79.12435913]
[43.36642075 75.88082123]
[63.61577225 61.28313446]
[85.06982422 57.86227798]
[102.65739441 63.81843185]
[113.03836823 75.38664246]
[115.23022461 87.93827057]
[118.80311584 73.37000275]
[122.37600708 58.80173111]
[125.94889832 44.23346329]
[129.52178955 29.66519547]
[133.09468079 15.09692764]
[136.66757202 0.52865976]
[140.24047852 -14.03960896]
[143.81336975 -28.60787582]
[147.38626099 -43.17614365]
[138.90997314 -63.52428818]
[152.78515625 -79.72733307]
[153.46134949 -94.71208191]
[154.13754272 -109.69683075]
[154.81373596 -124.68158722]
[155.48991394 -139.66633606]
[156.16610718 -154.65109253]
[156.84230042 -169.63583374]
[154.14100647 -175.67303467]
[154.79681396 -181.32008362]
[157.77075195 -185.05885315]
[158.89704895 -200.01651001]
[160.02336121 -214.97415161]
[161.14965820 -229.93180847]
[162.27597046 -244.88946533]
[162.95214844 -259.87420654]
[163.17762756 -274.87252808]
[163.40309143 -289.87081909]
[148.41236877 -294.91824341]
[135.73059082 -304.33929443]
[126.59187317 -317.20217896]
[121.88092041 -332.24093628]
[122.04737854 -347.97994995]
[127.06295013 -362.87887573]
[136.42533875 -375.48318481]
[149.20849609 -384.56634521]
[164.15425110 -389.24911499]
[164.15425110 -404.24911499]
[164.15425110 -419.24911499]
[156.41694641 -433.04928589]
[164.15425110 -445.77655029]
[164.15425110 -460.77655029]
[164.15425110 -475.77655029]
[164.15425110 -490.77655029]
[151.52198792 -499.78799438]
[146.63099670 -514.51409912]
[151.36195374 -529.29235840]
[163.89572144 -538.44030762]
[179.41279602 -538.44030762]
[191.94654846 -529.29235840]
[196.67750549 -514.51409912]
[191.78651428 -499.78799438]
[179.15425110 -490.77655029]
[179.15425110 -475.77655029]
[179.15425110 -460.77655029]
[179.15425110 -445.77655029]
[186.89155579 -433.04928589]
[179.15425110 -419.24911499]
[179.15425110 -404.24911499]
[179.15425110 -389.24911499]
[192.81631470 -385.18020630]
[204.79089355 -377.41674805]
[214.10205078 -366.58074951]
[219.98793030 -353.54510498]
[221.96301270 -339.36318970]
[219.85829163 -325.18386841]
[213.83552551 -312.15826416]
[204.37498474 -301.34643555]
[192.23712158 -293.63104248]
[178.40138245 -289.64535522]
[178.17591858 -274.64706421]
[177.95045471 -259.64874268]
[179.80522156 -257.54486084]
[180.93768311 -254.57897949]
[181.01515198 -251.02272034]
[179.80937195 -247.26316833]
[177.23362732 -243.76316833]
[176.10731506 -228.80551147]
[174.98100281 -213.84785461]
[173.85470581 -198.89019775]
[172.72839355 -183.93254089]
[171.82705688 -168.95965576]
[171.15086365 -153.97489929]
[170.47467041 -138.99014282]
[169.79847717 -124.00539398]
[169.12228394 -109.02064514]
[168.44610596 -94.03589630]
[167.76991272 -79.05113983]
[171.30368042 -76.97355652]
[174.34039307 -74.21994781]
[176.75279236 -70.90569305]
[191.60011292 -73.04041290]
[206.44743347 -75.17514038]
[221.29475403 -77.30986023]
[236.11218262 -85.54879761]
[248.13101196 -73.59120941]
[239.96786499 -58.73188782]
[223.42947388 -62.46253967]
[208.58215332 -60.32781601]
[193.73483276 -58.19309616]
[178.88751221 -56.05837250]
[173.15200806 -45.32481384]
[161.95452881 -39.60325241]
[158.38163757 -25.03498459]
[154.80874634 -10.46671581]
[151.23583984 4.10155201]
[147.66294861 18.66982079]
[144.09005737 33.23809052]
[140.51716614 47.80635834]
[136.94427490 62.37462616]
[133.37138367 76.94289398]
[129.79849243 91.51116180]
[133.58995056 106.02407837]
[143.83183289 116.98327637]
[154.07371521 127.94246674]
[164.31559753 138.90165710]
[174.55746460 149.86085510]
[184.79934692 160.82005310]
[192.94656372 164.95404053]
[195.11128235 172.02178955]
[205.18727112 183.13369751]
[215.26327515 194.24559021]
[225.33926392 205.35749817]
[235.41525269 216.46939087]
[250.82641602 214.65948486]
[264.34164429 222.28303528]
[270.76403809 236.40863037]
[267.62408447 251.60469055]
[256.12911987 262.02801514]
[240.69923401 263.67065430]
[227.26751709 255.90092468]
[220.99873352 241.70649719]
[224.30335999 226.54537964]
[214.22737122 215.43348694]
[204.15136719 204.32157898]
[194.07537842 193.20968628]
[183.99937439 182.09777832]
[173.84016418 171.06192017]
[163.59828186 160.10273743]
[153.35639954 149.14353943]
[143.11451721 138.18434143]
[132.87263489 127.22515106]
[122.63076019 116.26596069]
[108.84926605 122.18798065]
[109.75061798 137.16087341]
[110.65196228 152.13377380]
[119.20453644 165.44407654]
[112.24599457 178.61328125]
[123.24920654 190.28842163]
[120.83905792 206.14939880]
[106.86440277 214.02903748]
[92.04541016 207.88273621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 204]
[3 202]
[4 201]
[5 200]
[11 37]
[12 36]
[13 35]
[14 34]
[17 28]
[18 27]
[19 26]
[20 25]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[57 168]
[58 167]
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[64 161]
[65 160]
[66 159]
[68 144]
[69 143]
[70 142]
[71 141]
[72 140]
[73 139]
[74 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 128]
[83 127]
[84 126]
[93 116]
[94 115]
[95 114]
[97 112]
[98 111]
[99 110]
[100 109]
[147 157]
[148 156]
[149 155]
[150 154]
[169 199]
[170 198]
[171 197]
[172 196]
[173 195]
[174 194]
[176 193]
[177 192]
[178 191]
[179 190]
[180 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
