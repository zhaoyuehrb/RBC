%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACAACCAAGAUGGCUGAGGAGAGGGCGGAAGUGUCCGCACGUCGGGCCUCCGAGGCUUCUCUUUCUCCCCUGGCGGUCCGGCUCUCGAUGGUGGCGUGACGGGGGCGGGGGUGGCGGCGCGUUCUCCUCGGUUGGGAGGGAACCAGCCCGCGAACCCAGGCCGGGAGGGGGGUUCGGCCUGGGGGGGAAGGGACUGAC\
) } def
/len { sequence length } bind def

/coor [
[-66.60949707 330.44210815]
[-79.46174622 338.17373657]
[-84.93151855 352.14089966]
[-82.75923157 367.81225586]
[-94.60479736 376.84176636]
[-100.07456970 390.80892944]
[-97.90228271 406.48031616]
[-109.74784088 415.50979614]
[-115.21761322 429.47695923]
[-120.68738556 443.44412231]
[-120.83313751 460.39746094]
[-137.16426086 464.95053101]
[-146.06031799 450.51806641]
[-134.65454102 437.97436523]
[-129.18476868 424.00720215]
[-123.71500397 410.04003906]
[-126.27852631 395.36770630]
[-114.04172516 385.33917236]
[-108.57195282 371.37200928]
[-111.13547516 356.69964600]
[-98.89868164 346.67114258]
[-93.42890930 332.70397949]
[-104.59737396 322.68969727]
[-115.76483154 312.67633057]
[-129.05500793 319.63128662]
[-137.69461060 332.88525391]
[-152.55862427 331.93109131]
[-165.79431152 338.98916626]
[-178.97470093 346.14996338]
[-192.15510559 353.31076050]
[-205.33551025 360.47155762]
[-218.51591492 367.63235474]
[-226.61473083 381.89215088]
[-243.01315308 381.73767090]
[-250.84187317 367.32781982]
[-242.04739380 353.48626709]
[-225.67671204 354.45196533]
[-212.49630737 347.29116821]
[-199.31590271 340.13037109]
[-186.13549805 332.96957397]
[-172.95510864 325.80877686]
[-168.57525635 319.84896851]
[-159.51356506 318.64089966]
[-151.82456970 305.88439941]
[-136.00994873 306.34109497]
[-122.71978760 299.38613892]
[-125.50313568 284.64596558]
[-128.28622437 269.90710449]
[-143.19741821 268.27731323]
[-158.10861206 266.64752197]
[-173.01980591 265.01776123]
[-187.93101501 263.38796997]
[-204.33331299 267.67755127]
[-212.99588013 253.10372925]
[-201.38963318 240.74526978]
[-186.30122375 248.47677612]
[-171.39002991 250.10655212]
[-156.47883606 251.73632812]
[-141.56762695 253.36611938]
[-126.65643311 254.99589539]
[-112.34097290 250.51622009]
[-101.01863098 240.67729187]
[-89.69628143 230.83836365]
[-78.37393951 220.99943542]
[-67.05159760 211.16050720]
[-55.72925186 201.32157898]
[-44.40690613 191.48265076]
[-33.08456421 181.64372253]
[-21.76221848 171.80479431]
[-10.43987465 161.96586609]
[0.88246936 152.12693787]
[12.20481300 142.28800964]
[23.52715683 132.44908142]
[28.05887794 118.26060486]
[43.55068207 115.04896545]
[54.87302399 105.21003723]
[66.19536591 95.37110901]
[71.44726562 81.32057190]
[61.86030197 68.73484039]
[67.74627686 55.05256653]
[65.65354919 40.19926834]
[63.56082153 25.34597015]
[53.97385406 12.76023674]
[59.85983658 -0.92203385]
[57.76710510 -15.77533245]
[55.67437363 -30.62863159]
[53.58164597 -45.48192978]
[51.48891449 -60.33522797]
[49.39618301 -75.18852997]
[47.30345535 -90.04182434]
[44.97998047 -104.86077881]
[42.42632675 -119.64181519]
[39.87267685 -134.42283630]
[28.96500778 -146.66844177]
[34.37236023 -162.15045166]
[50.53211212 -164.94230652]
[60.82049942 -152.17198181]
[54.65370560 -136.97650146]
[57.20735931 -122.19546509]
[59.76101303 -107.41443634]
[63.08395386 -103.97495270]
[64.27692413 -98.40921021]
[62.15675354 -92.13455963]
[64.24948120 -77.28125763]
[66.34221649 -62.42795944]
[68.43494415 -47.57466125]
[70.52767181 -32.72136307]
[72.62040710 -17.86806297]
[74.71313477 -3.01476383]
[84.15041351 8.50856209]
[78.41411591 23.25323868]
[80.50685120 38.10653687]
[82.59957886 52.95983505]
[92.03685760 64.48316193]
[86.30056763 79.22783661]
[102.28482056 73.19505310]
[119.77941895 78.89967346]
[132.95982361 71.73887634]
[146.14022827 64.57807922]
[159.32061768 57.41727829]
[165.37280273 50.56567001]
[172.76216125 50.24942017]
[186.05232239 43.29446793]
[199.23272705 36.13366699]
[212.30017090 28.76875687]
[225.36761475 21.40384674]
[238.43505859 14.03893471]
[244.37994385 7.09403419]
[251.76348877 6.66290283]
[264.94387817 -0.49789512]
[278.12429810 -7.65869331]
[291.30468750 -14.81949139]
[295.54852295 -30.04333305]
[309.35510254 -37.73448944]
[324.53323364 -33.32993317]
[332.07800293 -19.44280815]
[327.51321411 -4.31210184]
[313.54708862 3.08540845]
[298.46548462 -1.63909030]
[285.28509521 5.52170801]
[272.10467529 12.68250561]
[258.92428589 19.84330368]
[245.79997253 27.10637856]
[232.73252869 34.47129059]
[219.66508484 41.83620071]
[206.59764099 49.20111084]
[204.47242737 53.48543930]
[199.62956238 56.47666168]
[193.00727844 56.58463669]
[179.71710205 63.53958893]
[166.48141479 70.59767914]
[153.30102539 77.75847626]
[140.12062073 84.91927338]
[126.94021606 92.08007050]
[127.17349243 107.07826233]
[140.57022095 113.82568359]
[153.96694946 120.57311249]
[167.36367798 127.32053375]
[180.76039124 134.06796265]
[194.15711975 140.81538391]
[204.28039551 136.81205750]
[214.72003174 138.99998474]
[222.07447815 146.41935730]
[224.08393860 156.44711304]
[237.26434326 163.60791016]
[253.63504028 162.64221191]
[262.42950439 176.48377991]
[254.60078430 190.89360046]
[238.20236206 191.04809570]
[230.10354614 176.78831482]
[216.92314148 169.62751770]
[197.68685913 171.54855347]
[187.40969849 154.21211243]
[174.01296997 147.46469116]
[160.61624146 140.71725464]
[147.21952820 133.96983337]
[133.82279968 127.22241211]
[120.42607117 120.47498322]
[93.15886688 126.01777649]
[76.03430176 106.69345093]
[64.71195221 116.53237915]
[53.38961029 126.37130737]
[48.04803848 141.26353455]
[33.36608505 143.77142334]
[22.04374313 153.61035156]
[10.72139835 163.44927979]
[-0.60094571 173.28820801]
[-11.92329025 183.12713623]
[-23.24563408 192.96606445]
[-34.56797791 202.80499268]
[-45.89032364 212.64392090]
[-57.21266556 222.48284912]
[-68.53501129 232.32177734]
[-79.85735321 242.16070557]
[-91.17969513 251.99963379]
[-102.50204468 261.83856201]
[-87.51700592 261.16867065]
[-73.34170532 266.07385254]
[-61.97562790 275.86221313]
[-55.02200699 289.15310669]
[-53.46168518 304.07171631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 22]
[3 21]
[5 19]
[6 18]
[8 16]
[9 15]
[10 14]
[24 46]
[25 45]
[27 43]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[61 196]
[62 195]
[63 194]
[64 193]
[65 192]
[66 191]
[67 190]
[68 189]
[69 188]
[70 187]
[71 186]
[72 185]
[73 184]
[75 182]
[76 181]
[77 180]
[78 115]
[80 113]
[81 112]
[82 111]
[84 109]
[85 108]
[86 107]
[87 106]
[88 105]
[89 104]
[90 103]
[91 100]
[92 99]
[93 98]
[117 154]
[118 153]
[119 152]
[120 151]
[122 150]
[123 149]
[124 146]
[125 145]
[126 144]
[127 143]
[129 142]
[130 141]
[131 140]
[132 139]
[155 178]
[156 177]
[157 176]
[158 175]
[159 174]
[160 173]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
