%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCACCCCCCGGCCGGGCCGUGCUUCUGCCCCUACAAGGUUUGGGCCGAGGUGGGGGAGGGUCCUGGUUGCCGGCCCCGCCCGGUCCCUCCCCGCCUUUUAGGCGCCCGCGUGGCCGGGACGUCCCAGUCCCGCUCCGUCCUCCUCGCCUGCCACCGGUGCACCCAGUCCGCUCACCCAGCCCAGUCCGUCCGGUCCUCACCGCCUGCCGGCCGGCCCACCCCCCACCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[112.31533813 618.07427979]
[105.59167480 604.66558838]
[103.06674957 589.87792969]
[98.80651855 604.26019287]
[94.54628754 618.64251709]
[90.28606415 633.02484131]
[86.02583313 647.40710449]
[94.80709076 660.34631348]
[93.16533661 675.89752197]
[81.87574768 686.71783447]
[66.26892853 687.69824219]
[53.71394348 678.37591553]
[50.13887024 663.15246582]
[57.23174667 649.21600342]
[71.64353180 643.14685059]
[75.90376282 628.76458740]
[80.16399384 614.38226318]
[84.42422485 600.00000000]
[88.68445587 585.61767578]
[91.12788391 570.81805420]
[91.71678162 555.82958984]
[92.30567932 540.84118652]
[92.89457703 525.85272217]
[93.48347473 510.86428833]
[94.07237244 495.87585449]
[91.20007324 489.08224487]
[94.76834869 480.69546509]
[95.55339050 465.71603394]
[96.33842468 450.73657227]
[88.86110687 443.80746460]
[86.36950684 433.69635010]
[89.91728210 423.67282104]
[98.56411743 417.11514282]
[99.74100494 402.16137695]
[87.58186340 397.14160156]
[77.40885162 388.76919556]
[70.12094116 377.76831055]
[66.36672211 365.09609985]
[66.48671722 351.85934448]
[70.48253632 339.21783447]
[78.01562500 328.28277588]
[88.43598175 320.01907349]
[100.83818817 315.16018677]
[100.05314636 300.18075562]
[91.66035461 287.87585449]
[98.66481018 273.68966675]
[97.87976837 258.71023560]
[97.09472656 243.73077393]
[96.30969238 228.75134277]
[95.52465057 213.77189636]
[94.73960876 198.79244995]
[86.34682465 186.48756409]
[93.35127258 172.30136108]
[89.86939240 165.79907227]
[92.65529633 157.12095642]
[92.06639862 142.13252258]
[91.47750092 127.14408875]
[90.88860321 112.15565491]
[82.88438416 99.46973419]
[69.60957336 92.48551941]
[56.33475876 85.50129700]
[43.05994415 78.51708221]
[29.78512955 71.53286743]
[16.51031494 64.54864502]
[3.23550034 57.56443024]
[-10.03931427 50.58021164]
[-25.85489464 51.00206375]
[-33.51577377 38.22864914]
[-46.79058838 31.24443054]
[-62.60617065 31.66628456]
[-70.26705170 18.89286613]
[-83.54186249 11.90864849]
[-96.81668091 4.92443085]
[-112.63226318 5.34628534]
[-120.29313660 -7.42713213]
[-135.31033325 -2.50173354]
[-149.37394714 -9.71215343]
[-154.14030457 -24.78057861]
[-146.78160095 -38.76717758]
[-131.66362000 -43.37395096]
[-117.75559998 -35.86778259]
[-113.30892181 -20.70194626]
[-98.44284058 -21.62335968]
[-89.83245850 -8.35038376]
[-76.55764771 -1.36616576]
[-63.28283310 5.61805201]
[-48.41675186 4.69663954]
[-39.80636978 17.96961594]
[-26.53155708 24.95383263]
[-11.66547871 24.03242111]
[-3.05509639 37.30539703]
[10.21971798 44.28961563]
[23.49453354 51.27383041]
[36.76934814 58.25804901]
[50.04416275 65.24226379]
[63.31897736 72.22648621]
[76.59378815 79.21070099]
[89.86860657 86.19492340]
[100.81656647 75.94104004]
[94.71551514 62.23785400]
[88.61446381 48.53467178]
[82.51342010 34.83148956]
[70.54745483 22.82099152]
[78.77606964 7.99782658]
[95.29785156 11.80140591]
[96.21659851 28.73044205]
[102.31764984 42.43362427]
[108.41870117 56.13680649]
[114.51974487 69.83998871]
[129.51460266 70.23264313]
[136.32446289 56.86754227]
[143.04670715 43.45816040]
[149.68103027 30.00506973]
[156.31536865 16.55197906]
[157.30001831 7.49099970]
[163.12559509 2.96707034]
[169.93545532 -10.39802742]
[176.74531555 -23.76312637]
[183.55517578 -37.12822342]
[190.36502075 -50.49332047]
[195.64877319 -64.53191376]
[199.34107971 -79.07037354]
[203.03337097 -93.60884094]
[206.72567749 -108.14730072]
[210.41796875 -122.68576813]
[214.11027527 -137.22422791]
[205.81527710 -150.67668152]
[209.54338074 -166.03495789]
[223.08277893 -174.18727112]
[238.40078735 -170.29699707]
[246.40950012 -156.67216492]
[242.35748291 -141.39613342]
[228.64874268 -133.53192139]
[224.95643616 -118.99346161]
[221.26414490 -104.45500183]
[217.57183838 -89.91653442]
[213.87953186 -75.37807465]
[210.18724060 -60.83961105]
[220.11788940 -72.08159637]
[233.13201904 -79.54030609]
[247.85180664 -82.42607880]
[262.71887207 -80.43338776]
[276.15917969 -73.77320862]
[286.74981689 -63.15065384]
[293.36950684 -49.69036102]
[295.31744385 -34.81737900]
[292.38739014 -20.10633850]
[284.88952637 -7.11471224]
[273.61770630 2.78205538]
[259.76528931 8.53618050]
[244.79879761 9.53846645]
[230.30281067 5.68279934]
[217.81201172 -2.62261629]
[208.64881897 -14.49847412]
[203.78337097 -28.68745995]
[203.73011780 -43.68346405]
[196.92027283 -30.31836510]
[190.11041260 -16.95326805]
[183.30055237 -3.58817005]
[176.49069214 9.77692795]
[169.76846313 23.18630981]
[163.13412476 36.63940048]
[156.49980164 50.09249115]
[156.36056519 57.46703339]
[149.68955994 63.67739868]
[142.87969971 77.04249573]
[157.76417542 78.90061951]
[170.91369629 86.11795044]
[180.47384644 97.67665863]
[185.09637451 111.94663239]
[184.12936401 126.91543579]
[177.70919800 140.47203064]
[166.74130249 150.70458984]
[152.77244568 156.17004395]
[137.77261353 156.09757996]
[123.85721588 150.49745178]
[112.98867798 140.15942383]
[106.69977570 126.54142761]
[105.87704468 111.56675720]
[106.46593475 126.55519104]
[107.05483246 141.54362488]
[107.64373016 156.53205872]
[108.33071899 171.51632690]
[116.77965546 184.89263916]
[109.71905518 198.00741577]
[110.50409698 212.98686218]
[111.28913116 227.96629333]
[112.07417297 242.94573975]
[112.85921478 257.92517090]
[113.64424896 272.90463257]
[122.09319305 286.28094482]
[115.03259277 299.39572144]
[115.81762695 314.37515259]
[135.38766479 321.66711426]
[149.50180054 336.96105957]
[155.16270447 356.91183472]
[151.21224976 377.19604492]
[163.68429565 385.52960205]
[176.15634155 393.86315918]
[188.62838745 402.19668579]
[205.01890564 402.72872925]
[212.51374817 417.31500244]
[203.40286255 430.95040894]
[187.05876160 429.60800171]
[180.29483032 414.66873169]
[167.82278442 406.33520508]
[155.35073853 398.00164795]
[142.87869263 389.66809082]
[136.88017273 394.94976807]
[130.03207397 399.07070923]
[122.55621338 401.89739990]
[114.69476318 403.33825684]
[113.51787567 418.29202271]
[122.99720764 436.09707642]
[111.31787109 451.52160645]
[110.53282928 466.50106812]
[109.74779510 481.48049927]
[109.06080627 496.46475220]
[108.47190857 511.45318604]
[107.88301849 526.44165039]
[107.29412079 541.43005371]
[106.70522308 556.41851807]
[106.11632538 571.40692139]
[113.25956726 558.21704102]
[123.93612671 547.68084717]
[137.21943665 540.71276855]
[151.95669556 537.91754150]
[166.86892700 539.53778076]
[180.66198730 545.43280029]
[192.13883972 555.09106445]
[200.30346680 567.67437744]
[204.44729614 582.09063721]
[204.21069336 597.08874512]
[199.61422729 611.36712646]
[191.05676270 623.68664551]
[179.28099060 632.97808838]
[165.30885315 638.43511963]
[150.35292053 639.58416748]
[135.71116638 636.32556152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[20 223]
[21 222]
[22 221]
[23 220]
[24 219]
[25 218]
[27 217]
[28 216]
[29 215]
[33 213]
[34 212]
[43 193]
[44 192]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 185]
[53 183]
[55 182]
[56 181]
[57 180]
[58 179]
[59 98]
[60 97]
[61 96]
[62 95]
[63 94]
[64 93]
[65 92]
[66 91]
[68 89]
[69 88]
[71 86]
[72 85]
[73 84]
[75 82]
[99 109]
[100 108]
[101 107]
[102 106]
[110 166]
[111 165]
[112 163]
[113 162]
[114 161]
[116 160]
[117 159]
[118 158]
[119 157]
[120 156]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[197 208]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
