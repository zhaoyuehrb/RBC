%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUCUGAGCCAAGCUUUUGACGAGGGCGGGCGGGCCUGAGCGGGAAGAACGGUUUCCCUGGCGACCGUUUCCAAGACGACUCAAGGUGGAGCGGGGACAUUGCACAGGGUG\
) } def
/len { sequence length } bind def

/coor [
[116.85207367 157.37034607]
[103.21035004 163.60760498]
[88.26156616 162.36915588]
[75.83225250 153.97200012]
[69.10403442 140.56561279]
[69.79917908 125.58172607]
[77.73973846 112.85586548]
[90.89402008 105.64533234]
[76.25707245 102.36511230]
[61.62012482 99.08489990]
[46.98318100 95.80467987]
[32.34623337 92.52446747]
[20.69889069 102.60640717]
[5.52567673 103.88193512]
[-7.33702707 96.07073975]
[-13.06517029 82.34753418]
[-27.70211601 79.06731415]
[-42.33906174 75.78710175]
[-56.97600937 72.50688171]
[-71.61295319 69.22666931]
[-84.85904694 77.42292786]
[-99.65626526 73.88780975]
[-107.38851929 61.20917511]
[-120.63461304 69.40543365]
[-135.43182373 65.87032318]
[-143.16407776 53.19168472]
[-157.80102539 49.91146469]
[-172.43797302 46.63124847]
[-187.07492065 43.35103226]
[-200.28773499 52.02266693]
[-215.74517822 48.72980881]
[-224.27662659 35.42605591]
[-220.82052612 20.00428581]
[-207.42732239 11.61396503]
[-192.04295349 15.23291969]
[-183.79470825 28.71408844]
[-169.15776062 31.99430466]
[-154.52081299 35.27452087]
[-139.88386536 38.55473709]
[-127.48020172 30.38866234]
[-112.58953094 33.50675964]
[-104.10829926 46.57222748]
[-91.70464325 38.40615463]
[-76.81396484 41.52425003]
[-68.33274078 54.58972168]
[-53.69579315 57.86993790]
[-39.05884552 61.15015411]
[-24.42189980 64.43036652]
[-9.78495407 67.71058655]
[1.25207400 57.74454498]
[16.21818924 56.16992950]
[29.39582825 63.79903030]
[35.62644958 77.88751984]
[50.26339722 81.16773987]
[64.90034485 84.44795227]
[79.53728485 87.72817230]
[94.17423248 91.00838470]
[109.12300110 92.24707794]
[124.10022736 91.42076111]
[139.07745361 90.59444427]
[154.05467224 89.76812744]
[169.03189087 88.94181061]
[183.99630737 87.90921021]
[198.94506836 86.67051697]
[213.89384460 85.43183136]
[228.84260559 84.19313812]
[237.83496094 74.82091522]
[250.40380859 74.16790771]
[259.70352173 82.03833771]
[274.68075562 81.21202087]
[289.65795898 80.38570404]
[304.63519287 79.55938721]
[319.61242676 78.73307037]
[334.58963013 77.90675354]
[341.23214722 65.74010468]
[352.94525146 58.53238678]
[366.58261108 58.09305573]
[378.54324341 64.43016815]
[385.72247314 75.77667236]
[399.30419922 67.66205597]
[412.23983765 75.04572296]
[427.23416138 74.63240814]
[442.22845459 74.21909332]
[457.89495850 67.73860931]
[468.45910645 80.99890137]
[458.64147949 94.82100677]
[442.64178467 89.21340179]
[427.64746094 89.62671661]
[412.65316772 90.04003143]
[400.14392090 98.12508392]
[386.13580322 90.77097321]
[377.35424805 104.56501770]
[361.94491577 110.51290131]
[345.85391235 106.10913849]
[335.41595459 92.88397980]
[320.43872070 93.71029663]
[305.46151733 94.53661346]
[290.48428345 95.36293030]
[275.50708008 96.18924713]
[260.52984619 97.01556396]
[246.46333313 107.40892792]
[230.08129883 99.14190674]
[215.13253784 100.38059235]
[200.18376160 101.61928558]
[185.23500061 102.85797882]
[178.73933411 106.59805298]
[169.85821533 103.91902924]
[154.88098145 104.74534607]
[139.90376282 105.57166290]
[124.92653656 106.39797974]
[109.94931793 107.22429657]
[121.73681641 116.50087738]
[127.47490692 130.35997009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 57]
[9 56]
[10 55]
[11 54]
[12 53]
[16 49]
[17 48]
[18 47]
[19 46]
[20 45]
[23 42]
[26 39]
[27 38]
[28 37]
[29 36]
[58 111]
[59 110]
[60 109]
[61 108]
[62 107]
[63 105]
[64 104]
[65 103]
[66 102]
[69 100]
[70 99]
[71 98]
[72 97]
[73 96]
[74 95]
[79 91]
[81 89]
[82 88]
[83 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
