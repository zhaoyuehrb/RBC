%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGAGGCCGGCAAGAGGCGGCCGCGGGCCGGGCUGCGUCGGGAAACGGCGGCCAGACUUCCCCGGGAAGGGGCGAGCGAGAGCCGGGCCGGGCCGGGCCGGGCCGCGGGGCCGGGAAGCGCCGAGCCGGGCAUCUCCUCACCAGGCAGCGACCGAGGAGCCCGGCCGCCCACCCCGUGCCGCCCGAGCCCGCAGCCGCCCGCCGGUCCCUCUGGGAUGUCCGUAGGACCCGGGCAUUCAGGACGGUAGCCGAGC\
GAGCCCGAGG\
) } def
/len { sequence length } bind def

/coor [
[371.16094971 627.90618896]
[369.39349365 642.80169678]
[367.62600708 657.69720459]
[371.76391602 674.13848877]
[357.11068726 682.66601562]
[344.85995483 670.94610596]
[352.73052979 655.92974854]
[354.49798584 641.03424072]
[356.26544189 626.13873291]
[357.50411987 611.19000244]
[358.21249390 596.20672607]
[358.92086792 581.22344971]
[362.43615723 571.80157471]
[367.71176147 564.26678467]
[374.17532349 558.90881348]
[381.21441650 555.87200928]
[388.21020508 555.15191650]
[380.00598145 542.59442139]
[371.80175781 530.03686523]
[363.59753418 517.47937012]
[355.39331055 504.92190552]
[347.18908691 492.36441040]
[333.75051880 485.94146729]
[332.67996216 470.15652466]
[324.47573853 457.59902954]
[316.27151489 445.04153442]
[308.06729126 432.48400879]
[299.86306763 419.92651367]
[291.65884399 407.36901855]
[283.38061523 394.86019897]
[275.02865601 382.40048218]
[266.67669678 369.94073486]
[258.32473755 357.48101807]
[249.97277832 345.02130127]
[236.45928955 338.75750732]
[235.20237732 322.98629761]
[226.85041809 310.52658081]
[218.49845886 298.06686401]
[212.18508911 294.27346802]
[210.12245178 285.41027832]
[201.91822815 272.85278320]
[193.71400452 260.29528809]
[185.50979614 247.73779297]
[172.19032288 248.31898499]
[160.22309875 242.20129395]
[152.77500916 230.88381958]
[151.87599182 217.25691223]
[157.86676025 204.86430359]
[149.81141663 192.21078491]
[141.75607300 179.55728149]
[133.70072937 166.90376282]
[125.64539337 154.25024414]
[117.59004974 141.59672546]
[109.53470612 128.94322205]
[97.65301514 130.38275146]
[86.13336945 127.13552856]
[76.75275421 119.70243073]
[70.95820618 109.23007965]
[55.98435211 110.11535645]
[41.01049805 111.00062561]
[26.03664398 111.88590240]
[11.06279087 112.77117157]
[-4.39188862 119.74176788]
[-15.36835289 106.82071686]
[-5.99084949 92.69631958]
[10.17751789 97.79731750]
[25.15137100 96.91204834]
[40.12522507 96.02677155]
[55.09907913 95.14150238]
[70.07292938 94.25622559]
[72.62308502 86.61624146]
[77.08576965 79.91123199]
[68.58724213 67.55101776]
[54.39285278 60.56318283]
[53.55763245 45.69201279]
[45.05910492 33.33179092]
[36.56057739 20.97157097]
[29.14578629 15.69602013]
[28.03568268 8.41481113]
[19.68372536 -4.04491615]
[11.33176899 -16.50464439]
[2.97981191 -28.96437073]
[-5.44557714 -41.37456131]
[-13.94410324 -53.73478317]
[-22.44263077 -66.09500122]
[-36.63702011 -73.08283997]
[-37.47224426 -87.95400238]
[-45.97077179 -100.31422424]
[-54.46929550 -112.67444611]
[-63.04066467 -124.98426819]
[-71.68457794 -137.24325562]
[-80.32848358 -149.50224304]
[-89.04463959 -161.70997620]
[-97.83272552 -173.86602783]
[-109.67309570 -173.43026733]
[-120.15330505 -178.69604492]
[-126.73505402 -188.25906372]
[-127.88663483 -199.69062805]
[-123.43804932 -210.15399170]
[-131.93656921 -222.51422119]
[-146.13096619 -229.50205994]
[-146.96618652 -244.37322998]
[-155.46472168 -256.73342896]
[-163.96324158 -269.09365845]
[-172.46176147 -281.45388794]
[-187.48957825 -288.01870728]
[-189.04902649 -304.34356689]
[-175.53587341 -313.63479614]
[-160.85131836 -306.33441162]
[-160.10154724 -289.95242310]
[-151.60302734 -277.59219360]
[-143.10449219 -265.23196411]
[-134.60597229 -252.87174988]
[-121.01944733 -246.76800537]
[-119.57635498 -231.01274109]
[-111.07782745 -218.65252686]
[-92.88847351 -216.38386536]
[-81.97401428 -201.26031494]
[-85.67668152 -182.65411377]
[-76.88859558 -170.49806213]
[-70.44480896 -166.93070984]
[-68.06949615 -158.14614868]
[-59.42558670 -145.88716125]
[-50.78167725 -133.62817383]
[-44.38047409 -129.98497009]
[-42.10907745 -121.17297363]
[-33.61054993 -108.81275177]
[-25.11202240 -96.45252991]
[-11.52550316 -90.34878540]
[-10.08240986 -74.59352875]
[-1.58388352 -62.23330688]
[6.91464329 -49.87308884]
[13.27237225 -46.15454102]
[15.43953991 -37.31632996]
[23.79149628 -24.85660172]
[32.14345169 -12.39687347]
[40.49541092 0.06285455]
[48.92079926 12.47304440]
[57.41932678 24.83326530]
[65.91785431 37.19348526]
[79.50437164 43.29723358]
[80.94746399 59.05249023]
[89.44599152 71.41271210]
[98.20152283 69.57984924]
[107.11203003 70.36827087]
[114.09494019 57.09276962]
[121.07785034 43.81726837]
[116.61858368 28.89236641]
[123.88935852 15.52859402]
[138.14544678 11.36933899]
[133.21858215 -3.64736581]
[140.42761230 -17.71169472]
[155.49557495 -22.47953033]
[169.48289490 -15.12220097]
[174.09115601 -0.00467856]
[166.58634949 13.90407753]
[151.42095947 18.35225105]
[156.07072449 32.45598221]
[149.17817688 46.01870346]
[134.35334778 50.80017853]
[127.37043762 64.07568359]
[120.38752747 77.35118103]
[130.44723511 98.74069214]
[122.18821716 120.88787079]
[130.24356079 133.54138184]
[138.29890442 146.19490051]
[146.35424805 158.84841919]
[154.40959167 171.50193787]
[162.46493530 184.15544128]
[170.52027893 196.80895996]
[187.43098450 197.62500000]
[200.38647461 208.26387024]
[204.39552307 224.36996460]
[198.06729126 239.53356934]
[206.27151489 252.09106445]
[214.47573853 264.64855957]
[222.67994690 277.20605469]
[230.95819092 289.71490479]
[239.31015015 302.17462158]
[247.66210938 314.63433838]
[261.77297974 321.78933716]
[262.43249512 336.66934204]
[270.78445435 349.12905884]
[279.13641357 361.58877563]
[287.48837280 374.04852295]
[295.84033203 386.50823975]
[303.19229126 391.87100220]
[304.21633911 399.16479492]
[312.42056274 411.72229004]
[320.62478638 424.27981567]
[328.82901001 436.83731079]
[337.03323364 449.39480591]
[345.23745728 461.95230103]
[359.26284790 469.27343750]
[359.74658203 484.16018677]
[367.95080566 496.71768188]
[376.15502930 509.27517700]
[384.35925293 521.83264160]
[392.56347656 534.39019775]
[400.76770020 546.94769287]
[410.79586792 558.10272217]
[422.41207886 567.59295654]
[434.02828979 577.08312988]
[445.70031738 586.50457764]
[457.42779541 595.85693359]
[469.15527344 605.20928955]
[480.88275146 614.56158447]
[492.71984863 623.77478027]
[504.66494751 632.84753418]
[520.33447266 635.03308105]
[525.78979492 648.89270020]
[537.73486328 657.96545410]
[549.67999268 667.03814697]
[565.34948730 669.22369385]
[570.80480957 683.08331299]
[582.74993896 692.15606689]
[594.69500732 701.22882080]
[606.64007568 710.30157471]
[618.58520508 719.37426758]
[630.53027344 728.44702148]
[642.47540283 737.51977539]
[654.42047119 746.59252930]
[666.36553955 755.66528320]
[681.57458496 752.02941895]
[695.53930664 759.06652832]
[701.66595459 773.45391846]
[697.06182861 788.39831543]
[683.90075684 796.84344482]
[668.39697266 794.80175781]
[657.87103271 783.23730469]
[657.29278564 767.61041260]
[645.34771729 758.53765869]
[633.40264893 749.46490479]
[621.45751953 740.39215088]
[609.51245117 731.31939697]
[597.56732178 722.24664307]
[585.62225342 713.17388916]
[573.67718506 704.10113525]
[561.73205566 695.02838135]
[546.91693115 693.49182129]
[540.60723877 678.98327637]
[528.66210938 669.91052246]
[516.71704102 660.83776855]
[501.90191650 659.30120850]
[495.59219360 644.79266357]
[483.64709473 635.71990967]
[478.90875244 635.46081543]
[474.27468872 632.24450684]
[471.53039551 626.28906250]
[459.80291748 616.93676758]
[448.07543945 607.58441162]
[436.34796143 598.23205566]
[429.18331909 596.52447510]
[424.53808594 588.69934082]
[412.92187500 579.20916748]
[401.30569458 569.71893311]
[387.60430908 575.82568359]
[373.90411377 581.93182373]
[373.19577026 596.91510010]
[372.48739624 611.89837646]
[384.14331055 602.45697021]
[399.07238770 603.91381836]
[408.68319702 615.43041992]
[407.44482422 630.37921143]
[396.06994629 640.15734863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[3 7]
[10 260]
[11 259]
[12 258]
[17 200]
[18 199]
[19 198]
[20 197]
[21 196]
[22 195]
[24 193]
[25 192]
[26 191]
[27 190]
[28 189]
[29 188]
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[36 180]
[37 179]
[38 178]
[40 177]
[41 176]
[42 175]
[43 174]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[53 165]
[54 164]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[72 143]
[73 142]
[75 140]
[76 139]
[77 138]
[79 137]
[80 136]
[81 135]
[82 134]
[83 132]
[84 131]
[85 130]
[87 128]
[88 127]
[89 126]
[90 124]
[91 123]
[92 122]
[93 120]
[94 119]
[99 116]
[100 115]
[102 113]
[103 112]
[104 111]
[105 110]
[145 162]
[146 161]
[147 160]
[150 157]
[201 256]
[202 255]
[203 254]
[204 252]
[205 251]
[206 250]
[207 249]
[208 246]
[209 245]
[211 243]
[212 242]
[213 241]
[215 239]
[216 238]
[217 237]
[218 236]
[219 235]
[220 234]
[221 233]
[222 232]
[223 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
