%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCAAGCACACACCAACUAGCUGUCCAGGAAGCAGCCUAACCAGAGAGAGGGGCGUGGGAGGGAGAGAGGCGGGGAAAAGCAGCGUCUCCGCUUUUCUUCUCACGUCUUGCCGCGGAGAAGUGGGUUCCUGGGCAGUGCAGAUUUUUUUUUUUUAAUUCAAGAUUUUCUUUAAUUUCCCGCCUAAAGCCUCCCCACGGUAGGGCCGCAUCCCCUGUAAUAAA\
) } def
/len { sequence length } bind def

/coor [
[26.77708244 636.44714355]
[19.98672104 640.97497559]
[12.56768703 644.36517334]
[4.70886564 646.53302002]
[-3.38992000 647.42492676]
[-11.52298355 647.01965332]
[-19.48400116 645.32897949]
[-25.77578354 658.94561768]
[-32.06756592 672.56231689]
[-22.32225800 684.30932617]
[-18.64720154 699.12335205]
[-21.77208138 714.06317139]
[-31.07644653 726.16241455]
[-44.71291351 733.01873779]
[-59.97394943 733.27087402]
[-73.82946014 726.86877441]
[-83.52843475 715.08349609]
[-87.14512634 700.25506592]
[-83.96143341 685.32763672]
[-74.60949707 673.26513672]
[-60.94613647 666.46258545]
[-45.68422699 666.27050781]
[-39.39244461 652.65386963]
[-33.10066605 639.03723145]
[-48.82547379 622.89453125]
[-56.09395599 601.52075195]
[-53.46079254 579.05847168]
[-41.40333939 559.87695312]
[-22.23553848 547.72253418]
[0.33607218 544.98632812]
[4.06642056 530.45758057]
[7.79676867 515.92883301]
[3.46769381 501.67724609]
[14.39387608 490.23480225]
[18.12422371 475.70608521]
[13.79514885 461.45446777]
[24.72133064 450.01202393]
[28.45167923 435.48327637]
[32.18202972 420.95452881]
[35.91237640 406.42578125]
[31.58330154 392.17419434]
[42.50948334 380.73175049]
[46.23983002 366.20300293]
[49.97018051 351.67425537]
[40.34948349 340.33493042]
[39.23747253 325.32736206]
[47.26960373 312.39141846]
[61.54365540 306.59854126]
[60.16400528 299.34555054]
[65.42884064 291.89370728]
[64.15058899 284.62216187]
[69.51895905 277.24453735]
[73.65352631 262.82562256]
[77.78808594 248.40669250]
[81.92264557 233.98776245]
[86.05720520 219.56884766]
[89.68603516 205.01440430]
[92.80471039 190.34219360]
[95.92338562 175.66998291]
[99.04206085 160.99775696]
[102.16073608 146.32554626]
[105.27941132 131.65333557]
[59.02172470 99.90412903]
[48.01577377 89.71250916]
[37.00982666 79.52088928]
[26.00387955 69.32926941]
[14.99793148 59.13765335]
[3.99198365 48.94603348]
[-7.01396418 38.75441360]
[-18.01991272 28.56279373]
[-29.02585983 18.37117386]
[-40.03180695 8.17955494]
[-51.03775787 -2.01206470]
[-62.04370499 -12.20368385]
[-73.04965210 -22.39530373]
[-84.05560303 -32.58692169]
[-95.06154633 -42.77854156]
[-106.06749725 -52.97016144]
[-120.97927094 -49.01509094]
[-135.65509033 -53.77152634]
[-145.41197205 -65.72171021]
[-147.13652039 -81.05238342]
[-140.27842712 -94.87158203]
[-127.02610779 -102.76964569]
[-111.60831451 -102.22634125]
[-98.94480896 -93.41502380]
[-93.07647705 -79.14736176]
[-95.87587738 -63.97611237]
[-84.86992645 -53.78449249]
[-73.86398315 -43.59287262]
[-62.85803223 -33.40125275]
[-51.85208511 -23.20963287]
[-40.84613800 -13.01801300]
[-29.84018898 -2.82639313]
[-18.83423996 7.36522627]
[-7.82829285 17.55684662]
[3.17765522 27.74846649]
[14.18360329 37.94008636]
[25.18955040 48.13170624]
[36.19549942 58.32332611]
[47.20144653 68.51494598]
[58.20739365 78.70656586]
[69.21334076 88.89818573]
[76.47771454 87.03301239]
[80.51148224 72.58556366]
[91.00646210 83.30265808]
[98.27083588 81.43748474]
[103.00557709 67.20434570]
[100.01984406 51.66742325]
[111.37893677 42.03309250]
[116.11367035 27.79994965]
[120.84840393 13.56681061]
[125.58314514 -0.66632980]
[130.31787109 -14.89947033]
[130.05647278 -24.01980019]
[135.21936035 -29.29747391]
[140.15235901 -43.46311951]
[145.08535767 -57.62876511]
[144.95132446 -66.75185394]
[150.18739319 -71.95693207]
[155.31768799 -86.05231476]
[160.44799805 -100.14770508]
[154.99833679 -115.23680878]
[163.52009583 -128.82942200]
[179.47610474 -130.49845886]
[190.62626648 -118.96358490]
[188.41714478 -103.07335663]
[174.54338074 -95.01740265]
[169.41308594 -80.92201233]
[164.28277588 -66.82662964]
[159.25100708 -52.69576263]
[154.31800842 -38.53011703]
[149.38500977 -24.36447334]
[144.55102539 -10.16473484]
[139.81628418 4.06840563]
[135.08154297 18.30154610]
[130.34681702 32.53468704]
[125.61207581 46.76782608]
[128.93646240 61.28670120]
[117.23871613 71.93907928]
[112.50397491 86.17221832]
[117.03847504 92.14619446]
[128.01731873 81.92539215]
[138.99617004 71.70458984]
[149.97502136 61.48378754]
[160.95388794 51.26298523]
[168.32934570 38.20149612]
[182.80398560 34.26645279]
[195.77726746 41.79598999]
[199.54072571 56.31620026]
[191.85816956 69.19945526]
[177.29435730 72.79077148]
[164.49763489 80.61661530]
[151.70091248 88.44245911]
[138.90419006 96.26830292]
[126.10746002 104.09414673]
[130.64195251 110.06812286]
[145.62403870 109.33537292]
[160.60614014 108.60262299]
[175.58822632 107.86988068]
[188.99395752 99.46768188]
[202.08399963 106.57402039]
[217.06610107 105.84127045]
[232.04818726 105.10852814]
[247.03027344 104.37577820]
[262.55514526 97.56291962]
[273.39944458 110.59507751]
[263.87860107 124.62325287]
[247.76303101 119.35787201]
[232.78092957 120.09062195]
[217.79884338 120.82336426]
[202.81674194 121.55611420]
[190.48263550 129.90589905]
[176.32096863 122.85197449]
[161.33888245 123.58471680]
[146.35679626 124.31746674]
[131.37469482 125.05020905]
[119.95162201 134.77200317]
[116.83294678 149.44422913]
[113.71427155 164.11643982]
[110.59559631 178.78865051]
[107.47692108 193.46086121]
[104.35824585 208.13308716]
[118.14516449 202.22367859]
[131.42852783 209.19161987]
[134.40350342 223.89364624]
[124.87415314 235.47775269]
[109.87438965 235.39337158]
[100.47612762 223.70339966]
[96.34156799 238.12232971]
[92.20700836 252.54124451]
[88.07244873 266.96017456]
[83.93788910 281.37908936]
[79.90409088 295.82653809]
[76.07240295 310.32888794]
[85.79010773 322.28182983]
[86.59678650 337.48715210]
[78.39236450 350.10269165]
[64.49892426 355.40460205]
[60.76857758 369.93334961]
[57.03823090 384.46209717]
[61.10048676 399.75289917]
[50.44112396 410.15612793]
[46.71077347 424.68487549]
[42.98042679 439.21362305]
[39.25008011 453.74237061]
[43.31233597 469.03317261]
[32.65297318 479.43643188]
[28.92262268 493.96517944]
[32.98487854 509.25598145]
[22.32551575 519.65917969]
[18.59516716 534.18792725]
[14.86481953 548.71667480]
[22.15563583 552.51568604]
[28.74698639 557.42150879]
[34.47246933 563.30853271]
[39.18783188 570.02618408]
[42.77460861 577.40332031]
[45.14308167 585.25201416]
[46.23454666 593.37268066]
[46.02275085 601.55902100]
[44.51451874 609.60333252]
[41.74956894 617.30175781]
[37.79943848 624.45941162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 24]
[8 23]
[9 22]
[30 213]
[31 212]
[32 211]
[34 209]
[35 208]
[37 206]
[38 205]
[39 204]
[40 203]
[42 201]
[43 200]
[44 199]
[48 195]
[50 194]
[52 193]
[53 192]
[54 191]
[55 190]
[56 189]
[57 183]
[58 182]
[59 181]
[60 180]
[61 179]
[62 178]
[63 103]
[64 102]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[70 96]
[71 95]
[72 94]
[73 93]
[74 92]
[75 91]
[76 90]
[77 89]
[78 88]
[107 141]
[108 140]
[110 138]
[111 137]
[112 136]
[113 135]
[114 134]
[116 133]
[117 132]
[118 131]
[120 130]
[121 129]
[122 128]
[157 177]
[158 176]
[159 175]
[160 174]
[162 172]
[163 171]
[164 170]
[165 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
