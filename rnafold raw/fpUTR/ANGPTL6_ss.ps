%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUCCCAGCUCCACUCCCAGGCUCUGGGGGCUGGGGAGUGGUUACCAAGCCUCCUCUCUCCUUCUGUCCCACUGCCCUCUCCCCGUCUCUAGCUCAGAGGCCCCACUGGACCCUCGGCUCUUCCUUGGACUUCUUGUGUGUUCUGUGAGCUUCGCUGGAUUCAGGGUCUUGGGCAUCAGAGGUCCGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[93.43608856 157.56323242]
[93.19193268 142.56521606]
[85.92295074 142.46670532]
[78.52187347 141.09797668]
[71.21431732 138.41664124]
[61.93030167 150.19828796]
[52.64628983 161.97993469]
[43.36227798 173.76158142]
[34.07826614 185.54321289]
[24.79425430 197.32485962]
[15.51024151 209.10650635]
[30.48072243 210.04708862]
[39.21557617 222.24143982]
[35.28864670 236.71829224]
[21.58894157 242.82714844]
[8.19521332 236.07377625]
[4.96082640 221.42779541]
[-5.25028467 232.41566467]
[-15.46139622 243.40351868]
[-25.67250633 254.39138794]
[-35.88361740 265.37927246]
[-42.23686981 281.09780884]
[-59.09988022 279.34414673]
[-62.08292007 262.65472412]
[-46.87148285 255.16815186]
[-36.66037369 244.18028259]
[-26.44926262 233.19241333]
[-16.23815155 222.20454407]
[-6.02704000 211.21667480]
[3.72859812 199.82249451]
[13.01261044 188.04084778]
[22.29662323 176.25920105]
[31.58063507 164.47756958]
[40.86464691 152.69592285]
[50.14865875 140.91427612]
[59.43267059 129.13262939]
[52.61193848 115.77308655]
[37.62435532 116.38333130]
[22.63677597 116.99357605]
[7.31958675 127.20176697]
[-7.89590645 118.47082520]
[-22.87156868 119.32494354]
[-37.84723282 120.17906189]
[-52.82289505 121.03318024]
[-66.23078918 130.47566223]
[-80.99645233 123.34072876]
[-81.93023682 106.96818542]
[-68.07154083 98.20070648]
[-53.67701340 106.05751038]
[-38.70134735 105.20339966]
[-23.72568512 104.34928131]
[-8.75002193 103.49516296]
[-0.45766047 94.67510986]
[12.02211380 93.84937286]
[22.02653122 102.00598907]
[37.01411057 101.39574432]
[52.00169373 100.78549957]
[57.36194611 80.16693878]
[70.91574860 64.30295563]
[89.64148712 56.14099121]
[109.61296082 56.97488403]
[126.82106781 66.25421906]
[138.05494690 56.31441116]
[149.28883362 46.37459946]
[160.52272034 36.43479156]
[171.75660706 26.49498367]
[182.99049377 16.55517578]
[188.49928284 -2.82565308]
[207.58207703 -5.89077854]
[218.48646545 -16.19097900]
[229.39086914 -26.49117851]
[240.29525757 -36.79137802]
[240.90751648 -52.35617447]
[252.11286926 -62.64670563]
[266.94775391 -61.96708679]
[277.85214233 -72.26728821]
[288.75653076 -82.56748962]
[299.66091919 -92.86769104]
[310.56533813 -103.16789246]
[315.44033813 -122.71775818]
[334.41326904 -126.40239716]
[344.97662354 -137.05207825]
[355.53997803 -147.70175171]
[356.27059937 -160.58914185]
[365.30084229 -169.24255371]
[377.40570068 -169.41127014]
[388.14102173 -179.88758850]
[385.96798706 -191.59420776]
[389.68460083 -202.77952576]
[398.25540161 -210.69483948]
[409.46752930 -213.45428467]
[420.50125122 -210.48324585]
[431.57186890 -220.60458374]
[442.64248657 -230.72593689]
[453.71310425 -240.84727478]
[464.78369141 -250.96862793]
[475.85430908 -261.08996582]
[480.81860352 -276.11218262]
[495.43264771 -278.98953247]
[506.50323486 -289.11087036]
[517.57385254 -299.23223877]
[522.53814697 -314.25442505]
[537.15216064 -317.13177490]
[542.11645508 -332.15399170]
[556.73052979 -335.03134155]
[567.80114746 -345.15267944]
[578.87170410 -355.27404785]
[583.83599854 -370.29623413]
[598.45007324 -373.17361450]
[609.52069092 -383.29495239]
[620.59124756 -393.41629028]
[625.78387451 -412.88421631]
[644.81420898 -416.25955200]
[655.54956055 -426.73587036]
[655.90838623 -442.30856323]
[666.94470215 -452.78012085]
[681.78869629 -452.34207153]
[692.52398682 -462.81838989]
[694.15679932 -478.77813721]
[707.73004150 -487.33071899]
[722.83148193 -481.91531372]
[727.87658691 -466.68618774]
[718.99517822 -453.32580566]
[703.00030518 -452.08309937]
[692.26501465 -441.60678101]
[692.34057617 -426.75653076]
[681.60266113 -415.97909546]
[666.02587891 -416.00057983]
[655.29058838 -405.52426147]
[656.08422852 -395.31826782]
[651.01580811 -386.17221069]
[641.55157471 -381.23132324]
[630.71264648 -382.34567261]
[619.64202881 -372.22433472]
[608.57141113 -362.10299683]
[604.39892578 -347.80474854]
[588.99310303 -344.20343018]
[577.92248535 -334.08209229]
[566.85186768 -323.96075439]
[562.67938232 -309.66250610]
[547.27349854 -306.06118774]
[543.10107422 -291.76293945]
[527.69519043 -288.16162109]
[516.62457275 -278.04028320]
[505.55398560 -267.91891479]
[501.38153076 -253.62068176]
[485.97564697 -250.01936340]
[474.90502930 -239.89802551]
[463.83444214 -229.77667236]
[452.76382446 -219.65533447]
[441.69320679 -209.53398132]
[430.62261963 -199.41264343]
[430.91583252 -181.11978149]
[417.52603149 -168.18907166]
[398.61734009 -169.15229797]
[387.88204956 -158.67596436]
[384.05908203 -141.55505371]
[366.18963623 -137.13839722]
[355.62628174 -126.48872375]
[345.06292725 -115.83904266]
[346.02264404 -105.64733887]
[341.10372925 -96.41999817]
[331.72119141 -91.32572174]
[320.86553955 -92.26349640]
[309.96112061 -81.96329498]
[299.05673218 -71.66309357]
[288.15234375 -61.36289215]
[277.24795532 -51.06269073]
[277.08175659 -36.21318054]
[266.16986084 -25.61197472]
[250.59545898 -25.88698387]
[239.69107056 -15.58678246]
[228.78666687 -5.28658199]
[217.88226318 5.01361847]
[218.50973511 15.23116493]
[213.29307556 24.29350281]
[203.74967957 29.07968712]
[192.93031311 27.78906059]
[181.69642639 37.72887039]
[170.46253967 47.66867828]
[159.22865295 57.60848618]
[147.99476624 67.54829407]
[136.76087952 77.48810577]
[141.49949646 88.34069824]
[143.10617065 100.07321167]
[141.45965576 111.80020142]
[136.68418884 122.63664246]
[129.14019775 131.76469421]
[119.39701080 138.49549866]
[108.18994141 142.32106018]
[108.43409729 157.31907654]
[110.93810272 176.53833008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[5 36]
[6 35]
[7 34]
[8 33]
[9 32]
[10 31]
[11 30]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[37 57]
[38 56]
[39 55]
[41 52]
[42 51]
[43 50]
[44 49]
[62 183]
[63 182]
[64 181]
[65 180]
[66 179]
[67 178]
[69 174]
[70 173]
[71 172]
[72 171]
[75 168]
[76 167]
[77 166]
[78 165]
[79 164]
[81 160]
[82 159]
[83 158]
[86 156]
[87 155]
[92 152]
[93 151]
[94 150]
[95 149]
[96 148]
[97 147]
[99 145]
[100 144]
[101 143]
[103 141]
[105 139]
[106 138]
[107 137]
[109 135]
[110 134]
[111 133]
[113 129]
[114 128]
[117 125]
[118 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
