%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUUUUUUGAGACAGUUCUCCCUCUAUUGCCCAGGCUGGAGUGCAGUGGUGUAAACAUAGCUCCCUGCAGUUGCAAAUUCCUGGGCUCAAGUGAUCCUUCCAUCUCAGCCUCCCGAGUAGCUGGGACUACAGGUGUCCACCACCAUGCCUGGCUAAUGACCUCUUCUUUUGUAGAUACAUCAGCUAC\
) } def
/len { sequence length } bind def

/coor [
[140.64361572 217.09295654]
[136.81637573 231.59648132]
[123.56352997 238.62229919]
[109.41155243 233.65023804]
[103.46536255 219.87915039]
[109.55060577 206.16886902]
[109.77991486 191.17062378]
[110.00922394 176.17237854]
[110.23852539 161.17413330]
[102.75949860 161.73460388]
[95.36772156 174.78688049]
[87.97594452 187.83914185]
[80.58416748 200.89140320]
[81.26145172 217.27656555]
[67.26716614 225.82594299]
[52.99742889 217.74468994]
[53.13172531 201.34608459]
[67.53189850 193.49961853]
[74.92367554 180.44735718]
[82.31545258 167.39509583]
[89.70723724 154.34283447]
[59.17346573 127.46868896]
[57.74655151 91.47368622]
[42.07357788 93.63436890]
[33.05284882 81.78212738]
[19.08974266 76.30200958]
[6.03754234 84.48407745]
[-9.15225220 83.42410278]
[-20.66904640 73.73764801]
[-24.23106194 59.29984665]
[-38.19416809 53.81973267]
[-52.15727615 48.33961868]
[-66.12038422 42.85950089]
[-80.08348846 37.37938690]
[-94.04659271 31.89927101]
[-108.00969696 26.41915512]
[-124.23526764 38.06259537]
[-144.05644226 37.57659149]
[-159.46667480 25.33086014]
[-164.34568787 6.41029549]
[-178.64204407 1.86999404]
[-194.13682556 5.06720877]
[-203.92507935 -6.15951204]
[-218.22143555 -10.69981289]
[-232.51779175 -15.24011421]
[-246.81414795 -19.78041649]
[-261.11050415 -24.32071686]
[-270.25625610 -23.93683434]
[-275.60562134 -29.05711937]
[-289.82452393 -33.83441925]
[-305.37030029 -30.89519119]
[-314.97061157 -42.28305817]
[-329.18951416 -47.06035614]
[-342.43768311 -38.75252914]
[-357.91934204 -40.95531464]
[-368.32452393 -52.62862778]
[-368.74023438 -68.26068878]
[-358.97015381 -80.47050476]
[-343.62744141 -83.49298859]
[-329.95648193 -75.90100861]
[-324.41223145 -61.27926636]
[-310.19332886 -56.50196838]
[-295.66455078 -59.78289795]
[-285.04721069 -48.05332947]
[-270.82830811 -43.27603149]
[-256.57019043 -38.61706924]
[-242.27383423 -34.07676697]
[-227.97749329 -29.53646660]
[-213.68113708 -24.99616432]
[-199.38478088 -20.45586395]
[-184.91256714 -23.97783089]
[-174.10174561 -12.42635727]
[-159.80538940 -7.88605595]
[-153.00375366 -15.73198318]
[-143.94116211 -20.87851334]
[-133.64318848 -22.71386719]
[-123.28504944 -21.00264931]
[-114.05751801 -15.91569805]
[-107.02998352 -8.01338959]
[-103.02658081 1.81598663]
[-102.52958679 12.45604897]
[-88.56647491 17.93616486]
[-74.60337067 23.41628075]
[-60.64026642 28.89639473]
[-46.67715836 34.37651062]
[-32.71405411 39.85662460]
[-18.75094604 45.33674240]
[-6.31960726 37.17587280]
[8.71126366 37.90860748]
[20.56713867 47.46327209]
[24.56985855 62.33890533]
[38.53296280 67.81902313]
[53.20719910 65.26636505]
[63.22666550 77.51058197]
[67.12594604 72.11902618]
[71.80854797 67.39181519]
[77.16288757 63.44157791]
[83.06138611 60.36244965]
[89.36348724 58.22780228]
[95.91904449 57.08848953]
[102.57183838 56.97166443]
[109.16334534 57.88011169]
[115.53651428 59.79218292]
[121.53948212 62.66231537]
[131.18128967 51.17164993]
[140.82310486 39.68098068]
[150.46492004 28.19031525]
[160.10673523 16.69964981]
[169.74855042 5.20898247]
[179.39036560 -6.28168392]
[178.20089722 -21.81303596]
[188.14274597 -33.32885361]
[202.95684814 -34.36712646]
[205.27011108 -50.60229874]
[220.58563232 -56.46463394]
[233.14811707 -45.92346573]
[230.03434753 -29.82264328]
[214.44750977 -24.72531128]
[215.99746704 -9.95597553]
[206.38298035 1.83454537]
[190.88102722 3.36013007]
[181.23922729 14.85079670]
[171.59741211 26.34146309]
[161.95559692 37.83213043]
[152.31378174 49.32279587]
[142.67196655 60.81346512]
[133.03015137 72.30413055]
[142.09887695 81.07728577]
[148.67588806 92.78939056]
[151.82855225 106.68592072]
[150.86399841 121.72413635]
[165.86347961 121.59947205]
[180.86296082 121.47480011]
[195.86244202 121.35013580]
[210.86192322 121.22547150]
[225.86140442 121.10080719]
[240.86088562 120.97614288]
[249.76701355 108.26942444]
[264.45193481 103.25621033]
[279.26904297 107.86418152]
[288.52081299 120.32147980]
[288.64978027 135.83802795]
[279.60632324 148.44737244]
[264.86788940 153.30099487]
[250.10165405 148.53256226]
[240.98554993 135.97563171]
[225.98606873 136.10029602]
[210.98658752 136.22496033]
[195.98710632 136.34962463]
[180.98762512 136.47428894]
[165.98814392 136.59895325]
[150.98866272 136.72361755]
[144.48040771 150.23814392]
[153.73497009 162.04293823]
[162.98951721 173.84773254]
[177.59297180 179.93460083]
[179.35617065 194.72447205]
[188.61073303 206.52926636]
[197.86528015 218.33406067]
[211.34545898 218.40554810]
[222.16175842 226.12020874]
[226.49002075 238.47492981]
[222.95950317 250.87847900]
[232.01657104 262.83547974]
[241.07363892 274.79244995]
[256.58435059 274.34832764]
[269.37481689 283.13378906]
[274.52679443 297.77059937]
[270.05929565 312.63064575]
[257.69012451 321.99993896]
[242.17550659 322.27575684]
[229.48110962 313.35208130]
[224.48820496 298.66021729]
[229.11665344 283.84951782]
[220.05958557 271.89254761]
[211.00251770 259.93554688]
[194.26753235 258.35687256]
[183.63577271 244.90403748]
[186.06048584 227.58862305]
[176.80593872 215.78382874]
[167.55137634 203.97903442]
[153.60987854 198.73652649]
[151.18472290 183.10229492]
[141.93017578 171.29750061]
[132.67561340 159.49270630]
[125.19658661 160.05317688]
[127.65869904 174.84973145]
[130.12081909 189.64628601]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 21]
[11 20]
[12 19]
[13 18]
[23 94]
[25 92]
[26 91]
[30 87]
[31 86]
[32 85]
[33 84]
[34 83]
[35 82]
[36 81]
[40 73]
[41 72]
[43 70]
[44 69]
[45 68]
[46 67]
[47 66]
[49 65]
[50 64]
[52 62]
[53 61]
[104 127]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[110 121]
[113 118]
[131 152]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[153 185]
[154 184]
[155 183]
[157 181]
[158 180]
[159 179]
[163 176]
[164 175]
[165 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
