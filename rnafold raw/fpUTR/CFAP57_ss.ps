%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGGUUUGUCGUUGCUAUAGGAACCGCUACGGCGUUUGAAAGUGUCCGGGUUGCUUAGGAUCCCUACAGGUAGCGCCUCUGGAUACAUGCGUGGUCUGCUGACCCAGAGAGAAACGAAAGCAGAACUGUUUGGCGGGAGAUC\
) } def
/len { sequence length } bind def

/coor [
[86.51248932 200.78631592]
[96.25863647 188.04299927]
[95.61769104 173.05670166]
[94.97674561 158.07040405]
[94.33580017 143.08409119]
[93.69485474 128.09779358]
[93.05390930 113.11149597]
[89.56002045 98.52407837]
[83.34204865 84.87355042]
[77.12408447 71.22303009]
[70.90612030 57.57249832]
[58.14429855 48.22121048]
[59.90966415 33.43159485]
[53.69169617 19.78106880]
[40.92987823 10.42977905]
[42.69524384 -4.35983801]
[36.47727585 -18.01036453]
[30.25930786 -31.66089058]
[15.19114685 -34.86349487]
[5.01697493 -46.19220352]
[3.48259139 -61.16249466]
[10.96794415 -74.01190948]
[4.74997711 -87.66243744]
[-1.46799076 -101.31296539]
[-14.22980690 -110.66425323]
[-12.46444321 -125.45387268]
[-18.82791901 -139.03717041]
[-25.33617401 -152.55171204]
[-31.84443092 -166.06623840]
[-38.35268784 -179.58078003]
[-44.86094284 -193.09530640]
[-48.67788315 -195.48730469]
[-51.23590851 -198.66957092]
[-52.44105148 -202.13410950]
[-52.37926483 -205.39628601]
[-51.29211426 -208.05325317]
[-56.62271500 -222.07411194]
[-61.95331573 -236.09498596]
[-67.28391266 -250.11584473]
[-74.81130219 -237.14132690]
[-89.25637054 -233.09902954]
[-102.42464447 -240.28208923]
[-106.84599304 -254.61567688]
[-100.01223755 -267.96856689]
[-85.80007172 -272.76589966]
[-72.27179718 -266.28616333]
[-75.76567841 -280.87356567]
[-79.25956726 -295.46099854]
[-82.75345612 -310.04840088]
[-86.24734497 -324.63583374]
[-89.74122620 -339.22323608]
[-93.23511505 -353.81066895]
[-96.72900391 -368.39807129]
[-100.84301758 -382.82287598]
[-105.56964111 -397.05871582]
[-110.29626465 -411.29455566]
[-115.02288818 -425.53039551]
[-119.74951172 -439.76623535]
[-124.47613525 -454.00207520]
[-129.50588989 -468.13363647]
[-134.83648682 -482.15451050]
[-140.16709900 -496.17538452]
[-145.49769592 -510.19622803]
[-156.77815247 -522.85278320]
[-147.73901367 -537.19604492]
[-131.45396423 -532.48077393]
[-131.47682190 -515.52685547]
[-126.14622498 -501.50598145]
[-120.81562805 -487.48510742]
[-115.48502350 -473.46423340]
[-111.50936127 -470.70300293]
[-109.26638031 -465.38409424]
[-110.24029541 -458.72869873]
[-105.51367188 -444.49285889]
[-100.78704834 -430.25701904]
[-96.06042480 -416.02117920]
[-91.33380127 -401.78533936]
[-86.60717773 -387.54949951]
[-84.08580780 -386.17687988]
[-81.97684479 -383.68734741]
[-80.72206116 -380.24047852]
[-80.69426727 -376.15765381]
[-82.14158630 -371.89196777]
[-78.64769745 -357.30453491]
[-75.15380859 -342.71713257]
[-71.65992737 -328.12969971]
[-68.16603851 -313.54229736]
[-64.67214966 -298.95486450]
[-61.17826462 -284.36746216]
[-57.68437576 -269.78002930]
[-53.26305008 -255.44645691]
[-47.93244934 -241.42558289]
[-42.60184860 -227.40472412]
[-37.27124786 -213.38385010]
[-31.34641075 -199.60356140]
[-24.83815384 -186.08903503]
[-18.32989693 -172.57449341]
[-11.82164192 -159.05996704]
[-5.31338549 -145.54542542]
[0.46348765 -140.85043335]
[1.18608320 -131.67184448]
[13.50314903 -123.29692841]
[12.18253613 -107.53092957]
[18.40050316 -93.88040924]
[24.61847115 -80.22988129]
[39.22589111 -77.44396973]
[49.51355743 -66.46089172]
[51.38320160 -51.34938049]
[43.90983582 -37.87886047]
[50.12780380 -24.22833252]
[56.34577179 -10.57780552]
[68.66283417 -2.20289326]
[67.34222412 13.56309986]
[73.56018829 27.21362686]
[85.87725830 35.58853912]
[84.55664062 51.35453415]
[90.77461243 65.00505829]
[96.99257660 78.65558624]
[103.21054840 92.30611420]
[113.92802429 83.91011810]
[129.37060547 82.43000031]
[146.02236938 89.66393280]
[156.68548584 100.21371460]
[167.34860229 110.76349640]
[178.01171875 121.31327820]
[188.67485046 131.86305237]
[204.66627502 135.49711609]
[209.25564575 151.24099731]
[197.72181702 162.89874268]
[181.92979431 158.47785950]
[178.12506104 142.52616882]
[167.46194458 131.97639465]
[156.79882812 121.42661285]
[146.13571167 110.87683105]
[135.47257996 100.32704926]
[128.61448669 103.36292267]
[114.89830017 109.43467712]
[108.04020691 112.47055054]
[108.68115234 127.45684814]
[109.32209778 142.44314575]
[109.96304321 157.42945862]
[110.60398865 172.41575623]
[111.24493408 187.40205383]
[122.04354095 199.26669312]
[119.35804749 215.08338928]
[105.24854279 222.71891785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 143]
[3 142]
[4 141]
[5 140]
[6 139]
[7 138]
[8 119]
[9 118]
[10 117]
[11 116]
[13 114]
[14 113]
[16 111]
[17 110]
[18 109]
[22 105]
[23 104]
[24 103]
[26 101]
[27 99]
[28 98]
[29 97]
[30 96]
[31 95]
[36 94]
[37 93]
[38 92]
[39 91]
[46 90]
[47 89]
[48 88]
[49 87]
[50 86]
[51 85]
[52 84]
[53 83]
[54 78]
[55 77]
[56 76]
[57 75]
[58 74]
[59 73]
[60 70]
[61 69]
[62 68]
[63 67]
[122 135]
[123 134]
[124 133]
[125 132]
[126 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
