%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCCCCAGGAGCUAUGACAAGCAAAGGAACAUACUUGCCUGGAGAUAGCCUUUGCGAUAUUUAAAUGUCCGUGGAUACAGAAAUCUCUGCAGGCAAGUUGCUCCAGAGCAUAUUGCAGGACAAGCCUGUAACGAAUAGUUAAAUUCACGGCAUCUGGAUUCCUAAUCCUUUUCCGAA\
) } def
/len { sequence length } bind def

/coor [
[111.75708771 370.40447998]
[112.15969849 355.34951782]
[115.78971100 340.73318481]
[122.47734070 327.23910522]
[131.90979004 315.49847412]
[143.64588928 306.06036377]
[157.13673401 299.36621094]
[153.50790405 284.81176758]
[149.87907410 270.25735474]
[146.25024414 255.70291138]
[142.62141418 241.14846802]
[132.03494263 230.67108154]
[136.20384216 215.40901184]
[132.57501221 200.85456848]
[128.94618225 186.30014038]
[118.35971069 175.82273865]
[122.52861786 160.56066895]
[118.89978790 146.00624084]
[115.27095795 131.45179749]
[94.13572693 132.67153931]
[77.30037689 121.73036194]
[70.61096954 103.96116638]
[75.47016144 86.73803711]
[64.68006897 76.31816864]
[49.48707962 78.86360931]
[35.86765289 72.05445099]
[28.95102501 58.68941498]
[31.20358467 43.99030304]
[20.41348839 33.57042694]
[9.62339115 23.15055084]
[-5.67840242 19.12989235]
[-9.45885563 4.72303915]
[-20.24895287 -5.69683647]
[-28.62094879 -9.42138767]
[-31.13443565 -16.39397049]
[-41.74103546 -27.00057220]
[-52.34763718 -37.60717392]
[-62.95423889 -48.21377563]
[-73.56084442 -58.82037735]
[-84.16744232 -69.42697906]
[-94.77404785 -80.03358459]
[-105.38064575 -90.64018250]
[-115.98725128 -101.24678802]
[-126.77734375 -111.66665649]
[-137.74765015 -121.89663696]
[-148.71795654 -132.12661743]
[-159.68826294 -142.35658264]
[-170.65856934 -152.58656311]
[-186.23088074 -152.21156311]
[-197.21060181 -162.74249268]
[-197.47213745 -177.59062195]
[-218.59651184 -181.08314514]
[-223.88829041 -201.01670837]
[-235.37895203 -210.65852356]
[-246.86962891 -220.30033875]
[-258.36029053 -229.94215393]
[-269.85095215 -239.58396912]
[-281.34161377 -249.22578430]
[-292.91598511 -258.76696777]
[-304.57318115 -268.20675659]
[-316.23037720 -277.64657593]
[-327.88757324 -287.08636475]
[-344.16064453 -289.11593628]
[-350.28936768 -304.32681274]
[-339.96905518 -317.07135010]
[-323.81634521 -314.23904419]
[-318.44775391 -298.74356079]
[-306.79055786 -289.30374146]
[-295.13336182 -279.86395264]
[-283.47619629 -270.42413330]
[-276.27908325 -268.65325928]
[-271.69979858 -260.71646118]
[-260.20913696 -251.07463074]
[-248.71847534 -241.43281555]
[-237.22781372 -231.79100037]
[-225.73713684 -222.14918518]
[-214.24647522 -212.50737000]
[-205.59765625 -214.72050476]
[-196.76992798 -212.65855408]
[-189.78710938 -206.66362000]
[-186.30995178 -197.99388123]
[-187.24217224 -188.56092834]
[-172.41195679 -189.33578491]
[-161.14077759 -179.11741638]
[-160.42858887 -163.55686951]
[-149.45828247 -153.32688904]
[-138.48797607 -143.09692383]
[-127.51767731 -132.86694336]
[-116.54737091 -122.63696289]
[-111.80158997 -121.90847778]
[-107.47186279 -118.17314148]
[-105.38064575 -111.85338593]
[-94.77404785 -101.24678802]
[-84.16744232 -90.64018250]
[-73.56084442 -80.03358459]
[-62.95423889 -69.42697906]
[-52.34763718 -58.82037735]
[-41.74103546 -48.21377563]
[-31.13443565 -37.60717392]
[-20.52783394 -27.00057220]
[-9.82907677 -16.48693275]
[0.96102023 -6.06705809]
[15.49103355 -2.79170012]
[20.04326630 12.36045361]
[30.83336449 22.78032875]
[41.62345886 33.20020294]
[56.23500824 30.43602562]
[69.83329010 36.88200760]
[77.11360931 50.25550079]
[75.09994507 65.52806854]
[85.89003754 75.94794464]
[98.53910828 70.38122559]
[113.15618134 71.46237183]
[126.27218628 79.71229553]
[134.42108154 93.86756134]
[148.32884216 88.24846649]
[162.23660278 82.62936401]
[176.14436340 77.01026917]
[190.05210876 71.39116669]
[203.95986938 65.77207184]
[217.86763000 60.15296936]
[225.43449402 46.00651550]
[241.23794556 43.24417877]
[253.15492249 53.98498917]
[252.04376221 69.98951721]
[238.75682068 78.98045349]
[223.48672485 74.06072998]
[209.57897949 79.67982483]
[195.67121887 85.29892731]
[181.76345825 90.91802216]
[167.85569763 96.53712463]
[153.94793701 102.15621948]
[140.04017639 107.77532196]
[154.93933105 109.51183319]
[168.87248230 103.95601654]
[183.84474182 104.86803436]
[197.00051880 112.07394409]
[205.83074951 124.19941711]
[208.65129089 138.93185425]
[204.92419434 153.46144104]
[195.36032104 165.01704407]
[181.78369141 171.39477539]
[166.78370667 171.37823486]
[153.22117615 164.97058105]
[143.68280029 153.39390564]
[139.98776245 138.85594177]
[129.82539368 127.82296753]
[133.45422363 142.37741089]
[137.08305359 156.93183899]
[147.92909241 168.45027161]
[143.50062561 182.67131042]
[147.12945557 197.22573853]
[150.75828552 211.78018188]
[161.60430908 223.29859924]
[157.17585754 237.51963806]
[160.80467224 252.07408142]
[164.43350220 266.62850952]
[168.06233215 281.18295288]
[171.69116211 295.73739624]
[186.74557495 295.31439209]
[201.53886414 298.13800049]
[215.37911987 304.07611084]
[227.61901855 312.85101318]
[237.68608093 324.05227661]
[245.10945129 337.15600586]
[249.54190063 351.54931641]
[250.77615356 366.55899048]
[248.75445557 381.48303223]
[243.57136536 395.62338257]
[235.46932983 408.31869507]
[224.82725525 418.97518921]
[212.14292908 427.09439087]
[198.00959778 432.29663086]
[183.08831787 434.33853149]
[168.07698059 433.12460327]
[153.67767334 428.71163940]
[140.56390381 421.30603027]
[129.34901428 411.25415039]
[120.55755615 399.02612305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 159]
[8 158]
[9 157]
[10 156]
[11 155]
[13 153]
[14 152]
[15 151]
[17 149]
[18 148]
[19 147]
[23 111]
[24 110]
[28 106]
[29 105]
[30 104]
[32 102]
[33 101]
[35 100]
[36 99]
[37 98]
[38 97]
[39 96]
[40 95]
[41 94]
[42 93]
[43 92]
[44 89]
[45 88]
[46 87]
[47 86]
[48 85]
[51 82]
[53 77]
[54 76]
[55 75]
[56 74]
[57 73]
[58 72]
[59 70]
[60 69]
[61 68]
[62 67]
[115 133]
[116 132]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
