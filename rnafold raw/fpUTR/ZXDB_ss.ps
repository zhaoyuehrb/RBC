%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACCUCUGGGCUUUCUAUUCUGUUCCAGAGACCCAGUACCAGAAUAUUUAAAUCACUGUGGCGUUAAAUACGUUUUAAUAUCUGAUAGGGCCAGUUUCUGCGCAUUGCACAUUUUUUUUUCCCCUUUCAGGAACGUGUUCAGGCCCGCGGCAGGGGGCGGGAUCGCGCCUCCUCCUCGGCUCUGGUUCCAGCCGAGCCUCUCGGACGCAGAG\
) } def
/len { sequence length } bind def

/coor [
[-3.13425922 219.31164551]
[-12.16343880 231.28970337]
[-6.28402901 245.40989685]
[-8.24875736 260.47763062]
[-17.43067551 272.45922852]
[-31.28437233 278.19778442]
[-46.05091476 276.24462891]
[-55.08009338 288.22268677]
[-64.10927582 300.20077515]
[-73.13845062 312.17883301]
[-82.16763306 324.15689087]
[-84.83345032 332.89120483]
[-91.41832733 336.24319458]
[-100.62236786 348.08743286]
[-109.82640839 359.93164062]
[-119.03044891 371.77587891]
[-128.23449707 383.62008667]
[-122.36956787 397.81509399]
[-124.40380859 413.03869629]
[-133.79000854 425.19577026]
[-148.00332642 431.01617432]
[-163.22045898 428.93423462]
[-175.34806824 419.50997925]
[-181.12388611 405.27847290]
[-178.99424744 390.06796265]
[-169.53202820 377.96994019]
[-155.28250122 372.23876953]
[-140.07872009 374.41604614]
[-130.87467957 362.57183838]
[-121.67063141 350.72760010]
[-112.46659088 338.88339233]
[-103.26255035 327.03915405]
[-94.14569092 315.12771606]
[-85.11651611 303.14962769]
[-76.08733368 291.17156982]
[-67.05815887 279.19351196]
[-58.02897644 267.21545410]
[-63.97221375 253.55737305]
[-62.26969147 238.65913391]
[-53.27916336 226.53326416]
[-39.33470917 220.49595642]
[-24.14149857 222.26051331]
[-15.11231899 210.28245544]
[-19.42612648 204.24781799]
[-22.42323303 197.44999695]
[-23.97347641 190.17282104]
[-24.00720978 182.72114563]
[-22.51841927 175.40814209]
[-19.56517029 168.54205322]
[-15.26735497 162.41325378]
[-9.80183125 157.28195190]
[-3.39514685 153.36712646]
[3.68584561 150.83726501]
[11.14510632 149.80297852]
[18.66978264 150.31230164]
[25.94333267 152.34840393]
[32.65884018 155.83015442]
[43.34300995 145.30169678]
[54.02717590 134.77323914]
[64.71134949 124.24477386]
[75.39551544 113.71630859]
[70.30220795 102.46690369]
[70.39810944 89.43508911]
[76.23027039 77.02061462]
[87.24108124 67.73945618]
[101.78154755 63.72111511]
[117.34912109 66.24417877]
[131.01786804 75.40785217]
[129.69834900 60.46600342]
[128.37882996 45.52415466]
[127.05930328 30.58230591]
[125.73978424 15.64045620]
[124.42025757 0.69860703]
[123.10073853 -14.24324226]
[121.78121185 -29.18509102]
[120.46169281 -44.12694168]
[110.03501129 -33.34342194]
[95.04003906 -32.95515823]
[84.06926727 -43.18463516]
[83.40923309 -58.17010880]
[93.43814850 -69.32451630]
[108.40918732 -70.25611115]
[119.74314117 -60.43191910]
[119.74314117 -75.43191528]
[119.74314117 -90.43191528]
[119.74314117 -105.43191528]
[112.00583649 -119.23209381]
[119.74314117 -131.95936584]
[119.74314117 -146.95936584]
[119.74314117 -161.95936584]
[119.74314117 -176.95936584]
[104.03969574 -181.87570190]
[90.63671112 -191.38966370]
[80.83728027 -204.56213379]
[75.58977509 -220.09902954]
[75.39608002 -236.47836304]
[80.26361084 -252.09939575]
[89.70571899 -265.43905640]
[102.79032135 -275.20040894]
[118.23188019 -280.43881226]
[117.79153442 -295.43237305]
[109.65244293 -308.99945068]
[117.01277924 -321.94836426]
[116.57243347 -336.94189453]
[110.06372070 -352.59671021]
[123.30493927 -363.18475342]
[137.14471436 -353.39205933]
[131.56596375 -337.38226318]
[132.00631714 -322.38873291]
[140.11390686 -309.89407349]
[132.78506470 -295.87271118]
[133.22541809 -280.87918091]
[146.46041870 -277.60476685]
[158.40576172 -271.00601196]
[168.24198914 -261.52804565]
[175.29237366 -249.81378174]
[179.06942749 -236.66027832]
[179.30874634 -222.96456909]
[175.98731995 -209.66238403]
[169.32572937 -197.66435242]
[159.77340698 -187.79354858]
[147.97833252 -180.72908020]
[134.74313354 -176.95936584]
[134.74313354 -161.95936584]
[134.74313354 -146.95936584]
[134.74313354 -131.95936584]
[142.48043823 -119.23209381]
[134.74313354 -105.43191528]
[134.74313354 -90.43191528]
[134.74313354 -75.43191528]
[134.74313354 -60.43191910]
[135.40353394 -45.44646454]
[136.72306824 -30.50461388]
[138.04258728 -15.56276512]
[139.36210632 -0.62091577]
[140.68162537 14.32093334]
[142.00115967 29.26278305]
[143.32067871 44.20463181]
[144.64019775 59.14648056]
[145.95971680 74.08833313]
[156.64389038 84.61679077]
[171.60350037 85.71682739]
[186.56311035 86.81686401]
[201.52272034 87.91690063]
[215.85314941 81.21248627]
[227.97872925 89.86231232]
[242.93833923 90.96234894]
[257.89794922 92.06239319]
[272.22839355 85.35797119]
[284.35397339 94.00780487]
[299.31356812 95.10784149]
[308.09930420 92.61660004]
[314.48419189 96.33541107]
[329.42605591 97.65493011]
[344.36788940 98.97445679]
[359.30975342 100.29397583]
[374.25158691 101.61350250]
[389.19345093 102.93302155]
[404.13528442 104.25254822]
[419.07714844 105.57206726]
[431.02972412 95.23229218]
[446.78659058 96.45604706]
[456.99942017 108.51729584]
[455.60913086 124.26031494]
[443.44058228 134.34504700]
[427.71313477 132.78840637]
[417.75762939 120.51391602]
[402.81576538 119.19439697]
[387.87393188 117.87487030]
[372.93206787 116.55535126]
[357.99023438 115.23583221]
[343.04837036 113.91630554]
[328.10653687 112.59678650]
[313.16467285 111.27725983]
[298.21353149 110.06745148]
[283.25393677 108.96740723]
[269.99349976 115.75051117]
[256.79791260 107.02199554]
[241.83830261 105.92195892]
[226.87869263 104.82192230]
[213.61827087 111.60502625]
[200.42268372 102.87651062]
[185.46307373 101.77647400]
[170.50346375 100.67643738]
[155.54385376 99.57640076]
[151.29731750 105.75838470]
[163.89822388 113.89578247]
[178.17169189 118.50752258]
[178.44427490 133.50505066]
[164.34780884 138.63240051]
[154.92124939 126.96421051]
[142.80426025 118.12236023]
[138.55772400 124.30434418]
[144.95237732 137.87300110]
[151.34703064 151.44165039]
[157.74169922 165.01029968]
[164.13635254 178.57896423]
[176.35812378 190.32905579]
[168.45054626 205.32594299]
[151.85070801 201.87895203]
[150.56770325 184.97361755]
[144.17303467 171.40496826]
[137.77838135 157.83630371]
[131.38372803 144.26765442]
[124.98906708 130.69900513]
[102.70688629 133.76834106]
[85.92398071 124.40048218]
[75.23980713 134.92893982]
[64.55564117 145.45739746]
[53.87147141 155.98587036]
[43.18730164 166.51432800]
[48.80912399 189.18666077]
[39.71071625 210.56826782]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[57 211]
[58 210]
[59 209]
[60 208]
[61 207]
[68 140]
[69 139]
[70 138]
[71 137]
[72 136]
[73 135]
[74 134]
[75 133]
[76 132]
[83 131]
[84 130]
[85 129]
[86 128]
[88 126]
[89 125]
[90 124]
[91 123]
[100 112]
[101 111]
[103 109]
[104 108]
[141 185]
[142 184]
[143 183]
[144 182]
[146 180]
[147 179]
[148 178]
[150 176]
[151 175]
[153 174]
[154 173]
[155 172]
[156 171]
[157 170]
[158 169]
[159 168]
[160 167]
[193 205]
[194 204]
[195 203]
[196 202]
[197 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
