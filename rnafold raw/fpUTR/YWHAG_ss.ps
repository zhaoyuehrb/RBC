%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGGUUGUCCGUCAGUGGCACGCACAGCAGCCGCAGCCGCCUCGCGCCCGGUCCCGCGGUCGCAGCUCCAGCCGCCUCCUCCGCGCAGCCGCCGCCUCAGCUGCUCGCUCUGUGGGUCGGUCCUCUCCGGCACUUGGGCUCCAGUCGCGCCCUCCAAGCCCUUCAGGCCGCCCCAGUGUCCUCCUCCUUCUCCGGCCAGACCCAGCCCCGCGAAG\
) } def
/len { sequence length } bind def

/coor [
[79.41754150 385.88897705]
[85.08164215 371.53900146]
[97.61809540 362.54785156]
[96.75391388 347.57275391]
[95.88973236 332.59765625]
[95.02555084 317.62258911]
[94.16137695 302.64749146]
[93.29719543 287.67242432]
[92.43301392 272.69732666]
[84.22747803 266.61853027]
[80.64453125 256.82177734]
[83.09272766 246.45606995]
[90.99930573 238.99607849]
[90.56703949 224.00230408]
[90.13477325 209.00852966]
[87.34218597 205.14004517]
[86.94662476 199.47735596]
[89.91238403 193.57781982]
[89.91238403 178.57781982]
[89.91238403 163.57781982]
[89.91238403 148.57781982]
[86.77066040 141.89251709]
[90.02201843 133.36206055]
[90.23818207 118.36361694]
[85.86696625 108.42263794]
[87.89241028 99.91133881]
[74.45929718 93.23664856]
[61.02618790 86.56195831]
[47.59307480 79.88726807]
[38.52058792 78.87226868]
[34.01552200 73.01837921]
[20.67998886 66.15080261]
[7.34445620 59.28322983]
[-11.02555847 60.59198380]
[-19.93270302 45.46890259]
[-33.36581421 38.79421234]
[-46.79892731 32.11952209]
[-60.23204041 25.44483376]
[-73.66515350 18.77014160]
[-89.46670532 19.55841827]
[-97.42156219 6.96597719]
[-107.73209381 12.87203503]
[-119.49290466 13.06811523]
[-129.78274536 7.62113142]
[-136.10145569 -2.01465034]
[-136.97720337 -13.38391972]
[-150.21238708 -20.44295311]
[-163.44757080 -27.50198555]
[-175.98809814 -24.50034523]
[-186.86488342 -30.64817429]
[-190.51788330 -42.17652512]
[-203.64997864 -49.42555237]
[-216.78205872 -56.67457581]
[-229.91413879 -63.92360306]
[-244.92587280 -59.76601028]
[-258.14041138 -67.30462646]
[-262.01153564 -81.64163971]
[-275.14361572 -88.89066315]
[-288.27569580 -96.13969421]
[-301.40777588 -103.38871765]
[-314.53985596 -110.63774109]
[-333.52749634 -104.05419922]
[-350.96203613 -113.42018127]
[-355.80346680 -132.29463196]
[-369.23657227 -138.96932983]
[-385.03814697 -138.18104553]
[-392.99298096 -150.77349854]
[-406.42611694 -157.44818115]
[-422.75061035 -155.88528442]
[-432.04470825 -169.39646912]
[-424.74740601 -184.08256531]
[-408.36557007 -184.83580017]
[-399.75140381 -170.88130188]
[-386.31829834 -164.20660400]
[-371.47756958 -165.47230530]
[-362.56188965 -152.40243530]
[-349.12878418 -145.72775269]
[-340.64706421 -151.49380493]
[-330.45797729 -153.23518372]
[-320.38659668 -150.57208252]
[-312.26510620 -143.91967773]
[-307.59954834 -134.42506409]
[-307.29083252 -123.76982880]
[-294.15875244 -116.52079773]
[-281.02667236 -109.27177429]
[-267.89459229 -102.02275085]
[-254.76249695 -94.77372742]
[-240.56793213 -99.13832092]
[-227.14686584 -91.97385406]
[-222.66511536 -77.05568695]
[-209.53303528 -69.80666351]
[-196.40095520 -62.55763626]
[-183.26885986 -55.30860901]
[-165.76438904 -56.58846664]
[-156.38853455 -40.73716736]
[-143.15335083 -33.67813492]
[-129.91816711 -26.61910248]
[-112.75286102 -32.99134064]
[-96.09757233 -24.64508629]
[-90.74687195 -6.46713543]
[-75.90614319 -7.73283005]
[-66.99046326 5.33702993]
[-53.55735016 12.01172066]
[-40.12423706 18.68641090]
[-26.69112396 25.36110115]
[-13.25801182 32.03579330]
[-1.69915271 28.48049545]
[9.54517174 33.92708588]
[14.21203136 45.94769669]
[27.54756355 52.81527328]
[40.88309479 59.68284607]
[54.26776505 66.45415497]
[67.70087433 73.12884521]
[81.13398743 79.80353546]
[94.56710052 86.47822571]
[109.56359863 86.15400696]
[122.69567871 78.90498352]
[135.82775879 71.65595245]
[144.17024231 58.21297455]
[159.05180359 58.83607864]
[172.18388367 51.58705521]
[185.31597900 44.33802795]
[191.31269836 37.45475006]
[198.68994141 37.08071518]
[211.92512512 30.02168274]
[225.16030884 22.96264839]
[225.77713013 7.67975760]
[233.90715027 -5.15767145]
[247.28234863 -12.15556622]
[262.26422119 -11.52327633]
[274.83337402 -3.53065872]
[288.06854248 -10.58969212]
[301.30374146 -17.64872551]
[301.69015503 -34.18124771]
[310.31314087 -48.18196487]
[324.73773193 -55.87793350]
[340.98095703 -55.25148773]
[354.61154175 -46.56833267]
[367.74362183 -53.81735611]
[380.87570190 -61.06638336]
[394.00778198 -68.31540680]
[402.35025024 -81.75838470]
[417.23181152 -81.13528442]
[423.04461670 -96.08824158]
[438.40182495 -100.72890472]
[451.52270508 -91.49734497]
[452.34207153 -75.47523499]
[440.23132324 -64.95335388]
[424.48083496 -68.00319672]
[417.07766724 -55.07872009]
[401.25680542 -55.18332291]
[388.12472534 -47.93429947]
[374.99264526 -40.68527222]
[361.86056519 -33.43624878]
[362.49920654 -19.79685402]
[357.17437744 -7.15177822]
[346.87228394 2.01002741]
[333.56484985 5.85867214]
[319.83224487 3.58860850]
[308.36276245 -4.41354275]
[295.12759399 2.64549041]
[281.89239502 9.70452404]
[281.52813721 24.59522247]
[273.70733643 37.38940048]
[260.44494629 44.59876633]
[245.25489807 44.19917297]
[232.21934509 36.19783020]
[218.98416138 43.25686646]
[205.74897766 50.31589890]
[192.56500244 57.47011185]
[179.43292236 64.71913910]
[166.30082703 71.96816254]
[158.89764404 84.89264679]
[143.07679749 84.78804016]
[129.94470215 92.03706360]
[116.81262207 99.28608704]
[131.81248474 99.22032928]
[145.29745483 92.65104675]
[160.16546631 90.66561127]
[174.90168762 93.46631622]
[188.00466919 100.76779938]
[198.13941956 111.82614899]
[204.27331543 125.51466370]
[205.78140259 140.43865967]
[202.51002502 155.07757568]
[194.79251099 167.93992615]
[183.41516113 177.71519470]
[169.53715515 183.40739441]
[154.57250977 184.43659973]
[140.04589844 180.69792175]
[127.43740845 172.57229614]
[118.03165436 160.88760376]
[112.78697968 146.83438110]
[112.23756409 131.84577942]
[105.23661804 118.57977295]
[105.02046204 133.57821655]
[104.91238403 148.57781982]
[104.91238403 163.57781982]
[104.91238403 178.57781982]
[104.91238403 193.57781982]
[105.12854004 208.57626343]
[105.56080627 223.57003784]
[105.99308014 238.56381226]
[117.33248901 255.23466492]
[107.40810394 271.83316040]
[108.27227783 286.80822754]
[109.13645935 301.78332520]
[110.00064087 316.75839233]
[110.86482239 331.73348999]
[111.72899628 346.70858765]
[112.59317780 361.68365479]
[126.08068848 369.17303467]
[133.35789490 382.77618408]
[132.10269165 398.15240479]
[122.71558380 410.39517212]
[108.19197845 415.59790039]
[93.16629791 412.10040283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 211]
[4 210]
[5 209]
[6 208]
[7 207]
[8 206]
[9 205]
[13 203]
[14 202]
[15 201]
[18 200]
[19 199]
[20 198]
[21 197]
[23 196]
[24 195]
[26 115]
[27 114]
[28 113]
[29 112]
[31 111]
[32 110]
[33 109]
[35 106]
[36 105]
[37 104]
[38 103]
[39 102]
[41 100]
[46 97]
[47 96]
[48 95]
[51 93]
[52 92]
[53 91]
[54 90]
[57 87]
[58 86]
[59 85]
[60 84]
[61 83]
[64 77]
[65 76]
[67 74]
[68 73]
[116 176]
[117 175]
[118 174]
[120 172]
[121 171]
[122 170]
[124 169]
[125 168]
[126 167]
[131 162]
[132 161]
[133 160]
[138 154]
[139 153]
[140 152]
[141 151]
[143 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
