%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUGUUCUCAGCUUCGAGGUCCAGGCUGAGUGAGAGGAGCUCGGGCGGCUCCAGGCACUUCUUCCCUUGAGUGGGUGGACUACUGAGGUCCCCUGGGCACGGCGUC\
) } def
/len { sequence length } bind def

/coor [
[106.57135773 220.82498169]
[104.82996368 205.92640686]
[103.08856964 191.02783203]
[101.34717560 176.12925720]
[99.60578156 161.23068237]
[97.86438751 146.33210754]
[96.12299347 131.43353271]
[94.38159943 116.53495026]
[81.28351593 109.22467804]
[67.68889618 115.56394958]
[54.09428024 121.90322876]
[40.49966431 128.24249268]
[26.90504837 134.58177185]
[13.31043053 140.92105103]
[-0.28418583 147.26031494]
[-9.52146530 160.10490417]
[-24.32621574 158.47129822]
[-33.28402710 172.20773315]
[-49.64212799 171.04820251]
[-56.57270813 156.18553162]
[-46.94617844 142.90916443]
[-30.66548920 144.87669373]
[-22.40058708 132.48553467]
[-6.62345982 133.66571045]
[6.97115707 127.32643127]
[20.56577301 120.98715973]
[34.16038895 114.64788055]
[47.75500870 108.30860901]
[61.34962463 101.96933746]
[74.94424438 95.63005829]
[81.86400604 89.07855225]
[89.64196014 86.63729858]
[96.38403320 87.88440704]
[100.66404724 91.64609528]
[109.26769257 79.35881042]
[110.84512329 63.61643982]
[124.48320770 57.62880325]
[133.08685303 45.34152222]
[141.69050598 33.05424118]
[143.26792908 17.31187057]
[156.90602112 11.32423210]
[165.50965881 -0.96304840]
[174.11331177 -13.25032902]
[182.71696472 -25.53760910]
[191.32060242 -37.82489014]
[189.86299133 -50.74229813]
[197.40939331 -60.82806396]
[209.41963196 -62.93452072]
[218.37701416 -74.96636963]
[221.05284119 -83.86640930]
[227.77404785 -87.21282196]
[237.07757568 -98.97905731]
[246.38110352 -110.74529266]
[255.68464661 -122.51152802]
[254.04394531 -138.00170898]
[263.64666748 -149.80181885]
[278.42428589 -151.27050781]
[287.72781372 -163.03674316]
[297.03137207 -174.80297852]
[306.33489990 -186.56921387]
[315.63842773 -198.33544922]
[311.31869507 -213.23912048]
[316.61575317 -227.82406616]
[329.49279785 -236.48208618]
[344.99835205 -235.88397217]
[357.17019653 -226.25973511]
[361.32800293 -211.31007385]
[355.87301636 -196.78344727]
[342.90280151 -188.26564026]
[327.40466309 -189.03192139]
[318.10113525 -177.26568604]
[308.79760742 -165.49945068]
[299.49404907 -153.73321533]
[290.19052124 -141.96697998]
[292.16937256 -127.24897003]
[282.90188599 -115.18379974]
[267.45086670 -113.20799255]
[258.14733887 -101.44175720]
[248.84381104 -89.67552185]
[239.54028320 -77.90928650]
[230.40885925 -66.00898743]
[221.45147705 -53.97714233]
[220.43319702 -36.52439117]
[203.60787964 -29.22124290]
[195.00424194 -16.93396378]
[186.40058899 -4.64668274]
[177.79695129 7.64059830]
[169.19329834 19.92787933]
[168.23126221 34.79138184]
[153.97778320 41.65789032]
[145.37413025 53.94517136]
[136.77049255 66.23245239]
[135.80845642 81.09595490]
[121.55496979 87.96246338]
[112.95132446 100.24974060]
[109.28017426 114.79355621]
[111.02156830 129.69213867]
[112.76296234 144.59071350]
[114.50435638 159.48928833]
[116.24575043 174.38786316]
[117.98714447 189.28643799]
[119.72853851 204.18501282]
[121.46993256 219.08358765]
[133.11189270 230.12190247]
[131.59692383 246.09326172]
[118.08718872 254.74581909]
[102.94619751 249.44204712]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 103]
[2 102]
[3 101]
[4 100]
[5 99]
[6 98]
[7 97]
[8 96]
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[17 22]
[34 95]
[35 94]
[37 92]
[38 91]
[39 90]
[41 88]
[42 87]
[43 86]
[44 85]
[45 84]
[48 82]
[49 81]
[51 80]
[52 79]
[53 78]
[54 77]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
