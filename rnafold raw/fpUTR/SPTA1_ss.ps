%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCUUCUAAAGAUAAUGUCGAUUGUGUAUGGCUGAUGGGAUUCUAGGACCAAGCAAGAGGUUUUUUUUUUUCCCCCACAUACUUAACGUUUCUAUAUUUCUAUUUGAAUUCGACUGGACAGUUCCAUUUGAAUUAUUUCUCUCUCUCUCUCUCUCUGACACAUUUUAUCUUGCCAGGUUCUAAACCUUUAGGAAAA\
) } def
/len { sequence length } bind def

/coor [
[87.38114929 337.55181885]
[75.76741791 328.05859375]
[68.22718811 315.09152222]
[65.72097015 300.30236816]
[68.56800079 285.57504272]
[76.40562439 272.78552246]
[88.23546600 263.56298828]
[102.55059052 259.08224487]
[117.52751160 259.91406250]
[131.25840759 265.95245361]
[141.99284363 276.42633057]
[138.47389221 261.84494019]
[134.95495605 247.26354980]
[131.43600464 232.68215942]
[127.91705322 218.10076904]
[124.39810944 203.51937866]
[120.87915802 188.93798828]
[116.90164948 174.47494507]
[112.46955109 160.14468384]
[108.03745270 145.81442261]
[103.60534668 131.48414612]
[99.17324829 117.15388489]
[93.59880066 115.86856079]
[88.77547455 112.83166504]
[85.23314667 108.39311981]
[83.35558319 103.05589294]
[68.56118774 100.58082581]
[53.76679611 98.10575867]
[38.97240448 95.63069153]
[24.08470345 100.98484802]
[12.80857468 91.25354767]
[-1.98581779 88.77848816]
[-16.78021049 86.30342102]
[-10.37822533 99.86862183]
[-16.84644318 113.40235901]
[-31.42301750 116.94121552]
[-43.37679291 107.87991333]
[-43.90750122 92.88930511]
[-32.62429047 83.00531006]
[-47.17745590 79.37137604]
[-61.73061752 75.73744202]
[-76.28377533 72.10350800]
[-88.18817139 85.01961517]
[-104.90756226 90.10721588]
[-121.81555176 86.05269623]
[-134.28105164 74.05922699]
[-138.93676758 57.49162292]
[-153.59739685 54.31892014]
[-168.25802612 51.14622116]
[-182.91865540 47.97351837]
[-197.57928467 44.80081940]
[-212.23989868 41.62811661]
[-223.71932983 52.06853867]
[-239.14675903 53.73410797]
[-252.59002686 45.98438644]
[-258.87991333 31.79929161]
[-255.59785461 16.63328934]
[-244.00584412 6.31801367]
[-228.56124878 4.81989861]
[-215.20285034 12.71500111]
[-209.06719971 26.96749115]
[-194.40657043 30.14019203]
[-179.74595642 33.31289291]
[-165.08532715 36.48559570]
[-150.42469788 39.65829468]
[-135.76406860 42.83099747]
[-128.32473755 32.60628891]
[-117.52938843 25.93296814]
[-104.96535492 23.83384705]
[-92.49582672 26.65608215]
[-81.98356628 34.01434326]
[-75.01265717 44.84300232]
[-72.64984131 57.55034637]
[-58.09668350 61.18428040]
[-43.54352188 64.81821442]
[-28.99035835 68.45214844]
[-14.30514526 71.50902557]
[0.48924759 73.98409271]
[15.28363991 76.45915985]
[29.11314583 70.92797089]
[41.44746780 80.83630371]
[56.24185944 83.31137085]
[71.03625488 85.78643036]
[85.83064270 88.26149750]
[74.03395844 78.99661255]
[62.23726273 69.73172760]
[47.76577377 65.78508759]
[34.74725723 58.33403397]
[24.01443863 47.85516739]
[16.25383759 35.01877213]
[11.96185780 20.64591789]
[11.41303444 5.65596199]
[14.64247322 -8.99227047]
[21.44360352 -22.36181259]
[31.38139343 -33.59748459]
[43.82017899 -41.98059845]
[57.96431351 -46.97494125]
[72.90908051 -48.26103973]
[87.69853210 -45.75663757]
[101.38667297 -39.62192535]
[113.09795380 -30.24930763]
[122.08325958 -18.23829842]
[127.76784515 -4.35718012]
[129.78810120 10.50614929]
[128.01481628 25.40096092]
[122.56139374 39.37451553]
[113.77518463 51.53459167]
[110.41108704 66.15248871]
[107.04698944 80.77037811]
[117.00745392 69.55480194]
[126.96791840 58.33923340]
[136.92839050 47.12365723]
[146.88885498 35.90808487]
[156.84931946 24.69251060]
[166.80978394 13.47693729]
[170.18832397 -1.97932816]
[184.42483521 -6.35776377]
[194.38529968 -17.57333755]
[204.34577942 -28.78891182]
[214.30624390 -40.00448608]
[217.07418823 -56.16835022]
[232.54818726 -61.59859467]
[244.80990601 -50.70904922]
[241.24554443 -34.70194626]
[225.52182007 -30.04401779]
[215.56134033 -18.82844353]
[205.60087585 -7.61287022]
[195.64041138 3.60270357]
[192.97431946 18.25675583]
[178.02536011 23.43740463]
[168.06489563 34.65297699]
[158.10443115 45.86855316]
[148.14396667 57.08412552]
[138.18350220 68.29969788]
[128.22302246 79.51527405]
[118.26255798 90.73084259]
[132.38072205 85.66355896]
[146.49888611 80.59626770]
[158.28378296 71.31639099]
[172.22103882 65.77085114]
[187.15986633 64.41755676]
[201.86679077 67.36822510]
[215.12747192 74.37924194]
[225.84700012 84.87170410]
[233.14027405 97.97926331]
[236.40509033 112.61965179]
[235.37188721 127.58402252]
[230.12597656 141.63679504]
[221.10049438 153.61764526]
[209.04067993 162.53732300]
[194.94227600 167.65934753]
[179.96939087 168.56080627]
[165.35830688 165.16726685]
[152.31544495 157.75891113]
[141.91772461 146.94744873]
[135.02316284 133.62403870]
[124.26333618 123.17291260]
[113.50350952 112.72178650]
[117.93560791 127.05204773]
[122.36771393 141.38230896]
[126.79981232 155.71258545]
[131.23191833 170.04284668]
[134.53817749 172.89172363]
[136.55691528 176.30322266]
[137.26966858 179.80155945]
[136.81495667 182.95408630]
[135.46055603 185.41903687]
[138.97949219 200.00042725]
[142.49844360 214.58181763]
[146.01739502 229.16320801]
[149.53634644 243.74459839]
[153.05528259 258.32598877]
[156.57423401 272.90737915]
[164.02302551 281.14178467]
[163.10647583 290.95297241]
[169.73637390 304.40826416]
[176.68301392 317.70275879]
[183.94250488 330.82907104]
[191.20198059 343.95538330]
[198.46147156 357.08169556]
[205.72096252 370.20797729]
[218.67762756 381.14239502]
[211.75730896 396.61965942]
[194.96917725 394.25430298]
[192.59465027 377.46746826]
[185.33515930 364.34115601]
[178.07568359 351.21487427]
[170.81619263 338.08856201]
[163.55671692 324.96224976]
[160.27752686 323.64144897]
[157.47814941 320.66128540]
[155.93392944 316.26608276]
[156.28109741 311.03814697]
[149.65119934 297.58288574]
[148.10762024 312.50326538]
[141.42263794 325.93124390]
[130.44779968 336.15637207]
[116.58113861 341.87612915]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 173]
[12 172]
[13 171]
[14 170]
[15 169]
[16 168]
[17 167]
[18 162]
[19 161]
[20 160]
[21 159]
[22 158]
[26 84]
[27 83]
[28 82]
[29 81]
[31 79]
[32 78]
[33 77]
[39 76]
[40 75]
[41 74]
[42 73]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[109 136]
[110 135]
[111 134]
[112 133]
[113 132]
[114 131]
[115 130]
[117 128]
[118 127]
[119 126]
[120 125]
[175 194]
[176 193]
[177 189]
[178 188]
[179 187]
[180 186]
[181 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
