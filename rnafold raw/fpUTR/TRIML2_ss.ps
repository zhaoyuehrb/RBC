%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCUGCCAGAAAUUUGUUGGAUUUGAGGAGUCCAGAGCGCCGACCCGCUCUGUCUGCGUGGACUUAUUUCCUUGGAUCUUCGUGGACUCUGAAGUUGCCAAGUGUGUGUGCCUGCUCCAGAAAACAAAGGAAGCCACCAUUUUUUCUCAUUCACAGUGCAGGGAGAUACCUCAGUAGAAGCAUACAGUCCAGUCUUCAACUAGGGACCCCUACCAGG\
) } def
/len { sequence length } bind def

/coor [
[89.06381226 112.43190765]
[74.18752289 114.35440063]
[59.31123352 116.27689362]
[44.43494415 118.19938660]
[29.55865288 120.12187958]
[14.68236256 122.04437256]
[6.20606041 131.76048279]
[-6.21939945 133.05865479]
[-15.88001537 125.78553772]
[-30.78224182 127.49540710]
[-45.68446732 129.20527649]
[-60.58669281 130.91514587]
[-63.63295746 145.71980286]
[-71.09593201 158.84027100]
[-82.23380280 168.99783325]
[-95.94733429 175.20703125]
[-110.88831329 176.87126160]
[-125.59214020 173.84001160]
[-138.62136841 166.42250061]
[-148.70620728 155.35606384]
[-154.86834717 141.73295593]
[-169.77056885 143.44284058]
[-184.67280579 145.15270996]
[-199.57502747 146.86257935]
[-214.47724915 148.57244873]
[-229.37947083 150.28231812]
[-244.28170776 151.99218750]
[-259.18392944 153.70205688]
[-274.08615112 155.41192627]
[-288.98837280 157.12179565]
[-303.89059448 158.83168030]
[-318.72232056 161.07235718]
[-333.46459961 163.84097290]
[-348.20684814 166.60960388]
[-362.94912720 169.37823486]
[-366.89953613 172.76989746]
[-371.31405640 174.17152405]
[-375.35861206 173.73883057]
[-378.38122559 171.93551636]
[-393.22854614 174.07023621]
[-408.07586670 176.20495605]
[-422.92318726 178.33967590]
[-435.48178101 187.96220398]
[-449.18063354 182.11492920]
[-464.02795410 184.24964905]
[-478.87527466 186.38438416]
[-486.96551514 199.76652527]
[-501.78149414 204.76860046]
[-516.32757568 199.02876282]
[-523.73553467 185.25718689]
[-520.50756836 169.95639038]
[-508.16778564 160.35095215]
[-492.54272461 160.97625732]
[-481.01000977 171.53704834]
[-466.16268921 169.40232849]
[-451.31536865 167.26760864]
[-439.81875610 157.79779053]
[-425.05792236 163.49235535]
[-410.21060181 161.35763550]
[-395.36328125 159.22291565]
[-380.51596069 157.08819580]
[-365.71777344 154.63595581]
[-350.97549438 151.86732483]
[-336.23321533 149.09870911]
[-321.49093628 146.33007812]
[-332.23745728 135.86524963]
[-330.90200806 120.92481995]
[-318.46990967 112.53179169]
[-304.11352539 116.87852478]
[-298.42495728 130.75801086]
[-305.60046387 143.92944336]
[-290.69824219 142.21957397]
[-275.79602051 140.50970459]
[-260.89379883 138.79983521]
[-245.99157715 137.08996582]
[-231.08935547 135.38009644]
[-216.18711853 133.67022705]
[-201.28489685 131.96034241]
[-186.38267517 130.25047302]
[-171.48043823 128.54060364]
[-156.57821655 126.83073425]
[-153.66181946 112.16596222]
[-146.34556580 99.10293579]
[-135.33499146 88.92711639]
[-121.69985199 82.64428711]
[-106.77021790 80.88117218]
[-92.00671387 83.82294464]
[-78.85763550 91.19384003]
[-68.61686707 102.28298187]
[-62.29656601 116.01292419]
[-47.39433670 114.30305481]
[-32.49211121 112.59318542]
[-17.58988571 110.88330841]
[-4.07069588 99.68966675]
[12.75986958 107.16808319]
[27.63615990 105.24559021]
[42.51245117 103.32309723]
[57.38874054 101.40060425]
[72.26502991 99.47811127]
[87.14131927 97.55561829]
[87.35059357 93.12839508]
[89.14429474 88.65542603]
[92.54693604 84.71176147]
[97.37506866 81.87448883]
[103.24138641 80.64858246]
[109.58470917 81.39649200]
[120.48986816 71.09709930]
[131.39501953 60.79770660]
[142.30018616 50.49831390]
[147.02041626 35.39765549]
[161.58592224 32.28387451]
[166.30615234 17.18321419]
[180.87164307 14.06943512]
[191.77680969 3.77004170]
[202.68196106 -6.52935171]
[213.58712769 -16.82874489]
[224.49227905 -27.12813950]
[220.04264832 -48.62718201]
[229.44561768 -68.32061005]
[248.72785950 -78.25617981]
[269.96310425 -74.52879333]
[279.78601074 -85.86503601]
[289.60891724 -97.20127869]
[299.43182373 -108.53752136]
[309.25473022 -119.87376404]
[319.07763672 -131.21000671]
[322.32931519 -139.73880005]
[329.12268066 -142.63670349]
[339.10644531 -153.83152771]
[342.51715088 -169.28073120]
[356.76275635 -173.62953186]
[366.74652100 -184.82434082]
[365.59417725 -200.58656311]
[375.98797607 -212.49220276]
[391.76150513 -213.47784424]
[403.55657959 -202.95874023]
[404.37539673 -187.17567444]
[393.73217773 -175.49247742]
[377.94134521 -174.84056091]
[367.95755005 -163.64573669]
[365.26098633 -148.99726868]
[350.30126953 -143.84774780]
[340.31750488 -132.65292358]
[330.41387939 -121.38710022]
[320.59097290 -110.05085754]
[310.76806641 -98.71461487]
[300.94515991 -87.37836456]
[291.12225342 -76.04212189]
[281.29934692 -64.70587921]
[285.50308228 -57.25644302]
[287.70187378 -48.97050858]
[287.74493408 -40.37888336]
[285.61993408 -32.03445053]
[281.45437622 -24.47660446]
[275.50790405 -18.19636345]
[268.15631104 -13.60449409]
[259.86764526 -11.00463295]
[251.17245483 -10.57323456]
[242.62989807 -12.34762383]
[234.79167175 -16.22298050]
[223.88652039 -5.92358637]
[212.98135376 4.37580681]
[202.07620239 14.67520046]
[191.17103577 24.97459412]
[187.23081970 39.33857346]
[171.88531494 43.18903351]
[167.94508362 57.55301285]
[152.59957886 61.40347290]
[141.69441223 71.70286560]
[130.78926086 82.00225830]
[119.88410187 92.30165100]
[120.31243896 107.29553986]
[131.78779602 116.95557404]
[143.26315308 126.61560059]
[154.80717468 136.19346619]
[166.41931152 145.68864441]
[178.03143311 155.18383789]
[193.61251831 157.92974854]
[198.56742859 171.97602844]
[210.17955017 181.47122192]
[221.79167175 190.96641541]
[233.40380859 200.46159363]
[242.02197266 203.46836853]
[245.11268616 210.17622375]
[256.58804321 219.83625793]
[271.61718750 215.97564697]
[286.03280640 221.71755981]
[294.29180908 234.85411072]
[293.21841431 250.33401489]
[283.22537231 262.20492554]
[268.15521240 265.90228271]
[253.80273438 260.00433350]
[245.68675232 246.77896118]
[246.92799377 231.31161499]
[235.45265198 221.65158081]
[223.90861511 212.07371521]
[212.29649353 202.57853699]
[200.68437195 193.08334351]
[189.07223511 183.58816528]
[174.32171631 181.52140808]
[168.53623962 166.79595947]
[156.92411804 157.30076599]
[145.31199646 147.80558777]
[138.14892578 146.00607300]
[133.60311890 138.09095764]
[122.12776184 128.43092346]
[110.65240479 118.77088928]
[121.16129303 129.47431946]
[126.60249329 143.45263672]
[126.09558868 158.44406128]
[119.72261047 172.02291870]
[108.51472473 181.99203491]
[94.28545380 186.73837280]
[79.33715820 185.49394226]
[66.08857727 178.46008301]
[56.68339920 166.77494812]
[52.64344025 152.32922363]
[54.62239075 137.46034241]
[62.30004120 124.57415771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 100]
[2 99]
[3 98]
[4 97]
[5 96]
[6 95]
[9 93]
[10 92]
[11 91]
[12 90]
[21 81]
[22 80]
[23 79]
[24 78]
[25 77]
[26 76]
[27 75]
[28 74]
[29 73]
[30 72]
[31 71]
[32 65]
[33 64]
[34 63]
[35 62]
[39 61]
[40 60]
[41 59]
[42 58]
[44 56]
[45 55]
[46 54]
[106 171]
[107 170]
[108 169]
[109 168]
[111 166]
[113 164]
[114 163]
[115 162]
[116 161]
[117 160]
[121 149]
[122 148]
[123 147]
[124 146]
[125 145]
[126 144]
[128 143]
[129 142]
[131 140]
[132 139]
[172 207]
[173 206]
[174 205]
[175 203]
[176 202]
[177 201]
[179 199]
[180 198]
[181 197]
[182 196]
[184 195]
[185 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
