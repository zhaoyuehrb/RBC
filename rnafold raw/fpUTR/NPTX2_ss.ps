%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUGCCGAGCAGCGCGGUGGGUGCGGCUGUGAGACGGCAGGAGACUUCUGCCCCGCGGUGCACGCGACCCUCGAGACGACAGCGCGGCUACUGCCAGCAGCGAAGGCGCCUCCCGCGGAGCGCCCCGACGGCGCCCGCUCGCCCAUGCCGAGCUGAGCGCGGCAGCGGCGGCGGG\
) } def
/len { sequence length } bind def

/coor [
[18.94827461 71.62270355]
[5.38490009 65.21685791]
[-3.74172592 64.37570953]
[-8.35979271 58.57640457]
[-21.80800056 51.93218231]
[-35.25621033 45.28796005]
[-48.70441818 38.64373779]
[-62.15262604 31.99951553]
[-78.59983826 37.91596985]
[-93.94213867 30.27082825]
[-98.92235565 14.22155476]
[-112.48573303 7.81570816]
[-128.26844788 8.91851616]
[-136.47250366 -3.51300788]
[-150.03588867 -9.91885471]
[-163.71020508 -16.08432961]
[-177.49119568 -22.00751495]
[-191.27218628 -27.93070030]
[-205.05319214 -33.85388565]
[-218.83418274 -39.77706909]
[-232.61518860 -45.70025253]
[-246.39617920 -51.62343979]
[-262.13015747 -49.96432114]
[-270.76782227 -62.09856796]
[-284.54882812 -68.02175140]
[-298.32980347 -73.94493866]
[-312.11080933 -79.86812592]
[-321.26144409 -80.38665771]
[-326.08129883 -86.01937103]
[-339.75561523 -92.18484497]
[-353.42993164 -98.35032654]
[-367.10424805 -104.51580048]
[-381.08569336 -109.94894409]
[-395.33508301 -114.63452148]
[-409.58447266 -119.32010651]
[-422.22097778 -105.28033447]
[-443.56112671 -102.18141937]
[-464.31460571 -114.72669220]
[-479.29357910 -115.52054596]
[-494.27255249 -116.31439972]
[-509.25152588 -117.10824585]
[-524.23052979 -117.90209961]
[-539.20947266 -118.69595337]
[-554.18847656 -119.48980713]
[-570.32537842 -114.29019928]
[-579.78894043 -128.35710144]
[-568.89154053 -141.34490967]
[-553.39459229 -134.46878052]
[-538.41564941 -133.67492676]
[-523.43664551 -132.88107300]
[-508.45767212 -132.08723450]
[-493.47869873 -131.29338074]
[-478.49972534 -130.49952698]
[-463.52075195 -129.70567322]
[-461.05258179 -136.78791809]
[-453.64807129 -158.03463745]
[-465.87603760 -166.72241211]
[-478.10397339 -175.41020203]
[-490.33190918 -184.09797668]
[-506.32626343 -182.84912109]
[-517.16925049 -194.67323303]
[-514.54302979 -210.49986267]
[-500.46218872 -218.18818665]
[-485.72839355 -211.84037781]
[-481.64413452 -196.32591248]
[-469.41616821 -187.63813782]
[-457.18823242 -178.95036316]
[-444.96029663 -170.26257324]
[-426.68927002 -169.48429871]
[-412.36874390 -160.71823120]
[-404.87588501 -147.38087463]
[-404.89889526 -133.56950378]
[-390.64950562 -128.88392639]
[-376.40011597 -124.19834137]
[-381.99304199 -138.11663818]
[-376.25683594 -151.97651672]
[-362.46374512 -157.87150574]
[-348.48211670 -152.43878174]
[-342.28787231 -138.77746582]
[-347.41455078 -124.68075562]
[-360.93878174 -118.19011688]
[-347.26446533 -112.02463531]
[-333.59014893 -105.85916138]
[-319.91583252 -99.69368744]
[-306.18762207 -93.64912415]
[-292.40664673 -87.72593689]
[-278.62564087 -81.80274963]
[-264.84463501 -75.87957001]
[-250.09637451 -77.96234894]
[-240.47299194 -65.40443420]
[-226.69200134 -59.48125076]
[-212.91099548 -53.55806732]
[-199.13000488 -47.63488007]
[-185.34901428 -41.71169662]
[-171.56800842 -35.78851318]
[-157.78701782 -29.86532784]
[-153.07228088 -30.78358269]
[-147.73309326 -28.72852516]
[-143.63003540 -23.48222923]
[-130.06666565 -17.07638168]
[-115.25408173 -18.63737869]
[-106.07987976 -5.74766636]
[-92.51651001 0.65818006]
[-81.09705353 -5.34821558]
[-68.11061859 -3.64601994]
[-58.33842087 5.36448860]
[-55.50840378 18.55130768]
[-42.06019592 25.19552994]
[-28.61198807 31.83975029]
[-15.16377926 38.48397446]
[-1.71557057 45.12819290]
[11.79074669 51.65348434]
[25.35412216 58.05932999]
[38.97349548 64.34523773]
[52.64781189 70.51071167]
[66.32212830 76.67618561]
[79.99644470 82.84165955]
[93.67076111 89.00714111]
[108.55642700 90.85561371]
[123.32341003 88.22193146]
[131.25057983 83.62162018]
[138.37408447 85.67447662]
[153.18524170 83.30181885]
[167.99639893 80.92915344]
[182.80755615 78.55649567]
[197.61872864 76.18383026]
[208.15255737 64.08351135]
[224.17385864 64.91870117]
[233.39244080 78.04871368]
[228.73661804 93.40132904]
[213.77790833 99.19933319]
[199.99137878 90.99499512]
[185.18022156 93.36765289]
[170.36906433 95.74031067]
[155.55790710 98.11297607]
[140.74673462 100.48563385]
[125.95709229 102.98890686]
[111.19011688 105.62259674]
[108.78453827 112.72634125]
[118.68325043 123.99645996]
[103.97339630 126.93383789]
[101.56782532 134.03758240]
[111.69625092 145.10171509]
[121.82468414 156.16583252]
[131.95310974 167.22996521]
[147.50643921 168.08554077]
[157.62048340 179.45042419]
[156.70898438 194.27285767]
[166.83741760 205.33699036]
[176.96583557 216.40110779]
[187.09426880 227.46524048]
[197.22270203 238.52937317]
[212.24807739 243.48403931]
[215.13479614 258.09622192]
[225.26322937 269.16036987]
[240.41809082 276.76077271]
[237.30998230 293.42739868]
[220.43429565 295.05453491]
[214.19909668 279.28878784]
[204.07066345 268.22467041]
[189.76974487 264.06137085]
[186.15856934 248.65779114]
[176.03015137 237.59367371]
[165.90171814 226.52954102]
[155.77328491 215.46540833]
[145.64485168 204.40129089]
[130.79975891 204.00291443]
[120.37047577 192.92658997]
[120.88898468 177.35839844]
[110.76055908 166.29426575]
[100.63212585 155.23013306]
[90.50370026 144.16601562]
[87.50527954 102.68145752]
[73.83097076 96.51597595]
[60.15665054 90.35050201]
[46.48233795 84.18502808]
[32.80802155 78.01955414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 113]
[2 112]
[4 111]
[5 110]
[6 109]
[7 108]
[8 107]
[11 103]
[12 102]
[14 100]
[15 99]
[16 96]
[17 95]
[18 94]
[19 93]
[20 92]
[21 91]
[22 90]
[24 88]
[25 87]
[26 86]
[27 85]
[29 84]
[30 83]
[31 82]
[32 81]
[33 74]
[34 73]
[35 72]
[38 54]
[39 53]
[40 52]
[41 51]
[42 50]
[43 49]
[44 48]
[56 68]
[57 67]
[58 66]
[59 65]
[114 177]
[115 176]
[116 175]
[117 174]
[118 173]
[119 138]
[120 137]
[122 136]
[123 135]
[124 134]
[125 133]
[126 132]
[142 172]
[143 171]
[144 170]
[145 169]
[148 166]
[149 165]
[150 164]
[151 163]
[152 162]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
