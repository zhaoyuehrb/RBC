%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUCCGGCGGCGCGGGAUUGGCCAGUCCCGGGCCAACACGGGUGGCGGGAGUUUUCAGAUGUGUUGGCUGCGGCCCCGACUUCAGCGGUUGGGCUAGGCUGUGCUGACUGUUUGGGUGGCGGACCCCGGGAGUAAAACCUGUUGUCGAUCCCUCAGCUUCCAGCUUGCGGCUUGCUGAGUGGCCACCUUCUUUCCGGUCCCCGGAGCUGCGGGGAAAG\
) } def
/len { sequence length } bind def

/coor [
[45.29444504 255.06176758]
[47.84930420 240.28094482]
[40.44163895 239.10768127]
[31.11323738 250.85421753]
[21.78483391 262.60073853]
[12.45642948 274.34725952]
[3.12802601 286.09378052]
[6.00057364 304.82501221]
[-5.53802872 319.45236206]
[-23.78622437 320.96710205]
[-32.77539062 332.97521973]
[-41.76455307 344.98333740]
[-43.84066010 360.66772461]
[-57.66185760 366.21966553]
[-66.65102386 378.22778320]
[-75.64019012 390.23590088]
[-84.62935638 402.24401855]
[-93.61851501 414.25213623]
[-102.60768127 426.26025391]
[-111.59684753 438.26837158]
[-113.00542450 454.60690308]
[-127.97193909 461.31030273]
[-141.10012817 451.48263550]
[-138.88484192 435.23382568]
[-123.60496521 429.27920532]
[-114.61579895 417.27108765]
[-105.62664032 405.26296997]
[-96.63747406 393.25485229]
[-87.64830780 381.24673462]
[-78.65914154 369.23861694]
[-69.66997528 357.23049927]
[-68.23683167 342.40499878]
[-53.77267075 335.99417114]
[-44.78350830 323.98605347]
[-35.79434204 311.97793579]
[-39.82532120 301.31301880]
[-38.19357300 289.90805054]
[-31.18965149 280.60989380]
[-20.45942497 275.79559326]
[-8.61850071 276.76538086]
[0.70990294 265.01885986]
[10.03830624 253.27233887]
[19.36671066 241.52581787]
[28.69511414 229.77928162]
[28.99072647 206.61534119]
[42.61147690 191.45646667]
[60.10838699 189.48593140]
[65.14912415 175.35826111]
[70.18986511 161.23059082]
[75.23060608 147.10293579]
[80.27134705 132.97526550]
[85.31208801 118.84760284]
[77.92633057 111.52838135]
[74.12675476 101.39333344]
[74.93922424 90.17293549]
[80.56754303 79.94326019]
[90.29380035 72.74208832]
[80.79861450 61.12996292]
[71.30342865 49.51784134]
[61.80824280 37.90571594]
[52.31305695 26.29359245]
[42.81786728 14.68146801]
[34.96847534 10.02309132]
[33.27143097 2.83506155]
[23.94302750 -8.91146469]
[14.61462402 -20.65799141]
[5.28622055 -32.40451813]
[-4.04218292 -44.15104294]
[-13.37058640 -55.89757156]
[-21.15266228 -60.66755676]
[-22.74689102 -67.87908936]
[-31.90660858 -79.75762177]
[-41.06632614 -91.63615417]
[-50.22604370 -103.51468658]
[-59.38576126 -115.39321899]
[-68.54547882 -127.27175903]
[-78.04066467 -138.88388062]
[-87.86357880 -150.22012329]
[-97.68649292 -161.55636597]
[-107.50939941 -172.89260864]
[-117.33231354 -184.22885132]
[-127.15522003 -195.56509399]
[-142.99041748 -198.13919067]
[-150.72506714 -212.19461060]
[-144.42581177 -226.94923401]
[-128.92489624 -231.08457947]
[-116.11329651 -221.42835999]
[-115.81897736 -205.38801575]
[-105.99607086 -194.05177307]
[-96.17315674 -182.71551514]
[-86.35025024 -171.37927246]
[-76.52733612 -160.04302979]
[-66.70442200 -148.70678711]
[-63.92789459 -148.36958313]
[-61.11711502 -146.91592407]
[-58.69665146 -144.32710266]
[-57.09007263 -140.73782349]
[-56.66694641 -136.43147278]
[-47.50722885 -124.55294037]
[-38.34751129 -112.67440796]
[-29.18779373 -100.79587555]
[-20.02807426 -88.91734314]
[-10.86835670 -77.03880310]
[-1.62406003 -65.22597504]
[7.70434332 -53.47944641]
[17.03274727 -41.73292160]
[26.36115074 -29.98639488]
[35.68955612 -18.23986816]
[45.01795959 -6.49334192]
[54.42999268 5.18628120]
[63.92517853 16.79840469]
[73.42036438 28.41053009]
[82.91555023 40.02265167]
[92.41074371 51.63477707]
[101.90592957 63.24690247]
[116.41313171 67.06018066]
[130.39108276 61.61806107]
[144.36904907 56.17594528]
[158.34701538 50.73382950]
[172.32496643 45.29171371]
[186.30293274 39.84959793]
[190.31794739 16.90038300]
[216.56639099 4.73873043]
[226.38929749 -6.59751320]
[236.21220398 -17.93375778]
[235.26930237 -33.48202515]
[245.39262390 -44.83865738]
[260.22131348 -45.64175797]
[270.04425049 -56.97800064]
[279.86715698 -68.31424713]
[289.69006348 -79.65048981]
[287.04080200 -95.06202698]
[294.96231079 -108.54473877]
[309.71429443 -113.73250580]
[324.33132935 -108.17582703]
[331.91168213 -94.49838257]
[328.87612915 -79.15825653]
[316.65798950 -69.39858246]
[301.02630615 -69.82757568]
[291.20339966 -58.49133301]
[281.38049316 -47.15509033]
[271.55758667 -35.81884766]
[272.87298584 -21.02677917]
[263.07266235 -9.39028549]
[247.54844666 -8.11084557]
[237.72554016 3.22539783]
[227.90263367 14.56164169]
[230.87141418 21.44904709]
[242.13734436 11.54558754]
[255.03736877 19.19996071]
[251.74377441 33.83390045]
[236.80895996 35.22385788]
[239.77774048 42.11126709]
[254.76397705 42.75366592]
[269.75021362 43.39606857]
[284.73645020 44.03847122]
[299.72268677 44.68087387]
[314.70892334 45.32327652]
[320.73760986 38.08869934]
[329.29064941 34.48885727]
[338.40411377 35.21327209]
[346.04754639 39.97384262]
[350.57626343 47.59739685]
[365.52124023 48.88102341]
[380.46621704 50.16464615]
[395.41119385 51.44827271]
[411.70965576 46.77954483]
[420.70776367 61.14860916]
[409.39117432 73.77284241]
[394.12756348 66.39324951]
[379.18258667 65.10961914]
[364.23760986 63.82599640]
[349.29263306 62.54237366]
[331.42596436 72.88111877]
[314.06652832 60.30951309]
[299.08029175 59.66711044]
[284.09405518 59.02470779]
[269.10781860 58.38230896]
[254.12156677 57.73990631]
[239.13533020 57.09750366]
[220.91722107 67.69425201]
[202.66690063 65.21746826]
[191.74504089 53.82756042]
[177.76708984 59.26967621]
[163.78912354 64.71179199]
[149.81117249 70.15390778]
[135.83320618 75.59602356]
[121.85524750 81.03813934]
[127.41371918 96.20915222]
[123.90090942 111.24645233]
[113.22885895 121.39536285]
[99.43975830 123.88834381]
[94.39901733 138.01600647]
[89.35827637 152.14367676]
[84.31753540 166.27133179]
[79.27679443 180.39900208]
[74.23605347 194.52667236]
[89.14042664 211.43206787]
[84.12653351 238.55876160]
[89.36849976 252.61300659]
[94.61045837 266.66726685]
[99.85242462 280.72149658]
[105.09439087 294.77575684]
[110.33634949 308.82998657]
[124.81474304 315.16650391]
[130.49403381 329.91513062]
[124.00477600 344.32571411]
[109.19695282 349.84875488]
[94.85577393 343.20748901]
[89.48960876 328.34210205]
[96.28210449 314.07196045]
[91.04013824 300.01770020]
[85.79817963 285.96347046]
[80.55621338 271.90921021]
[75.31425476 257.85498047]
[70.07228851 243.80072021]
[62.66462708 242.62747192]
[60.52692032 257.47436523]
[57.97212982 272.25518799]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 44]
[4 43]
[5 42]
[6 41]
[7 40]
[10 35]
[11 34]
[12 33]
[14 31]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[47 197]
[48 196]
[49 195]
[50 194]
[51 193]
[52 192]
[57 115]
[58 114]
[59 113]
[60 112]
[61 111]
[62 110]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[116 188]
[117 187]
[118 186]
[119 185]
[120 184]
[121 183]
[123 147]
[124 146]
[125 145]
[128 142]
[129 141]
[130 140]
[131 139]
[153 180]
[154 179]
[155 178]
[156 177]
[157 176]
[158 175]
[163 173]
[164 172]
[165 171]
[166 170]
[199 216]
[200 215]
[201 214]
[202 213]
[203 212]
[204 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
