%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCGCGAGCACUGGCGGGUUCUGGGUCCUGUGACCGGUCAGGCGGCGUCAGCGGGCGCGGCGGAGGGCUGGCCGGCCUCGGGGGAGUUUCCGCGGCCGCCGGGGGCGCGGCGGCAGAGCGCGAGGCCGGGCAGGGGGCCAGACUCGGAGUCGAGGCGCGCCCGACAGCCGCAGCGCUC\
) } def
/len { sequence length } bind def

/coor [
[218.89341736 185.71855164]
[206.77493286 174.17649841]
[203.88574219 157.52377319]
[190.33113098 151.09941101]
[176.77650452 144.67504883]
[163.22189331 138.25070190]
[149.66728210 131.82633972]
[136.11265564 125.40198517]
[122.21466064 130.63468933]
[108.37683868 124.31257629]
[102.98252106 109.69960022]
[94.90544891 109.36419678]
[89.24987793 103.04431152]
[75.80880737 96.38566589]
[62.36773300 89.72702789]
[48.92665863 83.06838226]
[35.48558426 76.40973663]
[22.04450989 69.75109863]
[8.60343456 63.09245300]
[-7.19716883 63.89960098]
[-15.16705513 51.31666946]
[-27.63328743 54.69464874]
[-38.69969559 48.85084915]
[-42.67536163 37.40840149]
[-55.99884415 30.51748085]
[-69.32232666 23.62655640]
[-82.64580536 16.73563385]
[-96.14416504 10.19388771]
[-109.80824280 4.00575304]
[-123.47231293 -2.18238211]
[-137.13639832 -8.37051678]
[-152.89945984 -7.01546812]
[-161.30125427 -19.31421089]
[-174.96533203 -25.50234604]
[-188.62940979 -31.69048119]
[-202.39883423 -37.64052963]
[-216.26943970 -43.35070038]
[-230.14006042 -49.06087112]
[-244.01068115 -54.77104568]
[-257.88128662 -60.48121643]
[-271.75189209 -66.19138336]
[-285.62252808 -71.90155792]
[-299.49313354 -77.61172485]
[-313.64215088 -82.59223175]
[-328.03118896 -86.82957458]
[-343.45501709 -83.30581665]
[-353.47817993 -94.32330322]
[-367.86724854 -98.56064606]
[-382.25631714 -102.79798126]
[-396.64535522 -107.03532410]
[-411.03442383 -111.27266693]
[-426.83850098 -106.89516449]
[-438.34030151 -118.58452606]
[-433.70770264 -134.31573486]
[-417.70635986 -137.90588379]
[-406.79708862 -125.66172791]
[-392.40802002 -121.42438507]
[-378.01895142 -117.18704224]
[-363.62991333 -112.94969940]
[-349.24084473 -108.71235657]
[-334.84625244 -112.53919983]
[-323.79385376 -101.21863556]
[-309.40481567 -96.98129272]
[-315.44998169 -110.70921326]
[-310.16760254 -124.74832916]
[-296.57241821 -131.08636475]
[-282.42330933 -126.10614014]
[-275.79531860 -112.64992523]
[-280.47109985 -98.39731598]
[-293.78295898 -91.48234558]
[-279.91235352 -85.77217102]
[-266.04174805 -80.06200409]
[-252.17111206 -74.35182953]
[-238.30050659 -68.64165497]
[-224.42988586 -62.93148804]
[-210.55928040 -57.22131729]
[-196.68865967 -51.51114655]
[-191.99131775 -52.50053787]
[-186.62445068 -50.53053665]
[-182.44128418 -45.35455704]
[-168.77720642 -39.16642380]
[-155.11312866 -32.97828674]
[-140.32740784 -34.77595139]
[-130.94825745 -22.03459358]
[-117.28417969 -15.84645844]
[-103.62010193 -9.65832329]
[-89.95602417 -3.47018838]
[-86.52358246 -4.38162279]
[-82.47681427 -3.65891910]
[-78.59639740 -1.03065336]
[-75.75488281 3.41215181]
[-62.43140411 10.30307484]
[-49.10792160 17.19399834]
[-35.78443909 24.08492088]
[-18.33616066 22.31801987]
[-8.50841236 37.87559509]
[6.33079624 36.59217453]
[15.26207733 49.65137863]
[28.70315170 56.31002045]
[42.14422607 62.96866608]
[55.58530045 69.62730408]
[69.02637482 76.28594971]
[82.46744537 82.94459534]
[95.90852356 89.60323334]
[109.40687561 96.14498138]
[124.13326263 91.06842804]
[137.78805542 97.77672577]
[142.53701782 111.84736633]
[156.09162903 118.27172089]
[169.64625549 124.69608307]
[183.20086670 131.12043762]
[196.75547791 137.54479980]
[210.31010437 143.96914673]
[221.89640808 136.47456360]
[235.56492615 135.69682312]
[247.73246765 141.73252869]
[255.26232910 152.90611267]
[256.27270508 166.23348999]
[269.71377563 172.89213562]
[283.15484619 179.55078125]
[296.59591675 186.20942688]
[310.03701782 192.86805725]
[323.47808838 199.52670288]
[339.93334961 193.62821960]
[355.26770020 201.29267883]
[360.22732544 217.34983826]
[373.78195190 223.77420044]
[387.33654785 230.19854736]
[401.05383301 236.26786804]
[414.92443848 241.97804260]
[428.79504395 247.68821716]
[442.66567993 253.39839172]
[456.53628540 259.10855103]
[461.76281738 258.40429688]
[466.27661133 259.66571045]
[469.44412231 262.28591919]
[470.96774292 265.49386597]
[486.75195312 264.41262817]
[494.93902588 276.85531616]
[508.49365234 283.27969360]
[522.04827881 289.70404053]
[540.34893799 287.77841187]
[549.77313232 302.56860352]
[563.43719482 308.75674438]
[577.10125732 314.94488525]
[590.76531982 321.13299561]
[607.68817139 322.15948486]
[611.38653564 338.70513916]
[596.51129150 346.83923340]
[584.57720947 334.79708862]
[570.91314697 328.60894775]
[557.24902344 322.42080688]
[543.58496094 316.23266602]
[532.14031982 320.20190430]
[520.69659424 315.13659668]
[515.62390137 303.25866699]
[502.06927490 296.83428955]
[488.51467896 290.40994263]
[473.69998169 291.95071411]
[464.54336548 279.04849243]
[450.82611084 272.97915649]
[436.95550537 267.26901245]
[423.08486938 261.55883789]
[409.21426392 255.84866333]
[395.34365845 250.13848877]
[391.94491577 251.16850281]
[387.87548828 250.58668518]
[383.90618896 248.09468079]
[380.91220093 243.75317383]
[367.35757446 237.32881165]
[353.80297852 230.90444946]
[342.37716675 236.89479065]
[329.39474487 235.17655945]
[319.63455200 226.15583801]
[316.81942749 212.96777344]
[303.37835693 206.30914307]
[289.93728638 199.65049744]
[276.49621582 192.99185181]
[263.05514526 186.33320618]
[249.61405945 179.67456055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 113]
[4 112]
[5 111]
[6 110]
[7 109]
[8 108]
[11 105]
[13 104]
[14 103]
[15 102]
[16 101]
[17 100]
[18 99]
[19 98]
[21 96]
[24 94]
[25 93]
[26 92]
[27 91]
[28 87]
[29 86]
[30 85]
[31 84]
[33 82]
[34 81]
[35 80]
[36 77]
[37 76]
[38 75]
[39 74]
[40 73]
[41 72]
[42 71]
[43 70]
[44 63]
[45 62]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[118 180]
[119 179]
[120 178]
[121 177]
[122 176]
[123 175]
[126 171]
[127 170]
[128 169]
[129 165]
[130 164]
[131 163]
[132 162]
[133 161]
[137 160]
[139 158]
[140 157]
[141 156]
[143 153]
[144 152]
[145 151]
[146 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
