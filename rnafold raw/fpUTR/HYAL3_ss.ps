%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCAGGGUAGAGACUGAGUCGGCGCCUGGCGGGUGUUGUGACGCGCAAACCAGGGGCGGGUUCUAAGCGGCGACGCGCGGGUGCUGGGAGGCCUUAGAACGCCGUGGCGUGCCGCAGGACGCGACGGCUGCAGAACAUCCGCCGCACCGCUGGGGGCCAACGUUGUCGGACCGAGGAGUCCGAGGUGGCGACUGAGUGAGAUACCCAGCUGUGCGGAGCUAGGACGCGGAACAUCCCAGAGGCCAGCAUCAACA\
UGUUUCCAUCCUUGGGGA\
) } def
/len { sequence length } bind def

/coor [
[566.61102295 504.76275635]
[556.82360840 493.39587402]
[547.03619385 482.02896118]
[535.02331543 480.82476807]
[526.77526855 471.46765137]
[527.10784912 458.59823608]
[517.45141602 447.11987305]
[507.79498291 435.64147949]
[498.13851929 424.16311646]
[488.48208618 412.68475342]
[472.13571167 414.36831665]
[457.87084961 405.88009644]
[451.42489624 390.40301514]
[455.52792358 373.97549438]
[445.74050903 362.60858154]
[435.95309448 351.24169922]
[421.78533936 346.64559937]
[418.64407349 331.13937378]
[408.85665894 319.77246094]
[399.06924438 308.40554810]
[389.28182983 297.03863525]
[379.49441528 285.67175293]
[365.32666016 281.07565308]
[362.18542480 265.56942749]
[352.39801025 254.20251465]
[342.61059570 242.83560181]
[332.82318115 231.46870422]
[323.03576660 220.10179138]
[280.66213989 187.30343628]
[266.92190552 181.28630066]
[253.18168640 175.26914978]
[239.44145203 169.25201416]
[225.70121765 163.23487854]
[211.96098328 157.21772766]
[198.22074890 151.20059204]
[184.48051453 145.18345642]
[170.74028015 139.16630554]
[157.00004578 133.14916992]
[142.23791504 135.13121033]
[132.70050049 122.50788116]
[118.96026611 116.49073792]
[99.85594177 125.12798309]
[80.85190582 116.27227020]
[67.04358673 122.13147736]
[53.23526764 127.99068451]
[43.55375290 140.50382996]
[28.81530762 138.35267639]
[24.41473961 153.35830688]
[11.36969662 161.98158264]
[-4.16035271 160.15084839]
[-14.84259319 148.73052979]
[-15.63319874 133.11294556]
[-6.15886736 120.67223358]
[9.10690975 117.28253937]
[22.95609856 124.54434967]
[31.64995193 112.45029449]
[47.37606049 114.18236542]
[61.18437958 108.32315826]
[74.99269867 102.46394348]
[71.00405121 101.74324036]
[67.03967285 100.72140503]
[52.65169144 96.48041534]
[38.26371002 92.23942566]
[23.87572861 87.99844360]
[9.48774624 83.75745392]
[-4.90023518 79.51646423]
[-19.28821754 75.27548218]
[-33.67620087 71.03449249]
[-42.75406647 71.61141205]
[-48.20431900 66.66152191]
[-63.66835403 70.00428772]
[-73.56174469 58.87010193]
[-87.40368652 66.01421356]
[-101.88211823 61.34197998]
[-108.60763550 48.10177231]
[-122.44957733 55.24588394]
[-136.92800903 50.57365036]
[-143.65351868 37.33344650]
[-157.99192810 32.92777252]
[-173.84623718 37.11977386]
[-185.21023560 25.29642677]
[-180.39363098 9.62057781]
[-164.35130310 6.21819639]
[-153.58625793 18.58936119]
[-139.24784851 22.99503326]
[-126.24813843 15.81567287]
[-111.64418793 20.07939529]
[-104.20195770 33.76336288]
[-91.20225525 26.58400154]
[-76.59830475 30.84772491]
[-69.15607452 44.53169250]
[-54.71761322 40.87379837]
[-43.79864502 52.32310867]
[-29.43521118 56.64650726]
[-15.04722977 60.88749695]
[-0.65924758 65.12848663]
[13.72873402 69.36946869]
[28.11671638 73.61045837]
[42.50469971 77.85144806]
[56.89268112 82.09243774]
[71.28066254 86.33341980]
[80.73828125 74.69068146]
[73.63890076 61.47709274]
[66.53952789 48.26350403]
[59.44015503 35.04991531]
[52.34078217 21.83633041]
[38.99344254 13.34167671]
[39.78556442 -1.53185022]
[32.68619156 -14.74543762]
[25.58681679 -27.95902443]
[18.48744202 -41.17261124]
[5.14010286 -49.66726303]
[5.93222475 -64.54079437]
[-8.28970051 -72.70589447]
[-8.05889416 -89.10341644]
[6.38721037 -96.86499786]
[20.18769836 -88.00617981]
[19.14581299 -71.64016724]
[31.98535538 -64.09063721]
[31.70102882 -48.27198410]
[38.80040359 -35.05839920]
[45.89977646 -21.84481239]
[52.99915314 -8.63122463]
[65.83869171 -1.08169591]
[65.55436707 14.73695564]
[72.65373993 27.95054245]
[79.75311279 41.16413116]
[86.85249329 54.37771606]
[93.95186615 67.59130096]
[112.85129547 72.49969482]
[124.18453217 86.40924072]
[124.97740936 102.75050354]
[138.71763611 108.76764679]
[154.46257019 107.21599579]
[163.01719666 119.40893555]
[176.75743103 125.42607880]
[190.49766541 131.44322205]
[204.23789978 137.46035767]
[217.97811890 143.47749329]
[231.71835327 149.49464417]
[245.45858765 155.51177979]
[259.19882202 161.52891541]
[272.93905640 167.54606628]
[286.67929077 173.56320190]
[300.71154785 168.26269531]
[307.04217529 154.66403198]
[313.37280273 141.06538391]
[312.18255615 125.28901672]
[324.56845093 117.01622009]
[330.89907837 103.41757202]
[329.70883179 87.64119720]
[342.09472656 79.36840057]
[348.42535400 65.76975250]
[354.75595093 52.17110062]
[355.95925903 35.25990677]
[372.54266357 31.73468781]
[380.52084351 46.69412613]
[368.35461426 58.50171280]
[362.02398682 72.10036469]
[355.69338989 85.69901276]
[357.33642578 100.50272369]
[344.49771118 109.74818420]
[338.16711426 123.34683228]
[339.81011963 138.15054321]
[326.97143555 147.39599609]
[320.64083862 160.99464417]
[314.31021118 174.59330750]
[326.16674805 183.78147888]
[337.75509644 174.25726318]
[349.34341431 164.73306274]
[360.93176270 155.20884705]
[372.52008057 145.68464661]
[373.80828857 129.93295288]
[385.91119385 119.76953125]
[401.64840698 121.22418213]
[411.68328857 133.43386841]
[410.06231689 149.15481567]
[397.74722290 159.06005859]
[382.04431152 157.27297974]
[370.45596313 166.79719543]
[358.86761475 176.32139587]
[347.27929688 185.84559631]
[335.69094849 195.36981201]
[334.40264893 210.31437683]
[344.19006348 221.68128967]
[353.97747803 233.04818726]
[363.76489258 244.41510010]
[373.55230713 255.78199768]
[388.42013550 261.19113159]
[390.86132812 275.88433838]
[400.64874268 287.25122070]
[410.43615723 298.61813354]
[420.22357178 309.98504639]
[430.01098633 321.35195923]
[444.87878418 326.76107788]
[447.31997681 341.45428467]
[457.10739136 352.82116699]
[466.89480591 364.18807983]
[480.48745728 362.03216553]
[493.27233887 366.82693481]
[501.95648193 377.22348022]
[504.35952759 390.44503784]
[499.96044922 403.02828979]
[509.61691284 414.50668335]
[519.27331543 425.98504639]
[528.92980957 437.46340942]
[538.58624268 448.94180298]
[556.05010986 454.83502197]
[558.40307617 472.24154663]
[568.19049072 483.60845947]
[577.97790527 494.97534180]
[596.37896729 489.80642700]
[616.52252197 503.80200195]
[630.58496094 509.02197266]
[644.64733887 514.24194336]
[658.70977783 519.46197510]
[670.98352051 510.11535645]
[686.36383057 508.91098022]
[699.94281006 516.23309326]
[707.38757324 529.74530029]
[706.32244873 545.13586426]
[697.08734131 557.49371338]
[682.62915039 562.87548828]
[667.56140137 559.56390381]
[656.69213867 548.61572266]
[653.48980713 533.52435303]
[639.42736816 528.30438232]
[625.36492920 523.08441162]
[611.30255127 517.86444092]
[606.27978516 523.43414307]
[619.97827148 529.54571533]
[618.39892578 544.46234131]
[603.72430420 547.56970215]
[596.23431396 534.57366943]
[591.21154785 540.14343262]
[597.85235596 553.59332275]
[604.49310303 567.04327393]
[611.13385010 580.49316406]
[624.18115234 589.44183350]
[622.87799072 604.27929688]
[629.51873779 617.72924805]
[636.15948486 631.17913818]
[642.80029297 644.62908936]
[662.16571045 650.10955811]
[671.06481934 667.81829834]
[664.12408447 686.05419922]
[671.22344971 699.26782227]
[678.32281494 712.48138428]
[685.42218018 725.69494629]
[692.52154541 738.90856934]
[706.74346924 747.07366943]
[706.51269531 763.47119141]
[692.06658936 771.23278809]
[678.26611328 762.37396240]
[679.30798340 746.00793457]
[672.20861816 732.79437256]
[665.10925293 719.58074951]
[658.00988770 706.36718750]
[650.91046143 693.15356445]
[640.71154785 692.95819092]
[631.43273926 688.52972412]
[624.76251221 680.60021973]
[621.94482422 670.54504395]
[623.54772949 660.14483643]
[629.35034180 651.26983643]
[622.70959473 637.81988525]
[616.06884766 624.36999512]
[609.42810059 610.92004395]
[596.85577393 602.93347168]
[597.68389893 587.13391113]
[591.04315186 573.68402100]
[584.40240479 560.23406982]
[577.76165771 546.78417969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 211]
[2 210]
[3 209]
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[14 198]
[15 197]
[16 196]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[24 188]
[25 187]
[26 186]
[27 185]
[28 184]
[29 144]
[30 143]
[31 142]
[32 141]
[33 140]
[34 139]
[35 138]
[36 137]
[37 136]
[38 135]
[40 133]
[41 132]
[43 59]
[44 58]
[45 57]
[47 55]
[61 101]
[62 100]
[63 99]
[64 98]
[65 97]
[66 96]
[67 95]
[68 94]
[70 93]
[72 91]
[75 88]
[78 85]
[79 84]
[102 129]
[103 128]
[104 127]
[105 126]
[106 125]
[108 123]
[109 122]
[110 121]
[111 120]
[113 118]
[145 167]
[146 166]
[147 165]
[149 163]
[150 162]
[152 160]
[153 159]
[154 158]
[168 183]
[169 182]
[170 181]
[171 180]
[172 179]
[213 229]
[214 228]
[215 227]
[216 226]
[235 273]
[236 272]
[237 271]
[238 270]
[240 268]
[241 267]
[242 266]
[243 265]
[246 259]
[247 258]
[248 257]
[249 256]
[250 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
