%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCGCGCCGCGGGGUGAGCGGCGCCGGGCCUGAGGUCGCCCAGACGCCGUCGGGGCGGAGCCGGGUCGCGAGGCUGCAUCCCGGCCGGCGGUUCCGGAGCCUCGCGGCUGGGGAGGCGCGGCCCGGGACGCUCGAGCUUAGGGAGAUCUGCCUUCUGGAGACUGCGCCGUCCUCCCGGGAGAGCCAGAAAGAGGAC\
) } def
/len { sequence length } bind def

/coor [
[56.04388046 113.53076935]
[41.04434967 113.41236877]
[26.04481697 113.29396820]
[11.04528332 113.17556763]
[-1.18962145 125.67206573]
[-18.33939934 125.46259308]
[-29.80468369 113.16472626]
[-44.80421448 113.28312683]
[-59.80374908 113.40152740]
[-74.80328369 113.51992798]
[-89.80281067 113.63832855]
[-104.79860687 113.99349976]
[-119.78692627 114.58535767]
[-134.77525330 115.17721558]
[-149.76356506 115.76906586]
[-164.75187683 116.36092377]
[-179.74020386 116.95278168]
[-194.72851562 117.54463196]
[-209.71170044 118.25477600]
[-224.68881226 119.08316803]
[-239.66592407 119.91156006]
[-250.18038940 131.40432739]
[-265.38110352 132.03108215]
[-276.27291870 121.93630981]
[-291.25000000 122.76470184]
[-306.22711182 123.59308624]
[-311.97488403 126.89226532]
[-317.66952515 126.79991150]
[-321.68865967 124.20362854]
[-336.68444824 124.55879974]
[-351.68023682 124.91397095]
[-366.67605591 125.26914978]
[-381.67184448 125.62432098]
[-396.66763306 125.97949219]
[-405.53253174 138.57789612]
[-419.94744873 143.48335266]
[-434.31686401 139.01303101]
[-443.19238281 127.08142090]
[-458.18817139 127.43659210]
[-473.18395996 127.79176331]
[-488.17974854 128.14692688]
[-503.17553711 128.50210571]
[-518.17132568 128.85728455]
[-531.78442383 136.91917419]
[-544.69134521 129.48539734]
[-559.68713379 129.84057617]
[-574.68292236 130.19573975]
[-590.37445068 136.61543274]
[-600.88708496 123.31427765]
[-591.01599121 109.53034210]
[-575.03808594 115.19995117]
[-560.04229736 114.84477234]
[-545.04650879 114.48960114]
[-532.50604248 106.45311737]
[-518.52648926 113.86148071]
[-503.53073120 113.50630951]
[-488.53494263 113.15113831]
[-473.53912354 112.79596710]
[-458.54333496 112.44079590]
[-443.54754639 112.08562469]
[-435.24685669 99.74720001]
[-421.10519409 94.60160065]
[-406.47418213 98.81909943]
[-397.02279663 110.98369598]
[-382.02700806 110.62852478]
[-367.03121948 110.27335358]
[-352.03543091 109.91818237]
[-337.03961182 109.56301117]
[-322.04382324 109.20783234]
[-307.05551147 108.61598206]
[-292.07839966 107.78759003]
[-277.10128784 106.95919800]
[-267.38922119 95.72482300]
[-252.21211243 94.67136383]
[-240.49430847 104.93444824]
[-225.51719666 104.10606384]
[-210.54010010 103.27767181]
[-204.02868652 99.76586914]
[-195.32037354 102.55631256]
[-180.33206177 101.96446228]
[-165.34373474 101.37260437]
[-150.35542297 100.78074646]
[-135.36709595 100.18889618]
[-120.37878418 99.59703827]
[-105.39046478 99.00518799]
[-101.54316711 96.16044617]
[-95.86570740 95.70890808]
[-89.92121124 98.63880157]
[-74.92168427 98.52040100]
[-59.92214966 98.40200043]
[-44.92261505 98.28359985]
[-29.92308426 98.16519928]
[-22.25328255 87.80419159]
[-9.82993889 83.69406128]
[2.87839460 87.54933167]
[11.16368389 98.17603302]
[26.16321754 98.29443359]
[41.16275024 98.41283417]
[56.16228104 98.53123474]
[64.87192535 93.31961060]
[75.75081635 96.82611847]
[90.50429535 94.11781311]
[105.23593140 91.29313660]
[119.94481659 88.35226440]
[134.65370178 85.41139984]
[146.66908264 75.11862946]
[160.66630554 80.21047974]
[175.37519836 77.26961517]
[190.08407593 74.32874298]
[195.30673218 70.24890137]
[200.95706177 69.53393555]
[205.30335999 71.53492737]
[220.09774780 69.05986786]
[234.89215088 66.58480072]
[249.68653870 64.10973358]
[264.48092651 61.63467026]
[279.25531006 59.04290390]
[294.00878906 56.33459854]
[308.76226807 53.62629318]
[323.51574707 50.91798782]
[338.26922607 48.20968628]
[353.02270508 45.50138092]
[367.77618408 42.79307556]
[382.50781250 39.96839905]
[397.19305420 36.91151810]
[411.85366821 33.73881912]
[426.51428223 30.56611824]
[441.17492676 27.39341736]
[455.83554077 24.22071648]
[470.49618530 21.04801559]
[482.34756470 10.56684971]
[496.42343140 15.43710613]
[511.08407593 12.26440525]
[518.71716309 1.85940158]
[531.00048828 -0.47723818]
[541.24176025 5.97199202]
[555.95062256 3.03112268]
[567.96600342 -7.26164818]
[581.96325684 -2.16979361]
[596.67211914 -5.11066294]
[611.38098145 -8.05153179]
[625.72729492 -17.08591461]
[638.38006592 -5.80124044]
[631.03906250 9.48095894]
[614.32189941 6.65735245]
[599.61297607 9.59822178]
[584.90411377 12.53909111]
[573.94079590 22.62151146]
[558.89147949 17.74000740]
[544.18261719 20.68087578]
[531.64959717 32.95864868]
[514.25677490 26.92503166]
[499.59613037 30.09773254]
[488.79336548 40.35196686]
[473.66888428 35.70864105]
[459.00823975 38.88134384]
[444.34762573 42.05404282]
[429.68698120 45.22674561]
[415.02636719 48.39944458]
[400.36575317 51.57214737]
[394.48742676 56.06396103]
[385.44869995 54.67728424]
[379.50018311 59.07574463]
[370.48449707 57.54655075]
[355.73101807 60.25485611]
[340.97753906 62.96316147]
[326.22406006 65.67146301]
[311.47058105 68.37976837]
[296.71710205 71.08807373]
[281.96362305 73.79637909]
[275.94644165 78.10038757]
[266.95599365 76.42906189]
[252.16160583 78.90412903]
[237.36720276 81.37919617]
[222.57281494 83.85425568]
[207.77842712 86.32932281]
[193.02494812 89.03762817]
[178.31607056 91.97850037]
[163.60717773 94.91936493]
[152.64387512 105.00178528]
[137.59457397 100.12028503]
[122.88568878 103.06114960]
[108.17680359 106.00202179]
[101.51079559 110.54895020]
[93.21260071 108.87129211]
[78.45912170 111.57958984]
[92.14232635 117.72531891]
[102.29690552 128.76545715]
[107.27980042 142.91362000]
[106.28473663 157.88058472]
[99.47273254 171.24458313]
[87.94599915 180.84326172]
[73.56964111 185.12347412]
[58.66983032 183.39268494]
[45.65744781 175.93092346]
[36.63796997 163.94555664]
[33.07080460 149.37588501]
[35.53313828 134.57936096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[4 96]
[7 92]
[8 91]
[9 90]
[10 89]
[11 88]
[12 85]
[13 84]
[14 83]
[15 82]
[16 81]
[17 80]
[18 79]
[19 77]
[20 76]
[21 75]
[24 72]
[25 71]
[26 70]
[29 69]
[30 68]
[31 67]
[32 66]
[33 65]
[34 64]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[45 53]
[46 52]
[47 51]
[101 186]
[102 185]
[103 183]
[104 182]
[105 181]
[107 179]
[108 178]
[109 177]
[112 176]
[113 175]
[114 174]
[115 173]
[116 172]
[117 170]
[118 169]
[119 168]
[120 167]
[121 166]
[122 165]
[123 164]
[124 162]
[125 160]
[126 159]
[127 158]
[128 157]
[129 156]
[130 155]
[132 153]
[133 152]
[136 150]
[137 149]
[139 147]
[140 146]
[141 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
