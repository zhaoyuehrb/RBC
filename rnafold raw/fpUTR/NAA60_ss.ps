%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGGCUUCCGGGCUGCGCUGCCGGCAGGGAGCGGGAGGCGGAAGUGCCGCGGGCUGCCGCCUCCGUCCCGGCUGCGGCCCCUGCCGGUUACAUAACUCGUUGCGGGCUCCGCGCGGUCCCACUUCCCGGCUCCCUUCGCCUCCAGGAUGCGCUGAGCCCUACAACACCCCCAGCGGCCGCCGGCUCCCCCACGAGGUGUGA\
) } def
/len { sequence length } bind def

/coor [
[96.43660736 365.00036621]
[100.38603973 350.52963257]
[114.09880829 344.45016479]
[127.47385406 351.23989868]
[125.40150452 336.38375854]
[123.32916260 321.52758789]
[110.12031555 314.69647217]
[103.38707733 301.23809814]
[105.89907074 286.22000122]
[116.89967346 275.43609619]
[114.82732391 260.57992554]
[112.75498199 245.72377014]
[110.68263245 230.86761475]
[96.82711792 225.40042114]
[87.50647736 213.65386963]
[85.30235291 198.72039795]
[90.90575409 184.59600830]
[102.90489960 175.11087036]
[100.83255768 160.25471497]
[98.76020813 145.39855957]
[96.68786621 130.54240417]
[94.61551666 115.68624115]
[84.09090424 104.99828339]
[69.26841736 102.69741058]
[54.44593811 100.39653778]
[39.62345505 98.09566498]
[24.80097389 95.79478455]
[9.97849178 93.49391174]
[-4.84399033 91.19303894]
[-19.66647339 88.89216614]
[-34.48895645 86.59128571]
[-43.45478058 88.36784363]
[-49.52126312 84.13916016]
[-64.30655670 81.61029816]
[-69.23724365 102.26143646]
[-95.86157990 114.64272308]
[-110.86157990 114.64272308]
[-125.86157990 114.64272308]
[-140.86157227 114.64272308]
[-155.86157227 114.64272308]
[-170.86157227 114.64272308]
[-185.86157227 114.64272308]
[-200.86157227 114.64272308]
[-207.47523499 124.52980804]
[-217.93455505 129.93899536]
[-229.58576965 129.62815857]
[-239.53494263 123.79030609]
[-245.36682129 113.97685242]
[-260.35971069 113.51492310]
[-275.35260010 113.05300140]
[-291.37042236 118.60870361]
[-301.14318848 104.75483704]
[-290.53610229 91.52886963]
[-274.89068604 98.06011200]
[-259.89779663 98.52204132]
[-244.90490723 98.98396301]
[-232.35249329 85.66460419]
[-213.73124695 85.74590302]
[-200.86157227 99.64272308]
[-185.86157227 99.64272308]
[-170.86157227 99.64272308]
[-155.86157227 99.64272308]
[-140.86157227 99.64272308]
[-125.86157990 99.64272308]
[-110.86157990 99.64272308]
[-95.86157990 99.64272308]
[-93.20619965 92.62852478]
[-107.23449707 87.31752777]
[-101.92327118 73.28931427]
[-87.89543152 78.60013580]
[-85.24005127 71.58593750]
[-96.47948456 61.65240479]
[-112.64994049 58.92324448]
[-118.11729431 43.46232224]
[-107.25719452 31.17451096]
[-91.24159241 34.70045471]
[-86.54595184 50.41296768]
[-75.30651855 60.34650040]
[-61.77769852 66.82501221]
[-46.99240494 69.35386658]
[-32.18807983 71.76880646]
[-17.36559868 74.06967926]
[-2.54311562 76.37055969]
[12.27936649 78.67143250]
[27.10184860 80.97230530]
[41.92433167 83.27317810]
[56.74681091 85.57405853]
[71.56929779 87.87493134]
[86.39177704 90.17580414]
[71.85982513 86.45794678]
[60.45698166 76.71243286]
[54.52076340 62.93704224]
[55.26807785 47.95566940]
[62.54571915 34.83942413]
[74.86181641 26.27707291]
[89.69161224 24.02385902]
[103.99508667 28.54167938]
[114.84008789 38.90440369]
[120.00343323 52.98772049]
[118.42667389 67.90461731]
[110.43264008 80.59758759]
[122.93667603 72.31211853]
[135.44071960 64.02664185]
[147.94474792 55.74116516]
[155.76464844 39.07275772]
[173.30664062 38.67030716]
[185.68161011 30.19326019]
[198.05656433 21.71621513]
[210.43153381 13.23916817]
[222.80648804 4.76212168]
[235.18145752 -3.71492434]
[242.19392395 -17.89715767]
[257.06652832 -18.70654869]
[269.44149780 -27.18359566]
[281.81643677 -35.66064072]
[294.19140625 -44.13768768]
[306.56637573 -52.61473465]
[311.88146973 -60.05059433]
[319.19781494 -61.12531662]
[331.70184326 -69.41078949]
[344.20587158 -77.69626617]
[341.78402710 -88.70642853]
[342.82907104 -99.90454102]
[347.22549438 -110.22750854]
[354.54043579 -118.70026398]
[364.06619263 -124.52789307]
[374.88867188 -127.17018890]
[385.97512817 -126.39168549]
[396.27273560 -122.28256226]
[404.80844116 -115.24852753]
[417.79882812 -122.74852753]
[430.78921509 -130.24853516]
[433.32626343 -145.67892456]
[445.22189331 -155.82923889]
[460.85928345 -155.90678406]
[472.85494995 -145.87495422]
[475.54492188 -130.47047424]
[467.65908813 -116.96685791]
[452.92086792 -111.74011993]
[438.28921509 -117.25814819]
[425.29882812 -109.75814819]
[412.30844116 -102.25814819]
[413.33538818 -83.38805389]
[404.60092163 -66.53752899]
[388.45086670 -56.41249084]
[369.31484985 -55.88796997]
[352.49136353 -65.19223022]
[339.98733521 -56.90675354]
[327.48327637 -48.62128067]
[315.04342651 -40.23977280]
[302.66845703 -31.76272583]
[290.29348755 -23.28567886]
[277.91854858 -14.80863285]
[265.54357910 -6.33158684]
[259.41622925 7.24431133]
[243.65849304 8.66003799]
[231.28353882 17.13708496]
[218.90856934 25.61413002]
[206.53361511 34.09117508]
[194.15864563 42.56822205]
[181.78369141 51.04526901]
[179.25178528 62.87745667]
[169.00653076 70.04041290]
[156.23022461 68.24520111]
[143.72618103 76.53067780]
[131.22215271 84.81615448]
[118.71811676 93.10162354]
[133.66764832 91.87213898]
[144.65841675 102.08011627]
[144.53485107 117.07960510]
[133.37739563 127.10512543]
[118.45014954 125.62950897]
[109.47167969 113.61389923]
[111.54402161 128.47006226]
[113.61636353 143.32621765]
[115.68871307 158.18237305]
[117.76105499 173.03852844]
[131.89787292 178.87785339]
[141.15269470 190.92961121]
[143.11944580 205.89617920]
[137.36921692 219.74504089]
[125.53878784 228.79527283]
[127.61113739 243.65142822]
[129.68348694 258.50759888]
[131.75582886 273.36373901]
[145.28764343 280.72552490]
[151.81364441 294.48287964]
[149.02050781 309.27011108]
[138.18531799 319.45526123]
[140.25765991 334.31140137]
[142.33000183 349.16757202]
[144.97264099 363.93295288]
[148.18164062 378.58566284]
[151.39062500 393.23840332]
[164.06900024 403.06887817]
[164.14395142 419.11178589]
[151.55799866 429.06030273]
[135.96600342 425.28283691]
[129.32881165 410.67712402]
[136.73789978 396.44738770]
[133.52891541 381.79467773]
[130.31991577 367.14193726]
[120.12982941 378.14932251]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 191]
[5 190]
[6 189]
[10 185]
[11 184]
[12 183]
[13 182]
[18 177]
[19 176]
[20 175]
[21 174]
[22 173]
[23 89]
[24 88]
[25 87]
[26 86]
[27 85]
[28 84]
[29 83]
[30 82]
[31 81]
[33 80]
[34 79]
[36 66]
[37 65]
[38 64]
[39 63]
[40 62]
[41 61]
[42 60]
[43 59]
[48 56]
[49 55]
[50 54]
[71 78]
[72 77]
[101 167]
[102 166]
[103 165]
[104 164]
[106 161]
[107 160]
[108 159]
[109 158]
[110 157]
[111 156]
[113 154]
[114 153]
[115 152]
[116 151]
[117 150]
[119 149]
[120 148]
[121 147]
[130 142]
[131 141]
[132 140]
[192 202]
[193 201]
[194 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
