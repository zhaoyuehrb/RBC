%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGGAAGUGACGCAAGCGCCCCCCCACCGCCGCUAGAUCCGCUGCUGCUGCCGCGGCGGGCAGACCUGCAGGAGGCGGCGGCGGCGGCGGCGGCCGAGGCUGAAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[114.96937561 171.00244141]
[110.37451172 156.72354126]
[105.77965546 142.44462585]
[101.18479156 128.16571045]
[96.58993530 113.88681030]
[89.30591583 112.09986877]
[74.73789215 108.52599335]
[67.45388031 106.73905182]
[56.77249527 117.27033997]
[46.09111023 127.80162811]
[42.09878540 136.18423462]
[34.95528030 138.47445679]
[30.67321968 154.30467224]
[14.75555992 158.24931335]
[3.57702732 146.25047302]
[8.63713646 130.65151978]
[24.73048019 127.49932861]
[35.55982208 117.12023926]
[46.24120712 106.58895111]
[56.92259216 96.05766296]
[48.59645462 83.58067322]
[48.34227371 68.58282471]
[56.24083328 55.83085251]
[69.78175354 49.37768173]
[84.66136169 51.27430725]
[96.15052032 60.91792679]
[100.59764099 75.24353790]
[96.58993530 89.69709015]
[101.18479156 75.41817474]
[105.77965546 61.13926697]
[110.37451172 46.86035919]
[114.96937561 32.58144760]
[119.56423187 18.30253983]
[124.15909576 4.02363014]
[110.00277710 8.98334694]
[96.37463379 2.71647930]
[90.92550659 -11.25874901]
[96.71454620 -25.09663391]
[110.49177551 -31.02857590]
[124.52265167 -25.72437859]
[130.93026733 -12.16122246]
[137.87217712 -25.45820808]
[144.81408691 -38.75519180]
[151.75601196 -52.05217743]
[158.69792175 -65.34916687]
[165.63983154 -78.64614868]
[172.58175659 -91.94313812]
[179.52366638 -105.24011993]
[186.46557617 -118.53710175]
[193.40750122 -131.83409119]
[200.34941101 -145.13107300]
[207.29132080 -158.42805481]
[214.23324585 -171.72505188]
[206.50413513 -186.69116211]
[209.13854980 -203.16064453]
[220.91476440 -214.73730469]
[237.09965515 -217.04319763]
[243.66250610 -230.53131104]
[250.22535706 -244.01942444]
[256.78820801 -257.50753784]
[263.35104370 -270.99563599]
[261.65255737 -287.30657959]
[275.08605957 -296.71261597]
[289.83227539 -289.53762817]
[290.72158813 -273.16259766]
[276.83914185 -264.43280029]
[270.27630615 -250.94468689]
[263.71347046 -237.45657349]
[257.15060425 -223.96847534]
[250.58776855 -210.48036194]
[257.96319580 -199.25503540]
[258.79833984 -185.74060059]
[252.76504517 -173.49752808]
[241.35891724 -165.80508423]
[227.53022766 -164.78312683]
[220.58830261 -151.48614502]
[213.64639282 -138.18916321]
[206.70448303 -124.89217377]
[199.76255798 -111.59519196]
[192.82064819 -98.29820251]
[185.87873840 -85.00122070]
[178.93681335 -71.70423126]
[171.99490356 -58.40724945]
[165.05299377 -45.11026382]
[158.11106873 -31.81327820]
[151.16915894 -18.51629257]
[144.22724915 -5.21930790]
[138.43800354 8.61849022]
[133.84313965 22.89739990]
[129.24827576 37.17630768]
[124.65341949 51.45521927]
[120.05856323 65.73413086]
[115.46369934 80.01303864]
[110.86884308 94.29194641]
[110.86884308 109.29194641]
[115.46369934 123.57085419]
[120.05856323 137.84976196]
[124.65341949 152.12867737]
[129.24827576 166.40759277]
[144.37437439 168.44816589]
[157.11242676 176.85678101]
[164.93325806 189.96392822]
[166.28407288 205.16716003]
[160.89663696 219.44784546]
[149.84063721 229.97058105]
[135.31126404 234.64604187]
[120.19332123 232.54591370]
[107.48848724 224.08718872]
[99.71932220 210.94935608]
[98.42839813 195.74092102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[4 96]
[5 95]
[8 20]
[9 19]
[10 18]
[12 17]
[28 94]
[29 93]
[30 92]
[31 91]
[32 90]
[33 89]
[34 88]
[41 87]
[42 86]
[43 85]
[44 84]
[45 83]
[46 82]
[47 81]
[48 80]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
