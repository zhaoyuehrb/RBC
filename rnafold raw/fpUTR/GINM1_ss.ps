%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUGCGCAAACGCCUUUCCCUGGCGAGCCGGAUCUCGGAGCGUCCCCGCGCCUCUCCGCGGCCGCCCGGGGAGGGGAGGGCCCGUCCCGCCCCUCCCCGUCUCUCCCCGCCCCUCCCCGUCCCUCCCGCCGAAGCUCCGUCCCGCCCGCGGGCCGGCUCCGCCCUCACCUCCCGGCCGCGGCUGCCCUCUGCCCGGGUUGUCCAAG\
) } def
/len { sequence length } bind def

/coor [
[160.23085022 321.62423706]
[156.86148071 336.24090576]
[153.49212646 350.85760498]
[150.12277222 365.47427368]
[158.71371460 378.73968506]
[155.32670593 394.17678833]
[141.97120667 402.62698364]
[126.57079315 399.07696533]
[118.26225281 385.63287354]
[121.97489929 370.27084351]
[135.50608826 362.10491943]
[138.87544250 347.48822021]
[142.24479675 332.87155151]
[145.61416626 318.25488281]
[136.28222656 311.57064819]
[129.02871704 302.98483276]
[124.20770264 293.09707642]
[122.00918579 282.56274414]
[122.45365143 272.04989624]
[125.39759064 262.19711304]
[130.54914856 253.57464600]
[137.49259949 246.65139771]
[145.71972656 241.76983643]
[141.04139709 227.51806641]
[136.36306763 213.26628113]
[131.68473816 199.01449585]
[126.89891815 184.79846191]
[122.00587463 170.61895752]
[117.11283875 156.43945312]
[112.21979523 142.25996399]
[107.32675171 128.08045959]
[102.43370819 113.90097046]
[99.31298828 116.76201630]
[95.09179688 118.80995941]
[89.99897003 119.71148682]
[84.35335541 119.19881439]
[78.54528809 117.09229279]
[73.01271057 113.31790924]
[58.01955032 112.86486053]
[49.34494781 115.73417664]
[42.80384827 112.29005432]
[27.81924629 111.61061096]
[12.83464146 110.93117523]
[5.23808670 118.71997070]
[-5.17685795 120.99406433]
[-14.91867447 117.23829651]
[-20.85624886 108.91864014]
[-35.81349564 107.78692627]
[-50.77074432 106.65522003]
[-65.72798920 105.52350616]
[-80.68523407 104.39179993]
[-92.50699615 114.88091278]
[-108.27796936 113.85520935]
[-118.64151001 101.92321014]
[-117.44911957 86.16396332]
[-105.40821838 75.92715454]
[-89.66246033 77.28609467]
[-79.55352783 89.43455505]
[-64.59628296 90.56626129]
[-49.63903427 91.69796753]
[-34.68178558 92.82968140]
[-19.72453880 93.96138763]
[-2.95911670 84.33043671]
[13.51408100 95.94657135]
[28.49868393 96.62600708]
[43.48328781 97.30545044]
[58.47259521 97.87170410]
[73.46575165 98.32475281]
[80.63640594 85.14971161]
[72.11543274 72.80495453]
[63.59446335 60.46019363]
[55.07349014 48.11543655]
[46.55252075 35.77067947]
[38.03154755 23.42592049]
[29.51057816 11.08116150]
[20.98960686 -1.26359618]
[12.46863556 -13.60835457]
[-1.73842943 -20.57038498]
[-2.60067058 -35.44001389]
[-11.12164211 -47.78477097]
[-19.64261246 -60.12952805]
[-35.10018921 -64.42404938]
[-41.24739456 -79.24266815]
[-33.36862183 -93.21780396]
[-17.50778770 -95.62893677]
[-5.83197021 -84.62644196]
[-7.29785490 -68.65049744]
[1.22311616 -56.30574036]
[9.74408722 -43.96098328]
[23.34167480 -37.88193130]
[24.81339264 -22.12932587]
[33.33436584 -9.78456688]
[41.85533524 2.56019068]
[50.37630844 14.90494823]
[58.89727783 27.24970627]
[67.41825104 39.59446335]
[75.93922424 51.93922424]
[84.46018982 64.28398132]
[92.98116302 76.62873840]
[91.42169952 61.71002197]
[89.86223602 46.79130936]
[88.30277252 31.87259102]
[86.74330902 16.95387650]
[85.18384552 2.03516078]
[78.63810730 -11.46125698]
[76.10754395 -26.24625778]
[77.79214478 -41.15135956]
[83.55877686 -54.99859619]
[92.95169830 -66.69359589]
[105.22856903 -75.31208801]
[119.41913605 -80.17295074]
[134.40188599 -80.89200592]
[148.99272156 -77.41242981]
[162.03851318 -70.00923157]
[172.50822449 -59.26748276]
[179.57441711 -46.03612518]
[182.67864990 -31.36084938]
[181.57559204 -16.40146255]
[176.35240173 -2.34022641]
[167.42190552 9.71157837]
[155.48936462 18.80175591]
[147.36497498 31.41104698]
[139.24058533 44.02033615]
[131.11618042 56.62962723]
[122.99179077 69.23891449]
[114.86739349 81.84820557]
[128.04243469 74.67755890]
[141.21748352 67.50690460]
[154.39251709 60.33625412]
[167.56756592 53.16560364]
[168.64938354 41.32361221]
[175.24664307 31.57463074]
[185.62397766 26.27659035]
[197.14981079 26.64309883]
[206.96337891 32.46742249]
[220.34898376 25.69796753]
[222.68963623 10.35844517]
[233.62351990 -0.65199101]
[248.94635010 -3.09960246]
[262.76617432 3.95676684]
[269.76898193 17.80379868]
[267.26205444 33.11702728]
[256.20935059 44.00820541]
[240.86088562 46.28944778]
[227.11843872 39.08357620]
[213.73283386 45.85302734]
[209.08258057 63.55695724]
[192.68846130 72.39324951]
[174.73822021 66.34064484]
[161.56317139 73.51129913]
[148.38813782 80.68194580]
[135.21308899 87.85260010]
[122.03804779 95.02325439]
[116.61320496 109.00792694]
[121.50624847 123.18742371]
[126.39929199 137.36692810]
[131.29232788 151.54641724]
[136.18537903 165.72592163]
[141.07841492 179.90541077]
[146.83732605 186.99884033]
[145.93652344 194.33616638]
[150.61485291 208.58795166]
[155.29318237 222.83973694]
[159.97149658 237.09150696]
[183.07884216 239.09405518]
[202.01878357 254.60316467]
[209.27426147 279.32644653]
[200.93545532 305.06173706]
[210.53865051 316.58471680]
[226.03538513 318.16232300]
[235.61024475 329.98504639]
[234.01072693 344.74908447]
[243.61392212 356.27206421]
[253.21711731 367.79501343]
[262.82031250 379.31799316]
[272.42349243 390.84094238]
[278.48995972 393.47906494]
[281.81295776 398.09298706]
[282.13635254 402.86004639]
[291.38714600 414.66778564]
[300.63790894 426.47555542]
[309.88870239 438.28329468]
[325.52249146 438.62719727]
[337.24346924 448.97866821]
[339.51733398 464.45004272]
[331.27044678 477.73620605]
[316.39672852 482.56387329]
[301.91909790 476.65353394]
[294.67343140 462.79589844]
[298.08096313 447.53408813]
[288.83016968 435.72631836]
[279.57937622 423.91857910]
[270.32861328 412.11083984]
[260.90054321 400.44412231]
[251.29734802 388.92117310]
[241.69415283 377.39822388]
[232.09095764 365.87524414]
[222.48776245 354.35229492]
[207.67723083 353.26428223]
[197.77407837 341.71517944]
[199.01568604 326.18789673]
[189.41249084 314.66494751]
[182.11708069 316.40475464]
[185.59672546 330.99557495]
[189.07612610 345.58645630]
[174.48519897 349.06561279]
[171.00590515 334.47521973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[23 164]
[24 163]
[25 162]
[26 161]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[38 68]
[39 67]
[41 66]
[42 65]
[43 64]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[69 99]
[70 98]
[71 97]
[72 96]
[73 95]
[74 94]
[75 93]
[76 92]
[77 91]
[79 89]
[80 88]
[81 87]
[126 153]
[127 152]
[128 151]
[129 150]
[130 149]
[135 146]
[136 145]
[168 202]
[169 201]
[172 198]
[173 197]
[174 196]
[175 195]
[176 194]
[179 193]
[180 192]
[181 191]
[182 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
