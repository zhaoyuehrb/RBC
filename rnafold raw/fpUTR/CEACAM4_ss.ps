%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGAAGGAGGAAGGUCAGCAGCCCCGACAGCCGACAGUCACAGCAGCUCUGACAAGAGCGUUCCUGGAGCCCAGCUCCUCUCCACAGAGGACAAGCAGGCAGCAGAGACC\
) } def
/len { sequence length } bind def

/coor [
[144.40872192 141.28778076]
[144.00772095 156.28242493]
[137.91600037 169.98976135]
[127.05520630 180.33592224]
[113.06852722 185.75558472]
[98.07209015 185.42878723]
[84.33478546 179.40496826]
[73.93501282 168.59548950]
[68.44620514 154.63580322]
[68.69879913 139.63792419]
[74.65447235 125.87115479]
[59.80175400 127.96800995]
[50.30089569 140.31188965]
[35.20825958 142.22682190]
[23.49880219 133.09313965]
[8.64608479 135.18998718]
[-6.20663166 137.28684998]
[-18.78970146 146.87730408]
[-32.47360611 140.99513245]
[-47.32632446 143.09197998]
[-52.99649429 157.36589050]
[-65.05391693 166.87979126]
[-80.25519562 169.07447815]
[-94.51126862 163.35958862]
[-103.98732758 151.27241516]
[-106.13434601 136.06433105]
[-100.37480164 121.82623291]
[-88.25798035 112.38811493]
[-73.04324341 110.28877258]
[-58.82327271 116.09291077]
[-49.42317963 128.23925781]
[-34.57046127 126.14241028]
[-23.04975700 116.70192719]
[-8.30348682 122.43412781]
[6.54923010 120.33727264]
[21.40194702 118.24041748]
[30.12523842 106.22210693]
[45.15813446 103.88401794]
[57.70489883 113.11529541]
[72.55761719 111.01844025]
[77.06748962 105.02585602]
[62.17815399 103.20719147]
[56.30841064 89.40335083]
[65.32794189 77.41802216]
[80.21731567 79.23641968]
[86.08724976 93.04070282]
[90.59712982 87.04812622]
[88.50027466 72.19540405]
[86.40341949 57.34268951]
[84.30656433 42.48997116]
[82.20970917 27.63725662]
[71.68466187 15.06127071]
[77.56663513 -0.24671401]
[93.80475616 -2.53915644]
[103.69464874 10.54221249]
[97.06242371 25.54040146]
[99.15927887 40.39311981]
[101.25613403 55.24583435]
[103.35298920 70.09854889]
[105.44984436 84.95127106]
[116.34974670 95.25622559]
[131.29667664 96.51698303]
[146.24359131 97.77774048]
[160.64526367 91.22772980]
[172.67716980 100.00738525]
[187.62409973 101.26814270]
[202.57101440 102.52890015]
[214.58044434 92.60864258]
[229.72077942 94.10015106]
[239.10421753 105.61043549]
[254.05114746 106.87120056]
[268.99807739 108.13195801]
[279.42510986 100.38153076]
[291.93093872 101.82798767]
[299.79296875 111.13919830]
[314.69866943 112.81866455]
[329.66180420 113.86967468]
[344.65588379 114.29036713]
[359.64999390 114.71105957]
[374.64410400 115.13175964]
[389.63818359 115.55245209]
[404.63229370 115.97314453]
[418.79360962 107.70336151]
[432.90002441 116.06641388]
[432.44009399 132.45910645]
[417.88693237 140.01805115]
[404.21160889 130.96723938]
[389.21749878 130.54655457]
[374.22338867 130.12585449]
[359.22930908 129.70515442]
[344.23519897 129.28446960]
[329.24108887 128.86376953]
[326.37277222 131.14193726]
[322.21020508 132.06285095]
[317.44323730 131.01170349]
[313.01919556 127.72434998]
[298.11352539 126.04487610]
[282.51577759 133.95172119]
[267.73730469 123.07888031]
[252.79039001 121.81812286]
[237.84346008 120.55735779]
[226.66456604 130.33323669]
[211.48829651 129.26756287]
[201.31025696 117.47582245]
[186.36334229 116.21506500]
[171.41641235 114.95430756]
[158.08384705 121.59449768]
[144.98283386 112.72466278]
[130.03591919 111.46390533]
[115.08898926 110.20314789]
[128.76602173 116.36260986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 40]
[12 39]
[15 36]
[16 35]
[17 34]
[19 32]
[20 31]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[61 110]
[62 109]
[63 108]
[65 106]
[66 105]
[67 104]
[70 101]
[71 100]
[72 99]
[75 97]
[76 96]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
