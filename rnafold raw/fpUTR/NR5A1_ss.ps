%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGACGGACGGACAGGGCCAGCCUGCUGUCCGGCUGCCGCCCGCCGUGGUGUGAGGGGGUUUCUGCGCACCCACAGUCGCCACCGUCCCACCUGGGCUGCCGGAGCCUCCCCCUGGACCCCUGGUGCCCACUGCCACCCUCAUCCGGUGUGAGAGCGCUGCUUCCGCUUCGCGGACGCCGCGGGC\
) } def
/len { sequence length } bind def

/coor [
[31.16704559 199.06034851]
[21.67538834 210.67535400]
[18.93420792 226.25727844]
[4.88942528 231.21644592]
[-4.60223293 242.83146667]
[-7.34341335 258.41339111]
[-21.38819504 263.37255859]
[-30.87985420 274.98757935]
[-40.37151337 286.60256958]
[-49.86317062 298.21759033]
[-59.35482788 309.83258057]
[-68.84648895 321.44760132]
[-78.33814240 333.06262207]
[-81.35388947 341.70642090]
[-88.08674622 344.79067993]
[-97.77116394 356.24545288]
[-107.45558167 367.70022583]
[-117.13999939 379.15502930]
[-117.23935699 395.19775391]
[-129.93264771 405.00897217]
[-145.48268127 401.06231689]
[-151.96080017 386.38534546]
[-144.39752197 372.23693848]
[-128.59477234 369.47061157]
[-118.91036224 358.01580811]
[-109.22594452 346.56103516]
[-99.54152679 335.10626221]
[-89.95315552 323.57095337]
[-80.46149445 311.95593262]
[-70.96983337 300.34094238]
[-61.47817993 288.72592163]
[-51.98651886 277.11093140]
[-42.49486160 265.49591064]
[-33.00320435 253.88090515]
[-30.94092941 239.12976074]
[-16.21724129 233.33979797]
[-6.72558308 221.72479248]
[-4.66330910 206.97364807]
[10.06037903 201.18370056]
[19.55203819 189.56867981]
[28.94631958 177.87477112]
[38.24256897 166.10278320]
[47.53881454 154.33079529]
[56.83506393 142.55880737]
[66.13130951 130.78681946]
[75.42755890 119.01482391]
[65.76725006 98.53508759]
[72.44265747 74.62918091]
[94.91798401 59.66742325]
[123.88138580 63.22935104]
[113.81961060 52.10456848]
[103.75784302 40.97978973]
[93.69606781 29.85500717]
[78.70073700 24.81014252]
[75.90186310 10.18087196]
[65.84009552 -0.94390953]
[50.84476471 -5.98877335]
[48.04589081 -20.61804390]
[37.98411942 -31.74282646]
[27.82974815 -42.78314972]
[17.58349037 -53.73825073]
[7.33723021 -64.69334412]
[-8.22435474 -65.38241577]
[-18.45945930 -76.63840485]
[-17.70663452 -91.46974945]
[-27.95289421 -102.42485046]
[-38.19915390 -113.37995148]
[-53.58055115 -111.33245087]
[-67.21179962 -118.74654388]
[-73.85140228 -132.77136230]
[-70.94629669 -148.01405334]
[-59.61355591 -158.61352539]
[-44.21085358 -160.49403381]
[-30.66083717 -152.93251038]
[-24.17376900 -138.83650208]
[-27.24405670 -123.62620544]
[-16.99779701 -112.67111206]
[-6.75153732 -101.71601105]
[8.09697247 -101.47653198]
[18.64419556 -90.51246643]
[18.29232788 -74.93960571]
[28.53858757 -63.98450851]
[38.78484726 -53.02941132]
[45.66379166 -50.28643799]
[49.10889816 -41.80459595]
[59.17066956 -30.67981529]
[73.44631195 -26.43066978]
[76.96487427 -11.00568008]
[87.02664948 0.11910113]
[101.30229187 4.36824608]
[104.82085419 19.79323578]
[114.88262177 30.91801834]
[124.94438934 42.04280090]
[135.00616455 53.16757965]
[149.99307251 52.54111481]
[159.09132385 40.61542892]
[168.18955994 28.68974304]
[177.28781128 16.76405716]
[186.38604736 4.83837223]
[189.11128235 -3.90139389]
[195.73730469 -7.20888567]
[205.03355408 -18.98087692]
[214.32980347 -30.75286674]
[223.62605286 -42.52485657]
[232.92230225 -54.29684830]
[235.79319763 -62.98985672]
[242.47357178 -66.18616486]
[241.08233643 -81.70074463]
[250.87368774 -93.34480286]
[265.67303467 -94.57552338]
[275.16470337 -106.19052887]
[284.65634155 -117.80554199]
[286.75842285 -134.06941223]
[301.99645996 -140.13029480]
[314.69485474 -129.75329590]
[311.79061890 -113.61335754]
[296.27136230 -108.31388092]
[286.77969360 -96.69887543]
[277.28805542 -85.08386230]
[279.02981567 -70.33592224]
[269.56939697 -58.42144012]
[254.08857727 -56.69450760]
[244.69429016 -45.00059891]
[235.39804077 -33.22861099]
[226.10179138 -21.45661926]
[216.80554199 -9.68462753]
[207.50929260 2.08736277]
[198.31173706 13.93661499]
[189.21348572 25.86230087]
[180.11524963 37.78798676]
[171.01699829 49.71367264]
[161.91876221 61.63935852]
[167.65901184 75.49755096]
[182.52517700 77.49685669]
[195.01106262 68.18341064]
[210.05899048 70.42276001]
[218.86099243 82.38354492]
[233.72715759 84.38285065]
[248.59330750 86.38215637]
[263.47567749 88.25717926]
[278.37316895 90.00779724]
[290.61947632 80.01762390]
[306.33438110 81.69605255]
[316.19451904 94.04729462]
[314.35003662 109.74358368]
[301.89523315 119.47258759]
[286.21932983 117.46225739]
[276.62252808 104.90528870]
[261.72503662 103.15467834]
[254.70098877 105.50123596]
[246.59400940 101.24832153]
[231.72784424 99.24901581]
[216.86167908 97.24971008]
[205.21244812 106.46006775]
[190.10755920 104.64426422]
[180.52587891 92.36301422]
[165.65971375 90.36371613]
[161.62408447 96.68540192]
[174.26734924 104.75683594]
[166.19572449 117.39997101]
[153.55285645 109.32878876]
[149.51724243 115.65048218]
[157.58847046 128.29386902]
[171.53581238 135.76261902]
[171.86242676 150.65364075]
[179.93365479 163.29702759]
[188.00489807 175.94041443]
[196.07612610 188.58380127]
[204.14736938 201.22717285]
[217.76654053 211.32443237]
[211.83404541 227.20655823]
[194.93032837 225.90252686]
[191.50398254 209.29841614]
[183.43273926 196.65502930]
[175.36151123 184.01164246]
[167.29026794 171.36825562]
[159.21903992 158.72488403]
[145.84901428 152.16046143]
[144.94508362 136.36509705]
[136.87385559 123.72171783]
[110.61242676 135.92300415]
[87.19955444 128.31106567]
[77.90330505 140.08306885]
[68.60705566 151.85505676]
[59.31080627 163.62704468]
[50.01455688 175.39903259]
[40.71831131 187.17102051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 40]
[2 39]
[4 37]
[5 36]
[7 34]
[8 33]
[9 32]
[10 31]
[11 30]
[12 29]
[13 28]
[15 27]
[16 26]
[17 25]
[18 24]
[41 187]
[42 186]
[43 185]
[44 184]
[45 183]
[46 182]
[50 94]
[51 93]
[52 92]
[53 91]
[55 89]
[56 88]
[58 86]
[59 85]
[60 83]
[61 82]
[62 81]
[65 78]
[66 77]
[67 76]
[95 132]
[96 131]
[97 130]
[98 129]
[99 128]
[101 127]
[102 126]
[103 125]
[104 124]
[105 123]
[107 122]
[110 119]
[111 118]
[112 117]
[133 157]
[134 156]
[137 153]
[138 152]
[139 151]
[140 149]
[141 148]
[162 180]
[163 179]
[165 177]
[166 176]
[167 175]
[168 174]
[169 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
