%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGCCUCCGGGGGCGGGGCCUCCUUCGGUUGGCGGCCUCGGGCUUCGGGAGUCCUCCAAGAGGCCAGGUGAGGCCGUCCCGUGAUGCCCCGCGCCCCGGCCGCUCUGGCCUGCAACGUGUCUCUGGGGCGGAGGCAGCGGCAGUGGAGUUCGCUGCGCGCUGUUGGGGGCCACCUGUCUUUUCGCUUGUGUCCCUCUUUCUAGUGUCGCGCUCGAGUCCCGACGGGCCGCUCCAAGCCUCGAC\
) } def
/len { sequence length } bind def

/coor [
[-258.56872559 238.29258728]
[-273.31021118 241.06552124]
[-285.44219971 251.22058105]
[-299.38043213 245.96942139]
[-314.12191772 248.74234009]
[-323.04916382 261.50720215]
[-338.03860474 264.10934448]
[-350.15295410 255.51991272]
[-364.89440918 258.29284668]
[-379.63589478 261.06576538]
[-394.37734985 263.83868408]
[-409.11880493 266.61160278]
[-423.86029053 269.38452148]
[-438.58367920 272.25192261]
[-453.28836060 275.21362305]
[-467.99307251 278.17535400]
[-482.69778442 281.13705444]
[-497.40246582 284.09878540]
[-512.10717773 287.06048584]
[-526.81188965 290.02221680]
[-538.81268311 300.33200073]
[-552.81707764 295.26000977]
[-567.52178955 298.22171021]
[-572.99304199 307.58953857]
[-582.51470947 312.31390381]
[-592.84844971 311.05673218]
[-600.62475586 304.47042847]
[-615.40057373 307.05407715]
[-630.17639160 309.63775635]
[-635.45452881 313.55862427]
[-641.07788086 314.15332031]
[-645.36383057 312.09317017]
[-660.20104980 314.29708862]
[-675.03826904 316.50100708]
[-689.87548828 318.70495605]
[-704.71270752 320.90887451]
[-719.54986572 323.11279297]
[-734.38708496 325.31674194]
[-749.22430420 327.52066040]
[-764.06152344 329.72460938]
[-778.89874268 331.92852783]
[-793.69079590 334.41741943]
[-808.43225098 337.19033813]
[-823.17370605 339.96325684]
[-837.91522217 342.73617554]
[-852.65667725 345.50909424]
[-867.39813232 348.28204346]
[-881.10040283 360.59918213]
[-897.41845703 354.11651611]
[-912.12316895 357.07821655]
[-926.82788086 360.03994751]
[-938.76690674 371.28231812]
[-954.39263916 366.30548096]
[-957.63061523 350.22915649]
[-945.14990234 339.59133911]
[-929.78961182 345.33523560]
[-915.08489990 342.37353516]
[-900.38018799 339.41180420]
[-893.43640137 329.52404785]
[-881.22686768 326.92605591]
[-870.17108154 333.54055786]
[-855.42956543 330.76763916]
[-840.68811035 327.99472046]
[-825.94665527 325.22180176]
[-811.20520020 322.44888306]
[-796.46374512 319.67593384]
[-794.18969727 317.00909424]
[-790.52056885 315.30087280]
[-785.91607666 315.19088745]
[-781.10266113 317.09130859]
[-766.26544189 314.88739014]
[-751.42822266 312.68347168]
[-736.59100342 310.47952271]
[-721.75384521 308.27560425]
[-706.91662598 306.07165527]
[-692.07940674 303.86773682]
[-677.24218750 301.66381836]
[-662.40496826 299.45986938]
[-647.56781006 297.25595093]
[-632.76007080 294.86193848]
[-617.98425293 292.27828979]
[-603.20843506 289.69461060]
[-589.29968262 276.24340820]
[-570.48352051 283.51702881]
[-555.77880859 280.55529785]
[-544.82977295 270.45733643]
[-529.77362061 275.31750488]
[-515.06890869 272.35580444]
[-500.36419678 269.39407349]
[-485.65948486 266.43237305]
[-470.95480347 263.47064209]
[-456.25009155 260.50894165]
[-441.54537964 257.54721069]
[-435.62228394 253.15542603]
[-426.63320923 254.64306641]
[-411.89175415 251.87013245]
[-397.15026855 249.09721375]
[-382.40881348 246.32429504]
[-367.66732788 243.55136108]
[-352.92587280 240.77844238]
[-344.76049805 228.37431335]
[-329.85006714 225.35218811]
[-316.89483643 234.00086975]
[-302.15335083 231.22795105]
[-291.07577515 221.27122498]
[-276.08312988 226.32405090]
[-261.34164429 223.55113220]
[-224.20588684 218.52200317]
[-210.33851624 212.80397034]
[-196.47113037 207.08593750]
[-182.60375977 201.36790466]
[-168.73638916 195.64988708]
[-154.86900330 189.93185425]
[-151.81991577 180.20800781]
[-143.75997925 173.61975098]
[-133.18774414 172.52024841]
[-123.55506897 177.51048279]
[-109.54562378 172.14993286]
[-100.42390442 160.37522888]
[-84.76998138 162.66981506]
[-75.64826202 150.89511108]
[-59.99433136 153.18969727]
[-45.98488998 147.82914734]
[-31.97544670 142.46859741]
[-22.85372734 130.69389343]
[-7.19979906 132.98847961]
[6.80964327 127.62792206]
[15.93136215 115.85322571]
[31.58529091 118.14780426]
[45.59473419 112.78725433]
[59.60417557 107.42669678]
[73.61361694 102.06614685]
[82.66140747 75.26567078]
[114.03206635 69.09078979]
[123.60823822 57.54536057]
[133.18441772 45.99993515]
[142.76058960 34.45450592]
[152.33676147 22.90907669]
[161.91293335 11.36364746]
[171.48910522 -0.18178165]
[180.99105835 -11.78836918]
[190.41839600 -23.45563889]
[199.84574890 -35.12290955]
[209.27308655 -46.79018021]
[218.70043945 -58.45744705]
[228.12777710 -70.12471771]
[227.87042236 -86.16571045]
[240.34245300 -96.25669861]
[255.97637939 -92.65675354]
[262.77920532 -78.12743378]
[255.53237915 -63.81439209]
[239.79504395 -60.69737625]
[230.36770630 -49.03010559]
[220.94035339 -37.36283493]
[211.51301575 -25.69556618]
[202.08566284 -14.02829552]
[192.65832520 -2.36102557]
[190.90309143 4.80068302]
[183.03453064 9.39439011]
[173.45835876 20.93981934]
[163.88218689 32.48524857]
[154.30601501 44.03067780]
[144.72984314 55.57610703]
[135.15367126 67.12153625]
[125.57749939 78.66696167]
[132.34448242 92.05382538]
[147.31950378 91.18875885]
[162.29454041 90.32369995]
[177.26957703 89.45864105]
[192.24461365 88.59358215]
[205.57560730 80.07329559]
[218.72790527 87.06372070]
[233.70294189 86.19866180]
[248.67797852 85.33360291]
[259.16427612 73.81512451]
[274.36340332 73.15115356]
[285.27990723 83.21922302]
[300.25494385 82.35416412]
[310.57870483 70.38773346]
[326.34616089 69.30952454]
[338.20278931 79.75922394]
[339.11422729 95.53720856]
[328.53976440 107.28267670]
[312.75302124 108.02725983]
[301.11999512 97.32920074]
[286.14495850 98.19425964]
[276.46041870 109.45238495]
[261.28591919 110.54300690]
[249.54304504 100.30863953]
[234.56800842 101.17369843]
[219.59297180 102.03875732]
[207.33309937 110.49716949]
[193.10968018 103.56861877]
[178.13464355 104.43367767]
[163.15960693 105.29873657]
[148.18457031 106.16379547]
[133.20953369 107.02885437]
[130.08332825 114.03788757]
[125.54262543 120.01377869]
[119.88808441 124.68740845]
[113.46720886 127.87084961]
[106.65352631 129.46429443]
[99.82518005 129.45785522]
[93.34396362 127.92837524]
[87.53622437 125.03139496]
[82.67639160 120.98920441]
[78.97416687 116.07559204]
[64.96472931 121.43614197]
[50.95528412 126.79669189]
[36.94584274 132.15724182]
[26.82207489 144.31536865]
[12.17019558 141.63735962]
[-1.83924699 146.99790955]
[-11.96301460 159.15603638]
[-26.61489487 156.47802734]
[-40.62433624 161.83859253]
[-54.63377762 167.19914246]
[-64.75754547 179.35725403]
[-79.40942383 176.67926025]
[-89.53319550 188.83737183]
[-104.18507385 186.15937805]
[-118.19451904 191.51992798]
[-130.20494080 207.72804260]
[-149.15098572 203.79922485]
[-163.01835632 209.51725769]
[-176.88572693 215.23529053]
[-190.75311279 220.95332336]
[-204.62048340 226.67135620]
[-218.48785400 232.38938904]
[-224.99610901 245.90391541]
[-220.82048035 260.31100464]
[-216.64485168 274.71807861]
[-206.42828369 288.24798584]
[-216.60119629 301.81072998]
[-232.45005798 295.78991699]
[-231.05194092 278.89370728]
[-235.22756958 264.48663330]
[-239.40319824 250.07954407]
[-236.66650391 264.82778931]
[-243.53027344 278.16528320]
[-257.12210083 284.51049805]
[-271.75405884 281.20809937]
[-281.30288696 269.64004517]
[-281.77258301 254.64739990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 107]
[2 106]
[4 104]
[5 103]
[8 100]
[9 99]
[10 98]
[11 97]
[12 96]
[13 95]
[14 93]
[15 92]
[16 91]
[17 90]
[18 89]
[19 88]
[20 87]
[22 85]
[23 84]
[27 82]
[28 81]
[29 80]
[32 79]
[33 78]
[34 77]
[35 76]
[36 75]
[37 74]
[38 73]
[39 72]
[40 71]
[41 70]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[49 58]
[50 57]
[51 56]
[108 229]
[109 228]
[110 227]
[111 226]
[112 225]
[113 224]
[117 222]
[118 221]
[120 219]
[122 217]
[123 216]
[124 215]
[126 213]
[127 212]
[129 210]
[130 209]
[131 208]
[132 207]
[134 165]
[135 164]
[136 163]
[137 162]
[138 161]
[139 160]
[140 159]
[141 157]
[142 156]
[143 155]
[144 154]
[145 153]
[146 152]
[166 197]
[167 196]
[168 195]
[169 194]
[170 193]
[172 191]
[173 190]
[174 189]
[177 186]
[178 185]
[230 238]
[231 237]
[232 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
