%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGAUUCCAGUAUGGCGUAUAAAUAAAGGCGAGGAGAAGGCGGUGGUCCGCCAUUUCGUGGACGCCGGGUGAGUGAGAGAGUUGGUUGGUGUUGGGCCGGAGGAAAGCGGGAAGACUCAUCGGAGCGUGUGGAUUUGAGCCGCCGCAUUUUUUAACCCUAGAUCUCGAA\
) } def
/len { sequence length } bind def

/coor [
[-24.47506905 488.43936157]
[-30.08852386 502.34939575]
[-35.70197678 516.25946045]
[-41.31542969 530.16949463]
[-39.30479431 545.86236572]
[-51.24280167 554.76934814]
[-56.85625458 568.67938232]
[-50.44523239 583.12493896]
[-56.20439148 597.84252930]
[-70.71692657 604.10046387]
[-85.37281036 598.18603516]
[-91.47696686 583.60809326]
[-85.40790558 569.01556396]
[-70.76628876 563.06591797]
[-65.15283966 549.15588379]
[-67.56498718 534.45788574]
[-55.22546768 524.55603027]
[-49.61201477 510.64596558]
[-43.99856186 496.73593140]
[-38.38510513 482.82589722]
[-51.52928543 472.29800415]
[-60.81371689 458.22647095]
[-65.33142090 441.96603394]
[-64.63493347 425.08618164]
[-58.78065109 409.21966553]
[-48.32439041 395.90463257]
[-34.26866531 386.43545532]
[-17.96656418 381.73693848]
[-0.99149507 382.27395630]
[3.85171103 368.07736206]
[8.69491673 353.88076782]
[-0.01965775 341.83111572]
[0.03274630 326.78247070]
[9.04160976 314.50674438]
[23.72105598 309.83554077]
[28.56426239 295.63894653]
[33.40747070 281.44235229]
[38.25067520 267.24575806]
[43.09387970 253.04916382]
[47.93708801 238.85256958]
[44.72358704 224.30874634]
[56.50227737 213.74594116]
[61.34548569 199.54933167]
[66.18869019 185.35273743]
[71.03189850 171.15614319]
[75.87510681 156.95954895]
[80.71830750 142.76295471]
[85.56151581 128.56636047]
[90.40472412 114.36975861]
[84.91853333 100.40903473]
[71.70589447 93.30789948]
[58.49325180 86.20676422]
[45.28061295 79.10562897]
[30.22052574 83.89826202]
[16.22110939 76.56397247]
[11.58796597 61.45405579]
[19.06986046 47.53296280]
[34.22791290 43.05983353]
[48.06912613 50.68848801]
[52.38174820 65.89299011]
[65.59439087 72.99412537]
[78.80702972 80.09526062]
[92.01966858 87.19639587]
[106.17144775 82.22374725]
[112.03801727 68.41854858]
[117.90458679 54.61335754]
[123.77115631 40.80816650]
[129.51141357 26.94997215]
[127.50077820 11.25704670]
[139.43878174 2.35012293]
[145.05223083 -11.55991459]
[150.66567993 -25.46995163]
[156.27914429 -39.37998962]
[161.89259338 -53.29002762]
[167.50604248 -67.20006561]
[173.11950684 -81.11009979]
[162.33810425 -91.78891754]
[156.48234558 -105.74430847]
[156.41583252 -120.83766174]
[162.11756897 -134.76884460]
[172.68988037 -145.42675781]
[186.49960327 -151.20922852]
[201.43032837 -151.26382446]
[207.04377747 -165.17385864]
[212.65722656 -179.08389282]
[203.80899048 -197.08412170]
[210.88638306 -215.52641296]
[228.94119263 -222.75988770]
[233.78440857 -236.95649719]
[238.62760925 -251.15309143]
[243.47080994 -265.34967041]
[248.31402588 -279.54629517]
[242.55929565 -294.52166748]
[250.80345154 -308.28442383]
[266.72229004 -310.27691650]
[278.10424805 -298.97070312]
[276.21804810 -283.03890991]
[262.51062012 -274.70306396]
[257.66741943 -260.50646973]
[252.82420349 -246.30987549]
[247.98100281 -232.11328125]
[243.13778687 -217.91668701]
[250.01687622 -210.21264648]
[253.08273315 -200.26510620]
[251.71292114 -189.86468506]
[246.08982849 -180.91308594]
[237.17973328 -175.07536316]
[226.56727600 -173.47044373]
[220.95381165 -159.56040955]
[215.34036255 -145.65037537]
[226.05114746 -135.24803162]
[231.97933960 -121.50024414]
[232.19300842 -106.48960876]
[226.62844849 -92.50307465]
[216.10466003 -81.68347931]
[202.20300293 -75.70127106]
[187.02954102 -75.49665070]
[181.41609192 -61.58660889]
[175.80262756 -47.67657471]
[170.18917847 -33.76653671]
[164.57572937 -19.85649872]
[158.96226501 -5.94646120]
[153.34881592 7.96357632]
[155.76095581 22.66156387]
[143.42144775 32.56342697]
[143.83575439 39.97032928]
[137.57635498 46.67473602]
[131.70977783 60.47993088]
[125.84320831 74.28511810]
[119.97663879 88.09031677]
[134.25605774 83.49703217]
[149.07167053 85.84171295]
[161.23497009 94.61975098]
[168.12828064 107.94200134]
[168.26805115 122.94135284]
[161.62420654 136.38973999]
[149.62658691 145.39292908]
[134.85723877 148.01329041]
[120.49469757 143.68688965]
[109.62998199 133.34484863]
[104.60131836 119.21296692]
[99.75811005 133.40956116]
[94.91490936 147.60615540]
[90.07170105 161.80274963]
[85.22849274 175.99935913]
[80.38528442 190.19595337]
[75.54208374 204.39254761]
[70.69887543 218.58914185]
[73.56595612 234.14839172]
[62.13368225 243.69577026]
[57.29047775 257.89236450]
[52.44727325 272.08895874]
[47.60406494 286.28555298]
[42.76086044 300.48214722]
[37.91765213 314.67874146]
[46.68147659 327.34768677]
[46.30934906 342.56985474]
[37.15349960 354.51281738]
[22.89151382 358.72396851]
[18.04830742 372.92056274]
[13.20510197 387.11715698]
[24.21126556 394.50775146]
[33.10571289 404.32449341]
[39.36821747 415.98568726]
[42.63431168 428.80200195]
[42.71648026 442.01724243]
[39.61491394 454.85284424]
[33.51722717 466.55389404]
[24.78709030 476.43344116]
[13.94255733 483.91281128]
[1.62532353 488.55557251]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[6 15]
[7 14]
[29 161]
[30 160]
[31 159]
[35 155]
[36 154]
[37 153]
[38 152]
[39 151]
[40 150]
[42 148]
[43 147]
[44 146]
[45 145]
[46 144]
[47 143]
[48 142]
[49 141]
[50 63]
[51 62]
[52 61]
[53 60]
[64 130]
[65 129]
[66 128]
[67 127]
[68 125]
[70 123]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
[76 117]
[83 110]
[84 109]
[85 108]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
