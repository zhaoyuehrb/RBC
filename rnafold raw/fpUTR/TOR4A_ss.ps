%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCCUGCUUGGAGUCUCAGGCCCCAGCGUCUGGCACAGGCAGGGGCCUGCGGAGCUGAGGGCAGUGGACCAGCUGCAGGGAGGGCGACCUGUAUGCGGAGCGCCGUUCCUGCGAC\
) } def
/len { sequence length } bind def

/coor [
[141.85328674 149.18489075]
[134.18119812 136.10719299]
[132.94296265 120.93392944]
[118.97291565 115.47151947]
[105.00286865 110.00910950]
[90.96134949 104.73314667]
[76.85084534 99.64456940]
[62.74034500 94.55598450]
[48.62984085 89.46739960]
[34.51933670 84.37881470]
[20.40883255 79.29023743]
[6.24004364 85.76195526]
[-7.99752522 80.40039825]
[-14.08000374 66.85273743]
[-28.19050789 61.76415634]
[-42.36749649 56.86385727]
[-56.60846329 52.15270615]
[-70.84942627 47.44155502]
[-85.15184021 42.92038727]
[-99.51316833 38.59001160]
[-113.87450409 34.25963211]
[-128.23583984 29.92925072]
[-142.59716797 25.59887123]
[-156.95849609 21.26849365]
[-171.31982422 16.93811417]
[-185.68115234 12.60773468]
[-195.09649658 18.36928558]
[-205.90478516 17.93287659]
[-214.46726990 11.69132996]
[-218.03788757 1.95041525]
[-232.14839172 -3.13816786]
[-246.25889587 -8.22675037]
[-260.36938477 -13.31533337]
[-274.47988892 -18.40391731]
[-291.43093872 -18.08937263]
[-296.42568970 -34.29087448]
[-282.24005127 -43.57546234]
[-269.39132690 -32.51441956]
[-255.28080750 -27.42583847]
[-241.17030334 -22.33725548]
[-227.05979919 -17.24867249]
[-212.94929504 -12.16008854]
[-194.32522583 -17.07004356]
[-181.35076904 -1.75359607]
[-166.98944092 2.57678318]
[-152.62811279 6.90716219]
[-138.26678467 11.23754120]
[-123.90545654 15.56792068]
[-109.54412079 19.89830017]
[-95.18279266 24.22867966]
[-80.82146454 28.55905914]
[-73.41436768 27.46339035]
[-66.13827515 33.20059204]
[-51.89731216 37.91173935]
[-37.65634918 42.62289047]
[-30.22270966 41.72479248]
[-23.10192490 47.65365219]
[-8.99142075 52.74223709]
[4.33779192 46.19489670]
[18.72033882 51.15443039]
[25.49741554 65.17973328]
[39.60792160 70.26831055]
[53.71842575 75.35689545]
[67.82892609 80.44548035]
[81.93943024 85.53406525]
[96.04993439 90.62264252]
[104.21059418 90.18225861]
[110.46527863 96.03907013]
[124.43531799 101.50148010]
[138.40536499 106.96389008]
[149.60740662 96.65486908]
[164.11540222 92.24979401]
[179.03625488 94.57112885]
[191.41870117 103.10552979]
[198.83717346 116.11613464]
[199.86676025 130.99583435]
[213.83680725 136.45823669]
[227.80685425 141.92065430]
[241.77688599 147.38305664]
[255.74693298 152.84545898]
[269.71697998 158.30787659]
[283.68701172 163.77027893]
[297.65707397 169.23269653]
[313.32727051 167.05213928]
[322.36303711 178.89294434]
[336.33306885 184.35534668]
[350.30310059 189.81774902]
[364.27316284 195.28016663]
[378.60919189 189.18791199]
[392.69900513 194.92658997]
[398.41867065 208.63136292]
[412.38873291 214.09376526]
[426.35876465 219.55618286]
[442.48147583 216.55786133]
[452.93237305 229.19554138]
[446.96044922 244.46865845]
[430.70910645 246.66554260]
[420.89636230 233.52622986]
[406.92630005 228.06381226]
[392.95626831 222.60140991]
[379.45748901 228.79159546]
[365.21206665 223.45094299]
[358.81076050 209.25021362]
[344.84069824 203.78779602]
[330.87066650 198.32539368]
[316.90063477 192.86297607]
[302.22964478 195.43423462]
[292.19464111 183.20272827]
[278.22460938 177.74032593]
[264.25457764 172.27790833]
[250.28453064 166.81550598]
[236.31448364 161.35310364]
[222.34443665 155.89068604]
[208.37438965 150.42828369]
[194.40435791 144.96586609]
[183.55476379 155.20069885]
[169.27861023 159.72853088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 70]
[4 69]
[5 68]
[6 66]
[7 65]
[8 64]
[9 63]
[10 62]
[11 61]
[14 58]
[15 57]
[16 55]
[17 54]
[18 53]
[19 51]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[30 42]
[31 41]
[32 40]
[33 39]
[34 38]
[76 115]
[77 114]
[78 113]
[79 112]
[80 111]
[81 110]
[82 109]
[83 108]
[85 106]
[86 105]
[87 104]
[88 103]
[91 100]
[92 99]
[93 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
