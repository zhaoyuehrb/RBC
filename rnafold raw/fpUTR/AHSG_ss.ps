%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUUGCUUUUCCAGGGCUGAUGUUUGCAGGGUGUUUUUUUUUUUCUUUUGAACCAAAGCAGAAAUCAUCCUGUAUCCUUAUGCAAUUCUUCCGGCAGGCUCCAACAGAUAAAUAAAGCCCACCACCCUCCAUGGGUCUACCUUUCCCAGCAGAGCACCUGGGUUGGUCCCGAAGCCUCCAACCACCUGCACGCCUGCCAGGGCCUCUCUGGGGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[119.71079254 209.91320801]
[124.34403992 224.34611511]
[123.75843048 239.49314880]
[118.02466583 253.52525330]
[107.83512878 264.74795532]
[94.42025757 271.80609131]
[79.39997101 273.84732056]
[64.58802795 270.62518311]
[51.77304840 262.52874756]
[42.50250626 250.53572083]
[37.89586258 236.09429932]
[38.50939178 220.94836426]
[44.26900482 206.92684937]
[54.47920227 195.72294617]
[67.90705872 188.68954468]
[82.93108368 186.67599487]
[86.11956024 172.01879883]
[89.30804443 157.36158752]
[92.49652100 142.70439148]
[95.68500519 128.04718018]
[82.87342834 124.53068542]
[72.46011353 115.20479584]
[67.03836823 101.57046509]
[57.39337921 113.80206299]
[42.27931595 115.53982544]
[30.67780304 106.26941681]
[15.80151176 108.19190979]
[0.92522126 110.11440277]
[-13.95106888 112.03689575]
[-28.82736015 113.95938873]
[-43.70365143 115.88188171]
[-58.57994080 117.80437469]
[-73.45623016 119.72686768]
[-88.33251953 121.64936066]
[-103.19470978 123.67801666]
[-118.04203033 125.81274414]
[-132.88934326 127.94746399]
[-147.73667908 130.08218384]
[-162.58399963 132.21690369]
[-177.41569519 134.45758057]
[-192.23101807 136.80410767]
[-207.04634094 139.15061951]
[-221.86166382 141.49713135]
[-236.64198303 144.05497742]
[-251.38424683 146.82359314]
[-266.12652588 149.59222412]
[-278.21200562 160.67706299]
[-293.77111816 155.49572754]
[-296.79797363 139.37834167]
[-284.17883301 128.90509033]
[-268.89517212 134.84994507]
[-254.15287781 132.08132935]
[-239.41059875 129.31269836]
[-236.02638245 125.95137787]
[-230.49684143 124.67617035]
[-224.20819092 126.68181610]
[-209.39286804 124.33529663]
[-194.57752991 121.98877716]
[-179.76220703 119.64226532]
[-173.65156555 115.49404144]
[-164.71871948 117.36959076]
[-149.87139893 115.23486328]
[-135.02407837 113.10014343]
[-120.17675018 110.96542358]
[-105.32942963 108.83069611]
[-99.16017151 104.77015686]
[-90.25501251 106.77307129]
[-75.37872314 104.85057831]
[-60.50243378 102.92808533]
[-45.62614441 101.00559235]
[-30.74985313 99.08309937]
[-15.87356186 97.16060638]
[-0.99727160 95.23811340]
[13.87901878 93.31562042]
[28.75531006 91.39312744]
[37.61897278 79.47796631]
[52.67826080 77.31636810]
[65.11587524 86.69417572]
[51.13901520 81.24925232]
[37.16214752 75.80432129]
[22.16807365 76.22592926]
[8.30086994 70.50747681]
[-2.03766060 59.63941574]
[-7.05688095 45.50408936]
[-5.88745975 30.54974556]
[1.26805782 17.36647797]
[13.17033482 8.23763275]
[27.75789261 4.74432993]
[42.50416183 7.49161148]
[54.85508347 16.00364685]
[62.67147446 28.80614662]
[64.59974670 43.67901611]
[72.16410828 56.63203049]
[79.72846222 69.58504486]
[79.30011749 54.59115982]
[68.09209442 43.77368164]
[67.87128448 28.56164932]
[78.25317383 17.94317245]
[77.82482910 2.94928932]
[77.39649200 -12.04459381]
[76.96814728 -27.03847694]
[62.65472412 -32.08727646]
[51.13423920 -41.96871567]
[43.96474075 -55.34640884]
[42.11584473 -70.41114044]
[45.83760071 -85.12551880]
[54.62667084 -97.49954987]
[67.29441071 -105.85974884]
[82.12760162 -109.07546997]
[97.12018585 -106.71179962]
[110.24452972 -99.08842468]
[119.72568512 -87.23632812]
[124.28140259 -72.75842285]
[123.29554749 -57.61270905]
[116.90145874 -43.84753418]
[105.96388245 -33.32452011]
[91.96202850 -27.46681786]
[92.39037323 -12.47293472]
[92.81871033 2.52094865]
[93.24705505 17.51483154]
[104.21820068 27.52330208]
[104.86619568 42.72312927]
[94.29399872 54.16281891]
[94.72234344 69.15670013]
[109.11473846 73.38269043]
[117.58138275 61.00061417]
[126.04803467 48.61853409]
[134.51467896 36.23645401]
[132.97862244 20.26710892]
[144.60597229 9.21342087]
[160.47724915 11.55483723]
[168.41735840 25.49522209]
[162.33531189 40.34070587]
[146.89675903 44.70310211]
[138.43011475 57.08518219]
[129.96347046 69.46726227]
[121.49681854 81.84934235]
[123.55837250 89.06044006]
[132.26324463 76.84465790]
[147.24130249 76.03380585]
[157.21406555 87.23845673]
[154.67199707 102.02148438]
[141.52929688 109.25123596]
[127.68149567 103.48264313]
[129.74305725 110.69374084]
[143.47512817 116.72949219]
[157.20718384 122.76525116]
[170.93925476 128.80099487]
[184.67132568 134.83676147]
[198.40339661 140.87251282]
[207.51211548 141.45960999]
[212.28749084 147.09375000]
[225.93196106 153.32496643]
[239.57644653 159.55619812]
[253.22093201 165.78741455]
[267.87374878 160.50225830]
[281.62240601 167.01597595]
[286.57070923 181.01776123]
[300.21517944 187.24897766]
[313.85968018 193.48020935]
[327.50415039 199.71142578]
[362.71154785 171.15985107]
[377.32174683 174.55731201]
[391.93191528 177.95475769]
[406.54208374 181.35221863]
[421.15228271 184.74966431]
[435.76245117 188.14710999]
[445.71160889 176.51643372]
[459.93048096 170.85234070]
[475.15170288 172.45643616]
[487.87753296 180.96006775]
[495.18368530 194.40919495]
[495.39120483 209.71330261]
[488.45248413 223.35560608]
[475.96191406 232.20121765]
[460.78979492 234.21746826]
[446.42254639 228.94104004]
[436.16165161 217.58442688]
[432.36499023 202.75729370]
[417.75482178 199.35984802]
[403.14465332 195.96238708]
[388.53445435 192.56494141]
[373.92428589 189.16749573]
[359.31411743 185.77003479]
[355.57955933 192.27413940]
[368.58764648 199.74340820]
[361.11816406 212.75135803]
[348.11050415 205.28233337]
[344.37597656 211.78642273]
[354.67538452 222.69158936]
[364.97476196 233.59674072]
[380.83383179 237.77076721]
[384.88690186 253.66116333]
[372.96453857 264.92123413]
[357.33145142 259.96762085]
[354.06961060 243.89613342]
[343.77020264 232.99098206]
[333.47082520 222.08581543]
[321.27291870 213.35591125]
[307.62844849 207.12467957]
[293.98397827 200.89346313]
[280.33947754 194.66223145]
[266.51718140 200.09178162]
[252.59098816 193.96679688]
[246.98970032 179.43190002]
[233.34521484 173.20066833]
[219.70074463 166.96945190]
[206.05625916 160.73822021]
[192.36764526 154.60458374]
[178.63557434 148.56881714]
[164.90350342 142.53306580]
[151.17143250 136.49731445]
[137.43937683 130.46156311]
[123.70730591 124.42581177]
[110.34220123 131.23567200]
[107.15372467 145.89286804]
[103.96524811 160.55007935]
[100.77676392 175.20727539]
[97.58828735 189.86447144]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 219]
[17 218]
[18 217]
[19 216]
[20 215]
[23 78]
[26 75]
[27 74]
[28 73]
[29 72]
[30 71]
[31 70]
[32 69]
[33 68]
[34 67]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[40 59]
[41 58]
[42 57]
[43 56]
[44 53]
[45 52]
[46 51]
[94 124]
[95 123]
[98 120]
[99 119]
[100 118]
[101 117]
[125 137]
[126 136]
[127 135]
[128 134]
[145 214]
[146 213]
[147 212]
[148 211]
[149 210]
[150 209]
[152 208]
[153 207]
[154 206]
[155 205]
[158 202]
[159 201]
[160 200]
[161 199]
[162 184]
[163 183]
[164 182]
[165 181]
[166 180]
[167 179]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
