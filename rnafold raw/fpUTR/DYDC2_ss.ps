%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUCGCGCCUCAGGAGCCAGUGUAGGCGCCGCAAAGCGGAAGGGGCGCGCGGAUAGAGCUCCCAGUGUGCCAAGCGUGGGCGGUAUACAGUAAACAAAGACAACCCCUAUUCUUAUCACCUUGCCUACUGAGUGCAAGUCCAGGAACUGUGUAAGCAGACCCUCAGAGGAGCUCUGGGAAACACUGAAAAAUAGCCUCUCCCCCCAUUGGCUGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[11.50627518 295.20581055]
[-0.33427858 304.41458130]
[-12.17483234 313.62332153]
[-24.01538467 322.83209229]
[-35.85593796 332.04086304]
[-47.69649124 341.24963379]
[-59.06441116 351.03585815]
[-69.93156433 361.37533569]
[-80.79871368 371.71484375]
[-91.66587067 382.05432129]
[-102.53302002 392.39379883]
[-113.40016937 402.73330688]
[-124.26731873 413.07278442]
[-118.87134552 423.23535156]
[-118.06288910 435.70986938]
[-122.76872253 448.36138916]
[-132.91229248 458.72076416]
[-147.31423950 464.45321655]
[-156.60693359 476.22802734]
[-165.89962769 488.00280762]
[-163.80171204 503.66723633]
[-173.46095276 516.17620850]
[-189.14668274 518.10839844]
[-201.55284119 508.31744385]
[-203.31907654 492.61215210]
[-193.39750671 480.31021118]
[-177.67442322 478.71014404]
[-168.38172913 466.93533325]
[-159.08905029 455.16052246]
[-164.06246948 449.54669189]
[-178.98272705 432.70520020]
[-191.79179382 440.51083374]
[-204.60084534 448.31649780]
[-217.40991211 456.12213135]
[-227.78916931 469.52761841]
[-243.54403687 463.26498413]
[-241.88754272 446.39218140]
[-225.21554565 443.31304932]
[-212.40647888 435.50741577]
[-199.59742737 427.70178223]
[-186.78836060 419.89614868]
[-172.59292603 400.37683105]
[-151.87976074 394.67898560]
[-134.60681152 402.20562744]
[-123.73966217 391.86614990]
[-112.87250519 381.52667236]
[-102.00535583 371.18716431]
[-91.13820648 360.84768677]
[-80.27104950 350.50817871]
[-69.40390015 340.16870117]
[-84.40213013 339.93838501]
[-95.82157898 330.21231079]
[-98.43585205 315.44189453]
[-91.04847717 302.38711548]
[-77.04045105 297.02285767]
[-62.82289124 301.80416870]
[-54.90279770 314.54278564]
[-56.90525436 329.40905762]
[-45.06470108 320.20031738]
[-33.22414780 310.99154663]
[-21.38359451 301.78277588]
[-9.54304028 292.57403564]
[2.29751277 283.36526489]
[8.28021240 248.14752197]
[37.42577744 240.48899841]
[44.01624680 227.01437378]
[50.60671616 213.53973389]
[57.19718552 200.06510925]
[63.78765488 186.59046936]
[70.37812805 173.11584473]
[68.23473358 155.69509888]
[83.60507202 145.54821777]
[90.00333405 131.98126221]
[39.50758362 59.73856735]
[33.10932159 46.17161560]
[26.71105766 32.60466385]
[13.82647610 23.42326164]
[15.39575291 8.61155510]
[8.99748993 -4.95539808]
[2.59922695 -18.52235222]
[-3.79903626 -32.08930588]
[-10.19729996 -45.65625763]
[-16.68343735 -52.07734299]
[-16.58855247 -59.46184540]
[-22.79331589 -73.11837769]
[-28.99808121 -86.77490997]
[-44.02869034 -85.06146240]
[-58.85273361 -88.07857513]
[-72.01789856 -95.53066254]
[-82.23439789 -106.68765259]
[-88.50131989 -120.45648956]
[-90.20469666 -135.48825073]
[-87.17765045 -150.31025696]
[-79.71674347 -163.47042847]
[-68.55290985 -173.67944336]
[-54.77987671 -179.93714905]
[-39.74698639 -181.63044739]
[-24.92700005 -178.59347534]
[-11.77183437 -171.12374878]
[-1.57029760 -159.95307922]
[4.67816734 -146.17585754]
[6.36139965 -131.14183044]
[3.31449389 -116.32388306]
[-4.16404533 -103.17372131]
[-15.34154797 -92.97967529]
[-9.13678360 -79.32314301]
[-2.93201900 -65.66661072]
[3.36965394 -52.05452347]
[9.76791668 -38.48756790]
[16.16617966 -24.92061424]
[22.56444359 -11.35366154]
[28.96270752 2.21329212]
[41.38964081 10.42429352]
[40.27801132 26.20639801]
[46.67627335 39.77335358]
[53.07453918 53.34030533]
[60.55560303 53.87293243]
[56.94534683 39.31387711]
[69.67630005 31.38148689]
[81.15441132 41.03824234]
[75.51773071 54.93818665]
[82.99879456 55.47081375]
[91.25461578 42.94718170]
[99.51044464 30.42355156]
[107.76627350 17.89992142]
[116.02209473 5.37629032]
[124.18870544 -7.20570326]
[132.26567078 -19.84542465]
[132.46269226 -36.24338913]
[146.89277649 -44.03471375]
[160.71148682 -35.20434952]
[159.70332336 -18.83622169]
[144.90539551 -11.76845360]
[136.82843018 0.87126720]
[135.87614441 8.19472599]
[128.54573059 13.63211727]
[120.28990173 26.15574837]
[112.03407288 38.67937851]
[103.77825165 51.20301056]
[95.52242279 63.72663879]
[100.08460999 69.67949677]
[114.95739746 67.73010254]
[109.20897675 81.58519745]
[113.77116394 87.53805542]
[128.01042175 82.82175446]
[142.24967957 78.10546112]
[149.39271545 64.26296234]
[163.90054321 59.68280792]
[177.05322266 66.57790375]
[191.29249573 61.86160660]
[205.53175354 57.14530945]
[219.77101135 52.42901230]
[230.26461792 39.82677841]
[246.37709045 42.87965393]
[251.53330994 58.44710541]
[240.42898560 70.51467133]
[224.48730469 66.66827393]
[210.24804688 71.38456726]
[196.00878906 76.10086823]
[181.76953125 80.81716156]
[175.33338928 94.20043182]
[160.95994568 99.18627167]
[146.96598816 92.34471893]
[132.72671509 97.06101990]
[118.48746490 101.77731323]
[119.55271912 116.73944092]
[134.31652832 119.39081573]
[149.08033752 122.04219055]
[163.84416199 124.69356537]
[178.60797119 127.34494019]
[195.26644897 124.19349670]
[202.90625000 139.32855225]
[190.47758484 150.85958862]
[175.95660400 142.10874939]
[161.19277954 139.45738220]
[146.42897034 136.80599976]
[131.66516113 134.15463257]
[116.90134430 131.50325012]
[103.57028961 138.37953186]
[97.17202759 151.94647217]
[100.78786469 164.32243347]
[95.18514252 175.48825073]
[83.85276031 179.70631409]
[77.26229095 193.18093872]
[70.67182159 206.65557861]
[64.08135223 220.13020325]
[57.49087906 233.60484314]
[50.90040970 247.07946777]
[57.06093979 252.07020569]
[61.68809891 259.12536621]
[64.09696960 267.74227905]
[63.77550507 277.19543457]
[60.45527267 286.59725952]
[54.16057205 294.98126221]
[60.94191742 308.36083984]
[67.72325897 321.74041748]
[74.50460052 335.12002563]
[81.28594971 348.49960327]
[96.54478455 348.13815308]
[110.44580078 354.44088745]
[120.22894287 366.15640259]
[123.95175934 380.95852661]
[120.87508392 395.90835571]
[111.60978699 408.03753662]
[97.99550629 414.93783569]
[82.73535919 415.23916626]
[68.85926819 408.88174438]
[59.12234116 397.12780762]
[55.45784378 382.31112671]
[58.59336853 367.37353516]
[67.90635681 355.28094482]
[61.12501526 341.90136719]
[54.34366989 328.52175903]
[47.56232834 315.14218140]
[40.78098297 301.76260376]
[33.46230698 300.12341309]
[37.94190216 314.43887329]
[27.78419113 325.47613525]
[13.14677525 322.19802856]
[8.66691589 307.88259888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 63]
[2 62]
[3 61]
[4 60]
[5 59]
[6 58]
[7 50]
[8 49]
[9 48]
[10 47]
[11 46]
[12 45]
[13 44]
[18 29]
[19 28]
[20 27]
[31 41]
[32 40]
[33 39]
[34 38]
[65 188]
[66 187]
[67 186]
[68 185]
[69 184]
[70 183]
[72 180]
[73 179]
[74 116]
[75 115]
[76 114]
[78 112]
[79 111]
[80 110]
[81 109]
[82 108]
[84 107]
[85 106]
[86 105]
[122 140]
[123 139]
[124 138]
[125 137]
[126 136]
[127 134]
[128 133]
[144 165]
[145 164]
[146 163]
[149 160]
[150 159]
[151 158]
[152 157]
[166 178]
[167 177]
[168 176]
[169 175]
[170 174]
[194 215]
[195 214]
[196 213]
[197 212]
[198 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
