%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUGUGGAGCCGUGGUCGCGCUGUGUGUGUGUGUGAGUGGAGAGUGAGUGCGGGACCUGAGGCUGUGUGUGUGUGAACUGUGGCCACUGGCGGGGUCGGGGGGGGGCAGCGGCGGAGCCGCCUCGGACGAUAAGGAAAUUGAGAUUUGGAGAAGUUAAAUAACCAAGACUUCACAGGCAAAGCC\
) } def
/len { sequence length } bind def

/coor [
[85.64468384 377.01638794]
[93.06594086 363.63043213]
[105.86426544 355.23629761]
[104.34674072 340.31326294]
[102.82921600 325.39019775]
[101.31169128 310.46716309]
[99.79416656 295.54412842]
[98.27664185 280.62109375]
[96.75911713 265.69805908]
[95.24159241 250.77500916]
[86.25638580 238.89581299]
[92.55785370 224.38366699]
[83.57265472 212.50447083]
[89.87411499 197.99232483]
[88.35659027 183.06929016]
[86.83906555 168.14625549]
[85.32154083 153.22320557]
[71.53717041 147.30787659]
[59.67553711 156.48945618]
[47.81389999 165.67105103]
[35.95226669 174.85264587]
[24.09062958 184.03422546]
[25.54154968 199.39321899]
[18.43815613 213.08793640]
[5.04711580 220.74845886]
[-10.35853958 219.93032837]
[-22.86292076 210.89462280]
[-28.47592735 196.52459717]
[-25.40646553 181.40567017]
[-14.63399220 170.36224365]
[0.40403569 166.91822815]
[14.90903950 172.17259216]
[26.77067566 162.99101257]
[38.63231277 153.80941772]
[50.49394608 144.62782288]
[62.35558319 135.44624329]
[56.61622620 127.33556366]
[52.57696152 118.34815979]
[50.35956955 108.83229065]
[50.01590729 99.15015411]
[51.52713394 89.66411591]
[54.80556488 80.72313690]
[59.69911575 72.64994049]
[65.99806976 65.72936249]
[73.44392395 60.19836044]
[81.73987579 56.23792267]
[78.22588348 41.65533829]
[74.71188354 27.07275009]
[71.19789124 12.49016380]
[66.13471222 4.86052179]
[67.74989319 -2.36837220]
[64.48269653 -17.00822830]
[61.21548843 -31.64808464]
[57.94828796 -46.28794098]
[44.89036179 -54.78078079]
[41.78550339 -69.67421722]
[49.96260071 -82.07061768]
[46.69539642 -96.71047211]
[41.76180267 -104.42453766]
[43.49885178 -111.62512207]
[30.58622932 -120.33729553]
[27.73335648 -135.28105164]
[36.11865616 -147.53756714]
[33.09917831 -162.23051453]
[30.07970047 -176.92346191]
[27.06022263 -191.61642456]
[24.04074478 -206.30937195]
[13.68387413 -218.26954651]
[18.70080948 -232.29379272]
[8.34393883 -244.25396729]
[13.36087513 -258.27822876]
[3.00400329 -270.23840332]
[8.02093983 -284.26263428]
[-2.33593202 -296.22280884]
[2.68100429 -310.24707031]
[-0.33847341 -324.94003296]
[-3.35795116 -339.63296509]
[-8.16055489 -347.42926025]
[-6.30214024 -354.59948730]
[-9.07303143 -369.34133911]
[-19.22642517 -381.47473145]
[-13.97334099 -395.41223145]
[-16.74423218 -410.15408325]
[-21.41447639 -418.03039551]
[-19.43522453 -425.16818237]
[-21.95673752 -439.95474243]
[-30.57960892 -454.55209351]
[-18.93978500 -466.87890625]
[-3.87246466 -459.10638428]
[-7.17019129 -442.47625732]
[-4.64867783 -427.68969727]
[-2.00238156 -412.92498779]
[0.76850933 -398.18313599]
[10.72371006 -387.10418701]
[5.66881943 -372.11221313]
[8.43971062 -357.37036133]
[11.33499813 -342.65243530]
[14.35447598 -327.95950317]
[17.37395287 -313.26654053]
[27.51485252 -302.35729980]
[22.71388817 -287.28213501]
[32.85478592 -276.37289429]
[28.05382347 -261.29769897]
[38.19472122 -250.38845825]
[33.39376068 -235.31327820]
[43.53465652 -224.40403748]
[38.73369598 -209.32884216]
[41.75317383 -194.63589478]
[44.77265167 -179.94294739]
[47.79212952 -165.25000000]
[50.81160736 -150.55705261]
[63.35077286 -142.60061646]
[66.62226105 -127.74288940]
[58.19180298 -114.64459991]
[61.33525467 -99.97767639]
[64.60245514 -85.33782196]
[77.27421570 -77.59429932]
[80.79617310 -62.79394913]
[72.58814240 -49.55514145]
[75.85534668 -34.91528702]
[79.12255096 -20.27543068]
[82.38975525 -5.63557529]
[85.78047180 8.97616673]
[89.29447174 23.55875397]
[92.80846405 38.14133835]
[96.32246399 52.72392654]
[117.31789398 55.85657501]
[134.84272766 67.83580017]
[145.38488770 86.26090240]
[160.24816895 84.24022675]
[175.11143494 82.21955872]
[189.97471619 80.19888306]
[199.34204102 67.46983337]
[214.97888184 65.17536163]
[227.60818481 74.67674255]
[229.73721313 90.33697510]
[220.10282898 102.86511993]
[204.42097473 104.82845306]
[191.99539185 95.06215668]
[177.13211060 97.08283234]
[162.26884460 99.10350037]
[147.40556335 101.12417603]
[147.08784485 105.59337616]
[146.34974670 110.01264191]
[160.32603455 115.45905304]
[174.30232239 120.90545654]
[188.27861023 126.35186768]
[202.25489807 131.79827881]
[218.37417603 128.78149414]
[228.83952332 141.40719604]
[222.88508606 156.68714905]
[206.63629150 158.90263367]
[196.80848694 145.77456665]
[182.83219910 140.32815552]
[168.85591125 134.88174438]
[154.87962341 129.43533325]
[140.90333557 123.98892975]
[136.72048950 131.11968994]
[131.28764343 137.51281738]
[124.73644257 142.94831848]
[117.23738098 147.22990417]
[108.99545288 150.19198608]
[100.24458313 151.70568848]
[101.76210785 166.62872314]
[103.27963257 181.55177307]
[104.79715729 196.47480774]
[113.89089966 209.42140198]
[107.48088837 222.86614990]
[116.57463837 235.81274414]
[110.16462708 249.25749207]
[111.68215179 264.18054199]
[113.19967651 279.10357666]
[114.71720123 294.02661133]
[116.23472595 308.94964600]
[117.75225067 323.87268066]
[119.26977539 338.79571533]
[120.78730011 353.71878052]
[135.01336670 359.36480713]
[144.97727966 370.98284912]
[148.38941956 385.90316772]
[144.46568298 400.69717407]
[134.10772705 411.96533203]
[119.69572449 417.11828613]
[104.54145813 414.97192383]
[92.12726593 406.01947021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[6 174]
[7 173]
[8 172]
[9 171]
[10 170]
[12 168]
[14 166]
[15 165]
[16 164]
[17 163]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[46 126]
[47 125]
[48 124]
[49 123]
[51 122]
[52 121]
[53 120]
[54 119]
[57 116]
[58 115]
[60 114]
[63 111]
[64 110]
[65 109]
[66 108]
[67 107]
[69 105]
[71 103]
[73 101]
[75 99]
[76 98]
[77 97]
[79 96]
[80 95]
[82 93]
[83 92]
[85 91]
[86 90]
[129 142]
[130 141]
[131 140]
[132 139]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
