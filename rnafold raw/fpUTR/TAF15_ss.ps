%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCGCCUCAGCCCGCCGCGCCGCCCUCAGUACAGCUCCGGCCGCCGCGCCGCCUGGCUUUCGUAUUCGUUGUUCUCGGCGGGCUGUGGGGCCUCCGCGCCGCGGCCGUUAGUC\
) } def
/len { sequence length } bind def

/coor [
[125.06788635 305.50033569]
[126.00894928 290.52987671]
[132.48280334 276.99884033]
[143.54905701 266.87274170]
[157.60021973 261.62249756]
[172.59518433 262.01077271]
[186.35734558 267.98220825]
[178.97492981 254.92466736]
[165.97570801 247.65353394]
[165.91912842 231.83242798]
[158.53671265 218.77487183]
[151.15428162 205.71730042]
[143.77186584 192.65974426]
[136.38943481 179.60218811]
[129.00701904 166.54463196]
[121.62458801 153.48707581]
[114.24216461 140.42951965]
[106.85974121 127.37196350]
[99.47731781 114.31440735]
[87.53095245 107.04969788]
[87.46512604 93.06801605]
[75.19233704 88.82633972]
[69.33704376 77.68926239]
[72.58638763 65.95081329]
[65.56026459 52.69813156]
[50.27894974 52.04333496]
[37.46176147 43.88144302]
[30.49711990 30.48890305]
[31.16663361 15.50865936]
[39.19045639 2.95940208]
[32.16432953 -10.29327869]
[25.13820267 -23.54595947]
[18.11207581 -36.79864120]
[11.08594990 -50.05131912]
[3.52739072 -63.00771713]
[-4.55112886 -75.64644623]
[-12.62964821 -88.28517914]
[-20.70816803 -100.92391205]
[-38.97853088 -109.22973633]
[-39.33956146 -128.48373413]
[-48.09047699 -140.66656494]
[-56.84139633 -152.84939575]
[-65.59231567 -165.03222656]
[-81.22699738 -167.34143066]
[-90.58232880 -180.07929993]
[-88.10795593 -195.68869019]
[-75.27188873 -204.90882874]
[-59.68953323 -202.26956177]
[-50.60562515 -189.33673096]
[-53.40948105 -173.78315735]
[-44.65856552 -161.60032654]
[-35.90764618 -149.41748047]
[-27.15672684 -137.23464966]
[-16.80480194 -136.46057129]
[-8.45832348 -129.92295837]
[-5.08920860 -119.63734436]
[-8.06943607 -109.00242615]
[0.00908289 -96.36370087]
[8.08760262 -83.72496796]
[16.16612244 -71.08623505]
[19.65127754 -69.99240875]
[22.74285698 -67.07718658]
[24.55346298 -62.56312561]
[24.33863068 -57.07744598]
[31.36475754 -43.82476807]
[38.39088440 -30.57208633]
[45.41701126 -17.31940460]
[52.44313812 -4.06672430]
[67.33288574 -3.66547322]
[80.10758972 4.18709707]
[87.28398132 17.46737480]
[86.84664917 32.65636826]
[78.81294250 45.67200470]
[85.83907318 58.92468643]
[101.17100525 67.34482574]
[100.52268219 85.68559265]
[112.46904755 92.95030212]
[112.53487396 106.93198395]
[119.91729736 119.98954010]
[127.29972076 133.04708862]
[134.68214417 146.10466003]
[142.06457520 159.16221619]
[149.44699097 172.21977234]
[156.82942200 185.27732849]
[164.21183777 198.33488464]
[171.59426880 211.39244080]
[178.97669983 224.44999695]
[192.50395203 232.65510559]
[192.03248596 247.54223633]
[199.41490173 260.59979248]
[209.12570190 272.03222656]
[220.81690979 281.42987061]
[232.50810242 290.82751465]
[244.19931030 300.22518921]
[259.80282593 302.84057617]
[264.87515259 316.84487915]
[280.55770874 314.88720703]
[292.97979736 324.65795898]
[294.77157593 340.36035156]
[284.87002563 352.67840576]
[269.14956665 354.30407715]
[256.93685913 344.27285767]
[255.47749329 328.53610229]
[240.71018982 326.59289551]
[234.80165100 311.91638184]
[223.11045837 302.51873779]
[211.41925049 293.12109375]
[199.72805786 283.72341919]
[203.39427185 298.26849365]
[201.35221863 313.12884521]
[193.89854431 326.14584351]
[182.11595154 335.42868042]
[167.71600342 339.62884521]
[152.79045105 338.13629150]
[139.50738525 331.16778564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 90]
[8 89]
[10 87]
[11 86]
[12 85]
[13 84]
[14 83]
[15 82]
[16 81]
[17 80]
[18 79]
[19 78]
[21 76]
[24 74]
[25 73]
[30 68]
[31 67]
[32 66]
[33 65]
[34 64]
[35 60]
[36 59]
[37 58]
[38 57]
[40 53]
[41 52]
[42 51]
[43 50]
[91 108]
[92 107]
[93 106]
[94 105]
[96 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
