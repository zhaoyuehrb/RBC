%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGCGAAGCUGAGAACCCUAGCUCCGGCCCCGACCGGAAGCCCCACCGCACCGUCAGGGACGCGGACUCGGGAGUGCGCACAUUCGCAGCCCGGGCAGCCCUGCUGCGCACCGGGCCUCGCGCCCCGCGCCCCGCGCCCCGCGCCCCGCGCCCCGCACCGGCCUCCAGGAUC\
) } def
/len { sequence length } bind def

/coor [
[52.60694122 286.87612915]
[54.89574814 271.40695190]
[66.62672424 261.06683350]
[66.08827972 246.07649231]
[65.54983521 231.08615112]
[62.15603638 224.49240112]
[65.13871765 215.82241821]
[64.86945343 200.82482910]
[56.90493011 188.23851013]
[64.39325714 174.30166626]
[64.12399292 159.30407715]
[63.85472488 144.30650330]
[63.58546066 129.30891418]
[57.32616043 125.17718506]
[50.37223816 138.46789551]
[43.41831589 151.75860596]
[36.98012161 165.30665588]
[21.98143578 165.10826111]
[15.90386009 151.39463806]
[25.83134079 140.14955139]
[35.31945038 128.53164673]
[44.80756378 116.91373444]
[38.54826355 112.78200531]
[24.65174103 118.42883301]
[10.75521946 124.07566071]
[-3.09005761 129.84700012]
[-16.88297462 135.74237061]
[-30.67588997 141.63775635]
[-44.46880722 147.53312683]
[-50.11928940 162.29278564]
[-64.58528900 168.65756226]
[-79.28438568 162.85134888]
[-85.49586487 148.31887817]
[-79.53456879 133.68197632]
[-64.93722534 127.62449646]
[-50.36418152 133.74020386]
[-36.57126617 127.84483337]
[-22.77834892 121.94945526]
[-8.98543262 116.05408478]
[-4.05413628 110.51532745]
[5.10839033 110.17914581]
[19.00491333 104.53231049]
[32.90143585 98.88548279]
[21.69604683 88.91355896]
[13.86804390 76.11815643]
[10.09163475 61.60131073]
[10.69207382 46.61333466]
[15.61764622 32.44510269]
[24.44412422 20.31690216]
[36.41130066 11.27330208]
[50.48846817 6.09321070]
[65.46318817 5.22277880]
[80.04573059 8.73697376]
[92.98011780 16.33312607]
[103.15235138 27.35699463]
[109.68630981 40.85911942]
[112.01924896 55.67658997]
[109.95022583 70.53321075]
[103.65625763 84.15121460]
[112.03173828 71.70729828]
[120.40722656 59.26337051]
[121.69394684 43.49457550]
[135.21925354 37.25634003]
[143.59472656 24.81241798]
[151.97021484 12.36849499]
[160.34570312 -0.07542818]
[168.72119141 -12.51935101]
[169.54570007 -30.89956284]
[185.57127380 -38.01628494]
[186.57472229 -53.80563736]
[199.98587036 -60.28565979]
[208.13662720 -72.87792969]
[216.28738403 -85.47019196]
[224.43814087 -98.06246185]
[226.48524475 -106.99970245]
[232.84992981 -110.80578613]
[241.22541809 -123.24971008]
[249.60090637 -135.69363403]
[257.97637939 -148.13755798]
[266.35186768 -160.58148193]
[260.58148193 -170.55261230]
[258.97207642 -181.90817261]
[261.71978760 -192.99021912]
[268.38729858 -202.19534302]
[277.97317505 -208.20652771]
[289.06198120 -210.18162537]
[300.03323364 -207.87113953]
[309.06643677 -219.84616089]
[318.09960938 -231.82119751]
[319.62557983 -251.89981079]
[337.69198608 -258.73660278]
[346.28952026 -271.02816772]
[354.88702393 -283.31973267]
[363.48455811 -295.61129761]
[372.08206177 -307.90286255]
[380.67959595 -320.19445801]
[388.94302368 -332.71304321]
[396.86642456 -345.44958496]
[404.78982544 -358.18615723]
[412.71322632 -370.92269897]
[420.63662720 -383.65924072]
[423.86932373 -400.30215454]
[440.75671387 -401.80300903]
[446.87380981 -385.99108887]
[433.37319946 -375.73583984]
[425.44979858 -362.99929810]
[417.52639771 -350.26275635]
[409.60299683 -337.52618408]
[401.67959595 -324.78964233]
[402.13748169 -321.26168823]
[400.88815308 -317.33654785]
[397.76376343 -313.82882690]
[392.97116089 -311.59692383]
[384.37362671 -299.30535889]
[375.77612305 -287.01379395]
[367.17858887 -274.72222900]
[358.58108521 -262.43066406]
[349.98355103 -250.13908386]
[352.66604614 -240.23686218]
[349.36907959 -230.28990173]
[340.95742798 -223.67814636]
[330.07464600 -222.78799438]
[321.04144287 -210.81295776]
[312.00827026 -198.83793640]
[318.50256348 -181.34898376]
[313.13922119 -163.32472229]
[297.89950562 -152.05368042]
[278.79580688 -152.20599365]
[270.42031860 -139.76206970]
[262.04483032 -127.31814575]
[253.66934204 -114.87422180]
[245.29385376 -102.43030548]
[237.03039551 -89.91170502]
[228.87963867 -77.31943512]
[220.72888184 -64.72717285]
[212.57812500 -52.13490295]
[212.15768433 -37.24623489]
[198.16354370 -29.86552811]
[200.38687134 -17.95372772]
[193.67102051 -7.38883591]
[181.16511536 -4.14386415]
[172.78962708 8.30005836]
[164.41413879 20.74398232]
[156.03865051 33.18790436]
[147.66316223 45.63182831]
[146.97552490 60.51055145]
[132.85115051 67.63886261]
[124.47566223 80.08277893]
[116.10017395 92.52670288]
[117.31061554 107.47778320]
[127.57882690 118.41231537]
[137.84703064 129.34684753]
[153.09725952 136.75407410]
[150.20118713 153.45883179]
[133.34753418 155.30029297]
[126.91249847 139.61505127]
[116.64429474 128.68052673]
[106.37609100 117.74599457]
[99.42782593 120.56940460]
[85.53130341 126.21623993]
[78.58304596 129.03965759]
[78.85231018 144.03723145]
[79.12157440 159.03482056]
[79.39083862 174.03239441]
[87.37461853 187.69145203]
[79.86703491 200.55557251]
[80.13629913 215.55314636]
[80.54016876 230.54771423]
[81.07861328 245.53804016]
[81.61705017 260.52838135]
[94.05966187 270.00021362]
[97.45242310 285.26531982]
[90.19338989 299.11596680]
[75.71005249 305.01229858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 170]
[4 169]
[5 168]
[7 167]
[8 166]
[10 164]
[11 163]
[12 162]
[13 161]
[23 43]
[24 42]
[25 41]
[26 39]
[27 38]
[28 37]
[29 36]
[59 149]
[60 148]
[61 147]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[69 138]
[71 136]
[72 135]
[73 134]
[74 133]
[76 132]
[77 131]
[78 130]
[79 129]
[80 128]
[87 124]
[88 123]
[89 122]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 109]
[98 108]
[99 107]
[100 106]
[101 105]
[150 158]
[151 157]
[152 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
