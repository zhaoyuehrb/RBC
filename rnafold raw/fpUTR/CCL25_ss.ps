%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGGGACAGCUUGGCCUACAGCCCGGCGGGCAUCAGCUCCCUUGACCCAGUGGAUAUCGGUGGCCCCGUUAUUCGUCCAGGUGCCCAGGGAGGAGGACCCGCCUGCAGC\
) } def
/len { sequence length } bind def

/coor [
[4.09698725 300.07073975]
[-4.09073210 304.01782227]
[-13.08239174 305.00317383]
[-21.84502602 302.94311523]
[-31.19737244 314.67059326]
[-40.54972076 326.39807129]
[-49.90206528 338.12554932]
[-52.45706940 353.73907471]
[-66.44165802 358.86553955]
[-75.79400635 370.59301758]
[-80.94232178 386.74636841]
[-97.88960266 386.27093506]
[-102.12422943 369.85437012]
[-87.52147675 361.24066162]
[-78.16912842 349.51318359]
[-76.28307343 334.73846436]
[-61.62953949 328.77319336]
[-52.27719116 317.04571533]
[-42.92484665 305.31823730]
[-33.57249832 293.59078979]
[-38.17423248 272.97058105]
[-26.20074844 255.23196411]
[-4.81518602 251.69866943]
[2.80594397 238.77897644]
[0.09376517 226.89814758]
[6.45801449 216.03605652]
[18.92063332 212.36521912]
[26.90111351 199.66435242]
[34.88159561 186.96350098]
[42.86207581 174.26263428]
[50.84255600 161.56176758]
[58.82304001 148.86090088]
[56.44514084 136.90867615]
[63.11152649 126.22935486]
[75.67219543 122.90948486]
[84.00575256 110.43744659]
[81.28199768 96.20623016]
[89.33194733 84.15863037]
[103.52220917 81.22900391]
[111.85575867 68.75695801]
[120.18931580 56.28491592]
[128.52287292 43.81287003]
[136.85641479 31.34082603]
[145.18997192 18.86878204]
[140.72315979 0.57488036]
[150.74923706 -14.99165154]
[168.63278198 -18.37351227]
[176.25390625 -31.29320145]
[183.87504578 -44.21289062]
[180.14788818 -59.33724594]
[188.06085205 -72.33108521]
[202.50257874 -75.79114532]
[209.94175720 -88.81644440]
[217.19754028 -101.94479370]
[224.45332336 -115.07315063]
[231.70910645 -128.20149231]
[238.96488953 -141.32984924]
[246.22067261 -154.45820618]
[246.12422180 -170.27911377]
[259.05252075 -177.67564392]
[266.30828857 -190.80398560]
[273.56408691 -203.93234253]
[270.52233887 -219.68440247]
[281.05044556 -231.78971863]
[297.07214355 -230.96211243]
[306.29693604 -217.83647156]
[301.64837646 -202.48164368]
[286.69241333 -196.67655945]
[279.43664551 -183.54820251]
[272.18084717 -170.41986084]
[272.79629517 -155.53797913]
[259.34902954 -147.20242310]
[252.09324646 -134.07406616]
[244.83746338 -120.94571686]
[237.58168030 -107.81736755]
[230.32589722 -94.68901062]
[223.07011414 -81.56066132]
[222.58197021 -74.07701874]
[215.42227173 -68.17001343]
[219.37966919 -53.85657501]
[211.83480835 -40.64560699]
[196.79472351 -36.59175873]
[189.17359924 -23.67207146]
[181.55247498 -10.75238132]
[186.78410339 -0.42563155]
[186.31007385 11.26189709]
[180.13307190 21.33702278]
[169.72151184 27.17933655]
[157.66201782 27.20233536]
[149.32846069 39.67438126]
[140.99490356 52.14642334]
[132.66136169 64.61846924]
[124.32780457 77.09051514]
[115.99424744 89.56255341]
[118.71800232 103.79376984]
[110.66805267 115.84136963]
[96.47779083 118.77099609]
[88.14424133 131.24304199]
[87.43074799 149.57643127]
[71.52390289 156.84138489]
[63.54342270 169.54225159]
[55.56293869 182.24311829]
[47.58245850 194.94396973]
[39.60197830 207.64483643]
[31.62149620 220.34570312]
[31.42246437 238.69189453]
[15.72563362 246.40011597]
[8.10450363 259.31979370]
[13.19571686 267.11349487]
[15.38555813 276.11627197]
[14.45172596 285.29019165]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 20]
[5 19]
[6 18]
[7 17]
[9 15]
[10 14]
[23 108]
[24 107]
[27 105]
[28 104]
[29 103]
[30 102]
[31 101]
[32 100]
[35 98]
[36 97]
[39 94]
[40 93]
[41 92]
[42 91]
[43 90]
[44 89]
[47 84]
[48 83]
[49 82]
[52 79]
[53 77]
[54 76]
[55 75]
[56 74]
[57 73]
[58 72]
[60 70]
[61 69]
[62 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
