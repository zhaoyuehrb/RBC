%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCUGGGCUGUUGGAGAGAGCGAGCAGCAAGCCGGUGAGCGCGAGCGCGGCGCGCCGGCCGGCUAACCCGAGAGCGCGAGGCGCCCCAGGCUGGCAGGCGCCGCGGGACCCCUCACCCUCUCUGGUCGCCCCUCCCCGGAUUCCCCCACCCUCCGUGCCUGCAGGAGCCCCUGGGCUUUCCCGGAGGAGCUCGCCCUGAAGGGCCCGGACCUCGGCGAGCCCACCACCGUUCCCUCCAGCGCCGCCGCCGCCA\
CCGCAGCAGCCGGAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[173.99580383 296.19976807]
[186.27761841 280.53442383]
[179.05131531 267.38983154]
[171.82501221 254.24523926]
[158.91336060 246.81971741]
[159.04531860 230.99905396]
[151.81901550 217.85446167]
[144.59271240 204.70985413]
[137.36640930 191.56526184]
[130.14010620 178.42065430]
[122.91379547 165.27604675]
[115.61252594 152.17294312]
[108.23653412 139.11175537]
[100.86054230 126.05056000]
[88.57598877 117.44301605]
[73.78131104 114.96965027]
[58.98663712 112.49628448]
[44.19195938 110.02291870]
[35.25055695 111.69126892]
[29.24280357 107.43586731]
[14.29550648 112.62131500]
[3.13014913 102.76311493]
[-11.63530731 100.12090302]
[-26.40076256 97.47868347]
[-41.16621780 94.83647156]
[-56.11351776 100.02191925]
[-67.27887726 90.16371918]
[-82.04432678 87.52150726]
[-96.80978394 84.87928772]
[-109.68788147 93.64241791]
[-124.62451172 90.75249481]
[-132.89945984 78.42119598]
[-147.66491699 75.77898407]
[-153.94430542 77.64408875]
[-159.41423035 76.28775024]
[-162.73585510 72.90404510]
[-177.43710327 69.92518616]
[-192.13833618 66.94632721]
[-206.83956909 63.96747208]
[-221.54081726 60.98861313]
[-236.24205017 58.00975800]
[-244.77243042 70.55998993]
[-257.42379761 78.86576843]
[-272.25119019 81.68744659]
[-286.98934937 78.62564850]
[-299.39871216 70.17742920]
[-307.60583496 57.65589905]
[-310.38610840 42.98622513]
[-325.08734131 40.00737000]
[-339.78857422 37.02851105]
[-354.48983765 34.04965591]
[-369.19107056 31.07079697]
[-383.89230347 28.09193993]
[-398.59353638 25.11308289]
[-413.29476929 22.13422585]
[-428.02908325 19.32350731]
[-442.79455566 16.68129158]
[-457.55999756 14.03907490]
[-472.32543945 11.39685917]
[-487.09091187 8.75464439]
[-501.85635376 6.11242819]
[-516.62182617 3.47021270]
[-531.43035889 1.08139288]
[-546.27770996 -1.05332971]
[-561.12500000 -3.18805218]
[-569.40228271 3.79479384]
[-579.93621826 5.06461954]
[-589.24316406 0.44339883]
[-594.37719727 -8.33794594]
[-609.17187500 -10.81131268]
[-623.98040771 -13.20013332]
[-638.80236816 -15.50432777]
[-651.41223145 -5.97714949]
[-667.05377197 -8.23964882]
[-676.44708252 -20.94952583]
[-674.01934814 -36.56623459]
[-661.21087646 -45.82466125]
[-645.62066650 -43.23194122]
[-636.49816895 -30.32629395]
[-621.67620850 -28.02209854]
[-614.61102295 -30.09197235]
[-606.69848633 -25.60598946]
[-591.90380859 -23.13262367]
[-574.30078125 -31.18605995]
[-558.99029541 -18.03537369]
[-544.14300537 -15.90065098]
[-529.29565430 -13.76592827]
[-526.29150391 -15.54304600]
[-522.28686523 -15.97477913]
[-517.91369629 -14.61069107]
[-513.97961426 -11.29524326]
[-499.21414185 -8.65302753]
[-484.44869995 -6.01081228]
[-469.68322754 -3.36859655]
[-454.91778564 -0.72638094]
[-440.15231323 1.91583467]
[-425.38687134 4.55805016]
[-421.05288696 2.63473296]
[-415.46777344 3.38725328]
[-410.31591797 7.43298769]
[-395.61468506 10.41184521]
[-380.91345215 13.39070225]
[-366.21221924 16.36955833]
[-351.51095581 19.34841537]
[-336.80972290 22.32727242]
[-322.10848999 25.30612946]
[-307.40725708 28.28498650]
[-299.13580322 15.85468102]
[-286.70178223 7.51559258]
[-271.98257446 4.56433105]
[-257.21505737 7.48115492]
[-244.65557861 15.85213661]
[-236.23530579 28.42758179]
[-233.26319885 43.30852127]
[-218.56195068 46.28737640]
[-203.86071777 49.26623154]
[-189.15948486 52.24509048]
[-174.45823669 55.22394562]
[-159.75700378 58.20280457]
[-145.02268982 61.01352310]
[-130.25723267 63.65573883]
[-118.21947479 54.95931244]
[-103.20756531 57.42855453]
[-94.16757202 70.11383057]
[-79.40211487 72.75605011]
[-64.63665771 75.39826202]
[-50.74548721 70.02382660]
[-38.52400208 80.07101440]
[-23.75854683 82.71322632]
[-8.99309158 85.35544586]
[5.77236462 87.99765778]
[19.66353798 82.62322235]
[31.88501930 92.67041016]
[46.66532516 95.22824097]
[61.46000290 97.70160675]
[76.25467682 100.17497253]
[91.04935455 102.64833832]
[78.97930908 97.70516205]
[71.15938568 84.05072021]
[72.22664642 64.88813782]
[74.61546326 50.07957840]
[65.16046906 37.41551208]
[67.51227570 21.78718567]
[80.27559662 12.46660995]
[95.87818146 14.98351574]
[105.06329346 27.84466934]
[102.38156891 43.41977310]
[89.42402649 52.46839905]
[87.03520966 67.27696228]
[93.25032806 71.47485352]
[101.64630127 59.04474640]
[114.07627869 67.44091034]
[105.68056488 79.87063599]
[111.89568329 84.06852722]
[124.74091339 76.32257080]
[137.58615112 68.57660675]
[150.43138123 60.83064270]
[158.25363159 47.07843781]
[173.14813232 47.13193893]
[185.99337769 39.38597488]
[198.83860779 31.64001465]
[211.68383789 23.89405251]
[220.23162842 7.56435251]
[237.79225159 7.95831537]
[250.54815674 0.06611853]
[263.30407715 -7.82607841]
[276.05996704 -15.71827507]
[288.67877197 -23.82788849]
[301.15676880 -32.15253448]
[313.63476562 -40.47718048]
[326.06500244 -48.87296295]
[338.44708252 -57.33961105]
[350.78057861 -65.87684631]
[363.06515503 -74.48439789]
[375.34970093 -83.09194183]
[387.63424683 -91.69948578]
[399.91879272 -100.30702972]
[406.35043335 -115.39232635]
[422.66082764 -117.09613800]
[432.07125854 -103.66572571]
[424.90106201 -88.91715240]
[408.52633667 -88.02248383]
[396.24179077 -79.41493225]
[383.95724487 -70.80738831]
[371.67269897 -62.19984436]
[359.38815308 -53.59230042]
[355.72747803 -47.20471954]
[346.91372681 -44.95753479]
[334.53164673 -36.49088669]
[330.79824829 -30.14554405]
[321.95941162 -27.99918938]
[309.48141479 -19.67454338]
[297.00341797 -11.34989643]
[295.95370483 -8.02107620]
[293.26086426 -5.02572775]
[289.09454346 -3.12112832]
[283.95217896 -2.96236587]
[271.19625854 4.92983103]
[258.44036865 12.82202816]
[245.68444824 20.71422577]
[242.61915588 32.39141464]
[232.08917236 39.07703781]
[219.42980957 36.73928833]
[206.58457947 44.48524857]
[193.73933411 52.23121262]
[180.89410400 59.97717285]
[173.99063110 73.17533112]
[158.17735291 73.67588043]
[145.33210754 81.42183685]
[132.48687744 89.16780090]
[119.64163971 96.91376495]
[134.59559631 95.73939514]
[144.21365356 107.24996185]
[140.40042114 121.75717163]
[126.36543274 127.05050659]
[113.92173004 118.67456818]
[121.29772186 131.73576355]
[128.67372131 144.79695129]
[135.59165955 150.70239258]
[136.05839539 158.04974365]
[143.28469849 171.19435120]
[150.51100159 184.33894348]
[157.73730469 197.48355103]
[164.96362305 210.62814331]
[172.18992615 223.77275085]
[185.61845398 232.13845825]
[184.96961975 247.01892090]
[192.19592285 260.16351318]
[199.42222595 273.30813599]
[209.72100830 271.13848877]
[220.22799683 271.46691895]
[230.34661865 274.26876831]
[239.50382996 279.37908936]
[247.18249512 286.50238037]
[252.95059204 295.22964478]
[256.48556519 305.06195068]
[257.59231567 315.43884277]
[256.21395874 325.77029419]
[252.43479919 335.47036743]
[246.47503662 343.99032593]
[238.67810059 350.84976196]
[244.98716736 364.45843506]
[257.81118774 373.72424316]
[256.14471436 388.52529907]
[262.45376587 402.13397217]
[268.76284790 415.74264526]
[275.14953613 429.31506348]
[288.07858276 438.43374634]
[286.58126831 453.25289917]
[293.04537964 466.78860474]
[305.97442627 475.90728760]
[304.47714233 490.72644043]
[310.94125366 504.26214600]
[324.75955200 513.09313965]
[323.75057983 529.46124268]
[308.95233154 536.52832031]
[295.58792114 527.02435303]
[297.40554810 510.72625732]
[290.94143677 497.19055176]
[278.47476196 489.04003906]
[279.50967407 473.25271606]
[273.04556274 459.71701050]
[260.57888794 451.56646729]
[261.61383057 435.77914429]
[255.91729736 431.11535645]
[255.15417480 422.05169678]
[248.84510803 408.44302368]
[242.53605652 394.83438110]
[230.16328430 386.54196167]
[231.37850952 370.76748657]
[225.06944275 357.15884399]
[205.41929626 357.92306519]
[187.38775635 349.95608521]
[174.65962219 334.83966064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 229]
[3 228]
[4 227]
[6 225]
[7 224]
[8 223]
[9 222]
[10 221]
[11 220]
[12 218]
[13 217]
[14 216]
[15 137]
[16 136]
[17 135]
[18 134]
[20 133]
[22 131]
[23 130]
[24 129]
[25 128]
[27 126]
[28 125]
[29 124]
[32 121]
[33 120]
[36 119]
[37 118]
[38 117]
[39 116]
[40 115]
[41 114]
[48 107]
[49 106]
[50 105]
[51 104]
[52 103]
[53 102]
[54 101]
[55 100]
[56 97]
[57 96]
[58 95]
[59 94]
[60 93]
[61 92]
[62 91]
[63 87]
[64 86]
[65 85]
[69 83]
[70 82]
[71 80]
[72 79]
[140 149]
[141 148]
[154 211]
[155 210]
[156 209]
[157 208]
[159 206]
[160 205]
[161 204]
[162 203]
[164 200]
[165 199]
[166 198]
[167 197]
[168 193]
[169 192]
[170 191]
[171 189]
[172 188]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
[241 271]
[242 270]
[244 268]
[245 267]
[246 266]
[247 264]
[249 262]
[250 261]
[252 259]
[253 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
