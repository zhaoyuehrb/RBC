%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGCGAAGGCUGCGGCGUCCUGGGGCGAGGCGCUGACGUGAGCUCGGCGCACCUGGGCUGGGCAGGUAAGGGCUGGUGCGGGACGGGGAGAGGAACCUGCAGUCCCUACUUGGGUAGAGCCAGGCGCCCCUUGGCUAAGACGUCGAGGAGCGUGGUAGCGACGGGUGAUCUUCGCUGCGGACUUGGUUCGGAGGGACGUCCGCUUCUGGUGGACAGAUUGAGCAAAGAAUCUUUGAGCGGUCAAGGGAAAGAC\
AAGCCGACUCUUCAGAUCCCUGUGGACACACUGCCUGCUCUUCCAUAUC\
) } def
/len { sequence length } bind def

/coor [
[-299.30953979 141.81793213]
[-302.82998657 156.39895630]
[-306.35043335 170.97998047]
[-309.87091064 185.56101990]
[-313.39135742 200.14204407]
[-316.91180420 214.72306824]
[-305.72933960 225.25149536]
[-301.32461548 239.96522522]
[-304.88247681 254.90635681]
[-315.44589233 266.05578613]
[-330.17337036 270.41436768]
[-345.10327148 266.80966187]
[-356.21951294 256.21136475]
[-360.53192139 241.47029114]
[-356.88046265 226.55177307]
[-346.24734497 215.46879578]
[-331.49285889 211.20262146]
[-327.97238159 196.62158203]
[-324.45193481 182.04055786]
[-320.93148804 167.45953369]
[-317.41101074 152.87850952]
[-313.89056396 138.29747009]
[-340.09555054 145.64866638]
[-357.06262207 127.65659332]
[-372.05285645 127.11594391]
[-387.04312134 126.57529449]
[-402.03338623 126.03464508]
[-417.02362061 125.49399567]
[-432.01388550 124.95334625]
[-427.33081055 135.71015930]
[-427.86065674 149.00903320]
[-434.46002197 162.73298645]
[-445.87863159 172.46000671]
[-457.29724121 182.18704224]
[-468.71588135 191.91406250]
[-480.13449097 201.64108276]
[-491.55313110 211.36811829]
[-502.97174072 221.09513855]
[-514.34014893 230.88084412]
[-519.16015625 246.55564880]
[-535.20324707 249.95452881]
[-545.96557617 237.58100891]
[-540.37585449 222.16390991]
[-524.18426514 219.56301880]
[-521.21459961 212.83642578]
[-512.69879150 209.67651367]
[-501.28015137 199.94949341]
[-489.86154175 190.22247314]
[-478.44290161 180.49543762]
[-467.02429199 170.76841736]
[-455.60565186 161.04138184]
[-444.18704224 151.31436157]
[-447.33105469 136.64686584]
[-450.47476196 121.98068237]
[-464.87701416 117.78839874]
[-479.27923584 113.59611511]
[-493.68148804 109.40383148]
[-508.08374023 105.21154022]
[-525.88995361 109.99382019]
[-537.49761963 96.80384827]
[-551.94226074 92.76013184]
[-566.38696289 88.71641541]
[-580.04486084 96.20634460]
[-594.63616943 91.89967346]
[-601.69250488 78.83277893]
[-616.13720703 74.78906250]
[-630.58184814 70.74534607]
[-645.02655029 66.70162964]
[-659.47119141 62.65790939]
[-673.91583252 58.61419296]
[-689.29095459 62.34477615]
[-699.46118164 51.46289444]
[-713.90588379 47.41917801]
[-728.35052490 43.37546158]
[-742.79516602 39.33174133]
[-757.23986816 35.28802490]
[-771.68450928 31.24430847]
[-763.12841797 43.56475830]
[-763.36834717 58.56283951]
[-772.31420898 70.60329437]
[-786.60461426 75.16213989]
[-800.87036133 70.52647400]
[-809.75122070 58.43806076]
[-809.91046143 43.43890762]
[-801.28820801 31.16466904]
[-787.12554932 26.22720528]
[-801.18841553 21.00827980]
[-815.25122070 15.78935528]
[-829.31402588 10.57042980]
[-842.15753174 19.27811241]
[-857.66528320 18.73989868]
[-869.87420654 9.16274166]
[-874.08972168 -5.77074432]
[-868.69085693 -20.31833076]
[-855.75366211 -28.88617325]
[-840.25268555 -28.17975998]
[-828.14837646 -18.47072411]
[-824.09509277 -3.49238729]
[-810.03228760 1.72653794]
[-795.96948242 6.94546318]
[-781.90661621 12.16438866]
[-767.64080811 16.79964256]
[-753.19610596 20.84336090]
[-738.75146484 24.88707733]
[-724.30682373 28.93079567]
[-709.86212158 32.97451401]
[-695.41748047 37.01823044]
[-681.07556152 32.99841309]
[-669.87213135 44.16952896]
[-655.42749023 48.21324539]
[-640.98278809 52.25696182]
[-626.53814697 56.30067825]
[-612.09350586 60.34439850]
[-597.64880371 64.38811493]
[-584.83374023 56.88412476]
[-570.12719727 60.77925873]
[-562.34320068 74.27175140]
[-547.89855957 78.31546783]
[-533.45385742 82.35918427]
[-522.79284668 76.71041107]
[-510.74893188 79.92385864]
[-503.89144897 90.80929565]
[-489.48922729 95.00157928]
[-475.08697510 99.19386292]
[-460.68472290 103.38614655]
[-446.28247070 107.57843018]
[-431.47323608 109.96309662]
[-416.48297119 110.50373840]
[-401.49273682 111.04438782]
[-386.50247192 111.58503723]
[-371.51220703 112.12568665]
[-356.52197266 112.66633606]
[-345.92944336 99.00026703]
[-327.68835449 96.11069489]
[-311.43478394 107.14819336]
[-315.10525513 92.60420227]
[-318.77569580 78.06021118]
[-332.47262573 70.17541504]
[-336.50167847 54.89332581]
[-328.47250366 41.28053665]
[-313.14868164 37.41327286]
[-299.62155151 45.58591461]
[-295.91650391 60.94977570]
[-304.23171997 74.38975525]
[-300.56124878 88.93374634]
[-296.89080811 103.47773743]
[-284.48892212 111.91538239]
[-269.61309814 109.98940277]
[-254.73724365 108.06343079]
[-239.86140442 106.13745117]
[-224.98556519 104.21147919]
[-210.10972595 102.28549957]
[-195.23388672 100.35952759]
[-180.35804749 98.43355560]
[-174.15939331 94.47847748]
[-165.31916809 96.56516266]
[-150.42427063 94.79251862]
[-135.52938843 93.01986694]
[-120.63449097 91.24721527]
[-105.73960876 89.47456360]
[-90.89529419 87.31899261]
[-79.66006470 77.54050446]
[-64.75005341 82.83219147]
[-49.96616364 80.29512024]
[-35.18227768 77.75804901]
[-20.39839363 75.22097778]
[-5.61450768 72.68391418]
[0.41597605 68.47686768]
[9.33465862 70.19766235]
[24.14389229 67.81300354]
[38.95312500 65.42834473]
[53.76235962 63.04368591]
[68.57159424 60.65902710]
[81.58764648 53.20367050]
[91.13710022 41.63613129]
[93.95593262 26.06806374]
[108.02526855 21.17897797]
[117.57471466 9.61143684]
[120.39354706 -5.95663118]
[134.46287537 -10.84571648]
[144.01232910 -22.41325760]
[153.56178284 -33.98079681]
[163.11123657 -45.54833984]
[172.66067505 -57.11587906]
[178.08160400 -73.17981720]
[195.01840210 -72.41769409]
[198.97463989 -55.93180466]
[184.22822571 -47.56642914]
[174.67877197 -35.99888992]
[165.12931824 -24.43134880]
[155.57987976 -12.86380768]
[146.03042603 -1.29626656]
[143.89462280 13.44441319]
[129.14225769 19.16088676]
[119.59280396 30.72842789]
[117.45700836 45.46910858]
[102.70463562 51.18558121]
[93.15518951 62.75312042]
[97.71834564 68.70523071]
[111.40781403 86.56156158]
[125.05812073 80.34310913]
[138.70843506 74.12466431]
[152.35874939 67.90621948]
[166.00904846 61.68777466]
[179.65936279 55.46932983]
[193.30966187 49.25088120]
[205.21701050 37.18227005]
[220.11026001 45.28334808]
[216.44863892 61.83716583]
[199.52810669 62.90119171]
[185.87780762 69.11963654]
[172.22749329 75.33808136]
[158.57719421 81.55652618]
[144.92687988 87.77497864]
[131.27656555 93.99342346]
[117.62625885 100.21186829]
[119.04679871 107.57611084]
[123.30839539 129.66883850]
[138.29228210 130.36386108]
[153.27616882 131.05888367]
[168.26007080 131.75390625]
[183.24395752 132.44892883]
[194.86991882 122.08192444]
[210.05581665 123.00022888]
[219.86752319 134.14768982]
[234.85140991 134.84271240]
[249.83529663 135.53773499]
[264.81918335 136.23275757]
[279.80307007 136.92778015]
[295.90536499 131.62184143]
[305.46148682 145.62600708]
[294.65002441 158.68542480]
[279.10806274 151.91166687]
[264.12417603 151.21664429]
[249.14027405 150.52162170]
[234.15638733 149.82661438]
[219.17250061 149.13159180]
[208.37100220 159.32292175]
[193.16529846 158.83151245]
[182.54893494 147.43281555]
[167.56504822 146.73779297]
[152.58114624 146.04277039]
[137.59725952 145.34774780]
[122.61337280 144.65272522]
[118.12530518 158.96556091]
[130.82322693 166.95071411]
[143.52116394 174.93586731]
[156.21908569 182.92102051]
[168.91700745 190.90617371]
[181.58743286 186.42660522]
[194.34246826 189.99461365]
[202.60348511 200.09751892]
[203.53886414 212.91955566]
[218.92845154 209.32283020]
[232.30952454 217.73249817]
[235.74333191 233.15924072]
[227.19267273 246.45065308]
[211.73048401 249.72117615]
[198.53021240 241.03045654]
[195.42335510 225.53456116]
[179.13006592 229.79194641]
[164.52395630 220.74914551]
[160.93185425 203.60411072]
[148.23393250 195.61895752]
[135.53601074 187.63380432]
[122.83808136 179.64865112]
[110.14015198 171.66349792]
[51.69229126 126.70452118]
[70.95625305 75.46826172]
[56.14701843 77.85292053]
[41.33778381 80.23757935]
[26.52855110 82.62223816]
[11.71931839 85.00689697]
[-3.07743740 87.46779633]
[-17.86132240 90.00486755]
[-32.64521027 92.54193878]
[-47.42909622 95.07901001]
[-62.21297836 97.61607361]
[-74.50565338 107.57603455]
[-88.35823059 102.10287476]
[-77.60070801 112.55638123]
[-78.96109009 127.49456787]
[-91.42993164 135.83291626]
[-105.75502777 131.38415527]
[-111.30680084 117.44938660]
[-103.96695709 104.36945343]
[-118.86184692 106.14210510]
[-133.75672913 107.91475677]
[-148.65162659 109.68740082]
[-163.54650879 111.46005249]
[-178.43206787 113.30939484]
[-193.30790710 115.23536682]
[-208.18374634 117.16134644]
[-223.05958557 119.08731842]
[-237.93544006 121.01329041]
[-252.81127930 122.93927002]
[-267.68710327 124.86524200]
[-282.56295776 126.79122162]
[-267.64495850 128.35765076]
[-256.80731201 138.72804260]
[-254.58535767 153.56256104]
[-261.90896606 166.65319824]
[-275.71331787 172.52172852]
[-290.22152710 168.71228027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 18]
[6 17]
[24 132]
[25 131]
[26 130]
[27 129]
[28 128]
[29 127]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 44]
[54 126]
[55 125]
[56 124]
[57 123]
[58 122]
[60 119]
[61 118]
[62 117]
[65 114]
[66 113]
[67 112]
[68 111]
[69 110]
[70 109]
[72 107]
[73 106]
[74 105]
[75 104]
[76 103]
[77 102]
[86 101]
[87 100]
[88 99]
[89 98]
[135 146]
[136 145]
[137 144]
[147 298]
[148 297]
[149 296]
[150 295]
[151 294]
[152 293]
[153 292]
[154 291]
[156 290]
[157 289]
[158 288]
[159 287]
[160 286]
[161 280]
[163 278]
[164 277]
[165 276]
[166 275]
[167 274]
[169 273]
[170 272]
[171 271]
[172 270]
[173 269]
[174 198]
[175 197]
[177 195]
[178 194]
[180 192]
[181 191]
[182 190]
[183 189]
[184 188]
[200 216]
[201 215]
[202 214]
[203 213]
[204 212]
[205 211]
[206 210]
[218 244]
[219 243]
[220 242]
[221 241]
[222 240]
[225 237]
[226 236]
[227 235]
[228 234]
[229 233]
[245 267]
[246 266]
[247 265]
[248 264]
[249 263]
[253 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
