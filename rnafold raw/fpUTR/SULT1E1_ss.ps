%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAUGCAGAAGUGGUUCUCAUCUUUUUUUGCAGCUUAAGAUCUGCCUUGGUAUUUGAAGAGAUAUAAACUAGAUCAAUUUCUUUCACAGGAUCAACUAAACAGUGUACCACA\
) } def
/len { sequence length } bind def

/coor [
[83.30637360 172.09065247]
[70.70172882 167.95108032]
[59.03885269 161.62728882]
[48.69263840 153.32254028]
[39.99565506 143.30377197]
[27.00527382 150.80377197]
[14.01489353 158.30377197]
[1.02451229 165.80377197]
[-11.96586895 173.30377197]
[-24.95624924 180.80377197]
[-37.94663239 188.30377197]
[-50.93701172 195.80377197]
[-59.01966095 209.40455627]
[-73.91045380 209.06750488]
[-86.90083313 216.56750488]
[-89.43790436 231.99789429]
[-101.33351135 242.14820862]
[-116.97090149 242.22575378]
[-128.96658325 232.19392395]
[-131.65655518 216.78944397]
[-123.77071381 203.28582764]
[-109.03248596 198.05908203]
[-94.40083313 203.57711792]
[-81.41045380 196.07711792]
[-74.25696564 183.01278687]
[-58.43701172 182.81340027]
[-45.44663239 175.31340027]
[-32.45624924 167.81340027]
[-19.46586800 160.31340027]
[-6.47548771 152.81340027]
[6.51489353 145.31340027]
[19.50527382 137.81340027]
[32.49565506 130.31340027]
[26.76771545 110.61937714]
[26.66571426 90.10954285]
[32.19748688 70.35952759]
[42.93806458 52.88658142]
[58.06232071 39.03304291]
[76.40836334 29.86318016]
[96.56679535 26.08145142]
[97.39311218 11.10422993]
[98.21942902 -3.87299323]
[99.04574585 -18.85021591]
[99.87206268 -33.82743835]
[100.69837952 -48.80466080]
[88.54819489 -55.88568497]
[80.69683838 -67.47273254]
[78.64355469 -81.25068665]
[82.73600006 -94.49656677]
[92.11294556 -104.61765289]
[104.88477325 -109.65898132]
[106.12346649 -124.60774231]
[107.36215973 -139.55651855]
[108.60084534 -154.50527954]
[109.83953857 -169.45404053]
[111.07822418 -184.40281677]
[103.59393311 -198.99450684]
[112.71466827 -212.62330627]
[129.05781555 -211.26907349]
[135.81092834 -196.32493591]
[126.02699280 -183.16412354]
[124.78830719 -168.21536255]
[123.54961395 -153.26658630]
[122.31092072 -138.31782532]
[121.07223511 -123.36905670]
[119.83354187 -108.42028809]
[133.29299927 -99.59453583]
[140.54232788 -85.11994171]
[139.53707886 -68.86911774]
[130.45549011 -55.24285507]
[115.67559814 -47.97834396]
[114.84928131 -33.00112152]
[114.02296448 -18.02389908]
[113.19664764 -3.04667687]
[112.37033081 11.93054581]
[111.54401398 26.90776825]
[122.39661407 29.47248650]
[132.74058533 33.63891983]
[142.34098816 39.31244278]
[150.97981262 46.36421204]
[158.46086121 54.63407516]
[164.61422729 63.93422318]
[169.30017090 74.05344391]
[172.41229248 84.76191711]
[173.87988281 95.81645966]
[173.66961670 106.96601105]
[171.78628540 117.95735931]
[168.27265930 128.54089355]
[163.20852661 138.47624207]
[156.70889282 147.53778076]
[167.16833496 158.28952026]
[180.70576477 155.30819702]
[193.83377075 159.40745544]
[203.12142944 169.40292358]
[206.19773865 182.58442688]
[202.35624695 195.45018005]
[212.51547241 206.48603821]
[222.67469788 217.52191162]
[238.47912598 221.89820862]
[242.32884216 237.83909607]
[230.26361084 248.94593811]
[214.69508362 243.79296875]
[211.63883972 227.68112183]
[201.47961426 216.64526367]
[191.32038879 205.60940552]
[175.15090942 208.04646301]
[160.54547119 200.33245850]
[153.29858398 185.30596924]
[156.41661072 168.74896240]
[145.95715332 157.99722290]
[134.86218262 165.27148438]
[122.64659882 170.44764709]
[109.70306396 173.35931396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 33]
[6 32]
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[12 26]
[14 24]
[15 23]
[40 76]
[41 75]
[42 74]
[43 73]
[44 72]
[45 71]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[90 110]
[91 109]
[96 105]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
