%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGCGGCUGCUGCUUCCUCGGGCCAUUUUGCUGUGGAGCGGCGGGGAGGAGGAGCCGCCGAGGAGACCCCGGGCGAGGAGCUGCGAGCCGGAGGAGGCCGCGCGGACUCCGGGCUUUCCGCCGUCGCGGGGAUCUCGGGGGGCAAAGGGAUCGCCGGGGAGGGGGACCAGAGAGCCGCGCCCGCCGCGCGGAGCGCCCCUUCGCGUCCCCUGCACC\
) } def
/len { sequence length } bind def

/coor [
[252.29789734 72.31118774]
[237.68772888 75.70864105]
[223.07754517 79.10608673]
[208.46736145 82.50354004]
[193.88182068 86.00521851]
[179.32164001 89.61095428]
[164.76145935 93.21668243]
[150.20129395 96.82241058]
[135.64111328 100.42814636]
[121.08094025 104.03387451]
[106.52076721 107.63961029]
[92.74594879 113.57716370]
[80.12715149 121.68677521]
[67.50834656 129.79638672]
[61.98556900 137.06359863]
[54.65094757 137.93020630]
[41.91762924 145.85881042]
[29.18431091 153.78739929]
[16.45099449 161.71598816]
[3.71767616 169.64459229]
[-9.01564121 177.57318115]
[-21.74895859 185.50178528]
[-25.40097427 202.61297607]
[-40.01248550 211.60877991]
[-56.28159714 207.33615112]
[-68.90039825 215.44575500]
[-81.51920319 223.55537415]
[-67.62602997 229.21043396]
[-63.24466705 243.55628967]
[-71.60767365 256.00860596]
[-86.54484558 257.38006592]
[-97.03556061 246.65884399]
[-95.34029388 231.75581360]
[-108.50547791 238.94453430]
[-121.67066193 246.13327026]
[-129.73922729 260.41018677]
[-146.13793945 260.29049683]
[-153.99720764 245.89729309]
[-145.23210144 232.03710938]
[-128.85940552 232.96809387]
[-115.69421387 225.77935791]
[-102.52902985 218.59062195]
[-89.62881470 210.93656921]
[-77.01001740 202.82696533]
[-64.39121246 194.71734619]
[-63.44200897 181.87098694]
[-55.14479446 171.76473999]
[-42.35414505 168.22850037]
[-29.67755508 172.76846313]
[-16.94423676 164.83987427]
[-4.21091938 156.91127014]
[8.52239799 148.98268127]
[21.25571632 141.05407715]
[33.98903275 133.12548828]
[46.72235107 125.19689178]
[59.39873505 117.17758179]
[72.01753998 109.06797028]
[84.63633728 100.95835876]
[83.24604034 86.02292633]
[69.34721375 80.38176727]
[55.44839096 74.74060822]
[41.54956818 69.09944916]
[27.13655090 75.00730133]
[13.12152576 69.08837128]
[7.57811594 55.31135559]
[-6.32070875 49.67019653]
[-22.48056412 52.46145630]
[-32.76848221 39.69075394]
[-26.60113525 24.49549675]
[-10.32296181 22.50725937]
[-0.67954987 35.77136993]
[13.21927452 41.41252899]
[26.79635048 35.39600372]
[40.97209549 40.91894531]
[47.19072723 55.20062637]
[61.08955002 60.84178543]
[74.98837280 66.48294067]
[88.88719940 72.12409973]
[95.51833344 76.03102875]
[100.18115997 81.24148560]
[102.66290283 87.13835907]
[102.91503143 93.07942963]
[117.47521210 89.47370148]
[132.03538513 85.86797333]
[146.59556580 82.26223755]
[161.15573120 78.65650940]
[175.71591187 75.05077362]
[190.27609253 71.44504547]
[197.84780884 66.34774780]
[205.06991577 67.89336395]
[219.68009949 64.49591064]
[234.29026794 61.09845734]
[248.90045166 57.70100784]
[264.47283936 40.50829697]
[285.70755005 47.79840469]
[300.03811646 43.36732864]
[314.36871338 38.93625641]
[329.21755981 17.51628876]
[357.32723999 26.07623482]
[369.58715820 17.43363953]
[381.84707642 8.79104519]
[389.19012451 -8.09901524]
[406.71914673 -8.99353600]
[418.85440063 -17.81031418]
[430.98965454 -26.62709427]
[443.12490845 -35.44387054]
[455.26016235 -44.26065063]
[467.39541626 -53.07743073]
[472.49429321 -60.64808273]
[479.76748657 -61.93199921]
[492.02740479 -70.57459259]
[504.28732300 -79.21719360]
[516.48522949 -87.94709778]
[523.10192871 -102.31824493]
[537.94635010 -103.53954315]
[550.08160400 -112.35631561]
[552.19836426 -117.11325073]
[555.58697510 -120.27077484]
[559.42700195 -121.61233521]
[562.93072510 -121.27761841]
[575.43243408 -129.56658936]
[587.93420410 -137.85557556]
[595.16027832 -151.93016052]
[610.04339600 -152.51458740]
[622.54510498 -160.80357361]
[629.77124023 -174.87815857]
[644.65435791 -175.46258545]
[657.15606689 -183.75157166]
[664.38220215 -197.82615662]
[679.26531982 -198.41058350]
[691.76702881 -206.69956970]
[704.26873779 -214.98854065]
[711.49487305 -229.06312561]
[726.37799072 -229.64755249]
[738.87969971 -237.93653870]
[751.38140869 -246.22550964]
[763.88311768 -254.51448059]
[776.38482666 -262.80346680]
[788.88653564 -271.09243774]
[787.85668945 -286.41674805]
[794.64135742 -300.19586182]
[807.41552734 -308.72326660]
[822.74298096 -309.70507812]
[836.50079346 -302.87725830]
[844.98809814 -290.07641602]
[845.92187500 -274.74594116]
[839.05096436 -261.00964355]
[826.22357178 -252.56250000]
[810.89025879 -251.67678833]
[797.17553711 -258.59072876]
[784.67382812 -250.30174255]
[772.17211914 -242.01277161]
[759.67041016 -233.72380066]
[747.16870117 -225.43481445]
[734.66693115 -217.14584351]
[728.33508301 -203.66413879]
[712.55773926 -202.48681641]
[700.05603027 -194.19784546]
[687.55432129 -185.90887451]
[681.22241211 -172.42716980]
[665.44506836 -171.24984741]
[652.94335938 -162.96087646]
[646.61145020 -149.47917175]
[630.83410645 -148.30184937]
[618.33239746 -140.01287842]
[612.00048828 -126.53117371]
[596.22314453 -125.35385132]
[583.72143555 -117.06488037]
[571.21972656 -108.77590179]
[558.89843750 -100.22106171]
[546.76312256 -91.40428162]
[541.01446533 -77.66377258]
[525.30200195 -75.81184387]
[521.74060059 -69.34157562]
[512.92993164 -66.95727539]
[500.67001343 -58.31467819]
[488.41009521 -49.67208481]
[476.21218872 -40.94217682]
[464.07693481 -32.12539673]
[451.94168091 -23.30861664]
[439.80642700 -14.49183846]
[427.67117310 -5.67505980]
[415.53591919 3.14171910]
[413.33642578 15.03238583]
[403.30429077 22.47776031]
[390.48968506 21.05096245]
[378.22976685 29.69355583]
[365.96984863 38.33615112]
[363.30654907 53.09782028]
[371.77319336 65.47989655]
[380.23983765 77.86197662]
[388.70648193 90.24405670]
[397.17312622 102.62612915]
[405.63977051 115.00820923]
[414.10641479 127.39028931]
[422.57308960 139.77236938]
[438.01162720 144.13476562]
[444.09365845 158.98025513]
[436.15356445 172.92063904]
[420.28228760 175.26205444]
[408.65493774 164.20835876]
[410.19100952 148.23901367]
[401.72436523 135.85693359]
[393.25769043 123.47486115]
[384.79104614 111.09278107]
[376.32440186 98.71070099]
[367.85775757 86.32862091]
[359.39111328 73.94654846]
[350.92446899 61.56446838]
[338.20678711 64.73834991]
[326.53167725 61.36721420]
[318.79977417 53.26683807]
[304.46920776 57.69791031]
[290.13861084 62.12898636]
[288.50326538 69.02397919]
[284.54486084 74.98344421]
[278.71356201 79.24466705]
[271.70239258 81.24291229]
[264.36511230 80.68592072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 93]
[2 92]
[3 91]
[4 90]
[5 88]
[6 87]
[7 86]
[8 85]
[9 84]
[10 83]
[11 82]
[12 58]
[13 57]
[14 56]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[25 45]
[26 44]
[27 43]
[33 42]
[34 41]
[35 40]
[59 78]
[60 77]
[61 76]
[62 75]
[65 72]
[66 71]
[95 214]
[96 213]
[97 212]
[99 188]
[100 187]
[101 186]
[103 183]
[104 182]
[105 181]
[106 180]
[107 179]
[108 178]
[110 177]
[111 176]
[112 175]
[113 173]
[115 171]
[116 170]
[120 169]
[121 168]
[122 167]
[124 165]
[125 164]
[127 162]
[128 161]
[130 159]
[131 158]
[132 157]
[134 155]
[135 154]
[136 153]
[137 152]
[138 151]
[139 150]
[189 209]
[190 208]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
