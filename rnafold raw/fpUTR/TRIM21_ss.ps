%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCUGAGCGGAAACUGAAAGUGAAAUAGGGAGCUGGCUACCAGCGUUGAGUCCCCUGUAAAGCCAAACCCCCUAAAGGUCUCCACACUGCUGUUUAACGGCACACUUGACA\
) } def
/len { sequence length } bind def

/coor [
[101.93798828 118.92829132]
[97.46026611 133.24436951]
[92.98254395 147.56044006]
[97.09476471 163.43563843]
[85.21441650 174.74003601]
[69.56298828 169.84465027]
[66.24132538 153.78541565]
[78.66646576 143.08271790]
[83.14418793 128.76664734]
[87.62191010 114.45056915]
[86.17736816 99.52028656]
[79.03815460 86.32817841]
[71.89894867 73.13607788]
[58.52603912 64.68173218]
[59.27327728 49.80588531]
[52.13406754 36.61377716]
[44.99485779 23.42167091]
[37.22776413 24.23914719]
[29.53273392 23.04076958]
[22.42272949 19.91795158]
[16.36874962 15.09000301]
[11.76864338 8.88876820]
[8.92095852 1.73582959]
[8.00559521 -5.88614368]
[9.07247257 -13.46596241]
[12.03894806 -20.49820328]
[16.69610214 -26.51690674]
[22.72340775 -31.12645340]
[18.64185715 -45.56047440]
[14.56030464 -59.99449158]
[10.47875214 -74.42851257]
[6.39720058 -88.86253357]
[-4.80323076 -100.03665161]
[-0.82100910 -114.38904572]
[-14.30732441 -126.83227539]
[-9.50606632 -143.65002441]
[-13.98378849 -157.96609497]
[-18.46151161 -172.28216553]
[-22.93923378 -186.59825134]
[-27.41695595 -200.91432190]
[-43.01897049 -208.67796326]
[-48.14464188 -224.98223877]
[-40.11331177 -239.68701172]
[-44.98380280 -253.87426758]
[-49.85429764 -268.06152344]
[-55.67844391 -275.28170776]
[-54.65766525 -282.70730591]
[-69.40399933 -287.53695679]
[-78.46794128 -300.13156128]
[-78.36422729 -315.64828491]
[-69.13273621 -328.12063599]
[-54.32316589 -332.75271606]
[-39.63009262 -327.76339722]
[-30.70330620 -315.07119751]
[-30.97533989 -299.55648804]
[-40.34158707 -287.18502808]
[-35.66703796 -272.93203735]
[-30.79654694 -258.74475098]
[-25.92605400 -244.55751038]
[-13.60187340 -240.53059387]
[-5.76519060 -229.95733643]
[-5.48886251 -216.60391235]
[-13.10088062 -205.39204407]
[-8.62315845 -191.07597351]
[-4.14543581 -176.75988770]
[0.33228615 -162.44381714]
[4.81000853 -148.12774658]
[15.44158459 -142.17813110]
[19.23714447 -130.17828369]
[13.61301136 -118.47059631]
[24.52150154 -108.32889557]
[20.83122063 -92.94408417]
[24.91277313 -78.51006317]
[28.99432373 -64.07604218]
[33.07587814 -49.64202499]
[37.15742874 -35.20800400]
[58.62324905 -26.81638718]
[67.56809998 -5.30807161]
[58.18696213 16.28246117]
[65.32617188 29.47456741]
[72.46538544 42.66667175]
[85.32765198 50.17742538]
[85.09104919 65.99686432]
[92.23026276 79.18897247]
[99.36947632 92.38108063]
[103.26424408 86.38848114]
[110.69401550 82.68647766]
[120.43093109 82.80707550]
[130.67718506 87.68992615]
[139.32756042 97.49271393]
[151.41403198 106.37624359]
[163.50050354 115.25977325]
[175.58699036 124.14329529]
[187.67346191 133.02682495]
[199.75993347 141.91035461]
[216.10340881 146.41891479]
[216.29536438 163.37178040]
[200.05818176 168.24925232]
[190.87640381 153.99682617]
[178.78993225 145.11331177]
[166.70346069 136.22978210]
[154.61697388 127.34624481]
[142.53050232 118.46271515]
[130.44403076 109.57918549]
[123.31752014 111.91646576]
[129.66540527 125.50705719]
[136.01330566 139.09765625]
[145.21099854 150.94680786]
[140.82266235 165.29054260]
[126.56967926 169.96517944]
[114.53874207 161.00659180]
[114.93234253 146.01156616]
[111.99842072 131.30128479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[11 85]
[12 84]
[13 83]
[15 81]
[16 80]
[17 79]
[28 76]
[29 75]
[30 74]
[31 73]
[32 72]
[34 70]
[36 67]
[37 66]
[38 65]
[39 64]
[40 63]
[43 59]
[44 58]
[45 57]
[47 56]
[90 104]
[91 103]
[92 102]
[93 101]
[94 100]
[95 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
