%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUCCGCCCGCCCGGCCGCCCCGAGCCCCGAGCCCCGAGCCCCCCGCGCCGGGCCCGGGCGGCAGCGGCGGCGGCGGCGGCGGCGGCGCGCCCGGCCCCCUCCCCCGGCGCCGGCCACGGGAGGCGGUGAUGCGGGCGCGGGCGGCCUCGGCUGCGCCGAGAGCGGAGACACAGGCUCAAGAUGGCAGAUUCCGACUGAGGCUGGGGGGGCCGAGCUCGCGCGCCGCUUUCCCGUCCCCGUUGCCAUGAACCGC\
GGACACCCCGGCCCCG\
) } def
/len { sequence length } bind def

/coor [
[-135.76091003 613.22875977]
[-143.03085327 611.38543701]
[-153.75926208 621.86877441]
[-164.48765564 632.35217285]
[-175.15533447 642.89733887]
[-185.76193237 653.50396729]
[-196.36853027 664.11059570]
[-206.97512817 674.71716309]
[-217.58174133 685.32379150]
[-228.18833923 695.93035889]
[-238.67172241 706.65875244]
[-249.03051758 717.50750732]
[-259.38928223 728.35632324]
[-269.74807739 739.20507812]
[-280.10684204 750.05383301]
[-290.46563721 760.90258789]
[-300.82443237 771.75134277]
[-304.46896362 780.08648682]
[-311.36605835 782.66473389]
[-321.84942627 793.39312744]
[-319.39373779 808.60089111]
[-326.28317261 822.17987061]
[-339.68878174 829.01745605]
[-354.37435913 826.67816162]
[-358.48529053 841.95593262]
[-372.91418457 845.65130615]
[-383.39758301 856.37969971]
[-384.02322388 869.23876953]
[-392.94509888 877.95660400]
[-405.01489258 878.26318359]
[-415.62149048 888.86981201]
[-417.05935669 904.84826660]
[-430.52719116 913.56591797]
[-445.69360352 908.33526611]
[-450.92422485 893.16888428]
[-442.20657349 879.70104980]
[-426.22808838 878.26318359]
[-415.62149048 867.65661621]
[-411.97946167 850.47387695]
[-394.12597656 845.89630127]
[-383.64260864 835.16790771]
[-380.28152466 820.65747070]
[-365.10275269 816.19476318]
[-367.78063965 801.56719971]
[-361.25448608 788.00720215]
[-347.83825684 780.80590820]
[-332.57781982 782.90972900]
[-322.09445190 772.18133545]
[-311.67318726 761.39257812]
[-301.31439209 750.54382324]
[-290.95562744 739.69506836]
[-280.59683228 728.84625244]
[-270.23806763 717.99749756]
[-259.87927246 707.14874268]
[-249.52049255 696.29998779]
[-248.72982788 691.62353516]
[-245.01585388 687.38256836]
[-238.79493713 685.32379150]
[-228.18833923 674.71716309]
[-217.58174133 664.11059570]
[-206.97512817 653.50396729]
[-196.36853027 642.89733887]
[-185.76193237 632.29077148]
[-183.26354980 625.36437988]
[-174.97103882 621.62377930]
[-164.24264526 611.14038086]
[-153.51425171 600.65704346]
[-110.81576538 584.92327881]
[-103.82132721 571.65380859]
[-96.82688904 558.38439941]
[-89.83245087 545.11499023]
[-82.83801270 531.84552002]
[-75.84357452 518.57611084]
[-68.84913635 505.30667114]
[-61.85470200 492.03723145]
[-62.76466751 477.17044067]
[-49.48506546 468.57028198]
[-42.49062729 455.30087280]
[-35.49619293 442.03143311]
[-28.50175476 428.76199341]
[-21.50731659 415.49255371]
[-23.62653160 396.25189209]
[-6.33564615 385.84320068]
[0.35042894 372.41577148]
[7.03650427 358.98831177]
[13.72257996 345.56085205]
[20.40865517 332.13342285]
[27.09473038 318.70596313]
[33.78080750 305.27850342]
[40.46688080 291.85107422]
[47.15295792 278.42361450]
[53.83903122 264.99615479]
[60.29148483 251.45489502]
[66.42944336 237.76820374]
[72.48825836 224.04629517]
[78.54707336 210.32438660]
[84.60588837 196.60249329]
[90.66470337 182.88058472]
[96.72351837 169.15867615]
[102.78233337 155.43676758]
[108.84114838 141.71485901]
[114.89996338 127.99294281]
[88.37552643 129.89321899]
[69.41964722 110.81461334]
[71.53802490 83.70049286]
[67.43308258 69.27310944]
[63.32813644 54.84572601]
[59.22319031 40.41834259]
[53.88355637 33.05315781]
[55.15518570 25.80058670]
[51.21714401 11.32675266]
[47.27910614 -3.14708042]
[43.34106827 -17.62091446]
[32.25213242 -28.90568733]
[36.37665939 -43.21783447]
[32.43862152 -57.69166565]
[28.33367729 -72.11904907]
[24.06237411 -86.49806213]
[19.79107094 -100.87707520]
[8.44444084 -111.90270996]
[12.23728657 -126.30630493]
[-0.03259759 -137.18664551]
[3.51975656 -153.19642639]
[19.23999214 -157.86613464]
[30.95647812 -146.39199829]
[26.61629868 -130.57760620]
[37.65741730 -120.58045959]
[34.17008209 -105.14837646]
[38.44138336 -90.76936340]
[42.71268845 -76.39035797]
[46.37890244 -73.38147736]
[48.21520615 -68.05164337]
[46.91245651 -61.62970734]
[50.85049438 -47.15587234]
[61.65775299 -36.90636444]
[57.81489944 -21.55895233]
[61.75294113 -7.08511925]
[65.69097900 7.38871431]
[69.62902069 21.86254692]
[73.65057373 36.31339645]
[77.75552368 50.74078369]
[81.86046600 65.16816711]
[85.96540833 79.59555054]
[100.90916443 80.89329529]
[99.95182800 65.10108185]
[112.45841217 57.01192093]
[118.98896027 43.50814438]
[125.44141388 29.96688080]
[131.81556702 16.38857841]
[138.18971252 2.81027794]
[144.56385803 -10.76802349]
[150.93800354 -24.34632492]
[157.31214905 -37.92462540]
[158.56961060 -54.83187485]
[175.16421509 -58.30395126]
[183.09443665 -43.31903076]
[170.89044189 -31.55047989]
[164.51629639 -17.97217941]
[158.14215088 -4.39387751]
[151.76800537 9.18442345]
[145.39385986 22.76272583]
[139.01971436 36.34102631]
[139.02207947 43.70423508]
[132.49273682 50.03869247]
[125.96218872 63.54246902]
[127.38664246 78.36880493]
[114.41294098 87.42384338]
[119.43357086 92.99549866]
[126.92858887 80.00224304]
[141.60198975 83.11531830]
[143.17558289 98.03254700]
[129.47482300 104.13880920]
[134.49543762 109.71045685]
[148.60395813 104.61635590]
[162.71246338 99.52224731]
[173.06481934 87.55815887]
[187.66331482 90.51333618]
[201.77182007 85.41922760]
[215.88034058 80.32511902]
[229.98884583 75.23101044]
[236.96661377 69.39419556]
[244.28982544 70.16057587]
[254.77966309 58.31684875]
[269.34304810 61.44044113]
[283.50946045 56.50962067]
[297.67587280 51.57880402]
[304.33007812 37.24363708]
[319.20031738 31.89091492]
[333.46432495 38.69631577]
[338.65954590 53.62231064]
[331.70370483 67.81357574]
[316.72363281 72.85068512]
[302.60668945 65.74520874]
[288.44027710 70.67602539]
[274.27389526 75.60684204]
[264.79730225 87.09788513]
[249.22064209 84.32698059]
[235.08294678 89.33952332]
[220.97444153 94.43363190]
[206.86593628 99.52774048]
[192.75741577 104.62184906]
[183.41419983 116.22157288]
[167.80656433 113.63075256]
[153.69805908 118.72486115]
[139.58955383 123.81896973]
[128.62187195 134.05175781]
[122.56305695 147.77366638]
[116.50424194 161.49557495]
[110.44542694 175.21748352]
[104.38661194 188.93939209]
[98.32779694 202.66130066]
[92.26898193 216.38320923]
[86.21016693 230.10511780]
[80.15135193 243.82702637]
[79.55408478 252.90452576]
[73.94249725 257.67178345]
[74.43527222 262.79568481]
[73.07112122 267.17120361]
[70.43791962 270.22143555]
[67.26647949 271.68225098]
[60.58040619 285.10968018]
[53.89432907 298.53713989]
[47.20825577 311.96459961]
[40.52217865 325.39202881]
[33.83610535 338.81948853]
[27.15002823 352.24694824]
[20.46395302 365.67437744]
[13.77787876 379.10183716]
[7.09180307 392.52929688]
[11.12498093 402.58135986]
[9.02382660 412.98318481]
[1.71310139 420.36990356]
[-8.23788452 422.48699951]
[-15.23232174 435.75643921]
[-22.22675896 449.02587891]
[-29.22119713 462.29528809]
[-36.21563339 475.56472778]
[-35.80595779 491.38064575]
[-48.58526993 499.03167725]
[-55.57970810 512.30108643]
[-62.57414627 525.57055664]
[-69.56858063 538.83996582]
[-76.56301880 552.10943604]
[-83.55745697 565.37884521]
[-90.55189514 578.64825439]
[-97.54633331 591.91772461]
[-83.80846405 585.89514160]
[-70.09620667 591.97576904]
[-65.33699036 606.20074463]
[-72.62931824 619.30883789]
[-87.22549438 622.76599121]
[-99.62236786 614.32171631]
[-95.18527985 628.65045166]
[-90.74818420 642.97918701]
[-85.23985291 650.21905518]
[-86.34362030 657.49908447]
[-82.07231903 671.87805176]
[-69.80243683 682.75842285]
[-73.35478973 698.76818848]
[-89.07502747 703.43792725]
[-100.79151154 691.96374512]
[-96.45133209 676.14935303]
[-100.72263336 661.77038574]
[-105.07690430 647.41625977]
[-109.51399994 633.08752441]
[-113.95108795 618.75878906]
[-121.22103119 616.91546631]
[-124.19667053 631.61737061]
[-123.84214783 646.61315918]
[-137.84887695 651.98083496]
[-147.60678101 640.58856201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 67]
[3 66]
[4 65]
[5 63]
[6 62]
[7 61]
[8 60]
[9 59]
[10 58]
[11 55]
[12 54]
[13 53]
[14 52]
[15 51]
[16 50]
[17 49]
[19 48]
[20 47]
[24 43]
[26 41]
[27 40]
[30 38]
[31 37]
[68 246]
[69 245]
[70 244]
[71 243]
[72 242]
[73 241]
[74 240]
[75 239]
[77 237]
[78 236]
[79 235]
[80 234]
[81 233]
[83 229]
[84 228]
[85 227]
[86 226]
[87 225]
[88 224]
[89 223]
[90 222]
[91 221]
[92 220]
[93 216]
[94 214]
[95 213]
[96 212]
[97 211]
[98 210]
[99 209]
[100 208]
[101 207]
[102 206]
[105 143]
[106 142]
[107 141]
[108 140]
[110 139]
[111 138]
[112 137]
[113 136]
[115 134]
[116 133]
[117 130]
[118 129]
[119 128]
[121 126]
[144 167]
[146 165]
[147 164]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
[153 157]
[173 205]
[174 204]
[175 203]
[177 201]
[178 200]
[179 199]
[180 198]
[182 197]
[184 195]
[185 194]
[186 193]
[252 266]
[253 265]
[254 264]
[256 263]
[257 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
