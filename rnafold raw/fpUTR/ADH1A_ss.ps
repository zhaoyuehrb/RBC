%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCAAAAAAAAUAAAUAAAUACCUAUGCAAUACACCUGCUUUAUGCACUUGAGCAGGGAAGAAAUCCACAAGGACUCACCAGUCUCCUGGUCUGCAGAGAAGACAGAAUCAAC\
) } def
/len { sequence length } bind def

/coor [
[76.00138092 401.27200317]
[61.35009003 404.63150024]
[46.35363388 405.65753174]
[31.38131142 404.32485962]
[16.80183029 400.66625977]
[2.97422528 394.77188110]
[-9.76098824 386.78683472]
[-21.09019279 376.90780640]
[-30.73439789 365.37802124]
[-38.45610809 352.48144531]
[-44.06516266 338.53564453]
[-47.42343903 323.88409424]
[-48.44823837 308.88754272]
[-47.11431885 293.91531372]
[-43.45452881 279.33615112]
[-37.55900192 265.50903320]
[-29.57291222 252.77447510]
[-19.69293022 241.44609070]
[-8.16235542 231.80282593]
[4.73485947 224.08218384]
[18.68110847 218.47427368]
[33.33295441 215.11721802]
[48.32958221 214.09365845]
[63.30168533 215.42880249]
[66.95259857 200.87989807]
[62.54572296 186.65214539]
[73.40922546 175.15019226]
[77.06013489 160.60128784]
[80.71105194 146.05238342]
[84.36196136 131.50346375]
[75.36165619 125.09917450]
[68.79169464 116.21907806]
[65.30015564 105.73911285]
[65.23144531 94.69303894]
[68.59233093 84.17044830]
[75.05130005 75.20929718]
[66.91037750 62.61067200]
[58.76945114 50.01205063]
[50.62852478 37.41342545]
[42.48759842 24.81480026]
[34.34667206 12.21617699]
[26.20574760 -0.38244718]
[10.77902985 -0.24130681]
[-2.26286507 -8.48221207]
[-8.75831604 -22.47551918]
[-6.63464832 -37.75601578]
[3.43048382 -49.44775009]
[18.22533226 -53.81993484]
[33.02891541 -49.47741699]
[43.11746597 -37.80588150]
[45.27175903 -22.52967262]
[38.80437088 -8.52337265]
[46.94529724 4.07525110]
[55.08622360 16.67387581]
[63.22714996 29.27249908]
[71.36807251 41.87112427]
[79.50900269 54.46974945]
[87.64992523 67.06837463]
[95.32340240 63.65779877]
[103.91226196 62.08884430]
[112.96293640 62.59967422]
[121.96183777 65.31446838]
[131.42816162 53.67880249]
[130.90260315 40.70265198]
[139.13972473 31.18897057]
[151.25662231 29.93622589]
[161.03723145 18.56346703]
[170.81785583 7.19071054]
[173.32806396 -9.01517963]
[188.71362305 -14.69113731]
[201.14718628 -3.99822259]
[197.83818054 12.06361008]
[182.19061279 16.97132301]
[172.40998840 28.34407997]
[162.62937927 39.71683884]
[160.37728882 57.06204605]
[143.06382751 63.14512253]
[133.59750366 74.78079224]
[140.31593323 88.19208527]
[155.30334473 87.57759857]
[170.29074097 86.96311188]
[185.27815247 86.34862518]
[200.26556396 85.73413849]
[213.82275391 76.50730896]
[228.47241211 83.87748718]
[229.14422607 100.26287079]
[215.14707947 108.80757141]
[200.88005066 100.72154236]
[185.89263916 101.33602905]
[170.90522766 101.95051575]
[155.91783142 102.56500244]
[140.93041992 103.17949677]
[125.44870758 128.37120056]
[98.91087341 135.15437317]
[95.25996399 149.70329285]
[91.60904694 164.25219727]
[87.95813751 178.80111694]
[92.10387421 194.06948853]
[81.50151062 204.53080750]
[77.85059357 219.07972717]
[91.67917633 224.97183228]
[104.41570282 232.95475769]
[115.74654388 242.83193970]
[125.39264679 254.36012268]
[133.11648560 267.25543213]
[138.72784424 281.20028687]
[142.08853149 295.85131836]
[143.11581421 310.84768677]
[141.78436279 325.82009888]
[138.12698364 340.39990234]
[132.23373413 354.22799683]
[124.24974823 366.96386719]
[114.37162781 378.29388428]
[102.84265137 387.93902588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 100]
[25 99]
[27 97]
[28 96]
[29 95]
[30 94]
[36 58]
[37 57]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[62 78]
[63 77]
[66 75]
[67 74]
[68 73]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
