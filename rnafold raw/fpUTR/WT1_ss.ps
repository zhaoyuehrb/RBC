%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAGCUGGGGUAAGGAGUUCAAGGCAGCGCCCACACCCGGGGGCUCUCCGCAACCCGACCGCCUGUCCGCUCCCCCACUUCCCGCCCUCCCUCCCACCUACUCAUUCACCCACCCACCCACCCAGAGCCGGGACGGCAGCCCAGGCGCCCGGGCCCCGCCGUCUCCUCGCCGCGAUC\
) } def
/len { sequence length } bind def

/coor [
[75.90869141 433.22738647]
[60.82961655 435.85040283]
[46.26234436 431.15432739]
[35.55432129 420.21829224]
[31.16617966 405.55529785]
[34.10627747 390.53485107]
[43.69900131 378.60848999]
[57.74001694 372.51681519]
[58.78636551 357.55334473]
[51.95572281 344.31735229]
[60.63682556 331.09051514]
[61.68317413 316.12704468]
[62.72951889 301.16360474]
[55.89887619 287.92761230]
[64.57997894 274.70077515]
[65.62632751 259.73730469]
[66.67267609 244.77384949]
[67.71902466 229.81039429]
[68.76536560 214.84692383]
[60.15489960 209.17066956]
[54.64704514 200.35595703]
[53.29931259 189.96809387]
[56.42328644 179.88510132]
[63.51592255 171.95825195]
[73.33924866 167.67213440]
[75.16728973 152.78393555]
[76.99532318 137.89575195]
[65.67468262 128.05485535]
[51.18579483 131.93714905]
[36.69690704 135.81942749]
[25.36952591 146.86483765]
[11.07336426 142.68524170]
[-3.41552329 146.56752014]
[-17.90441132 150.44981384]
[-25.58850670 164.26033020]
[-40.81017685 168.51194763]
[-54.53867722 160.68226624]
[-58.62912750 145.41648865]
[-50.65473938 131.77154541]
[-35.34657288 127.84272003]
[-21.78669548 135.96092224]
[-7.29780865 132.07864380]
[7.19107866 128.19635010]
[17.48211861 117.42863464]
[32.81462097 121.33054352]
[47.30350876 117.44825745]
[61.79239655 113.56597900]
[60.20816803 103.68734741]
[61.10034943 93.86716461]
[64.34291840 84.70775604]
[69.66787720 76.75336456]
[76.68597412 70.45780182]
[84.91445923 66.15873718]
[93.80990601 64.05998993]
[102.80394745 64.22270203]
[111.33953857 66.56581116]
[119.06510925 53.70830536]
[126.79067993 40.85079575]
[134.51625061 27.99328423]
[130.91177368 12.83922386]
[138.92976379 -0.09006503]
[153.39906311 -3.43298841]
[161.12463379 -16.29049873]
[168.85020447 -29.14800835]
[176.57577515 -42.00551605]
[184.30134583 -54.86302567]
[192.02691650 -67.72053528]
[188.78219604 -78.13922882]
[191.76123047 -88.40817261]
[199.74285889 -95.18789673]
[209.92181396 -96.41355133]
[218.09140015 -108.99361420]
[226.26097107 -121.57366943]
[223.38185120 -132.09925842]
[226.71743774 -142.25798035]
[234.93081665 -148.75502014]
[245.14634705 -149.62467957]
[253.74998474 -161.91197205]
[251.23994446 -172.53161621]
[254.92803955 -182.56773376]
[263.36315918 -188.77418518]
[273.60281372 -189.28680420]
[282.63003540 -201.26634216]
[291.65725708 -213.24586487]
[300.68447876 -225.22540283]
[309.71170044 -237.20492554]
[308.69506836 -250.08134460]
[316.48364258 -259.87780762]
[328.46441650 -261.67019653]
[337.69934082 -273.49035645]
[346.93426514 -285.31051636]
[336.81781006 -296.43551636]
[328.72717285 -309.11026001]
[322.89511108 -322.97009277]
[319.48941040 -337.61624146]
[318.60809326 -352.62728882]
[320.27648926 -367.57131958]
[324.44659424 -382.01840210]
[330.99844360 -395.55285645]
[339.74353027 -407.78524780]
[350.43023682 -418.36364746]
[362.75106812 -426.98367310]
[376.35156250 -433.39733887]
[390.84036255 -437.42007446]
[405.80062866 -438.93618774]
[420.80191040 -437.90200806]
[435.41259766 -434.34732056]
[449.21231079 -428.37438965]
[461.80398560 -420.15505981]
[472.82537842 -409.92581177]
[481.95935059 -397.98101807]
[488.94308472 -384.66427612]
[493.57568359 -370.35879517]
[495.72384644 -355.47613525]
[495.32574463 -340.44451904]
[492.39285278 -325.69641113]
[487.00955200 -311.65618896]
[479.33071899 -298.72778320]
[469.57730103 -287.28317261]
[458.02990723 -277.65167236]
[445.02081299 -270.11035156]
[430.92431641 -264.87622070]
[416.14593506 -262.09988403]
[401.11096191 -261.86117554]
[386.25192261 -264.16702271]
[371.99633789 -268.95101929]
[358.75442505 -276.07559204]
[349.51950073 -264.25543213]
[340.28457642 -252.43527222]
[338.79638672 -234.96145630]
[321.69125366 -228.17770386]
[312.66403198 -216.19818115]
[303.63681030 -204.21864319]
[294.60955811 -192.23910522]
[285.58233643 -180.25958252]
[284.66665649 -160.96136475]
[266.03726196 -153.30831909]
[257.43362427 -141.02104187]
[257.19198608 -121.70262909]
[238.84103394 -113.40408325]
[230.67144775 -100.82402802]
[222.50186157 -88.24396515]
[222.93458557 -68.92889404]
[204.88442993 -59.99496460]
[197.15885925 -47.13745499]
[189.43328857 -34.27994537]
[181.70771790 -21.42243576]
[173.98213196 -8.56492710]
[166.25656128 4.29258251]
[170.09786987 18.63761711]
[162.44619751 31.78701401]
[147.37376404 35.71885681]
[139.64819336 48.57636642]
[131.92262268 61.43387604]
[124.19704437 74.29138184]
[134.74974060 89.32397461]
[136.50305176 108.14483643]
[128.46723938 125.84402466]
[112.27632904 137.54025269]
[91.88352203 139.72378540]
[90.05548096 154.61198425]
[88.22743988 169.50016785]
[101.42501831 184.61497498]
[99.32949829 204.26516724]
[83.72882843 215.89328003]
[82.68247986 230.85673523]
[81.63613892 245.82019043]
[80.58979034 260.78366089]
[79.54344177 275.74713135]
[86.29924011 290.05340576]
[77.69297791 302.20993042]
[76.64663696 317.17340088]
[75.60028839 332.13687134]
[82.35608673 346.44314575]
[73.74982452 358.59970093]
[72.70347595 373.56314087]
[85.76004791 381.54968262]
[93.59958649 394.69500732]
[94.42063141 409.97848511]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 176]
[9 175]
[11 173]
[12 172]
[13 171]
[15 169]
[16 168]
[17 167]
[18 166]
[19 165]
[25 162]
[26 161]
[27 160]
[28 47]
[29 46]
[30 45]
[32 43]
[33 42]
[34 41]
[56 155]
[57 154]
[58 153]
[59 152]
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[67 144]
[71 142]
[72 141]
[73 140]
[77 138]
[78 137]
[82 135]
[83 134]
[84 133]
[85 132]
[86 131]
[89 129]
[90 128]
[91 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
