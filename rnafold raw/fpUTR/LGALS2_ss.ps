%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCUUGAGGGAGUUAAUGUGUAAUAUUCUAGGAUAUAAGCUUGACCACGAGUUGAGACCCUGAGCACAGGCCUCCAGGAGCCGCUGGGAGCUGCCGCCAGGAGCUGUCACC\
) } def
/len { sequence length } bind def

/coor [
[125.72830200 164.67436218]
[122.84040070 148.78860474]
[127.15183258 133.16871643]
[115.76607513 123.40322876]
[104.38032532 113.63774872]
[90.67465210 110.87258911]
[85.85419464 97.74800873]
[74.46843719 87.98252106]
[63.08268738 78.21704102]
[51.69693375 68.45155334]
[43.13901138 72.09658813]
[33.89935684 72.67743683]
[25.03687859 70.15687561]
[17.55748177 64.85146332]
[12.29991150 57.39205933]
[9.84172249 48.64896393]
[10.43594742 39.63037491]
[13.98536682 31.36616325]
[4.06256104 20.11725616]
[-5.86024475 8.86834812]
[-15.78305054 -2.38055968]
[-25.70585632 -13.62946701]
[-30.01883316 0.73709917]
[-43.83173370 6.58549500]
[-57.14968109 -0.31612253]
[-60.33593369 -14.97380924]
[-51.08495331 -26.78140640]
[-36.08989334 -27.19471741]
[-44.35832214 -39.71003342]
[-51.80715179 -45.24331665]
[-52.67699051 -52.69017029]
[-60.59431839 -65.43049622]
[-68.51165009 -78.17082214]
[-83.65642548 -76.62256622]
[-97.91347504 -81.78235626]
[-108.47322845 -92.57641602]
[-113.27951050 -106.82635498]
[-111.42977142 -121.68865204]
[-103.34404755 -134.22206116]
[-111.26137543 -146.96238708]
[-119.17870331 -159.70271301]
[-127.09603119 -172.44303894]
[-135.01335144 -185.18336487]
[-142.93067932 -197.92369080]
[-157.63853455 -205.17706299]
[-158.44071960 -221.55657959]
[-144.51202393 -230.21240234]
[-130.18109131 -222.24017334]
[-130.19035339 -205.84101868]
[-122.27303314 -193.10069275]
[-114.35570526 -180.36036682]
[-106.43837738 -167.62004089]
[-98.52104950 -154.87971497]
[-90.60371399 -142.13938904]
[-75.78562927 -143.83929443]
[-61.64076614 -138.91665649]
[-50.99229813 -128.29727173]
[-45.99011230 -114.04953003]
[-47.67689514 -98.98162842]
[-55.77132034 -86.08815002]
[-47.85399246 -73.34782410]
[-39.93666458 -60.60750198]
[-31.84300423 -47.97845840]
[-23.57457924 -35.46314240]
[-14.45694828 -23.55227280]
[-4.53414249 -12.30336571]
[5.38866329 -1.05445755]
[15.31146908 10.19445038]
[25.23427391 21.44335747]
[46.34319687 20.50236893]
[61.72246552 35.38905716]
[61.46241760 57.06580353]
[72.84816742 66.83129120]
[84.23392487 76.59677124]
[95.61967468 86.36225128]
[109.32534790 89.12741089]
[114.14580536 102.25199127]
[125.53156281 112.01747894]
[136.91731262 121.78295898]
[149.70748901 115.59731293]
[163.84796143 114.78278351]
[177.18165588 119.43026733]
[187.68730164 128.79997253]
[193.78585815 141.43899536]
[194.57785034 155.40649414]
[189.97581482 168.57176208]
[201.08569336 178.64996338]
[212.19558716 188.72817993]
[227.61535645 192.26954651]
[231.84338379 206.55146790]
[242.95327759 216.62966919]
[254.06317139 226.70788574]
[265.17306519 236.78610229]
[273.76004028 240.30264282]
[276.44671631 247.30221558]
[287.27215576 257.68536377]
[303.31802368 261.07101440]
[308.15100098 276.74182129]
[296.79934692 288.57702637]
[280.94067383 284.40155029]
[276.88900757 268.51080322]
[266.06356812 258.12765503]
[255.09484863 247.89598083]
[243.98495483 237.81777954]
[232.87506104 227.73956299]
[221.76518250 217.66134644]
[207.14006042 214.84085083]
[202.11737061 199.83807373]
[191.00749207 189.75985718]
[179.89759827 179.68165588]
[165.27432251 185.96116638]
[149.31701660 185.26599121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 79]
[4 78]
[5 77]
[7 75]
[8 74]
[9 73]
[10 72]
[18 69]
[19 68]
[20 67]
[21 66]
[22 65]
[28 64]
[29 63]
[31 62]
[32 61]
[33 60]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[86 110]
[87 109]
[88 108]
[90 106]
[91 105]
[92 104]
[93 103]
[95 102]
[96 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
