%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGCCCACCUGCCGGGUAAGGGCCCCUCGGGCCCGUGGUCGGGCAUCGAUUGGCCCCGCCUGGCGCAGCCCCCGCCCCUGCAGCGGACUGCGGUGCUCAUCAGACCUGAGCAGUUGCUCCGGCGGCGCUCGGGGAGGGAGCCAGCAGCCUAGGGCCUAGGCCCGGGCCACC\
) } def
/len { sequence length } bind def

/coor [
[83.91101837 258.13638306]
[86.44719696 238.92134094]
[86.71646118 223.92375183]
[76.22252655 213.41600037]
[76.28195190 198.20248413]
[87.37460327 187.26672363]
[87.64386749 172.26913452]
[87.91313171 157.27156067]
[88.18239594 142.27397156]
[77.50148773 137.42179871]
[68.54032135 129.94657898]
[61.92161560 120.41044617]
[58.09389877 109.51711273]
[57.30121231 98.05994415]
[42.40321732 99.80628967]
[27.50522232 101.55263519]
[12.60722637 103.29898834]
[-2.29076886 105.04533386]
[-17.18876457 106.79167938]
[-32.08676147 108.53802490]
[-40.69892502 118.16912842]
[-53.16644669 119.30068207]
[-62.73731232 111.86882019]
[-77.66426086 113.34745026]
[-92.59120178 114.82608032]
[-107.51814270 116.30471039]
[-122.44509125 117.78334808]
[-132.45005798 129.72229004]
[-147.60916138 131.00918579]
[-158.92945862 121.39740753]
[-173.85641479 122.87603760]
[-188.78335571 124.35467529]
[-203.71029663 125.83330536]
[-218.62336731 127.44585419]
[-233.52136230 129.19219971]
[-248.41935730 130.93855286]
[-263.31735229 132.68489075]
[-278.21536255 134.43124390]
[-291.03579712 144.65708923]
[-306.20095825 138.41609192]
[-308.11019897 122.12846375]
[-294.79946899 112.54951477]
[-279.96170044 119.53324890]
[-265.06369019 117.78690338]
[-250.16571045 116.04055786]
[-235.26771545 114.29421234]
[-220.36972046 112.54785919]
[-214.07131958 108.63304138]
[-205.18893433 110.90635681]
[-190.26197815 109.42772675]
[-175.33503723 107.94909668]
[-160.40809631 106.47046661]
[-151.19354248 94.82454681]
[-136.07655334 93.11235809]
[-123.92372131 102.85639954]
[-108.99678040 101.37776947]
[-94.06983185 99.89913940]
[-79.14289093 98.42050934]
[-64.21594238 96.94187927]
[-50.54998779 85.95512390]
[-33.83310699 93.64002991]
[-18.93511009 91.89368439]
[-4.03711557 90.14733887]
[10.86087990 88.40099335]
[25.75887680 86.65464020]
[40.65687180 84.90829468]
[55.55486679 83.16194916]
[63.01596832 70.14918518]
[56.99702454 56.40974045]
[50.97808456 42.67029572]
[44.95914459 28.93085289]
[29.70880890 26.60042953]
[18.15446281 16.37787247]
[13.98305511 1.52516675]
[18.52566528 -13.21824646]
[30.33276367 -23.14779663]
[45.63674927 -25.09500122]
[59.55417252 -18.43851280]
[67.64403534 -5.30239439]
[67.32489777 10.12166786]
[58.69858932 22.91191101]
[64.71752930 36.65135574]
[70.73647308 50.39080048]
[76.75540924 64.13024902]
[92.18470001 59.18259811]
[107.88773346 60.40308762]
[121.55728912 67.27063751]
[131.31355286 78.45958710]
[145.10646057 72.56420898]
[151.79498291 66.29296112]
[159.20028687 66.68927002]
[173.09680176 61.04244232]
[186.99333191 55.39561462]
[200.88984680 49.74878311]
[210.76206970 37.38553238]
[225.46580505 39.76239014]
[232.26582336 33.61221695]
[239.66281128 34.14139175]
[253.65846252 28.74493027]
[267.65411377 23.34846878]
[281.64974976 17.95200539]
[288.55908203 11.92489052]
[295.94540405 12.58676624]
[310.03564453 7.44240904]
[314.28210449 -5.36080599]
[324.97750854 -13.25669956]
[338.07397461 -13.53599930]
[348.77322388 -6.32097578]
[362.95355225 -11.21156979]
[377.13391113 -16.10216331]
[391.31423950 -20.99275780]
[405.49459839 -25.88335228]
[419.67492676 -30.77394676]
[433.85528564 -35.66453934]
[440.97650146 -41.43975067]
[448.33428955 -40.51316452]
[462.60012817 -45.14841843]
[476.86596680 -49.78367233]
[491.13183594 -54.41892624]
[505.39767456 -59.05418396]
[515.96276855 -71.59654236]
[532.05761719 -68.45210266]
[537.12524414 -52.85558701]
[525.95245361 -40.85135651]
[510.03292847 -44.78833389]
[495.76708984 -40.15307999]
[481.50122070 -35.51782608]
[467.23538208 -30.88257027]
[452.96954346 -26.24731636]
[438.74588013 -21.48419952]
[424.56552124 -16.59360504]
[410.38519287 -11.70301056]
[396.20483398 -6.81241655]
[382.02450562 -1.92182243]
[367.84414673 2.96877170]
[353.66381836 7.85936594]
[346.96682739 23.26981926]
[330.88552856 29.20054436]
[315.18002319 21.53267479]
[301.08975220 26.67703247]
[287.04623413 31.94765472]
[273.05056763 37.34411621]
[259.05493164 42.74058151]
[245.05928040 48.13704300]
[231.11262512 53.65891266]
[222.23439026 65.61826324]
[206.53668213 63.64530563]
[192.64016724 69.29213715]
[178.74363708 74.93896484]
[164.84712219 80.58579254]
[151.00183105 86.35713196]
[137.20892334 92.25250244]
[139.64086914 105.11516571]
[137.53718567 118.68855286]
[130.72148132 131.35179138]
[138.18258667 144.36454773]
[145.64369202 157.37731934]
[153.10478210 170.39007568]
[167.54649353 178.15983582]
[167.76800537 194.55749512]
[153.54145813 202.71453857]
[139.50190735 194.23970032]
[140.09202576 177.85118103]
[132.63092041 164.83840942]
[125.16982269 151.82565308]
[117.70872498 138.81289673]
[103.17997742 142.54324341]
[102.91071320 157.54081726]
[102.64144897 172.53840637]
[102.37218475 187.53599548]
[113.06513214 198.86288452]
[112.57841492 214.06874084]
[101.71405029 224.19302368]
[101.44478607 239.19059753]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 174]
[3 173]
[6 170]
[7 169]
[8 168]
[9 167]
[14 67]
[15 66]
[16 65]
[17 64]
[18 63]
[19 62]
[20 61]
[23 59]
[24 58]
[25 57]
[26 56]
[27 55]
[30 52]
[31 51]
[32 50]
[33 49]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[68 84]
[69 83]
[70 82]
[71 81]
[88 152]
[89 151]
[91 150]
[92 149]
[93 148]
[94 147]
[96 145]
[98 144]
[99 143]
[100 142]
[101 141]
[103 140]
[104 139]
[108 136]
[109 135]
[110 134]
[111 133]
[112 132]
[113 131]
[114 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
