%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAGAACUUGGGGAGCCGCCGCCGCCAUCCGCCGCCGCAGCCAGCUUCCGCCGCCGCAGGACCGGCCCCUGCCCCAGCCUCCGCAGCCGCGGCGCGUCCACGCCCGCCCGCGCCCAGGGCGAGUCGGGGUCGCCGCCUGCACGCUUCUCAGUGUUCCCCGCGCCCCGCAUGUAACCCGGCCAGGCCCCCGCAACUGUGUCCCCUGCAGCUCCAGCCCCGGGCUGCACCCCCCCGCCCCGACACCAGCUCUCCA\
GCCUGCUCGUCCAGG\
) } def
/len { sequence length } bind def

/coor [
[357.08264160 369.44616699]
[346.32348633 358.99435425]
[335.56430054 348.54257202]
[324.80511475 338.09075928]
[314.04592896 327.63897705]
[303.28674316 317.18716431]
[290.42059326 320.67608643]
[277.40386963 317.33392334]
[267.65435791 307.92807007]
[263.78616333 294.83221436]
[266.90936279 281.42794800]
[256.27206421 270.85211182]
[245.63478088 260.27630615]
[234.99748230 249.70048523]
[224.36018372 239.12466431]
[217.42625427 236.64627075]
[213.66177368 228.36405945]
[203.14778137 217.66564941]
[192.63380432 206.96722412]
[179.88150024 208.66120911]
[168.30386353 202.62068176]
[162.21955872 190.84677124]
[164.04231262 177.52343750]
[153.65304565 166.70385742]
[143.26379395 155.88427734]
[132.87454224 145.06469727]
[116.29853821 153.34716797]
[97.92398834 155.74273682]
[79.77851868 151.98706055]
[63.86451340 142.49456787]
[51.93807983 128.31277466]
[45.31530762 111.00666046]
[30.34578896 111.96240234]
[15.37626743 112.91814423]
[7.04669952 116.57663727]
[0.22786228 113.79717255]
[-14.75173187 114.57931519]
[-29.73132706 115.36146545]
[-44.71092224 116.14360809]
[-59.69051361 116.92575073]
[-73.06846619 125.37210846]
[-86.18186951 118.30897522]
[-101.16146851 119.09111786]
[-110.33775330 128.12168884]
[-122.80677795 128.48374939]
[-131.88865662 120.52761078]
[-146.87631226 121.13605499]
[-154.07115173 134.63351440]
[-166.97082520 142.66441345]
[-182.05802917 143.15696716]
[-195.27763367 136.07897949]
[-203.12658691 123.41960907]
[-218.11424255 124.02805328]
[-231.58920288 132.31877136]
[-244.61985779 125.10408783]
[-255.30189514 136.44126892]
[-270.51019287 136.84481812]
[-281.25262451 126.59124756]
[-296.24026489 127.19969177]
[-311.22793579 127.80813599]
[-326.21557617 128.41658020]
[-341.20324707 129.02502441]
[-350.61685181 141.51171875]
[-365.86593628 144.97573853]
[-379.75033569 137.78147888]
[-385.71426392 123.32582855]
[-380.94174194 108.43432617]
[-367.68618774 100.13826752]
[-352.20648193 102.35481262]
[-341.81167603 114.03736877]
[-326.82403564 113.42892456]
[-311.83636475 112.82048035]
[-296.84872437 112.21203613]
[-281.86105347 111.60359192]
[-271.98510742 100.51299286]
[-256.79415894 99.68244171]
[-245.22830200 110.11643219]
[-232.82534790 101.86924744]
[-218.72268677 109.04040527]
[-203.73503113 108.43196106]
[-196.93806458 95.17802429]
[-184.33569336 87.05175018]
[-169.25820923 86.31972504]
[-155.75001526 93.27856445]
[-147.48475647 106.14839935]
[-132.49710083 105.53995514]
[-118.17256927 95.37576294]
[-101.94361115 104.11152649]
[-86.96401978 103.32937622]
[-74.65750885 94.93896484]
[-60.47266006 101.94615936]
[-45.49306488 101.16400909]
[-30.51347160 100.38186646]
[-15.53387737 99.59972382]
[-0.55428284 98.81757355]
[14.42052650 97.94861603]
[29.39004707 96.99288177]
[44.35956955 96.03713989]
[45.23570251 86.33678436]
[47.80955124 76.82469940]
[52.04131699 67.79901886]
[57.83868790 59.54955292]
[65.05858612 52.34851074]
[73.51052856 46.44159698]
[66.64649963 33.10424042]
[53.45183945 24.37432289]
[54.50749207 9.51717377]
[47.64346313 -3.82018423]
[40.77943420 -17.15754128]
[33.91540527 -30.49489975]
[27.05137634 -43.83225632]
[11.76147270 -47.11140823]
[2.19737101 -59.48323059]
[2.87494898 -75.10612488]
[13.47427464 -86.60344696]
[28.99067116 -88.54650116]
[42.09777069 -80.01784515]
[46.60680008 -65.04444885]
[40.38873291 -50.69628525]
[47.25276184 -37.35892868]
[54.11679077 -24.02157021]
[60.98081970 -10.68421268]
[67.84484863 2.65314436]
[80.54855347 10.42908573]
[79.98386383 26.24021149]
[86.84789276 39.57756805]
[101.78343201 38.18844986]
[106.07005310 23.81399918]
[110.35667419 9.43954659]
[114.64329529 -4.93490505]
[118.92991638 -19.30935669]
[118.38186646 -28.39043427]
[123.35044098 -33.82506561]
[127.80340576 -48.14886093]
[132.25637817 -62.47265625]
[128.96466064 -77.94763947]
[140.13142395 -87.80422974]
[131.02426147 -100.22863007]
[130.97976685 -115.45529938]
[139.80541992 -127.64430237]
[153.94683838 -132.24407959]
[158.39981079 -146.56787109]
[162.85278320 -160.89166260]
[167.30574036 -175.21546936]
[157.91812134 -187.57070923]
[157.61927795 -203.08491516]
[166.52410889 -215.79252625]
[181.20852661 -220.80723572]
[196.02609253 -216.20075989]
[205.27912903 -203.74440002]
[205.40966797 -188.22787476]
[196.36750793 -175.61759949]
[181.62954712 -170.76249695]
[177.17657471 -156.43870544]
[172.72360229 -142.11491394]
[168.27064514 -127.79111481]
[177.31163025 -115.98440552]
[177.67098999 -100.93997192]
[169.00137329 -88.42234039]
[154.45523071 -83.35126495]
[158.06544495 -68.90081787]
[146.58016968 -58.01968765]
[142.12719727 -43.69589615]
[137.67424011 -29.37210083]
[133.30436707 -15.02273560]
[129.01774597 -0.64828354]
[124.73112488 13.72616863]
[120.44450378 28.10062027]
[116.15788269 42.47507477]
[126.91284943 47.09809494]
[136.49069214 53.69260025]
[144.53819275 61.97836685]
[150.76585388 71.61360168]
[154.95832825 82.20899200]
[156.98176575 93.34338379]
[156.78785706 104.58052826]
[154.41458130 115.48615265]
[149.98353577 125.64476013]
[143.69412231 134.67543030]
[154.08337402 145.49502563]
[164.47262573 156.31460571]
[174.86189270 167.13418579]
[192.37240601 167.17889404]
[204.18696594 179.64096069]
[203.33222961 196.45324707]
[213.84620667 207.15165710]
[224.36018372 217.85008240]
[234.93600464 228.48738098]
[245.57330322 239.06318665]
[256.21060181 249.63900757]
[266.84790039 260.21481323]
[277.48519897 270.79064941]
[294.16354370 267.87365723]
[309.13937378 275.40972900]
[316.58578491 290.24432373]
[313.73855591 306.42797852]
[324.49774170 316.87979126]
[335.25689697 327.33157349]
[346.01608276 337.78338623]
[356.77526855 348.23516846]
[367.53445435 358.68698120]
[376.10897827 353.50292969]
[386.94338989 351.96691895]
[398.41793823 355.00473022]
[408.56265259 362.81060791]
[415.38662720 374.72848511]
[429.63082886 379.42984009]
[443.87503052 384.13119507]
[458.11923218 388.83255005]
[472.36343384 393.53390503]
[486.60763550 398.23526001]
[495.70077515 397.95059204]
[500.98913574 403.07455444]
[515.17791748 407.94073486]
[529.26226807 400.77093506]
[544.26519775 405.73968506]
[551.28564453 419.89907837]
[546.15856934 434.84860229]
[531.92572021 441.71899414]
[517.03125000 436.43414307]
[510.31173706 422.12945557]
[496.12298584 417.26330566]
[481.90628052 412.47946167]
[467.66207886 407.77810669]
[453.41787720 403.07675171]
[439.17367554 398.37539673]
[424.92947388 393.67404175]
[410.68527222 388.97268677]
[405.61746216 394.50143433]
[416.67498779 404.63708496]
[427.73251343 414.77270508]
[438.78985596 424.90853882]
[428.65386963 435.96572876]
[417.59686279 425.83023071]
[406.53933716 415.69461060]
[395.48181152 405.55895996]
[390.41400146 411.08773804]
[396.33450317 424.86990356]
[410.73876953 430.79904175]
[416.54666138 444.86044312]
[410.80532837 458.55618286]
[416.72583008 472.33831787]
[422.64633179 486.12048340]
[432.92297363 489.54312134]
[439.49978638 497.87200928]
[440.40762329 508.22564697]
[435.58789062 517.18591309]
[441.18728638 531.10162354]
[446.78668213 545.01733398]
[462.00411987 547.09692383]
[474.13317871 556.51934814]
[479.91116333 570.74993896]
[477.78384399 585.96081543]
[468.32348633 598.06024170]
[454.07482910 603.79364014]
[438.87069702 601.61865234]
[426.80096436 592.12036133]
[421.11230469 577.85382080]
[423.33493042 562.65661621]
[432.87097168 550.61669922]
[427.27157593 536.70098877]
[421.67221069 522.78527832]
[405.62475586 511.96105957]
[408.86416626 492.04098511]
[402.94366455 478.25881958]
[397.02319336 464.47668457]
[383.13711548 459.21240234]
[376.93655396 445.31970215]
[382.55233765 430.79037476]
[376.63183594 417.00823975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 199]
[4 198]
[5 197]
[6 196]
[11 192]
[12 191]
[13 190]
[14 189]
[15 188]
[17 187]
[18 186]
[19 185]
[23 182]
[24 181]
[25 180]
[26 179]
[32 98]
[33 97]
[34 96]
[36 95]
[37 94]
[38 93]
[39 92]
[40 91]
[42 89]
[43 88]
[46 86]
[47 85]
[52 80]
[53 79]
[55 77]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[104 126]
[105 125]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[127 169]
[128 168]
[129 167]
[130 166]
[131 165]
[133 164]
[134 163]
[135 162]
[137 160]
[141 156]
[142 155]
[143 154]
[144 153]
[206 228]
[207 227]
[208 226]
[209 225]
[210 224]
[211 223]
[213 222]
[214 221]
[237 270]
[238 269]
[241 266]
[242 265]
[243 264]
[247 262]
[248 261]
[249 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
