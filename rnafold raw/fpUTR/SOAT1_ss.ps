%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAGGAUGCUCAGCCGGAGGUGGCCCUGCGCGUGACGCAGCGGUGCUCGGAGGCAGGGGGCGUAGGGGCCGGGCUGUCCGGCGCUUUAGCUUAGCAGGCGACGUUGCGGGCCCUGGGCGCCAGGAGAGCUUCCCGGAGUCGACCUUCCUGCUGGCUGCUCUGUGACCGCUUCCCGGCUCUGCCCUCUUGGCCGAAGUGCCCGCUGCCGGGCGCGGGCCUCAGACAAUACA\
) } def
/len { sequence length } bind def

/coor [
[108.62496948 687.97204590]
[97.50556183 698.03973389]
[84.02309418 704.61419678]
[69.24340057 707.17553711]
[54.33488464 705.52142334]
[40.47613144 699.78253174]
[28.76273918 690.41253662]
[20.12070274 678.15222168]
[15.23320961 663.97082520]
[14.48695946 648.98590088]
[8.55958080 662.76513672]
[2.63220286 676.54431152]
[7.21070242 691.92016602]
[-2.07385731 705.00360107]
[-18.09915733 705.75811768]
[-28.57195854 693.60498047]
[-25.45842361 677.86694336]
[-11.14699078 670.61694336]
[-5.21961308 656.83770752]
[0.70776498 643.05853271]
[4.72069025 628.60528564]
[-1.22759795 614.95001221]
[8.30189514 602.32067871]
[10.32689571 587.45800781]
[12.35189533 572.59533691]
[14.37689590 557.73266602]
[16.40189552 542.86993408]
[14.19379711 535.82849121]
[18.55626297 527.82025146]
[20.78233147 512.98632812]
[23.00840187 498.15246582]
[25.23447037 483.31854248]
[19.47163391 469.58395386]
[29.17126465 457.08483887]
[31.39733505 442.25094604]
[29.33873367 437.95632935]
[29.94588089 432.32440186]
[33.88978577 427.04766846]
[36.51673126 412.27951050]
[39.14367676 397.51132202]
[41.77062225 382.74313354]
[44.39756775 367.97494507]
[47.02451324 353.20678711]
[49.65145874 338.43859863]
[47.73115540 331.31326294]
[52.41526031 323.48880005]
[55.24193954 308.75753784]
[50.04165649 294.80023193]
[60.24091339 282.70538330]
[49.93881226 271.98135376]
[47.90280914 257.07098389]
[55.12136459 243.66406250]
[69.01074219 237.00137329]
[71.83741760 222.27012634]
[74.66410065 207.53886414]
[77.29104614 192.77069092]
[79.71777344 177.96829224]
[82.14450836 163.16589355]
[84.57123566 148.36349487]
[86.99796295 133.56109619]
[89.42469788 118.75869751]
[91.85142517 103.95629883]
[90.07904816 100.54969788]
[89.80962372 96.38044739]
[91.34956360 92.13400269]
[94.68907166 88.60707855]
[97.71496582 73.91545105]
[100.74085999 59.22381973]
[103.76675415 44.53219223]
[106.79265594 29.84056282]
[109.81855011 15.14893341]
[112.84444427 0.45730457]
[115.87033844 -14.23432446]
[118.89623260 -28.92595291]
[110.47149658 -42.02791977]
[113.74947357 -56.88421631]
[126.29211426 -64.83517456]
[124.58144379 -71.19692230]
[126.10200500 -76.65357208]
[129.60400391 -79.88121033]
[133.02662659 -94.48551178]
[136.44924927 -109.08981323]
[139.77291870 -123.71695709]
[142.99748230 -138.36625671]
[146.22203064 -153.01557922]
[135.41870117 -168.59231567]
[139.37892151 -186.80328369]
[155.12562561 -196.15983582]
[157.95230103 -210.89109802]
[160.77897644 -225.62236023]
[163.60566711 -240.35360718]
[166.43234253 -255.08486938]
[164.97705078 -264.08737183]
[169.39831543 -269.99584961]
[172.42422485 -284.68750000]
[175.45011902 -299.37911987]
[178.47601318 -314.07073975]
[181.50190735 -328.76235962]
[184.52780151 -343.45401001]
[187.05470276 -358.23962402]
[189.07969666 -373.10232544]
[191.10469055 -387.96499634]
[193.12969971 -402.82769775]
[184.24250793 -410.69769287]
[180.29173279 -421.76483154]
[182.14788818 -433.24719238]
[189.23690796 -442.31710815]
[199.71069336 -446.79754639]
[202.13742065 -461.59994507]
[204.56414795 -476.40234375]
[206.99087524 -491.20474243]
[208.91520691 -506.08078003]
[210.23377991 -521.02270508]
[211.45117188 -535.97326660]
[212.66854858 -550.92376709]
[213.88592529 -565.87426758]
[215.10330200 -580.82482910]
[210.36239624 -597.10241699]
[224.69143677 -606.16412354]
[237.36570740 -594.90356445]
[230.05381775 -579.60742188]
[228.83644104 -564.65692139]
[227.61906433 -549.70635986]
[226.40168762 -534.75585938]
[225.18429565 -519.80535889]
[227.77038574 -512.89373779]
[223.84786987 -504.66107178]
[236.85505676 -512.13189697]
[250.85630798 -506.74996948]
[255.51055908 -492.49032593]
[247.38026428 -479.88482666]
[232.47030640 -478.24368286]
[221.79327393 -488.77801514]
[219.36654663 -473.97561646]
[216.93981934 -459.17321777]
[214.51309204 -444.37081909]
[226.06729126 -430.15802002]
[223.50460815 -411.69845581]
[207.99238586 -400.80267334]
[205.96737671 -385.94000244]
[203.94238281 -371.07730103]
[201.91737366 -356.21463013]
[215.21725464 -363.15103149]
[228.98837280 -357.20492554]
[233.05966187 -342.76800537]
[224.42413330 -330.50311279]
[209.45982361 -329.46887207]
[199.21943665 -340.42810059]
[196.19352722 -325.73648071]
[193.16763306 -311.04486084]
[190.14173889 -296.35321045]
[187.11584473 -281.66159058]
[184.08995056 -266.96997070]
[181.16358948 -252.25817871]
[178.33691406 -237.52693176]
[175.51023865 -222.79566956]
[172.68356323 -208.06442261]
[169.85687256 -193.33316040]
[178.14311218 -185.51570129]
[181.66957092 -174.55752563]
[179.45222473 -163.13941956]
[171.92733765 -154.11355591]
[160.87133789 -149.79101562]
[157.64678955 -135.14170837]
[154.42222595 -120.49240112]
[156.05157471 -113.29495239]
[151.05355835 -105.66719055]
[147.63093567 -91.06288910]
[144.20829773 -76.45858765]
[140.98374939 -61.80927658]
[149.36369324 -49.54909515]
[146.50428772 -34.60658646]
[133.58786011 -25.90005684]
[130.56196594 -11.20842838]
[127.53607178 3.48320031]
[124.51017761 18.17482948]
[121.48428345 32.86645889]
[118.45838928 47.55808640]
[115.43248749 62.24971390]
[112.40659332 76.94134521]
[109.38069916 91.63297272]
[106.65382385 106.38302612]
[104.22709656 121.18542480]
[101.80036163 135.98782349]
[99.37363434 150.79022217]
[96.94690704 165.59262085]
[94.52017212 180.39501953]
[92.09344482 195.19741821]
[94.06108093 201.48443604]
[92.76338196 206.99833679]
[89.39535522 210.36553955]
[86.56867981 225.09680176]
[83.74199677 239.82806396]
[94.17878723 251.15852356]
[95.92224121 266.28512573]
[88.51194763 279.38290405]
[74.97216797 285.53204346]
[79.97026825 300.54302979]
[69.97319794 311.58422852]
[67.14651489 326.31549072]
[64.41963959 341.06555176]
[61.79269409 355.83370972]
[59.16574860 370.60189819]
[56.53880310 385.37008667]
[53.91185760 400.13827515]
[51.28491211 414.90643311]
[48.65796661 429.67462158]
[46.23123550 444.47702026]
[44.00516510 459.31091309]
[49.60877991 474.10653687]
[40.06837082 485.54461670]
[37.84230042 500.37850952]
[35.61623383 515.21240234]
[33.39016342 530.04632568]
[31.26457977 544.89495850]
[29.23958015 559.75762939]
[27.21458054 574.62030029]
[25.18957901 589.48303223]
[23.16457939 604.34570312]
[28.96802521 619.06408691]
[19.58337402 630.63031006]
[27.94598389 618.17773438]
[39.44451904 608.54528809]
[53.16996384 602.49450684]
[68.03726196 600.50366211]
[82.87109375 602.73022461]
[96.49877167 608.99810791]
[107.84297180 618.81182861]
[116.00688934 631.39556885]
[120.34511566 645.75451660]
[120.51470947 660.75354004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 20]
[11 19]
[12 18]
[21 221]
[23 219]
[24 218]
[25 217]
[26 216]
[27 215]
[29 214]
[30 213]
[31 212]
[32 211]
[34 209]
[35 208]
[38 207]
[39 206]
[40 205]
[41 204]
[42 203]
[43 202]
[44 201]
[46 200]
[47 199]
[49 197]
[53 193]
[54 192]
[55 191]
[56 188]
[57 187]
[58 186]
[59 185]
[60 184]
[61 183]
[62 182]
[66 181]
[67 180]
[68 179]
[69 178]
[70 177]
[71 176]
[72 175]
[73 174]
[74 173]
[77 170]
[80 169]
[81 168]
[82 167]
[83 165]
[84 164]
[85 163]
[88 158]
[89 157]
[90 156]
[91 155]
[92 154]
[94 153]
[95 152]
[96 151]
[97 150]
[98 149]
[99 148]
[100 142]
[101 141]
[102 140]
[103 139]
[108 136]
[109 135]
[110 134]
[111 133]
[112 127]
[113 125]
[114 124]
[115 123]
[116 122]
[117 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
