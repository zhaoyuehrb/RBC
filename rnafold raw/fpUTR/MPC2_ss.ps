%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCCCCUCCCCCACUCUAGGCGGCGACCUCAGCGCCUCCGCCCCGGGGCCCCCGCUCACCCAGGUAUCGACUCCGCAGCCGGGACGGGUCCUCCAGCCCGAGGGACCUUUUCCUCACGUCCCACAACAGCCAGGGACGAGAACACAGCCACGCUCCCACCCGGCUGCCAACGAUCCCUCGGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[-245.49501038 390.57464600]
[-259.64212036 395.70526123]
[-273.92663574 391.57113647]
[-285.65411377 400.92349243]
[-297.38159180 410.27584839]
[-309.10903931 419.62820435]
[-320.83651733 428.98052979]
[-316.97082520 438.05264282]
[-315.09072876 447.72387695]
[-315.27572632 457.56536865]
[-317.51382446 467.14141846]
[-321.70227051 476.02902222]
[-327.65216064 483.83621216]
[-335.09707642 490.21972656]
[-343.70492554 494.89978027]
[-353.09280396 497.67251587]
[-362.84396362 498.41885376]
[-372.52648926 497.10946655]
[-381.71212769 493.80615234]
[-389.99551392 488.65869141]
[-397.01196289 481.89822388]
[-409.87588501 489.61312866]
[-417.73135376 503.34637451]
[-432.62567139 503.25686646]
[-445.48962402 510.97174072]
[-458.35354614 518.68664551]
[-471.21746826 526.40148926]
[-473.49771118 541.87194824]
[-485.22296143 552.21856689]
[-500.85690308 552.55603027]
[-513.01763916 542.72497559]
[-515.96331787 527.36730957]
[-508.30300903 513.73449707]
[-493.65368652 508.26351929]
[-478.93234253 513.53759766]
[-466.06842041 505.82269287]
[-453.20449829 498.10781860]
[-440.34057617 490.39294434]
[-433.40521240 477.21148682]
[-417.59075928 476.74917603]
[-404.72683716 469.03430176]
[-407.97201538 448.72753906]
[-402.09698486 428.97357178]
[-388.22195435 413.67449951]
[-369.05136108 405.86987305]
[-348.34677124 407.13278198]
[-330.18887329 417.25305176]
[-318.46139526 407.90072632]
[-306.73391724 398.54837036]
[-295.00643921 389.19601440]
[-283.27899170 379.84368896]
[-284.13082886 364.99737549]
[-275.98083496 352.34664917]
[-261.77832031 346.85647583]
[-246.89427185 350.82785034]
[-235.16679382 341.47549438]
[-223.43933105 332.12313843]
[-220.16381836 325.48205566]
[-211.43830872 322.71475220]
[-206.08012390 308.81732178]
[-190.42626953 306.52218628]
[-178.54496765 297.36605835]
[-173.18678284 283.46859741]
[-157.53294373 281.17349243]
[-145.65164185 272.01736450]
[-133.77033997 262.86123657]
[-128.41213989 248.96377563]
[-112.75830078 246.66864014]
[-100.87699890 237.51251221]
[-88.99569702 228.35638428]
[-77.11439514 219.20025635]
[-79.25370026 207.22882080]
[-76.07413483 195.41592407]
[-68.12136078 186.02545166]
[-56.86180496 180.88414001]
[-44.41253281 181.02627563]
[-33.14324570 186.48631287]
[-20.96417618 177.73016357]
[-8.78510666 168.97401428]
[3.39396358 160.21784973]
[15.57303333 151.46170044]
[27.75210381 142.70553589]
[39.93117523 133.94938660]
[52.11024475 125.19322968]
[64.28931427 116.43707275]
[59.22549820 93.88648987]
[67.81877136 71.25687408]
[88.34577942 56.46608353]
[88.34577942 41.46608353]
[88.34577942 26.46608353]
[88.34577942 11.46608257]
[76.99463654 0.46939236]
[76.82754517 -15.33401299]
[87.94363403 -26.56825447]
[103.74792480 -26.56825447]
[114.86400604 -15.33401299]
[114.69691467 0.46939236]
[103.34577942 11.46608257]
[103.34577942 26.46608353]
[103.34577942 41.46608353]
[103.34577942 56.46608353]
[117.88193512 60.16744232]
[125.05574799 46.99412155]
[132.22955322 33.82079697]
[139.40336609 20.64747238]
[146.57717896 7.47414923]
[153.75099182 -5.69917440]
[152.80145264 -22.07080841]
[166.65170288 -30.85161972]
[181.05378723 -23.00866318]
[181.19207764 -6.61009884]
[166.92430115 1.47463524]
[159.75050354 14.64795876]
[152.57669067 27.82128334]
[145.40287781 40.99460602]
[138.22906494 54.16793060]
[131.05525208 67.34125519]
[134.68908691 68.36480713]
[138.32756042 69.74623871]
[152.10079956 63.80503845]
[165.87403870 57.86384201]
[179.64727783 51.92264557]
[193.42053223 45.98144913]
[207.19377136 40.04025269]
[208.89710999 24.77610588]
[218.01722717 12.41815853]
[232.10087585 6.29063654]
[247.35961914 8.04181290]
[259.68890381 17.20063019]
[265.77224731 31.30341339]
[263.97326660 46.55658340]
[254.77584839 58.85711288]
[240.65406799 64.89622498]
[225.40660095 63.04942703]
[213.13496399 53.81349564]
[199.36172485 59.75469208]
[185.58848572 65.69589233]
[171.81524658 71.63708496]
[158.04199219 77.57828522]
[144.26875305 83.51947784]
[144.51805115 91.01533508]
[159.50975037 90.51676178]
[173.61366272 85.40991974]
[182.82888794 97.24544525]
[174.42027283 109.66700745]
[160.00833130 105.50846863]
[145.01661682 106.00704956]
[145.26589966 113.50289917]
[159.40344238 118.51587677]
[173.54098511 123.52886200]
[190.49008179 123.12358093]
[195.57150269 139.29811096]
[181.43576050 148.65850830]
[168.52799988 137.66639709]
[154.39047241 132.65342712]
[140.25292969 127.64044189]
[127.42406464 138.07818604]
[112.40934753 143.27836609]
[97.17023468 143.02590942]
[83.54884338 137.78981018]
[73.04547119 128.61614990]
[60.86639786 137.37229919]
[48.68732834 146.12846375]
[36.50825882 154.88461304]
[24.32918930 163.64076233]
[12.15011883 172.39692688]
[-0.02895136 181.15307617]
[-12.20802116 189.90922546]
[-24.38709068 198.66539001]
[-23.92825699 216.77560425]
[-34.32925415 231.41613770]
[-51.28221893 236.84826660]
[-67.95826721 231.08155823]
[-79.83956909 240.23768616]
[-91.72087097 249.39381409]
[-103.60217285 258.54995728]
[-109.81018829 273.10229492]
[-124.61420441 274.74252319]
[-136.49551392 283.89865112]
[-148.37681580 293.05477905]
[-154.58482361 307.60714722]
[-169.38883972 309.24734497]
[-181.27014160 318.40347290]
[-187.47816467 332.95584106]
[-202.28218079 334.59606934]
[-214.08697510 343.85061646]
[-225.81445312 353.20297241]
[-237.54193115 362.55532837]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 51]
[4 50]
[5 49]
[6 48]
[7 47]
[21 41]
[22 40]
[24 38]
[25 37]
[26 36]
[27 35]
[55 188]
[56 187]
[57 186]
[59 185]
[61 183]
[62 182]
[64 180]
[65 179]
[66 178]
[68 176]
[69 175]
[70 174]
[71 173]
[77 169]
[78 168]
[79 167]
[80 166]
[81 165]
[82 164]
[83 163]
[84 162]
[85 161]
[88 101]
[89 100]
[90 99]
[91 98]
[102 117]
[103 116]
[104 115]
[105 114]
[106 113]
[107 112]
[119 140]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[148 156]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
