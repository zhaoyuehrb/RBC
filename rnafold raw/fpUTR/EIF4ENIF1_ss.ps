%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGGGGGAGGGGGCCGAAGAGGAGGGGCGGAGGGCCGGGCUGCAGUUACGGCGGCUGAAGAGAGACAGCCCAAGCCGGUCGGGGUGGGGGCGCGAGAGCGAAGGCUGCGGGGAGCGGCGCUGGGACCGGUGCGGGCAGCGGGGAGGGGAGCGGCGGCCGAGGCAAAGGGCCGCCGAGCGGCGGAGGCACCGAGUGCAGAGCAUUGUAGACCAAGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[156.68659973 117.92013550]
[153.74285889 125.42059326]
[149.81196594 132.45411682]
[144.96611023 138.89152527]
[139.29431152 144.61454773]
[132.90075684 149.51809692]
[125.90286255 153.51208496]
[118.42918396 156.52316284]
[110.61699677 158.49598694]
[102.60978699 159.39436340]
[94.55464935 159.20176697]
[86.59952545 157.92175293]
[78.89054871 155.57780457]
[71.56930542 152.21299744]
[64.77029419 147.88914490]
[54.42837906 158.75398254]
[44.08646774 169.61883545]
[33.74455643 180.48367310]
[38.38700867 193.67372131]
[36.90251541 207.51136780]
[29.63725281 219.30387878]
[18.05671120 226.78118896]
[4.45039988 228.53285217]
[-8.52069473 224.27372742]
[-8.10311317 240.07249451]
[-19.03972244 251.48153687]
[-34.84202576 251.73205566]
[-46.13479614 240.67543030]
[-46.21823502 224.87136841]
[-35.04283905 213.69612122]
[-19.23877144 213.77978516]
[-23.96462250 198.32310486]
[-20.22675323 182.50173950]
[-8.95374298 170.65818787]
[6.84443855 166.09220886]
[22.87971115 170.14175415]
[33.22162247 159.27691650]
[43.56353760 148.41207886]
[53.90544891 137.54722595]
[38.52298737 123.00862122]
[28.20685196 102.34761810]
[13.40327644 104.76715851]
[-1.40029860 107.18669891]
[-16.20387268 109.60623169]
[-31.00744820 112.02577209]
[-45.81102371 114.44531250]
[-53.64270401 127.98040771]
[-68.35986328 133.26615906]
[-83.01351166 127.80680084]
[-90.68464661 114.18006897]
[-87.75118256 98.82009888]
[-75.59822083 88.97938538]
[-59.96401978 89.30442810]
[-48.23056412 99.64173889]
[-33.42698669 97.22219849]
[-18.62341309 94.80265808]
[-3.81983757 92.38311768]
[10.98373795 89.96358490]
[25.78731155 87.54404449]
[27.97392464 80.36987305]
[13.62558270 75.99665070]
[-0.72275871 71.62342072]
[-15.07110023 67.25019836]
[-30.06858826 67.52471161]
[-34.96396637 53.34601974]
[-22.99187088 44.30893326]
[-10.69787598 52.90185928]
[3.65046573 57.27508163]
[17.99880791 61.64830780]
[32.34714890 66.02153015]
[34.53376007 58.84735870]
[23.59633827 48.58223343]
[12.65891647 38.31710815]
[1.72149479 28.05198479]
[-13.85194778 28.37701035]
[-24.79781914 17.81090736]
[-25.01170731 2.96200609]
[-35.94913101 -7.30311918]
[-46.88655090 -17.56824493]
[-62.67297363 -16.81692505]
[-74.31055450 -27.51001740]
[-74.89492798 -43.30349731]
[-64.07939911 -54.82737732]
[-48.28062057 -55.24473953]
[-36.87173080 -44.30797195]
[-36.62142563 -28.50566673]
[-25.68400574 -18.24054146]
[-14.74658298 -7.97541618]
[0.08603930 -8.70267677]
[11.32437134 1.55181205]
[11.98661995 17.11456108]
[22.92404175 27.37968636]
[33.86146545 37.64481354]
[44.79888535 47.90993881]
[57.24887466 39.54346848]
[51.87664413 25.53849983]
[38.80085754 15.64123344]
[41.10246658 -0.59559625]
[56.41376877 -6.46893024]
[68.98381042 4.06321430]
[65.88161469 20.16626930]
[71.25384521 34.17123795]
[102.02000427 31.29312706]
[129.75781250 41.49109268]
[149.44296265 61.69235611]
[158.04379272 87.13840485]
[172.98094177 85.76676178]
[187.91809082 84.39511108]
[202.85525513 83.02346039]
[215.89007568 74.05664825]
[229.27156067 80.59770966]
[239.36180115 68.73075104]
[254.52973938 67.55249023]
[265.78088379 77.24513245]
[280.71804810 75.87348938]
[296.64898682 63.51239395]
[313.83496094 72.38508606]
[328.72753906 70.59317017]
[343.62011719 68.80126190]
[358.51269531 67.00934601]
[371.28976440 57.67887497]
[384.85018921 63.84035873]
[399.74276733 62.04844666]
[414.63534546 60.25653458]
[429.11358643 48.87184525]
[444.96859741 56.40283203]
[457.61294556 46.89329147]
[471.25881958 52.86313248]
[486.12469482 50.86159897]
[500.97607422 48.75540161]
[515.81225586 46.54464722]
[530.64843750 44.33389282]
[545.48468018 42.12313843]
[560.32086182 39.91238403]
[575.15704346 37.70162964]
[579.60479736 24.44466972]
[589.28295898 14.44379234]
[602.26300049 9.60988331]
[615.99340820 10.83232498]
[627.80139160 17.81594658]
[635.41302490 29.14965439]
[650.27886963 27.14812279]
[662.92321777 17.63858032]
[676.56909180 23.60841942]
[678.68908691 16.20916176]
[682.69244385 9.66674042]
[688.27661133 4.44801521]
[695.02691650 0.92087710]
[702.44726562 -0.67166394]
[709.99670410 -0.22817807]
[717.12860107 2.20484805]
[723.33062744 6.43742037]
[728.16107178 12.15079689]
[731.28076172 18.92145729]
[746.27142334 18.39327240]
[761.26214600 17.86508751]
[776.25280762 17.33690071]
[791.24353027 16.80871582]
[806.23419189 16.28053093]
[821.22491455 15.75234509]
[836.21563721 15.22415924]
[844.00555420 1.90797126]
[857.76843262 -5.06239843]
[873.11260986 -3.46272993]
[885.14184570 6.19652796]
[890.01763916 20.83314133]
[886.18408203 35.77661896]
[874.86450195 46.25855637]
[859.67095947 48.93419647]
[845.45159912 42.94976044]
[836.74377441 30.21485710]
[821.75311279 30.74304199]
[806.76239014 31.27122879]
[791.77172852 31.79941368]
[776.78100586 32.32759857]
[761.79034424 32.85578537]
[746.79962158 33.38396835]
[731.80889893 33.91215515]
[718.29223633 51.94301987]
[695.58599854 54.06014252]
[678.57061768 38.47428131]
[666.98962402 47.84066010]
[652.28039551 42.01398468]
[637.41455078 44.01551819]
[631.63903809 59.11140060]
[618.96411133 69.29144287]
[602.79187012 71.70165253]
[587.52490234 65.59008789]
[577.36779785 52.53781891]
[562.53161621 54.74857330]
[547.69543457 56.95932770]
[532.85919189 59.17008209]
[518.02301025 61.38084030]
[503.18682861 63.59159470]
[497.03976440 67.68276978]
[488.12622070 65.72746277]
[473.26034546 67.72899628]
[461.67932129 77.09537506]
[446.97012329 71.26869202]
[439.39218140 80.69040680]
[427.02987671 82.48395538]
[416.42727661 75.14911652]
[401.53469849 76.94103241]
[386.64208984 78.73294067]
[374.93026733 87.93524170]
[360.30462646 81.90193176]
[345.41204834 83.69384766]
[330.51943970 85.48575592]
[315.62686157 87.27767181]
[310.07189941 95.84136200]
[300.52142334 100.02600098]
[290.02731323 98.23108673]
[282.08969116 90.81063843]
[267.15252686 92.18228912]
[257.85476685 103.76189423]
[242.72590637 105.36572266]
[230.64320374 95.53486633]
[218.67677307 104.40357208]
[204.22689819 97.96061707]
[189.28974915 99.33226776]
[174.35258484 100.70391083]
[159.41543579 102.07556152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 39]
[16 38]
[17 37]
[18 36]
[24 31]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[71 94]
[72 93]
[73 92]
[74 91]
[77 88]
[78 87]
[79 86]
[95 102]
[96 101]
[106 222]
[107 221]
[108 220]
[109 219]
[111 217]
[114 214]
[115 213]
[117 209]
[118 208]
[119 207]
[120 206]
[122 204]
[123 203]
[124 202]
[126 199]
[128 197]
[129 196]
[130 194]
[131 193]
[132 192]
[133 191]
[134 190]
[135 189]
[141 184]
[142 183]
[144 181]
[154 178]
[155 177]
[156 176]
[157 175]
[158 174]
[159 173]
[160 172]
[161 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
