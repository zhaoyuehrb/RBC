%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGGCCAGGCGCGCGGCGGCCCCGGGCUUUGUGUGUGUGUGUAUGUGUGUGUGUGUGUGUGUGUGUGUGUGAGUGUGUGCGUGUGAGAGUGCGAGUGUCUGUGCGCGAGUGAGUGAGCGGCGGGCGGGCGCGAGUGUGGCCGCCGCGGAGCGCGAGCAGGACCCGGCGGGCGCGCUCCCCAGCCUCCGUCUCCCCGCCGGAACC\
) } def
/len { sequence length } bind def

/coor [
[138.06530762 190.38873291]
[145.09313965 182.35441589]
[140.39297485 168.10981750]
[135.69282532 153.86521912]
[130.99266052 139.62062073]
[126.29250336 125.37602997]
[94.15812683 135.03509521]
[68.74828339 114.60654449]
[56.23685455 122.88085175]
[48.99425125 136.94696045]
[34.11043930 137.51393127]
[21.59901237 145.78823853]
[9.08758450 154.06256104]
[-3.42384338 162.33686829]
[-15.93527126 170.61117554]
[-28.44669914 178.88548279]
[-40.95812607 187.15979004]
[-41.76721954 202.54327393]
[-51.36724091 214.36244202]
[-65.91397095 218.21688843]
[-79.77507019 212.83099365]
[-92.28649902 221.10530090]
[-104.73477936 229.47430420]
[-111.76307678 243.64871216]
[-126.63656616 244.44149780]
[-139.02098083 252.90472412]
[-146.04928589 267.07913208]
[-160.92277527 267.87191772]
[-173.30718994 276.33514404]
[-177.67384338 291.77252197]
[-192.52101135 297.85043335]
[-206.45919800 289.90649414]
[-208.79623413 274.03457642]
[-197.73933411 262.41027832]
[-181.77041626 263.95074463]
[-169.38600159 255.48750305]
[-163.24351501 241.91845703]
[-147.48420715 240.52030945]
[-135.09979248 232.05708313]
[-128.95732117 218.48803711]
[-113.19800568 217.08988953]
[-109.44801331 210.71852112]
[-100.56080627 208.59387207]
[-88.04937744 200.31956482]
[-87.57987976 185.45626831]
[-78.33898163 173.57897949]
[-63.70514297 169.37133789]
[-49.23243332 174.64836121]
[-36.72100830 166.37405396]
[-24.20957947 158.09974670]
[-11.69815159 149.82543945]
[0.81327605 141.55113220]
[13.32470417 133.27682495]
[25.83613205 125.00251007]
[32.18383408 111.52824402]
[47.96254349 110.36942291]
[60.47397232 102.09511566]
[45.52724838 103.35820770]
[30.58052063 104.62129974]
[15.63379574 105.88439178]
[2.92998767 113.86018372]
[-11.70015049 117.17063141]
[-26.60008430 115.44090271]
[-40.08273315 108.86685181]
[-50.62149429 98.19284058]
[-57.02308655 84.62745667]
[-58.56267548 69.70667267]
[-55.06593704 55.11994171]
[-46.92880249 42.51886749]
[-35.07261276 33.33024597]
[-20.83981323 28.59448051]
[-5.84195328 28.84778595]
[8.22280312 34.06148148]
[19.76193810 43.64523697]
[27.46759605 56.51054382]
[40.21779633 64.41196442]
[52.96799469 72.31338501]
[65.71819305 80.21480560]
[58.31698227 67.16788483]
[50.91577530 54.12096405]
[43.51456451 41.07404709]
[36.11335754 28.02712631]
[20.67952538 26.42197609]
[9.15930557 16.02658463]
[5.98245525 0.83819282]
[12.37053871 -13.30295372]
[25.86720848 -20.95929527]
[41.28271866 -19.18681145]
[52.68948746 -8.66705894]
[55.70138550 6.55490160]
[49.16027451 20.62591743]
[56.56148529 33.67283630]
[63.96269226 46.71975708]
[71.36389923 59.76667404]
[78.76511383 72.81359100]
[103.46714020 64.65082550]
[127.65982056 76.12170410]
[132.79013062 62.02631760]
[137.92042542 47.93092728]
[143.05073547 33.83554077]
[148.18103027 19.74015045]
[153.31134033 5.64476061]
[158.44163513 -8.45062923]
[163.57194519 -22.54601860]
[161.02119446 -38.16025162]
[172.64486694 -47.47366333]
[177.77516174 -61.56904984]
[182.90545654 -75.66444397]
[178.17140198 -87.66462708]
[182.73695374 -99.30033875]
[193.64611816 -104.53144073]
[198.98974609 -118.54734802]
[192.30078125 -132.86633301]
[197.77449036 -147.69247437]
[212.16339111 -154.22966003]
[226.93083191 -148.59951782]
[233.31552124 -134.14228821]
[227.52955627 -119.43521881]
[213.00564575 -113.20372772]
[207.66201782 -99.18782043]
[211.37751770 -82.03803253]
[197.00085449 -70.53414154]
[191.87054443 -56.43874741]
[186.74024963 -42.34336090]
[189.65794373 -27.73732376]
[177.66732788 -17.41571617]
[172.53703308 -3.32032681]
[167.40672302 10.77506256]
[162.27642822 24.87045097]
[157.14611816 38.96583939]
[152.01582336 53.06122971]
[146.88551331 67.15661621]
[141.75521851 81.25200653]
[150.12422180 93.70028687]
[165.11343384 94.26927948]
[180.10263062 94.83827209]
[195.09184265 95.40726471]
[210.08103943 95.97625732]
[225.07025146 96.54524994]
[240.05944824 97.11424255]
[254.14318848 89.90599060]
[266.56781006 98.12050629]
[281.55700684 98.68949890]
[296.54620361 99.25849152]
[311.53540039 99.82748413]
[326.52462769 100.39647675]
[341.51382446 100.96546936]
[350.21115112 98.16316223]
[356.72570801 101.65854645]
[371.70452881 102.45495605]
[383.40039062 92.16687012]
[398.57971191 93.18791199]
[408.31576538 104.40152740]
[418.85629272 92.85028839]
[434.36257935 90.82810211]
[447.51303101 99.28978729]
[452.09835815 114.23998260]
[445.95358276 128.61967468]
[431.98004150 135.63920593]
[416.77560425 131.98417664]
[407.51934814 119.38037109]
[396.64913940 129.49836731]
[381.44711304 128.90408325]
[370.90814209 117.43379974]
[355.92929077 116.63739014]
[340.94482422 115.95467377]
[325.95562744 115.38568115]
[310.96643066 114.81668854]
[295.97723389 114.24769592]
[280.98800659 113.67870331]
[265.99880981 113.10971069]
[252.98719788 120.35865784]
[239.49046326 112.10344696]
[224.50125122 111.53445435]
[209.51205444 110.96546173]
[194.52284241 110.39646912]
[179.53364563 109.82747650]
[164.54443359 109.25848389]
[149.55523682 108.68949127]
[140.53709412 120.67587280]
[145.23725891 134.92047119]
[149.93742371 149.16506958]
[154.63757324 163.40965271]
[159.33773804 177.65425110]
[177.73364258 185.72602844]
[184.16807556 204.43411255]
[174.91877747 221.57652283]
[180.26240540 235.59242249]
[185.60603333 249.60833740]
[190.94964600 263.62423706]
[203.09553528 273.76269531]
[200.39982605 288.41131592]
[214.39425659 296.25579834]
[216.84426880 312.11065674]
[205.87045288 323.81344604]
[189.89096069 322.38674927]
[181.16389465 308.92501831]
[186.38392639 293.75494385]
[174.62025452 284.61901855]
[176.93374634 268.96786499]
[171.59011841 254.95195007]
[166.24649048 240.93605042]
[160.90286255 226.92013550]
[150.74540710 225.40101624]
[142.06813049 219.75723267]
[136.47451782 210.95169067]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 184]
[3 183]
[4 182]
[5 181]
[6 180]
[8 57]
[9 56]
[11 54]
[12 53]
[13 52]
[14 51]
[15 50]
[16 49]
[17 48]
[21 44]
[22 43]
[23 41]
[25 39]
[26 38]
[28 36]
[29 35]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[97 133]
[98 132]
[99 131]
[100 130]
[101 129]
[102 128]
[103 127]
[104 126]
[106 124]
[107 123]
[108 122]
[111 120]
[112 119]
[134 179]
[135 178]
[136 177]
[137 176]
[138 175]
[139 174]
[140 173]
[142 171]
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[149 165]
[150 164]
[153 161]
[187 203]
[188 202]
[189 201]
[190 200]
[192 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
