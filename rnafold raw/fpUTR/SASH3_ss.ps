%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUGCUGCUGCUGCCGGGUGUCCAUGGCCCGCACCCCCAAGCUGCCACUGCAGCAGUCAGAGUGGCAGCUGAAGGCUCGGUUCAUGCCGUGCCCCCGGGCAGUUCUGGUGAGGCUAAGCAAGAGGCCUCUGCAUCUUGACACCUAGGAGAGCAGGGACGGAGUCUCCCAGGGUGGAGGACC\
) } def
/len { sequence length } bind def

/coor [
[222.22677612 438.74023438]
[216.45680237 424.89440918]
[210.96794128 419.91726685]
[210.70887756 410.76101685]
[198.82351685 401.78393555]
[200.92652893 386.10311890]
[195.39509583 372.16027832]
[189.86364746 358.21743774]
[184.33219910 344.27456665]
[178.80075073 330.33172607]
[173.39814758 325.26107788]
[173.29629517 316.10174561]
[168.00502014 302.06597900]
[156.27552795 292.88623047]
[158.64739990 277.24380493]
[146.91790771 268.06402588]
[149.28979492 252.42164612]
[143.99850464 238.38587952]
[138.70722961 224.35012817]
[133.41595459 210.31437683]
[128.12466431 196.27862549]
[122.83338165 182.24287415]
[117.54210663 168.20712280]
[101.72834778 157.10510254]
[105.23812103 137.27108765]
[99.46814728 123.42524719]
[93.69817352 109.57940674]
[84.49032593 97.73813629]
[72.49273682 88.73492432]
[60.49515152 79.73171234]
[48.49756241 70.72849274]
[36.49997330 61.72528076]
[28.09098816 67.23902130]
[18.53433990 70.29232788]
[8.53196621 70.67382050]
[-1.18490064 68.36787415]
[-9.90918827 63.55491257]
[-17.00943375 56.59730911]
[-21.97548676 48.01214218]
[-24.45515442 38.43278122]
[-24.27914810 28.56216812]
[-38.35980225 23.39155769]
[-52.44045639 18.22094727]
[-66.52111053 13.05033684]
[-80.60176086 7.87972593]
[-94.68241119 2.70911527]
[-108.76306915 -2.46149540]
[-122.84371948 -7.63210630]
[-136.92437744 -12.80271721]
[-151.00502014 -17.97332764]
[-162.31060791 -7.65623522]
[-177.11872864 -3.78608775]
[-192.02659607 -7.25221729]
[-203.60848999 -17.25813293]
[-209.20297241 -31.50454712]
[-207.52447510 -46.71773911]
[-198.95870972 -59.40182877]
[-185.47401428 -66.64210510]
[-170.16908264 -66.77481079]
[-156.56086731 -59.76943970]
[-147.77644348 -47.23578262]
[-145.83441162 -32.05398178]
[-131.75375366 -26.88336945]
[-117.67311096 -21.71275902]
[-103.59245300 -16.54214859]
[-89.51180267 -11.37153721]
[-75.43115234 -6.20092678]
[-61.35049820 -1.03031600]
[-47.26984406 4.14029455]
[-33.18918991 9.31090546]
[-19.10853767 14.48151588]
[-16.08013344 10.32390404]
[-12.49711037 6.63352203]
[-8.43069172 3.48372650]
[-3.96170878 0.93712813]
[-7.53220797 -13.63172722]
[-11.10270691 -28.20058250]
[-21.90251541 -39.76235962]
[-17.41712189 -53.96554947]
[-20.98762131 -68.53440094]
[-24.55812073 -83.10325623]
[-28.12861824 -97.67211151]
[-39.85762787 -109.13345337]
[-35.53472519 -124.95257568]
[-19.60693741 -128.85610962]
[-8.45941067 -116.82845306]
[-13.55976391 -101.24261475]
[-9.98926449 -86.67375946]
[-6.41876602 -72.10490417]
[-2.84826660 -57.53604507]
[7.69615459 -47.01633072]
[3.46614790 -31.77108192]
[7.03664684 -17.20222664]
[10.60714626 -2.63337111]
[34.00759125 4.54812241]
[47.74633789 25.01159859]
[45.50318909 49.72769165]
[57.50077820 58.73090744]
[69.49836731 67.73412323]
[81.49595642 76.73733521]
[93.49354553 85.74054718]
[82.24261475 75.82003784]
[77.76725769 61.50321960]
[81.36503601 46.94107819]
[91.99282074 36.35570908]
[106.56923676 32.81619644]
[120.86804199 37.34877777]
[130.74348450 48.63929367]
[133.33230591 63.41420364]
[127.88391876 77.38972473]
[115.98028564 86.51291656]
[128.56735229 78.35413361]
[141.15441895 70.19535065]
[153.74148560 62.03656769]
[166.32855225 53.87778091]
[178.91561890 45.71899796]
[179.60650635 30.21731186]
[189.30342102 18.10329247]
[204.27769470 14.03502846]
[218.77140808 19.57685089]
[227.21144104 32.59781265]
[226.35243225 48.09109497]
[216.52467346 60.09920502]
[201.50714111 64.00479126]
[187.07440186 58.30606461]
[174.48733521 66.46485138]
[161.90026855 74.62363434]
[149.31320190 82.78241730]
[136.72613525 90.94120026]
[124.13906860 99.09998322]
[118.75880432 102.47202301]
[113.07761383 104.03558350]
[107.54401398 103.80943298]
[113.31398773 117.65527344]
[119.08396912 131.50111389]
[129.39320374 135.06639099]
[135.89346313 143.55102539]
[136.62162781 153.99421692]
[131.57785034 162.91584778]
[136.86914062 176.95159912]
[142.16041565 190.98735046]
[147.45170593 205.02310181]
[152.74298096 219.05885315]
[158.03425598 233.09460449]
[163.32554626 247.13035583]
[175.43350220 257.31405640]
[172.68315125 271.95254517]
[184.79112244 282.13623047]
[182.04077148 296.77471924]
[187.33204651 310.81045532]
[192.74360657 324.80029297]
[198.27505493 338.74313354]
[203.80650330 352.68597412]
[209.33793640 366.62884521]
[214.86938477 380.57168579]
[227.15037537 390.54605103]
[224.65171814 405.22958374]
[230.30264282 419.12442017]
[236.07261658 432.97027588]
[249.04843140 436.63693237]
[257.41491699 446.96188354]
[258.28622437 460.02728271]
[251.56764221 471.03921509]
[257.09909058 484.98205566]
[262.63052368 498.92489624]
[268.16198730 512.86773682]
[280.44296265 522.84210205]
[277.94430542 537.52563477]
[283.47576904 551.46850586]
[289.00720215 565.41137695]
[300.46829224 577.90454102]
[291.63610840 592.37615967]
[275.28500366 587.89532471]
[275.06436157 570.94281006]
[269.53289795 556.99993896]
[264.00146484 543.05706787]
[252.11610413 534.08001709]
[254.21911621 518.39923096]
[248.68768311 504.45635986]
[243.15623474 490.51348877]
[237.62478638 476.57064819]
[221.92257690 470.57882690]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 159]
[2 158]
[4 157]
[6 155]
[7 154]
[8 153]
[9 152]
[10 151]
[12 150]
[13 149]
[15 147]
[17 145]
[18 144]
[19 143]
[20 142]
[21 141]
[22 140]
[23 139]
[25 135]
[26 134]
[27 133]
[28 101]
[29 100]
[30 99]
[31 98]
[32 97]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[46 66]
[47 65]
[48 64]
[49 63]
[50 62]
[75 94]
[76 93]
[77 92]
[79 90]
[80 89]
[81 88]
[82 87]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[163 181]
[164 180]
[165 179]
[166 178]
[168 176]
[169 175]
[170 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
