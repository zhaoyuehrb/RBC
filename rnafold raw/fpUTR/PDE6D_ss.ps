%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGUUCCAGGAGGGCACUGCGAGGCUAGGGGGAAGGAGAAGGGAUCAGAAGCGGGAGCUGAGGGGAGAGAGAGGCCGGUCCUGGUCUGGCCGCUGCGGCUGCUAGCCCGAGGUCUCCAAGCCGGGCUGCGGCUCCAUCCUCGGCUCCUGGGCACCGUCUGCGAGGCUCCGCCGACCAGAGUGAGAAAGCCGCGGGCGGCGACCGCCGCAUC\
) } def
/len { sequence length } bind def

/coor [
[76.73191071 145.35404968]
[84.81159210 132.71722412]
[88.71674347 118.23448181]
[78.34625244 129.07205200]
[67.97576904 139.90962219]
[57.60528183 150.74720764]
[47.23479462 161.58477783]
[36.86430740 172.42234802]
[26.49382210 183.25991821]
[33.98489380 196.36579895]
[37.47592163 211.03668213]
[36.69230270 226.08164978]
[31.70607376 240.28186035]
[22.92940140 252.48931885]
[11.08050728 261.71969604]
[-2.87509203 267.23165894]
[-17.80326080 268.58651733]
[-32.49340820 265.68292236]
[-45.75666809 258.76458740]
[-56.12715530 269.60217285]
[-60.07788467 284.92214966]
[-74.46732330 288.76837158]
[-72.58200073 304.29190063]
[-81.15935516 317.36715698]
[-96.14942169 321.82046509]
[-110.47434998 315.54907227]
[-117.37034607 301.51412964]
[-113.58133698 286.34252930]
[-100.89636230 277.19784546]
[-85.30489349 278.39788818]
[-82.09593201 263.85305786]
[-66.96472931 259.23165894]
[-56.59424210 248.39410400]
[-64.08979797 235.44828796]
[-67.63733673 220.90022278]
[-66.94105530 205.92687988]
[-62.04883575 191.74214172]
[-53.34907913 179.49835205]
[-41.53986740 170.19273376]
[-27.57296181 164.58615112]
[-12.57708359 163.14091492]
[2.23327899 165.98263550]
[15.65624905 172.88943481]
[26.02673531 162.05186462]
[36.39722061 151.21429443]
[46.76770782 140.37670898]
[57.13819504 129.53913879]
[67.50868225 118.70156860]
[77.87916565 107.86399078]
[79.34582520 101.24184418]
[82.53143311 96.06687927]
[86.75234985 92.71150970]
[91.27016449 91.28601074]
[95.38184357 91.64196777]
[93.40575409 76.77269745]
[91.42967224 61.90343094]
[89.45359039 47.03416443]
[87.47750092 32.16489792]
[85.50141907 17.29563141]
[83.52532959 2.42636466]
[81.54924774 -12.44290161]
[79.57316589 -27.31216812]
[77.59707642 -42.18143463]
[75.62099457 -57.05070114]
[73.64490509 -71.91996765]
[71.45075989 -86.75862122]
[69.03901672 -101.56346893]
[66.62727356 -116.36831665]
[64.21553040 -131.17317200]
[49.94880295 -136.68748474]
[40.42063522 -148.52432251]
[38.11193085 -163.44197083]
[43.54376602 -177.41877747]
[55.16400528 -186.73735046]
[52.75226212 -201.54219055]
[42.89679337 -213.91879272]
[48.48710632 -227.72450256]
[46.07536316 -242.52935791]
[43.66362000 -257.33419800]
[41.25187683 -272.13903809]
[38.84013748 -286.94390869]
[35.67122269 -301.60534668]
[31.75349617 -316.08468628]
[27.83577156 -330.56402588]
[23.81187439 -345.01422119]
[19.68201828 -359.43450928]
[8.44423676 -370.57104492]
[12.37838173 -384.93670654]
[8.24852562 -399.35696411]
[4.11866951 -413.77725220]
[-0.01118670 -428.19750977]
[-4.14104271 -442.61779785]
[-15.37882423 -453.75436401]
[-11.44467831 -468.11999512]
[-15.57453442 -482.54028320]
[-27.73695183 -493.54061890]
[-24.02750969 -509.51473999]
[-8.26216412 -514.02978516]
[3.34104943 -502.44113159]
[-1.15426111 -486.67013550]
[2.97559524 -472.24984741]
[13.91798115 -462.14474487]
[10.27923012 -446.74765015]
[14.40908718 -432.32739258]
[18.53894234 -417.90710449]
[22.66879845 -403.48684692]
[26.79865456 -389.06655884]
[37.74104309 -378.96142578]
[34.10229111 -363.56436157]
[38.23214722 -349.14407349]
[43.09457397 -343.58053589]
[42.31511688 -334.48175049]
[46.23284149 -320.00241089]
[50.15056610 -305.52307129]
[57.52776718 -318.58358765]
[71.53022003 -323.96237183]
[85.75395203 -319.19943237]
[93.69380188 -306.47314453]
[91.71849060 -291.60375977]
[80.73143768 -281.39178467]
[65.75751495 -280.50759888]
[53.64498520 -289.35565186]
[56.05672455 -274.55078125]
[58.46846771 -259.74594116]
[60.88021088 -244.94110107]
[63.29195404 -230.13624573]
[72.97491455 -218.81858826]
[67.55710602 -203.95393372]
[69.96884918 -189.14907837]
[83.94583893 -184.00036621]
[93.53282928 -172.47015381]
[96.07807922 -157.59104919]
[90.79933929 -143.34211731]
[79.02037811 -133.58491516]
[81.43212128 -118.78005981]
[83.84386444 -103.97521210]
[86.25560760 -89.17036438]
[89.53771973 -85.70381165]
[90.67845154 -80.13935089]
[88.51417542 -73.89604950]
[90.49025726 -59.02678680]
[92.46634674 -44.15752029]
[94.44242859 -29.28825378]
[96.41851044 -14.41898727]
[98.39459991 0.45027974]
[100.37068176 15.31954670]
[102.34677124 30.18881226]
[104.32285309 45.05807877]
[106.29893494 59.92734528]
[108.27502441 74.79661560]
[110.25110626 89.66587830]
[118.56175995 102.15319824]
[131.51528931 109.71667480]
[144.52397156 117.18486786]
[160.34512329 117.22941589]
[167.62612915 130.22311401]
[180.68928528 137.59562683]
[193.75244141 144.96813965]
[206.81561279 152.34063721]
[219.87876892 159.71315002]
[232.94192505 167.08564758]
[246.00508118 174.45816040]
[259.06823730 181.83067322]
[265.66842651 182.14768982]
[270.40753174 185.27903748]
[272.40206909 189.61621094]
[285.24316406 197.36903381]
[298.08428955 205.12184143]
[311.03781128 212.68531799]
[324.10095215 220.05783081]
[337.21789551 227.33425903]
[350.38784790 234.51420593]
[363.55783081 241.69415283]
[376.78015137 248.77723694]
[392.46673584 245.41406250]
[404.78479004 255.69245911]
[404.28494263 271.72772217]
[391.35064697 281.21896362]
[375.90399170 276.88531494]
[369.79431152 262.05120850]
[362.41290283 261.71786499]
[356.37789917 254.86413574]
[343.20791626 247.68417358]
[330.03793335 240.50422668]
[322.66220093 240.06259155]
[316.72845459 233.12098694]
[303.66528320 225.74847412]
[298.90783691 226.14320374]
[293.85153198 223.55506897]
[290.33145142 217.96293640]
[277.49035645 210.21012878]
[264.64926147 202.45730591]
[251.69573975 194.89382935]
[238.63258362 187.52131653]
[225.56941223 180.14881897]
[212.50625610 172.77630615]
[199.44309998 165.40379333]
[186.37994385 158.03129578]
[173.31677246 150.65878296]
[160.25361633 143.28627014]
[145.36683655 143.76905823]
[137.15147400 130.24803162]
[129.78302002 129.69815063]
[123.95180511 122.67019653]
[110.99828339 115.10671997]
[118.73994446 127.95454407]
[129.98713684 137.87928772]
[135.00791931 152.01406860]
[132.54167175 166.80992126]
[123.20760345 178.55195618]
[109.34931946 184.29199219]
[94.44632721 182.58882141]
[82.24044800 173.87007141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 49]
[4 48]
[5 47]
[6 46]
[7 45]
[8 44]
[9 43]
[19 33]
[20 32]
[22 30]
[54 151]
[55 150]
[56 149]
[57 148]
[58 147]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[66 137]
[67 136]
[68 135]
[69 134]
[74 129]
[75 128]
[77 126]
[78 125]
[79 124]
[80 123]
[81 122]
[82 114]
[83 113]
[84 112]
[85 110]
[86 109]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[94 101]
[95 100]
[152 205]
[153 204]
[154 202]
[156 200]
[157 199]
[158 198]
[159 197]
[160 196]
[161 195]
[162 194]
[163 193]
[166 192]
[167 191]
[168 190]
[169 187]
[170 186]
[171 184]
[172 183]
[173 182]
[174 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
