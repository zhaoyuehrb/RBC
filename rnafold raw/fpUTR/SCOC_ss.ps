%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACACUCAGGUGAGAACUUCUCAGGUGGAAAGCAGGAAGAGGGUGGCUAGUGCAAGGAUCAGAUAGCACCUGCUUGGAAGUUCACUGAUUAAUGAUUUAACAAGGGCGGUCACAUGGGACAACUGCUGCUUUUCUCUGCCCUCAUUUUUCUUACUAACAGGUCUGAAAAUUGAACAAG\
) } def
/len { sequence length } bind def

/coor [
[106.89021301 342.56710815]
[107.28802490 327.57238770]
[99.83677673 328.42614746]
[92.29881287 341.39453125]
[84.76084900 354.36291504]
[77.22287750 367.33129883]
[77.37228394 371.73699951]
[76.21251678 375.56655884]
[74.09037781 378.47570801]
[71.42945862 380.27029419]
[68.67373657 380.91827393]
[60.24466705 393.32595825]
[51.81559372 405.73364258]
[43.38652039 418.14132690]
[34.95744705 430.54901123]
[31.05824089 447.04849243]
[14.12416744 447.86917114]
[8.64773941 431.82406616]
[22.54975891 422.11993408]
[30.97883224 409.71224976]
[39.40790558 397.30456543]
[47.83697891 384.89688110]
[56.26605225 372.48919678]
[64.25449371 359.79333496]
[71.79245758 346.82495117]
[79.33042908 333.85656738]
[86.86839294 320.88815308]
[77.16481781 307.33639526]
[74.16970825 291.75399780]
[77.78391266 277.12570190]
[86.70120239 265.98580933]
[98.75955963 259.97967529]
[96.66037750 245.12728882]
[94.56119537 230.27490234]
[92.46201324 215.42251587]
[90.23257446 200.58911133]
[87.87305450 185.77586365]
[85.51354218 170.96260071]
[83.15402222 156.14933777]
[80.79450989 141.33607483]
[78.43498993 126.52281952]
[69.15633392 114.73695374]
[55.31076813 108.96630859]
[41.46520233 103.19567108]
[27.61963654 97.42503357]
[18.46493912 97.00774384]
[13.58314228 91.42971039]
[-0.15901804 85.41696930]
[-13.90117836 79.40422821]
[-24.83570290 89.96379852]
[-38.98069382 95.53046417]
[-54.17913818 95.25533295]
[-68.11338806 89.18037415]
[-78.65856934 78.23197174]
[-84.20661926 64.07967377]
[-83.91149902 48.88159943]
[-77.81821442 34.95535278]
[-66.85594177 24.42458534]
[-52.69635773 18.89515686]
[-37.49868774 19.21026802]
[-23.58047104 25.32186699]
[-13.06413078 36.29797745]
[-7.55333471 50.46482468]
[-7.88843775 65.66207123]
[5.85372210 71.67480469]
[19.59588242 77.68754578]
[33.39027786 83.57946777]
[47.23584366 89.35010529]
[61.08140945 95.12074280]
[74.92697906 100.89138794]
[75.51261139 90.13563538]
[80.72253418 80.09423828]
[90.02475739 72.74723053]
[89.49834442 57.75647354]
[88.97192383 42.76571274]
[88.44551086 27.77495384]
[77.16696167 17.03102303]
[76.84664917 1.82076252]
[87.15884399 -8.86540222]
[86.63243103 -23.85616302]
[78.41558838 -37.37629700]
[85.70146942 -50.36726379]
[85.17504883 -65.35802460]
[84.64863586 -80.34878540]
[71.70790863 -88.91133118]
[66.30312347 -103.45670319]
[70.51252747 -118.39191437]
[82.71752930 -127.97406769]
[98.22504425 -128.51863098]
[111.07212067 -119.81620789]
[116.31880188 -105.21305847]
[111.94762421 -90.32438660]
[99.63939667 -80.87519836]
[100.16580963 -65.88444519]
[100.69223022 -50.89368057]
[108.87141418 -38.44578552]
[101.62319183 -24.38257790]
[102.14960480 -9.39181805]
[113.18598938 0.54466939]
[113.93340302 15.73993301]
[103.43627167 27.24853706]
[103.96268463 42.23929596]
[104.48910522 57.23005676]
[105.01551819 72.22081757]
[118.53820038 78.71212769]
[130.56422424 69.74692535]
[142.59024048 60.78173065]
[154.61627197 51.81653214]
[166.64228821 42.85133362]
[178.66831970 33.88613510]
[176.20796204 18.77967072]
[181.06076050 4.26385403]
[192.11157227 -6.32568598]
[206.82098389 -10.55554962]
[221.80889893 -7.45374680]
[233.63117981 2.26695251]
[239.57118225 16.37280273]
[238.26391602 31.62238121]
[230.00979614 44.51144791]
[216.70555115 52.07818985]
[201.40840149 52.58382416]
[187.63351440 45.91215897]
[175.60748291 54.87735748]
[163.58146667 63.84255600]
[151.55545044 72.80775452]
[139.52941895 81.77294922]
[127.50339508 90.73815155]
[119.62489319 118.62345886]
[93.24825287 124.16329956]
[95.60776520 138.97656250]
[97.96728516 153.78982544]
[100.32679749 168.60307312]
[102.68631744 183.41633606]
[105.04583740 198.22959900]
[109.49797821 206.23965454]
[107.31439972 213.32333374]
[109.41358185 228.17572021]
[111.51276398 243.02810669]
[113.61194611 257.88049316]
[135.37530518 265.62503052]
[147.30603027 287.98330688]
[140.56909180 314.73526001]
[150.84497070 325.66259766]
[161.12084961 336.58990479]
[176.21131897 341.34265137]
[179.29371643 355.91482544]
[189.56959534 366.84213257]
[199.84547424 377.76947021]
[210.12135315 388.69677734]
[220.39723206 399.62408447]
[235.96063232 400.27102661]
[246.22616577 411.49926758]
[245.51350403 426.33261108]
[255.78938293 437.25991821]
[266.06524658 448.18722534]
[281.91528320 452.39541626]
[285.93411255 468.29449463]
[273.98754883 479.52886963]
[258.36517334 474.54159546]
[255.13793945 458.46313477]
[244.86206055 447.53579712]
[234.58618164 436.60848999]
[219.73707581 436.40921021]
[209.16020203 425.47372437]
[209.46990967 409.89996338]
[199.19403076 398.97265625]
[188.91815186 388.04534912]
[178.64227295 377.11801147]
[168.36639404 366.19070435]
[154.01094055 362.21954346]
[150.19354248 346.86578369]
[139.91766357 335.93847656]
[129.64176941 325.01113892]
[122.19052887 325.86489868]
[125.96962738 340.38104248]
[133.56927490 353.31338501]
[126.87371826 366.73608398]
[111.97124481 368.44387817]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 27]
[4 26]
[5 25]
[6 24]
[11 23]
[12 22]
[13 21]
[14 20]
[15 19]
[32 139]
[33 138]
[34 137]
[35 136]
[36 134]
[37 133]
[38 132]
[39 131]
[40 130]
[41 129]
[42 70]
[43 69]
[44 68]
[45 67]
[47 66]
[48 65]
[49 64]
[73 104]
[74 103]
[75 102]
[76 101]
[79 98]
[80 97]
[82 95]
[83 94]
[84 93]
[105 127]
[106 126]
[107 125]
[108 124]
[109 123]
[110 122]
[142 173]
[143 172]
[144 171]
[146 169]
[147 168]
[148 167]
[149 166]
[150 165]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
