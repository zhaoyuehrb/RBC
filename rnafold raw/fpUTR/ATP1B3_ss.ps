%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGACGUCAGGCUCCCGCGGCCCAAGCGGCCGCCCGGCGCGGCGCGGCGCAGUCGGCUCGAGUACUCCCCGUAACGAGGAGGUGUUCUCGGCCGUCCCACCCUUCACUGCCGUCUCCGGGCUGCGCCGCCGGAGCCGGGACGCGCCUCCGCAGCCCUCGCCGCCUCCAUCCCCGCGGCCGCAGCUCCUCUCGCCGUCCGCGCGCACACC\
) } def
/len { sequence length } bind def

/coor [
[9.82435799 317.41867065]
[6.06805706 331.94073486]
[2.31175637 346.46279907]
[-1.44454420 360.98483276]
[-0.56386250 370.07672119]
[-5.36638498 375.69433594]
[1.28719056 390.29260254]
[-6.10593414 404.53063965]
[-21.87438583 407.48620605]
[-33.92195892 396.89208984]
[-33.00678635 380.87515259]
[-19.83090973 371.72222900]
[-15.96660328 357.22854614]
[-12.21030235 342.70648193]
[-8.45400238 328.18441772]
[-4.69770145 313.66235352]
[-6.51547003 312.70257568]
[-8.27693462 311.64300537]
[-18.76443481 322.36737061]
[-29.25193596 333.09176636]
[-39.73943710 343.81613159]
[-50.22694016 354.54052734]
[-60.71443939 365.26489258]
[-61.97379684 381.25845337]
[-75.34342957 390.12594604]
[-90.56730652 385.06497192]
[-95.96696472 369.95791626]
[-87.40025330 356.39358521]
[-71.43881989 354.77740479]
[-60.95131683 344.05300903]
[-50.46381760 333.32864380]
[-39.97631454 322.60424805]
[-29.48881531 311.87988281]
[-19.00131416 301.15548706]
[-25.45847893 280.19985962]
[-18.87615967 259.16589355]
[-1.44901454 245.49124146]
[20.77033615 244.08644104]
[27.24983215 230.55809021]
[33.72932816 217.02975464]
[40.20882416 203.50140381]
[46.68832016 189.97305298]
[53.16781616 176.44471741]
[53.22206497 169.05426025]
[59.84581375 162.76428223]
[66.52600861 149.33390808]
[73.20619965 135.90353394]
[79.88639832 122.47315216]
[86.56658936 109.04277802]
[84.45196533 94.19258118]
[74.28842163 83.16070557]
[64.12487030 72.12882233]
[53.96132660 61.09694672]
[43.79777908 50.06507111]
[32.76590347 39.90152359]
[20.93963242 30.67442513]
[9.11336327 21.44732666]
[-2.71290684 12.22022915]
[-11.40385342 9.40859985]
[-14.64521122 2.76665735]
[-26.33279228 -6.63549376]
[-38.02037430 -16.03764534]
[-49.70795441 -25.43979645]
[-65.31047821 -28.06119537]
[-70.37739563 -42.06746674]
[-82.06497955 -51.46961594]
[-97.66750336 -54.09101486]
[-102.73442078 -68.09728241]
[-114.42200470 -77.49943542]
[-126.17925262 -86.81432343]
[-138.00552368 -96.04141998]
[-153.26048279 -92.60332489]
[-167.13262939 -99.82118988]
[-173.07196045 -114.28694916]
[-168.27412415 -129.17031860]
[-155.00450134 -137.44383240]
[-139.52859497 -135.20097351]
[-129.15365601 -123.50077057]
[-128.77842712 -107.86769104]
[-116.95215607 -98.64058685]
[-109.74488831 -97.00442505]
[-105.01985168 -89.18701935]
[-93.33227539 -79.78486633]
[-78.56571960 -77.83597565]
[-72.66282654 -63.15719604]
[-60.97524643 -53.75504684]
[-46.20869446 -51.80615234]
[-40.30580521 -37.12737656]
[-28.61822128 -27.72522545]
[-16.93064117 -18.32307434]
[-5.24305964 -8.92092419]
[6.51419163 0.39395905]
[18.34046173 9.62105751]
[30.16673088 18.84815598]
[41.99300003 28.07525444]
[37.42884445 13.78650093]
[39.93684769 -1.00234330]
[48.95671844 -12.98741341]
[62.47339630 -19.49121475]
[77.46721649 -19.06077957]
[90.58853149 -11.79226971]
[98.90599060 0.69051117]
[100.56146240 15.59887791]
[95.18511200 29.60226440]
[83.97801971 39.57227707]
[69.44389343 43.28158951]
[54.82965851 39.90152359]
[64.99320221 50.93339920]
[75.15675354 61.96527863]
[85.32029724 72.99715424]
[95.48384094 84.02902985]
[89.64462280 70.21224976]
[93.48486328 55.71216202]
[105.39748383 46.59681702]
[120.39724731 46.68084335]
[132.20700073 55.92907715]
[135.88453674 70.47127533]
[129.89089966 84.22177887]
[116.73304749 91.42642212]
[131.55010986 89.09093475]
[146.36718750 86.75544739]
[161.18424988 84.41996002]
[176.00131226 82.08447266]
[190.81838989 79.74898529]
[205.63545227 77.41349792]
[220.45251465 75.07801056]
[235.25180054 72.63228607]
[250.03244019 70.07645416]
[264.81311035 67.52062225]
[279.59375000 64.96479034]
[296.10873413 48.67734909]
[316.90914917 57.12712860]
[331.45877075 53.47904205]
[346.00839233 49.83095169]
[360.55801392 46.18286514]
[372.06207275 35.32159805]
[386.28897095 39.73123550]
[400.83859253 36.08314896]
[415.38821411 32.43506241]
[429.91024780 28.67876053]
[444.40396118 24.81445503]
[457.13555908 11.51079464]
[473.89001465 16.73144913]
[488.32458496 12.65178204]
[502.72836304 8.46477127]
[517.10058594 4.17064762]
[527.96142578 -8.11649323]
[543.97680664 -4.58955812]
[548.67150879 11.12324429]
[537.21594238 22.85792923]
[521.39471436 18.54286003]
[507.02249146 22.83698463]
[501.51351929 27.76375961]
[492.40423584 27.08633614]
[477.96969604 31.16600227]
[471.79327393 41.56688309]
[459.80099487 45.08385468]
[448.26824951 39.30814743]
[433.77456665 43.17245483]
[428.12136841 47.93302155]
[419.03628540 46.98468018]
[404.48666382 50.63277054]
[389.93704224 54.28085709]
[379.47366333 64.88118744]
[364.20608521 60.73248672]
[349.65646362 64.38057709]
[335.10687256 68.02866364]
[320.55725098 71.67675018]
[318.54595947 78.48941040]
[314.25732422 84.23716736]
[308.18521118 88.17919159]
[301.05676270 89.78720856]
[293.74536133 88.81586456]
[287.16366577 85.33882141]
[282.14959717 79.74544525]
[267.36892700 82.30127716]
[252.58827209 84.85710907]
[237.80763245 87.41294098]
[231.75224304 91.65016937]
[222.78800964 89.89508057]
[207.97094727 92.23056793]
[193.15386963 94.56605530]
[178.33680725 96.90154266]
[163.51974487 99.23703003]
[148.70266724 101.57251740]
[133.88560486 103.90800476]
[119.06853485 106.24349213]
[131.63543701 114.43330383]
[133.90878296 129.26004028]
[124.37295532 140.83880615]
[109.38542175 141.45014954]
[98.93824768 130.68647766]
[99.99696350 115.72296906]
[93.31677246 129.15335083]
[86.63658142 142.58372498]
[79.95638275 156.01409912]
[73.27619171 169.44447327]
[66.69615936 182.92420959]
[60.21666336 196.45256042]
[53.73717117 209.98089600]
[47.25767517 223.50924683]
[40.77817917 237.03759766]
[34.29868317 250.56593323]
[41.70013046 258.13232422]
[46.68761063 267.44128418]
[48.87726593 277.74853516]
[48.10835266 288.23400879]
[44.45497131 298.06729126]
[38.21915054 306.47323608]
[29.90591431 312.79321289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[6 12]
[18 34]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[38 203]
[39 202]
[40 201]
[41 200]
[42 199]
[43 198]
[45 197]
[46 196]
[47 195]
[48 194]
[49 193]
[50 111]
[51 110]
[52 109]
[53 108]
[54 107]
[55 95]
[56 94]
[57 93]
[58 92]
[60 91]
[61 90]
[62 89]
[63 88]
[65 86]
[66 85]
[68 83]
[69 82]
[70 80]
[71 79]
[119 187]
[120 186]
[121 185]
[122 184]
[123 183]
[124 182]
[125 181]
[126 180]
[127 178]
[128 177]
[129 176]
[130 175]
[132 168]
[133 167]
[134 166]
[135 165]
[137 163]
[138 162]
[139 161]
[140 159]
[141 158]
[143 155]
[144 154]
[145 152]
[146 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
