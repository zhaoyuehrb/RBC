%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUGCUGGGAGCUGGAGGAGGCGCGGAGCGAAGCCGGCCCUGCCAGCCACGCGGAGAAGCAGAGGCAGGUGAGCGCGAUGCAGCCGGCGCCGGGUCUGGGGCUCGGGGACUCCUCCCUGCACCGCUACCUGGACGGCGACUUCUGGAGCCUCAAGAACGAGCUGCGCGGACUCCUCGGCGGCGCCCGCUCUUCCGGCAAAGGUAUGAUUUAAGCUUGGAUGAA\
) } def
/len { sequence length } bind def

/coor [
[256.51361084 501.87084961]
[252.37904358 487.45193481]
[248.24447632 473.03298950]
[244.10992432 458.61407471]
[239.77444458 444.25427246]
[235.23889160 429.95642090]
[230.70335388 415.65856934]
[226.16780090 401.36068726]
[221.63224792 387.06283569]
[217.09669495 372.76498413]
[212.56115723 358.46713257]
[208.02560425 344.16925049]
[204.85263062 334.19259644]
[205.61671448 324.66992188]
[209.55644226 316.97552490]
[215.49243164 312.00088501]
[209.01113892 298.47341919]
[202.52984619 284.94592285]
[196.04856873 271.41842651]
[189.56727600 257.89096069]
[183.08599854 244.36346436]
[168.09167480 235.23721313]
[169.67016602 216.88613892]
[163.00064087 203.45046997]
[156.33111572 190.01478577]
[149.66159058 176.57911682]
[137.07220459 168.61943054]
[137.86656189 152.81817627]
[131.19702148 139.38249207]
[124.52749634 125.94681549]
[106.88791656 133.38647461]
[88.85308838 130.50131226]
[75.74668884 119.08039093]
[70.94183350 103.29039001]
[56.10275269 101.09915161]
[41.26366806 98.90790558]
[26.42458153 96.71665955]
[11.58549690 94.52541351]
[-3.25358796 92.33416748]
[-18.23019981 91.49684143]
[-33.22106171 92.02033997]
[-48.21192551 92.54383087]
[-63.20278549 93.06732178]
[-78.19364929 93.59081268]
[-93.18450928 94.11430359]
[-109.79147339 105.55269623]
[-126.44631195 95.71761322]
[-141.41670227 96.65947723]
[-151.84379578 108.23158264]
[-167.03932190 108.97350311]
[-178.00730896 98.96156311]
[-189.65263367 109.99632263]
[-205.52008057 107.62908936]
[-213.43748474 93.67581177]
[-207.33131409 78.84024048]
[-191.88568115 74.50296021]
[-178.94915771 83.99115753]
[-169.32249451 72.68350983]
[-154.15379333 71.51507568]
[-142.35856628 81.68907166]
[-127.38816833 80.74721527]
[-121.35621643 72.51458740]
[-111.58508301 68.87966919]
[-101.21134949 71.26651764]
[-93.70800018 79.12344360]
[-78.71714020 78.59995270]
[-63.72628021 78.07646179]
[-48.73541641 77.55296326]
[-33.74455261 77.02947235]
[-18.75369263 76.50598145]
[-16.63613129 69.31112671]
[-26.98044586 58.44857025]
[-12.40100956 54.92141724]
[-10.28344822 47.72656250]
[-22.60068703 39.16585922]
[-38.58126831 40.58025742]
[-49.54608154 28.86905098]
[-47.08385849 13.01606846]
[-33.08340836 5.18236589]
[-18.28467560 11.37728786]
[-14.03998280 26.84862137]
[-1.72274470 35.40932465]
[6.54399252 59.07834244]
[-1.06234252 77.49507904]
[13.77674294 79.68632507]
[28.61582756 81.87757111]
[43.45491409 84.06881714]
[58.29399872 86.26006317]
[73.13307953 88.45130920]
[80.73737335 77.99648285]
[92.10607910 71.84170532]
[91.89664459 56.84316635]
[91.68721771 41.84463120]
[91.47778320 26.84609222]
[91.26834869 11.84755421]
[91.05891418 -3.15098381]
[82.37656403 -12.68035507]
[82.50531006 -25.17056084]
[90.83118439 -33.93713760]
[83.09388733 -47.73731232]
[90.83118439 -60.46458435]
[90.83118439 -75.46458435]
[79.93663025 -86.59770966]
[80.15031433 -101.80983734]
[90.83118439 -112.12752533]
[90.83118439 -127.12752533]
[90.83118439 -142.12751770]
[90.83118439 -157.12751770]
[90.83118439 -172.12751770]
[90.83118439 -187.12751770]
[82.16748047 -201.05133057]
[90.13161469 -215.38676453]
[106.53076172 -215.38676453]
[114.49488831 -201.05133057]
[105.83118439 -187.12751770]
[105.83118439 -172.12751770]
[105.83118439 -157.12751770]
[105.83118439 -142.12751770]
[105.83118439 -127.12752533]
[105.83118439 -112.12752533]
[116.51205444 -101.80983734]
[116.72573853 -86.59770966]
[105.83118439 -75.46458435]
[105.83118439 -60.46458435]
[113.56848907 -47.73731232]
[105.83118439 -33.93713760]
[115.41022491 -19.22796631]
[106.05745697 -3.36041641]
[106.26688385 11.63812160]
[106.47631836 26.63665962]
[106.68575287 41.63519669]
[106.89518738 56.63373566]
[107.10461426 71.63227081]
[116.43785095 73.24927521]
[125.35196686 78.02366638]
[132.76562500 85.81377411]
[144.18870544 76.09197235]
[155.61178589 66.37017822]
[157.02909851 50.85795593]
[168.75221252 41.16139603]
[183.53201294 42.60819626]
[188.52040100 26.98616028]
[204.59909058 23.76006889]
[215.22770691 36.24864578]
[209.47244263 51.60471725]
[193.25381470 54.03126907]
[192.31898499 68.85225677]
[180.87284851 78.87426758]
[165.33357239 77.79325104]
[153.91050720 87.51504517]
[142.48742676 97.23684692]
[157.17300415 94.18167877]
[170.85058594 88.02348328]
[185.73164368 89.90880585]
[197.44134521 99.28339386]
[202.53721619 113.39126587]
[199.52117920 128.08491516]
[189.27987671 139.04464722]
[174.82409668 143.04846191]
[160.40362549 138.91929626]
[150.25764465 127.87066650]
[137.96318054 119.27729034]
[144.63270569 132.71296692]
[151.30223083 146.14863586]
[164.36866760 155.06935120]
[163.09725952 169.90959167]
[169.76679993 183.34526062]
[176.43632507 196.78094482]
[183.10585022 210.21661377]
[195.05337524 215.05899048]
[200.33410645 226.37869263]
[196.61347961 237.88217163]
[203.09477234 251.40966797]
[209.57604980 264.93713379]
[216.05734253 278.46463013]
[222.53862000 291.99212646]
[229.01991272 305.51962280]
[239.73699951 316.01455688]
[253.39726257 322.21112061]
[267.05752563 328.40768433]
[280.71777344 334.60424805]
[294.37802124 340.80084229]
[311.30023193 341.83773804]
[314.98837280 358.38568115]
[300.10812378 366.51058960]
[288.18145752 354.46109009]
[274.52120972 348.26452637]
[260.86093140 342.06796265]
[247.20069885 335.87139893]
[233.54043579 329.67480469]
[222.32347107 339.63369751]
[226.85900879 353.93157959]
[231.39456177 368.22943115]
[235.93011475 382.52728271]
[240.46565247 396.82516479]
[245.00120544 411.12301636]
[249.53675842 425.42086792]
[254.07231140 439.71871948]
[258.67755127 444.43972778]
[260.01437378 449.95019531]
[258.52883911 454.47952271]
[262.66342163 468.89843750]
[266.79797363 483.31735229]
[270.93252563 497.73629761]
[286.02862549 497.63253784]
[300.59259033 501.60662842]
[313.54370117 509.36364746]
[323.92089844 520.32794189]
[330.95410156 533.68597412]
[334.12142944 548.44641113]
[333.18786621 563.51397705]
[328.22262573 577.77050781]
[319.59420776 590.15808105]
[307.94287109 599.75756836]
[294.13323975 605.85644531]
[279.19009399 608.00225830]
[264.22225952 606.03576660]
[250.34051514 600.10284424]
[238.57493591 590.64379883]
[229.79862976 578.36047363]
[224.66284180 564.16448975]
[223.54869080 549.10925293]
[226.53883362 534.31188965]
[233.41140747 520.87048340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 204]
[2 203]
[3 202]
[4 201]
[5 198]
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[11 192]
[12 191]
[16 177]
[17 176]
[18 175]
[19 174]
[20 173]
[21 172]
[23 169]
[24 168]
[25 167]
[26 166]
[28 164]
[29 163]
[30 162]
[34 89]
[35 88]
[36 87]
[37 86]
[38 85]
[39 84]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[47 61]
[48 60]
[51 57]
[74 82]
[75 81]
[91 133]
[92 132]
[93 131]
[94 130]
[95 129]
[96 128]
[99 126]
[101 124]
[102 123]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[110 115]
[136 151]
[137 150]
[138 149]
[141 146]
[178 190]
[179 189]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
