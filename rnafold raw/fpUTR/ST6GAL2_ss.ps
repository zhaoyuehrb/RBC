%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCGCCGGGGCAGGCGCCGGGACUCCCUCCUGGCCGCCCACAGCCUGUGCGCAUUCCUGCAUUCCUGCCGCCGCCCGGGACCCGAGUGCCCCGGAGGUGUCCAGGCGCGGUGCCAGGCGGGUACUGUGCAGGUUCAUUCUGCCACCCAUCUGCAUUAAGACACAAGGUGCUGACCGCAGAGACCUGCC\
) } def
/len { sequence length } bind def

/coor [
[388.39376831 277.79052734]
[386.37884521 258.77618408]
[373.07049561 251.85604858]
[359.76214600 244.93592834]
[346.45379639 238.01582336]
[333.14547729 231.09570312]
[319.83712769 224.17558289]
[308.19985962 227.51823425]
[297.05044556 221.84709167]
[292.62258911 209.72024536]
[279.43048096 202.58103943]
[266.23837280 195.44183350]
[253.04624939 188.30261230]
[235.56379700 189.73857117]
[226.03659058 173.99028015]
[212.72825623 167.07017517]
[199.41990662 160.15005493]
[186.11157227 153.22993469]
[172.80322266 146.30981445]
[157.94177246 147.30291748]
[149.26747131 134.07160950]
[135.95913696 127.15149689]
[122.65078735 120.23137665]
[109.34244537 113.31126404]
[98.03388977 116.14328003]
[87.73565674 110.67974091]
[83.73970795 99.72819519]
[70.54759979 92.58898926]
[57.35549545 85.44977570]
[44.16338730 78.31056213]
[30.97128105 71.17135620]
[15.15184498 71.40795135]
[7.64109087 58.54568481]
[-5.55101538 51.40647507]
[-21.37045288 51.64307022]
[-28.88120651 38.78080750]
[-42.07331085 31.64159584]
[-55.26541901 24.50238419]
[-71.08485413 24.73898125]
[-78.59561157 11.87671661]
[-91.67948151 19.79881477]
[-106.87165833 20.10623169]
[-120.09007263 12.81652355]
[-127.83310699 -0.02487254]
[-128.10699463 -14.91750717]
[-141.29910278 -22.05671883]
[-154.49121094 -29.19592857]
[-167.68331909 -36.33514023]
[-183.50276184 -36.09854507]
[-191.01350403 -48.96080780]
[-204.20561218 -56.10001755]
[-217.39772034 -63.23923111]
[-224.85343933 -59.39659119]
[-233.12776184 -58.83074951]
[-240.85974121 -61.56007004]
[-246.80720520 -67.06703186]
[-250.04617310 -74.39450836]
[-250.11399841 -82.31156158]
[-265.91448975 -83.12100220]
[-272.55874634 -96.45153046]
[-285.25018311 -104.44700623]
[-297.94158936 -112.44248199]
[-314.34048462 -112.53399658]
[-322.22451782 -126.91365051]
[-313.48324585 -140.78889465]
[-297.10894775 -139.88606262]
[-289.94613647 -125.13391113]
[-277.25469971 -117.13843536]
[-264.56326294 -109.14295959]
[-249.67056274 -108.90541077]
[-242.11853027 -95.00299072]
[-220.52252197 -96.34103394]
[-210.25851440 -76.43133545]
[-197.06640625 -69.29212189]
[-183.87429810 -62.15291595]
[-168.99844360 -62.90015411]
[-160.54411316 -49.52724457]
[-147.35200500 -42.38803482]
[-134.15989685 -35.24882507]
[-120.96778870 -28.10961342]
[-108.35036469 -36.02581787]
[-93.36494446 -36.56719208]
[-80.03245544 -29.48826599]
[-71.98048401 -16.60174370]
[-71.45639801 -1.31538999]
[-56.58055115 -2.06263065]
[-48.12620926 11.31027794]
[-34.93410110 18.44948959]
[-21.74199486 25.58869934]
[-6.86614609 24.84145927]
[1.58819544 38.21436691]
[14.78030205 45.35358047]
[29.65615082 44.60633850]
[38.11049271 57.97924805]
[51.30259705 65.11845398]
[64.49470520 72.25766754]
[77.68681335 79.39688110]
[90.87892151 86.53608704]
[107.62162018 85.63400269]
[116.26256561 100.00292206]
[129.57090759 106.92303467]
[142.87924194 113.84315491]
[156.18759155 120.76327515]
[172.00096130 120.26515198]
[179.72334290 133.00148010]
[193.03169250 139.92158508]
[206.34002686 146.84170532]
[219.64837646 153.76182556]
[232.95671082 160.68194580]
[245.48060608 157.54855347]
[256.42800903 163.60047913]
[260.18545532 175.11050415]
[273.37756348 182.24972534]
[286.56967163 189.38893127]
[299.76177979 196.52813721]
[318.14355469 195.58644104]
[326.75723267 210.86723328]
[340.06558228 217.78735352]
[353.37393188 224.70747375]
[366.68228149 231.62759399]
[379.99060059 238.54771423]
[393.29895020 245.46783447]
[402.53436279 238.62510681]
[413.60861206 235.74435425]
[424.90582275 237.20622253]
[434.79248047 242.76057434]
[441.85342407 251.56835938]
[445.09454346 262.32809448]
[444.08255005 273.46813965]
[457.03140259 281.03964233]
[469.98025513 288.61111450]
[482.92907715 296.18258667]
[495.87792969 303.75408936]
[508.82678223 311.32556152]
[521.77563477 318.89703369]
[527.03137207 318.92236328]
[531.31597900 320.78500366]
[534.09014893 323.80291748]
[535.16546631 327.17868042]
[547.72296143 335.38290405]
[560.28045654 343.58712769]
[572.83795166 351.79135132]
[585.39544678 359.99557495]
[598.34429932 367.56704712]
[611.65264893 374.48715210]
[624.96099854 381.40728760]
[638.26934814 388.32739258]
[657.05822754 381.25726318]
[674.73016357 390.12173462]
[680.12860107 408.82418823]
[693.76367188 415.07589722]
[707.39880371 421.32763672]
[722.12579346 415.59259033]
[736.56085205 422.02728271]
[742.13983154 436.81411743]
[735.55291748 451.18029785]
[720.70794678 456.60266113]
[706.41217041 449.86422729]
[701.14703369 434.96273804]
[687.51196289 428.71099854]
[673.87683105 422.45928955]
[665.54541016 428.50842285]
[655.37353516 430.56021118]
[645.19110107 428.17694092]
[636.85858154 421.72500610]
[631.92687988 412.32031250]
[631.34918213 401.63574219]
[618.04089355 394.71563721]
[604.73254395 387.79550171]
[591.42419434 380.87539673]
[594.78045654 395.49508667]
[586.94610596 408.28665161]
[572.39801025 411.94064331]
[559.44915771 404.36914062]
[555.49890137 389.89865112]
[562.80450439 376.79794312]
[577.19122314 372.55307007]
[564.63372803 364.34884644]
[552.07623291 356.14462280]
[539.51873779 347.94039917]
[526.96124268 339.73617554]
[514.20416260 331.84588623]
[501.25531006 324.27441406]
[488.30645752 316.70291138]
[475.35760498 309.13143921]
[462.40875244 301.55996704]
[449.45989990 293.98846436]
[436.51107788 286.41699219]
[419.88162231 294.90716553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 122]
[3 121]
[4 120]
[5 119]
[6 118]
[7 117]
[10 115]
[11 114]
[12 113]
[13 112]
[15 109]
[16 108]
[17 107]
[18 106]
[19 105]
[21 103]
[22 102]
[23 101]
[24 100]
[27 98]
[28 97]
[29 96]
[30 95]
[31 94]
[33 92]
[34 91]
[36 89]
[37 88]
[38 87]
[40 85]
[45 80]
[46 79]
[47 78]
[48 77]
[50 75]
[51 74]
[52 73]
[58 71]
[60 69]
[61 68]
[62 67]
[129 188]
[130 187]
[131 186]
[132 185]
[133 184]
[134 183]
[135 182]
[139 181]
[140 180]
[141 179]
[142 178]
[143 177]
[144 170]
[145 169]
[146 168]
[147 167]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
