%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGGCUCAGACGGUCGCCGCCGCGUUUGCGCAGGGGGAGCUGGUCGCCGCCGCGGCCGCCUGGAAUUGUGGGAGUUGUGUCUGCCACUCGGCUGCCGGAGGCCGAAGGCCAGCUAUUACUUCUCUACUGAGGCCAACUGUGAGCCCUGGUGUGUUUCAUUGGCAGGAGAAGAGGCUAAUUAAGUGAAACUGAAAGGUCCCUGACU\
) } def
/len { sequence length } bind def

/coor [
[281.85794067 250.27597046]
[270.74127197 240.20521545]
[259.62463379 230.13446045]
[248.35641479 220.23358154]
[236.93923950 210.50485229]
[225.52206421 200.77612305]
[214.10488892 191.04739380]
[202.68772888 181.31866455]
[191.27055359 171.58993530]
[176.56498718 169.22445679]
[171.07933044 154.38470459]
[151.85916138 152.28654480]
[145.39393616 133.19517517]
[133.68676758 123.81742096]
[121.97959900 114.43967438]
[110.44202423 121.81188965]
[97.87235260 121.96380615]
[88.09149933 116.00683594]
[76.82328796 125.90771484]
[71.56347656 140.82901001]
[56.89550018 143.41738892]
[45.62729263 153.31826782]
[34.43453598 163.30436707]
[23.31788063 173.37512207]
[12.20122528 183.44586182]
[7.69881487 199.21482849]
[-8.27230644 202.93710327]
[-19.28241920 190.78352356]
[-14.00526237 175.25665283]
[2.13047647 172.32920837]
[13.24713230 162.25846863]
[24.36378670 152.18771362]
[27.21128845 145.36506653]
[35.72640991 142.05006409]
[46.99462128 132.14916992]
[51.44845581 117.93606567]
[66.92240906 114.63950348]
[78.19062042 104.73862457]
[78.53206635 89.74251556]
[67.72617340 79.33902740]
[56.92027283 68.93553925]
[46.11437225 58.53205109]
[35.30847549 48.12856293]
[24.50257683 37.72507477]
[13.69667721 27.32158852]
[2.89077878 16.91810036]
[-8.22587681 6.84735155]
[-19.64304733 -2.88137960]
[-31.06021690 -12.61011124]
[-46.58242035 -15.67145061]
[-51.25144196 -29.81533623]
[-62.66861343 -39.54406738]
[-74.08578491 -49.27280045]
[-85.57644653 -58.91461182]
[-97.13995361 -68.46895599]
[-108.70345306 -78.02330017]
[-120.26695251 -87.57763672]
[-131.83045959 -97.13198090]
[-143.39395142 -106.68632507]
[-141.43099976 -91.81531525]
[-147.46437073 -78.08219910]
[-159.74475098 -69.46870422]
[-174.71160889 -68.47219849]
[-188.02551270 -75.38161469]
[-195.82626343 -88.19364929]
[-195.85214233 -103.19362640]
[-188.09564209 -116.03250122]
[-174.80566406 -122.98781586]
[-159.83776855 -122.04376984]
[-170.15895081 -132.92829895]
[-180.48014832 -143.81283569]
[-190.80133057 -154.69735718]
[-205.91140747 -159.38739014]
[-209.05432129 -173.94662476]
[-219.37550354 -184.83114624]
[-235.17889404 -185.00025940]
[-246.17413330 -196.35279846]
[-245.83795166 -212.15350342]
[-234.36981201 -223.02810669]
[-218.57353210 -222.52490234]
[-207.82078552 -210.94241333]
[-208.49098206 -195.15234375]
[-198.16978455 -184.26780701]
[-183.79795837 -180.35632324]
[-179.91679382 -165.01855469]
[-169.59561157 -154.13401794]
[-159.27441406 -143.24949646]
[-148.95323181 -132.36495972]
[-138.54107666 -129.44342041]
[-133.83961487 -118.24982452]
[-122.27611542 -108.69548035]
[-110.71260834 -99.14113617]
[-99.14910889 -89.58679962]
[-87.58560944 -80.03245544]
[-76.02210999 -70.47811127]
[-68.86112213 -68.64044189]
[-64.35704803 -60.68996811]
[-52.93988037 -50.96123886]
[-41.52270889 -41.23250580]
[-26.81714058 -38.86703110]
[-21.33148575 -24.02728081]
[-9.91431618 -14.29855061]
[1.50285482 -4.56981897]
[4.30762005 -4.66010332]
[7.31716347 -3.64305639]
[10.10925198 -1.43509483]
[12.23921871 1.89288270]
[13.29426670 6.11220169]
[24.10016441 16.51568985]
[34.90606308 26.91917610]
[45.71196365 37.32266617]
[56.51786041 47.72615051]
[67.32376099 58.12963867]
[78.12966156 68.53312683]
[88.93555450 78.93661499]
[96.43016052 78.65212250]
[86.63955688 67.28796387]
[89.41989899 52.54788971]
[102.67758179 45.53121185]
[116.42954254 51.52149582]
[120.32052612 66.00804901]
[111.41936493 78.08312988]
[118.91396332 77.79862976]
[128.90007019 66.60587311]
[138.88616943 55.41312027]
[141.69108582 39.25563049]
[157.17745972 33.86080170]
[169.41424561 44.77837372]
[165.81327820 60.77728271]
[150.07891846 65.39922333]
[140.09281921 76.59197998]
[130.10671997 87.78472900]
[131.35734558 102.73250580]
[143.06451416 112.11026001]
[154.77168274 121.48800659]
[165.49974060 119.67042542]
[175.25553894 123.97021484]
[180.91375732 132.74597168]
[180.80805969 142.96752930]
[196.33026123 146.02886963]
[200.99928284 160.17276001]
[212.41645813 169.90148926]
[223.83363342 179.63021851]
[235.25079346 189.35894775]
[246.66796875 199.08769226]
[258.08514404 208.81642151]
[264.51220703 210.38854980]
[268.56942749 214.37361145]
[269.69537354 219.01780701]
[280.81201172 229.08856201]
[291.92868042 239.15930176]
[307.94470215 232.62631226]
[326.96786499 239.39390564]
[338.21945190 259.57229614]
[351.32214355 266.87429810]
[364.42486572 274.17626953]
[377.52755737 281.47827148]
[390.63027954 288.78027344]
[403.73297119 296.08224487]
[416.83569336 303.38424683]
[430.20593262 310.18395996]
[443.82452393 316.47161865]
[457.44308472 322.75924683]
[471.06164551 329.04690552]
[483.56295776 320.12429810]
[498.85226440 318.66372681]
[512.81677246 325.05807495]
[521.70013428 337.58728027]
[523.11279297 352.88107300]
[516.67468262 366.82550049]
[504.11770630 375.66955566]
[488.81954956 377.03424072]
[474.89538574 370.55249023]
[466.09075928 357.96780396]
[464.77401733 342.66546631]
[451.15542603 336.37783813]
[437.53686523 330.09017944]
[423.91830444 323.80252075]
[426.55566406 338.56884766]
[416.77297974 349.93981934]
[401.77838135 349.53695679]
[392.62036133 337.65710449]
[396.04681396 323.05371094]
[409.53369141 316.48693848]
[396.43099976 309.18496704]
[383.32827759 301.88296509]
[370.22558594 294.58096313]
[357.12286377 287.27899170]
[344.02017212 279.97698975]
[330.91744995 272.67498779]
[324.82318115 277.04647827]
[336.90457153 285.93692017]
[332.18243408 300.17422485]
[317.18273926 300.08261108]
[312.63461304 285.78942871]
[306.54034424 290.16088867]
[309.25708008 304.91281128]
[311.97381592 319.66473389]
[314.69058228 334.41665649]
[323.50564575 348.89877319]
[312.02975464 361.37835693]
[296.86102295 353.80569458]
[299.93865967 337.13342285]
[297.22189331 322.38150024]
[294.50515747 307.62954712]
[291.78842163 292.87762451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[11 139]
[13 135]
[14 134]
[15 133]
[18 38]
[19 37]
[21 35]
[22 34]
[23 32]
[24 31]
[25 30]
[39 115]
[40 114]
[41 113]
[42 112]
[43 111]
[44 110]
[45 109]
[46 108]
[47 103]
[48 102]
[49 101]
[51 99]
[52 98]
[53 97]
[54 95]
[55 94]
[56 93]
[57 92]
[58 91]
[59 90]
[69 88]
[70 87]
[71 86]
[72 85]
[74 83]
[75 82]
[123 132]
[124 131]
[125 130]
[154 190]
[155 189]
[156 188]
[157 187]
[158 186]
[159 185]
[160 184]
[161 178]
[162 177]
[163 176]
[164 175]
[196 206]
[197 205]
[198 204]
[199 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
