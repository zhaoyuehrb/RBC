%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCGAAAGUAGACUCUUUUCUGAAGCAUUUCCUGGGAUCAGCCUGACCACGCUCCAUACUGGGAGAGGCUUCUGGGUCAAAGGACCAGUCUGCAGAGGGAUCCUGUGGCUGGAAGCGAGGAGGCUCCACACGGCCGUUGCAGCUACCGCAGCCAGGAUCUGGGCAUCCAGGCACGGCC\
) } def
/len { sequence length } bind def

/coor [
[306.12896729 143.81130981]
[302.37112427 135.10911560]
[287.81668091 131.48028564]
[273.26226807 127.85146332]
[262.33697510 139.73986816]
[246.82011414 144.53169250]
[230.91113281 140.83119202]
[218.96554565 129.55441284]
[214.30259705 113.70480347]
[199.68705750 110.33054352]
[185.07150269 106.95627594]
[170.45594788 103.58200836]
[155.84039307 100.20774078]
[141.22485352 96.83348083]
[126.60929871 93.45921326]
[126.52806854 104.09723663]
[122.44179535 113.68230438]
[115.13543701 120.80136108]
[105.85375977 124.47599030]
[96.09137726 124.29507446]
[87.35260010 120.45440674]
[80.91961670 113.70090485]
[77.66480255 105.19378662]
[62.74697495 103.62586212]
[47.82914352 102.05793762]
[32.91131592 100.49000549]
[17.99348831 98.92208099]
[3.46014667 105.17448425]
[-8.38863564 96.14920807]
[-23.30646515 94.58128357]
[-38.22429276 93.01335144]
[-53.14212036 91.44542694]
[-68.05995178 89.87750244]
[-82.97777557 88.30957031]
[-97.89560699 86.74164581]
[-112.81343842 85.17372131]
[-122.38246155 98.64170837]
[-137.34858704 105.41500854]
[-153.59559631 103.73445129]
[-166.70700073 94.15190125]
[-173.16658020 79.35425568]
[-188.10951233 78.04692078]
[-203.05242920 76.73958588]
[-213.13052368 88.53837585]
[-228.22686768 92.12729645]
[-242.53657532 86.12632751]
[-250.55729675 72.84297180]
[-249.20489502 57.38494110]
[-238.99940491 45.69617081]
[-223.86502075 42.27122879]
[-209.62124634 48.42707825]
[-201.74508667 61.79666138]
[-186.80216980 63.10400009]
[-171.85925293 64.41133881]
[-164.77026367 52.72066498]
[-153.27737427 45.19374847]
[-139.59652710 43.35010147]
[-126.39510345 47.60680771]
[-116.27188110 57.18590546]
[-111.24550629 70.25588989]
[-96.32768250 71.82381439]
[-81.40985107 73.39174652]
[-66.49201965 74.95967102]
[-51.57419586 76.52759552]
[-36.65636444 78.09552765]
[-21.73853683 79.66345215]
[-6.82070875 81.23137665]
[6.64560986 74.86682892]
[19.56141472 84.00424957]
[34.47924423 85.57218170]
[49.39707184 87.14010620]
[64.31490326 88.70803070]
[79.23272705 90.27596283]
[84.30142975 81.29302979]
[93.25155640 74.98291779]
[104.66868591 72.99925995]
[100.28311157 58.65468979]
[95.89752960 44.31011963]
[91.51195526 29.96554756]
[79.15589142 19.18317032]
[82.58074951 3.14563942]
[98.26333618 -1.64900732]
[110.07073975 9.73155117]
[105.85652924 25.57997131]
[110.24210358 39.92454147]
[114.62767792 54.26911545]
[119.01325226 68.61368561]
[129.98356628 78.84365845]
[144.59910583 82.21792603]
[159.21466064 85.59219360]
[173.83021545 88.96646118]
[188.44577026 92.34072113]
[203.06130981 95.71498871]
[217.67686462 99.08925629]
[226.68457031 88.36776733]
[239.37490845 82.60635376]
[253.24295044 82.87952423]
[265.57821655 89.07677460]
[273.99441528 99.93533325]
[276.89108276 113.29702759]
[291.44552612 116.92584991]
[305.99996948 120.55467987]
[326.16894531 113.36800385]
[340.46124268 128.23680115]
[355.18563843 131.09892273]
[369.91003418 133.96105957]
[384.63446045 136.82319641]
[399.35885620 139.68533325]
[414.38183594 134.72338867]
[425.39892578 144.74700928]
[440.12332153 147.60914612]
[454.84774780 150.47128296]
[469.57214355 153.33341980]
[484.29653931 156.19554138]
[499.31951904 151.23359680]
[510.33660889 161.25721741]
[525.06103516 164.11935425]
[538.06835938 155.54927063]
[552.96026611 158.66163635]
[561.05035400 171.11497498]
[575.77478027 173.97711182]
[590.49914551 176.83924866]
[605.49914551 176.83924866]
[620.22357178 173.97711182]
[634.94799805 171.11497498]
[649.67242432 168.25283813]
[658.30114746 155.01199341]
[673.78228760 151.83253479]
[686.93121338 160.60079956]
[689.94677734 176.11471558]
[681.04003906 189.17016602]
[665.49505615 192.02157593]
[652.53454590 182.97724915]
[637.81011963 185.83938599]
[623.08569336 188.70152283]
[608.36132812 191.56365967]
[607.18444824 206.51741028]
[621.27978516 211.64772034]
[635.37518311 216.77801514]
[649.47058105 221.90832520]
[663.56597900 227.03862000]
[677.01715088 219.06365967]
[692.43908691 221.65173340]
[702.54998779 233.58082581]
[702.57586670 249.21838379]
[692.50439453 261.18084717]
[677.09112549 263.81988525]
[663.61364746 255.88943481]
[658.43566895 241.13401794]
[644.34027100 236.00370789]
[630.24487305 230.87341309]
[616.14953613 225.74310303]
[602.05413818 220.61280823]
[596.01293945 216.81510925]
[591.38012695 212.06460571]
[588.26806641 206.76922607]
[586.68383789 201.33825684]
[586.53430176 196.15698242]
[587.63702393 191.56365967]
[572.91265869 188.70152283]
[558.18823242 185.83938599]
[546.02209473 194.35531616]
[531.04870605 191.66246033]
[522.19891357 178.84376526]
[507.47448730 175.98162842]
[493.50469971 181.14830017]
[481.43441772 170.91995239]
[466.71002197 168.05781555]
[451.98559570 165.19567871]
[437.26119995 162.33355713]
[422.53677368 159.47142029]
[408.56701660 164.63807678]
[396.49673462 154.40974426]
[381.77230835 151.54760742]
[367.04791260 148.68547058]
[352.32351685 145.82333374]
[337.59909058 142.96119690]
[331.10760498 149.08987427]
[322.38705444 151.56622314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 102]
[3 101]
[4 100]
[9 94]
[10 93]
[11 92]
[12 91]
[13 90]
[14 89]
[15 88]
[23 73]
[24 72]
[25 71]
[26 70]
[27 69]
[29 67]
[30 66]
[31 65]
[32 64]
[33 63]
[34 62]
[35 61]
[36 60]
[41 54]
[42 53]
[43 52]
[76 87]
[77 86]
[78 85]
[79 84]
[104 177]
[105 176]
[106 175]
[107 174]
[108 173]
[110 171]
[111 170]
[112 169]
[113 168]
[114 167]
[116 165]
[117 164]
[120 161]
[121 160]
[122 159]
[123 136]
[124 135]
[125 134]
[126 133]
[137 153]
[138 152]
[139 151]
[140 150]
[141 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
