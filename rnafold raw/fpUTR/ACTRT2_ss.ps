%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAGAGGCCUCAGCAGGCCCAGGCCACCUGGAGGGAGAGCAGACCUGCGGCUGAGGAUGCAGGGCUCCCGGGCACGGUGCUAGCCCUGCCUUGAGACACCCCGAGAGCUGUGGGAAGAGCUGUGGGAUCCCCUAUUGCAUCACAAAGCGGCCCUGGAGGGCUGGUCUUUAUUUUGAUGAGGCUGAGAAGGGAAGGCUGCGGGC\
) } def
/len { sequence length } bind def

/coor [
[100.07245636 297.48712158]
[96.08998108 312.39160156]
[84.66637421 322.76004028]
[69.44686127 325.28393555]
[55.28793716 319.15786743]
[46.70766449 306.33670044]
[46.44397354 290.91159058]
[54.58101273 277.80465698]
[68.52227783 271.19824219]
[70.34779358 256.30972290]
[72.17330933 241.42123413]
[73.99883270 226.53273010]
[71.81336212 222.28219604]
[72.27761078 216.61315918]
[76.11377716 211.22059631]
[78.39248657 196.39469910]
[80.67119598 181.56878662]
[82.94991302 166.74288940]
[77.23586273 152.98793030]
[86.97979736 140.52333069]
[73.73081970 133.49023438]
[62.72763443 143.68482971]
[51.72444916 153.87944031]
[40.72126389 164.07403564]
[29.71807861 174.26864624]
[22.20868874 189.46882629]
[5.52373409 186.46072388]
[3.79541445 169.59510803]
[19.52347565 163.26545715]
[30.52666092 153.07086182]
[41.52984619 142.87625122]
[52.53302765 132.68165588]
[63.53621292 122.48704529]
[55.80495071 112.38581085]
[51.04536438 99.70050049]
[50.09187317 85.35215759]
[35.11977386 84.43769836]
[26.35931778 87.03886414]
[19.92686462 83.39341736]
[4.97045183 82.25074005]
[-9.98596096 81.10806274]
[-24.94237518 79.96538544]
[-29.65475845 82.22873688]
[-34.29919052 82.43487549]
[-38.10258865 80.95484161]
[-40.55157852 78.41298676]
[-55.44008255 76.58747101]
[-70.32858276 74.76195526]
[-85.21708679 72.93643951]
[-100.10558319 71.11092377]
[-114.99408722 69.28540039]
[-125.47588348 80.72706604]
[-140.68775940 83.78952026]
[-154.78042603 77.29519653]
[-162.33497620 63.74129105]
[-160.44653320 48.33955765]
[-149.84123230 37.01227570]
[-134.59703064 34.11502075]
[-120.57564545 40.76184082]
[-113.16857147 54.39690018]
[-98.28006744 56.22241974]
[-83.39156342 58.04793549]
[-68.50306702 59.87345505]
[-53.61456299 61.69897079]
[-38.72606277 63.52449036]
[-23.79969788 65.00897217]
[-8.84328556 66.15164948]
[6.11312723 67.29432678]
[21.06954002 68.43700409]
[36.03423309 69.46559906]
[51.00633240 70.38005829]
[58.24065399 57.23986816]
[49.46092987 45.07777786]
[40.68120575 32.91568756]
[31.90148163 20.75359726]
[23.12175751 8.59150696]
[8.77085972 1.93100119]
[7.59484720 -12.91710472]
[-1.18487716 -25.07919502]
[-9.96460152 -37.24128723]
[-25.13899422 -43.45979309]
[-27.07237434 -59.74457550]
[-13.77584648 -69.34323883]
[1.07226121 -62.38150787]
[2.19748902 -46.02101135]
[10.97721291 -33.85892105]
[19.75693703 -21.69682884]
[33.47985077 -15.90623856]
[35.28384781 -0.18821770]
[44.06357193 11.97387314]
[52.84329605 24.13596344]
[61.62302017 36.29805374]
[70.40274048 48.46014404]
[77.83982086 47.49064636]
[75.90082550 32.61650085]
[73.96183777 17.74234962]
[72.02309418 2.86816859]
[86.89730835 0.92967087]
[88.83598328 15.80335903]
[90.77497864 30.67750740]
[92.71396637 45.55165863]
[100.15103912 44.58216095]
[105.51943970 30.57572365]
[110.88784027 16.56928635]
[111.03751373 7.43204165]
[116.44638062 2.39121962]
[114.39957428 -13.29702950]
[126.31701660 -22.23144913]
[131.89839172 -36.15439224]
[137.47976685 -50.07733154]
[143.06112671 -64.00027466]
[141.01432800 -79.68852234]
[152.93176270 -88.62294006]
[150.07107544 -104.77065277]
[162.79745483 -115.11336517]
[178.01907349 -109.01138306]
[180.07725525 -92.74189758]
[166.85470581 -83.04157257]
[169.30073547 -68.34918213]
[156.98406982 -58.41890335]
[151.40270996 -44.49596024]
[145.82133484 -30.57301903]
[140.23995972 -16.65007782]
[142.68598938 -1.95769119]
[130.36932373 7.97259140]
[124.89427948 21.93768692]
[119.52587891 35.94412231]
[114.15747833 49.95056152]
[135.80500793 73.59897614]
[136.94790649 100.90206146]
[151.55714417 104.30356598]
[166.16638184 107.70506287]
[180.77561951 111.10656738]
[190.87178040 98.34957123]
[205.46780396 91.29692078]
[221.62022400 91.31453705]
[236.09616089 98.34814453]
[246.02044678 110.94433594]
[249.44654846 126.55056763]
[264.10595703 129.72888184]
[279.23223877 125.09135437]
[290.03106689 135.34973145]
[304.69049072 138.52804565]
[319.34988403 141.70635986]
[334.03311157 144.77281189]
[348.73928833 147.72720337]
[363.44546509 150.68159485]
[378.15164185 153.63600159]
[392.85781860 156.59039307]
[407.70065308 158.75598145]
[422.63790894 160.12660217]
[437.57516479 161.49723816]
[452.51239014 162.86785889]
[467.44964600 164.23847961]
[482.38690186 165.60911560]
[497.04409790 158.25393677]
[510.59182739 167.49465942]
[509.09335327 183.82519531]
[494.09017944 190.44610596]
[481.01626587 180.54635620]
[466.07901001 179.17573547]
[451.14178467 177.80511475]
[436.20452881 176.43447876]
[421.26727295 175.06385803]
[406.33001709 173.69323730]
[415.96755981 185.18748474]
[416.09054565 200.18698120]
[406.64276123 211.83770752]
[391.94137573 214.81587219]
[378.70419312 207.76060486]
[372.97991943 193.89581299]
[377.38424683 179.55699158]
[389.90341187 171.29656982]
[375.19723511 168.34216309]
[360.49105835 165.38777161]
[345.78488159 162.43338013]
[331.07870483 159.47898865]
[323.89892578 161.24427795]
[316.17156982 156.36576843]
[301.51217651 153.18745422]
[286.85275269 150.00914001]
[272.77502441 154.87399292]
[260.92764282 144.38829041]
[246.26823425 141.20997620]
[238.28401184 152.55799866]
[226.54020691 160.02874756]
[212.79261780 162.46614075]
[199.11164856 159.46957397]
[187.57043457 151.45930481]
[179.93077087 139.61793518]
[177.37411499 125.71580505]
[162.76487732 122.31430054]
[148.15563965 118.91279602]
[133.54640198 115.51129913]
[122.19612885 133.15574646]
[101.80570984 142.80203247]
[107.35676575 157.61744690]
[97.77581787 169.02159119]
[95.49710846 183.84750366]
[93.21839142 198.67340088]
[90.93968201 213.49931335]
[88.88732910 228.35824585]
[87.06181335 243.24674988]
[85.23629761 258.13525391]
[83.41078186 273.02374268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 205]
[10 204]
[11 203]
[12 202]
[15 201]
[16 200]
[17 199]
[18 198]
[20 196]
[21 33]
[22 32]
[23 31]
[24 30]
[25 29]
[36 71]
[37 70]
[39 69]
[40 68]
[41 67]
[42 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[78 87]
[79 86]
[80 85]
[102 128]
[103 127]
[104 126]
[106 125]
[108 123]
[109 122]
[110 121]
[111 120]
[113 118]
[130 194]
[131 193]
[132 192]
[133 191]
[139 184]
[140 183]
[142 181]
[143 180]
[144 179]
[145 177]
[146 176]
[147 175]
[148 174]
[149 173]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
