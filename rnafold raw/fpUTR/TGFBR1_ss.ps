%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGGCCGGAGCGAGGCCGCCGCGGCGGCUAGGGAGGUGGGGCGAGGCGAGGUUUGCUGGGGUGAGGCAGCGGCGCGGCCGGGCCGGGCCGGGCCACAGGCGGUGGCGGCGGGACC\
) } def
/len { sequence length } bind def

/coor [
[63.94682312 348.18502808]
[49.02591705 346.64666748]
[36.43923569 338.48730469]
[28.94390488 325.49423218]
[28.18210983 310.51187134]
[19.23659897 322.55255127]
[10.29108906 334.59323120]
[1.34557831 346.63388062]
[5.14262629 361.80346680]
[-1.74593794 375.84207153]
[-16.06754494 382.12103271]
[-31.05996895 377.67568970]
[-39.64424515 364.60494995]
[-37.76714325 349.08044434]
[-26.31497192 338.43234253]
[-10.69509602 337.68838501]
[-1.74958587 325.64770508]
[7.19592476 313.60702515]
[16.14143562 301.56634521]
[23.23438835 288.34933472]
[28.32297134 274.23883057]
[33.41155624 260.12832642]
[38.50013733 246.01780701]
[43.58872223 231.90730286]
[40.62782669 217.30996704]
[52.58786011 206.95292664]
[57.67644501 192.84242249]
[54.71554947 178.24508667]
[66.67558289 167.88806152]
[71.76416779 153.77755737]
[76.85275269 139.66705322]
[71.98220062 128.50680542]
[76.20582581 116.65778351]
[87.75315094 110.72586060]
[83.72279358 99.71349335]
[88.13820648 88.84977722]
[98.70835876 83.77159119]
[104.54072571 69.95191193]
[110.37308502 56.13223267]
[104.66463470 41.63908768]
[110.77634430 27.70705032]
[124.62852478 22.35422707]
[130.46089172 8.53454781]
[136.29324341 -5.28513145]
[130.58479309 -19.77827835]
[136.69650269 -33.71031570]
[150.54869080 -39.06313705]
[156.38104248 -52.88281631]
[162.21340942 -66.70249939]
[156.50495911 -81.19564056]
[162.61666870 -95.12767792]
[176.46884155 -100.48049927]
[182.30120850 -114.30017853]
[188.13357544 -128.11985779]
[193.96594238 -141.93954468]
[199.61381531 -155.83563232]
[205.07623291 -169.80567932]
[210.53863525 -183.77571106]
[216.00105286 -197.74575806]
[221.46345520 -211.71580505]
[215.37121582 -226.05184937]
[221.10987854 -240.14164734]
[234.81465149 -245.86132812]
[240.27706909 -259.83135986]
[240.41387939 -276.78475952]
[256.74258423 -281.34646606]
[265.64627075 -266.91867065]
[254.24710083 -254.36895752]
[248.78469849 -240.39891052]
[254.97488403 -226.90013123]
[249.63423157 -212.65470886]
[235.43350220 -206.25338745]
[229.97108459 -192.28335571]
[224.50868225 -178.31330872]
[219.04627991 -164.34326172]
[213.58386230 -150.37322998]
[214.08505249 -142.90232849]
[207.78561401 -136.10717773]
[201.95324707 -122.28749847]
[196.12089539 -108.46781921]
[190.28852844 -94.64813995]
[196.11717224 -80.98935699]
[190.39920044 -66.89115143]
[176.03309631 -60.87013245]
[170.20072937 -47.05045319]
[164.36836243 -33.23077393]
[170.19702148 -19.57198906]
[164.47903442 -5.47378445]
[150.11293030 0.54723126]
[144.28056335 14.36691093]
[138.44819641 28.18659019]
[144.27685547 41.84537506]
[138.55886841 55.94358063]
[124.19276428 61.96459579]
[118.36040497 75.78427887]
[112.52803802 89.60395813]
[115.08164215 106.12973785]
[101.72319031 116.18827057]
[104.95604706 134.25588989]
[90.96325684 144.75563049]
[85.87467194 158.86613464]
[80.78608704 172.97663879]
[83.38301086 188.58325195]
[71.78694916 197.93101501]
[66.69836426 212.04151917]
[69.29528809 227.64813232]
[57.69922638 236.99589539]
[52.61064148 251.10639954]
[47.52206039 265.21688843]
[42.43347549 279.32739258]
[37.34489441 293.43789673]
[50.24934006 285.79098511]
[65.22001648 284.85357666]
[78.97758484 290.83096313]
[88.50843811 302.41384888]
[91.72482300 317.06494141]
[87.92218781 331.57492065]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 19]
[6 18]
[7 17]
[8 16]
[20 111]
[21 110]
[22 109]
[23 108]
[24 107]
[26 105]
[27 104]
[29 102]
[30 101]
[31 100]
[34 98]
[37 96]
[38 95]
[39 94]
[42 91]
[43 90]
[44 89]
[47 86]
[48 85]
[49 84]
[52 81]
[53 80]
[54 79]
[55 78]
[56 76]
[57 75]
[58 74]
[59 73]
[60 72]
[63 69]
[64 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
