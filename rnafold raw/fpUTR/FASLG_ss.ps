%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUCAGAGAGAGAGAGAUAGAGAAAGAGAAAGACAGAGGUGUUUCCCUUAGCUAUGGAAACUCUAUAAGAGAGAUCCAGCUUGCCUCCUCUUGAGCAGUCAGCAACAGGGUCCCGUCCUUGACACCUCAGCCUCUACAGGACUGAGAAGAAGUAAAACCGUUUGCUGGGGCUGGCCUGACUCACCAGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[-100.77481079 253.25045776]
[-113.89125824 245.97317505]
[-124.47032166 235.33911133]
[-131.67948914 222.18510437]
[-134.95141602 207.54629517]
[-134.02864075 192.57470703]
[-128.98376465 178.44851685]
[-120.21379852 166.27938843]
[-108.40889740 157.02496338]
[-94.49971008 151.41394043]
[-109.41754150 149.84600830]
[-124.33536530 148.27809143]
[-139.25318909 146.71015930]
[-154.17102051 145.14222717]
[-163.04635620 147.35942078]
[-169.31585693 143.42698669]
[-184.20649719 141.61894226]
[-199.09712219 139.81089783]
[-203.54640198 149.61218262]
[-210.82980347 157.78927612]
[-220.37271118 163.53099060]
[-231.37130737 166.22474670]
[-242.86000061 165.52029419]
[-253.79617310 161.37086487]
[-263.15472412 154.04722595]
[-270.02404785 144.12245178]
[-284.21337891 148.98692322]
[-298.40267944 153.85140991]
[-308.94784546 165.64591980]
[-323.49645996 162.45420837]
[-337.68576050 167.31869507]
[-351.87509155 172.18316650]
[-366.06442261 177.04763794]
[-376.60955811 188.84214783]
[-391.15817261 185.65045166]
[-405.34750366 190.51492310]
[-415.70916748 203.22586060]
[-431.85260010 200.34112549]
[-437.17080688 184.82826233]
[-426.19290161 172.64559937]
[-410.21197510 176.32560730]
[-396.02264404 171.46112061]
[-386.49243164 160.01455688]
[-370.92889404 162.85832214]
[-356.73956299 157.99383545]
[-342.55026245 153.12936401]
[-328.36093140 148.26489258]
[-318.83068848 136.81831360]
[-303.26715088 139.66207886]
[-289.07785034 134.79760742]
[-274.88851929 129.93312073]
[-272.84082031 115.07355499]
[-285.18557739 106.55258179]
[-297.53033447 98.03160858]
[-309.87509155 89.51064301]
[-316.44476318 88.59604645]
[-320.89099121 85.02964783]
[-322.47424316 80.51097870]
[-334.53808594 71.59673309]
[-346.60192871 62.68249130]
[-359.45849609 63.82121658]
[-369.32522583 56.13715744]
[-371.24218750 44.18499374]
[-383.16085815 35.07755661]
[-395.07952881 25.97011948]
[-406.99819946 16.86268234]
[-423.02630615 17.55500221]
[-433.45184326 5.36125135]
[-430.27725220 -10.36456966]
[-415.93777466 -17.55895615]
[-401.43344116 -10.70299149]
[-397.89074707 4.94401646]
[-385.97207642 14.05145359]
[-374.05343628 23.15889168]
[-362.13476562 32.26633072]
[-344.64025879 33.57411575]
[-337.68768311 50.61865234]
[-325.62384033 59.53289795]
[-313.55999756 68.44714355]
[-301.35412598 77.16588593]
[-289.00936890 85.68685150]
[-276.66461182 94.20782471]
[-264.31985474 102.72879791]
[-244.33460999 90.60478210]
[-221.71553040 91.72276306]
[-204.18978882 104.88552856]
[-197.28907776 124.92025757]
[-182.39843750 126.72830963]
[-167.50781250 128.53636169]
[-152.60310364 130.22441101]
[-137.68527222 131.79232788]
[-122.76744080 133.36026001]
[-107.84960938 134.92817688]
[-92.93178558 136.49610901]
[-77.95561981 135.65074158]
[-63.30900574 132.41398621]
[-48.66239166 129.17721558]
[-34.04232407 125.82257843]
[-19.44975090 122.35028076]
[-4.85718060 118.87797546]
[9.70694637 115.28824615]
[24.24168587 111.58130646]
[38.77642441 107.87437439]
[53.31116104 104.16743469]
[67.84590149 100.46049500]
[67.29770660 76.34644318]
[85.45911407 53.66543579]
[118.73892212 46.41692352]
[126.95910645 33.86986923]
[135.17929077 21.32281876]
[143.39949036 8.77576637]
[151.61967468 -3.77128577]
[148.15110779 -19.19025421]
[156.67179871 -32.50090027]
[172.12658691 -35.80625153]
[185.34640503 -27.14530373]
[188.48817444 -11.65644360]
[179.68794250 1.47106493]
[164.16671753 4.44890213]
[155.94653320 16.99595451]
[147.72634888 29.54300690]
[139.50616455 42.09005737]
[131.28598022 54.63711166]
[135.69436646 60.70473862]
[147.82975769 51.88814545]
[156.64616394 64.02367401]
[144.51113892 72.83999634]
[148.91952515 78.90762329]
[163.39266968 74.96701050]
[177.86579895 71.02639771]
[192.33892822 67.08578491]
[206.81205750 63.14517593]
[221.25299072 59.08810806]
[235.66075134 54.91484833]
[250.06852722 50.74158478]
[261.03219604 38.54609680]
[277.01739502 42.20742035]
[281.57992554 57.95909882]
[270.02624512 69.59715271]
[254.24179077 65.14936066]
[239.83401489 69.32261658]
[225.42625427 73.49588013]
[219.86874390 78.38307953]
[210.75267029 77.61830902]
[196.27954102 81.55892181]
[181.80641174 85.49953461]
[167.33328247 89.44013977]
[152.86013794 93.38075256]
[152.13629150 100.84574127]
[167.06623840 102.29369354]
[165.61802673 117.22362518]
[150.68858337 115.77571869]
[149.96472168 123.24069977]
[163.41113281 129.88858032]
[176.85752869 136.53645325]
[190.30393982 143.18432617]
[203.75033569 149.83219910]
[217.19674683 156.48007202]
[233.51809692 154.88459778]
[242.83912659 168.37721252]
[235.57116699 183.07785034]
[219.19085693 183.86375427]
[210.54887390 169.92646790]
[197.10246277 163.27859497]
[183.65606689 156.63072205]
[170.20965576 149.98284912]
[156.76325989 143.33497620]
[143.31684875 136.68710327]
[118.75642395 147.00958252]
[95.17198181 144.19841003]
[78.45613098 131.67758179]
[71.55283356 114.99523926]
[57.01809692 118.70217133]
[42.48336029 122.40911102]
[27.94862175 126.11604309]
[13.41388321 129.82298279]
[5.85971546 134.98265076]
[-1.38488030 133.47055054]
[-15.97745132 136.94285583]
[-30.57002258 140.41514587]
[-38.20633316 145.45245361]
[-45.42562866 143.82383728]
[-60.07224274 147.06059265]
[-74.71885681 150.29736328]
[-60.26501465 154.30815125]
[-47.49390030 162.17570496]
[-37.41053391 173.28092957]
[-30.80842972 186.74986267]
[-28.20713806 201.52258301]
[-29.81136894 216.43655396]
[-35.49487305 230.31811523]
[-44.81039429 242.07485962]
[-57.02484131 250.78158569]
[-71.17700195 255.75314331]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 94]
[11 93]
[12 92]
[13 91]
[14 90]
[16 89]
[17 88]
[18 87]
[26 51]
[27 50]
[28 49]
[30 47]
[31 46]
[32 45]
[33 44]
[35 42]
[36 41]
[52 83]
[53 82]
[54 81]
[55 80]
[58 79]
[59 78]
[60 77]
[63 75]
[64 74]
[65 73]
[66 72]
[95 184]
[96 183]
[97 182]
[98 180]
[99 179]
[100 178]
[101 176]
[102 175]
[103 174]
[104 173]
[105 172]
[108 123]
[109 122]
[110 121]
[111 120]
[112 119]
[128 148]
[129 147]
[130 146]
[131 145]
[132 144]
[133 142]
[134 141]
[135 140]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
