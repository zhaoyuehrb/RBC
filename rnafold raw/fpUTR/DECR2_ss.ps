%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGGGCGGGGCUCCCGGUUCCAGGCGAGUUCGCAGCUGCGCGCCGGGUCCUGGAGGCCGAGGCCGCUCCCGCCCGUUGUCCCCGCAGUCCCCGACGGGAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[226.25781250 291.01498413]
[214.82383728 278.06332397]
[209.13104248 261.71490479]
[210.05116272 244.39347839]
[217.47344971 228.67759705]
[207.10295105 217.84002686]
[196.73246765 207.00244141]
[186.36198425 196.16487122]
[175.99150085 185.32730103]
[165.62101746 174.48973083]
[155.25053406 163.65214539]
[144.72206116 152.96798706]
[134.03788757 142.43951416]
[116.89248657 139.02990723]
[111.97192383 121.36175537]
[100.98328400 111.15147400]
[89.84593964 101.10361481]
[78.56229401 91.22032166]
[67.27864838 81.33703613]
[55.99500656 71.45375061]
[44.56749344 61.73717117]
[32.99857330 52.18939209]
[21.42965317 42.64161301]
[9.86073303 33.09383392]
[-1.70818710 23.54605293]
[-13.27710724 13.99827290]
[-25.25516701 4.96909380]
[-37.61913681 -3.52397490]
[-46.61743164 -5.86029005]
[-50.21640396 -12.45228481]
[-62.32571793 -21.30465508]
[-78.03266144 -23.20271111]
[-83.74099731 -36.96004105]
[-95.85031128 -45.81241226]
[-107.95963287 -54.66477966]
[-124.31310272 -55.88792419]
[-131.18582153 -70.77744293]
[-121.50773621 -84.01627350]
[-105.23482513 -81.98544312]
[-99.10726166 -66.77409363]
[-86.99794769 -57.92172623]
[-74.88862610 -49.06935501]
[-60.04782867 -47.80448151]
[-53.47334671 -33.41397095]
[-41.36403275 -24.56159973]
[-29.12607002 -15.88794613]
[-16.76209831 -7.39487743]
[-13.10337067 -7.75898600]
[-9.09031868 -6.26481628]
[-5.64853382 -2.76903367]
[-3.72932744 2.42935324]
[7.83959246 11.97713280]
[19.40851212 21.52491188]
[30.97743225 31.07269287]
[42.54635239 40.62047195]
[54.11527252 50.16825104]
[61.39192963 52.02761078]
[65.87829590 60.17010498]
[77.16193390 70.05339050]
[88.44557953 79.93668365]
[99.72922516 89.81996918]
[107.51273346 92.39621735]
[111.19355774 100.16283417]
[122.18220520 110.37310791]
[135.17929077 110.70458221]
[144.13275146 119.56764984]
[144.56636047 131.75535583]
[155.25053406 142.28381348]
[163.70010376 146.16096497]
[166.08810425 153.28166199]
[176.45858765 164.11923218]
[186.82907104 174.95681763]
[197.19955444 185.79438782]
[207.57005310 196.63195801]
[217.94053650 207.46954346]
[228.31101990 218.30711365]
[240.03012085 212.69114685]
[252.84654236 210.65495300]
[265.69323730 212.35760498]
[277.50369263 217.64732361]
[287.30035400 226.07496643]
[294.27560425 236.93214417]
[297.85830688 249.31074524]
[297.76055908 262.17889404]
[294.00079346 274.46701050]
[286.90145874 285.15661621]
[296.27838135 296.86447144]
[311.74145508 298.74362183]
[321.08419800 310.75061035]
[319.19741821 325.48071289]
[328.57434082 337.18853760]
[337.95126343 348.89636230]
[347.32815552 360.60418701]
[362.79455566 366.05612183]
[365.53985596 382.22384644]
[352.73995972 392.47540283]
[337.56228638 386.26489258]
[335.62033081 369.98110962]
[326.24340820 358.27328491]
[316.86648560 346.56546021]
[307.48956299 334.85763550]
[292.70303345 333.48135376]
[283.02673340 321.74151611]
[284.57052612 306.24139404]
[275.19363403 294.53353882]
[258.87594604 299.88519287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 76]
[6 75]
[7 74]
[8 73]
[9 72]
[10 71]
[11 70]
[12 68]
[13 67]
[15 64]
[16 63]
[17 61]
[18 60]
[19 59]
[20 58]
[21 56]
[22 55]
[23 54]
[24 53]
[25 52]
[26 51]
[27 47]
[28 46]
[30 45]
[31 44]
[33 42]
[34 41]
[35 40]
[86 105]
[87 104]
[90 101]
[91 100]
[92 99]
[93 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
