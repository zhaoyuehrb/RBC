%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGACUUGGCCUCCGCAGCUGCCCUCCGGCCCCCCACGGCUGCCGGGUUCCGGGGUGCAAGUGAAGCAGCCUCCCCGCGGAGGCCGCAGCGCCCCGACCAGGCCUCUUUAAGCGCAGGCCCCGCCCCGGGCGCCACCGCCCCGCCCCGCGGAUCCCGCUCCCGCACCGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[117.49694061 350.95474243]
[130.15545654 342.53866577]
[127.22910309 327.82690430]
[124.30274963 313.11511230]
[121.37639618 298.40332031]
[118.63121033 296.14224243]
[116.85968781 292.42504883]
[116.74052429 287.73098755]
[118.70941162 282.82684326]
[116.57468414 267.97952271]
[114.43996429 253.13220215]
[102.39944458 244.43959045]
[100.02303314 229.41270447]
[109.22228241 216.84243774]
[107.08756256 201.99511719]
[104.95283508 187.14779663]
[102.81811523 172.30047607]
[100.68339539 157.45315552]
[87.18580627 156.01007080]
[74.40345764 151.44073486]
[63.04980469 144.00016785]
[53.75856781 134.10369873]
[47.04834366 122.30368805]
[32.58281326 126.27210999]
[18.11728096 130.24053955]
[3.65174961 134.20896912]
[-4.20240688 147.66072083]
[-18.92904472 151.47920227]
[-31.70484352 143.90856934]
[-46.17037582 147.87699890]
[-60.63590622 151.84542847]
[-75.10144043 155.81384277]
[-89.56697083 159.78227234]
[-97.16876221 173.63825989]
[-112.36486053 177.98037720]
[-126.13970184 170.23251343]
[-130.32090759 154.99134827]
[-122.42785645 141.29919434]
[-107.14333344 137.27935791]
[-93.53539276 145.31674194]
[-79.06986237 141.34831238]
[-64.60433197 137.37988281]
[-50.13880157 133.41146851]
[-35.67327118 129.44303894]
[-28.54896927 116.41307831]
[-13.93539429 112.18246460]
[-0.31667560 119.74343109]
[14.14885616 115.77500916]
[28.61438751 111.80657959]
[43.07991791 107.83815765]
[44.18941116 86.34312439]
[53.13065720 66.76452637]
[68.64895630 51.84977341]
[62.17518234 38.31868744]
[55.70141220 24.78760338]
[49.22763824 11.25651741]
[42.75386429 -2.27456737]
[36.28009033 -15.80565262]
[29.80631828 -29.33673668]
[23.33254623 -42.86782074]
[11.43322277 -47.89920425]
[6.32745647 -59.32867432]
[10.26076031 -70.78931427]
[4.02953529 -84.43379974]
[-2.20168996 -98.07827759]
[-9.96951771 -85.24625397]
[-24.82048798 -83.13705444]
[-35.85399246 -93.29883575]
[-34.97145081 -108.27285004]
[-22.82064438 -117.06818390]
[-8.31912136 -113.22810364]
[-13.30939484 -127.37367249]
[-18.29966736 -141.51924133]
[-23.28994179 -155.66481018]
[-28.28021431 -169.81037903]
[-33.27048874 -183.95594788]
[-46.07292938 -194.20434570]
[-43.33163452 -210.37275696]
[-27.86661339 -215.82850647]
[-15.58695412 -204.95918274]
[-19.12491608 -188.94622803]
[-14.13464355 -174.80065918]
[-9.14437008 -160.65509033]
[-4.15409708 -146.50952148]
[0.83617622 -132.36395264]
[5.82644939 -118.21837616]
[11.44279003 -104.30950165]
[17.67401505 -90.66502380]
[23.90524101 -77.02054596]
[38.72449875 -67.64646149]
[36.86363220 -49.34159470]
[43.33740234 -35.81050873]
[49.81117630 -22.27942467]
[56.28495026 -8.74834061]
[62.75872421 4.78274488]
[69.23249817 18.31382942]
[75.70626831 31.84491539]
[82.18003845 45.37599945]
[94.06228638 42.85040665]
[106.20993805 42.87934875]
[118.08001709 45.46152496]
[129.14193726 50.48151779]
[138.90122986 57.71493912]
[150.41099548 48.09593582]
[161.92076111 38.47692871]
[173.43054199 28.85792351]
[184.94030762 19.23891830]
[196.36376953 9.51757336]
[195.93476868 -6.11412477]
[205.69444275 -18.33225632]
[221.03456116 -21.36779404]
[234.71200562 -13.78744984]
[240.26869202 0.82956988]
[235.08093262 15.58155537]
[221.59820557 23.50307083]
[206.18667603 20.85381699]
[203.18093872 27.63235474]
[194.55931091 30.74868584]
[183.04954529 40.36769104]
[171.53977966 49.98669815]
[160.03001404 59.60570145]
[148.52023315 69.22470856]
[153.38372803 78.75124359]
[156.39720154 89.01416779]
[157.45620728 99.65779877]
[172.33926392 101.52717590]
[180.56182861 94.34485626]
[191.16439819 92.92111206]
[200.59432983 97.48831177]
[205.82604980 106.31163025]
[220.63290405 108.71102142]
[235.43975830 111.11041260]
[250.24661255 113.50980377]
[265.05346680 115.90919495]
[280.18383789 109.58429718]
[293.06072998 119.73896790]
[290.43753052 135.92695618]
[275.01275635 141.49543762]
[262.65408325 130.71604919]
[247.84722900 128.31666565]
[233.04037476 125.91726685]
[218.23352051 123.51787567]
[203.42666626 121.11848450]
[185.93237305 129.31063843]
[170.46989441 116.41023254]
[155.58682251 114.54086304]
[149.97161865 128.35787964]
[140.98937988 140.26417542]
[129.24530029 149.45750427]
[115.53071594 155.31843567]
[117.66543579 170.16575623]
[119.80016327 185.01307678]
[121.93488312 199.86039734]
[124.06960297 214.70771790]
[136.43768311 224.17706299]
[138.39108276 239.26477051]
[129.28729248 250.99748230]
[131.42201233 265.84481812]
[133.55673218 280.69213867]
[136.08818054 295.47698975]
[139.01452637 310.18875122]
[141.94088745 324.90054321]
[144.86723328 339.61230469]
[159.78288269 342.54354858]
[172.43864441 350.96377563]
[180.90460205 363.58898926]
[183.88975525 378.49392700]
[180.93891907 393.40570068]
[172.50204468 406.05035400]
[159.86570740 414.49969482]
[144.95684814 417.46527100]
[130.04898071 414.49481201]
[117.41541290 406.04132080]
[108.98270416 393.39385986]
[106.03675842 378.48110962]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 163]
[3 162]
[4 161]
[5 160]
[9 159]
[10 158]
[11 157]
[14 154]
[15 153]
[16 152]
[17 151]
[18 150]
[23 50]
[24 49]
[25 48]
[26 47]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[53 98]
[54 97]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[63 89]
[64 88]
[65 87]
[71 86]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
[103 122]
[104 121]
[105 120]
[106 119]
[107 118]
[108 116]
[125 146]
[126 145]
[130 143]
[131 142]
[132 141]
[133 140]
[134 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
