%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGUUUCCUGGCUGAACACGCCAGCCCAAUACUUAAAGAGAGCAACUCCUGACUCCGAUAGAGACUGGAUGGACCCACAAGGGUGACAGCCCAGGCGGACCGAUCUUCCCAUCCCACAUCCUCCGGCGCGAUGCCAAAAAGAGGCUGACGGCAACUGGGCCUUCUGCAGAGAAAGACCUCCGCUUCACUGCCCCGGCUGGUCCCAAGGGUCAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[72.43898773 484.13027954]
[59.28455353 492.36074829]
[43.80701447 491.25378418]
[31.95779610 481.23501587]
[28.29316330 466.15689087]
[34.22224426 451.81723022]
[47.46518326 443.72994995]
[48.53527069 428.76815796]
[49.60536194 413.80639648]
[50.67544937 398.84460449]
[51.74553680 383.88281250]
[52.81562424 368.92105103]
[53.88571167 353.95925903]
[54.95579910 338.99746704]
[56.02588654 324.03570557]
[42.63797760 317.42562866]
[32.77404404 306.16293335]
[27.96061707 291.94335938]
[28.96068764 276.92379761]
[35.65293121 263.39501953]
[47.04546738 253.43244934]
[61.42275620 248.57762146]
[62.49284363 233.61584473]
[63.56293106 218.65405273]
[64.63301849 203.69227600]
[65.70310211 188.73049927]
[66.77319336 173.76870728]
[67.84328461 158.80693054]
[62.03722000 154.05934143]
[53.92506790 166.67651367]
[45.81291962 179.29368591]
[40.90367126 193.46757507]
[26.47123718 197.55471802]
[14.85910320 188.05955505]
[15.99867058 173.10290527]
[28.91534805 165.47660828]
[39.67021942 155.02037048]
[50.42509460 144.56414795]
[44.61903381 139.81655884]
[30.16776085 143.83659363]
[22.74468422 149.14804077]
[15.48138809 147.80928040]
[0.97418493 151.62255859]
[-13.53301811 155.43583679]
[-27.31469536 165.31013489]
[-40.61824799 154.80052185]
[-34.20215225 139.10752869]
[-17.34629250 140.92863464]
[-2.83909011 137.11535645]
[11.66811275 133.30207825]
[26.14771843 129.38533020]
[40.59899139 125.36528778]
[40.11737442 117.88076782]
[39.15414047 102.91172791]
[38.67252350 95.42720032]
[23.82520103 93.29248047]
[8.97787952 91.15776062]
[-4.67524338 99.58223724]
[-19.72504234 94.02497864]
[-24.62660027 78.74903870]
[-15.61986065 65.47281647]
[0.38597581 64.38068390]
[11.11260128 76.31044006]
[25.95992279 78.44515991]
[40.80724335 80.57987976]
[48.50094986 74.36229706]
[56.66013718 69.91489410]
[64.94223785 67.22934723]
[73.01856232 66.23667145]
[65.82982635 53.07148743]
[58.64109421 39.90630341]
[51.45235825 26.74111938]
[44.26362610 13.57593441]
[37.07489014 0.41074988]
[13.90114498 -4.00798988]
[1.73319066 -23.91100311]
[8.21611691 -46.04560852]
[-0.42647743 -58.30552673]
[-14.70167446 -65.12676239]
[-15.71087360 -79.98714447]
[-31.02990150 -82.80941010]
[-39.62007523 -95.36582184]
[-36.83506775 -109.95278168]
[-45.47766495 -122.21269989]
[-54.12025833 -134.47261047]
[-62.76285172 -146.73252869]
[-77.86645508 -153.12104797]
[-79.61684418 -169.42651367]
[-66.21336365 -178.87525940]
[-51.44437027 -171.74722290]
[-50.50293732 -155.37512207]
[-41.86034012 -143.11520386]
[-33.21774673 -130.85528564]
[-24.57515335 -118.59537506]
[-9.90060902 -116.31647491]
[-0.96114218 -104.00629425]
[-3.45095730 -88.62973785]
[10.20606327 -82.68540955]
[11.83343887 -66.94812012]
[20.47603416 -54.68820190]
[27.30427933 -56.31978989]
[34.34605789 -56.22415543]
[41.16989517 -54.39636993]
[47.35501862 -50.93797684]
[52.51731491 -46.05139923]
[56.33316803 -40.02812195]
[58.55973053 -33.23131180]
[59.05038071 -26.07393646]
[57.76430130 -18.99365997]
[54.76966095 -12.42609310]
[50.24007416 -6.77798510]
[57.42881012 6.38719988]
[64.61754608 19.55238533]
[71.80628204 32.71757126]
[78.99501038 45.88275528]
[86.18374634 59.04793930]
[101.31409454 54.17271423]
[118.10170746 55.03450012]
[134.33309937 62.15424728]
[143.82829285 50.54212189]
[146.57420349 34.96102905]
[160.62049866 30.00612450]
[170.11567688 18.39400101]
[179.61087036 6.78187704]
[189.10604858 -4.83024740]
[191.10491943 -27.15256882]
[211.64331055 -33.98653793]
[220.46008301 -46.12179184]
[229.27685547 -58.25704956]
[228.19744873 -74.26374817]
[240.13571167 -84.98089600]
[255.93365479 -82.18721008]
[263.47244263 -68.02577209]
[256.96896362 -53.36002350]
[241.41210938 -49.44026947]
[232.59533691 -37.30501556]
[223.77856445 -25.16975975]
[226.63592529 -17.84367371]
[226.36579895 -9.89079762]
[222.93803406 -2.60557246]
[216.84245300 2.79704785]
[209.02005005 5.38405991]
[200.71818542 4.66493940]
[191.22299194 16.27706337]
[181.72781372 27.88918877]
[172.23262024 39.50131226]
[170.16586304 54.25183105]
[155.44041443 60.03731155]
[145.94523621 71.64943695]
[147.95524597 78.87506866]
[161.85520935 73.23670959]
[171.55943298 61.79869080]
[186.55941772 61.79058075]
[196.27600098 73.21809387]
[193.85624695 88.02163696]
[181.00677490 95.76055908]
[166.79014587 90.97684479]
[151.97529602 93.32633972]
[153.98532104 100.55197906]
[168.11297607 105.59272003]
[182.24064636 110.63346100]
[196.36831665 115.67420197]
[207.85415649 104.14550018]
[223.16349792 98.80050659]
[239.21328735 100.66183472]
[252.79478455 109.30623627]
[261.21502686 122.95951080]
[262.83074951 138.86038208]
[277.02893066 143.69886780]
[292.58724976 140.82661438]
[302.13842773 152.25572205]
[316.33660889 157.09422302]
[330.53482056 161.93270874]
[344.60519409 154.73547363]
[359.61776733 159.67495728]
[366.66583252 173.82064819]
[361.56790161 188.78015137]
[347.34848022 195.67825317]
[332.44372559 190.42245483]
[325.69631958 176.13090515]
[311.49813843 171.29241943]
[297.29992676 166.45393372]
[282.75717163 169.67225647]
[272.19046021 157.89707947]
[257.99224854 153.05857849]
[248.76365662 163.41258240]
[236.24681091 169.48744202]
[222.31623840 170.33668518]
[209.07220459 165.79922485]
[198.52409363 156.52857971]
[192.28553772 143.89901733]
[191.32757568 129.80186462]
[177.19990540 124.76112366]
[163.07223511 119.72038269]
[148.94458008 114.67964172]
[127.17649841 149.76022339]
[82.80506134 159.87701416]
[81.73497772 174.83880615]
[80.66488647 189.80058289]
[79.59480286 204.76235962]
[78.52471161 219.72415161]
[77.45462799 234.68592834]
[76.38453674 249.64770508]
[89.92456818 256.49920654]
[99.78332520 267.98171997]
[104.48210144 282.32519531]
[103.33448792 297.33422852]
[96.54640198 310.72399902]
[85.18002319 320.46829224]
[70.98767090 325.10577393]
[69.91757965 340.06756592]
[68.84749603 355.02935791]
[67.77740479 369.99111938]
[66.70732117 384.95291138]
[65.63722992 399.91470337]
[64.56713867 414.87646484]
[63.49705505 429.83825684]
[62.42696762 444.80004883]
[74.38417053 454.68966675]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 218]
[8 217]
[9 216]
[10 215]
[11 214]
[12 213]
[13 212]
[14 211]
[15 210]
[22 203]
[23 202]
[24 201]
[25 200]
[26 199]
[27 198]
[28 197]
[39 52]
[40 51]
[42 50]
[43 49]
[44 48]
[55 65]
[56 64]
[57 63]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
[74 111]
[77 100]
[78 99]
[80 97]
[83 94]
[84 93]
[85 92]
[86 91]
[119 149]
[120 148]
[122 146]
[123 145]
[124 144]
[125 143]
[127 137]
[128 136]
[129 135]
[159 195]
[160 194]
[161 193]
[162 192]
[168 185]
[169 184]
[171 182]
[172 181]
[173 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
