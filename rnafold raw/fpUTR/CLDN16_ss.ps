%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUCCGAGUGGGGAGGAGAAUAGCUCACUCUCCCUAGAGGGCCUAAGAAAGAUCAGUUUACAGGUUCCAGCAUGGGGUGGGACCCUUCCUCCUUCCCCCGUCUUGGCACUGGCACUUGGUCUGGUGACCACCACUAGCCCACAGUUGGGUCAGAAAACGUUACAGAACUCCUCUCUCCCCCACCCGAAACACACUCAGCCCUUGCACUGACCUGCCUUCUGAUUGGAGGCUGGUUGCUUCGGAUA\
) } def
/len { sequence length } bind def

/coor [
[68.60739136 230.93933105]
[53.10142899 230.35214233]
[40.92281723 220.73648071]
[36.75448227 205.78976440]
[42.19923019 191.25929260]
[55.16344452 182.73236084]
[55.73106766 167.74310303]
[56.29869080 152.75384521]
[56.86631393 137.76458740]
[57.43393326 122.77532959]
[52.87073517 108.48626709]
[43.72055817 96.60038757]
[34.57037735 84.71450043]
[25.42020035 72.82862091]
[16.27002144 60.94273376]
[7.11984396 49.05685043]
[-7.42940187 42.84154510]
[-9.06221199 28.03670883]
[-18.21239090 16.15082359]
[-27.36256790 4.26493979]
[-36.51274490 -7.62094450]
[-45.66292572 -19.50682831]
[-61.08702087 -21.68282318]
[-70.19728851 -33.86714935]
[-68.02775574 -48.55825806]
[-77.17793274 -60.44414139]
[-91.72718048 -66.65944672]
[-93.35998535 -81.46428680]
[-102.51016235 -93.35016632]
[-121.00235748 -86.99079132]
[-142.36370850 -93.90690613]
[-154.53224182 -85.13612366]
[-166.70079041 -76.36534119]
[-178.86932373 -67.59455872]
[-191.03787231 -58.82377243]
[-197.26753235 -43.65395355]
[-213.55372620 -41.73254395]
[-223.14260864 -55.03612137]
[-216.16996765 -69.87911224]
[-199.80865479 -70.99230957]
[-187.64010620 -79.76309204]
[-175.47157288 -88.53388214]
[-163.30302429 -97.30466461]
[-151.13449097 -106.07544708]
[-150.94526672 -113.57305908]
[-165.82910156 -111.70987701]
[-179.73008728 -106.07405853]
[-192.06401062 -114.61069489]
[-191.68572998 -129.60592651]
[-178.93704224 -137.50978088]
[-165.33769226 -131.17991638]
[-150.56678772 -128.56828308]
[-150.37756348 -136.06588745]
[-162.08816528 -145.43936157]
[-173.79875183 -154.81283569]
[-185.50935364 -164.18630981]
[-197.21995544 -173.55976868]
[-208.93054199 -182.93324280]
[-220.64114380 -192.30671692]
[-234.92623901 -186.84014893]
[-249.93051147 -189.24194336]
[-261.64019775 -198.76818848]
[-266.97372437 -212.78280640]
[-264.59225464 -227.48634338]
[-276.30285645 -236.85981750]
[-288.01345825 -246.23329163]
[-301.12554932 -243.21873474]
[-313.40350342 -248.22583008]
[-320.45794678 -259.22293091]
[-319.90649414 -272.08193970]
[-331.49789429 -281.60241699]
[-343.08929443 -291.12286377]
[-354.68072510 -300.64334106]
[-370.25579834 -303.42321777]
[-375.18005371 -317.48025513]
[-386.77148438 -327.00073242]
[-398.36288452 -336.52120972]
[-409.95428467 -346.04168701]
[-421.54568481 -355.56213379]
[-433.13708496 -365.08261108]
[-451.37881470 -367.67910767]
[-456.88497925 -384.35299683]
[-468.59558105 -393.72647095]
[-480.30618286 -403.09994507]
[-492.01678467 -412.47341919]
[-507.31332397 -409.22531128]
[-521.09460449 -416.61514282]
[-526.85357666 -431.15365601]
[-521.87103271 -445.97619629]
[-508.49951172 -454.08404541]
[-493.05270386 -451.64886475]
[-482.82409668 -439.82055664]
[-482.64331055 -424.18399048]
[-470.93270874 -414.81054688]
[-459.22210693 -405.43707275]
[-447.51153564 -396.06359863]
[-435.47396851 -397.08721924]
[-425.64434814 -389.39535522]
[-423.61660767 -376.67401123]
[-412.02520752 -367.15356445]
[-400.43380737 -357.63308716]
[-388.84240723 -348.11260986]
[-377.25100708 -338.59213257]
[-365.65960693 -329.07165527]
[-350.91360474 -326.97277832]
[-345.16024780 -312.23474121]
[-333.56884766 -302.71429443]
[-321.97744751 -293.19381714]
[-310.38601685 -283.67333984]
[-293.72189331 -286.02307129]
[-280.25662231 -275.37432861]
[-278.63998413 -257.94387817]
[-266.92938232 -248.57041931]
[-255.21879578 -239.19694519]
[-241.39375305 -244.74073792]
[-226.55128479 -242.60597229]
[-214.69181824 -233.26683044]
[-209.06231689 -219.15281677]
[-211.26766968 -204.01730347]
[-199.55706787 -194.64384460]
[-187.84648132 -185.27037048]
[-176.13587952 -175.89689636]
[-164.42529297 -166.52343750]
[-152.71469116 -157.14996338]
[-141.00408936 -147.77648926]
[-121.87052917 -152.56568909]
[-105.80452728 -147.03791809]
[-97.89858246 -159.78530884]
[-89.99263763 -172.53269958]
[-82.08669281 -185.28010559]
[-74.18074799 -198.02749634]
[-82.28668213 -210.91372681]
[-83.98692322 -225.98011780]
[-78.99746704 -240.23233032]
[-68.35848999 -250.86122131]
[-54.21803284 -255.79647827]
[-39.39842987 -254.10983276]
[-31.49248314 -266.85720825]
[-30.79428291 -282.66302490]
[-17.51084900 -289.40093994]
[-9.60490322 -302.14831543]
[-1.69895792 -314.89572144]
[6.20698738 -327.64312744]
[14.11293316 -340.39050293]
[14.08901310 -356.78964233]
[28.41281509 -364.77465820]
[42.34923935 -356.13128662]
[41.56168747 -339.75106812]
[26.86032486 -332.48455811]
[18.95438004 -319.73718262]
[11.04843521 -306.98977661]
[3.14248967 -294.24237061]
[-4.76345539 -281.49499512]
[-4.89616919 -266.60098267]
[-18.74509048 -258.95126343]
[-26.65103531 -246.20387268]
[-18.55411911 -233.67768860]
[-16.69110107 -218.81704712]
[-21.48465157 -204.56283569]
[-32.03475952 -193.75933838]
[-46.28719711 -188.58682251]
[-61.43335342 -190.12155151]
[-69.33929443 -177.37416077]
[-77.24523926 -164.62675476]
[-85.15119171 -151.87936401]
[-93.05713654 -139.13197327]
[-85.17338562 -121.43902588]
[-90.62428284 -102.50034332]
[-81.47410583 -90.61446381]
[-67.57933807 -85.24931335]
[-65.29204559 -69.59432220]
[-56.14186859 -57.70843506]
[-41.38451767 -56.04824448]
[-31.93561935 -44.12461472]
[-33.77703857 -28.65700722]
[-24.62686157 -16.77112198]
[-15.47668362 -4.88523817]
[-6.32650614 7.00064564]
[2.82367206 18.88652992]
[16.71843529 24.25167656]
[19.00572777 39.90667343]
[28.15590668 51.79255676]
[37.30608368 63.67844009]
[46.45626068 75.56432343]
[55.60644150 87.45021057]
[64.75662231 99.33609009]
[62.42497635 84.51841736]
[56.69138336 70.65747070]
[55.30765915 55.72142792]
[58.39727402 41.04306793]
[65.68453217 27.93216515]
[76.51918793 17.55862808]
[89.93444061 10.84810925]
[104.73321533 8.39940071]
[119.59500122 10.43100452]
[133.19364929 16.76163673]
[144.31571960 26.82640457]
[151.96876526 39.72721100]
[155.46990967 54.31288910]
[154.50679016 69.28167725]
[139.52714539 70.06285858]
[153.04753113 76.55893707]
[169.34988403 74.77983093]
[178.82223511 88.16664124]
[171.72023010 102.94816589]
[155.34980774 103.91844177]
[146.55145264 90.07933044]
[133.03106689 83.58325195]
[128.16200256 89.28783417]
[133.17359924 103.42586517]
[118.42388153 100.69699860]
[113.55481720 106.40158081]
[122.09375000 118.73391724]
[130.63269043 131.06625366]
[139.17161560 143.39859009]
[153.38880920 150.33993530]
[154.27268982 165.20829773]
[162.81163025 177.54063416]
[171.35055542 189.87297058]
[179.88949585 202.20532227]
[188.42842102 214.53765869]
[196.96736145 226.86999512]
[212.43116760 231.14201355]
[218.59994507 245.95166016]
[210.74151611 259.93826294]
[194.88421631 262.37246704]
[183.19239807 251.38699341]
[184.63502502 235.40893555]
[176.09608459 223.07658386]
[167.55715942 210.74424744]
[159.01821899 198.41191101]
[150.47927856 186.07957458]
[141.94035339 173.74722290]
[128.33392334 167.68797302]
[126.83927917 151.93753052]
[118.30034637 139.60519409]
[109.76141357 127.27285004]
[101.22248077 114.94051361]
[94.02265930 117.04112244]
[90.46122742 131.61219788]
[79.62301636 121.24234009]
[72.42318726 123.34294891]
[71.85556793 138.33221436]
[71.28794861 153.32145691]
[70.72032166 168.31071472]
[70.15270233 183.29997253]
[82.43490601 192.78295898]
[86.76514435 207.68359375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 246]
[7 245]
[8 244]
[9 243]
[10 242]
[11 186]
[12 185]
[13 184]
[14 183]
[15 182]
[16 181]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[25 172]
[26 171]
[28 169]
[29 168]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[64 114]
[65 113]
[66 112]
[70 109]
[71 108]
[72 107]
[73 106]
[75 104]
[76 103]
[77 102]
[78 101]
[79 100]
[80 99]
[82 96]
[83 95]
[84 94]
[85 93]
[127 166]
[128 165]
[129 164]
[130 163]
[131 162]
[137 156]
[138 155]
[140 153]
[141 152]
[142 151]
[143 150]
[144 149]
[201 208]
[202 207]
[212 238]
[213 237]
[214 236]
[215 235]
[217 233]
[218 232]
[219 231]
[220 230]
[221 229]
[222 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
