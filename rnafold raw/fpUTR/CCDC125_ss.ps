%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGCUGGAGUCCGGGCUCCGGUCCCCGCCACGGACCUUGAGAGGGUACCCGGGGUCAGACCUGGCAGACAGCCCAUUUUUUCUUAUGAUAAAGACGGCAUUUGGCUC\
) } def
/len { sequence length } bind def

/coor [
[66.98172760 246.05638123]
[69.72662354 226.87004089]
[70.15888977 211.87628174]
[70.59116364 196.88250732]
[71.02342987 181.88873291]
[71.45570374 166.89495850]
[71.88796997 151.90119934]
[72.32023621 136.90742493]
[72.75251007 121.91365051]
[66.07781982 108.48053741]
[57.12814331 105.98686218]
[53.64530945 99.33783722]
[41.69039536 90.27803802]
[29.73547745 81.21823120]
[17.78056335 72.15843201]
[5.82564688 63.09863281]
[-3.04844856 60.34807587]
[-6.33822489 53.60144806]
[-18.02709007 44.20089340]
[-33.62997437 41.58162308]
[-38.69880676 27.57604599]
[-50.38766861 18.17549133]
[-59.17881393 15.17034340]
[-62.27280045 8.33171177]
[-73.68590546 -1.40178812]
[-85.09901428 -11.13528728]
[-96.51211548 -20.86878777]
[-107.92522430 -30.60228729]
[-112.57594299 -31.25955963]
[-116.32998657 -33.24304581]
[-118.86614227 -36.07559204]
[-120.06458282 -39.22361374]
[-120.00687408 -42.17258453]
[-130.22454834 -53.15435028]
[-140.59941101 -63.98773193]
[-151.12931824 -74.67048645]
[-161.65921021 -85.35323334]
[-172.18911743 -96.03598785]
[-182.71900940 -106.71873474]
[-198.14408875 -113.75461578]
[-195.65325928 -130.52459717]
[-178.84912109 -132.77349854]
[-172.03627014 -117.24864197]
[-161.50636292 -106.56588745]
[-150.97645569 -95.88313293]
[-140.44656372 -85.20038605]
[-129.91665649 -74.51763153]
[-122.87303162 -71.92400360]
[-119.24278259 -63.37202072]
[-109.02510834 -52.39025879]
[-98.19172668 -42.01539230]
[-86.77861786 -32.28189468]
[-75.36550903 -22.54839325]
[-63.95240784 -12.81489372]
[-52.53930283 -3.08139443]
[-40.98711395 6.48662615]
[-29.29825020 15.88718033]
[-14.53143120 17.83405685]
[-8.62653542 32.51202774]
[3.06233001 41.91258240]
[14.88544846 51.14371872]
[26.84036446 60.20351791]
[38.79528046 69.26332092]
[50.75019455 78.32312012]
[62.70510864 87.38291931]
[74.78933716 96.26950836]
[79.89114380 85.61590576]
[89.02298737 78.69960022]
[99.95765686 76.79885864]
[110.20661926 80.01571655]
[117.58582306 87.32337189]
[120.68055725 96.86265564]
[135.33146667 100.07993317]
[149.98237610 103.29721069]
[163.19313049 95.04409027]
[178.00540161 98.51557922]
[185.79206848 111.16086578]
[200.44297791 114.37814331]
[215.09388733 117.59542084]
[229.74479675 120.81269073]
[244.88333130 116.21539307]
[255.65487671 126.50243378]
[270.30578613 129.71971130]
[285.76376343 124.24408722]
[298.05740356 135.09761047]
[294.54003906 151.11509705]
[278.83001709 155.81913757]
[267.08850098 144.37062073]
[252.43759155 141.15335083]
[238.34698486 145.98077393]
[226.52752686 135.46360779]
[211.87661743 132.24632263]
[197.22570801 129.02905273]
[182.57479858 125.81177521]
[170.20634460 134.03108215]
[155.30241394 130.97702026]
[146.76510620 117.94812012]
[132.11419678 114.73084259]
[117.46328735 111.51356506]
[105.58620453 122.51863861]
[87.74627686 122.34592438]
[87.31401062 137.33969116]
[86.88173676 152.33346558]
[86.44947052 167.32723999]
[86.01720428 182.32099915]
[85.58493042 197.31477356]
[85.15266418 212.30854797]
[84.72039032 227.30230713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 108]
[3 107]
[4 106]
[5 105]
[6 104]
[7 103]
[8 102]
[9 101]
[10 66]
[12 65]
[13 64]
[14 63]
[15 62]
[16 61]
[18 60]
[19 59]
[21 57]
[22 56]
[24 55]
[25 54]
[26 53]
[27 52]
[28 51]
[33 50]
[34 49]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[72 99]
[73 98]
[74 97]
[77 94]
[78 93]
[79 92]
[80 91]
[82 89]
[83 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
