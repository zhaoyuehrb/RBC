%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUUAGGAAAGGGGCGGAGCUGCAGGGGUGGUUGGCUGAGGCUGGCUUCUGCGUGGUGCAGCUGCGCACGUGUUUCAGCCGGCAGCGCUUUAAGAUUUCCGGGG\
) } def
/len { sequence length } bind def

/coor [
[75.36959839 328.77386475]
[67.09132385 341.42144775]
[55.45182037 351.06579590]
[41.48607254 356.84933472]
[26.43590164 358.25778198]
[11.63955784 355.16592407]
[-1.58727634 347.84866333]
[-12.06848049 336.95666504]
[-18.87207413 323.45843506]
[-21.39308357 308.55419922]
[-19.40734482 293.56927490]
[-13.09142685 279.83605957]
[-3.00693798 268.57577515]
[9.94941616 260.78961182]
[24.62556648 257.16992188]
[39.71651840 258.03860474]
[44.93954086 243.97731018]
[50.16256714 229.91601562]
[55.38558960 215.85472107]
[60.60861588 201.79342651]
[65.41266632 187.58352661]
[69.79351807 173.23751831]
[62.59166718 160.25025940]
[66.83010864 145.63894653]
[80.50117493 138.17304993]
[84.88202667 123.82702637]
[89.26287842 109.48101044]
[86.30056763 95.81659698]
[96.39110565 86.13813782]
[100.77195740 71.79212189]
[97.40242767 56.33389282]
[108.51947784 46.42124557]
[112.90032959 32.07523346]
[117.28118134 17.72921753]
[121.66203308 3.38320255]
[126.04288483 -10.96281242]
[130.42373657 -25.30882645]
[134.80458069 -39.65484238]
[139.18544006 -54.00085831]
[143.56628418 -68.34687042]
[147.94714355 -82.69288635]
[152.32798767 -97.03890228]
[156.70884705 -111.38491821]
[155.54864502 -118.16052246]
[157.76158142 -123.61666107]
[161.79760742 -126.43698120]
[167.02064514 -140.49827576]
[161.84506226 -150.29484558]
[162.98507690 -161.09289551]
[169.80825806 -169.25245667]
[179.80859375 -172.16145325]
[185.85543823 -185.88864136]
[191.90229797 -199.61582947]
[197.94914246 -213.34301758]
[203.99598694 -227.07019043]
[210.04284668 -240.79737854]
[216.08969116 -254.52456665]
[222.13655090 -268.25173950]
[222.98838806 -285.18429565]
[239.49501038 -289.05313110]
[247.78213501 -274.26257324]
[235.86373901 -262.20489502]
[229.81687927 -248.47770691]
[223.77003479 -234.75053406]
[217.72317505 -221.02334595]
[211.67633057 -207.29615784]
[205.62947083 -193.56896973]
[199.58262634 -179.84179688]
[193.53576660 -166.11460876]
[197.18386841 -147.22325134]
[181.08193970 -135.27525330]
[175.85890198 -121.21395874]
[171.05485535 -107.00406647]
[166.67401123 -92.65805054]
[162.29315186 -78.31203461]
[157.91230774 -63.96601868]
[153.53144836 -49.62000656]
[149.15060425 -35.27399063]
[144.76974487 -20.92797470]
[140.38890076 -6.58196068]
[136.00804138 7.76405430]
[131.62719727 22.11006927]
[127.24634552 36.45608521]
[122.86549377 50.80209732]
[126.54837036 65.23420715]
[115.11797333 76.17297363]
[110.73712158 90.51898956]
[113.69943237 104.18340302]
[103.60889435 113.86186218]
[99.22804260 128.20788574]
[94.84719086 142.55389404]
[102.01524353 156.38345337]
[97.36807251 170.86994934]
[84.13952637 177.61836243]
[79.75867462 191.96438599]
[80.91888428 198.73999023]
[78.70594788 204.19613647]
[74.66991425 207.01644897]
[69.44688416 221.07774353]
[64.22386169 235.13903809]
[59.00083542 249.20033264]
[53.77781296 263.26162720]
[65.77646637 272.45532227]
[74.53080750 284.77816772]
[79.26242065 299.13446045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 102]
[17 101]
[18 100]
[19 99]
[20 98]
[21 95]
[22 94]
[25 91]
[26 90]
[27 89]
[29 87]
[30 86]
[32 84]
[33 83]
[34 82]
[35 81]
[36 80]
[37 79]
[38 78]
[39 77]
[40 76]
[41 75]
[42 74]
[43 73]
[46 72]
[47 71]
[51 69]
[52 68]
[53 67]
[54 66]
[55 65]
[56 64]
[57 63]
[58 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
