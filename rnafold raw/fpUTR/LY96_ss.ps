%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAUCAUGUGACUGAUGACUAAGUUAAAUCUUUUCUGCUUACUGAAAAGGAAGAGUCUGAUGAUUAGUUACUGAUCCUCUUUGCAUUUGUAAAGCUUUGGAGAUAUUGAAUC\
) } def
/len { sequence length } bind def

/coor [
[193.14807129 252.41070557]
[202.12298584 240.39193726]
[214.44656372 231.84034729]
[228.84617615 227.63905334]
[243.83560181 228.22206116]
[232.07171631 218.91554260]
[220.30783081 209.60903931]
[208.54394531 200.30253601]
[201.24705505 198.59742737]
[196.59042358 190.57762146]
[185.08514404 180.95324707]
[173.57984924 171.32888794]
[162.07456970 161.70452881]
[150.56927490 152.08015442]
[139.06399536 142.45579529]
[127.55870819 132.83143616]
[116.05342102 123.20706940]
[104.54813385 113.58270264]
[90.80941010 110.98674011]
[85.82749939 97.92258453]
[72.55554962 100.65422058]
[60.32948303 95.28093719]
[53.56792831 83.99162292]
[54.57102585 71.06660461]
[43.33291626 61.13156891]
[31.96016121 51.35095596]
[20.45487404 41.72659302]
[5.48193598 45.34837723]
[-8.58814716 39.52719498]
[-16.43971825 26.68909645]
[-15.24049854 11.86681938]
[-26.74578476 2.24245572]
[-38.25107193 -7.38190842]
[-49.75635910 -17.00627136]
[-61.26164627 -26.63063622]
[-72.76692963 -36.25500107]
[-84.27221680 -45.87936401]
[-99.28931427 -41.97212601]
[-113.72268677 -47.66925430]
[-122.02241516 -60.78009415]
[-120.99708557 -76.26325989]
[-111.04095459 -88.16515350]
[-95.98235321 -91.90925598]
[-81.61163330 -86.05588531]
[-73.45462036 -72.85578156]
[-74.64785004 -57.38465118]
[-63.14256668 -47.76028824]
[-51.63727951 -38.13592148]
[-40.13199234 -28.51155853]
[-28.62670708 -18.88719559]
[-17.12141991 -9.26283073]
[-5.61613417 0.36153299]
[8.76125240 -3.43698740]
[22.78436279 2.02344751]
[30.99930382 14.84406185]
[30.07923889 30.22130585]
[41.58452606 39.84566879]
[48.83211899 41.74945450]
[53.26795578 49.89346313]
[64.50606537 59.82850266]
[81.16719818 58.04542160]
[94.26255798 69.02975464]
[95.45186615 86.41729736]
[109.19058990 89.01325989]
[114.17250061 102.07741547]
[125.67778778 111.70178223]
[137.18307495 121.32614899]
[148.68835449 130.95051575]
[160.19364929 140.57487488]
[171.69892883 150.19923401]
[183.20422363 159.82360840]
[194.70950317 169.44796753]
[206.21479797 179.07232666]
[217.85046387 188.53865051]
[229.61434937 197.84515381]
[241.37821960 207.15167236]
[253.14210510 216.45817566]
[266.73190308 222.80775452]
[281.41818237 225.85960388]
[301.15264893 217.74447632]
[316.26605225 231.68812561]
[331.15286255 233.52745056]
[346.03964233 235.36679077]
[360.92645264 237.20613098]
[375.81326294 239.04547119]
[390.70004272 240.88481140]
[405.58114624 233.99385071]
[418.83181763 243.65573120]
[416.82092285 259.93112183]
[401.61709595 266.07730103]
[388.86071777 255.77160645]
[373.97390747 253.93226624]
[359.08712769 252.09292603]
[344.20031738 250.25360107]
[329.31350708 248.41426086]
[314.42672729 246.57492065]
[308.23696899 253.26615906]
[299.50457764 256.32937622]
[290.21636963 254.92996216]
[282.55065918 249.26469421]
[278.36633301 240.54586792]
[263.68005371 237.49401855]
[273.74438477 248.61648560]
[279.76129150 262.35684204]
[281.10940552 277.29611206]
[277.64953613 291.89166260]
[269.73898315 304.63616943]
[258.19458008 314.21362305]
[244.20855713 319.63494873]
[229.22514343 320.34030151]
[214.79165649 316.25686646]
[202.39857483 307.80633545]
[193.32569885 295.86135864]
[188.50994873 281.65542603]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 77]
[6 76]
[7 75]
[8 74]
[10 73]
[11 72]
[12 71]
[13 70]
[14 69]
[15 68]
[16 67]
[17 66]
[18 65]
[20 63]
[24 60]
[25 59]
[26 57]
[27 56]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[78 102]
[79 101]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
