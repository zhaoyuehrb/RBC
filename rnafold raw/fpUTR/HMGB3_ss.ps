%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCACCGCCCGCUCCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCAGCGCCCGCACAACUUUCCGGCCCGCGCCGCCGUGAGCGCGCCCUGCCGCCGCCUCCCCCUGCCUCUACUCCCCAUUCCCUUCCCGCCCCCUCCGCCUUCCCUCCUGCUAGGCGGCCGGGAAGGAAGAAGCAAUUCAGUCAGG\
) } def
/len { sequence length } bind def

/coor [
[370.17346191 172.84349060]
[358.40213013 151.86367798]
[343.61740112 149.33160400]
[328.83264160 146.79954529]
[316.86004639 155.58547974]
[301.83013916 153.22821045]
[292.69583130 140.61068726]
[277.91110229 138.07861328]
[264.06036377 143.55645752]
[251.76432800 133.60066223]
[236.97958374 131.06860352]
[222.19483948 128.53652954]
[207.41009521 126.00447083]
[192.62535095 123.47240448]
[178.77464294 128.95025635]
[166.47859192 118.99445343]
[151.69384766 116.46238708]
[137.84312439 121.94023895]
[125.54708862 111.98444366]
[110.76234436 109.45237732]
[97.58205414 114.11839294]
[86.70559692 105.33236694]
[71.92085266 102.80030060]
[57.13610458 100.26823425]
[40.01550674 107.05001831]
[26.96535301 95.31616974]
[12.14487267 93.00244141]
[-2.67560744 90.68870544]
[-17.62627983 89.47322845]
[-32.62587357 89.36260986]
[-46.48272705 96.99792480]
[-59.15259552 89.16697693]
[-73.00945282 96.80229950]
[-85.67932129 88.97135162]
[-100.67890930 88.86073303]
[-115.67850494 88.75011444]
[-129.53535461 96.38542938]
[-142.20523071 88.55448151]
[-157.20481873 88.44386292]
[-171.06167603 96.07918549]
[-183.73153687 88.24823761]
[-198.73112488 88.13761902]
[-212.58798218 95.77294159]
[-225.25785828 87.94199371]
[-240.25744629 87.83137512]
[-254.11430359 95.46669006]
[-266.78417969 87.63574219]
[-281.78375244 87.52512360]
[-295.64062500 95.16044617]
[-308.31048584 87.32949829]
[-323.31008911 87.21887970]
[-337.29739380 95.77966309]
[-351.57369995 87.71003723]
[-351.45275879 71.31133270]
[-337.05899048 63.45313644]
[-323.19946289 72.21928406]
[-308.19985962 72.32990265]
[-295.41589355 64.68667603]
[-281.67315674 72.52553558]
[-266.67355347 72.63615417]
[-253.88957214 64.99291992]
[-240.14683533 72.83177948]
[-225.14723206 72.94239807]
[-212.36325073 65.29916382]
[-198.62051392 73.13803101]
[-183.62092590 73.24864197]
[-170.83692932 65.60541534]
[-157.09419250 73.44427490]
[-142.09460449 73.55489349]
[-129.31062317 65.91165924]
[-115.56788635 73.75051880]
[-100.56829071 73.86113739]
[-85.56870270 73.97175598]
[-72.78471375 66.32852936]
[-59.04197693 74.16738892]
[-46.25799179 66.52415466]
[-32.51525497 74.36301422]
[-17.51566124 74.47363281]
[-29.57058907 65.54734039]
[-35.63701630 51.82879257]
[-34.12882996 36.90480804]
[-25.44036102 24.67735863]
[-11.84326839 18.34339714]
[3.10739565 19.55898476]
[15.50267506 28.00629425]
[22.10173988 41.47671890]
[21.17921638 56.44832611]
[12.97630596 69.00667572]
[-0.36187354 75.86822510]
[14.45860672 78.18196106]
[29.27908707 80.49568939]
[39.23029327 73.61987305]
[51.59558105 75.42514801]
[59.66817093 85.48348999]
[74.45291138 88.01555634]
[89.23765564 90.54762268]
[102.41794586 85.88160706]
[113.29440308 94.66763306]
[128.07914734 97.19969940]
[142.98738098 91.90296173]
[154.22592163 101.67764282]
[169.01065063 104.20970917]
[183.91888428 98.91297150]
[195.15742493 108.68766022]
[209.94216919 111.21972656]
[224.72691345 113.75179291]
[239.51165771 116.28385925]
[254.29640198 118.81592560]
[269.20462036 113.51918793]
[280.44314575 123.29386902]
[295.22790527 125.82593536]
[308.04031372 116.96704865]
[322.99807739 119.74553680]
[331.36471558 132.01480103]
[346.14944458 134.54685974]
[360.93420410 137.07893372]
[364.51666260 131.22616577]
[369.32623291 126.35717773]
[375.10366821 122.72252655]
[381.54028320 120.50657654]
[388.29443359 119.81816864]
[395.00958252 120.68526459]
[401.33316040 123.05396271]
[406.93502808 126.79172516]
[411.52487183 131.69479370]
[414.86700439 137.49928284]
[416.79263306 143.89535522]
[417.20831299 150.54377747]
[431.52786255 155.01039124]
[445.84741211 159.47698975]
[460.16696167 163.94360352]
[475.64508057 160.66662598]
[485.49102783 171.84277344]
[499.81057739 176.30938721]
[507.90243530 163.58314514]
[519.00415039 153.39311218]
[532.35498047 146.42947388]
[547.04193115 143.16159058]
[562.06268311 143.80636597]
[576.39343262 148.31384277]
[589.05926514 156.37103271]
[599.19989014 167.42364502]
[606.12847900 180.71418762]
[609.37817383 195.33392334]
[608.73321533 210.28495789]
[623.05279541 214.75155640]
[637.37231445 219.21817017]
[651.69183350 223.68476868]
[660.81451416 223.25262451]
[666.18878174 228.32429504]
[680.44091797 233.00161743]
[694.69299316 237.67892456]
[708.94512939 242.35624695]
[723.19726562 247.03356934]
[737.44934082 251.71087646]
[743.22033691 246.90850830]
[750.23358154 244.42582703]
[757.60461426 244.52600098]
[764.42077637 247.14945984]
[769.85461426 251.92720032]
[773.26391602 258.23190308]
[774.26788330 265.25997925]
[788.13665771 270.97467041]
[802.00537109 276.68936157]
[815.87414551 282.40405273]
[829.74291992 288.11874390]
[843.61163330 293.83343506]
[855.31018066 283.96417236]
[870.25775146 280.67324829]
[885.01940918 284.71694946]
[896.20312500 295.16604614]
[901.23889160 309.61938477]
[898.96960449 324.75573730]
[889.91668701 337.09683228]
[876.16040039 343.80682373]
[860.86187744 343.34378052]
[847.53662109 335.81411743]
[839.24664307 322.94808960]
[837.89697266 307.70220947]
[824.02819824 301.98751831]
[810.15948486 296.27279663]
[796.29071045 290.55810547]
[782.42193604 284.84341431]
[768.55322266 279.12872314]
[746.74792480 284.47552490]
[732.77203369 265.96298218]
[718.51989746 261.28567505]
[704.26782227 256.60836792]
[690.01568604 251.93104553]
[675.76361084 247.25372314]
[661.51147461 242.57641602]
[647.22528076 238.00431824]
[632.90570068 233.53771973]
[618.58618164 229.07110596]
[604.26660156 224.60449219]
[596.29705811 237.27081299]
[585.31188965 247.45036316]
[572.05590820 254.44483948]
[557.42980957 257.77212524]
[542.42938232 257.19955444]
[528.07739258 252.76019287]
[515.35382080 244.75086975]
[505.12930298 233.71249390]
[498.10516357 220.39343262]
[494.76556396 205.69879150]
[495.34396362 190.62893677]
[481.02441406 186.16232300]
[466.57052612 189.75878906]
[455.70034790 178.26315308]
[441.38079834 173.79653931]
[427.06124878 169.32992554]
[412.74169922 164.86332703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 116]
[3 115]
[4 114]
[7 111]
[8 110]
[10 108]
[11 107]
[12 106]
[13 105]
[14 104]
[16 102]
[17 101]
[19 99]
[20 98]
[22 96]
[23 95]
[24 94]
[26 91]
[27 90]
[28 89]
[29 78]
[30 77]
[32 75]
[34 73]
[35 72]
[36 71]
[38 69]
[39 68]
[41 66]
[42 65]
[44 63]
[45 62]
[47 60]
[48 59]
[50 57]
[51 56]
[128 212]
[129 211]
[130 210]
[131 209]
[133 207]
[134 206]
[145 195]
[146 194]
[147 193]
[148 192]
[150 191]
[151 190]
[152 189]
[153 188]
[154 187]
[155 186]
[162 184]
[163 183]
[164 182]
[165 181]
[166 180]
[167 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
