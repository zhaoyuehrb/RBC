%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACGAUGAUGAUUGGUAGGGCAGAGCAAUCUGAGUCCUAGUUGGUGGAGUUCUGCCCGGAUGGAAGCUCCGGCCGCGGAGUGAUGGUGGCCUCAGCGAAGAUGGGCCGGGCAGGGACCAUGGCGGUGGCAGCAGAGGUGGCAGGGGCGGGGCGGCUGGCGGUAGAGGAGGCUGUGGUCCUCAGGGGGCUGUAGGUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[130.27720642 119.49890137]
[125.40519714 127.99861908]
[118.11464691 135.21467590]
[108.76422119 140.45623779]
[97.90920258 143.13800049]
[93.14232635 157.36041260]
[88.37545776 171.58282471]
[83.60858917 185.80523682]
[87.39830017 201.76048279]
[75.29135132 212.82185364]
[59.74232483 207.61033630]
[56.74672699 191.48710632]
[69.38617706 181.03836060]
[74.15304565 166.81594849]
[78.91992188 152.59353638]
[83.68679047 138.37113953]
[78.30245209 133.15013123]
[63.87515259 137.25537109]
[67.53376770 122.70812225]
[62.14943314 117.48711395]
[48.08056259 122.68970490]
[34.01169586 127.89229584]
[19.94282722 133.09487915]
[5.87395906 138.29747009]
[-8.19490910 143.50006104]
[-22.26377678 148.70265198]
[-36.33264542 153.90524292]
[-50.40151215 159.10783386]
[-36.40309525 164.49710083]
[-28.14610291 177.01997375]
[-28.70772362 192.00946045]
[-37.87865448 203.87933350]
[-52.24110794 208.20597839]
[-66.44254303 203.37696838]
[-75.19041443 191.19195557]
[-75.22460175 176.19198608]
[-66.53230286 163.96717834]
[-81.13388062 167.40142822]
[-95.73545074 170.83569336]
[-101.61534119 185.19557190]
[-114.83048248 193.32820129]
[-130.29937744 192.10641479]
[-142.07392883 181.99998474]
[-145.62657166 166.89508057]
[-139.59124756 152.59982300]
[-126.28865814 144.61102295]
[-110.83392334 146.00056458]
[-99.16970825 156.23411560]
[-84.56813812 152.79986572]
[-69.96656799 149.36560059]
[-55.60410309 145.03897095]
[-41.53523636 139.83638000]
[-27.46636772 134.63378906]
[-13.39749908 129.43119812]
[0.67136872 124.22860718]
[14.74023724 119.02601624]
[28.80910492 113.82342529]
[42.87797165 108.62083435]
[56.94684219 103.41824341]
[60.68841553 95.22367096]
[65.82728577 88.63594818]
[71.88019562 83.85559082]
[60.95199203 73.58065033]
[45.59790039 69.76457214]
[41.62550735 55.40945816]
[26.05177879 55.72050476]
[15.11539745 45.14457703]
[14.91483879 30.29549217]
[3.98663664 20.02055168]
[-6.94156551 9.74561119]
[-17.86976814 -0.52932870]
[-28.79796982 -10.80426884]
[-39.72617340 -21.07920837]
[-55.80491638 -24.30504608]
[-60.79355621 -39.92700195]
[-49.56020355 -51.87454987]
[-33.66077042 -47.85707474]
[-29.45123100 -32.00741196]
[-18.52302933 -21.73247147]
[-7.59482718 -11.45753098]
[3.33337474 -1.18259048]
[14.26157665 9.09235001]
[25.18977928 19.36729050]
[40.02304840 18.65334511]
[51.25217056 28.91791916]
[51.90044785 44.48125839]
[66.47287750 47.56240463]
[71.22692871 62.65245056]
[82.15513611 72.92739105]
[109.11333466 68.88227844]
[129.63020325 86.83123779]
[144.37480164 84.07499695]
[159.11940002 81.31875610]
[173.86399841 78.56251526]
[188.60859680 75.80626678]
[200.75205994 65.66493988]
[214.68435669 70.93186188]
[229.42895508 68.17562103]
[234.11325073 57.24162674]
[243.40054321 50.00264359]
[254.91049194 48.16728210]
[265.76296997 52.07757568]
[273.29876709 60.65233612]
[288.12124634 58.35146332]
[302.94372559 56.05058670]
[317.76620483 53.74971390]
[330.21621704 43.98714828]
[343.97970581 49.68062210]
[358.80221558 47.37974930]
[363.17297363 34.08899307]
[372.79867554 24.02689552]
[385.75894165 19.11841965]
[399.50338745 20.26850700]
[411.35342407 27.19579697]
[419.02438354 38.49865723]
[433.88055420 36.42631149]
[448.73672485 34.35396576]
[463.59286499 32.28162003]
[478.44903564 30.20927429]
[493.30517578 28.13692856]
[508.16134644 26.06458282]
[523.01751709 23.99223900]
[537.87365723 21.91989326]
[552.72979736 19.84754753]
[567.58593750 17.77520180]
[579.73718262 -1.83323777]
[602.15191650 -6.00567007]
[620.11663818 7.59304237]
[634.66357422 3.93433666]
[646.15972900 -6.93532467]
[660.38983154 -2.53607082]
[674.93676758 -6.19477654]
[689.48376465 -9.85348225]
[704.03070068 -13.51218796]
[707.15649414 -27.14953041]
[715.81274414 -38.05685425]
[728.26483154 -44.14021301]
[742.05676270 -44.26321030]
[754.49542236 -38.45885468]
[763.17657471 -27.91200066]
[774.83868408 -38.60334015]
[788.99938965 -33.98547363]
[803.60095215 -37.41973114]
[815.17132568 -49.04117203]
[830.94940186 -44.57069016]
[834.70397949 -28.60713768]
[822.57275391 -17.57244492]
[807.03521729 -22.81816101]
[792.43365479 -19.38390160]
[781.81585693 -8.93820381]
[766.61083984 -13.31042957]
[762.33105469 2.26883602]
[750.71282959 13.63055134]
[734.85980225 17.60714149]
[719.07421875 13.02183533]
[707.68939209 1.03476572]
[693.14245605 4.69347143]
[678.59552002 8.35217762]
[664.04852295 12.01088333]
[653.59289551 22.61884880]
[638.32232666 18.48129082]
[623.77532959 22.13999748]
[622.65368652 29.56052780]
[619.57440186 36.43407822]
[614.74945068 42.25246429]
[608.52020264 46.58129120]
[601.33367920 49.09238052]
[593.71026611 49.58861542]
[586.20611572 48.01932907]
[579.37255859 44.48508072]
[573.71557617 39.23130798]
[569.65832520 32.63135910]
[554.80212402 34.70370483]
[539.94598389 36.77605057]
[525.08984375 38.84839630]
[510.23367310 40.92073822]
[495.37753296 42.99308395]
[480.52136230 45.06542969]
[465.66522217 47.13777542]
[450.80905151 49.21012115]
[435.95291138 51.28246689]
[421.09674072 53.35481262]
[415.39779663 68.47273254]
[402.78079224 78.71398926]
[386.62847900 81.21088409]
[371.33331299 75.18862915]
[361.10308838 62.20223236]
[346.28060913 64.50310516]
[334.89077759 74.10109711]
[320.06707764 68.57219696]
[305.24459839 70.87306976]
[290.42211914 73.17394257]
[275.59963989 75.47481537]
[265.70837402 90.87388611]
[247.38926697 94.21562195]
[232.18519592 82.92021942]
[217.44059753 85.67646027]
[206.35176086 95.62065125]
[191.36483765 90.55086517]
[176.62023926 93.30710602]
[161.87564087 96.06335449]
[147.13104248 98.81959534]
[132.38644409 101.57583618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 16]
[6 15]
[7 14]
[8 13]
[20 59]
[21 58]
[22 57]
[23 56]
[24 55]
[25 54]
[26 53]
[27 52]
[28 51]
[37 50]
[38 49]
[39 48]
[62 89]
[63 88]
[65 86]
[68 83]
[69 82]
[70 81]
[71 80]
[72 79]
[73 78]
[91 203]
[92 202]
[93 201]
[94 200]
[95 199]
[97 197]
[98 196]
[103 193]
[104 192]
[105 191]
[106 190]
[108 188]
[109 187]
[115 182]
[116 181]
[117 180]
[118 179]
[119 178]
[120 177]
[121 176]
[122 175]
[123 174]
[124 173]
[125 172]
[128 162]
[129 161]
[131 159]
[132 158]
[133 157]
[134 156]
[140 151]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
