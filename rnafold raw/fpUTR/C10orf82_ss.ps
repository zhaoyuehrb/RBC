%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCAGUGUCUACACCCGCAAAAACGCCCGCUUUGACUUAGAGCCCUCCGCAUAUCCUUCCCCUGGCUGGGGCAGCCAAGGCGCGGAGGACAGCUCCGAGGCCAGAUGUUUACUGCGCAGAUGCCCGACUUUACACCGGGGUCCGGGCUGUGCCGGGCGCUGGGGGAAGCGCCCACCUUCCAGAGAGCGAAAUC\
) } def
/len { sequence length } bind def

/coor [
[86.32814026 195.65008545]
[90.50563812 180.70591736]
[102.69014740 171.09773254]
[101.96913910 156.11506653]
[101.24813080 141.13240051]
[86.43975067 138.73831177]
[71.63268280 136.34440613]
[66.22724152 150.33659363]
[60.82181168 164.32878113]
[63.88580704 180.43914795]
[51.29081726 190.94145203]
[35.99348831 185.03181458]
[33.73040009 168.78956604]
[46.82962418 158.92333984]
[52.23505783 144.93115234]
[57.64049530 130.93896484]
[56.16460419 101.94976044]
[69.75605774 81.79134369]
[88.55644989 75.84809113]
[76.25386810 67.26634216]
[63.95128250 58.68458939]
[45.57822037 57.54424286]
[38.74807358 41.38471603]
[26.30952263 33.00125504]
[13.87097263 24.61779022]
[1.43242228 16.23432732]
[-11.00612831 7.85086298]
[-23.51146507 -0.43264651]
[-38.78536606 2.62444067]
[-51.41790009 -5.85339212]
[-54.23823929 -20.43355942]
[-66.80956268 -28.61658287]
[-79.38088226 -36.79960632]
[-91.95220184 -44.98263168]
[-104.52352905 -53.16565323]
[-117.09484863 -61.34867859]
[-116.66495514 -46.35483932]
[-128.01266479 -36.54518127]
[-142.78668213 -39.13908005]
[-150.11413574 -52.22756577]
[-144.60240173 -66.17822266]
[-130.30841064 -70.72420502]
[-142.18428040 -79.88738251]
[-154.06015015 -89.05056000]
[-165.93600464 -98.21374512]
[-178.02873230 -107.08877563]
[-190.33131409 -115.67052460]
[-202.63389587 -124.25227356]
[-214.93647766 -132.83401489]
[-227.23905945 -141.41577148]
[-239.54164124 -149.99752808]
[-251.84422302 -158.57926941]
[-260.84558105 -155.69816589]
[-270.02615356 -157.26608276]
[-277.34146118 -162.80522156]
[-281.22177124 -170.96797180]
[-280.90838623 -179.86288452]
[-292.78427124 -189.02606201]
[-304.66012573 -198.18923950]
[-316.53598022 -207.35243225]
[-328.76940918 -216.03250122]
[-341.34072876 -224.21551514]
[-353.91204834 -232.39854431]
[-366.48336792 -240.58157349]
[-382.41366577 -238.68292236]
[-393.72879028 -250.05604553]
[-391.74871826 -265.97644043]
[-377.99240112 -274.23132324]
[-363.01251221 -268.48831177]
[-358.30035400 -253.15289307]
[-345.72903442 -244.96986389]
[-333.15771484 -236.78683472]
[-320.58639526 -228.60382080]
[-321.01626587 -243.59765625]
[-309.66854858 -253.40731812]
[-294.89453125 -250.81341553]
[-287.56710815 -237.72492981]
[-293.07882690 -223.77427673]
[-307.37280273 -219.22828674]
[-295.49694824 -210.06510925]
[-283.62109375 -200.90193176]
[-271.74520874 -191.73875427]
[-251.13404846 -190.80441284]
[-243.26248169 -170.88185120]
[-230.95989990 -162.30010986]
[-218.65731812 -153.71835327]
[-206.35472107 -145.13661194]
[-194.05213928 -136.55485535]
[-181.74955750 -127.97310638]
[-169.44697571 -119.39135742]
[-165.91896057 -119.65270233]
[-162.08944702 -118.21038818]
[-158.76411438 -114.94159698]
[-156.77282715 -110.08960724]
[-144.89695740 -100.92642975]
[-133.02110291 -91.76324463]
[-121.14523315 -82.60006714]
[-108.91182709 -73.91999817]
[-96.34049988 -65.73697662]
[-83.76918030 -57.55395126]
[-71.19786072 -49.37092972]
[-58.62653732 -41.18790436]
[-46.05521393 -33.00488281]
[-31.58130074 -36.32773972]
[-18.71562195 -28.20807076]
[-15.32844257 -13.00396824]
[-7.99840689 -11.98850822]
[-2.62266469 -4.58768749]
[9.81588554 3.79577613]
[22.25443649 12.17924023]
[34.69298553 20.56270409]
[47.13153839 28.94616699]
[59.06902313 26.94322968]
[69.50294495 33.83643341]
[72.53303528 46.38200760]
[84.83561707 54.96375656]
[97.13819885 63.54550552]
[112.01505280 65.46366119]
[126.09207916 60.28318787]
[140.16909790 55.10271072]
[150.44793701 43.07540512]
[165.06427002 45.94105911]
[172.04765320 40.03318024]
[179.40866089 40.79234314]
[193.56690979 35.83815765]
[207.72515869 30.88397026]
[221.88340759 25.92978477]
[236.04165649 20.97559929]
[250.15974426 15.90810585]
[264.23678589 10.72762966]
[278.31381226 5.54715395]
[292.39083862 0.36667827]
[306.46786499 -4.81379747]
[314.47433472 -18.71616173]
[330.35659790 -20.98186874]
[341.93112183 -9.87286282]
[340.31890869 6.08897877]
[326.75674438 14.65909576]
[311.64831543 9.26322842]
[297.57128906 14.44370461]
[283.49426270 19.62417984]
[269.41723633 24.80465698]
[255.34022522 29.98513222]
[250.14224243 35.25216675]
[240.99583435 35.13385010]
[226.83758545 40.08803558]
[212.67933655 45.04222107]
[198.52108765 49.99640656]
[184.36283875 54.95059204]
[170.24475098 60.01808548]
[160.97279358 71.67485046]
[145.34957886 69.17974091]
[131.27255249 74.36021423]
[117.19552612 79.54068756]
[137.72462463 87.98915100]
[150.75381470 113.25131989]
[163.19236755 121.63478088]
[175.63092041 130.01824951]
[188.06947327 138.40170288]
[200.50802612 146.78517151]
[212.94657898 155.16864014]
[225.38511658 163.55209351]
[240.84809875 160.28533936]
[254.04626465 168.97926331]
[257.14935303 184.47592163]
[248.31637573 197.58142090]
[232.78776550 200.52049255]
[219.77639771 191.54945374]
[217.00166321 175.99064636]
[204.56311035 167.60719299]
[192.12455750 159.22372437]
[179.68600464 150.84025574]
[167.24745178 142.45680237]
[154.80891418 134.07333374]
[142.37036133 125.68987274]
[135.83546448 129.37025452]
[143.19622803 142.44003296]
[150.55699158 155.50981140]
[157.91775513 168.57958984]
[165.27851868 181.64936829]
[172.63908386 194.71926880]
[159.56907654 202.07962036]
[152.20874023 189.01013184]
[144.84797668 175.94035339]
[137.48721313 162.87057495]
[130.12644958 149.80079651]
[122.76568604 136.73101807]
[116.23079681 140.41139221]
[116.95179749 155.39405823]
[117.67280579 170.37672424]
[130.72361755 178.77052307]
[136.31680298 193.24450684]
[132.30166626 208.23310852]
[120.22209930 217.97291565]
[104.72296143 218.71878052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 190]
[4 189]
[5 188]
[7 16]
[8 15]
[9 14]
[19 117]
[20 116]
[21 115]
[23 112]
[24 111]
[25 110]
[26 109]
[27 108]
[28 106]
[31 103]
[32 102]
[33 101]
[34 100]
[35 99]
[36 98]
[42 97]
[43 96]
[44 95]
[45 94]
[46 90]
[47 89]
[48 88]
[49 87]
[50 86]
[51 85]
[52 84]
[57 82]
[58 81]
[59 80]
[60 79]
[61 73]
[62 72]
[63 71]
[64 70]
[118 154]
[119 153]
[120 152]
[122 150]
[124 149]
[125 148]
[126 147]
[127 146]
[128 145]
[129 143]
[130 142]
[131 141]
[132 140]
[133 139]
[156 175]
[157 174]
[158 173]
[159 172]
[160 171]
[161 170]
[162 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
