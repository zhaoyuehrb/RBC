%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUUCUGCCCGGCCCCUUCGCCCACGUGAAGAACGCCAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAU\
) } def
/len { sequence length } bind def

/coor [
[92.54437256 102.17814636]
[77.65373993 103.98619843]
[62.76310349 105.79425049]
[47.87247086 107.60230255]
[32.98183823 109.41034698]
[18.20972252 112.01507568]
[3.59871507 115.40895844]
[-8.09294605 126.06802368]
[-22.24079704 121.41103363]
[-36.85180664 124.80491638]
[-48.54346466 135.46397400]
[-62.69131851 130.80699158]
[-77.30232239 134.20086670]
[-91.91333008 137.59475708]
[-100.82646942 152.57417297]
[-117.47347260 156.46046448]
[-131.53379822 147.34135437]
[-146.04841614 151.12629700]
[-160.56303406 154.91123962]
[-175.07765198 158.69616699]
[-189.59228516 162.48110962]
[-204.10690308 166.26605225]
[-215.39404297 178.16278076]
[-231.27519226 174.07360840]
[-235.41317749 158.20512390]
[-223.55119324 146.88145447]
[-207.89184570 151.75141907]
[-193.37721252 147.96649170]
[-178.86259460 144.18154907]
[-164.34797668 140.39660645]
[-149.83335876 136.61167908]
[-135.31872559 132.82673645]
[-130.37510681 120.84564972]
[-119.24579620 113.82942963]
[-105.91387939 114.55623627]
[-95.30722046 122.98374939]
[-80.69621277 119.58986664]
[-66.08520508 116.19598389]
[-55.43861771 105.77967072]
[-40.24568939 110.19390869]
[-25.63468361 106.80002594]
[-14.98809910 96.38371277]
[0.20483004 100.79795074]
[14.81583786 97.40406799]
[16.41647530 94.95161438]
[19.14870453 93.03013611]
[22.79803085 92.09899139]
[26.97869110 92.52442169]
[31.17378807 94.51971436]
[46.06442261 92.71166992]
[60.95505524 90.90361786]
[75.84568787 89.09556580]
[90.73632050 87.28751373]
[103.19435883 78.93304443]
[110.51928711 65.84314728]
[117.84421539 52.75324631]
[119.33911133 43.60613632]
[125.54559326 39.41406631]
[133.21931458 26.52554512]
[140.89303589 13.63702488]
[142.63298035 4.53334808]
[148.94976807 0.50942135]
[156.79583740 -12.27491665]
[164.46955872 -25.16343880]
[172.14328003 -38.05195999]
[179.81700134 -50.94047928]
[179.49600220 -67.33648682]
[193.67280579 -75.57968903]
[207.76351929 -67.19018555]
[207.27284241 -50.79838562]
[192.70552063 -43.26675797]
[185.03179932 -30.37823677]
[177.35807800 -17.48971558]
[169.68435669 -4.60119438]
[168.95675659 2.85296416]
[161.62762451 8.52640915]
[153.78155518 21.31074715]
[146.10783386 34.19926834]
[138.43411255 47.08779144]
[130.93411255 60.07817078]
[123.60918427 73.16806793]
[116.28426361 86.25797272]
[118.84941101 93.30566406]
[126.67081451 80.50621796]
[141.55436707 78.64076233]
[152.29267883 89.11399078]
[150.79977417 104.03951263]
[138.19979858 112.17834473]
[123.97971344 107.40105438]
[126.54486847 114.44874573]
[140.57011414 119.76782227]
[154.59535217 125.08689117]
[170.68652344 121.92363739]
[181.26626587 134.45364380]
[175.45104980 149.78710938]
[159.22306824 152.15028381]
[149.27627563 139.11213684]
[135.25103760 133.79306030]
[121.22579193 128.47399902]
[111.43015289 139.83468628]
[101.63537598 151.19436646]
[108.96029663 164.28427124]
[116.28522491 177.37416077]
[123.61015320 190.46406555]
[130.93507385 203.55397034]
[145.29493713 211.47398376]
[145.34535217 227.87304688]
[131.03446960 235.88121033]
[117.08409882 227.26036072]
[117.84517670 210.87889099]
[110.52024841 197.78898621]
[103.19532776 184.69909668]
[95.87039948 171.60919189]
[88.54547119 158.51928711]
[79.00754547 141.67567444]
[77.27929688 124.88697815]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 53]
[2 52]
[3 51]
[4 50]
[5 49]
[6 44]
[7 43]
[9 41]
[10 40]
[12 38]
[13 37]
[14 36]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[54 82]
[55 81]
[56 80]
[58 79]
[59 78]
[60 77]
[62 76]
[63 74]
[64 73]
[65 72]
[66 71]
[90 99]
[91 98]
[92 97]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
