%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGCGCGCGGGCGCGCGGGCCCGCGCAGGCGGUGGCGGCGGCGGCGGAACCGAGCUGACGGGCGUGCGGCCGCUGCGCCGCAAACUCGUGUGGGACGCACCGCUCCAGCCGCCCGCGGGCCAGCGCACCGGUCCCCCAGCGGCAGCCGAGCCCGCCCGCGCGCCGGAGAAGAAGACACAUGAAUUAGAGACAGCACGGGGGAGCAGGCUGUGGAGCUGGGAGUGACGGGGUGAGUCCAGGAAGGCUGCCUG\
GAGGAG\
) } def
/len { sequence length } bind def

/coor [
[80.41374207 106.17744446]
[66.61357117 113.91474152]
[53.88629913 106.17744446]
[38.88629913 106.17744446]
[25.08612633 113.91474152]
[12.35885429 106.17744446]
[-2.64114571 106.17744446]
[-17.64114571 106.17744446]
[-31.44131851 113.91474152]
[-44.16859055 106.17744446]
[-59.16859055 106.17744446]
[-74.16858673 106.17744446]
[-89.16858673 106.17744446]
[-104.16858673 106.17744446]
[-119.16858673 106.17744446]
[-134.16859436 106.17744446]
[-149.16859436 106.17744446]
[-164.16831970 106.26737213]
[-179.15861511 106.80684662]
[-194.13166809 107.70561981]
[-209.10472107 108.60439301]
[-224.07775879 109.50315857]
[-239.04515076 110.49168396]
[-254.00634766 111.56993103]
[-268.94573975 112.91707611]
[-283.85848999 114.53269958]
[-298.77120972 116.14831543]
[-313.68395996 117.76393890]
[-328.59667969 119.37955475]
[-343.50942993 120.99517822]
[-358.41220093 122.70017242]
[-373.30450439 124.49448395]
[-388.16210938 126.55635071]
[-402.98025513 128.88510132]
[-417.79837036 131.21385193]
[-432.61651611 133.54260254]
[-447.43463135 135.87135315]
[-462.25277710 138.20010376]
[-470.21456909 142.61109924]
[-477.26242065 140.46682739]
[-492.10742188 142.61773682]
[-506.95239258 144.76864624]
[-521.79736328 146.91955566]
[-536.64239502 149.07044983]
[-551.48736572 151.22135925]
[-566.33233643 153.37226868]
[-578.88043213 163.00846863]
[-592.58563232 157.17613220]
[-607.43066406 159.32704163]
[-622.27563477 161.47795105]
[-629.56573486 175.04852295]
[-643.28839111 181.64720154]
[-658.09014893 178.93232727]
[-668.33245850 168.15116882]
[-683.17742920 170.30207825]
[-698.02246094 172.45298767]
[-707.27783203 185.26367188]
[-722.89392090 187.69515991]
[-735.60607910 178.30485535]
[-737.87231445 162.66389465]
[-728.34814453 150.05177307]
[-712.68408203 147.95101929]
[-700.17333984 157.60800171]
[-685.32836914 155.45709229]
[-670.48339844 153.30619812]
[-663.72222900 140.06138611]
[-650.29968262 133.25704956]
[-635.26849365 135.68955994]
[-624.42651367 146.63296509]
[-609.58154297 144.48205566]
[-594.73657227 142.33114624]
[-583.25030518 132.84880066]
[-568.48327637 138.52728271]
[-553.63824463 136.37637329]
[-538.79327393 134.22546387]
[-523.94830322 132.07456970]
[-509.10330200 129.92366028]
[-494.25833130 127.77275085]
[-479.41333008 125.62184906]
[-464.58151245 123.38198090]
[-449.76339722 121.05323029]
[-434.94525146 118.72447968]
[-420.12713623 116.39572906]
[-405.30899048 114.06697845]
[-390.49087524 111.73822784]
[-388.14068604 109.14977264]
[-384.43289185 107.55625153]
[-379.84188843 107.57775879]
[-375.09881592 109.60219574]
[-360.20654297 107.80787659]
[-353.96160889 103.90007019]
[-345.12506104 106.08243561]
[-330.21231079 104.46681976]
[-315.29956055 102.85119629]
[-300.38684082 101.23558044]
[-285.47409058 99.61995697]
[-270.56137085 98.00434113]
[-268.08978271 95.53153992]
[-264.30984497 94.11762238]
[-259.72515869 94.35921478]
[-255.08459473 96.60873413]
[-240.12339783 95.53049469]
[-233.69828796 91.92658997]
[-224.97653198 94.53011322]
[-210.00349426 93.63134003]
[-195.03044128 92.73256683]
[-180.05738831 91.83379364]
[-178.10728455 89.86192322]
[-175.27082825 88.53118134]
[-171.78388977 88.17850494]
[-167.99835205 89.05093384]
[-164.34817505 91.26845551]
[-157.71867371 88.05601501]
[-149.16859436 91.17744446]
[-134.16859436 91.17744446]
[-119.16858673 91.17744446]
[-104.16858673 91.17744446]
[-89.16858673 91.17744446]
[-74.16858673 91.17744446]
[-59.16859055 91.17744446]
[-44.16859055 91.17744446]
[-31.44131851 83.44014740]
[-17.64114571 91.17744446]
[-2.64114571 91.17744446]
[12.35885429 91.17744446]
[25.08612633 83.44014740]
[38.88629913 91.17744446]
[53.88629913 91.17744446]
[66.61357117 83.44014740]
[80.41374207 91.17744446]
[93.32568359 72.99623108]
[121.01837158 73.08295441]
[135.18086243 68.14089203]
[145.66130066 56.28884888]
[160.22717285 59.40088272]
[174.38964844 54.45882797]
[188.55213928 49.51676941]
[202.68475342 44.48989105]
[216.75605774 39.29391479]
[230.79597473 34.01367188]
[244.83587646 28.73342896]
[258.87579346 23.45318604]
[272.91567993 18.17294121]
[286.95559692 12.89269829]
[299.06948853 -3.24557924]
[317.99307251 0.81473768]
[331.90234375 -4.80065489]
[345.81158447 -10.41604805]
[359.72085571 -16.03144073]
[373.63009644 -21.64683342]
[387.53936768 -27.26222610]
[393.27825928 -38.79018021]
[404.95385742 -43.18994141]
[416.13186646 -38.61843491]
[430.10745239 -44.06664276]
[444.05014038 -49.59854507]
[457.95938110 -55.21393585]
[464.71920776 -61.30919647]
[472.06924438 -60.81216812]
[486.04483032 -66.26037598]
[500.02041626 -71.70858765]
[513.99597168 -77.15679932]
[524.04339600 -89.37810516]
[538.71179199 -86.79193878]
[552.68737793 -92.24015045]
[549.97003174 -107.03922272]
[550.10278320 -122.08511353]
[553.08087158 -136.83392334]
[558.79663086 -150.75250244]
[567.04345703 -163.33767700]
[577.52319336 -174.13452148]
[589.85699463 -182.75273132]
[603.59899902 -188.88076782]
[618.25250244 -192.29710388]
[633.28778076 -192.87823486]
[648.16125488 -190.60316467]
[662.33532715 -185.55412292]
[675.29754639 -177.91363525]
[686.57940674 -167.95790100]
[695.77301025 -156.04681396]
[702.54602051 -142.61096191]
[706.65368652 -128.13601685]
[707.94738770 -113.14526367]
[706.38049316 -98.18059540]
[702.00952148 -83.78298187]
[694.99255371 -70.47288513]
[685.58325195 -58.73146057]
[674.12170410 -48.98314667]
[661.02227783 -41.58034134]
[646.75848389 -36.79065323]
[631.84600830 -34.78722763]
[616.82385254 -35.64248276]
[602.23510742 -39.32550430]
[588.60711670 -45.70315170]
[576.43249512 -54.54487991]
[566.15142822 -65.53106689]
[558.13555908 -78.26456451]
[544.15997314 -72.81635284]
[535.11218262 -60.98474121]
[519.44421387 -63.18121338]
[505.46862793 -57.73300171]
[491.49304199 -52.28479385]
[477.51745605 -46.83658218]
[463.57476807 -41.30468369]
[449.66552734 -35.68928909]
[444.65557861 -30.28830910]
[435.55566406 -30.09105682]
[421.58007812 -24.64284706]
[411.34112549 -10.37392902]
[393.15475464 -13.35297203]
[379.24548340 -7.73757887]
[365.33624268 -2.12218618]
[351.42697144 3.49320674]
[337.51773071 9.10859966]
[323.60845947 14.72399235]
[320.49246216 24.41493607]
[312.39688110 30.94148064]
[301.82922363 31.97338867]
[292.23583984 26.93260574]
[278.19592285 32.21284866]
[264.15603638 37.49309540]
[250.11611938 42.77333832]
[236.07621765 48.05358124]
[222.03630066 53.33382416]
[216.89828491 58.61311722]
[207.79626465 58.59210205]
[202.59532166 63.80940628]
[193.49420166 63.67925644]
[179.33171082 68.62131500]
[165.16921997 73.56336975]
[155.70178223 85.06192780]
[140.12292480 82.30338287]
[125.96043396 87.24543762]
[122.70051575 93.99991608]
[137.56300354 96.02632904]
[140.22834778 110.78762817]
[127.01306915 117.88385010]
[116.18068695 107.50887299]
[112.92077637 114.26335144]
[117.86283112 128.42584229]
[122.80488586 142.58831787]
[127.74694824 156.75080872]
[132.68901062 170.91329956]
[137.63105774 185.07579041]
[152.31619263 190.44990540]
[160.06637573 204.03182983]
[157.22222900 219.40858459]
[145.12664795 229.31974792]
[129.49082947 229.08557129]
[117.69749451 218.81661987]
[115.31511688 203.36157227]
[123.46857452 190.01785278]
[118.52651978 175.85536194]
[113.58445740 161.69287109]
[108.64240265 147.53038025]
[103.70034027 133.36788940]
[98.75828552 119.20540619]
[97.08224487 134.11148071]
[84.94665527 142.92779541]
[70.25244141 139.91444397]
[62.56634903 127.03330231]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 130]
[3 128]
[4 127]
[6 125]
[7 124]
[8 123]
[10 121]
[11 120]
[12 119]
[13 118]
[14 117]
[15 116]
[16 115]
[17 114]
[18 112]
[19 107]
[20 106]
[21 105]
[22 104]
[23 102]
[24 101]
[25 97]
[26 96]
[27 95]
[28 94]
[29 93]
[30 92]
[31 90]
[32 89]
[33 85]
[34 84]
[35 83]
[36 82]
[37 81]
[38 80]
[40 79]
[41 78]
[42 77]
[43 76]
[44 75]
[45 74]
[46 73]
[48 71]
[49 70]
[50 69]
[54 65]
[55 64]
[56 63]
[132 233]
[133 232]
[135 230]
[136 229]
[137 228]
[138 226]
[139 224]
[140 223]
[141 222]
[142 221]
[143 220]
[144 219]
[146 215]
[147 214]
[148 213]
[149 212]
[150 211]
[151 210]
[154 208]
[155 207]
[156 205]
[157 204]
[159 203]
[160 202]
[161 201]
[162 200]
[164 198]
[165 197]
[239 257]
[240 256]
[241 255]
[242 254]
[243 253]
[244 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
