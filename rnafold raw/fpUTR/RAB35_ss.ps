%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAGGGAGGCGGUGGUAGCGGCGGCGGCUGCUGAGGAGGAGGAGGGGGAGCGGAGGGAGGUGUUUCUGUCAGUUCCGGCUGUUUGUUCGGGAAGUGGAUCCGCCGCUGCCGGAGCAGCCCGAAGGGAGCUGCGGAUCGCGAGGCCAGUACCGACCCCGCCCGCCCGCGCGCACCGCCCCCGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[86.73931885 503.37838745]
[73.53746033 492.74133301]
[80.10418701 477.11077881]
[80.60013580 462.11895752]
[73.28787231 449.14282227]
[81.47722626 435.60601807]
[81.97317505 420.61422729]
[82.46912384 405.62243652]
[75.15686035 392.64630127]
[83.34621429 379.10949707]
[83.84216309 364.11767578]
[76.52989960 351.14157104]
[84.71924591 337.60473633]
[85.21520233 322.61294556]
[85.71115112 307.62115479]
[86.20709991 292.62936401]
[86.70304871 277.63754272]
[87.19899750 262.64575195]
[84.27264404 255.84437561]
[87.82912445 247.41076660]
[88.57288361 232.42921448]
[89.31663513 217.44766235]
[89.93651581 202.46047974]
[90.43246460 187.46867371]
[90.92841339 172.47688293]
[91.42436218 157.48507690]
[91.79635620 142.48970032]
[92.04436493 127.49174500]
[92.29237366 112.49379730]
[80.01300049 103.87886810]
[65.99453735 109.21577454]
[55.85026932 121.35679626]
[41.20293045 118.65407562]
[27.18446159 123.99098206]
[17.25426292 137.04177856]
[1.02328646 134.69924927]
[-4.81142950 119.37318420]
[5.75237036 106.82972717]
[21.84755325 109.97251892]
[35.86602020 104.63560486]
[45.00759506 92.87631989]
[60.65762711 95.19730377]
[74.67609406 89.86039734]
[82.30540466 89.00352478]
[89.29047394 90.39172363]
[95.10297394 93.74654388]
[91.49754333 78.34162903]
[102.46176147 68.26020050]
[106.62281036 53.84889984]
[110.78385162 39.43759155]
[103.40522766 25.71922112]
[107.83041382 11.16338444]
[120.95425415 4.21353912]
[125.11530304 -10.19776535]
[129.27635193 -24.60907173]
[119.49302673 -40.81619644]
[124.55791473 -58.72589874]
[140.81349182 -67.11618042]
[144.49577332 -81.65718079]
[134.18194580 -97.53198242]
[138.65190125 -115.59934998]
[154.62117004 -124.52250671]
[157.82066345 -139.17730713]
[161.02015686 -153.83212280]
[154.72103882 -165.10096741]
[157.69987488 -177.24996948]
[167.82696533 -183.88633728]
[171.26832581 -198.48623657]
[174.70968628 -213.08613586]
[178.15104675 -227.68603516]
[177.07365417 -236.77522278]
[181.77188110 -242.49789429]
[185.45416260 -257.03890991]
[189.13644409 -271.57989502]
[192.81872559 -286.12091064]
[196.50100708 -300.66192627]
[200.18328857 -315.20291138]
[203.86557007 -329.74392700]
[206.94380188 -344.42468262]
[209.41271973 -359.22009277]
[211.88163757 -374.01550293]
[214.35055542 -388.81094360]
[216.81948853 -403.60635376]
[219.28840637 -418.40176392]
[217.44212341 -423.32260132]
[217.65841675 -427.98956299]
[219.49182129 -431.65594482]
[222.26409912 -433.86199951]
[225.46359253 -448.51678467]
[228.66308594 -463.17160034]
[231.86257935 -477.82638550]
[235.06207275 -492.48120117]
[228.76293945 -503.75006104]
[231.74179077 -515.89904785]
[241.86888123 -522.53540039]
[245.31024170 -537.13531494]
[248.75160217 -551.73522949]
[252.19296265 -566.33514404]
[255.63432312 -580.93499756]
[248.45220947 -595.28063965]
[255.32058716 -609.77905273]
[270.97061157 -613.30841064]
[283.39694214 -603.16119385]
[283.06713867 -587.12152100]
[270.23422241 -577.49365234]
[266.79284668 -562.89373779]
[263.35150146 -548.29388428]
[259.91012573 -533.69396973]
[256.46878052 -519.09405518]
[262.42608643 -502.59530640]
[249.71687317 -489.28170776]
[246.51737976 -474.62689209]
[243.31788635 -459.97210693]
[240.11839294 -445.31729126]
[236.91889954 -430.66250610]
[234.08381653 -415.93286133]
[231.61489868 -401.13745117]
[229.14598083 -386.34201050]
[226.67706299 -371.54660034]
[224.20814514 -356.75119019]
[221.73922729 -341.95574951]
[235.32179260 -348.32080078]
[248.84123230 -341.82278442]
[252.35546875 -327.24023438]
[243.28013611 -315.29711914]
[228.28918457 -314.77627563]
[218.40658569 -326.06164551]
[214.72430420 -311.52062988]
[211.04200745 -296.97964478]
[207.35972595 -282.43862915]
[203.67744446 -267.89761353]
[199.99516296 -253.35662842]
[196.31288147 -238.81561279]
[192.75094604 -224.24467468]
[189.30958557 -209.64477539]
[185.86822510 -195.04487610]
[182.42686462 -180.44497681]
[188.38417053 -163.94621277]
[175.67495728 -150.63261414]
[172.47546387 -135.97781372]
[169.27597046 -121.32301331]
[177.38464355 -113.26730347]
[180.62332153 -102.18067932]
[178.07388306 -90.79258728]
[170.25830078 -81.96537781]
[159.03677368 -77.97489929]
[155.35449219 -63.43389893]
[163.19238281 -55.11449051]
[166.06272888 -43.92684555]
[163.13815308 -32.62927628]
[155.03498840 -24.06529808]
[143.68765259 -20.44802666]
[139.52661133 -6.03672218]
[135.36557007 8.37458324]
[142.76509094 21.25023842]
[138.75050354 35.92462540]
[125.19515991 43.59863663]
[121.03411102 58.00994110]
[116.87306976 72.42124939]
[120.77612305 86.79537201]
[109.51428223 97.90758514]
[107.29032135 112.74180603]
[107.04231262 127.73975372]
[106.79430389 142.73770142]
[109.78562927 151.38792419]
[106.41616058 157.98103333]
[105.92021179 172.97282410]
[105.42426300 187.96463013]
[104.92831421 202.95643616]
[107.77619934 211.65492249]
[104.29818726 218.19142151]
[103.55442810 233.17297363]
[102.81067657 248.15452576]
[102.19080353 263.14169312]
[101.69484711 278.13351440]
[101.19889832 293.12530518]
[100.70294952 308.11709595]
[100.20700073 323.10888672]
[99.71104431 338.10070801]
[106.98783875 352.14913940]
[98.83396149 364.61364746]
[98.33801270 379.60543823]
[105.61479950 393.65390015]
[97.46092224 406.11837769]
[96.96497345 421.11016846]
[96.46902466 436.10198975]
[103.74581146 450.15042114]
[95.59193420 462.61492920]
[95.09598541 477.60671997]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 189]
[4 188]
[6 186]
[7 185]
[8 184]
[10 182]
[11 181]
[13 179]
[14 178]
[15 177]
[16 176]
[17 175]
[18 174]
[20 173]
[21 172]
[22 171]
[23 169]
[24 168]
[25 167]
[26 166]
[27 164]
[28 163]
[29 162]
[30 43]
[31 42]
[33 40]
[34 39]
[46 161]
[48 159]
[49 158]
[50 157]
[53 154]
[54 153]
[55 152]
[58 147]
[59 146]
[62 141]
[63 140]
[64 139]
[67 137]
[68 136]
[69 135]
[70 134]
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[77 128]
[78 127]
[79 121]
[80 120]
[81 119]
[82 118]
[83 117]
[84 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
