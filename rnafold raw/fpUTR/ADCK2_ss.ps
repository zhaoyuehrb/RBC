%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCGGGCCUCCGGCCUGAGGCCCGGCGAGGUGCUGGAGGGAGCGGGGCGCGGAUCCGGCCCAGAUGGGCAGCUCCGUCCGCGGGGUCAGGGCCGGGCUUCGGCUUCACCGCAGCCUCGCCUGAGCGGGCGCCUCUGAAGUGGAGGGCGGGCCGCCUGGGCCGCGGGCCUCGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[38.73710632 341.20651245]
[35.85918045 355.92782593]
[32.98125458 370.64916992]
[38.81256104 385.97653198]
[28.24596786 398.51760864]
[12.15148354 395.37124634]
[7.08573389 379.77413940]
[18.25992775 367.77124023]
[21.13785362 353.04989624]
[24.01577950 338.32858276]
[18.86409950 324.35327148]
[29.10537910 312.29397583]
[31.98330688 297.57263184]
[25.48671341 287.34707642]
[27.78437996 275.04382324]
[38.17876053 267.37503052]
[41.31460190 252.70648193]
[44.45043945 238.03793335]
[47.58628082 223.36936951]
[50.72212219 208.70082092]
[53.85796356 194.03225708]
[56.99380493 179.36370850]
[60.12964249 164.69515991]
[63.26548386 150.02659607]
[66.40132141 135.35804749]
[84.86959839 90.43314362]
[77.10520172 77.59904480]
[69.34079742 64.76494598]
[61.57640076 51.93084335]
[53.81200027 39.09674454]
[46.04759979 26.26264572]
[38.28320312 13.42854691]
[30.40647888 0.66307664]
[22.41803741 -12.03278160]
[14.42959690 -24.72863960]
[7.18898106 -30.34612083]
[6.41463280 -37.71815109]
[-1.34976673 -50.55224991]
[-13.68170357 -54.39631271]
[-19.87989235 -65.26976013]
[-17.08819199 -77.05848694]
[-24.62615776 -90.02687073]
[-32.16412354 -102.99526215]
[-39.70209122 -115.96364594]
[-47.24005890 -128.93203735]
[-54.89153290 -141.83377075]
[-62.65593338 -154.66787720]
[-70.42033386 -167.50196838]
[-78.18473053 -180.33607483]
[-85.94913483 -193.17016602]
[-99.71255493 -200.97265625]
[-99.68044281 -215.86723328]
[-107.44483948 -228.70132446]
[-115.20924377 -241.53543091]
[-122.35015869 -247.27911377]
[-122.99501038 -254.66358948]
[-130.53297424 -267.63198853]
[-138.07093811 -280.60037231]
[-145.72241211 -293.50210571]
[-153.48681641 -306.33621216]
[-161.25122070 -319.17031860]
[-169.01560974 -332.00439453]
[-176.78001404 -344.83850098]
[-190.54344177 -352.64099121]
[-190.51132202 -367.53555298]
[-197.65223694 -373.27926636]
[-198.29708862 -380.66372681]
[-205.83505249 -393.63211060]
[-213.37303162 -406.60052490]
[-220.91099548 -419.56890869]
[-228.44895935 -432.53729248]
[-243.78886414 -436.34027100]
[-251.87503052 -449.91928101]
[-247.91007996 -465.21813965]
[-234.24632263 -473.16027832]
[-218.99026489 -469.03378296]
[-211.19302368 -455.28683472]
[-215.48057556 -440.07525635]
[-207.94261169 -427.10687256]
[-200.40463257 -414.13848877]
[-192.86666870 -401.17010498]
[-185.32870483 -388.20169067]
[-177.67723083 -375.29995728]
[-164.46916199 -368.41546631]
[-163.94592285 -352.60290527]
[-156.18151855 -339.76879883]
[-148.41711426 -326.93472290]
[-140.65272522 -314.10061646]
[-132.88832092 -301.26651001]
[-126.71779633 -297.15905762]
[-125.10255432 -288.13833618]
[-117.56459045 -275.16995239]
[-110.02661896 -262.20156860]
[-102.37514496 -249.29981995]
[-94.61074066 -236.46572876]
[-86.84634399 -223.63162231]
[-73.63828278 -216.74711609]
[-73.11503601 -200.93457031]
[-65.35063171 -188.10046387]
[-57.58623505 -175.26637268]
[-49.82183456 -162.43226624]
[-42.05743408 -149.59817505]
[-35.88690948 -145.49073792]
[-34.27167130 -136.47000122]
[-26.73370361 -123.50160980]
[-19.19573784 -110.53322601]
[-11.65777111 -97.56483459]
[-4.11980438 -84.59645081]
[11.54707527 -76.71726990]
[11.48433208 -58.31665039]
[19.24873161 -45.48255157]
[27.12545586 -32.71707916]
[35.11389542 -20.02122307]
[43.10233688 -7.32536411]
[49.34399796 -3.32684779]
[51.11730194 5.66414738]
[58.88169861 18.49824715]
[66.64610291 31.33234596]
[74.41049957 44.16644669]
[82.17489624 57.00054550]
[89.93930054 69.83464050]
[97.70369720 82.66873932]
[92.92844391 68.44914246]
[95.58182526 53.68569183]
[105.00958252 42.01874924]
[118.88700104 36.32514954]
[133.79220581 38.00881577]
[146.04988098 46.65459061]
[152.63752747 60.13060379]
[151.93077087 75.11394501]
[144.10386658 87.91002655]
[131.08679199 95.36359406]
[116.09046936 95.63703918]
[130.78598022 98.64403534]
[145.48149109 101.65103149]
[160.17698669 104.65803528]
[174.87249756 107.66503143]
[188.99888611 100.06076813]
[203.69458008 106.49628448]
[207.68632507 122.03480530]
[197.91197205 134.75650024]
[181.86958313 134.90238953]
[171.86550903 122.36054230]
[157.16999817 119.35353851]
[142.47448730 116.34654236]
[127.77897644 113.33954620]
[113.08347321 110.33254242]
[106.00526428 123.55747986]
[116.65830231 134.11744690]
[127.31134033 144.67739868]
[137.96437073 155.23736572]
[153.21234131 159.45759583]
[156.80422974 173.91261292]
[167.45727539 184.47257996]
[183.44522095 188.12191772]
[188.01956177 203.87017822]
[176.47459412 215.51689148]
[160.68681335 211.08091736]
[156.89730835 195.12561035]
[146.24427795 184.56565857]
[131.75830078 181.10073853]
[127.40441895 165.89041138]
[116.75138092 155.33044434]
[106.09834290 144.77047729]
[95.44530487 134.21052551]
[81.06987762 138.49388123]
[77.93403625 153.16244507]
[74.79819489 167.83099365]
[71.66236115 182.49954224]
[68.52651978 197.16810608]
[65.39067841 211.83665466]
[62.25483704 226.50521851]
[59.11899567 241.17376709]
[55.98315430 255.84233093]
[52.84731674 270.51086426]
[58.92947769 287.87734985]
[46.70463562 300.45056152]
[43.82670975 315.17187500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[12 178]
[13 177]
[16 175]
[17 174]
[18 173]
[19 172]
[20 171]
[21 170]
[22 169]
[23 168]
[24 167]
[25 166]
[26 122]
[27 121]
[28 120]
[29 119]
[30 118]
[31 117]
[32 116]
[33 114]
[34 113]
[35 112]
[37 111]
[38 110]
[41 108]
[42 107]
[43 106]
[44 105]
[45 104]
[46 102]
[47 101]
[48 100]
[49 99]
[50 98]
[52 96]
[53 95]
[54 94]
[56 93]
[57 92]
[58 91]
[59 89]
[60 88]
[61 87]
[62 86]
[63 85]
[65 83]
[67 82]
[68 81]
[69 80]
[70 79]
[71 78]
[133 147]
[134 146]
[135 145]
[136 144]
[137 143]
[148 165]
[149 164]
[150 163]
[151 162]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
