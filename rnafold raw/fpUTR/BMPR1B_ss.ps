%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGGGCGCGGAGUCGGCGGGGCCUCGCGGGACGCCGGGCAGUGCGGAGACCGCGGCGCUGAGGACGCGGGAGCCGGGAGCGCAGCCGCGGGGUGGAGUUCAGCCUACUCUUUCUUAGAUGUGAAAGGAAAGGAAGAUCAUUUCAUGCCUUGUUGAUAAAGGUUCAGACUUCUGCUGAUUCAUAACCAUUUGGCUCUGAGCUAUGACAAGAGAGGAAACAAAAAGUUAAACAAGCAAGCCUGCCAUAAGUGAGA\
AGCAAACUUCCUUGAUAAC\
) } def
/len { sequence length } bind def

/coor [
[57.32875061 370.10165405]
[52.12694550 384.17080688]
[46.92514420 398.23995972]
[41.72334290 412.30911255]
[36.52153778 426.37829590]
[31.31973648 440.44744873]
[26.11793327 454.51660156]
[20.91613197 468.58575439]
[23.38756752 484.21273804]
[11.71676254 493.46701050]
[14.18819904 509.09399414]
[2.51739407 518.34826660]
[9.35061836 532.59899902]
[4.02692938 547.47961426]
[-10.29522419 554.16180420]
[-25.11876106 548.68109131]
[-31.64914131 534.28906250]
[-26.01200485 519.52435303]
[-11.55176544 513.14648438]
[-14.39526939 498.52581787]
[-2.35239697 488.26522827]
[-5.19590092 473.64456177]
[6.84697151 463.38397217]
[12.04877377 449.31478882]
[17.25057602 435.24563599]
[22.45237923 421.17648315]
[27.65418243 407.10733032]
[32.85598373 393.03814697]
[38.05778503 378.96899414]
[43.25959015 364.89984131]
[39.48542786 347.62869263]
[44.35165405 332.32125854]
[55.06409836 322.61956787]
[67.65196991 320.02597046]
[69.53197479 305.14425659]
[71.41197205 290.26254272]
[59.34317780 276.46200562]
[61.26591492 257.90756226]
[76.41987610 246.48910522]
[77.95940399 231.56832886]
[79.49892426 216.64753723]
[81.03844452 201.72674561]
[82.57796478 186.80596924]
[80.14777374 179.85644531]
[84.22124481 171.72386169]
[85.93111420 156.82164001]
[74.27363586 152.58123779]
[63.77143097 145.97959900]
[54.89612579 137.31317139]
[48.04627609 126.97114563]
[43.52948380 115.41793823]
[41.54858398 103.17237091]
[26.58991814 102.05955505]
[11.63125420 100.94674683]
[-3.32741070 99.83393097]
[-18.28607559 98.72111511]
[-33.24473953 97.60829926]
[-48.20340347 96.49548340]
[-54.25822067 98.99523163]
[-59.83846283 98.20745850]
[-63.48983383 95.18253326]
[-78.41917419 93.72826385]
[-92.90447235 100.09117126]
[-104.82164764 91.15639496]
[-116.95856476 100.92025757]
[-132.07832336 99.23274994]
[-141.31187439 87.60188293]
[-155.79718018 93.96478271]
[-167.71435547 85.03001404]
[-182.64369202 83.57574463]
[-197.57302856 82.12147522]
[-213.92373657 86.60370636]
[-222.75714111 72.13278961]
[-211.29707336 59.63865662]
[-196.11875916 67.19213867]
[-181.18942261 68.64640808]
[-166.26008606 70.10066986]
[-152.84262085 63.63374710]
[-139.85760498 72.67253876]
[-128.55300903 63.04229736]
[-113.39181519 64.30445862]
[-103.36737823 76.22705841]
[-89.94992065 69.76013184]
[-76.96490479 78.79892731]
[-62.03556442 80.25319672]
[-47.09059143 81.53681946]
[-32.13192749 82.64963531]
[-17.17326164 83.76245117]
[-2.21459675 84.87526703]
[12.74406815 85.98807526]
[27.70273209 87.10089111]
[42.66139603 88.21370697]
[54.64335632 56.03121567]
[84.29142761 34.04173279]
[78.61059570 20.15907669]
[72.92976379 6.27642012]
[67.24893188 -7.60623646]
[61.56810379 -21.48889351]
[55.88727188 -35.37155151]
[50.20643997 -49.25420761]
[44.36738968 -63.07106400]
[38.37088013 -76.82031250]
[23.93408966 -82.66983032]
[18.04863930 -96.69895172]
[23.71423149 -110.42617035]
[17.71772194 -124.17542267]
[11.72121048 -137.92466736]
[-2.71557760 -143.77418518]
[-8.60102844 -157.80331421]
[-2.93543601 -171.53053284]
[-8.93194675 -185.27978516]
[-14.92845726 -199.02903748]
[-20.92496681 -212.77827454]
[-26.92147827 -226.52752686]
[-32.91798782 -240.27677917]
[-48.09939957 -243.48683167]
[-58.46957779 -255.02975464]
[-60.04097748 -270.46704102]
[-52.20936584 -283.86279297]
[-37.98615646 -290.06600952]
[-22.84046555 -286.69143677]
[-12.59611511 -275.03671265]
[-11.19227123 -259.58328247]
[-19.16873932 -246.27328491]
[-13.17222881 -232.52403259]
[-7.17571783 -218.77479553]
[-1.17920744 -205.02554321]
[4.81730318 -191.27629089]
[10.81381321 -177.52703857]
[24.72875214 -172.33955383]
[31.00592804 -158.48127747]
[25.47046089 -143.92118835]
[31.46697044 -130.17193604]
[37.46348190 -116.42268372]
[51.37841797 -111.23519135]
[57.65559769 -97.37691498]
[52.12012863 -82.81682587]
[58.11663818 -69.06757355]
[62.12184906 -66.52966309]
[64.59545135 -61.46597290]
[64.08909607 -54.93503952]
[69.76992798 -41.05237961]
[75.45075989 -27.16972351]
[81.13159180 -13.28706741]
[86.81242371 0.59558964]
[92.49324799 14.47824669]
[98.17407990 28.36090279]
[113.17188263 28.61792946]
[119.32506561 14.93808079]
[125.47825623 1.25823069]
[131.63143921 -12.42161942]
[137.78462219 -26.10146904]
[130.82066345 -40.10279846]
[134.53608704 -55.29259109]
[147.17655945 -64.49868011]
[162.77366638 -63.37424469]
[173.96292114 -52.45020294]
[175.46109009 -36.88454819]
[166.56079102 -24.02691650]
[151.46447754 -19.94828224]
[145.31129456 -6.26843214]
[139.15809631 7.41141748]
[133.00491333 21.09126663]
[126.85173035 34.77111816]
[139.18524170 43.30835342]
[149.82209778 32.73208618]
[160.45893860 22.15582085]
[171.09579468 11.57955456]
[174.95471191 3.34300017]
[181.91508484 0.94409221]
[185.86222839 -14.97294617]
[201.69313049 -19.25251961]
[213.12231445 -7.49216843]
[208.39241028 8.21006489]
[192.36915588 11.70106888]
[181.67205811 22.21640587]
[171.03521729 32.79267120]
[160.39836121 43.36893845]
[149.76150513 53.94520569]
[153.60084534 61.57680893]
[156.33773804 69.43109131]
[157.97840881 77.35533905]
[158.54948425 85.20207977]
[158.09687805 92.83172607]
[173.09663391 92.91741180]
[188.09638977 93.00308990]
[203.09614563 93.08876801]
[214.29132080 82.25798798]
[229.50198364 82.55855560]
[239.75849915 93.29818726]
[254.75823975 93.38386536]
[269.75799561 93.46954346]
[284.75775146 93.55522156]
[295.95294189 82.72444153]
[311.16360474 83.02500916]
[321.42010498 93.76464081]
[336.41986084 93.85031891]
[351.41961670 93.93599701]
[360.65090942 81.60354614]
[375.20376587 77.12384796]
[389.43560791 82.01453400]
[397.95663452 94.20182037]
[412.95639038 94.28749847]
[424.01773071 82.99935913]
[439.82183838 82.92253876]
[450.99240112 94.10261536]
[450.90213013 109.90664673]
[439.60458374 120.95838165]
[423.80239868 120.70101929]
[412.87072754 109.28725433]
[397.87097168 109.20157623]
[389.21127319 121.29072571]
[374.92446899 126.01850891]
[360.42373657 121.37285614]
[351.33392334 108.93575287]
[336.33416748 108.85007477]
[321.33441162 108.76439667]
[310.95590210 119.38616180]
[295.74279785 119.51294708]
[284.67208862 108.55497742]
[269.67233276 108.46929932]
[254.67256165 108.38362122]
[239.67280579 108.29794312]
[229.29429626 118.91970062]
[214.08119202 119.04649353]
[203.01046753 108.08852386]
[188.01071167 108.00284576]
[173.01095581 107.91716766]
[158.01119995 107.83148193]
[156.31520081 115.97595215]
[153.48176575 123.79774475]
[149.56814575 131.13888550]
[144.65339661 137.85112000]
[138.83674622 143.79884338]
[132.23571777 148.86195374]
[124.98360443 152.93818665]
[117.22689056 155.94520569]
[109.12223816 157.82228088]
[100.83334351 158.53150940]
[99.12347412 173.43373108]
[97.49874878 188.34548950]
[95.95922852 203.26626587]
[94.41970825 218.18705750]
[92.88018799 233.10784912]
[91.34066772 248.02862549]
[100.46011353 255.58511353]
[104.77195740 266.48712158]
[103.31834412 277.99978638]
[96.57250214 287.29425049]
[86.29369354 292.14251709]
[84.41368866 307.02426147]
[82.53369141 321.90597534]
[101.40432739 335.91070557]
[101.39791107 364.89984131]
[106.59970856 378.96899414]
[111.80151367 393.03814697]
[117.00331879 407.10733032]
[129.95797729 417.16259766]
[127.45941162 433.37030029]
[112.07792664 439.05731201]
[99.63668060 428.37332153]
[102.93415833 412.30911255]
[97.73235321 398.23995972]
[92.53054810 384.17080688]
[87.32875061 370.10165405]
[79.82875061 370.10165405]
[79.82875061 385.10165405]
[79.82875061 400.10165405]
[79.82875061 415.10165405]
[79.82851410 430.10165405]
[64.82851410 430.10116577]
[64.82875061 415.10165405]
[64.82875061 400.10165405]
[64.82875061 385.10165405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[3 28]
[4 27]
[5 26]
[6 25]
[7 24]
[8 23]
[10 21]
[12 19]
[34 252]
[35 251]
[36 250]
[39 245]
[40 244]
[41 243]
[42 242]
[43 241]
[45 240]
[46 239]
[52 92]
[53 91]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[61 85]
[62 84]
[64 82]
[67 79]
[69 77]
[70 76]
[71 75]
[94 147]
[95 146]
[96 145]
[97 144]
[98 143]
[99 142]
[100 141]
[101 138]
[102 137]
[105 134]
[106 133]
[107 132]
[110 129]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[148 164]
[149 163]
[150 162]
[151 161]
[152 160]
[165 179]
[166 178]
[167 177]
[168 176]
[170 175]
[184 229]
[185 228]
[186 227]
[187 226]
[190 223]
[191 222]
[192 221]
[193 220]
[196 217]
[197 216]
[198 215]
[202 211]
[203 210]
[254 265]
[255 264]
[256 263]
[257 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
