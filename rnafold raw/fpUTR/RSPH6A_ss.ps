%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGCGCCCAGAGCCUGCGCGGAACCCACCCUGGCCCGCUCCCCGCGCCCUCCACGGGUAACGGCCCCCUCUCUCGGUGCUCAGAAACCGGCGGUGUCGACAGGUGGCUCUCGCUUGGCCUCCUUGUCUGCAAGCCUUUCUCCUAGAGAUCUGUGCCUCCUGGCGAACC\
) } def
/len { sequence length } bind def

/coor [
[102.23497009 401.61541748]
[87.51949310 397.40667725]
[76.45349121 386.83303833]
[71.57984161 372.32421875]
[74.01847076 357.21423340]
[83.20901489 344.97525024]
[97.03954315 338.41970825]
[97.58737183 323.42971802]
[98.13520050 308.43972778]
[98.68302917 293.44973755]
[88.38610840 282.74884033]
[88.72814941 267.53906250]
[100.02203369 256.81124878]
[100.56986237 241.82124329]
[101.11769867 226.83125305]
[98.96426392 223.99543762]
[98.09764099 219.96392822]
[99.06991577 215.36247253]
[102.12846375 211.04174805]
[103.49643707 196.10426331]
[104.86441803 181.16676331]
[106.23239136 166.22927856]
[107.60037231 151.29179382]
[108.96834564 136.35429382]
[110.33632660 121.41680908]
[91.03764343 119.69475555]
[81.19539642 105.14426422]
[66.31783295 103.23165131]
[48.12482071 111.85735321]
[33.23052597 99.56022644]
[18.29303551 98.19224548]
[3.35554433 96.82427216]
[-11.58194637 95.45629120]
[-26.53130722 94.22478485]
[-41.49129105 93.12985992]
[-56.45127487 92.03492737]
[-70.26913452 104.95357513]
[-88.82666016 103.72946930]
[-100.42370605 89.59982300]
[-115.41369629 89.05198669]
[-130.40368652 88.50415802]
[-143.08621216 98.32929230]
[-158.64056396 94.39971161]
[-165.13478088 79.72985840]
[-157.58705139 65.57318115]
[-141.78735352 62.78947830]
[-129.85586548 73.51416779]
[-114.86586761 74.06199646]
[-99.87586975 74.60982513]
[-93.37215424 65.18375397]
[-83.01125336 60.02950287]
[-71.33010864 60.53894043]
[-61.25230408 66.70088196]
[-55.35634613 77.07494354]
[-40.39636230 78.16987610]
[-25.43637848 79.26480103]
[-18.51026726 76.60720062]
[-10.21396923 80.51879883]
[4.72352123 81.88677979]
[19.66101265 83.25475311]
[34.59850311 84.62273407]
[41.86928940 77.37903595]
[52.14626312 75.30920410]
[62.06207275 79.33897400]
[68.23044586 88.35408783]
[83.10800934 90.26670074]
[88.12683105 83.64575958]
[95.68178558 79.52651978]
[104.55767059 78.84734344]
[113.21047211 81.96924591]
[120.03592682 88.57094574]
[123.66584778 97.66613770]
[135.70375061 88.71689606]
[147.74165344 79.76766205]
[159.77955627 70.81842804]
[171.81745911 61.86918640]
[178.27627563 47.42639160]
[193.10646057 46.04249191]
[205.14436340 37.09325790]
[190.97929382 32.15857697]
[185.82922363 18.07040215]
[193.47213745 5.16358995]
[208.30133057 2.90637088]
[219.43833923 12.95460510]
[218.71334839 27.93684769]
[231.51724243 20.12274170]
[244.32115173 12.30863667]
[257.12503052 4.49453211]
[269.92892456 -3.31957316]
[273.45556641 -8.98233318]
[278.55508423 -11.59432983]
[283.34625244 -11.17536831]
[296.42700195 -18.51663589]
[309.50772095 -25.85790443]
[313.75500488 -38.06224060]
[324.83142090 -43.90069199]
[336.52554321 -40.71730423]
[349.73815918 -47.81843948]
[362.95080566 -54.91957474]
[371.44369507 -68.26804352]
[386.31732178 -67.47790527]
[399.52996826 -74.57904053]
[412.74258423 -81.68018341]
[425.95523071 -88.78131866]
[439.10247803 -96.00281525]
[452.18322754 -103.34408569]
[460.43087769 -116.84544373]
[475.31646729 -116.32708740]
[488.39721680 -123.66835785]
[501.47793579 -131.00962830]
[507.45751953 -137.96475220]
[514.86529541 -138.36302185]
[519.17791748 -153.56753540]
[533.01916504 -161.19618225]
[548.17718506 -156.72305298]
[555.65911865 -142.80195618]
[551.02593994 -127.69204712]
[537.02655029 -120.35774994]
[521.96643066 -125.15039062]
[508.81921387 -117.92888641]
[495.73846436 -110.58761597]
[482.65771484 -103.24635315]
[475.34570312 -90.27008820]
[459.52447510 -90.26334381]
[446.44375610 -82.92208099]
[442.13375854 -76.88404083]
[433.05636597 -75.56867218]
[419.84371948 -68.46753693]
[406.63110352 -61.36640167]
[393.41845703 -54.26526642]
[385.87063599 -41.42471695]
[370.05194092 -41.70693588]
[356.83929443 -34.60580063]
[343.62667847 -27.50466347]
[335.23403931 -12.11052322]
[316.84899902 -12.77716255]
[303.76824951 -5.43589497]
[290.68753052 1.90537262]
[277.74304199 9.48432350]
[264.93914795 17.29842758]
[252.13525391 25.11253357]
[239.33135986 32.92663956]
[226.52745056 40.74074554]
[214.09359741 49.13116074]
[202.05569458 58.08039856]
[196.45790100 71.88307953]
[180.76670837 73.90708923]
[168.72879028 82.85633087]
[156.69088745 91.80556488]
[144.65298462 100.75480652]
[132.61508179 109.70404053]
[125.27381134 122.78478241]
[123.90583801 137.72227478]
[122.53785706 152.65975952]
[121.16988373 167.59725952]
[119.80190277 182.53474426]
[118.43392944 197.47224426]
[117.06594849 212.40972900]
[116.10768890 227.37908936]
[115.55986023 242.36907959]
[115.01203156 257.35906982]
[125.49270630 268.88265991]
[124.72359467 284.07684326]
[113.67302704 293.99755859]
[113.12519073 308.98754883]
[112.57736206 323.97753906]
[112.02953339 338.96752930]
[125.34464264 346.51513672]
[133.61727905 359.39233398]
[134.94644165 374.64001465]
[129.02671814 388.75439453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 167]
[8 166]
[9 165]
[10 164]
[13 161]
[14 160]
[15 159]
[19 158]
[20 157]
[21 156]
[22 155]
[23 154]
[24 153]
[25 152]
[27 66]
[28 65]
[30 61]
[31 60]
[32 59]
[33 58]
[34 56]
[35 55]
[36 54]
[39 49]
[40 48]
[41 47]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[78 145]
[79 144]
[85 143]
[86 142]
[87 141]
[88 140]
[89 139]
[92 138]
[93 137]
[94 136]
[97 134]
[98 133]
[99 132]
[101 130]
[102 129]
[103 128]
[104 127]
[105 125]
[106 124]
[108 122]
[109 121]
[110 120]
[112 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
