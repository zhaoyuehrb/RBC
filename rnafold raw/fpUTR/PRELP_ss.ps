%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAAGCUAACCUCCCCACCCCAAUAGGAUCUGGUGGAAGAAAAGUCAGGCAAACACAAGCACGCACACACCACUGGGAGAUCAGAUCUUCUAGCUGGCUCUCUGCUGCCACAGCUCCGCCGAAGGGAGGGGGUGGAAGAGGAGGACUAAACUCAGAGCUGAGAGGAGAGGCAGGUGUGUGCAGGUGCAUCACCUGGAUC\
) } def
/len { sequence length } bind def

/coor [
[330.03417969 372.66113281]
[322.43289185 359.72976685]
[314.73080444 346.85818481]
[298.90173340 339.28933716]
[298.61312866 320.88116455]
[290.61138916 308.19369507]
[282.60964966 295.50619507]
[274.60791016 282.81872559]
[251.17970276 280.45547485]
[236.94612122 261.37734985]
[241.44960022 237.74427795]
[231.74804688 226.30400085]
[222.04649353 214.86372375]
[212.34494019 203.42344666]
[202.64340210 191.98316956]
[192.58903503 180.85168457]
[182.19166565 170.03990173]
[171.79429626 159.22811890]
[161.39692688 148.41632080]
[150.99955750 137.60453796]
[140.60218811 126.79274750]
[130.20483398 115.98096466]
[123.65058136 124.00289917]
[115.10084534 129.59173584]
[105.40179443 132.29853821]
[95.48275757 131.95449829]
[86.26727295 128.67887878]
[78.58707428 122.85988617]
[73.10712433 115.11073303]
[70.26833344 106.20592499]
[70.25296021 97.00422668]
[72.97525787 88.36596680]
[61.16472626 79.11873627]
[49.35419464 69.87149811]
[37.54365921 60.62426758]
[25.73312950 51.37703323]
[13.92259598 42.12979889]
[-1.71313715 39.71434784]
[-6.96428585 25.77610207]
[-18.77481842 16.52886772]
[-30.58535004 7.28163481]
[-43.46520233 8.06185150]
[-53.11303711 0.10995779]
[-54.70033646 -11.88711548]
[-66.36489868 -21.31780815]
[-78.02946472 -30.74850082]
[-89.69402313 -40.17919540]
[-101.35858917 -49.60988617]
[-113.02314758 -59.04058075]
[-126.70719147 -65.18443298]
[-141.50564575 -67.63509369]
[-152.45980835 -56.64482880]
[-167.78710938 -54.22546387]
[-181.59390259 -61.30728912]
[-188.57118225 -75.16720581]
[-186.03604126 -90.47578430]
[-174.96330261 -101.34657288]
[-159.61065674 -103.59952545]
[-145.88150024 -96.36833954]
[-139.05499268 -82.43354797]
[-124.25653076 -79.98288727]
[-119.96271515 -86.13212585]
[-132.26119995 -94.71976471]
[-144.55966187 -103.30739594]
[-156.85813904 -111.89503479]
[-169.15661621 -120.48266602]
[-181.45495605 -129.07051086]
[-172.86691284 -141.36869812]
[-160.56898499 -132.78114319]
[-148.27050781 -124.19351196]
[-135.97203064 -115.60587311]
[-123.67356110 -107.01824188]
[-111.37508392 -98.43060303]
[-107.08126068 -104.57984161]
[-114.47951508 -117.62844086]
[-121.87776947 -130.67703247]
[-129.27601624 -143.72563171]
[-136.67427063 -156.77423096]
[-144.07252502 -169.82281494]
[-151.47077942 -182.87141418]
[-158.86903381 -195.92001343]
[-166.26728821 -208.96861267]
[-179.33917236 -219.76501465]
[-172.58334351 -235.31477356]
[-155.77107239 -233.12757874]
[-153.21868896 -216.36686707]
[-145.82043457 -203.31826782]
[-138.42219543 -190.26966858]
[-131.02394104 -177.22106934]
[-123.62567902 -164.17248535]
[-116.22742462 -151.12388611]
[-108.82917786 -138.07528687]
[-101.43092346 -125.02669525]
[-94.03266907 -111.97809601]
[-103.59246063 -70.70514679]
[-91.92789459 -61.27444839]
[-80.26332855 -51.84375763]
[-68.59877014 -42.41306305]
[-56.93420792 -32.98237228]
[-45.26964188 -23.55167770]
[-27.81559181 -21.76218605]
[-21.33811760 -4.52889729]
[-9.52758503 4.71833658]
[2.28294754 13.96556950]
[17.07391357 15.71959782]
[23.16983032 30.31926727]
[34.98036194 39.56650162]
[46.79089355 48.81373596]
[58.60142517 58.06097031]
[70.41195679 67.30820465]
[82.22248840 76.55543518]
[92.75395966 70.26010132]
[105.40451050 68.66539764]
[118.09248352 72.42018127]
[128.57562256 81.26083374]
[137.91487122 69.52292633]
[147.25411987 57.78502274]
[156.59336853 46.04711533]
[153.30064392 30.76012993]
[160.65022278 16.95731354]
[175.17185974 11.15593433]
[190.00888062 16.09522629]
[198.15571594 29.44300652]
[195.76565552 44.89686203]
[183.96722412 55.15995407]
[168.33128357 55.38636398]
[158.99203491 67.12426758]
[149.65278625 78.86217499]
[140.31353760 90.60008240]
[141.01661682 105.58359528]
[151.41398621 116.39538574]
[161.81135559 127.20716858]
[172.20870972 138.01896667]
[182.60607910 148.83074951]
[193.00344849 159.64253235]
[203.40081787 170.45433044]
[207.63063049 171.51362610]
[210.96437073 173.65225220]
[213.17221069 176.45443726]
[214.18357849 179.47247314]
[214.08367920 182.28161621]
[223.78521729 193.72189331]
[233.48677063 205.16217041]
[243.18832397 216.60244751]
[252.88987732 228.04272461]
[259.43322754 225.84486389]
[266.28762817 225.20355225]
[273.08892822 226.14448547]
[279.47769165 228.60949707]
[285.11825562 232.46011353]
[289.71621704 237.48529053]
[293.03402710 243.41297913]
[294.90304565 249.92483521]
[295.23223877 256.67330933]
[294.01251221 263.30026245]
[291.31668091 269.45581055]
[287.29537964 274.81698608]
[295.29711914 287.50445557]
[303.29885864 300.19195557]
[311.30059814 312.87942505]
[323.68951416 316.48693848]
[330.09185791 327.22583008]
[327.54177856 339.05572510]
[334.68429565 344.76303101]
[335.36428833 352.12847900]
[342.96557617 365.05984497]
[356.62908936 373.03594971]
[356.40841675 387.92892456]
[364.00970459 400.86029053]
[379.04354858 404.93722534]
[386.56811523 418.15975952]
[382.58874512 432.46710205]
[390.19003296 445.39849854]
[397.79132080 458.32986450]
[405.39260864 471.26123047]
[412.99389648 484.19259644]
[420.59518433 497.12399292]
[427.64764404 502.94223022]
[428.21240234 510.31738281]
[435.61065674 523.36596680]
[443.00891113 536.41461182]
[450.40716553 549.46319580]
[464.81124878 557.30249023]
[464.95367432 573.70104980]
[450.68795776 581.78936768]
[436.68942261 573.24694824]
[437.35858154 556.86145020]
[429.96032715 543.81286621]
[422.56207275 530.76422119]
[415.16381836 517.71563721]
[407.66381836 504.72528076]
[400.06253052 491.79388428]
[392.46124268 478.86251831]
[384.85995483 465.93115234]
[377.25866699 452.99978638]
[369.65737915 440.06838989]
[355.22097778 436.58618164]
[347.32797241 423.58020020]
[351.07833862 408.46157837]
[343.47705078 395.53021240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 163]
[5 160]
[6 159]
[7 158]
[8 157]
[11 145]
[12 144]
[13 143]
[14 142]
[15 141]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[32 111]
[33 110]
[34 109]
[35 108]
[36 107]
[37 106]
[39 104]
[40 103]
[41 102]
[44 100]
[45 99]
[46 98]
[47 97]
[48 96]
[49 95]
[50 61]
[51 60]
[74 94]
[75 93]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[115 129]
[116 128]
[117 127]
[118 126]
[168 200]
[169 199]
[172 196]
[173 195]
[174 194]
[175 193]
[176 192]
[177 191]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
