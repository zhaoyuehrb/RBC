%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGCCCGGCGCGACCUGAUGAUGCCGAGCCCAGGCCGGUUCCGGCGAAGUUAAACCCUCGGAGCUGGCCUCGGACUGCUGGGGCGUUACCCCUUCGGCCACCCCCGCUGACC\
) } def
/len { sequence length } bind def

/coor [
[81.11899567 156.06333923]
[76.42866516 141.81550598]
[79.80686188 127.20086670]
[90.27201843 116.45796967]
[78.18553925 125.34149933]
[71.64813995 139.74888611]
[56.81064987 141.05198669]
[44.72417450 149.93551636]
[32.63769531 158.81904602]
[20.55121994 167.70257568]
[8.46474361 176.58610535]
[-3.49818444 185.63531494]
[-2.85056520 201.13887024]
[-11.46741009 214.04350281]
[-26.03536606 219.38713074]
[-40.95275879 215.11500549]
[-50.48354340 202.86984253]
[-50.96294022 187.36018372]
[-42.20661163 174.54977417]
[-27.58154488 169.36451721]
[-12.71137524 173.79820251]
[-9.31904793 167.11434937]
[-0.41878551 164.49961853]
[11.66769123 155.61608887]
[23.75416756 146.73255920]
[35.84064484 137.84902954]
[47.92712021 128.96549988]
[53.60000992 115.19351959]
[69.30200958 113.25502014]
[81.38848877 104.37149048]
[86.45399475 90.25268555]
[82.77171326 75.71168518]
[78.88942719 61.22279358]
[74.80787659 46.78877640]
[70.72632599 32.35475540]
[66.64476776 17.92073441]
[62.56321716 3.48671532]
[58.48166656 -10.94730473]
[54.40011597 -25.38132477]
[50.31856155 -39.81534576]
[46.23701096 -54.24936295]
[42.15546036 -68.68338776]
[38.07390594 -83.11740112]
[33.99235535 -97.55142212]
[29.91080284 -111.98544312]
[18.71037292 -123.15956116]
[22.69259453 -137.51196289]
[7.90481520 -141.90798950]
[-2.14144731 -153.61595154]
[-4.24046803 -168.89984131]
[2.27754259 -182.88265991]
[15.33271217 -191.10252380]
[30.75918198 -190.93650818]
[43.63442230 -182.43757629]
[49.84999084 -168.31771851]
[47.42252350 -153.08253479]
[37.12661362 -141.59350586]
[48.03510666 -131.45181274]
[44.34482193 -116.06699371]
[48.42637634 -101.63298035]
[52.50792694 -87.19895935]
[56.58947754 -72.76493835]
[60.67103195 -58.33091736]
[64.75258636 -43.89689636]
[68.83413696 -29.46287727]
[72.91568756 -15.02885723]
[76.99723816 -0.59483677]
[81.07878876 13.83918285]
[85.16033936 28.27320290]
[89.24189758 42.70722198]
[93.32344818 57.14124298]
[98.23944092 62.79941177]
[97.31271362 72.02940369]
[100.99499512 86.57040405]
[106.44190216 86.71392059]
[111.84330750 89.14630127]
[116.22387695 93.81320190]
[118.66088867 100.24618530]
[132.39749146 106.27161407]
[141.65412903 106.87673187]
[146.42597961 112.65698242]
[159.99133301 119.05863190]
[173.55668640 125.46028137]
[187.12205505 131.86192322]
[196.35848999 132.72187805]
[200.96926880 138.63142395]
[214.35308838 145.40441895]
[229.20591736 140.71067810]
[242.68252563 147.77012634]
[247.06575012 161.95895386]
[260.44955444 168.73196411]
[276.08044434 165.11874390]
[288.56100464 175.19914246]
[288.31729126 191.24034119]
[275.53619385 200.93690491]
[260.02230835 196.85046387]
[253.67655945 182.11576843]
[240.29273987 175.34277344]
[226.26397705 180.21405029]
[212.59440613 173.53591919]
[207.58007812 158.78823853]
[194.19627380 152.01522827]
[180.72039795 145.42727661]
[167.15504456 139.02563477]
[153.58969116 132.62399292]
[140.02432251 126.22234344]
[126.37205505 120.00821686]
[112.63545227 113.98278046]
[125.19819641 122.17897034]
[131.68939209 135.70170593]
[130.22700500 150.63024902]
[121.23503113 162.63627625]
[107.32057953 168.23878479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 30]
[5 29]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 21]
[31 74]
[32 73]
[33 71]
[34 70]
[35 69]
[36 68]
[37 67]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[45 59]
[47 57]
[78 108]
[79 107]
[81 106]
[82 105]
[83 104]
[84 103]
[86 102]
[87 101]
[90 98]
[91 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
