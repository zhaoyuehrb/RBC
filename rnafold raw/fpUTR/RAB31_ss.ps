%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGGCGGCCACGUGACCCACCGCGGCGGGGCCGGCGGCCCAGAAAUAGCAGCGGCGGCGGUUCCGCCCGCGGGCGGCGCGAGCGAGGGGCAGAGGCGAGAGACGCCGGCGGGGCGCGGGCGCGGCGGCCCCGGAGGAUGCUGCUGAGCCCCGGCACUGCCUGGCUGCGAGCAC\
) } def
/len { sequence length } bind def

/coor [
[88.54884338 276.15322876]
[96.96263885 262.07702637]
[96.69490051 247.07940674]
[85.83157349 236.95401001]
[85.34640503 221.74810791]
[96.04050446 210.42230225]
[95.77277374 195.42469788]
[95.50503540 180.42707825]
[95.23729706 165.42947388]
[94.96956635 150.43186951]
[94.70182800 135.43424988]
[94.43409729 120.43663788]
[84.41040802 109.27753448]
[69.52735138 107.40815735]
[54.64429092 105.53878784]
[39.76123047 103.66941833]
[30.82344055 105.70899200]
[24.63009834 101.63155365]
[9.78277683 99.49682617]
[-2.78748560 108.69608307]
[-17.81437111 106.31966400]
[-26.50698662 94.27914429]
[-41.35430908 92.14442444]
[-56.20162964 90.00970459]
[-71.04895020 87.87497711]
[-85.89627075 85.74025726]
[-100.74359131 83.60553741]
[-115.60937500 81.60340881]
[-130.49243164 79.73403168]
[-145.37548828 77.86466217]
[-160.25856018 75.99529266]
[-175.14161682 74.12591553]
[-190.02467346 72.25654602]
[-204.90773010 70.38717651]
[-219.79078674 68.51779938]
[-228.72857666 70.55738068]
[-234.92192078 66.47993469]
[-249.68276978 72.17451477]
[-261.17935181 62.70468521]
[-276.02667236 60.56996536]
[-290.87399292 58.43524170]
[-305.73977661 56.43311310]
[-314.95294189 68.72185516]
[-329.08245850 74.74288177]
[-344.32751465 72.87655640]
[-356.58734131 63.62491989]
[-362.56402588 49.47661591]
[-360.64993286 34.23746109]
[-351.35992432 22.00671577]
[-337.19293213 16.07439041]
[-321.95986938 18.03624725]
[-309.75830078 27.36455917]
[-303.87042236 41.55005646]
[-296.81900024 39.25641632]
[-288.73928833 43.58792114]
[-273.89196777 45.72264099]
[-259.04464722 47.85736465]
[-245.34577942 42.01009750]
[-232.78720093 51.63261414]
[-217.92141724 53.63474274]
[-203.03836060 55.50411224]
[-188.15530396 57.37348557]
[-173.27224731 59.24285889]
[-158.38917542 61.11223221]
[-143.50611877 62.98160553]
[-128.62306213 64.85097504]
[-113.74000549 66.72035217]
[-106.68860626 64.42671204]
[-98.60887146 68.75821686]
[-83.76155090 70.89293671]
[-68.91423035 73.02765656]
[-54.06690598 75.16238403]
[-39.21958542 77.29710388]
[-24.37226486 79.43182373]
[-12.63955498 70.32802582]
[2.44815016 72.28143311]
[11.91749954 84.64950562]
[26.76482010 86.78423309]
[41.63060379 88.78635406]
[56.51366043 90.65573120]
[71.39672089 92.52510071]
[86.27977753 94.39447784]
[70.72532654 82.96630096]
[58.39318085 67.30130768]
[58.39318085 52.30131149]
[48.11140823 39.98608398]
[51.47029114 24.29858971]
[65.89318085 17.27293015]
[80.31606293 24.29858971]
[83.67494965 39.98608398]
[73.39318085 52.30131149]
[73.39318085 67.30130768]
[80.66020966 69.15610504]
[91.13962555 58.42382431]
[95.19426727 72.86570740]
[102.46129608 74.72050476]
[109.65003204 61.55532074]
[116.83876801 48.39013672]
[124.02750397 35.22494888]
[120.90547180 19.48860741]
[131.37170410 7.32976532]
[147.39741516 8.07564545]
[156.68904114 21.15407372]
[152.11883545 36.53239822]
[137.19268799 42.41368484]
[130.00395203 55.57886887]
[122.81521606 68.74405670]
[115.62648010 81.90924072]
[122.46018982 95.26216125]
[137.34324646 97.13153076]
[152.22630310 99.00090790]
[167.10935974 100.87027740]
[181.99241638 102.73964691]
[196.89157104 104.47612000]
[211.43975830 98.25832367]
[223.26702881 107.31177521]
[238.18107605 108.91519928]
[247.08103943 106.71641541]
[253.34617615 110.68266296]
[268.22921753 112.55204010]
[283.11230469 114.42140961]
[297.99536133 116.29077911]
[312.65219116 110.33364868]
[324.31597900 119.59676361]
[339.19903564 121.46613312]
[354.08209229 123.33550262]
[368.96514893 125.20487976]
[383.84820557 127.07424927]
[398.73129272 128.94361877]
[413.61434937 130.81298828]
[428.52838135 132.41642761]
[443.46868896 133.75338745]
[458.10928345 126.36521912]
[471.67779541 135.57539368]
[470.21612549 151.90927124]
[455.22790527 158.56396484]
[442.13171387 148.69369507]
[427.19143677 147.35671997]
[422.99563599 149.69903564]
[417.27923584 149.40789795]
[411.74496460 145.69606018]
[396.86190796 143.82667542]
[381.97885132 141.95730591]
[367.09579468 140.08793640]
[352.21273804 138.21856689]
[337.32968140 136.34919739]
[322.44662476 134.47981262]
[308.85430908 140.57066345]
[296.12597656 131.17384338]
[281.24291992 129.30447388]
[266.35986328 127.43509674]
[251.47680664 125.56572723]
[236.57765198 123.82925415]
[221.66358948 122.22583008]
[208.18217468 128.55831909]
[195.28814697 119.39017487]
[188.27880859 121.80931091]
[180.12304688 117.62271118]
[165.23999023 115.75333405]
[150.35693359 113.88396454]
[135.47387695 112.01459503]
[120.59081268 110.14521790]
[109.43170166 120.16890717]
[109.69944000 135.16651917]
[109.96717834 150.16412354]
[110.23490906 165.16174316]
[110.50264740 180.15934753]
[110.77037811 195.15695190]
[111.03811646 210.15457153]
[122.12964630 221.09146118]
[122.18752289 236.30499268]
[111.69251251 246.81166077]
[111.96025085 261.80926514]
[120.87109375 275.57623291]
[113.16410828 290.05151367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 173]
[3 172]
[6 169]
[7 168]
[8 167]
[9 166]
[10 165]
[11 164]
[12 163]
[13 82]
[14 81]
[15 80]
[16 79]
[18 78]
[19 77]
[22 74]
[23 73]
[24 72]
[25 71]
[26 70]
[27 69]
[28 67]
[29 66]
[30 65]
[31 64]
[32 63]
[33 62]
[34 61]
[35 60]
[37 59]
[39 57]
[40 56]
[41 55]
[42 53]
[84 92]
[85 91]
[96 108]
[97 107]
[98 106]
[99 105]
[109 162]
[110 161]
[111 160]
[112 159]
[113 158]
[114 156]
[116 154]
[117 153]
[119 152]
[120 151]
[121 150]
[122 149]
[124 147]
[125 146]
[126 145]
[127 144]
[128 143]
[129 142]
[130 141]
[131 138]
[132 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
