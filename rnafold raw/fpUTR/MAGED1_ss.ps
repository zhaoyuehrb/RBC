%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGAAGAGGCGGGGUCGCCCAAGCUGCCGCGCUGGCAUUUUCUCCUGGACAAGGAGAGAGUGCGGCUGCUGAGAGCCGAGCCCAGCAAUCCCGAUCCUCUGAGUCGUGAAGAAGGGAGGCAGCGAGGGGGUUGGGGUUGGGGCCUGAGGCAAGCCCCCAGGCUCCGCUCUUGCCAGAGGGACAGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[71.70304108 113.05342865]
[56.97058487 115.87384796]
[42.23812866 118.69425964]
[39.77930069 131.17562866]
[33.28724670 142.06524658]
[23.54371071 150.10871887]
[11.70294571 154.39099121]
[-0.84497678 154.44030762]
[-12.63735008 150.28005981]
[-22.38376045 161.68214417]
[-32.13016891 173.08422852]
[-41.87657928 184.48631287]
[-44.96196747 200.00375366]
[-59.11307144 204.65084839]
[-68.85948181 216.05293274]
[-78.60588837 227.45501709]
[-81.69127655 242.97245789]
[-95.84238434 247.61955261]
[-105.58879089 259.02163696]
[-108.05031586 275.23498535]
[-123.41876221 280.95715332]
[-135.88438416 270.30160522]
[-132.62362671 254.22991943]
[-116.99087524 249.27522278]
[-107.24446106 237.87315369]
[-104.85620880 223.17126465]
[-90.00797272 217.70860291]
[-80.26156616 206.30651855]
[-70.51515198 194.90443420]
[-68.12689209 180.20254517]
[-53.27866364 174.73989868]
[-43.53225327 163.33781433]
[-33.78584290 151.93572998]
[-24.03943253 140.53364563]
[-31.75927925 132.90031433]
[-37.30368423 122.66755676]
[-52.26261520 121.55831909]
[-67.22154236 120.44908142]
[-82.18047333 119.33985138]
[-97.13940430 118.23061371]
[-112.09833527 117.12137604]
[-127.05726624 116.01214600]
[-142.01620483 114.90290833]
[-156.97512817 113.79367065]
[-171.93405151 112.68444061]
[-186.89299011 111.57520294]
[-201.85191345 110.46596527]
[-214.89375305 119.80888367]
[-230.28990173 115.29912567]
[-236.22976685 100.39618683]
[-228.15678406 86.53233337]
[-212.26387024 84.34272003]
[-200.74269104 95.50703430]
[-185.78375244 96.61627197]
[-170.82482910 97.72550964]
[-155.86589050 98.83473969]
[-140.90696716 99.94397736]
[-125.94802856 101.05321503]
[-110.98910522 102.16244507]
[-96.03017426 103.27168274]
[-81.07124329 104.38092041]
[-66.11231232 105.49015045]
[-51.15338135 106.59938812]
[-36.19445038 107.70862579]
[-29.97342682 94.05948639]
[-40.62355423 83.49658966]
[-51.27368164 72.93369293]
[-61.92380905 62.37079620]
[-77.72494507 62.68640900]
[-89.06316376 51.67639542]
[-89.21169281 35.87280273]
[-78.08242035 24.65162468]
[-62.27814484 24.67018509]
[-51.17525864 35.91747284]
[-51.36090851 51.72066879]
[-40.71078491 62.28356934]
[-30.06065750 72.84646606]
[-19.41053009 83.40936279]
[4.35884476 77.46224213]
[26.40017128 85.61240387]
[39.41771317 103.96179962]
[54.15016937 101.14138794]
[68.88262939 98.32097626]
[71.93736267 82.14195251]
[83.31838226 68.81861115]
[100.80841064 62.54525375]
[120.15093994 65.95253754]
[136.08273315 79.16908264]
[144.45471191 66.72280121]
[152.82669067 54.27651596]
[161.19866943 41.83023071]
[169.57064819 29.38394547]
[177.94262695 16.93766212]
[186.31460571 4.49137783]
[194.68658447 -7.95490599]
[203.05856323 -20.40118980]
[211.43054199 -32.84747314]
[219.80252075 -45.29375839]
[228.17449951 -57.74004364]
[236.54646301 -70.18632507]
[244.91844177 -82.63260651]
[240.56523132 -101.05709839]
[250.87008667 -116.55699921]
[268.91458130 -119.56724548]
[276.87268066 -132.28215027]
[284.83074951 -144.99707031]
[285.59368896 -160.79986572]
[298.90460205 -167.48332214]
[292.97766113 -181.82385254]
[296.64450073 -196.90144348]
[308.49520874 -206.91845703]
[323.97293091 -208.02314758]
[337.12612915 -199.79072571]
[342.89718628 -185.38674927]
[339.06695557 -170.34982300]
[327.10827637 -160.46195984]
[311.61950684 -159.52523804]
[311.42581177 -144.63189697]
[297.54565430 -137.03897095]
[289.58758545 -124.32406616]
[281.62948608 -111.60916138]
[286.54299927 -101.29037476]
[285.85028076 -89.76228333]
[279.60815430 -79.90337372]
[269.27349854 -74.23134613]
[257.36474609 -74.26063538]
[248.99275208 -61.81435013]
[240.62077332 -49.36806488]
[232.24879456 -36.92177963]
[223.87681580 -24.47549629]
[215.50483704 -12.02921200]
[207.13285828 0.41707188]
[198.76089478 12.86335564]
[190.38891602 25.30964088]
[182.01693726 37.75592422]
[173.64495850 50.20220947]
[165.27297974 62.64849091]
[156.90100098 75.09477234]
[148.52902222 87.54106140]
[153.37493896 101.73673248]
[167.60998535 106.46574402]
[181.84503174 111.19475555]
[196.08006287 115.92376709]
[210.31510925 120.65277863]
[224.55015564 125.38179016]
[238.78520203 130.11080933]
[253.02023315 134.83981323]
[262.16833496 134.57679749]
[267.44940186 139.76544189]
[281.60473633 144.72795105]
[295.73751831 137.65406799]
[310.70629883 142.72468567]
[317.63037109 156.93147278]
[312.40179443 171.84580994]
[298.12258911 178.61927795]
[283.26434326 173.23330688]
[276.64224243 158.88328552]
[262.48690796 153.92077637]
[248.29122925 149.07485962]
[234.05618286 144.34584045]
[219.82113647 139.61683655]
[205.58610535 134.88781738]
[191.35105896 130.15881348]
[177.11601257 125.42979431]
[162.88096619 120.70078278]
[148.64593506 115.97177124]
[138.62120056 127.12994385]
[144.84222412 140.77908325]
[151.06324768 154.42820740]
[157.28427124 168.07734680]
[163.50529480 181.72648621]
[169.72630310 195.37562561]
[175.94732666 209.02474976]
[182.28039551 222.62226868]
[188.72506714 236.16723633]
[202.53067017 245.01808167]
[201.49821472 261.38470459]
[186.68981934 268.43051147]
[173.33908081 258.90737915]
[175.18009949 242.61190796]
[168.73542786 229.06694031]
[163.01286316 224.36968994]
[162.29820251 215.24577332]
[156.07717896 201.59663391]
[149.85615540 187.94750977]
[143.63513184 174.29837036]
[137.41410828 160.64923096]
[131.19308472 147.00010681]
[124.97206116 133.35096741]
[101.86720276 138.11785889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 83]
[2 82]
[3 81]
[9 34]
[10 33]
[11 32]
[12 31]
[14 29]
[15 28]
[16 27]
[18 25]
[19 24]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[47 53]
[65 78]
[66 77]
[67 76]
[68 75]
[88 139]
[89 138]
[90 137]
[91 136]
[92 135]
[93 134]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
[99 128]
[100 127]
[101 126]
[104 121]
[105 120]
[106 119]
[108 117]
[140 166]
[141 165]
[142 164]
[143 163]
[144 162]
[145 161]
[146 160]
[147 159]
[149 158]
[150 157]
[167 189]
[168 188]
[169 187]
[170 186]
[171 185]
[172 184]
[173 183]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
