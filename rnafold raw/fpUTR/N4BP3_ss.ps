%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGAUCGAGCGCCGCGGAGCGCGUCCCUCCCUCGCCAAUCCGGCUCCGGCGCCGGCGCCCGCCCGCGUUUUCCCGGCGCCUGCCGCUCCGCCGCUCCGACCCGGCACGCAGUCCCGGCCCGAGCCGACGCCUUGCAGGAGGGUUCAAAUCCGCGCGGGGGAGCUGCGACGCGCAAGGGCUGCGGAGCCGCGGGCCGGCGAGCGCGUCGCCACCAUGAAGCAGCUGCCUGUACCCUGUUGAAACUUC\
) } def
/len { sequence length } bind def

/coor [
[177.06269836 297.79724121]
[170.45678711 284.33016968]
[163.85087585 270.86309814]
[157.24496460 257.39602661]
[150.63905334 243.92897034]
[144.03314209 230.46189880]
[137.34205627 217.03694153]
[130.56608582 203.65463257]
[116.37628174 199.27455139]
[109.31384277 185.79951477]
[114.00428009 170.94564819]
[107.22830200 157.56333923]
[100.45233154 144.18103027]
[93.67635345 130.79872131]
[80.12668610 124.36392975]
[65.47316742 127.56929016]
[50.81964493 130.77464294]
[36.16612244 133.97999573]
[21.51259995 137.18536377]
[6.85907936 140.39071655]
[-7.79444218 143.59606934]
[-22.44796371 146.80142212]
[-30.14032936 151.68122864]
[-37.30737305 149.95333862]
[-52.00032043 152.97280884]
[-37.70744705 157.52404785]
[-27.84674263 168.82743835]
[-25.27719307 183.60571289]
[-30.74380493 197.57411194]
[-42.66160202 206.68267822]
[-57.57518387 208.29051208]
[-71.16055298 201.93144226]
[-79.47880554 189.44918823]
[-80.11817932 174.46281433]
[-72.89501190 161.31918335]
[-85.62467957 169.25364685]
[-98.35433960 177.18809509]
[-103.36689758 192.42797852]
[-118.45673370 197.87559509]
[-132.04820251 189.35202026]
[-133.71510315 173.39579773]
[-122.17873383 162.24717712]
[-106.28880310 164.45843506]
[-93.55913544 156.52397156]
[-80.82947540 148.58952332]
[-82.61724091 141.30570984]
[-97.02095032 137.11843872]
[-86.19278717 126.73809052]
[-87.98056030 119.45427704]
[-102.93724823 118.31528473]
[-117.89394379 117.17628479]
[-132.85063171 116.03729248]
[-147.80732727 114.89829254]
[-162.76402283 113.75929260]
[-177.72071838 112.62030029]
[-192.67741394 111.48130035]
[-207.66267395 110.81646729]
[-222.66146851 110.62645721]
[-237.66026306 110.43644714]
[-248.79986572 121.64737701]
[-264.60412598 121.61426544]
[-275.69665527 110.35675812]
[-275.49642944 94.55374146]
[-264.12228394 83.58085632]
[-248.32226562 83.94812012]
[-237.47026062 95.43764496]
[-222.47145081 95.62765503]
[-207.47265625 95.81767273]
[-216.03079224 83.49864197]
[-211.86029053 69.09006500]
[-198.04519653 63.24685287]
[-184.80154419 70.28996277]
[-181.92277527 85.01112366]
[-191.53842163 96.52461243]
[-176.58172607 97.66360474]
[-161.62503052 98.80260468]
[-146.66833496 99.94159698]
[-131.71163940 101.08059692]
[-116.75494385 102.21958923]
[-101.79825592 103.35858917]
[-86.84156036 104.49758911]
[-60.22847366 117.35928345]
[-55.01979828 138.27986145]
[-40.32685089 135.26039124]
[-25.65332031 132.14790344]
[-10.99979877 128.94255066]
[3.65372252 125.73719788]
[18.30724335 122.53183746]
[32.96076584 119.32648468]
[47.61428833 116.12112427]
[62.26780701 112.91577148]
[76.92132568 109.71041107]
[82.46071625 86.96081543]
[101.97615814 81.43292236]
[109.42124176 68.41098785]
[110.95720673 59.43180084]
[117.04400635 55.27210999]
[124.65344238 42.34553146]
[132.26287842 29.41895103]
[132.30725098 24.24746704]
[134.13479614 20.02277565]
[137.09205627 17.26273537]
[140.41499329 16.15364838]
[148.51007080 3.52551532]
[156.60514832 -9.10261822]
[164.70022583 -21.73075294]
[165.13877869 -40.15088272]
[181.05122375 -47.57535172]
[188.98568726 -60.30501556]
[196.92013550 -73.03468323]
[204.85459900 -85.76434326]
[212.78906250 -98.49401093]
[220.72352600 -111.22367096]
[228.65798950 -123.95333862]
[236.59243774 -136.68299866]
[233.23587036 -151.89389038]
[241.46386719 -164.69055176]
[255.98582458 -167.79679871]
[263.92028809 -180.52645874]
[264.65386963 -196.33064270]
[277.95233154 -203.03881836]
[285.88681030 -215.76847839]
[286.09201050 -234.19268799]
[301.90911865 -241.81813049]
[309.68167114 -254.64729309]
[310.21499634 -270.45950317]
[323.42742920 -277.33560181]
[317.58166504 -291.58807373]
[321.20675659 -306.37698364]
[332.70892334 -316.08081055]
[347.54199219 -317.13827515]
[355.31457520 -329.96743774]
[363.08712769 -342.79656982]
[370.85971069 -355.62573242]
[378.63229370 -368.45489502]
[386.40484619 -381.28402710]
[386.37664795 -399.70938110]
[402.09588623 -407.53454590]
[409.70532227 -420.46115112]
[417.31475830 -433.38772583]
[410.26995850 -447.11267090]
[411.78649902 -462.46530151]
[421.38046265 -474.54669189]
[435.99044800 -479.50164795]
[450.95446777 -475.74911499]
[461.49755859 -464.48648071]
[464.25546265 -449.30761719]
[458.34811401 -435.05606079]
[445.66058350 -426.27941895]
[430.24136353 -425.77828979]
[422.63189697 -412.85171509]
[415.02246094 -399.92510986]
[417.75064087 -388.15585327]
[411.53720093 -377.33047485]
[399.23400879 -373.51147461]
[391.46142578 -360.68231201]
[383.68887329 -347.85314941]
[375.91629028 -335.02401733]
[368.14370728 -322.19485474]
[360.37115479 -309.36572266]
[366.30151367 -295.72866821]
[363.02590942 -281.04077148]
[351.59600830 -270.98040771]
[336.25659180 -269.56301880]
[336.27920532 -254.66842651]
[322.51083374 -246.87471008]
[314.73825073 -234.04556274]
[317.31713867 -222.24267578]
[310.96704102 -211.49688721]
[298.61645508 -207.83403015]
[290.68200684 -195.10435486]
[290.51596069 -180.21067810]
[276.64993286 -172.59199524]
[268.71548462 -159.86233521]
[272.32205200 -145.45649719]
[264.45672607 -132.43377686]
[249.32211304 -128.74853516]
[241.38764954 -116.01887512]
[233.45318604 -103.28921509]
[225.51872253 -90.55954742]
[217.58425903 -77.82988739]
[209.64981079 -65.10021973]
[201.71534729 -52.37055588]
[193.78088379 -39.64089203]
[196.21003723 -27.80628586]
[189.72434998 -17.14179611]
[177.32835388 -13.63567734]
[169.23327637 -1.00754344]
[161.13819885 11.62059021]
[153.04313660 24.24872398]
[145.18945312 37.02838898]
[137.58001709 49.95496750]
[129.97058105 62.88154984]
[122.44317627 75.85606384]
[114.99809265 88.87799835]
[120.72171783 106.94673157]
[107.05866241 124.02275085]
[113.83463287 137.40505981]
[120.61061096 150.78736877]
[127.38658142 164.16967773]
[142.13539124 169.18072510]
[148.81655884 182.84880066]
[143.94839478 196.87866211]
[150.72436523 210.26095581]
[157.37649536 216.48463440]
[157.50021362 223.85598755]
[164.10612488 237.32304382]
[170.71203613 250.79011536]
[177.31794739 264.25720215]
[183.92385864 277.72424316]
[190.52976990 291.19131470]
[198.73884583 292.37426758]
[205.73983765 296.64376831]
[210.44107056 303.24771118]
[212.14378357 311.07739258]
[210.64512634 318.85324097]
[206.25946045 325.33395386]
[212.17478943 339.11831665]
[218.09013367 352.90267944]
[224.00546265 366.68707275]
[230.18164062 380.35653687]
[236.61643982 393.90621948]
[243.05122375 407.45587158]
[249.48602295 421.00555420]
[264.74911499 421.03689575]
[278.48333740 427.69525146]
[287.96173096 439.65863037]
[291.30239868 454.55166626]
[287.84204102 469.41735840]
[278.26766968 481.30410767]
[264.48031616 487.85174561]
[249.21748352 487.76031494]
[235.50959778 481.04791260]
[226.07835388 469.04730225]
[222.79637146 454.14120483]
[226.31526184 439.28927612]
[235.93635559 427.44033813]
[229.50155640 413.89065552]
[223.06677246 400.34100342]
[216.63197327 386.79132080]
[213.47578430 385.27133179]
[210.89091492 382.15979004]
[209.61177063 377.73803711]
[210.22109985 372.60238647]
[204.30575562 358.81802368]
[198.39042664 345.03366089]
[192.47508240 331.24929810]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 211]
[2 210]
[3 209]
[4 208]
[5 207]
[6 206]
[7 204]
[8 203]
[11 200]
[12 199]
[13 198]
[14 197]
[15 92]
[16 91]
[17 90]
[18 89]
[19 88]
[20 87]
[21 86]
[22 85]
[24 84]
[25 83]
[35 45]
[36 44]
[37 43]
[49 81]
[50 80]
[51 79]
[52 78]
[53 77]
[54 76]
[55 75]
[56 74]
[57 68]
[58 67]
[59 66]
[94 195]
[95 194]
[97 193]
[98 192]
[99 191]
[103 190]
[104 189]
[105 188]
[106 187]
[108 184]
[109 183]
[110 182]
[111 181]
[112 180]
[113 179]
[114 178]
[115 177]
[118 174]
[119 173]
[121 171]
[122 170]
[124 167]
[125 166]
[127 164]
[131 160]
[132 159]
[133 158]
[134 157]
[135 156]
[136 155]
[138 152]
[139 151]
[140 150]
[217 247]
[218 246]
[219 245]
[220 244]
[221 240]
[222 239]
[223 238]
[224 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
