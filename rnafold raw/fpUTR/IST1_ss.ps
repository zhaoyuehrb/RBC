%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGUAAUUUCCUCUUUAGUAGAGACGGGGUUCCUCUGUGUUGGCCAGGCUGGUCUCGAAUUACCGACUUCAGCGAUGCGGUUUCACUAUGGUGUCCAGGCUGGUCUGCAACUCCCGGGCUCAAGCGAUCCUCCCGCCCCGCCUCUCAAAGUGCUGGGAAGGUCCCUUCCAGGCUUAAGCAGCGAUA\
) } def
/len { sequence length } bind def

/coor [
[179.04808044 420.24023438]
[190.88865662 410.21124268]
[189.64343262 395.26303101]
[188.39819336 380.31481934]
[182.44479370 394.08276367]
[170.60272217 403.28958130]
[155.79200745 405.66503906]
[141.66467285 400.62338257]
[131.70420837 389.40780640]
[128.36669922 374.78381348]
[132.47506714 360.35739136]
[143.01631165 349.68582153]
[157.39114380 345.40048218]
[172.05503845 348.55804443]
[183.39147949 358.37893677]
[178.02760315 344.37075806]
[172.66371155 330.36257935]
[167.29983521 316.35443115]
[161.96174622 311.22238159]
[161.96534729 302.06857300]
[156.71328735 296.84854126]
[156.86904907 287.69604492]
[151.97373962 273.51733398]
[147.07843018 259.33862305]
[142.18312073 245.15989685]
[130.71586609 235.65457153]
[133.52578735 220.08489990]
[128.63047791 205.90617371]
[123.73516846 191.72746277]
[118.83985901 177.54875183]
[113.94454956 163.37004089]
[109.04924774 149.19131470]
[93.23137665 149.55664062]
[78.09083557 144.96290588]
[65.14270782 135.86981201]
[55.68268585 123.18729401]
[50.65742493 108.18445587]
[50.56979370 92.36261749]
[55.42855835 77.30503082]
[64.74751282 64.51849365]
[55.89044189 52.41262054]
[47.03336716 40.30674362]
[32.64030457 33.73785019]
[31.36966705 18.89754295]
[22.51259422 6.79166651]
[13.65552235 -5.31421089]
[4.79844904 -17.42008781]
[-4.05862379 -29.52596474]
[-12.91569710 -41.63184357]
[-27.30875969 -48.20073318]
[-28.57939720 -63.04104233]
[-37.43647003 -75.14691925]
[-46.29354477 -87.25279236]
[-55.15061569 -99.35867310]
[-69.54367828 -105.92755890]
[-70.81431580 -120.76786804]
[-79.77169800 -132.79971313]
[-88.82875824 -144.75669861]
[-97.88582611 -156.71369934]
[-116.09226990 -153.78805542]
[-133.19110107 -160.46182251]
[-144.49684143 -174.81381226]
[-146.95832825 -192.83169556]
[-139.98182678 -209.53352356]
[-149.62364197 -221.02418518]
[-159.26545715 -232.51484680]
[-168.90727234 -244.00552368]
[-176.83650208 -248.57929993]
[-178.61192322 -255.76824951]
[-193.31452942 -261.61154175]
[-195.32331848 -276.37005615]
[-204.77281189 -288.01940918]
[-219.44665527 -296.51144409]
[-215.34860229 -312.96264648]
[-198.40585327 -313.57891846]
[-193.12347412 -297.46890259]
[-183.67398071 -285.81954956]
[-169.64726257 -280.80950928]
[-166.96258545 -265.21774292]
[-157.41661072 -253.64733887]
[-147.77479553 -242.15666199]
[-138.13298035 -230.66600037]
[-128.49116516 -219.17533875]
[-117.26231384 -222.82635498]
[-105.42559052 -222.46807861]
[-94.37361908 -218.11923218]
[-85.41464233 -210.26942444]
[-79.61759949 -199.82415771]
[-77.68466949 -188.00035095]
[-79.86625671 -176.18464661]
[-85.92884064 -165.77076721]
[-76.87177277 -153.81376648]
[-67.81470490 -141.85678101]
[-61.25734711 -138.41671753]
[-58.70843887 -129.62493896]
[-44.94889450 -123.92194366]
[-43.04473877 -108.21574402]
[-34.18766403 -96.10987091]
[-25.33059311 -84.00399017]
[-16.47352028 -71.89811707]
[-2.71397471 -66.19511414]
[-0.80981958 -50.48891449]
[8.04725361 -38.38303757]
[16.90432549 -26.27716064]
[25.76139832 -14.17128372]
[34.61847305 -2.06540656]
[43.47554398 10.04047108]
[57.23508835 15.74346733]
[59.13924408 31.44966888]
[67.99631500 43.55554581]
[76.85339355 55.66142273]
[85.85724640 52.02441025]
[95.39419556 50.19577026]
[105.10475159 50.24443436]
[114.62288666 52.16856766]
[123.58983612 55.89564133]
[131.66760254 61.28517151]
[138.55169678 68.13400269]
[151.41561890 60.41912079]
[164.27954102 52.70423889]
[172.13500977 38.97098923]
[187.02935791 39.06049728]
[199.89328003 31.34561729]
[207.37829590 16.75430107]
[223.76844788 16.21121979]
[232.20295715 30.27504730]
[224.00511169 44.47812271]
[207.60815430 44.20954132]
[194.74423218 51.92442322]
[187.80888367 65.10585785]
[171.99443054 65.56816864]
[159.13050842 73.28305054]
[146.26657104 80.99793243]
[150.00642395 98.98378754]
[147.00036621 117.10673523]
[137.65393066 132.92196655]
[123.22795868 144.29600525]
[128.12327576 158.47473145]
[133.01856995 172.65344238]
[137.91387939 186.83215332]
[142.80918884 201.01087952]
[147.70449829 215.18959045]
[159.52191162 225.70907593]
[156.36183167 240.26458740]
[161.25714111 254.44331360]
[166.15245056 268.62200928]
[171.04776001 282.80075073]
[176.06072998 296.93826294]
[181.30801392 310.99053955]
[186.67189026 324.99871826]
[192.03576660 339.00686646]
[197.39964294 353.01504517]
[215.84530640 344.90090942]
[240.66911316 355.14245605]
[251.57971191 365.43609619]
[262.49032593 375.72970581]
[277.83786011 379.57205200]
[281.78567505 393.93395996]
[292.69628906 404.22756958]
[303.60690308 414.52120972]
[314.51748657 424.81481934]
[325.42810059 435.10845947]
[341.50131226 438.36178589]
[346.46319580 453.99224854]
[335.20941162 465.92056274]
[319.31689453 461.87588501]
[315.13449097 446.01904297]
[304.22387695 435.72543335]
[293.31326294 425.43179321]
[282.40267944 415.13818359]
[271.49206543 404.84454346]
[256.92492676 401.73846436]
[252.19670105 386.64031982]
[241.28608704 376.34667969]
[230.37548828 366.05307007]
[223.61822510 369.30718994]
[230.12625122 382.82183838]
[216.61149597 389.32965088]
[210.10368347 375.81546021]
[203.34642029 379.06958008]
[204.59164429 394.01779175]
[205.83688354 408.96603394]
[219.17361450 416.89767456]
[225.27021790 431.16690063]
[221.78242493 446.28692627]
[210.05134583 456.44375610]
[194.58782959 457.73190308]
[181.33790588 449.65606689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 182]
[3 181]
[4 180]
[15 152]
[16 151]
[17 150]
[18 149]
[20 148]
[22 147]
[23 146]
[24 145]
[25 144]
[27 142]
[28 141]
[29 140]
[30 139]
[31 138]
[32 137]
[40 111]
[41 110]
[42 109]
[44 107]
[45 106]
[46 105]
[47 104]
[48 103]
[49 102]
[51 100]
[52 99]
[53 98]
[54 97]
[56 95]
[57 93]
[58 92]
[59 91]
[64 83]
[65 82]
[66 81]
[67 80]
[69 79]
[71 77]
[72 76]
[118 133]
[119 132]
[120 131]
[122 129]
[123 128]
[154 175]
[155 174]
[156 173]
[158 171]
[159 170]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
