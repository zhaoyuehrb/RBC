%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCUCAGUCCUCCAUCCCCCUACCAGAUAAAAGGGGGGAAGCUGAGCCUGACUUGAUCAUCCUGCCCCGGUUCUUUCCUCCAGGGCCGCAUUUCUCUGCCUCUCUCUCCUGCC\
) } def
/len { sequence length } bind def

/coor [
[36.80274963 115.08467102]
[35.28229141 105.74959564]
[20.28779221 105.34339905]
[8.86373138 115.93247986]
[-6.33703661 115.30694580]
[-16.36170387 104.35059357]
[-31.35620308 103.94440460]
[-46.35070038 103.53820801]
[-61.34519958 103.13201904]
[-71.30699158 111.46123505]
[-83.86859894 110.73661804]
[-92.25156403 101.90059662]
[-107.22956848 101.08850861]
[-122.20756531 100.27642822]
[-135.68028259 113.44553375]
[-154.19082642 112.73673248]
[-166.20040894 99.05039215]
[-181.20040894 99.05039215]
[-196.20040894 99.05039215]
[-211.20040894 99.05039215]
[-226.20040894 99.05039215]
[-241.20040894 99.05039215]
[-256.20040894 99.05039215]
[-263.25668335 112.63227081]
[-275.82318115 121.36968994]
[-291.01214600 123.25485229]
[-305.33328247 117.85456085]
[-315.49572754 106.40976715]
[-319.16421509 91.55039215]
[-315.49572754 76.69102478]
[-305.33328247 65.24623108]
[-291.01214600 59.84593964]
[-275.82318115 61.73110199]
[-263.25668335 70.46852112]
[-256.20040894 84.05039215]
[-241.20040894 84.05039215]
[-226.20040894 84.05039215]
[-211.20040894 84.05039215]
[-196.20040894 84.05039215]
[-181.20040894 84.05039215]
[-166.20040894 84.05039215]
[-159.97196960 74.30696106]
[-149.67851257 68.77709961]
[-137.87449646 68.96664429]
[-127.55495453 74.94513702]
[-121.39548492 85.29842377]
[-106.41748047 86.11051178]
[-91.43948364 86.92259216]
[-76.32018280 78.12635040]
[-60.93901062 88.13751984]
[-45.94451141 88.54370880]
[-30.95001221 88.94990540]
[-15.95551205 89.35609436]
[-5.35238266 78.95853424]
[9.85995770 79.15686798]
[20.69398308 90.34889984]
[35.68848038 90.75509644]
[40.23085022 74.52278900]
[48.79593658 60.00520706]
[60.80727386 48.17944336]
[75.45645142 39.84142685]
[91.75751495 35.55233765]
[108.61332703 35.60085297]
[124.88942719 39.98370361]
[139.49037170 48.40590668]
[151.43344116 60.30061340]
[164.28628540 52.56730270]
[177.13914490 44.83399582]
[189.99200439 37.10068893]
[197.82778931 23.35619545]
[212.72224426 23.42436218]
[225.57510376 15.69105434]
[225.92803955 0.26772812]
[234.58235168 -12.50358200]
[248.77648926 -18.54759789]
[263.98114014 -15.93569469]
[275.34457397 -5.50132370]
[279.24072266 9.42594719]
[274.42639160 24.08288002]
[262.43777466 33.79249954]
[247.10041809 35.45650101]
[233.30841064 28.54391098]
[220.45555115 36.27721786]
[213.53909302 49.46857452]
[197.72531128 49.95354462]
[184.87245178 57.68685532]
[172.01960754 65.42015839]
[159.16674805 73.15347290]
[164.91900635 97.36127472]
[161.15039062 121.95606995]
[174.58847046 128.62074280]
[188.02656555 135.28541565]
[202.92163086 130.00221252]
[217.15370178 136.87416077]
[222.27914429 151.82424927]
[215.25711060 165.98287964]
[200.25366211 170.94996643]
[186.17007446 163.77864075]
[181.36189270 148.72351074]
[167.92379761 142.05883789]
[154.48571777 135.39414978]
[148.76974487 142.92961121]
[142.02030945 149.55535889]
[134.38043213 155.13099670]
[126.01200104 159.53836060]
[117.09235382 162.68405151]
[107.81051636 164.50143433]
[98.36316681 164.95198059]
[88.95050049 164.02615356]
[79.77198029 161.74356079]
[71.02210999 158.15257263]
[62.88629913 153.32928467]
[55.53695679 147.37591553]
[49.12981796 140.41860962]
[43.80065918 132.60481262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 57]
[3 56]
[6 53]
[7 52]
[8 51]
[9 50]
[12 48]
[13 47]
[14 46]
[17 41]
[18 40]
[19 39]
[20 38]
[21 37]
[22 36]
[23 35]
[66 88]
[67 87]
[68 86]
[69 85]
[71 83]
[72 82]
[90 101]
[91 100]
[92 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
