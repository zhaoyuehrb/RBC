%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCUUGACUUGCUUGCGGAGGGAGCGGCCGGCGGAGGGAGCGGCAGGUGGAGGGAGUGGCACGAGGCAUGCGGAGGGAGCUGCACCGACAUCACAUAAACGCACUGGGCAGCUCGCAGGCGCCAUUCGCUCUUCAGACGCCGGAGACGUAGGAGUGGGUCUUCAGACUCCAAAGGGGUUGGACUA\
) } def
/len { sequence length } bind def

/coor [
[71.05208588 114.99567413]
[61.51794052 126.57582855]
[51.98378754 138.15599060]
[42.44963837 149.73614502]
[32.91548920 161.31629944]
[23.38134003 172.89645386]
[24.71572304 188.41603088]
[14.88177490 200.02412415]
[0.07800955 201.20062256]
[-9.45614052 212.78077698]
[-12.25439167 228.35255432]
[-26.31724930 233.26023865]
[-35.85139847 244.84039307]
[-45.38554764 256.42053223]
[-48.43337631 265.05416870]
[-55.17843246 268.11340332]
[-64.90577698 279.53173828]
[-62.12715912 294.92050171]
[-69.93514252 308.46926880]
[-84.64302826 313.78076172]
[-99.30621338 308.34707642]
[-107.00117493 294.73376465]
[-104.09459686 279.36868286]
[-91.95887756 269.50674438]
[-76.32412720 269.80441284]
[-66.59678650 258.38604736]
[-56.96570206 246.88639832]
[-47.43155289 235.30624390]
[-37.89740372 223.72608948]
[-35.78109741 208.98258972]
[-21.03629494 203.24662781]
[-11.50214577 191.66647339]
[-13.18986797 176.91224670]
[-3.68584776 165.03250122]
[11.80118465 163.36230469]
[21.33533478 151.78215027]
[30.86948395 140.20199585]
[40.40363312 128.62184143]
[49.93778229 117.04167938]
[59.47193527 105.46152496]
[63.93910599 91.14215088]
[62.68059158 76.19504547]
[61.42207336 61.24793243]
[49.12239456 55.00018692]
[41.58033371 43.57840347]
[40.67946243 30.02942467]
[46.54858017 17.90465736]
[57.55597687 10.32920551]
[48.90946579 -2.92026472]
[55.77467728 -16.13836479]
[54.76743698 -31.10450935]
[53.76019669 -46.07065201]
[52.75296021 -61.03679657]
[44.10645294 -74.28627014]
[50.97166061 -87.50436401]
[49.96442032 -102.47051239]
[48.95718384 -117.43665314]
[47.94994354 -132.40280151]
[46.94270325 -147.36894226]
[45.93546677 -162.33508301]
[44.92822647 -177.30123901]
[33.16771698 -167.99046326]
[18.51768684 -171.21174622]
[11.74765110 -184.59706116]
[17.83438492 -198.30661011]
[32.30341721 -202.26225281]
[44.51852798 -193.55569458]
[44.77051544 -208.55357361]
[37.26613617 -222.48178101]
[45.21615601 -235.07728577]
[45.46814346 -250.07516479]
[45.72013092 -265.07305908]
[33.21990204 -256.78182983]
[18.89179802 -261.22091675]
[13.26867390 -275.12704468]
[20.48419189 -288.27755737]
[35.23409271 -291.00527954]
[46.67564392 -281.30456543]
[48.18507767 -296.22842407]
[49.69451523 -311.15228271]
[51.20395279 -326.07614136]
[52.71339035 -341.00000000]
[54.22282791 -355.92385864]
[55.73226547 -370.84774780]
[53.47917175 -379.72198486]
[57.39447021 -386.00888062]
[59.15440369 -400.90527344]
[60.91433716 -415.80166626]
[47.25941467 -422.34552002]
[36.47088623 -432.97030640]
[29.71900940 -446.52359009]
[27.73617744 -461.53515625]
[30.73747063 -476.37667847]
[38.39733505 -489.43826294]
[49.88488388 -499.30310059]
[63.95403671 -504.90109253]
[79.07867432 -505.62506104]
[93.61818695 -501.39645386]
[105.99543762 -492.67391968]
[114.86784363 -480.40365601]
[119.27297974 -465.91665649]
[118.73301697 -450.78433228]
[113.30652618 -436.64813232]
[103.58213043 -425.04147339]
[90.61466217 -417.22332764]
[75.81073761 -414.04174805]
[74.05080414 -399.14535522]
[72.29087067 -384.24896240]
[70.65612793 -369.33828735]
[69.14669037 -354.41442871]
[67.63725281 -339.49057007]
[66.12781525 -324.56671143]
[64.61837769 -309.64285278]
[63.10894012 -294.71899414]
[61.59950256 -279.79513550]
[60.71801376 -264.82104492]
[60.46602631 -249.82318115]
[60.21403885 -234.82528687]
[67.73643494 -221.96983337]
[59.76839828 -208.30158997]
[59.51641083 -193.30371094]
[59.89437103 -178.30847168]
[60.90160751 -163.34233093]
[61.90884781 -148.37619019]
[62.91608810 -133.41003418]
[63.92332458 -118.44389343]
[64.93056488 -103.47775269]
[65.93780518 -88.51160431]
[74.51226807 -76.33261108]
[67.71910095 -62.04403687]
[68.72634125 -47.07789230]
[69.73358154 -32.11174774]
[70.74082184 -17.14560318]
[79.31528473 -4.96661234]
[72.52211761 9.32196617]
[86.68738556 17.59899330]
[93.20005035 32.83794403]
[89.31515503 49.11922073]
[76.36918640 59.98941803]
[77.62770081 74.93653107]
[78.88621521 89.88363647]
[98.79214478 64.39174652]
[141.64801025 76.44985962]
[155.18588257 82.90942383]
[168.72377014 89.36898041]
[182.26164246 95.82854462]
[195.79951477 102.28810883]
[209.33738708 108.74766541]
[225.12435913 107.70743561]
[233.27906799 120.17137909]
[246.81694031 126.63094330]
[263.11444092 124.80784607]
[272.62286377 138.16903687]
[265.56079102 152.96968079]
[249.19305420 153.98413086]
[240.35739136 140.16882324]
[226.81950378 133.70925903]
[212.00085449 135.21151733]
[202.87782288 122.28554535]
[189.33995056 115.82598114]
[175.80207825 109.36641693]
[162.26420593 102.90686035]
[148.72633362 96.44729614]
[135.18844604 89.98773193]
[129.95239258 95.35742950]
[114.24420929 111.46652985]
[121.04283905 124.83734894]
[127.84146881 138.20816040]
[134.64009094 151.57897949]
[141.43872070 164.94978333]
[148.23735046 178.32060242]
[160.80593872 189.69894409]
[153.35159302 204.92619324]
[136.65586853 201.97848511]
[134.86654663 185.11923218]
[128.06791687 171.74841309]
[121.26927948 158.37759399]
[114.47065735 145.00679016]
[107.67202759 131.63597107]
[100.87339783 118.26515961]
[93.41806793 117.44779205]
[92.97412109 132.44122314]
[95.00819397 147.30265808]
[81.81659698 154.44282532]
[70.48622131 144.61314392]
[75.69223785 130.54650879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 40]
[2 39]
[3 38]
[4 37]
[5 36]
[6 35]
[9 32]
[10 31]
[12 29]
[13 28]
[14 27]
[16 26]
[17 25]
[41 141]
[42 140]
[43 139]
[48 135]
[50 133]
[51 132]
[52 131]
[53 130]
[55 128]
[56 127]
[57 126]
[58 125]
[59 124]
[60 123]
[61 122]
[67 121]
[68 120]
[70 118]
[71 117]
[72 116]
[78 115]
[79 114]
[80 113]
[81 112]
[82 111]
[83 110]
[84 109]
[86 108]
[87 107]
[88 106]
[143 164]
[144 163]
[145 162]
[146 161]
[147 160]
[148 159]
[150 157]
[151 156]
[166 180]
[167 179]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
