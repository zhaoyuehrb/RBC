%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAGGGGAGGAUGGUGAGGACUACAAAGGUCUCCCCACCUCCCGGGGGCCGCGGAGGCGGGGCUGGAUGAAGGUCGACGUGCCUCCUCCGGGCGGGGCGCUGCCAGGCUCUCAGCCUCUCUGUGGAAGGGCAGCCUGCGCCUGGGUACCGAGGCUGCUGCGCGGCGGACAGCGGGCGCG\
) } def
/len { sequence length } bind def

/coor [
[8.57371140 207.46025085]
[4.36779404 212.76744080]
[-1.23745382 216.47421265]
[-7.66794252 218.23944092]
[-14.27687740 217.91888428]
[-20.40980148 215.57646179]
[-31.85384941 225.27355957]
[-43.29789734 234.97065735]
[-54.74194336 244.66777039]
[-66.18598938 254.36486816]
[-77.63003540 264.06198120]
[-82.17034149 272.01989746]
[-89.35788727 273.82595825]
[-100.96851349 283.32299805]
[-112.57913971 292.82000732]
[-117.25688171 300.69793701]
[-124.47469330 302.37899780]
[-130.51257324 317.00274658]
[-145.29644775 318.81552124]
[-157.07015991 328.10958862]
[-168.84385681 337.40368652]
[-180.61756897 346.69775391]
[-192.39128113 355.99182129]
[-195.68702698 371.69271851]
[-210.08154297 378.77630615]
[-224.53257751 371.80871582]
[-227.95452881 356.13488770]
[-217.72238159 343.77838135]
[-201.68534851 344.21810913]
[-189.91165161 334.92404175]
[-178.13793945 325.62997437]
[-166.36422729 316.33590698]
[-154.59053040 307.04180908]
[-149.39477539 293.08282471]
[-133.76876831 290.60528564]
[-122.07615662 281.20938110]
[-110.46553802 271.71237183]
[-98.85491180 262.21533203]
[-87.32714081 252.61791992]
[-75.88309479 242.92082214]
[-64.43904114 233.22372437]
[-52.99499893 223.52661133]
[-41.55095291 213.82951355]
[-30.10690498 204.13241577]
[-24.98629570 181.57368469]
[-1.54656029 177.15623474]
[1.66712058 162.61245728]
[16.79982376 157.99598694]
[20.01350403 143.45219421]
[35.14620590 138.83572388]
[45.52021027 128.00151062]
[55.89421082 117.16730499]
[66.26821136 106.33309174]
[66.78881073 91.34213257]
[57.19139099 79.81436157]
[47.59397125 68.28659058]
[37.99654770 56.75881958]
[28.39912605 45.23104858]
[18.80170250 33.70328140]
[9.20428085 22.17550850]
[-5.57171202 16.52037048]
[-7.76872396 1.78869033]
[-19.62433243 3.03215265]
[-30.49201775 -1.56649423]
[-37.70592880 -10.75316525]
[-39.55772400 -22.16440773]
[-35.70000458 -32.93485641]
[-44.89155197 -44.78877640]
[-54.08310318 -56.64269638]
[-69.46177673 -62.33728409]
[-71.95235443 -78.54620361]
[-58.99274445 -88.59510803]
[-43.91468048 -82.14654541]
[-42.22917938 -65.83424377]
[-33.03763199 -53.98032379]
[-23.84608459 -42.12640381]
[-5.59757233 -40.94574356]
[6.21637869 -26.57252884]
[3.75904632 -7.80873203]
[17.84856796 -2.97813654]
[20.73205185 12.57808685]
[30.32947350 24.10585785]
[39.92689514 35.63362885]
[49.52431870 47.16139984]
[59.12173843 58.68916702]
[68.71916199 70.21694183]
[78.31658173 81.74471283]
[100.84314728 71.23564911]
[123.40778351 82.52943420]
[135.34101868 73.44110870]
[147.27426147 64.35277557]
[159.20750427 55.26444626]
[171.14074707 46.17611694]
[183.07398987 37.08778763]
[195.00723267 27.99945641]
[201.29800415 13.48268318]
[216.11112976 11.92677784]
[228.04437256 2.83844781]
[232.99270630 -4.87237263]
[240.26451111 -6.30191898]
[252.35369873 -15.18176746]
[264.44287109 -24.06161499]
[276.53204346 -32.94146347]
[288.62124634 -41.82131195]
[300.71041870 -50.70116043]
[311.89813232 -60.69289017]
[322.08255005 -71.70552063]
[332.26693726 -82.71814728]
[342.45135498 -93.73077393]
[352.63574219 -104.74340057]
[358.95080566 -120.47732544]
[375.81802368 -118.76464081]
[378.84158325 -102.08248138]
[363.64837646 -94.55900574]
[353.46398926 -83.54637146]
[343.27957153 -72.53374481]
[333.09518433 -61.52111816]
[322.91076660 -50.50849152]
[337.59274292 -53.58084869]
[352.04980469 -49.58164978]
[363.06555176 -39.40063095]
[368.18927002 -25.30283737]
[366.28097534 -10.42471600]
[357.76528931 1.92368436]
[344.53674316 8.99512100]
[329.53836060 9.21635723]
[316.10699463 2.53817248]
[307.23080444 -9.55368614]
[304.88452148 -24.36905098]
[309.59027100 -38.61197662]
[297.50109863 -29.73213005]
[285.41189575 -20.85228157]
[273.32272339 -11.97243404]
[261.23355103 -3.09258604]
[249.14436340 5.78726196]
[237.13269043 14.77168941]
[225.19944763 23.86001968]
[219.76222229 37.72673416]
[204.09556580 39.93269730]
[192.16232300 49.02102661]
[180.22908020 58.10935974]
[168.29583740 67.19768524]
[156.36259460 76.28601837]
[144.42935181 85.37435150]
[132.49610901 94.46267700]
[131.58543396 109.43500519]
[142.32920837 119.90264130]
[150.68367004 123.66374969]
[153.16662598 130.64640808]
[163.72709656 141.29893494]
[174.28758240 151.95146179]
[189.86262512 152.18774414]
[200.42070007 163.14135742]
[200.09945679 177.98832703]
[210.65994263 188.64085388]
[226.46318054 188.45878601]
[237.70794678 199.56423950]
[237.72291565 215.36851501]
[226.49920654 226.49523926]
[210.69564819 226.34310913]
[199.68821716 215.00239563]
[200.00741577 199.20132446]
[189.44692993 188.54881287]
[174.59773254 188.74119568]
[163.73616028 178.08845520]
[163.63505554 162.51194763]
[153.07458496 151.85942078]
[142.51409912 141.20689392]
[131.86157227 130.64640808]
[121.11780548 120.17877960]
[98.09755707 128.71376038]
[77.10242462 116.70709991]
[66.72841644 127.54130554]
[56.35441971 138.37551880]
[45.98041534 149.20971680]
[42.02471542 164.52844238]
[27.63403320 168.36997986]
[23.67833328 183.68869019]
[9.28764915 187.53024292]
[11.19484425 194.18922424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[13 38]
[14 37]
[15 36]
[17 35]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[46 179]
[48 177]
[50 175]
[51 174]
[52 173]
[53 172]
[54 87]
[55 86]
[56 85]
[57 84]
[58 83]
[59 82]
[60 81]
[62 79]
[67 76]
[68 75]
[69 74]
[89 145]
[90 144]
[91 143]
[92 142]
[93 141]
[94 140]
[95 139]
[97 137]
[98 136]
[100 135]
[101 134]
[102 133]
[103 132]
[104 131]
[105 130]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[146 170]
[147 169]
[149 168]
[150 167]
[151 166]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
