%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAGGAGUGGGGUUGAAAAGCGCUUGCGCAGGACGGCUACGGUACGGGGGUGGGAGGGCUUCGGAGCACGCGCGCGGAGGCGGGACUUGGGAAGCGCUCGCGAGAUCUUCAGGGUCUAUAUAUAAGCGCGGGGAGCCUGCGUCCUUUCCCUGGUGUGAUUCCGUCCUGCGCGGUUGUUCUCUGGAGCAGCGUUCUUUUAUCUCCGUCCGCCUUCUCUCCUACCUAAGUGCGUGCCGCCACCCG\
) } def
/len { sequence length } bind def

/coor [
[40.03872299 1351.01306152]
[25.09788513 1355.62878418]
[10.70571232 1349.51330566]
[3.65774393 1335.55407715]
[7.28181696 1320.34228516]
[19.86675453 1311.06042480]
[20.63266373 1296.07995605]
[17.84187508 1289.25524902]
[21.50521278 1280.91345215]
[22.46236610 1265.94409180]
[23.41951752 1250.97460938]
[24.37666893 1236.00512695]
[25.23821640 1221.02990723]
[26.00412560 1206.04956055]
[26.77003479 1191.06909180]
[18.71233368 1186.41870117]
[12.85575008 1179.11596680]
[10.03171349 1170.13037109]
[10.66537189 1160.67480469]
[14.71215248 1152.04174805]
[21.65814209 1145.42626953]
[30.58500099 1141.76086426]
[32.11482239 1126.83911133]
[33.64464188 1111.91723633]
[35.17446136 1096.99548340]
[36.70428085 1082.07373047]
[38.23410034 1067.15197754]
[39.76391983 1052.23010254]
[33.36499405 1038.78015137]
[42.46939850 1025.84106445]
[36.07047272 1012.39099121]
[45.17488098 999.45190430]
[46.70470047 984.53009033]
[48.23451996 969.60833740]
[49.76433945 954.68652344]
[43.36541367 941.23651123]
[52.46981812 928.29742432]
[53.99963760 913.37561035]
[41.42289352 902.80920410]
[37.59231949 886.66467285]
[44.21293640 871.26879883]
[58.85379791 862.77679443]
[60.19293594 847.83673096]
[61.53207397 832.89660645]
[59.00473785 825.97003174]
[62.98490143 817.77465820]
[64.51472473 802.85290527]
[66.04454041 787.93109131]
[67.57436371 773.00933838]
[69.10417938 758.08752441]
[70.63400269 743.16577148]
[72.16381836 728.24395752]
[73.69364166 713.32220459]
[75.22345734 698.40039062]
[76.75328064 683.47863770]
[78.28309631 668.55682373]
[79.81291962 653.63507080]
[81.34273529 638.71325684]
[82.87255859 623.79150391]
[83.92527771 608.82849121]
[84.49981689 593.83947754]
[85.07435608 578.85046387]
[85.64889526 563.86151123]
[86.22343445 548.87249756]
[86.79798126 533.88348389]
[87.37252045 518.89453125]
[87.94705963 503.90551758]
[88.52159882 488.91653442]
[81.27746582 475.90222168]
[89.53767395 462.40853882]
[90.11221313 447.41955566]
[90.68675995 432.43057251]
[91.06983948 417.43545532]
[91.26139069 402.43667603]
[91.45294952 387.43789673]
[91.64450073 372.43911743]
[91.83605957 357.44033813]
[92.02761078 342.44155884]
[92.21916962 327.44277954]
[89.16902924 320.73004150]
[92.51016235 312.25402832]
[92.89324188 297.25891113]
[93.27632141 282.26379395]
[93.65940094 267.26870728]
[94.04248047 252.27359009]
[94.42556000 237.27848816]
[94.32978058 222.27879333]
[93.75524139 207.28979492]
[93.18069458 192.30079651]
[84.96158600 179.87922668]
[92.16461945 165.79283142]
[91.59008026 150.80383301]
[91.01554108 135.81483459]
[90.44100189 120.82584381]
[89.86646271 105.83685303]
[85.15839386 91.59487152]
[76.68599701 79.21672821]
[61.67208862 72.62015533]
[60.14713287 56.29206848]
[73.67987061 47.02939224]
[88.34897614 54.36078262]
[89.06414032 70.74433136]
[97.53653717 83.12247467]
[104.32028961 79.92392731]
[124.67155457 70.32830048]
[120.51244354 55.91643524]
[116.35334015 41.50457001]
[112.19423676 27.09270668]
[108.03512573 12.68084145]
[103.87602234 -1.73102260]
[93.67498016 -15.27262688]
[103.86344147 -28.82369804]
[119.70537567 -22.78471565]
[118.28788757 -5.89012909]
[122.44699097 8.52173519]
[126.60609436 22.93359947]
[130.76519775 37.34546280]
[134.92431641 51.75732803]
[139.08341980 66.16918945]
[146.58096313 66.36073303]
[146.96405029 51.36562347]
[147.34712219 36.37051773]
[147.73043823 21.37541580]
[162.72554016 21.75895882]
[162.34223938 36.75359726]
[161.95915222 51.74870300]
[161.57608032 66.74381256]
[169.07363892 66.93534851]
[173.96319580 52.75465393]
[178.85275269 38.57395554]
[183.74230957 24.39325714]
[188.63186646 10.21255779]
[193.52142334 -3.96814060]
[198.41099548 -18.14883995]
[197.85798645 -35.09376526]
[213.98762512 -40.31597137]
[223.47087097 -26.26234818]
[212.59169006 -13.25928020]
[207.70213318 0.92141867]
[202.81256104 15.10211754]
[197.92300415 29.28281593]
[193.03344727 43.46351242]
[188.14389038 57.64421082]
[183.25433350 71.82491302]
[167.65974426 97.40430450]
[146.05322266 111.74131012]
[123.48606873 114.00208282]
[104.85545349 105.26231384]
[105.42999268 120.25130463]
[106.00453186 135.24029541]
[106.57907867 150.22929382]
[107.15361786 165.21829224]
[115.41382599 178.71197510]
[108.16969299 191.72625732]
[108.74423218 206.71525574]
[109.31877136 221.70425415]
[121.18982697 212.53483582]
[135.79083252 215.97146606]
[142.32582092 229.47309875]
[135.96281433 243.05661011]
[121.40661621 246.67837524]
[109.42066956 237.66156006]
[109.03759003 252.65667725]
[108.65451050 267.65176392]
[108.27143097 282.64688110]
[107.88835144 297.64199829]
[107.50527191 312.63711548]
[107.21794891 327.63433838]
[107.02639008 342.63311768]
[106.83483887 357.63189697]
[106.64328003 372.63067627]
[106.45172119 387.62945557]
[106.26016998 402.62823486]
[106.06861115 417.62701416]
[108.94608307 423.53802490]
[108.49170685 429.17373657]
[105.67575073 433.00509644]
[105.10121155 447.99411011]
[104.52666473 462.98309326]
[111.72970581 477.06948853]
[103.51059723 489.49105835]
[102.93605042 504.48007202]
[102.36151123 519.46905518]
[101.78697205 534.45806885]
[101.21243286 549.44702148]
[100.63788605 564.43603516]
[100.06334686 579.42504883]
[99.48880768 594.41400146]
[98.91426849 609.40301514]
[111.45240021 601.16925049]
[125.74749756 605.71343994]
[131.22976685 619.67572021]
[123.84561920 632.73229980]
[109.05489349 635.22918701]
[97.79434204 625.32128906]
[96.26451874 640.24310303]
[94.73470306 655.16485596]
[93.20487976 670.08666992]
[91.67506409 685.00842285]
[90.14524078 699.93023682]
[88.61542511 714.85198975]
[87.08560181 729.77380371]
[85.55578613 744.69555664]
[84.02596283 759.61737061]
[82.49614716 774.53912354]
[80.96632385 789.46093750]
[79.43650818 804.38269043]
[77.90668488 819.30450439]
[76.47217560 834.23571777]
[75.13304138 849.17584229]
[73.79389954 864.11596680]
[84.81394196 872.37359619]
[90.27690125 884.89630127]
[88.85610199 898.37591553]
[81.02824402 909.30853271]
[68.92142487 914.90545654]
[67.39160156 929.82720947]
[73.68110657 944.34454346]
[64.68612671 956.21636963]
[63.15630341 971.13812256]
[61.62648392 986.05993652]
[60.09666443 1000.98168945]
[66.38616943 1015.49902344]
[57.39118576 1027.37084961]
[63.68068695 1041.88818359]
[54.68570328 1053.76000977]
[53.15588379 1068.68176270]
[51.62606430 1083.60351562]
[50.09624481 1098.52526855]
[48.56642532 1113.44714355]
[47.03660583 1128.36889648]
[45.50678635 1143.29064941]
[59.79941559 1158.74389648]
[58.01269913 1179.42102051]
[41.75046921 1191.83496094]
[40.98455811 1206.81542969]
[40.21865082 1221.79589844]
[42.90114975 1230.50280762]
[39.34609985 1236.96228027]
[38.38894653 1251.93176270]
[37.43179703 1266.90124512]
[36.47464371 1281.87060547]
[35.61309814 1296.84582520]
[34.84718704 1311.82629395]
[46.41986084 1322.34326172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 244]
[7 243]
[9 242]
[10 241]
[11 240]
[12 239]
[13 237]
[14 236]
[15 235]
[22 232]
[23 231]
[24 230]
[25 229]
[26 228]
[27 227]
[28 226]
[30 224]
[32 222]
[33 221]
[34 220]
[35 219]
[37 217]
[38 216]
[42 211]
[43 210]
[44 209]
[46 208]
[47 207]
[48 206]
[49 205]
[50 204]
[51 203]
[52 202]
[53 201]
[54 200]
[55 199]
[56 198]
[57 197]
[58 196]
[59 195]
[60 189]
[61 188]
[62 187]
[63 186]
[64 185]
[65 184]
[66 183]
[67 182]
[68 181]
[70 179]
[71 178]
[72 177]
[73 174]
[74 173]
[75 172]
[76 171]
[77 170]
[78 169]
[79 168]
[81 167]
[82 166]
[83 165]
[84 164]
[85 163]
[86 162]
[87 156]
[88 155]
[89 154]
[91 152]
[92 151]
[93 150]
[94 149]
[95 148]
[96 103]
[97 102]
[105 119]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[128 144]
[129 143]
[130 142]
[131 141]
[132 140]
[133 139]
[134 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
