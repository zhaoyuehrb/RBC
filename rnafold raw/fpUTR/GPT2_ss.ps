%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUGCGGCUGUGGGCGCCGGGGCCGGGUAGCUGCUCCAGGCGCGCGAGCUAACCGAGUGCGGCGAGGGCCUACCAGGGGCGACAGGGUUUCUCUCCGCAAGCGCGCG\
) } def
/len { sequence length } bind def

/coor [
[-6.47294950 170.82318115]
[-18.06130028 169.20808411]
[-27.29324722 162.21830750]
[-41.36428070 167.41503906]
[-55.43531418 172.61177063]
[-62.52603912 178.60580444]
[-69.97875214 177.75028992]
[-84.19120789 182.54675293]
[-98.40366364 187.34321594]
[-112.61612701 192.13967896]
[-126.82858276 196.93612671]
[-141.04104614 201.73258972]
[-152.79096985 215.82209778]
[-169.82591248 211.87547302]
[-180.09085083 223.91464233]
[-194.71049500 221.06587219]
[-208.78152466 226.26260376]
[-222.85255432 231.45933533]
[-229.23561096 245.91728210]
[-244.00241089 251.54910278]
[-258.39205933 245.01353455]
[-263.86743164 230.18801880]
[-257.18011475 215.86828613]
[-242.29753113 210.54995728]
[-228.04928589 217.38830566]
[-213.97825623 212.19157410]
[-199.90722656 206.99484253]
[-190.64874268 195.32736206]
[-175.02265930 197.80442810]
[-169.61534119 186.88137817]
[-157.81648254 182.48596191]
[-145.83750916 187.52012634]
[-131.62504578 182.72367859]
[-117.41258240 177.92721558]
[-103.20012665 173.13075256]
[-88.98767090 168.33428955]
[-74.77520752 163.53784180]
[-60.63204575 158.54074097]
[-46.56101608 153.34400940]
[-32.48998260 148.14727783]
[-25.97772598 131.15394592]
[-8.87743473 124.05888367]
[8.32871246 131.70637512]
[22.08320236 125.72189331]
[35.83769226 119.73741150]
[49.59218216 113.75293732]
[63.34667206 107.76845551]
[77.10116577 101.78397369]
[77.80876923 88.06422424]
[86.70441437 76.01136780]
[101.93007660 70.40684509]
[102.35456085 55.41285324]
[102.77903748 40.41885757]
[92.84989929 27.81760406]
[96.65136719 12.23144436]
[111.26729584 5.61674976]
[125.48559570 13.04774666]
[128.39918518 28.82401085]
[117.77303314 40.84334183]
[117.34854889 55.83733368]
[116.92406464 70.83132935]
[127.89920044 81.05612946]
[142.82566833 79.57266998]
[157.75212097 78.08921051]
[172.67858887 76.60575104]
[185.64590454 67.54158020]
[199.07598877 73.98225403]
[214.00245667 72.49879456]
[228.92892456 71.01533508]
[243.85537720 69.53187561]
[258.78186035 68.04841614]
[263.25314331 64.81586456]
[268.03839111 63.82801056]
[272.19137573 64.80727386]
[275.02902222 67.12775421]
[290.02752686 66.91549683]
[305.02600098 66.70323181]
[316.00384521 55.65222549]
[331.21749878 55.65062332]
[341.68527222 66.18441772]
[353.85379028 55.72941208]
[369.58721924 58.86596680]
[376.81628418 73.18798828]
[369.99542236 87.70884705]
[354.35702515 91.28939056]
[341.89755249 81.18292236]
[331.73205566 92.00872803]
[316.52444458 92.43765259]
[305.23828125 81.70172882]
[290.23977661 81.91399384]
[275.24127197 82.12625885]
[260.26531982 82.97488403]
[245.33883667 84.45834351]
[230.41238403 85.94180298]
[215.48591614 87.42526245]
[200.55944824 88.90872192]
[188.65977478 97.86678314]
[174.16204834 91.53221130]
[159.23558044 93.01567078]
[144.30912781 94.49913025]
[129.38265991 95.98258972]
[120.81848907 117.85546875]
[100.42952728 125.19383240]
[83.08563995 115.53845978]
[69.33115387 121.52294159]
[55.57666397 127.50742340]
[41.82217407 133.49189758]
[28.06768227 139.47637939]
[14.31319332 145.46086121]
[12.14652538 157.32748413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 40]
[4 39]
[5 38]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[12 32]
[14 29]
[16 27]
[17 26]
[18 25]
[43 109]
[44 108]
[45 107]
[46 106]
[47 105]
[48 104]
[51 61]
[52 60]
[53 59]
[62 101]
[63 100]
[64 99]
[65 98]
[67 96]
[68 95]
[69 94]
[70 93]
[71 92]
[75 91]
[76 90]
[77 89]
[80 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
