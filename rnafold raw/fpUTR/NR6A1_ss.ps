%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUGAGGGGGCGCGGCGCGGAGGGGCGCGGAGCGGCGCGGAGCCGGGCGGCUCGGGGCCCAGAGAGAGCCGCGGCCGGGAGCUCGCGGGCUCCUGACAACCUCCUCCCCUCGGCGGACGACGACCACGGCGACUAGGGCGCCGGUCAUGGCGGAGCAACAAACCCGGCGCGGACCCUAGGCACCACCGC\
) } def
/len { sequence length } bind def

/coor [
[93.24258423 267.67535400]
[91.77233124 252.74758911]
[90.30207062 237.81982422]
[88.83181000 222.89205933]
[87.36155701 207.96427917]
[78.41402435 196.05668640]
[84.76141357 181.56457520]
[83.29115295 166.63681030]
[81.82089996 151.70903015]
[80.35063934 136.78126526]
[62.20280457 101.83361816]
[49.53061295 111.30600739]
[35.90230560 105.29614258]
[21.03063202 107.25403595]
[6.15895939 109.21192932]
[-8.71271324 111.16982269]
[-23.58438683 113.12771606]
[-38.45605850 115.08560944]
[-51.12825012 124.55799866]
[-64.75656128 118.54813385]
[-70.92103577 133.88238525]
[-83.90019226 143.96147156]
[-100.09729767 146.11210632]
[-115.08380127 139.84169006]
[-124.81018829 126.94707489]
[-139.64782715 129.14802551]
[-154.48548889 131.34898376]
[-169.32313538 133.54994202]
[-181.83863831 143.22840881]
[-195.56346130 137.44233704]
[-208.07896423 147.12078857]
[-221.80377197 141.33471680]
[-236.64143372 143.53567505]
[-251.47908020 145.73663330]
[-266.31671143 147.93759155]
[-278.83224487 157.61604309]
[-292.55703735 151.82997131]
[-307.39468384 154.03092957]
[-319.91021729 163.70939636]
[-333.63500977 157.92330933]
[-348.47265625 160.12426758]
[-360.97454834 170.73724365]
[-376.32339478 164.96276855]
[-378.72964478 148.74111938]
[-365.71795654 138.75973511]
[-350.67361450 145.28662109]
[-335.83596802 143.08566284]
[-324.38174438 133.56463623]
[-309.59564209 139.19328308]
[-294.75799561 136.99232483]
[-283.30377197 127.47129059]
[-268.51766968 133.09994507]
[-253.68003845 130.89898682]
[-238.84237671 128.69802856]
[-224.00473022 126.49707031]
[-212.55052185 116.97603607]
[-197.76440430 122.60468292]
[-186.31019592 113.08364868]
[-171.52409363 118.71230316]
[-156.68643188 116.51134491]
[-141.84878540 114.31038666]
[-127.01114655 112.10942841]
[-122.83599854 99.09712982]
[-113.41397858 89.10758209]
[-100.54434204 84.13160706]
[-86.72084808 85.19458008]
[-74.64853668 92.14572144]
[-66.71444702 103.67646027]
[-55.10598373 94.34411621]
[-40.41395187 100.21393585]
[-25.54227829 98.25604248]
[-10.67060661 96.29814911]
[4.20106649 94.34025574]
[19.07273865 92.38236237]
[33.94441223 90.42446899]
[45.55287933 81.09212494]
[60.24491119 86.96194458]
[68.47615051 74.42214203]
[64.35732269 59.99871445]
[60.23849106 45.57528687]
[56.11966324 31.15185928]
[52.00083160 16.72843170]
[47.88200378 2.30500531]
[43.76317596 -12.11842155]
[39.64434433 -26.54184914]
[27.49034119 -37.55149078]
[31.21199608 -53.52275848]
[46.98078918 -58.02577591]
[58.57513809 -46.42823029]
[54.06777191 -30.66067886]
[58.18659973 -16.23725128]
[62.30543137 -1.81382394]
[66.42426300 12.60960293]
[70.54309082 27.03302956]
[74.66191864 41.45645523]
[78.78074646 55.87988281]
[82.89957428 70.30331421]
[90.14402008 72.24445343]
[94.02652740 57.75562668]
[108.51529694 61.63835907]
[104.63291168 76.12673950]
[111.87734985 78.06787872]
[122.65607452 67.63624573]
[133.43479919 57.20460129]
[133.85832214 41.63352966]
[144.93807983 31.20790863]
[159.78012085 31.70763206]
[170.55883789 21.27599144]
[175.09454346 6.11888218]
[189.62097168 2.82767653]
[200.39970398 -7.60396290]
[200.82321167 -23.17503738]
[211.90298462 -33.60065842]
[226.74501038 -33.10093307]
[237.52374268 -43.53257370]
[248.21675110 -54.05204773]
[258.82336426 -64.65864563]
[260.26123047 -80.63713837]
[273.72906494 -89.35478210]
[288.89547729 -84.12415314]
[294.12609863 -68.95774078]
[285.40844727 -55.48991776]
[269.42996216 -54.05204773]
[258.82336426 -43.44544601]
[256.31268311 -36.48141098]
[247.95536804 -32.75384903]
[237.17665100 -22.32221031]
[237.19049072 -7.47177553]
[226.40792847 3.26093745]
[210.83132935 3.17476130]
[200.05261230 13.60640049]
[196.28787231 28.01737022]
[180.99047852 32.05471802]
[170.21176147 42.48635483]
[170.22558594 57.33679199]
[159.44303894 68.06950378]
[143.86643982 67.98332977]
[133.08772278 78.41497040]
[122.30899048 88.84660339]
[125.11489105 103.58183289]
[138.97308350 109.32208252]
[152.83126831 115.06233978]
[166.68946838 120.80258942]
[180.54766846 126.54283905]
[194.40585327 132.28309631]
[208.26405334 138.02334595]
[221.46696472 130.08676147]
[236.63427734 131.43058777]
[247.96794128 141.33070374]
[251.25935364 155.83258057]
[265.11755371 161.57283020]
[277.73098755 152.68998718]
[293.14544678 152.05943298]
[306.44226074 159.88237000]
[313.37844849 173.66253662]
[311.74069214 189.00271606]
[302.05160522 201.00793457]
[287.40295410 205.84735107]
[272.46902466 201.97674561]
[262.01522827 190.63119507]
[259.37728882 175.43103027]
[245.51910400 169.69078064]
[232.93734741 177.61776733]
[217.92279053 176.60409546]
[206.24766541 166.82940674]
[202.52378845 151.88153076]
[188.66560364 146.14128113]
[174.80740356 140.40103149]
[160.94921875 134.66078186]
[147.09101868 128.92053223]
[133.23283386 123.18027496]
[119.37463379 117.44002533]
[113.35057831 121.90776825]
[115.06491852 136.80947876]
[101.30246735 130.84326172]
[95.27841187 135.31100464]
[96.74866486 150.23878479]
[98.21892548 165.16654968]
[99.68918610 180.09431458]
[108.74188232 193.06965637]
[102.28932953 206.49403381]
[103.75958252 221.42179871]
[105.22984314 236.34956360]
[106.70009613 251.27734375]
[108.17035675 266.20510864]
[121.17828369 274.88427734]
[125.51442719 289.90866089]
[119.13140106 304.18417358]
[105.04306030 310.97039795]
[89.90150452 307.06307983]
[80.85610199 294.30709839]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[5 181]
[7 179]
[8 178]
[9 177]
[10 176]
[11 77]
[13 75]
[14 74]
[15 73]
[16 72]
[17 71]
[18 70]
[20 68]
[25 62]
[26 61]
[27 60]
[28 59]
[30 57]
[32 55]
[33 54]
[34 53]
[35 52]
[37 50]
[38 49]
[40 47]
[41 46]
[78 97]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
[102 139]
[103 138]
[104 137]
[107 134]
[108 133]
[110 131]
[111 130]
[114 127]
[115 126]
[116 124]
[117 123]
[140 172]
[141 171]
[142 170]
[143 169]
[144 168]
[145 167]
[146 166]
[150 162]
[151 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
