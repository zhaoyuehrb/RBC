%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGACUUACCCAAGGUCACGCAGCGAGCCCGGUCCCCCUGCGUUCCCCGGGGAGCGCUGAGCCGGGACGCGGCGGUGGGGUGGGGAAGGGGAGUGGCGCGGCCCUGCGGGGUGAGGCUGCCGUUUGCUGAGUGUCCGGCAGGGGUCUGCUCGCUGCCAGCCCGGCCCCUCCUCAGAGCAGCUGCCGCAGCCCGAGG\
) } def
/len { sequence length } bind def

/coor [
[92.90018463 150.62843323]
[85.44639587 151.45971680]
[82.14173889 166.09117126]
[78.83708191 180.72261047]
[86.15304565 195.00042725]
[79.42057800 209.56248474]
[63.80423355 213.23800659]
[51.28355026 203.20745850]
[51.46331406 187.16540527]
[64.20563507 177.41795349]
[67.51029205 162.78651428]
[70.81494904 148.15505981]
[65.94861603 142.44815063]
[56.03381348 153.70411682]
[46.68050766 165.43083191]
[32.25347900 161.32463074]
[30.47702599 146.43020630]
[43.53481674 139.04614258]
[56.21594620 131.03434753]
[51.34960938 125.32743073]
[36.37981033 126.27879333]
[21.41001129 127.23014832]
[8.12835217 135.82713318]
[-5.06402540 128.91262817]
[-20.03382492 129.86398315]
[-35.00362396 130.81533813]
[-44.10326004 139.96627808]
[-56.59828186 140.44491577]
[-65.76335144 132.53985596]
[-80.74636078 133.25358582]
[-95.72937012 133.96730042]
[-110.71237946 134.68103027]
[-125.69538879 135.39476013]
[-140.67840576 136.10848999]
[-145.21255493 146.65705872]
[-153.32273865 154.71182251]
[-163.80752563 159.13363647]
[-175.13374329 159.31753540]
[-185.66067505 155.27523804]
[-193.87770081 147.62791443]
[-198.62107849 137.51103210]
[-213.62107849 137.51103210]
[-228.62107849 137.51103210]
[-243.62107849 137.51103210]
[-258.62109375 137.51103210]
[-273.62109375 137.51103210]
[-288.62109375 137.51103210]
[-302.54489136 146.17472839]
[-316.88031006 138.21060181]
[-316.88031006 121.81145477]
[-302.54489136 113.84732056]
[-288.62109375 122.51102448]
[-273.62109375 122.51102448]
[-258.62109375 122.51102448]
[-243.62107849 122.51102448]
[-228.62107849 122.51102448]
[-213.62107849 122.51102448]
[-198.62107849 122.51102448]
[-188.54226685 106.78486633]
[-170.88517761 100.24678802]
[-152.70770264 105.70275116]
[-141.39213562 121.12548065]
[-126.40911865 120.41175842]
[-111.42610931 119.69802856]
[-96.44309998 118.98429871]
[-81.46009064 118.27056885]
[-66.47708130 117.55683899]
[-52.25326157 107.28598022]
[-35.95498276 115.84554291]
[-20.98518372 114.89418030]
[-6.01538420 113.94282532]
[6.19553375 105.41388702]
[20.45865250 112.26035309]
[35.42845154 111.30899048]
[50.39825058 110.35763550]
[63.35506821 77.26965332]
[91.04301453 65.57344818]
[113.59526062 75.49554443]
[124.11737823 64.80513000]
[134.63951111 54.11471939]
[145.16162109 43.42430496]
[155.68374634 32.73389435]
[159.84989929 17.47106934]
[174.29208374 13.82793808]
[184.81420898 3.13752580]
[195.33633423 -7.55288696]
[193.68020630 -20.92614937]
[199.94038391 -32.63891220]
[211.63182068 -38.51735687]
[224.38197327 -36.61392593]
[235.07238770 -47.13604736]
[239.48016357 -62.33085251]
[253.97833252 -65.74438477]
[264.66876221 -76.26651001]
[275.35916138 -86.78863525]
[286.04956055 -97.31075287]
[296.73999023 -107.83287811]
[300.66656494 -116.09238434]
[307.68447876 -118.43545532]
[318.54049683 -128.78665161]
[329.39648438 -139.13783264]
[340.25250244 -149.48901367]
[350.94293213 -160.01113892]
[361.46505737 -170.70155334]
[371.98715210 -181.39196777]
[382.50927734 -192.08238220]
[393.03140259 -202.77278137]
[403.55352783 -213.46319580]
[407.71969604 -228.72602844]
[422.16186523 -232.36915588]
[432.68399048 -243.05957031]
[443.20611572 -253.74998474]
[453.55731201 -264.60598755]
[453.10818481 -280.17636108]
[463.58673096 -291.20608521]
[478.43344116 -291.53826904]
[488.61108398 -302.55715942]
[498.78872681 -313.57601929]
[495.62350464 -328.76684570]
[502.02243042 -342.90310669]
[515.52496338 -350.54910278]
[530.93908691 -348.76483154]
[542.33782959 -338.23635864]
[545.33807373 -323.01208496]
[538.78619385 -308.94607544]
[525.20147705 -301.44699097]
[509.80761719 -303.39840698]
[499.62997437 -292.37951660]
[489.45233154 -281.36062622]
[490.29776001 -266.53427124]
[480.13314819 -255.21459961]
[464.57617188 -254.42834473]
[463.86831665 -249.69540405]
[460.17291260 -245.36019897]
[453.89654541 -243.22785950]
[443.37442017 -232.53744507]
[432.85229492 -221.84703064]
[429.43875122 -207.34886169]
[414.24395752 -202.94107056]
[403.72183228 -192.25067139]
[393.19970703 -181.56025696]
[382.67758179 -170.86984253]
[372.15545654 -160.17942810]
[361.63333130 -149.48901367]
[360.77563477 -144.78091431]
[356.94458008 -140.56513977]
[350.60369873 -138.63301086]
[339.74768066 -128.28181458]
[328.89166260 -117.93063354]
[318.03567505 -107.57944489]
[307.26211548 -97.14246368]
[296.57168579 -86.62034607]
[285.88128662 -76.09822083]
[275.19085693 -65.57609558]
[264.50045776 -55.05397415]
[260.85733032 -40.61178207]
[245.59449768 -36.44563675]
[234.90409851 -25.92351341]
[235.49238586 -9.12080765]
[223.51408386 3.15375519]
[206.02674866 2.96923661]
[195.50462341 13.65964890]
[184.98249817 24.35006142]
[181.56896973 38.84823608]
[166.37416077 43.25601578]
[155.85203552 53.94643021]
[145.32991028 64.63684082]
[134.80780029 75.32725525]
[124.28566742 86.01766968]
[138.38285828 108.65884399]
[128.80545044 141.68765259]
[135.25236511 155.23155212]
[141.69929504 168.77545166]
[148.14622498 182.31935120]
[161.06367493 191.45443726]
[159.54757690 206.27168274]
[166.06855774 212.68373108]
[165.98744202 220.08200073]
[172.21865845 233.72647095]
[184.98954773 243.06535339]
[183.23855591 257.85668945]
[189.46978760 271.50115967]
[203.13471985 280.56765747]
[201.84544373 296.91604614]
[186.92825317 303.72851562]
[173.72868347 293.99694824]
[175.82530212 277.73239136]
[169.59408569 264.08792114]
[157.26889038 255.72496033]
[158.57417297 239.95770264]
[152.34295654 226.31321716]
[146.00367737 212.71859741]
[133.54734802 204.55226135]
[134.60232544 188.76626587]
[128.15539551 175.22236633]
[121.70847321 161.67846680]
[115.26155090 148.13456726]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[20 75]
[21 74]
[22 73]
[24 71]
[25 70]
[26 69]
[29 67]
[30 66]
[31 65]
[32 64]
[33 63]
[34 62]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[78 169]
[79 168]
[80 167]
[81 166]
[82 165]
[84 163]
[85 162]
[86 161]
[90 158]
[91 157]
[93 155]
[94 154]
[95 153]
[96 152]
[97 151]
[99 150]
[100 149]
[101 148]
[102 147]
[103 144]
[104 143]
[105 142]
[106 141]
[107 140]
[108 139]
[110 137]
[111 136]
[112 135]
[113 132]
[116 129]
[117 128]
[118 127]
[171 197]
[172 196]
[173 195]
[174 194]
[176 192]
[178 191]
[179 190]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
