%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUGUAAAGAGAUCCAGGGCUCUUGGAGAGGGACAAGUGAGAGCCAGCCAAAAAGGAAAAAGCAAAGGCAGAAACGGCAUCAGGAGAGACAGAGAUGUGAAGGAGGGAAGGAGCAGGAGAGCAGGAAGGAAACGCAGGAGGAGGGAGCAGCAUCUCCUGUGAACACAGAGGAGCACCUGUUUGCUGUUAAAAUCGAUCUCCCUCGGCACCCUGAGCA\
) } def
/len { sequence length } bind def

/coor [
[170.32688904 101.54707336]
[169.51242065 110.78370667]
[167.49012756 119.83297729]
[164.29516602 128.53762817]
[159.98303223 136.74642944]
[154.62866211 144.31674194]
[148.32508850 151.11701965]
[141.18185425 157.02911377]
[133.32304382 161.95028687]
[124.88523102 165.79505920]
[116.01502991 168.49659729]
[106.86655426 170.00796509]
[97.59877014 170.30290222]
[88.37271118 169.37629700]
[79.34867859 167.24423218]
[70.68347168 163.94377136]
[62.52766037 159.53224182]
[55.02295303 154.08631897]
[48.29974365 147.70060730]
[36.25363159 156.63879395]
[24.20752335 165.57698059]
[12.16141319 174.51516724]
[0.11530366 183.45336914]
[-11.93080616 192.39155579]
[-23.97691536 201.32974243]
[-36.02302551 210.26792908]
[-33.09644699 225.24784851]
[-36.96754074 240.01190186]
[-46.86769485 251.62869263]
[-60.83123016 257.79168701]
[-76.08567810 257.27722168]
[-89.60224915 250.18742371]
[-98.69722748 237.93002319]
[-101.56478882 222.93869019]
[-97.63558960 208.18998718]
[-87.68975830 196.61228943]
[-73.70206451 190.50433350]
[-58.44976425 191.07887268]
[-44.96121597 198.22181702]
[-32.91510773 189.28363037]
[-20.86899567 180.34544373]
[-8.82288647 171.40725708]
[3.22322369 162.46907043]
[15.26933384 153.53086853]
[27.31544304 144.59268188]
[39.36155319 135.65449524]
[31.98815536 117.96254730]
[29.66413307 98.93701172]
[14.77550411 97.11253357]
[-0.11312511 95.28805542]
[-6.71608639 108.91448212]
[-17.38754654 119.65686035]
[-30.96994400 126.34992981]
[-45.98996353 128.26768494]
[-60.81834030 125.20208740]
[-73.84661102 117.48568726]
[-83.66156006 105.95549011]
[-89.19853973 91.86220551]
[-89.85694122 76.73457336]
[-85.56533813 62.21352386]
[-76.78925323 49.87419128]
[-64.48065948 41.05505753]
[-49.97469330 36.71274948]
[-34.84485245 37.31829071]
[-20.73231316 42.80599976]
[-9.16789627 52.58061218]
[-1.40602362 65.58184052]
[1.71135545 80.39942169]
[16.59998512 82.22389984]
[31.48861313 84.04838562]
[38.93456268 65.08186340]
[51.50404739 49.04505157]
[68.14246368 37.28348541]
[87.45379639 30.78398323]
[107.81778717 30.09187126]
[127.52584839 35.26522064]
[144.92442322 45.86997223]
[158.55374146 61.01636124]
[171.85475159 54.08218002]
[178.01316833 47.34417725]
[185.39668274 47.14547729]
[198.79580688 40.40280914]
[212.19491577 33.66014099]
[225.59403992 26.91747475]
[238.99316406 20.17480469]
[245.24760437 13.52583885]
[252.63319397 13.43307304]
[237.97747803 10.23776245]
[227.30357361 -0.30110613]
[223.92193604 -14.91495323]
[228.88137817 -29.07136726]
[240.64372253 -38.37980652]
[255.56097412 -39.95330429]
[269.00659180 -33.30384827]
[276.81048584 -20.49373627]
[276.55233765 -5.49595737]
[268.31396484 7.03649330]
[282.53939819 2.27862406]
[296.76483154 -2.47924542]
[303.86740112 -16.34255028]
[318.36175537 -20.96506119]
[331.53454590 -14.10840988]
[345.75997925 -18.86627960]
[359.98538208 -23.62414932]
[367.12612915 -29.31068420]
[374.44912720 -28.34665108]
[388.74133301 -32.89997101]
[403.03353882 -37.45329285]
[417.32574463 -42.00661087]
[424.62646484 -55.76660919]
[439.18566895 -60.18072510]
[452.25872803 -53.13581848]
[466.55093384 -57.68914032]
[469.91702271 -72.60948181]
[480.23132324 -83.76799774]
[494.65020752 -88.23590088]
[509.27166748 -84.90893555]
[520.19110107 -74.77824402]
[534.48333740 -79.33155823]
[545.28363037 -90.89287567]
[559.75903320 -87.38409424]
[574.05126953 -91.93741608]
[588.34344482 -96.49073029]
[602.63568115 -101.04405212]
[616.92791748 -105.59737396]
[631.22009277 -110.15069580]
[642.02038574 -121.71201324]
[656.49584961 -118.20322418]
[670.78802490 -122.75654602]
[685.08026123 -127.30986786]
[690.31512451 -150.48027039]
[708.32983398 -165.77964783]
[731.80322266 -167.17898560]
[751.30853271 -154.26036072]
[764.70764160 -161.00303650]
[778.10675049 -167.74569702]
[791.50585938 -174.48837280]
[804.90496826 -181.23103333]
[818.30407715 -187.97370911]
[831.70324707 -194.71636963]
[845.10235596 -201.45904541]
[858.50146484 -208.20172119]
[867.35083008 -221.31657410]
[882.19775391 -220.12609863]
[885.61560059 -235.38560486]
[898.07373047 -244.83700562]
[913.68981934 -244.01762390]
[925.09045410 -233.31436157]
[926.89257812 -217.78096008]
[918.24523926 -204.75183105]
[903.23156738 -200.37892151]
[888.94042969 -206.72697449]
[881.04949951 -194.09439087]
[865.24414062 -194.80259705]
[851.84503174 -188.05992126]
[838.44592285 -181.31726074]
[825.04675293 -174.57458496]
[811.64764404 -167.83192444]
[798.24853516 -161.08924866]
[784.84942627 -154.34658813]
[771.45031738 -147.60391235]
[758.05114746 -140.86125183]
[759.26519775 -133.86500549]
[759.11523438 -126.75608826]
[757.60308838 -119.79831696]
[754.78118896 -113.25061035]
[750.75085449 -107.35736084]
[745.65850830 -102.33931732]
[739.69049072 -98.38529205]
[733.06616211 -95.64507294]
[726.02990723 -94.22377777]
[718.84191895 -94.17777252]
[711.76892090 -95.51248169]
[705.07403564 -98.18204498]
[699.00695801 -102.09088898]
[693.79479980 -107.09710693]
[689.63354492 -113.01765442]
[675.34136963 -108.46434021]
[661.04913330 -103.91101837]
[651.27111816 -92.67538452]
[635.77343750 -95.85848236]
[621.48120117 -91.30516815]
[607.18902588 -86.75184631]
[592.89678955 -82.19852448]
[578.60455322 -77.64520264]
[564.31237793 -73.09188080]
[554.53436279 -61.85625076]
[539.03668213 -65.03935242]
[524.74444580 -60.48603058]
[521.69757080 -45.90583420]
[511.69522095 -34.73402786]
[497.34909058 -30.03775978]
[482.48086548 -33.17344284]
[471.10424805 -43.39693069]
[456.81204224 -38.84360886]
[450.22341919 -25.53474426]
[435.79397583 -20.71343231]
[421.87905884 -27.71440125]
[407.58685303 -23.16108131]
[393.29464722 -18.60776138]
[379.00244141 -14.05444050]
[364.74325562 -9.39872551]
[350.51782227 -4.64085579]
[336.29241943 0.11701335]
[329.89538574 13.51902103]
[315.53656006 18.54682350]
[301.52267456 11.74617863]
[287.29727173 16.50404739]
[273.07183838 21.26191711]
[259.18298340 26.92753601]
[245.73582458 33.57392502]
[232.33671570 40.31659317]
[218.93759155 47.05926132]
[205.53846741 53.80192947]
[192.13934326 60.54459763]
[178.78894043 67.38320160]
[165.48791504 74.31738281]
[168.29699707 83.15411377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[48 70]
[49 69]
[50 68]
[78 217]
[79 216]
[81 215]
[82 214]
[83 213]
[84 212]
[85 211]
[87 210]
[97 209]
[98 208]
[99 207]
[102 204]
[103 203]
[104 202]
[106 201]
[107 200]
[108 199]
[109 198]
[112 195]
[113 194]
[118 189]
[119 188]
[121 186]
[122 185]
[123 184]
[124 183]
[125 182]
[126 181]
[128 179]
[129 178]
[130 177]
[134 162]
[135 161]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[142 154]
[144 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
