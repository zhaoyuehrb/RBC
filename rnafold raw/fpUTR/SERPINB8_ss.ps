%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGCCAGAGCAAUCGAACGGUUCUGAGUCAUCUGCCGGAAGCCUUGCCCUCAAUCAAGGCGGACGUGAAGCAUCUACAAAGGAGGAAUAGUCAAAGCAGCAGCGGCGGCGGCGGCGGCGGCAGCAGCAGCAGCAGCAGGAGGUGGGGGCCUCUGCCAGACCUUCUCUG\
) } def
/len { sequence length } bind def

/coor [
[66.01371765 198.18548584]
[51.02394485 198.73930359]
[50.46992111 183.75000000]
[42.97504425 184.02713013]
[34.38401413 196.32324219]
[25.90696907 208.69819641]
[17.54462814 221.15095520]
[9.18228626 233.60372925]
[0.81994450 246.05648804]
[-7.54239702 258.50924683]
[-15.90473843 270.96200562]
[-9.68593025 285.08044434]
[-12.10990429 300.31616211]
[-22.40317726 311.80755615]
[-37.28120422 315.88775635]
[-51.99646378 311.25473022]
[-61.85336304 299.38693237]
[-63.70660782 284.07128906]
[-56.96483231 270.19497681]
[-43.77931213 262.18588257]
[-28.35750008 262.59967041]
[-19.99515724 250.14689636]
[-11.63281631 237.69413757]
[-3.27047443 225.24137878]
[5.09186745 212.78862000]
[13.45420837 200.33586121]
[14.57707596 193.00105286]
[22.08790779 187.73220825]
[30.67893600 175.43611145]
[38.15309143 166.37869263]
[47.07008362 160.93367004]
[56.11562347 159.13922119]
[64.07594299 160.61428833]
[62.96815491 145.65525818]
[61.86036682 130.69621277]
[60.75257874 115.73717499]
[51.60284424 103.85095215]
[37.42508698 98.95287323]
[24.72236061 107.66763306]
[9.50172901 107.23662567]
[-2.40573311 98.03465271]
[-6.56167841 83.75648499]
[-20.73943520 78.85840607]
[-34.91719437 73.96032715]
[-49.09495163 69.06224060]
[-63.27270889 64.16416168]
[-77.45046234 59.26608276]
[-90.09283447 68.26331329]
[-105.60879517 68.07756042]
[-118.03215027 58.78025436]
[-122.58586121 43.94639969]
[-117.51893616 29.27990913]
[-104.77970886 20.42035484]
[-89.26667786 20.77441216]
[-76.94490814 30.20594025]
[-72.55238342 45.08832550]
[-58.37462616 49.98640442]
[-44.19686890 54.88448715]
[-30.01911163 59.78256607]
[-15.84135532 64.68064880]
[-1.66359758 69.57872772]
[10.41967392 60.91082382]
[25.46798897 61.02143478]
[37.70878983 70.07771301]
[42.32316589 84.77511597]
[56.50092316 89.67319489]
[67.95189667 79.98427582]
[65.46858978 65.19126892]
[62.98528290 50.39825439]
[48.69205093 44.95299530]
[39.10675430 33.16236877]
[36.72594070 18.25605965]
[42.09012222 4.25314760]
[53.66516113 -5.12150192]
[51.18185425 -19.91451263]
[48.69854355 -34.70752335]
[34.74872589 -41.50327301]
[27.48726082 -55.21643066]
[29.70633316 -70.57401276]
[40.55266190 -81.67071533]
[55.85561371 -84.23963165]
[69.73088837 -77.29295349]
[76.84316254 -63.50182724]
[74.45762634 -48.16921997]
[63.49155426 -37.19083405]
[65.97486115 -22.39782143]
[68.45816803 -7.60481024]
[82.45989990 -2.52374148]
[92.10253143 8.95997047]
[94.71970367 23.82660294]
[89.50993347 38.10088348]
[77.77828979 47.91494751]
[80.26160431 62.70795822]
[82.74491119 77.50096893]
[94.38134003 74.66592407]
[105.08649445 77.01058197]
[112.85721588 83.21787262]
[125.61047363 75.32138824]
[133.27044678 61.47814941]
[148.16456604 61.35649109]
[160.91781616 53.46000671]
[168.57780457 39.61676788]
[183.47190857 39.49510956]
[196.22515869 31.59862518]
[203.88514709 17.75538635]
[218.77925110 17.63372612]
[231.53250122 9.73724270]
[239.19248962 -4.10599661]
[254.08659363 -4.22765684]
[266.83984375 -12.12413883]
[274.11724854 -26.82010460]
[290.49807739 -27.59550095]
[299.13110352 -13.65266418]
[291.13543701 0.66520846]
[274.73632812 0.62911779]
[261.98309326 8.52560043]
[255.23529053 21.80403137]
[239.42898560 22.49049950]
[226.67573547 30.38698196]
[219.92794800 43.66541290]
[204.12164307 44.35188293]
[191.36839294 52.24836349]
[184.62060547 65.52679443]
[168.81430054 66.21326447]
[156.06105042 74.10974884]
[149.31326294 87.38817596]
[133.50695801 88.07464600]
[120.75370026 95.97113037]
[108.87829590 123.10012817]
[75.71161652 114.62938690]
[76.81940460 129.58842468]
[77.92719269 144.54747009]
[79.03498077 159.50650024]
[84.58261108 173.44291687]
[94.05828094 185.07098389]
[103.53394318 196.69903564]
[111.41338348 201.39880371]
[113.07487488 208.63064575]
[122.33405304 220.43182373]
[131.59323120 232.23300171]
[140.85240173 244.03417969]
[150.11157227 255.83534241]
[159.37074280 267.63653564]
[168.62991333 279.43768311]
[182.12223816 279.50631714]
[192.94624329 287.23089600]
[197.26902771 299.60012817]
[193.71977234 312.01058960]
[202.75929260 323.98083496]
[211.79881287 335.95111084]
[227.10356140 341.84149170]
[229.38708496 358.08087158]
[216.30027771 367.96356201]
[201.30574036 361.32312012]
[199.82855225 344.99063110]
[190.78903198 333.02035522]
[181.74951172 321.05010986]
[165.02540588 319.45379639]
[154.40649414 306.00280762]
[156.82875061 288.69686890]
[147.56956482 276.89569092]
[138.31039429 265.09451294]
[129.05122375 253.29335022]
[119.79205322 241.49217224]
[110.53287506 229.69099426]
[101.27370453 217.88981628]
[91.90588379 206.17471313]
[82.43022156 194.54664612]
[72.95455170 182.91859436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 29]
[5 28]
[6 26]
[7 25]
[8 24]
[9 23]
[10 22]
[11 21]
[33 133]
[34 132]
[35 131]
[36 130]
[37 66]
[38 65]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[67 94]
[68 93]
[69 92]
[74 87]
[75 86]
[76 85]
[97 128]
[98 127]
[100 125]
[101 124]
[103 122]
[104 121]
[106 119]
[107 118]
[109 116]
[110 115]
[134 169]
[135 168]
[136 167]
[138 166]
[139 165]
[140 164]
[141 163]
[142 162]
[143 161]
[144 160]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
