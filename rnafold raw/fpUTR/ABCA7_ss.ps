%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCAAGCUCAGCGCACUUGGCUUAAGGGGCGGCGCGCUCCCUGCCUGCUGCUGGGCGGAGGGAAGGCGGCAAGAGCUGCGGAGCCCCUGGAAGAGCUUCCAGGAACCCUGCGCUGUGGGAUAAAGGAAUGAGGUUCAGAAAGGGGCAGGGAGUUGCCCGCAGCCGCACCGCACGUCUUCAGCCCGACCGUUGUCCUGACCUCUCUGUCCCGUCCCCUGCCCAGUCUCACC\
) } def
/len { sequence length } bind def

/coor [
[59.85580063 303.84082031]
[58.03224182 288.95208740]
[56.20868301 274.06332397]
[54.38512421 259.17459106]
[52.56156158 244.28585815]
[45.57559967 241.55705261]
[24.61771774 233.37065125]
[13.18528652 243.08145142]
[1.75285614 252.79225159]
[-9.67957497 262.50305176]
[-21.11200523 272.21383667]
[-32.54443741 281.92462158]
[-43.97686768 291.63540649]
[-55.34328842 301.42340088]
[-66.64318085 311.28811646]
[-77.94306946 321.15283203]
[-79.62237549 326.06423950]
[-82.70374298 329.50463867]
[-86.39595032 331.18673706]
[-89.90804291 331.17730713]
[-101.59924316 340.57495117]
[-113.29044342 349.97259521]
[-115.16783142 354.81176758]
[-118.38638306 358.12417603]
[-122.14385986 359.65493774]
[-125.65267181 359.50286865]
[-137.71589661 368.41796875]
[-149.77911377 377.33303833]
[-161.84233093 386.24810791]
[-173.84492493 395.24468994]
[-185.78631592 404.32229614]
[-197.72770691 413.39990234]
[-206.67803955 427.79879761]
[-222.99191284 423.18423462]
[-223.07383728 406.23049927]
[-206.80532837 401.45849609]
[-194.86392212 392.38088989]
[-182.92253113 383.30328369]
[-179.50482178 376.76284790]
[-170.75741577 374.18490601]
[-158.69419861 365.26980591]
[-146.63098145 356.35473633]
[-134.56774902 347.43963623]
[-122.68809509 338.28140259]
[-110.99689484 328.88375854]
[-99.30569458 319.48608398]
[-87.80777740 309.85293579]
[-76.50788879 299.98822021]
[-65.20800018 290.12350464]
[-62.24061203 283.36682129]
[-53.68766022 280.20300293]
[-42.25522995 270.49218750]
[-30.82279968 260.78140259]
[-19.39036942 251.07060242]
[-7.95793819 241.35981750]
[3.47449255 231.64901733]
[14.90692329 221.93823242]
[24.69490051 210.57180786]
[32.60153961 197.82484436]
[40.50817871 185.07788086]
[48.32833099 172.27767944]
[56.06163788 159.42481995]
[63.79494476 146.57196045]
[71.52825165 133.71910095]
[79.17436218 120.81417847]
[86.73291779 107.85778046]
[91.32952118 93.57943726]
[92.74923706 78.64677429]
[94.16895294 63.71411133]
[95.58866119 48.78144836]
[84.12631989 38.48965836]
[80.95899963 23.59598541]
[87.09635162 9.85564613]
[99.99334717 2.45257449]
[97.69252014 -6.37176943]
[101.53472900 -12.67220592]
[103.15650940 -27.58427429]
[104.77829742 -42.49634552]
[106.40008545 -57.40841293]
[108.02186584 -72.32048035]
[109.64365387 -87.23255157]
[111.26544189 -102.14462280]
[109.08431244 -110.99931335]
[113.01148224 -117.24714661]
[114.83503723 -132.13587952]
[100.26230621 -150.51422119]
[106.30231476 -172.66702271]
[98.39567566 -185.41398621]
[90.48903656 -198.16094971]
[82.58239746 -210.90791321]
[74.67575836 -223.65487671]
[66.76911926 -236.40184021]
[58.86248016 -249.14880371]
[44.16072083 -256.41448975]
[43.37228012 -272.79467773]
[57.30823517 -281.43881226]
[71.63246918 -273.45455933]
[71.60944366 -257.05545044]
[79.51608276 -244.30847168]
[87.42272186 -231.56150818]
[95.32936096 -218.81454468]
[103.23600006 -206.06758118]
[111.14263916 -193.32061768]
[119.04927826 -180.57365417]
[121.53066254 -181.08247375]
[124.05063629 -181.33927917]
[126.58364868 -181.34149170]
[131.75634766 -195.42138672]
[136.92904663 -209.50126648]
[142.10173035 -223.58116150]
[147.27442932 -237.66104126]
[152.44712830 -251.74093628]
[149.94337463 -267.36276245]
[161.59501648 -276.64114380]
[166.76771545 -290.72103882]
[156.22792053 -305.48962402]
[156.67088318 -323.47052002]
[167.72981262 -337.45513916]
[184.81985474 -341.95065308]
[189.60937500 -356.16546631]
[194.39889526 -370.38024902]
[199.18841553 -384.59506226]
[188.57058716 -395.61868286]
[184.30303955 -410.31719971]
[187.36642456 -425.31301880]
[197.05679321 -437.16018677]
[211.14738464 -443.13632202]
[226.40025330 -441.86813354]
[239.31044006 -433.64706421]
[246.91123962 -420.36227417]
[247.45608521 -405.06646729]
[240.81974792 -391.27450562]
[228.52720642 -382.15573120]
[213.40321350 -379.80554199]
[208.61369324 -365.59072876]
[203.82417297 -351.37594604]
[199.03465271 -337.16113281]
[207.44328308 -328.42794800]
[211.36961365 -316.88186646]
[210.01211548 -304.68969727]
[203.56697083 -294.16702271]
[193.20246887 -287.33847046]
[180.84759521 -285.54833984]
[175.67489624 -271.46847534]
[178.54864502 -256.85372925]
[166.52700806 -246.56823730]
[161.35432434 -232.48834229]
[156.18162537 -218.40846252]
[151.00892639 -204.32856750]
[145.83622742 -190.24868774]
[140.66354370 -176.16879272]
[148.17262268 -167.29922485]
[150.94224548 -155.90924072]
[148.29937744 -144.38601685]
[140.71513367 -135.18621826]
[129.72378540 -130.31233215]
[127.90022278 -115.42358398]
[126.17750549 -100.52283478]
[124.55572510 -85.61076355]
[122.93393707 -70.69869995]
[121.31215668 -55.78662872]
[119.69036865 -40.87455750]
[118.06858063 -25.96249008]
[116.44680023 -11.05041981]
[114.92601013 3.87228775]
[126.19686890 13.57310200]
[129.63496399 28.22381973]
[123.71774292 42.25378799]
[110.52132416 50.20116043]
[109.10161591 65.13381958]
[107.68190002 80.06648254]
[106.26218414 94.99914551]
[112.40219879 92.81868744]
[119.20726776 92.42066193]
[126.27515411 93.93544006]
[140.28370667 99.29831696]
[154.29225159 104.66119385]
[171.29978943 96.28914642]
[188.72138977 102.90811157]
[195.63745117 119.86899567]
[209.78608704 124.85056305]
[223.93472290 129.83212280]
[238.08337402 134.81369019]
[252.22567749 127.75886536]
[267.18762207 132.84963989]
[274.09252930 147.06573486]
[268.84384155 161.97302246]
[254.55554199 168.72724915]
[239.70458984 163.32125854]
[233.10180664 148.96232605]
[218.95315552 143.98077393]
[204.80451965 138.99920654]
[190.65588379 134.01763916]
[181.69526672 141.05197144]
[170.33508301 142.91313171]
[159.37249756 139.02583313]
[151.56330872 130.24479675]
[148.92938232 118.66974640]
[134.92082214 113.30686951]
[120.91227722 107.94399261]
[130.27337646 119.66448212]
[126.14018250 134.08380127]
[111.99155426 139.06539917]
[99.73619843 130.41633606]
[99.68931580 115.41634369]
[92.13076019 128.37274170]
[90.51368713 137.34759521]
[84.38111115 141.45240784]
[76.64780426 154.30526733]
[68.91449738 167.15812683]
[61.18118668 180.01098633]
[59.44273758 188.96311951]
[53.25513840 192.98451233]
[45.34850311 205.73147583]
[37.44186401 218.47843933]
[49.07005692 220.43672180]
[59.94847488 228.60372925]
[67.45030212 242.46229553]
[69.27386475 257.35104370]
[71.09742737 272.23977661]
[72.92098236 287.12850952]
[74.74454498 302.01727295]
[88.91184998 307.94879150]
[98.20256805 320.17898560]
[100.11753845 335.41802979]
[94.14163971 349.56668091]
[81.88236237 358.81903076]
[66.63739014 360.68621826]
[52.50754166 354.66598511]
[43.29368210 342.37777710]
[41.47428513 327.12701416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 222]
[2 221]
[3 220]
[4 219]
[5 218]
[7 57]
[8 56]
[9 55]
[10 54]
[11 53]
[12 52]
[13 51]
[14 49]
[15 48]
[16 47]
[20 46]
[21 45]
[22 44]
[26 43]
[27 42]
[28 41]
[29 40]
[30 38]
[31 37]
[32 36]
[58 215]
[59 214]
[60 213]
[61 211]
[62 210]
[63 209]
[64 208]
[65 206]
[66 205]
[67 172]
[68 171]
[69 170]
[70 169]
[74 165]
[76 164]
[77 163]
[78 162]
[79 161]
[80 160]
[81 159]
[82 158]
[84 157]
[85 156]
[87 104]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
[93 98]
[107 151]
[108 150]
[109 149]
[110 148]
[111 147]
[112 146]
[114 144]
[115 143]
[119 137]
[120 136]
[121 135]
[122 134]
[175 200]
[176 199]
[177 198]
[180 193]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
