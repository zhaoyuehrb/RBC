%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACACGGACUACAGGGGAGUUUUGUUGAAGUUGCAAAGUCCUGGAGCCUCCAGAGGGCUGUCGGCGCAGUAGCAGCGAGCAGCAGAGUCCGCACGCUCCGGCGAGGGGCAGAAGAGCGCGAGGGAGCGCGGGGCAGCAGAAGCGAGAGCCGAGCGCGGACCCAGCCAGGACCCACAGCCCUCCCCAGCUGCCCAGGAAGAGCCCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[-54.01783371 145.98468018]
[-64.23998260 156.96228027]
[-79.22489929 157.63488770]
[-90.38944244 147.61726379]
[-91.33875275 132.64733887]
[-81.52990723 121.30007172]
[-96.52990723 121.30007172]
[-111.52990723 121.30007172]
[-117.88607788 133.76095581]
[-128.93836975 142.22705078]
[-142.49511719 145.09135437]
[-155.89878845 141.85063171]
[-166.54685974 133.19276428]
[-172.39720154 120.85169983]
[-186.31158447 128.38169861]
[-198.92167664 120.45486450]
[-213.91999817 120.23047638]
[-228.91831970 120.00608063]
[-237.54660034 123.00695038]
[-244.13888550 119.66447449]
[-259.13217163 119.21574402]
[-274.12545776 118.76701355]
[-289.11874390 118.31828308]
[-304.11203003 117.86955261]
[-319.10531616 117.42081451]
[-334.09860229 116.97208405]
[-349.09188843 116.52335358]
[-361.60391235 128.74855042]
[-378.74887085 128.15431213]
[-389.93487549 115.59641266]
[-404.93319702 115.37202454]
[-419.93151855 115.14762878]
[-434.92984009 114.92324066]
[-449.92816162 114.69884491]
[-459.88833618 128.36917114]
[-475.87530518 133.35981750]
[-491.52987671 127.89312744]
[-500.74813843 114.31044769]
[-515.74816895 114.31044769]
[-529.54833984 122.04774475]
[-542.27557373 114.31044769]
[-557.27557373 114.31044769]
[-572.27557373 114.31044769]
[-587.27557373 114.31044769]
[-602.27514648 114.42264557]
[-617.27349854 114.64703369]
[-632.27178955 114.87142944]
[-647.27014160 115.09581757]
[-662.26843262 115.32021332]
[-674.42846680 125.78505707]
[-690.16448975 122.66122437]
[-697.40509033 108.34505463]
[-690.59600830 93.81867981]
[-674.96051025 90.22550201]
[-662.49285889 100.32189178]
[-647.49450684 100.09749603]
[-632.49621582 99.87310791]
[-617.49786377 99.64871216]
[-602.49957275 99.42432404]
[-595.85803223 96.18083954]
[-587.27557373 99.31044769]
[-572.27557373 99.31044769]
[-557.27557373 99.31044769]
[-542.27557373 99.31044769]
[-529.54833984 91.57314301]
[-515.74816895 99.31044769]
[-500.74813843 99.31044769]
[-493.93655396 87.82759094]
[-482.24667358 81.15662384]
[-468.67901611 81.13301086]
[-456.77755737 87.86987305]
[-449.70376587 99.70052338]
[-434.70544434 99.92491913]
[-419.70712280 100.14930725]
[-404.70880127 100.37370300]
[-389.71047974 100.59809113]
[-381.81011963 90.41843414]
[-369.30236816 86.59088898]
[-356.68832397 90.72717285]
[-348.64315796 101.53006744]
[-333.64987183 101.97879791]
[-318.65658569 102.42752838]
[-303.66329956 102.87625885]
[-288.67001343 103.32499695]
[-273.67672729 103.77372742]
[-258.68344116 104.22245789]
[-243.69015503 104.67118835]
[-228.69393921 105.00775909]
[-213.69561768 105.23215485]
[-198.69729614 105.45654297]
[-185.85569763 97.91049957]
[-172.17280579 105.85337830]
[-164.22674561 91.78351593]
[-150.18870544 83.59341431]
[-133.84230042 83.60012817]
[-119.64887238 91.89652252]
[-111.52990723 106.30007172]
[-96.52990723 106.30007172]
[-81.52990723 106.30007172]
[-66.54501343 105.62709808]
[-51.60540009 104.28250885]
[-36.66578674 102.93791962]
[-28.67487717 93.85586548]
[-16.23890305 92.61380768]
[-5.97083521 100.42038727]
[8.98722172 99.29943085]
[23.94527817 98.17848206]
[38.90333557 97.05753326]
[53.86139297 95.93657684]
[56.51091766 84.06317902]
[62.16064453 73.28922272]
[70.42081451 64.35797119]
[80.72157288 57.88557434]
[92.35230255 54.31854630]
[104.51062775 53.90296555]
[116.35778046 56.66749954]
[123.85778046 43.67711639]
[131.35777283 30.68673706]
[138.85777283 17.69635582]
[134.52574158 2.49737358]
[142.28274536 -11.27232361]
[157.52667236 -15.44341755]
[171.21359253 -7.54127312]
[175.22328186 7.74590778]
[167.17687988 21.34851265]
[151.84815979 25.19635582]
[144.34815979 38.18673706]
[136.84815979 51.17711639]
[129.34815979 64.16749573]
[141.57885742 79.59214783]
[146.29904175 98.70313263]
[161.16328430 100.71662903]
[176.02752686 102.73013306]
[190.89176941 104.74362946]
[205.75602722 106.75712585]
[220.62026978 108.77062988]
[235.48451233 110.78412628]
[244.24256897 100.13990784]
[257.01519775 95.25211334]
[270.42776489 97.29761505]
[280.99285889 105.63636017]
[286.01690674 118.00617981]
[294.96990967 116.19067383]
[301.05386353 120.38779449]
[315.85122681 122.84506226]
[330.64859009 125.30233765]
[345.52984619 119.93027496]
[356.81765747 129.64801025]
[371.61502075 132.10527039]
[380.08258057 125.27664185]
[390.69207764 124.25687408]
[399.91705322 129.14234924]
[404.82412720 138.10632324]
[419.85943604 133.18185425]
[430.85150146 143.23291016]
[439.87692261 141.82090759]
[445.76644897 146.28677368]
[460.43865967 149.40544128]
[475.54595947 144.70643616]
[486.38641357 154.92080688]
[501.05865479 158.03948975]
[514.17504883 149.22273254]
[529.66784668 152.34500122]
[538.34545898 165.55390930]
[535.05957031 181.01283264]
[521.75964355 189.55027771]
[506.33630371 186.10113525]
[497.93997192 172.71170044]
[483.26776123 169.59301758]
[469.20993042 174.51509094]
[457.32000732 164.07765198]
[442.64779663 160.95898438]
[427.95263672 157.95013428]
[413.97003174 163.08195496]
[401.92529297 152.82354736]
[384.13385010 160.39553833]
[369.15774536 146.90263367]
[354.36041260 144.44535828]
[340.53756714 149.99317932]
[328.19131470 140.09970093]
[313.39395142 137.64242554]
[298.59661865 135.18515015]
[283.78128052 132.83863831]
[272.64157104 144.89569092]
[256.34707642 147.96813965]
[241.28251648 140.65051270]
[233.47100830 125.64837646]
[218.60676575 123.63487244]
[203.74252319 121.62137604]
[188.87828064 119.60787964]
[174.01402283 117.59437561]
[159.14978027 115.58087921]
[144.28553772 113.56738281]
[137.61184692 127.03019714]
[126.97960663 137.64814758]
[113.50783539 144.30372620]
[98.61440277 146.29646301]
[83.86679077 143.41661072]
[70.81716156 135.96726990]
[60.83895493 124.73246765]
[54.98234558 110.89463806]
[40.02428818 112.01558685]
[25.06623077 113.13654327]
[10.10817337 114.25749207]
[-4.84988403 115.37844086]
[-19.81907463 126.10186005]
[-35.32119751 117.87753296]
[-50.26081085 119.22212219]
[-65.20042419 120.56671143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 99]
[7 98]
[8 97]
[14 92]
[16 90]
[17 89]
[18 88]
[20 87]
[21 86]
[22 85]
[23 84]
[24 83]
[25 82]
[26 81]
[27 80]
[30 76]
[31 75]
[32 74]
[33 73]
[34 72]
[38 67]
[39 66]
[41 64]
[42 63]
[43 62]
[44 61]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[100 209]
[101 208]
[102 207]
[105 205]
[106 204]
[107 203]
[108 202]
[109 201]
[116 129]
[117 128]
[118 127]
[119 126]
[131 193]
[132 192]
[133 191]
[134 190]
[135 189]
[136 188]
[137 187]
[142 183]
[144 182]
[145 181]
[146 180]
[148 178]
[149 177]
[153 175]
[155 173]
[157 172]
[158 171]
[160 169]
[161 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
