%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGGAUGAAACCUUCCUCCUACUGCACAGCCCGCCCCCCUACAGCCCCGGUCCCCACGCCUAGAAGACAGCGGAACUAAGAAAAGAAGAGGCCUGUGGACAGAACAAUC\
) } def
/len { sequence length } bind def

/coor [
[63.06111526 208.20471191]
[53.63781357 219.87524414]
[50.98816681 235.47299194]
[36.97274399 240.51454163]
[27.54944229 252.18507385]
[18.12614250 263.85562134]
[15.47649479 279.45336914]
[1.46107221 284.49490356]
[-7.96222782 296.16546631]
[-17.38552856 307.83599854]
[-22.63171959 323.95782471]
[-39.57580566 323.37963867]
[-43.71079254 306.93768311]
[-29.05606461 298.41268921]
[-19.63276482 286.74215698]
[-10.20946407 275.07162476]
[-8.23383331 260.30862427]
[6.45560694 254.43231201]
[15.87890720 242.76177979]
[25.30220604 231.09124756]
[27.27783775 216.32824707]
[41.96727753 210.45195007]
[51.39057922 198.78140259]
[58.89057922 185.79103088]
[56.24897385 171.13253784]
[68.43219757 161.03900146]
[73.82752991 147.04292297]
[79.22286224 133.04682922]
[84.61819458 119.05074310]
[90.01352692 105.05466461]
[95.21025848 90.98362732]
[100.20735168 76.84046936]
[105.00381470 62.62800980]
[92.35066986 54.42233276]
[82.26061249 43.22964478]
[75.41699982 29.81693459]
[72.28097534 15.10122681]
[73.06044769 0.08689652]
[77.69627380 -14.20289230]
[85.86674500 -26.79590797]
[97.00985718 -36.83699417]
[110.36200714 -43.64614487]
[125.01029205 -46.76455688]
[139.95494080 -45.98553085]
[144.54980469 -60.26443863]
[137.58932495 -74.19963074]
[142.45257568 -88.61502075]
[155.78054810 -95.16489410]
[160.37541199 -109.44380188]
[164.97026062 -123.72270966]
[169.15921021 -138.12593079]
[172.93887329 -152.64192200]
[176.71855164 -167.15792847]
[168.98083496 -180.67700195]
[173.02075195 -195.34443665]
[185.95680237 -202.63786316]
[176.75018311 -215.27795410]
[177.87396240 -230.87510681]
[188.79753113 -242.06481934]
[204.36312866 -243.56364441]
[217.22113037 -234.66387939]
[221.30039978 -219.56773376]
[214.67481995 -205.40313721]
[200.47279358 -198.85818481]
[208.20919800 -186.18208313]
[204.58287048 -171.40695190]
[191.23454285 -163.37825012]
[187.45487976 -148.86225891]
[183.67520142 -134.34626770]
[185.35768127 -129.73323059]
[184.05351257 -124.01086426]
[179.24917603 -119.12785339]
[174.65431213 -104.84894562]
[170.05944824 -90.57003021]
[177.06631470 -77.47653961]
[172.60987854 -62.93024063]
[158.82872009 -55.66957855]
[154.23385620 -41.39067078]
[166.82818604 -33.30783081]
[176.90879822 -22.23181915]
[183.78410339 -8.91360569]
[186.98007202 5.74170446]
[186.27299500 20.73638916]
[181.70506287 35.04803085]
[173.58195496 47.69922256]
[162.45231628 57.82433319]
[149.07078552 64.72872162]
[134.34678650 67.93640900]
[119.28272247 67.22286987]
[120.24360657 74.66272736]
[114.35051727 81.83756256]
[109.35341644 95.98072815]
[109.84600830 104.15452576]
[104.00961304 110.44998932]
[98.61428070 124.44607544]
[93.21894836 138.44216919]
[87.82361603 152.43824768]
[82.42828369 166.43432617]
[84.68398285 182.09391785]
[72.88666534 191.18635559]
[86.04908752 183.99256897]
[101.04302216 183.56597900]
[114.59316254 189.99977112]
[123.73960114 201.88853455]
[126.48437500 216.63526917]
[122.22790527 231.01867676]
[111.89998627 241.89683533]
[97.75666809 246.89347839]
[82.88743591 244.91716003]
[70.54034424 236.39956665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[4 20]
[5 19]
[6 18]
[8 16]
[9 15]
[10 14]
[24 100]
[26 98]
[27 97]
[28 96]
[29 95]
[30 94]
[31 92]
[32 91]
[33 89]
[44 78]
[45 77]
[48 74]
[49 73]
[50 72]
[51 69]
[52 68]
[53 67]
[56 64]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
