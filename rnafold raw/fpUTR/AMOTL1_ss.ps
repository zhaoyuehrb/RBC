%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGACGGCGGCGGGAGCGCGCGAGAAGCUCUAGGACCCAGCAGCGGUUGUCGGGUUUGGGGCUGGAGGUGAAGCCCUGUGUGAAUGGGGUUGAUUGUCCGGCGCCACUUCCCCGCGCUGCCCGGCAGCCGUCUUCCCCAGCCGAGGGACUGAACUAGCCAUGAUCGCCUC\
) } def
/len { sequence length } bind def

/coor [
[315.11267090 386.00982666]
[328.93438721 391.83599854]
[319.72119141 379.99887085]
[310.50802612 368.16177368]
[301.29483032 356.32467651]
[292.08163452 344.48754883]
[282.86843872 332.65045166]
[273.65524292 320.81332397]
[264.33370972 309.06137085]
[250.31579590 304.02676392]
[247.65840149 288.43032837]
[238.22930908 276.76449585]
[228.80021667 265.09863281]
[219.37112427 253.43276978]
[209.83526611 241.85401917]
[200.19345093 230.36335754]
[190.55163574 218.87268066]
[180.90982056 207.38201904]
[171.26800537 195.89135742]
[161.62619019 184.40068054]
[154.89222717 181.28608704]
[151.91514587 172.60922241]
[137.89721680 167.57463074]
[135.23982239 151.97819519]
[125.81072998 140.31233215]
[116.38163757 128.64648438]
[106.95254517 116.98062897]
[109.15431213 131.81816101]
[100.83813477 144.30178833]
[86.29766846 147.98620605]
[73.04019165 140.96913147]
[67.91057587 126.87348938]
[73.55724335 112.97689819]
[87.06685638 106.45403290]
[72.11808777 105.21533966]
[57.16931915 103.97665405]
[42.22055054 102.73796082]
[27.27178383 101.49927521]
[12.87980366 108.07053375]
[0.83494347 99.30865479]
[-14.11382389 98.06996155]
[-29.06259155 96.83127594]
[-42.18481445 106.06094360]
[-57.54135513 101.41806793]
[-63.35198593 86.46427155]
[-55.15929031 72.67081451]
[-39.24800110 70.61887360]
[-27.82390022 81.88250732]
[-12.87513351 83.12119293]
[2.07363367 84.35988617]
[15.39637661 77.70001984]
[28.51047325 86.55050659]
[43.45923996 87.78919220]
[58.40800858 89.02788544]
[73.35677338 90.26657867]
[88.30554199 91.50526428]
[98.56571198 80.56319427]
[96.36901093 65.72491455]
[94.17231750 50.88663483]
[84.49744415 38.36835098]
[90.28746033 24.64519501]
[88.09076691 9.80691528]
[85.89406586 -5.03136301]
[83.69737244 -19.86964226]
[81.50067139 -34.70792007]
[79.30397797 -49.54619980]
[69.62910461 -62.06448746]
[75.41912079 -75.78764343]
[61.82612228 -83.03584290]
[55.18513107 -96.73806000]
[57.85432816 -111.54816437]
[68.60382843 -121.82368469]
[66.40712738 -136.66195679]
[64.21043396 -151.50024414]
[62.01373291 -166.33851624]
[59.81703568 -181.17680359]
[57.62033844 -196.01507568]
[55.42364120 -210.85336304]
[53.22694397 -225.69163513]
[42.61755371 -238.19654846]
[48.39644623 -253.54374695]
[64.61878967 -255.94534302]
[74.59642792 -242.93078613]
[68.06522369 -227.88833618]
[70.26191711 -213.05004883]
[72.45861816 -198.21177673]
[74.65531158 -183.37350464]
[76.85201263 -168.53521729]
[79.04871368 -153.69694519]
[81.24540710 -138.85865784]
[83.44210815 -124.02038574]
[96.70770264 -117.30012512]
[103.55342102 -103.89862823]
[101.16729736 -88.86001587]
[90.25740051 -77.98433685]
[99.77514648 -66.52738190]
[94.14225769 -51.74289703]
[96.33895111 -36.90461731]
[98.53565216 -22.06633949]
[100.73234558 -7.22806072]
[102.92904663 7.61021805]
[105.12574005 22.44849777]
[114.64348602 33.90544891]
[109.01059723 48.68993759]
[111.20729065 63.52821732]
[113.40399170 78.36649323]
[118.61840057 107.55153656]
[128.04750061 119.21739197]
[137.47659302 130.88323975]
[146.90568542 142.54910278]
[161.59803772 148.41810608]
[163.58099365 163.18013000]
[173.11685181 174.75888062]
[182.75866699 186.24954224]
[192.40048218 197.74020386]
[202.04229736 209.23088074]
[211.68411255 220.72154236]
[221.32592773 232.21220398]
[229.27111816 236.79751587]
[231.03697205 244.00367737]
[240.46606445 255.66954041]
[249.89515686 267.33538818]
[259.32424927 279.00125122]
[274.01660156 284.87023926]
[275.99957275 299.63226318]
[283.85919189 304.36276245]
[285.49237061 311.60015869]
[294.70553589 323.43725586]
[303.91873169 335.27435303]
[313.13192749 347.11148071]
[322.34512329 358.94857788]
[331.55831909 370.78567505]
[340.77151489 382.62280273]
[352.35025024 392.15866089]
[365.73406982 398.93164062]
[379.11788940 405.70465088]
[392.50167847 412.47766113]
[405.94714355 419.12741089]
[422.25341797 417.38439941]
[431.69610596 430.79214478]
[424.56140137 445.55792236]
[408.18887329 446.49197388]
[399.42117310 432.63339233]
[392.00222778 432.55429077]
[385.72869873 425.86145020]
[372.34487915 419.08847046]
[358.96105957 412.31546021]
[345.57723999 405.54244995]
[353.94534302 417.99136353]
[359.14782715 432.06027222]
[360.89224243 446.95849609]
[359.08062744 461.84869385]
[353.81472778 475.89398193]
[345.39056396 488.30499268]
[334.28158569 498.38418579]
[321.11209106 505.56509399]
[306.62234497 509.44409180]
[291.62664795 509.80316162]
[276.96780396 506.62219238]
[263.46972656 500.07989502]
[251.89100647 490.54397583]
[242.88244629 478.55041504]
[236.95031738 464.77325439]
[234.42803955 449.98684692]
[235.45736694 435.02221680]
[239.98046875 420.72039795]
[247.74310303 407.88522339]
[258.30899048 397.23806763]
[271.08432007 389.37734985]
[285.35107422 384.74484253]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 133]
[3 132]
[4 131]
[5 130]
[6 129]
[7 128]
[8 127]
[9 125]
[11 123]
[12 122]
[13 121]
[14 120]
[15 118]
[16 117]
[17 116]
[18 115]
[19 114]
[20 113]
[22 112]
[24 110]
[25 109]
[26 108]
[27 107]
[34 56]
[35 55]
[36 54]
[37 53]
[38 52]
[40 50]
[41 49]
[42 48]
[57 106]
[58 105]
[59 104]
[61 102]
[62 101]
[63 100]
[64 99]
[65 98]
[66 97]
[68 95]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[134 148]
[135 147]
[136 146]
[137 145]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
