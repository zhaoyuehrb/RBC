%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACUACUUGCAUGACCAAAGCCAAGAUGGCAGGUACGUCCUUUUAGAAUUUAAGGUUAGUGAAGCCAUCUAUUUCCCCGACCCCCUUCAGUGAAAAUGGUCUUUCGCAUCUGGCCCUUCUUUUUGGAGGCGUGCUUGCCAGCAGUCAAAAUGGCUCCAUUCCGGAAUAGAUUUAAUAGGAAGUGAAGCUGUGACGGCGAGGCGUUGCCCGGCCUAUCUUUGCUAGGCGUUCUCAGAAUUAGUUCUUUCUGCCC\
ACACUAGAC\
) } def
/len { sequence length } bind def

/coor [
[164.55586243 511.80282593]
[161.55323792 497.10644531]
[158.55062866 482.41003418]
[155.54800415 467.71362305]
[152.54537964 453.01721191]
[149.54277039 438.32083130]
[146.54014587 423.62442017]
[132.70263672 410.09130859]
[139.46751404 391.07907104]
[136.11732483 376.45797729]
[132.76712036 361.83691406]
[118.61266327 348.63565063]
[124.92488861 329.46838379]
[121.22900391 314.93084717]
[117.53311157 300.39328003]
[112.85487366 294.70401001]
[113.88066864 285.66149902]
[110.35737610 271.08114624]
[100.21522522 264.52670288]
[97.14659882 252.43383789]
[103.31938171 241.13336182]
[99.96918488 226.51228333]
[96.61898804 211.89118958]
[86.23454285 201.21351624]
[90.69417572 186.03385925]
[87.34397888 171.41276550]
[83.99378204 156.79167175]
[80.64358521 142.17059326]
[77.29338837 127.54950714]
[67.98081970 115.79042053]
[54.51628113 109.17935944]
[41.05173874 102.56829834]
[27.58719826 95.95723724]
[14.12265682 89.34617615]
[0.65811634 82.73511505]
[-12.80642414 76.12404633]
[-26.27096558 69.51298523]
[-39.73550797 62.90192413]
[-53.20004654 56.29086304]
[-62.24914932 55.32474899]
[-66.78431702 49.52079010]
[-80.16954041 42.75057220]
[-93.55476379 35.98035431]
[-106.93998718 29.21013832]
[-120.32521057 22.43992233]
[-129.36222839 21.36660004]
[-133.82826233 15.50928307]
[-147.13229370 8.58086300]
[-160.43630981 1.65244353]
[-173.74032593 -5.27597618]
[-185.98287964 3.77286649]
[-200.87948608 6.59741020]
[-215.46553040 2.69004726]
[-226.86181641 -7.12248135]
[-232.84289551 -20.85332489]
[-232.27156067 -35.75765610]
[-245.57557678 -42.68607712]
[-258.87960815 -49.61449432]
[-272.18362427 -56.54291534]
[-285.48764038 -63.47133636]
[-298.91278076 -70.16209412]
[-312.45474243 -76.61306763]
[-325.99670410 -83.06404877]
[-339.53866577 -89.51502991]
[-353.08062744 -95.96600342]
[-366.69812012 -102.25598907]
[-380.38922119 -108.38410187]
[-394.08032227 -114.51221466]
[-407.77142334 -120.64032745]
[-421.46252441 -126.76844788]
[-426.58963013 -126.24140167]
[-430.97857666 -127.58031464]
[-434.04690552 -130.19894409]
[-435.52545166 -133.36560059]
[-448.98999023 -139.97665405]
[-462.45452881 -146.58772278]
[-475.91906738 -153.19879150]
[-491.71670532 -152.33575439]
[-499.73104858 -164.89042664]
[-515.52868652 -164.02738953]
[-523.54302979 -176.58206177]
[-537.00756836 -183.19311523]
[-551.88146973 -177.85058594]
[-566.14080811 -184.66575623]
[-571.32580566 -199.59530640]
[-564.36029053 -213.78179932]
[-549.37677002 -218.80865479]
[-535.26470947 -211.69351196]
[-530.39654541 -196.65766907]
[-516.93200684 -190.04660034]
[-502.09741211 -191.38249207]
[-493.11999512 -178.35496521]
[-478.28543091 -179.69085693]
[-469.30801392 -166.66333008]
[-455.84347534 -160.05226135]
[-442.37893677 -153.44120789]
[-428.91439819 -146.83013916]
[-415.33441162 -140.45954895]
[-401.64331055 -134.33143616]
[-387.95220947 -128.20332336]
[-374.26110840 -122.07520294]
[-360.57000732 -115.94709015]
[-355.89593506 -116.76930237]
[-350.65280151 -114.68706512]
[-346.62966919 -109.50797272]
[-333.08767700 -103.05699158]
[-319.54571533 -96.60601807]
[-306.00375366 -90.15503693]
[-292.46179199 -83.70406342]
[-289.06140137 -84.51094818]
[-285.10360718 -83.73131561]
[-281.32916260 -81.12189484]
[-278.55923462 -76.77536011]
[-265.25521851 -69.84693909]
[-251.95118713 -62.91851807]
[-238.64717102 -55.99009705]
[-225.34313965 -49.06167984]
[-213.45896912 -58.07454300]
[-198.77972412 -61.04598236]
[-184.20635986 -57.33412933]
[-172.64262390 -47.62330246]
[-166.41654968 -33.79857635]
[-166.81190491 -18.57999802]
[-153.50788879 -11.65157795]
[-140.20387268 -4.72315836]
[-126.89984894 2.20526147]
[-113.55499268 9.05469990]
[-100.16976929 15.82491684]
[-86.78454590 22.59513283]
[-73.39932251 29.36534882]
[-60.01410294 36.13556671]
[-46.58898544 42.82632446]
[-33.12444305 49.43738556]
[-19.65990257 56.04844666]
[-6.19536257 62.65950775]
[7.26917839 69.27056885]
[20.73371887 75.88162994]
[34.19826126 82.49269104]
[47.66279984 89.10375977]
[61.12734222 95.71482086]
[74.59188080 102.32588196]
[75.17023468 90.92970276]
[80.78074646 80.53446960]
[90.63713074 73.32012177]
[103.03138733 70.96250153]
[115.62645721 74.25588226]
[127.49510956 65.08336639]
[139.36376953 55.91085052]
[151.23242188 46.73833847]
[153.18980408 41.97036743]
[156.44316101 38.73443222]
[160.20062256 37.26699829]
[163.69012451 37.45966721]
[175.87742615 28.71497726]
[188.06472778 19.97028542]
[200.25202942 11.22559261]
[212.43933105 2.48090029]
[219.14111328 -11.85077190]
[233.99253845 -12.98405552]
[246.17984009 -21.72874832]
[258.36715698 -30.47344017]
[270.55444336 -39.21813202]
[282.68969727 -48.03491211]
[294.77249146 -56.92346573]
[290.77413940 -71.56510925]
[292.33886719 -86.66200256]
[299.25506592 -100.17240143]
[310.58731079 -110.26914978]
[324.80307007 -115.58673096]
[339.97976685 -115.40599823]
[354.06484985 -109.75138092]
[365.15347290 -99.38763428]
[371.74594116 -85.71636200]
[372.95071411 -70.58649445]
[368.60482788 -56.04421616]
[359.29605103 -44.05625534]
[346.28332520 -36.24388504]
[331.32647705 -33.66366577]
[316.44833374 -36.66454697]
[303.66104126 -44.84068680]
[291.57824707 -35.95212936]
[288.06427002 -29.47867012]
[279.29913330 -27.03082848]
[267.11184692 -18.28613663]
[254.92453003 -9.54144478]
[242.73722839 -0.79675221]
[236.90718079 12.90944099]
[221.18402100 14.66820335]
[208.99671936 23.41289520]
[196.80941772 32.15758896]
[184.62211609 40.90227890]
[172.43481445 49.64697266]
[160.40493774 58.60699081]
[148.53628540 67.77951050]
[136.66761780 76.95201874]
[124.79896545 86.12453461]
[128.40863037 100.68373871]
[143.18754578 103.24953461]
[157.96647644 105.81533051]
[170.79907227 96.98570251]
[185.75045776 99.79831696]
[194.08906555 112.08664703]
[208.86799622 114.65244293]
[223.64692688 117.21823883]
[240.28686523 113.97034454]
[248.01422119 129.06088257]
[235.65257263 140.66372681]
[221.08113098 131.99716187]
[206.30220032 129.43136597]
[191.52326965 126.86557007]
[179.53065491 135.62416077]
[164.50617981 133.23260498]
[155.40068054 120.59426117]
[140.62174988 118.02846527]
[125.84282684 115.46266937]
[109.65701294 126.08473206]
[91.91447449 124.19931030]
[95.26467133 138.82038879]
[98.61486816 153.44148254]
[101.96506500 168.06256104]
[105.31526184 182.68365479]
[115.93933105 194.40711975]
[111.24007416 208.54100037]
[114.59027100 223.16207886]
[117.94046783 237.78317261]
[130.78678894 250.99739075]
[124.93772125 267.55786133]
[128.46101379 282.13818359]
[132.07066345 296.69738770]
[135.76655579 311.23495483]
[139.46244812 325.77249146]
[149.08168030 330.75970459]
[154.27748108 340.01739502]
[153.55389404 350.38909912]
[147.38821411 358.48669434]
[150.73840332 373.10778809]
[154.08860779 387.72888184]
[163.58689880 392.94274902]
[168.56175232 402.32098389]
[167.59248352 412.67263794]
[161.23655701 420.62179565]
[164.23916626 435.31820679]
[167.24179077 450.01461792]
[170.24441528 464.71099854]
[173.24702454 479.40740967]
[176.24964905 494.10382080]
[179.25227356 508.80023193]
[194.28642273 510.48223877]
[208.06414795 516.72961426]
[219.23564148 526.93023682]
[226.70642090 540.08483887]
[229.74458313 554.90454102]
[228.05249023 569.93756104]
[221.79589844 583.71112061]
[211.58776855 594.87579346]
[198.42819214 602.33770752]
[183.60643005 605.36596680]
[168.57453918 603.66381836]
[154.80519104 597.39794922]
[143.64738464 587.18237305]
[136.19424438 574.01782227]
[133.17593384 559.19403076]
[134.88818359 544.16326904]
[141.16322327 530.39813232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 247]
[2 246]
[3 245]
[4 244]
[5 243]
[6 242]
[7 241]
[9 237]
[10 236]
[11 235]
[13 231]
[14 230]
[15 229]
[17 228]
[18 227]
[21 225]
[22 224]
[23 223]
[25 221]
[26 220]
[27 219]
[28 218]
[29 217]
[30 141]
[31 140]
[32 139]
[33 138]
[34 137]
[35 136]
[36 135]
[37 134]
[38 133]
[39 132]
[41 131]
[42 130]
[43 129]
[44 128]
[45 127]
[47 126]
[48 125]
[49 124]
[50 123]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 109]
[62 108]
[63 107]
[64 106]
[65 105]
[66 102]
[67 101]
[68 100]
[69 99]
[70 98]
[74 97]
[75 96]
[76 95]
[77 94]
[79 92]
[81 90]
[82 89]
[146 196]
[147 195]
[148 194]
[149 193]
[153 192]
[154 191]
[155 190]
[156 189]
[157 188]
[159 186]
[160 185]
[161 184]
[162 183]
[163 181]
[164 180]
[197 215]
[198 214]
[199 213]
[202 210]
[203 209]
[204 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
