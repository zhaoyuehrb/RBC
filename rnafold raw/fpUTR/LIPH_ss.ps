%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGAGUCGUCUGAGCUCACUGUGAGCAAAAUCCCACAGUGGAAACUCUUAAGCCUCUGCGAAGUAAAUCAUUCUUGUGAAUGUGACACACGAUCUCUCCAGUUUCCAU\
) } def
/len { sequence length } bind def

/coor [
[110.28225708 265.55664062]
[110.62300110 250.41850281]
[115.86296844 236.21212769]
[125.43375397 224.47845459]
[138.29719543 216.49031067]
[134.92982483 201.87316895]
[131.56245422 187.25602722]
[127.98857880 172.68800354]
[124.20890808 158.17201233]
[120.42923737 143.65602112]
[116.64956665 129.14002991]
[94.93698883 131.46899414]
[77.55952454 120.18993378]
[71.54281616 101.53920746]
[56.87948608 98.37902069]
[42.21615982 95.21883392]
[23.46830177 102.35647583]
[9.52303982 89.08754730]
[-5.29559135 86.76199341]
[-20.11422157 84.43644714]
[-34.93285370 82.11090088]
[-49.75148392 79.78534698]
[-64.57011414 77.45980072]
[-79.38874817 75.13424683]
[-94.20737457 72.80870056]
[-103.79357910 84.80871582]
[-118.10132599 90.39298248]
[-133.28189087 88.05936432]
[-145.25180054 78.43559265]
[-150.79119873 64.11041260]
[-148.41000366 48.93722916]
[-138.74876404 36.99754715]
[-124.40628815 31.50308800]
[-109.24064636 33.93182755]
[-97.33130646 43.63044739]
[-91.88182831 57.99007034]
[-77.06319427 60.31562042]
[-62.24456787 62.64116669]
[-47.42593384 64.96672058]
[-32.60730362 67.29226685]
[-17.78867340 69.61781311]
[-2.97004247 71.94336700]
[11.84858799 74.26891327]
[19.68317604 67.43383026]
[30.21635246 66.09047699]
[39.91191483 70.93814850]
[45.37634659 80.55550385]
[60.03967667 83.71569061]
[74.70300293 86.87587738]
[77.59848022 82.38317108]
[81.28192902 78.51013184]
[85.62377930 75.39299774]
[90.47130585 73.14139557]
[95.65399933 71.83454895]
[97.34853363 56.93056870]
[90.31324768 42.11716843]
[99.84584808 28.77320099]
[116.14002228 30.62579346]
[122.43370819 45.76916122]
[112.25251007 58.62510300]
[110.55797577 73.52907562]
[118.29742432 76.52401733]
[125.14246368 81.81444550]
[130.40725708 89.11879730]
[133.49848938 97.95047760]
[147.71093750 93.15401459]
[150.82205200 78.17842865]
[160.94447327 66.84558868]
[175.28504944 62.13237000]
[189.96113586 65.20943451]
[201.05181885 75.15238953]
[215.26428223 70.35593414]
[229.47674561 65.55947113]
[243.68919373 60.76301575]
[257.90167236 55.96655655]
[268.32409668 43.30539322]
[284.45352173 46.26742554]
[289.69735718 61.80557251]
[278.66122437 73.93551636]
[262.69812012 70.17901611]
[248.48565674 74.97547150]
[234.27319336 79.77193451]
[220.06074524 84.56838989]
[205.84828186 89.36485291]
[203.05056763 103.99489594]
[193.24024963 115.33570099]
[178.97631836 120.27600861]
[164.05676270 117.39440918]
[152.50740051 107.36647034]
[138.29493713 112.16293335]
[131.16555786 125.36035156]
[134.94523621 139.87634277]
[138.72489929 154.39233398]
[142.50457764 168.90834045]
[147.76795959 176.55709839]
[146.17959595 183.88865662]
[149.54696655 198.50579834]
[152.91433716 213.12294006]
[167.97624207 214.67788696]
[181.71611023 221.04144287]
[192.64353943 231.52333069]
[199.57322693 244.98654175]
[201.75346375 259.97070312]
[198.94776917 274.85046387]
[191.46047974 288.01174927]
[180.10375977 298.02691650]
[166.10951233 303.80960083]
[150.99571228 304.73257446]
[136.40180969 300.69567871]
[123.91082001 292.13681030]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 98]
[6 97]
[7 96]
[8 94]
[9 93]
[10 92]
[11 91]
[14 49]
[15 48]
[16 47]
[18 43]
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[54 61]
[55 60]
[65 90]
[66 89]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
