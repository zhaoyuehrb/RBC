%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUGGAGUCCAGAGCCACUGCCUUUGCUCCAGCCGCUGCCGCCGCACCACCUCUCCUUCUCUGCCUCUGACCCUCCUUCUCGCUGCUCCCCCUGCCCAGCUGCUCCUCCCACCUGGCCAUGACCAAAGCCCCUGCUGGCACCCUGGCCCAGCUCUGAGUCCUGGGACCCUCGGUCCUCUCUCCUGGGCC\
) } def
/len { sequence length } bind def

/coor [
[106.67755127 139.94406128]
[98.59332275 140.47392273]
[90.56537628 139.38407898]
[82.91500092 136.71812439]
[74.17783356 148.91081238]
[65.44066620 161.10351562]
[56.70350266 173.29621887]
[47.96633911 185.48892212]
[39.22917175 197.68162537]
[30.49200821 209.87431335]
[32.86281204 225.26968384]
[23.82839394 237.51034546]
[9.13666344 239.67567444]
[0.39949816 251.86836243]
[-2.06144953 260.68215942]
[-8.58171272 264.18750000]
[-17.51720238 276.23562622]
[-18.85284996 292.58029175]
[-33.78930664 299.35037231]
[-46.96122742 289.58142090]
[-44.81846619 273.32287598]
[-29.56531525 267.30014038]
[-20.62982559 255.25201416]
[-11.79320240 243.13121033]
[-3.05603671 230.93850708]
[-5.72812891 216.33044434]
[2.95890975 203.84085083]
[18.29930878 201.13716125]
[27.03647423 188.94445801]
[35.77363968 176.75175476]
[44.51080322 164.55905151]
[53.24797058 152.36634827]
[61.98513412 140.17366028]
[70.72229767 127.98094940]
[62.23196411 114.61823273]
[59.51345825 99.02150726]
[62.98224258 83.57431793]
[72.10820007 70.63735962]
[85.49667358 62.18769073]
[82.81141663 47.43000031]
[80.12616730 32.67230988]
[77.44091034 17.91461945]
[74.63501740 3.17939091]
[71.70866394 -11.53238869]
[48.46821213 -22.70880127]
[43.70904922 -51.09291077]
[29.22016144 -54.97519684]
[14.73127365 -58.85748291]
[5.79592800 -46.58865738]
[-6.97015953 -38.37942886]
[-21.84048080 -35.34002686]
[-36.80394745 -37.88150406]
[-49.83687210 -45.66014481]
[-59.17666245 -57.62395859]
[-63.56018448 -72.15493011]
[-62.39460373 -87.28787231]
[-55.83755493 -100.97617340]
[-44.77582932 -111.36859894]
[-30.70542908 -117.05966949]
[-15.52926159 -117.27970886]
[-1.29978144 -111.99896240]
[10.05859280 -101.93160248]
[17.00973511 -88.43915558]
[18.61355972 -73.34636688]
[33.10244751 -69.46408081]
[47.59133530 -65.58179474]
[36.73740768 -75.93516541]
[25.88347816 -86.28853607]
[11.42478371 -90.28179932]
[-0.61033219 -99.23478699]
[-8.59191132 -111.93495941]
[-11.43897820 -126.66229248]
[-8.76594448 -141.42219543]
[-0.93483013 -154.21569824]
[10.99376965 -163.31011963]
[25.40432167 -167.47377014]
[40.34514999 -166.14276123]
[53.79277039 -159.49734497]
[63.92591476 -148.43753052]
[69.37221527 -134.46119690]
[69.39406586 -119.46121216]
[63.98842621 -105.46895599]
[65.83865356 -90.58350372]
[67.68888092 -75.69805145]
[73.20162201 -89.64830780]
[78.71435547 -103.59857178]
[67.77140045 -112.86070251]
[60.23717880 -125.03263855]
[56.83779526 -138.91610718]
[57.89307022 -153.14915466]
[63.28649902 -166.33976746]
[72.47794342 -177.20198059]
[84.55769348 -184.68124390]
[98.33650970 -188.05683899]
[112.46268463 -187.01127625]
[118.20293427 -200.86946106]
[116.33570099 -216.58009338]
[128.35455322 -225.37762451]
[134.09480286 -239.23582458]
[139.83505249 -253.09400940]
[145.57530212 -266.95220947]
[143.70806885 -282.66284180]
[155.72691345 -291.46035767]
[161.46717834 -305.31857300]
[154.08653259 -319.10479736]
[157.34483337 -334.39916992]
[169.70361328 -343.98010254]
[185.32740784 -343.32385254]
[196.83917236 -332.74020386]
[198.80337524 -317.22647095]
[190.29260254 -304.10775757]
[175.32536316 -299.57830811]
[169.58511353 -285.72012329]
[171.86293030 -271.00070190]
[159.43350220 -261.21194458]
[153.69325256 -247.35375977]
[147.95300293 -233.49557495]
[142.21273804 -219.63737488]
[144.49055481 -204.91796875]
[132.06112671 -195.12921143]
[126.32087708 -181.27102661]
[138.05766296 -170.78746033]
[145.51033020 -156.89646912]
[147.76254272 -141.26715088]
[144.52413940 -125.78462982]
[136.16825867 -112.32266998]
[123.68855286 -102.51691437]
[108.58100128 -97.56616974]
[92.66461945 -98.08583069]
[87.15187836 -84.13557434]
[81.63913727 -70.18531036]
[94.95939636 -61.93693542]
[102.52145386 -48.94437790]
[103.06192017 -34.55564117]
[97.04537201 -22.17516899]
[86.42044067 -14.45874310]
[89.34679413 0.25303599]
[93.74230957 6.20960617]
[92.19860077 15.22936535]
[94.88385773 29.98705673]
[97.56910706 44.74474716]
[100.25436401 59.50243759]
[117.45312500 63.45542526]
[131.33790588 74.34745789]
[139.27229309 90.11035919]
[139.74969482 107.75109863]
[132.67947388 123.92006683]
[142.93334961 134.86802673]
[153.18724060 145.81599426]
[163.44113159 156.76394653]
[173.69500732 167.71191406]
[183.94889832 178.65986633]
[194.20277405 189.60783386]
[205.95262146 187.67535400]
[217.06018066 191.62153625]
[224.79800415 200.35438538]
[227.32574463 211.62213135]
[224.12693787 222.59312439]
[234.01713562 233.87071228]
[243.90731812 245.14831543]
[248.10189819 246.40444946]
[251.34472656 248.70535278]
[253.42330933 251.62036133]
[254.28802490 254.69413757]
[254.04591370 257.50222778]
[263.17733765 269.40252686]
[272.30877686 281.30282593]
[281.44018555 293.20312500]
[290.57159424 305.10342407]
[299.70303345 317.00372314]
[314.14215088 325.88897705]
[309.60128784 342.22351074]
[292.64810181 342.38195801]
[287.80273438 326.13516235]
[278.67129517 314.23486328]
[269.53988647 302.33456421]
[260.40844727 290.43426514]
[251.27703857 278.53396606]
[242.14561462 266.63366699]
[232.62971497 255.03849792]
[222.73953247 243.76091003]
[212.84934998 232.48330688]
[194.55500793 232.39871216]
[181.90333557 218.74592590]
[183.25482178 199.86170959]
[173.00093079 188.91375732]
[162.74705505 177.96578979]
[152.49316406 167.01783752]
[142.23927307 156.06987000]
[131.98539734 145.12191772]
[121.73151398 134.17395020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 34]
[5 33]
[6 32]
[7 31]
[8 30]
[9 29]
[10 28]
[13 25]
[14 24]
[16 23]
[17 22]
[39 142]
[40 141]
[41 140]
[42 139]
[43 137]
[44 136]
[46 66]
[47 65]
[48 64]
[84 131]
[85 130]
[86 129]
[95 121]
[96 120]
[98 118]
[99 117]
[100 116]
[101 115]
[103 113]
[104 112]
[147 191]
[148 190]
[149 189]
[150 188]
[151 187]
[152 186]
[153 185]
[158 182]
[159 181]
[160 180]
[165 179]
[166 178]
[167 177]
[168 176]
[169 175]
[170 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
