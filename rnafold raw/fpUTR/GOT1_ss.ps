%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUUCCUUCUCCCCUGUGCCUUCGUCGUCAGAAGCUGGCGAUUGGUUAAUCGCGUUGCCAAGCUUUGGACGCGGCUCGACCAUUGGAGGCCGCGGGCCCGCCCCCGCCGGCUAGGUGAAGGUGAGUGUCUCCUCCAGUCGCAACGGCCAGACCUGACCUGCCAGCUCCGGGCGUGGGGUGAAAUCUCUUGAUUCCUAGUCUCUCGAU\
) } def
/len { sequence length } bind def

/coor [
[-13.25633717 250.92567444]
[-21.86854172 238.64439392]
[-27.64072227 224.79946899]
[-30.30323601 210.03765869]
[-29.73170662 195.04855347]
[-25.95283127 180.53234863]
[-19.14313889 167.16717529]
[-9.62073708 155.57734680]
[2.16954041 146.30430603]
[15.67692089 139.78121948]
[30.27041626 136.31280518]
[45.26622009 136.06091309]
[59.06869125 130.18794250]
[72.87116241 124.31497955]
[57.94270325 122.85173035]
[43.01424408 121.38848877]
[28.08578491 119.92523956]
[13.15732574 118.46199799]
[-1.77113438 116.99874878]
[-16.71017075 115.64774323]
[-31.65893745 114.40905762]
[-46.60770416 113.17036438]
[-61.55647278 111.93167877]
[-76.50524139 110.69298553]
[-91.09995270 114.15628815]
[-103.89837646 121.97933960]
[-116.69680786 129.80239868]
[-129.49523926 137.62545776]
[-142.29367065 145.44850159]
[-155.09210205 153.27156067]
[-167.89053345 161.09461975]
[-180.68896484 168.91767883]
[-191.04997253 182.33728027]
[-206.81333923 176.09608459]
[-205.17980957 159.22102356]
[-188.51200867 156.11924744]
[-175.71357727 148.29618835]
[-162.91516113 140.47312927]
[-150.11672974 132.65007019]
[-137.31829834 124.82701874]
[-124.51986694 117.00396729]
[-111.72143555 109.18090820]
[-98.92300415 101.35785675]
[-100.49840546 86.44081879]
[-114.64865875 81.46383667]
[-128.79890442 76.48685455]
[-142.94915771 71.50987244]
[-157.09941101 66.53289032]
[-172.73060608 74.38522339]
[-188.88679504 68.61740875]
[-195.73570251 53.25812149]
[-209.95916748 48.49439621]
[-224.18263245 43.73066711]
[-238.40609741 38.96694183]
[-252.62956238 34.20321274]
[-266.85302734 29.43948555]
[-273.39984131 30.37971115]
[-278.64990234 28.19890404]
[-281.42864990 24.31288719]
[-295.50250244 19.12377548]
[-309.57635498 13.93466377]
[-323.65020752 8.74555206]
[-340.60302734 8.93916702]
[-345.48208618 -7.29755354]
[-331.23059082 -16.48071098]
[-318.46109009 -5.32829332]
[-304.38723755 -0.13918154]
[-290.31338501 5.04993010]
[-276.23956299 10.23904133]
[-262.08929443 15.21602345]
[-247.86582947 19.97974968]
[-233.64236450 24.74347687]
[-219.41889954 29.50720596]
[-205.19544983 34.27093124]
[-190.97198486 39.03466034]
[-180.35536194 31.73121262]
[-167.27545166 31.87876511]
[-156.51062012 39.64750671]
[-152.12243652 52.38263702]
[-137.97218323 57.35961914]
[-123.82192993 62.33660126]
[-109.67167664 67.31358337]
[-95.52142334 72.29056549]
[-83.70246124 77.44551849]
[-76.76393127 86.27033997]
[-75.26654816 95.74421692]
[-60.31778336 96.98291016]
[-45.36901474 98.22159576]
[-30.42024803 99.46028900]
[-15.47147942 100.69898224]
[-8.54483891 98.11813354]
[-0.30788955 102.07028961]
[14.62057018 103.53353882]
[29.54903030 104.99678040]
[44.47748947 106.46002960]
[59.40594864 107.92327118]
[74.33441162 109.38652039]
[78.22557831 87.27380371]
[96.26383972 77.19083405]
[113.80597687 84.16867065]
[127.05136108 77.12880707]
[140.29675293 70.08894348]
[153.54214478 63.04908371]
[166.78753662 56.00922394]
[180.03292847 48.96936417]
[193.22503662 41.83015060]
[206.36311340 34.59199524]
[219.50119019 27.35383797]
[232.63926697 20.11568069]
[245.61080933 12.58315945]
[258.40924072 4.76010466]
[271.20767212 -3.06295037]
[284.00610352 -10.88600540]
[289.69723511 -18.03289604]
[297.05621338 -18.72879219]
[309.97079468 -26.35859108]
[322.88537598 -33.98838806]
[326.46203613 -39.55185318]
[331.54824829 -42.09147644]
[336.30480957 -41.64671326]
[349.44287109 -48.88486862]
[362.58096313 -56.12302780]
[375.71902466 -63.36118317]
[384.07263184 -76.79725647]
[398.95367432 -76.16183472]
[412.09176636 -83.39999390]
[418.09927368 -90.28306580]
[425.48214722 -90.64651489]
[438.72753906 -97.68637848]
[451.97293091 -104.72624207]
[465.21832275 -111.76610565]
[467.64996338 -125.01476288]
[477.13003540 -134.30793762]
[490.04034424 -136.41253662]
[501.63095093 -130.78128052]
[514.98065186 -137.62126160]
[521.19232178 -144.32064819]
[528.58282471 -144.46200562]
[542.03381348 -151.10055542]
[550.68548584 -165.03184509]
[567.06524658 -164.23455811]
[574.32299805 -149.52888489]
[564.99261475 -136.04275513]
[548.67236328 -137.64953613]
[535.22137451 -131.01100159]
[521.82061768 -124.27155304]
[508.47091675 -117.43157959]
[503.99929810 -101.21986389]
[488.88900757 -93.09768677]
[472.25817871 -98.52071381]
[459.01278687 -91.48085022]
[445.76742554 -84.44098663]
[432.52203369 -77.40113068]
[419.32992554 -70.26191711]
[406.19183350 -63.02376175]
[398.77795410 -50.10541153]
[382.95718384 -50.22310638]
[369.81912231 -42.98494720]
[356.68103027 -35.74679184]
[343.54296875 -28.50863457]
[330.51516724 -21.07381630]
[317.60058594 -13.44401836]
[304.68603516 -5.81421995]
[291.82916260 1.91242468]
[279.03073120 9.73547935]
[266.23229980 17.55853462]
[253.43386841 25.38158989]
[252.25607300 28.70656776]
[249.40840149 31.62583160]
[245.09930420 33.36035538]
[239.87742615 33.25375748]
[226.73934937 40.49191666]
[213.60127258 47.73007202]
[200.46318054 54.96822739]
[196.12086487 60.95014572]
[187.07278442 62.21475220]
[173.82739258 69.25461578]
[160.58200073 76.29447174]
[147.33660889 83.33433533]
[134.09123230 90.37419891]
[120.84583282 97.41406250]
[119.38848877 114.42655945]
[104.56889343 126.94354248]
[113.23910522 139.18394470]
[121.90932465 151.42434692]
[130.57954407 163.66473389]
[145.69750977 170.01918030]
[147.48464966 186.32066345]
[134.10250854 195.79960632]
[119.31748199 188.70489502]
[118.33913422 172.33496094]
[109.66892242 160.09455872]
[100.99871063 147.85415649]
[92.32849121 135.61375427]
[94.06896210 150.51243591]
[95.80943298 165.41111755]
[103.02419281 178.56205750]
[107.24470520 192.95606995]
[108.27381897 207.92071533]
[106.06345367 222.75697327]
[100.71686554 236.77174377]
[92.48381805 249.31036377]
[81.74890900 259.78707886]
[69.01361084 267.71249390]
[54.87285233 272.71640015]
[39.98719788 274.56500244]
[25.05202293 273.17193604]
[10.76501465 268.60232544]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 97]
[15 96]
[16 95]
[17 94]
[18 93]
[19 92]
[20 90]
[21 89]
[22 88]
[23 87]
[24 86]
[25 43]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[44 83]
[45 82]
[46 81]
[47 80]
[48 79]
[51 75]
[52 74]
[53 73]
[54 72]
[55 71]
[56 70]
[59 69]
[60 68]
[61 67]
[62 66]
[100 181]
[101 180]
[102 179]
[103 178]
[104 177]
[105 176]
[106 174]
[107 173]
[108 172]
[109 171]
[110 167]
[111 166]
[112 165]
[113 164]
[115 163]
[116 162]
[117 161]
[120 160]
[121 159]
[122 158]
[123 157]
[125 155]
[126 154]
[128 153]
[129 152]
[130 151]
[131 150]
[135 147]
[136 146]
[138 145]
[139 144]
[183 194]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
