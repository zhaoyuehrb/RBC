%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGUGAAGUGGGCGGAGCGAGCGAUUUGAACGCGAGCGGCGCGGACUUCUGCCAAGCACCGGCUCAUGUGAGGCUCGCGGCACAGCGUUCUCUGGGCUCCCCAGAAGCCAGCCUUUCGCUCCCGGACCCGGCAGCCCGAGCAGGAGCCGUGGGACCGGGCGCCAGCACCCUCUGCGGCGUGUC\
) } def
/len { sequence length } bind def

/coor [
[74.91777039 108.21529388]
[74.59028625 101.46629333]
[75.98401642 95.10075378]
[62.90910721 87.74909973]
[49.83420181 80.39744568]
[36.75929642 73.04579163]
[23.68438721 65.69413757]
[17.04149246 65.38581085]
[12.27937126 62.22958755]
[10.29479599 57.86171341]
[-2.52149558 50.06795502]
[-15.33778667 42.27419662]
[-28.15407753 34.48043823]
[-43.96538925 33.92098999]
[-50.81964111 20.69720268]
[-59.80142593 18.90490341]
[-63.78660965 12.65938568]
[-76.46796417 4.64794922]
[-90.12210083 -1.56208980]
[-104.49466705 -5.85505056]
[-118.86722565 -10.14801121]
[-133.23977661 -14.44097137]
[-147.61235046 -18.73393250]
[-159.93441772 -9.48878002]
[-175.15963745 -9.27448463]
[-187.44630432 -17.96366882]
[-192.20349121 -32.05292511]
[-206.57604980 -36.34588623]
[-218.29069519 -30.91150665]
[-230.18373108 -34.80015945]
[-236.03637695 -45.40370941]
[-250.33354187 -49.94142532]
[-264.63070679 -54.47914505]
[-278.92788696 -59.01686096]
[-293.22506714 -63.55458069]
[-307.52221680 -68.09230042]
[-321.81939697 -72.63002014]
[-335.72665405 -65.61386108]
[-350.16137695 -70.41942596]
[-356.76449585 -83.72109222]
[-371.06164551 -88.25880432]
[-385.35882568 -92.79652405]
[-399.65600586 -97.33424377]
[-413.99139404 -101.74974823]
[-428.36395264 -106.04270935]
[-442.77264404 -110.21281433]
[-457.21640015 -114.25976562]
[-470.87597656 -106.77289581]
[-485.46636963 -111.08283234]
[-492.51977539 -124.15130615]
[-506.96353149 -128.19825745]
[-521.40728760 -132.24520874]
[-538.29034424 -130.69642639]
[-544.45227051 -146.49095154]
[-530.98083496 -156.78443909]
[-517.36035156 -146.68896484]
[-502.91659546 -142.64201355]
[-488.47280884 -138.59506226]
[-475.65609741 -146.09619141]
[-460.95040894 -142.19775391]
[-453.16943359 -128.70352173]
[-438.72567749 -124.65657043]
[-431.41915894 -125.88239288]
[-424.07098389 -120.41526794]
[-409.69842529 -116.12230682]
[-402.37203979 -117.22319794]
[-395.11828613 -111.63141632]
[-380.82110596 -107.09369659]
[-366.52395630 -102.55597687]
[-352.22677612 -98.01826477]
[-339.16140747 -105.07743073]
[-324.59741211 -100.67920685]
[-317.28167725 -86.92718506]
[-302.98449707 -82.38947296]
[-288.68734741 -77.85175323]
[-274.39016724 -73.31403351]
[-260.09298706 -68.77631378]
[-245.79582214 -64.23859406]
[-231.49865723 -59.70087814]
[-214.59909058 -64.39292908]
[-202.28308105 -50.71844482]
[-187.91052246 -46.42548370]
[-176.20536804 -55.59757996]
[-161.16587830 -56.12467575]
[-148.55235291 -47.59518433]
[-143.31938171 -33.10649109]
[-128.94682312 -28.81353188]
[-114.57426453 -24.52057076]
[-100.20170593 -20.22761154]
[-85.82913971 -15.93465042]
[-72.94678497 -23.61871529]
[-69.89494324 -38.30497742]
[-66.84310150 -52.99123764]
[-63.79126358 -67.67749786]
[-60.73942184 -82.36376190]
[-57.68758392 -97.05001831]
[-60.38489151 -113.78802490]
[-45.04770279 -121.01346588]
[-33.85887909 -108.27585602]
[-43.00132370 -93.99818420]
[-46.05316162 -79.31192017]
[-49.10500336 -64.62565613]
[-52.15684128 -49.93939590]
[-55.20868301 -35.25313568]
[-58.26052475 -20.56687546]
[-62.47054672 -12.93048477]
[-68.45652771 -8.03341007]
[-55.77517319 -0.02197416]
[-43.02588272 7.88091183]
[-28.13127708 7.88289833]
[-20.36031914 21.66414642]
[-7.54402733 29.45790482]
[5.27226353 37.25166321]
[18.08855438 45.04542542]
[31.03604126 52.61923218]
[44.11094666 59.97088623]
[57.18585587 67.32254028]
[70.26076508 74.67419434]
[83.33567047 82.02584839]
[109.63410187 73.41575623]
[131.78012085 95.91499329]
[146.74516296 96.93862915]
[161.71018982 97.96226501]
[176.67521667 98.98590088]
[191.64025879 100.00953674]
[207.97164917 91.52657318]
[222.14997864 101.85060120]
[237.13031006 102.61858368]
[252.11665344 103.25865936]
[267.10791016 103.77078247]
[282.09915161 104.28289795]
[297.09042358 104.79501343]
[304.61984253 96.90380096]
[315.03808594 94.52140808]
[324.83709717 98.20154572]
[330.85296631 106.49723816]
[345.81802368 107.52087402]
[358.80618286 98.10350037]
[374.22787476 102.52510071]
[380.25289917 117.39381409]
[372.25936890 131.30363464]
[356.37924194 133.58413696]
[344.79437256 122.48590851]
[329.82934570 121.46227264]
[313.15628052 131.22760010]
[296.57830811 119.78627014]
[281.58703613 119.27415466]
[266.59579468 118.76203156]
[251.60453796 118.24991608]
[244.79597473 121.17081451]
[236.36231995 117.59891510]
[221.38200378 116.83092499]
[212.18057251 124.70635986]
[199.67926025 124.17423248]
[190.61662292 114.97456360]
[175.65158081 113.95092773]
[160.68655396 112.92729187]
[145.72152710 111.90365601]
[130.75648499 110.88002014]
[122.63708496 123.49253082]
[129.76443481 136.69104004]
[136.89179993 149.88955688]
[144.01914978 163.08807373]
[150.86694336 169.17021179]
[151.15333557 176.57333374]
[158.05430603 189.89161682]
[164.95527649 203.20988464]
[179.75012207 209.41412354]
[183.98507690 224.88810730]
[174.41146851 237.76156616]
[158.37335205 238.15904236]
[148.17378235 225.77565002]
[151.63700867 210.11087036]
[144.73602295 196.79258728]
[137.83505249 183.47430420]
[130.82063293 170.21542358]
[123.69327545 157.01690674]
[116.56592560 143.81838989]
[109.43856812 130.61988831]
[101.24765015 131.07518005]
[93.45516205 129.44012451]
[86.56935883 125.94761658]
[81.00669098 120.94736481]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 119]
[4 118]
[5 117]
[6 116]
[7 115]
[10 114]
[11 113]
[12 112]
[13 111]
[15 109]
[17 108]
[18 107]
[19 90]
[20 89]
[21 88]
[22 87]
[23 86]
[27 82]
[28 81]
[31 79]
[32 78]
[33 77]
[34 76]
[35 75]
[36 74]
[37 73]
[40 70]
[41 69]
[42 68]
[43 67]
[44 65]
[45 64]
[46 62]
[47 61]
[50 58]
[51 57]
[52 56]
[91 105]
[92 104]
[93 103]
[94 102]
[95 101]
[96 100]
[121 159]
[122 158]
[123 157]
[124 156]
[125 155]
[127 152]
[128 151]
[129 149]
[130 148]
[131 147]
[132 146]
[136 144]
[137 143]
[160 179]
[161 178]
[162 177]
[163 176]
[165 175]
[166 174]
[167 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
