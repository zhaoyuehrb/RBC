%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGCUGUGUCAAGUUCCAGAGAAAAGCUUCUGUUCGUCCAAGUUACUAACCAGGCUAAACCACAUAGACGUGAAGGAAGGGGCUAGAAGGAAGGGAGUGCCCCACUGUUGAUGGGGUAAGAGGAUCCUGUACUGAGAAGUUGACCAGAGAGGGUCUCACCAUGCGCACAGUUCCUUCUGUACCUGUGUGGAGGAAAAGUACUGAGUGAAGGGCAGAAAAAGAGAAAACAGAA\
) } def
/len { sequence length } bind def

/coor [
[-105.27989197 997.60382080]
[-117.36093140 988.71289062]
[-124.84506226 975.71337891]
[-126.46780396 960.80059814]
[-132.71568298 974.43750000]
[-138.96354675 988.07434082]
[-136.81651306 1006.37030029]
[-151.52507019 1015.95489502]
[-150.02743530 1031.70507812]
[-162.24963379 1040.21777344]
[-168.31387329 1053.93725586]
[-160.40313721 1067.28649902]
[-161.88314819 1082.73278809]
[-172.18484497 1094.33691406]
[-187.34700012 1097.63671875]
[-201.53944397 1091.36340332]
[-209.30491638 1077.92919922]
[-207.65740967 1062.49987793]
[-197.23043823 1051.00817871]
[-182.03338623 1047.87304688]
[-175.96914673 1034.15356445]
[-177.90054321 1019.38470459]
[-165.24458313 1009.89062500]
[-169.31527710 998.51025391]
[-164.38815308 987.03631592]
[-152.60041809 981.82647705]
[-146.35253906 968.18957520]
[-140.10467529 954.55273438]
[-135.06910706 940.42321777]
[-131.28416443 925.90863037]
[-127.49922943 911.39398193]
[-123.71428680 896.87933350]
[-129.26997375 880.22583008]
[-116.20887756 867.23504639]
[-112.61914825 852.67089844]
[-109.02941132 838.10681152]
[-105.53752136 823.51892090]
[-102.14363861 808.90789795]
[-98.74974823 794.29687500]
[-95.35586548 779.68585205]
[-101.50765991 771.55139160]
[-102.18935394 761.15563965]
[-96.93611145 751.90582275]
[-87.26800537 746.96630859]
[-83.48307037 732.45166016]
[-79.69812775 717.93707275]
[-75.91319275 703.42242432]
[-72.12825012 688.90783691]
[-73.57432556 685.70855713]
[-73.55213165 681.65289307]
[-71.67728424 677.43426514]
[-67.88762665 673.89099121]
[-63.52131271 659.54052734]
[-59.15499878 645.19006348]
[-54.88511658 630.81066895]
[-50.71185303 616.40289307]
[-46.53859329 601.99511719]
[-58.84106445 587.90484619]
[-60.15708923 569.09509277]
[-49.77208328 553.17694092]
[-31.74303246 546.70129395]
[-28.15329742 532.13714600]
[-24.56356239 517.57305908]
[-20.97382736 503.00891113]
[-17.38409233 488.44479370]
[-13.79435825 473.88064575]
[-10.20462322 459.31652832]
[-6.61488819 444.75241089]
[-8.26638794 440.28662109]
[-7.14127636 434.73654175]
[-2.72832322 429.84805298]
[1.25113523 415.38555908]
[5.23059368 400.92306519]
[-0.47036165 390.26550293]
[2.71477914 378.19146729]
[13.60760403 371.30383301]
[17.78086662 356.89605713]
[21.95412827 342.48828125]
[26.12738991 328.08050537]
[30.30065155 313.67272949]
[34.47391510 299.26495361]
[38.64717484 284.85717773]
[42.82043839 270.44943237]
[46.99369812 256.04165649]
[51.16696167 241.63388062]
[40.75066757 230.98651123]
[37.03768539 216.45826721]
[41.12221146 201.92613220]
[52.00368881 191.31999207]
[66.82965851 187.55996704]
[62.93879318 173.18254089]
[74.21006012 162.07987976]
[70.31919098 147.70245361]
[81.59045410 136.59977722]
[85.76371765 122.19200897]
[74.29774475 114.52196503]
[67.33666229 100.92030334]
[67.86062622 84.15831757]
[77.13473511 68.42236328]
[73.93730927 53.76710892]
[70.73988342 39.11185455]
[67.54246521 24.45660019]
[64.34503937 9.80134487]
[61.14761353 -4.85390902]
[57.95019150 -19.50916290]
[54.65446472 -34.14262390]
[43.06504822 -45.74510193]
[47.57912445 -61.51073456]
[63.55299759 -65.22119141]
[74.55411530 -53.05947113]
[69.26547241 -37.53651047]
[73.83312225 -31.74163437]
[72.60544586 -22.70658684]
[75.80287170 -8.05133247]
[79.00028992 6.60392189]
[82.19771576 21.25917625]
[85.39514160 35.91443253]
[88.59255981 50.56968689]
[91.78998566 65.22493744]
[99.13842010 66.72513580]
[109.08523560 55.49745178]
[113.83527374 69.72551727]
[121.18370819 71.22570801]
[129.86964417 58.99645996]
[138.55557251 46.76721191]
[147.24151611 34.53796005]
[155.92744446 22.30871201]
[164.61337280 10.07946205]
[173.29931641 -2.14978743]
[174.98237610 -17.88121605]
[188.66035461 -23.77717018]
[191.07235718 -32.57043457]
[197.54589844 -36.11123657]
[206.39523315 -48.22277069]
[215.24455261 -60.33430862]
[208.96192932 -74.34944916]
[210.54454041 -89.62658691]
[219.56669617 -102.05624390]
[233.60145569 -108.29491425]
[248.87355042 -106.66442108]
[261.27487183 -97.60335541]
[267.46951294 -83.54911041]
[265.79116821 -68.28219604]
[256.69128418 -55.90933609]
[242.61767578 -49.75877380]
[227.35609436 -51.48497772]
[218.50675964 -39.37343979]
[209.65744019 -27.26190376]
[200.88960266 -15.09123611]
[199.82780457 -0.23452458]
[185.52856445 6.53614664]
[176.84262085 18.76539612]
[168.15669250 30.99464607]
[159.47076416 43.22389603]
[150.78482056 55.45314407]
[142.09889221 67.68239594]
[133.41294861 79.91164398]
[134.33247375 105.56014252]
[119.89062500 123.21765900]
[100.17149353 126.36527252]
[95.99822998 140.77304077]
[99.59059906 156.18101501]
[88.61782837 166.25314331]
[92.21019745 181.66110229]
[81.23743439 191.73323059]
[91.75859070 202.83514404]
[95.28688812 217.61512756]
[90.97216034 232.08058167]
[80.06913757 242.37524414]
[65.57472992 245.80714417]
[61.40147018 260.21490479]
[57.22821045 274.62268066]
[53.05494690 289.03045654]
[48.88168716 303.43823242]
[44.70842361 317.84600830]
[40.53516006 332.25375366]
[36.36190033 346.66152954]
[32.18863678 361.06930542]
[28.01537514 375.47708130]
[32.83121490 393.25799561]
[19.69309425 404.90252686]
[15.71363544 419.36502075]
[11.73417664 433.82751465]
[7.94923878 448.34213257]
[4.35950422 462.90628052]
[0.76976907 477.47039795]
[-2.81996584 492.03451538]
[-6.40970087 506.59863281]
[-9.99943542 521.16278076]
[-13.58917046 535.72692871]
[-17.17890549 550.29101562]
[-8.39500523 557.61462402]
[-2.99599504 567.63818359]
[-1.72552943 578.90069580]
[-4.72856951 589.77636719]
[-11.53597450 598.70965576]
[-21.13733864 604.43756104]
[-32.13082123 606.16839600]
[-36.30408096 620.57617188]
[-40.47734451 634.98394775]
[-39.85848618 644.08099365]
[-44.80455399 649.55639648]
[-49.17086792 663.90686035]
[-53.53717804 678.25732422]
[-57.61363220 692.69274902]
[-61.39857101 707.20739746]
[-65.18350983 721.72198486]
[-68.96844482 736.23663330]
[-72.75337982 750.75122070]
[-66.54573059 769.94097900]
[-80.74485779 783.07977295]
[-84.13874054 797.69079590]
[-87.53263092 812.30175781]
[-90.92651367 826.91278076]
[-89.82025146 835.96350098]
[-94.46528625 841.69653320]
[-98.05501556 856.26068115]
[-101.64475250 870.82476807]
[-95.65510559 882.23608398]
[-98.93372345 894.28509521]
[-109.19966888 900.66430664]
[-112.98460388 915.17889404]
[-116.76954651 929.69354248]
[-120.55448151 944.20819092]
[-109.86666107 933.68341064]
[-95.84804535 928.34692383]
[-80.86697388 929.10021973]
[-67.45439911 935.81610107]
[-57.87629700 947.35992432]
[-53.75081253 961.78143311]
[-55.77492523 976.64422607]
[-63.60667038 989.43737793]
[-75.92293549 997.99945068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 28]
[5 27]
[6 26]
[8 23]
[10 21]
[11 20]
[29 224]
[30 223]
[31 222]
[32 221]
[34 218]
[35 217]
[36 216]
[37 214]
[38 213]
[39 212]
[40 211]
[44 209]
[45 208]
[46 207]
[47 206]
[48 205]
[52 204]
[53 203]
[54 202]
[55 200]
[56 199]
[57 198]
[61 191]
[62 190]
[63 189]
[64 188]
[65 187]
[66 186]
[67 185]
[68 184]
[71 183]
[72 182]
[73 181]
[76 179]
[77 178]
[78 177]
[79 176]
[80 175]
[81 174]
[82 173]
[83 172]
[84 171]
[85 170]
[90 165]
[92 163]
[94 161]
[95 160]
[99 119]
[100 118]
[101 117]
[102 116]
[103 115]
[104 114]
[105 113]
[106 111]
[123 157]
[124 156]
[125 155]
[126 154]
[127 153]
[128 152]
[129 151]
[131 149]
[133 148]
[134 147]
[135 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
