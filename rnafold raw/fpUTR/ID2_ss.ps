%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGACGAAGGGAAGCUCCAGCGUGUGGCCCCGGCGAGUGCGGAUAAAAGCCGCCCCGCCGGGCUCGGGCUUCAUUCUGAGCCGAGCCCGGUGCCAAGCGCAGCUAGCUCAGCAGGCGGCAGCGGCGGCCUGAGCUUCAGGGCAGCCAGCUCCCUCCCGGUCUCGCCUUCCCUCGCGGUCAGC\
) } def
/len { sequence length } bind def

/coor [
[14.92329121 438.62329102]
[9.90009689 452.75720215]
[4.87690258 466.89111328]
[-0.14629148 481.02502441]
[-0.07370462 490.18362427]
[-5.37778282 495.35614014]
[3.28887320 508.22735596]
[2.70117903 523.73327637]
[-6.91488504 535.91162109]
[-21.86174583 540.07946777]
[-36.39203262 534.63421631]
[-44.91854858 521.66973877]
[-44.16267776 506.17108154]
[-34.41506958 494.09780884]
[-19.42387581 490.09234619]
[-14.28020573 476.00183105]
[-9.25701141 461.86791992]
[-4.23381710 447.73400879]
[0.78937721 433.60009766]
[5.20487738 419.26470947]
[0.94398427 404.99255371]
[11.92474365 393.60250854]
[15.72450638 379.09176636]
[19.52426910 364.58102417]
[23.32403183 350.07025146]
[19.06313896 335.79812622]
[30.04389763 324.40805054]
[33.84366226 309.89730835]
[24.45374107 300.38818359]
[20.96654320 287.37506104]
[24.39795494 274.23516846]
[33.95378876 264.43353271]
[47.21049118 260.60952759]
[51.25744247 246.16577148]
[55.30439377 231.72200012]
[59.35134506 217.27824402]
[63.39829636 202.83448792]
[67.44525146 188.39073181]
[59.94412994 175.57398987]
[63.84255600 160.86831665]
[77.33679199 153.08735657]
[81.38374329 138.64358521]
[85.43069458 124.19982910]
[76.88349152 117.40057373]
[71.38778687 107.66111755]
[69.91864014 96.31149292]
[72.88512421 84.98798370]
[80.04234314 75.39723969]
[90.50001526 69.05934906]
[102.83003235 67.06861115]
[99.27857208 52.49510193]
[95.72710419 37.92159653]
[92.17563629 23.34809113]
[88.62416840 8.77458382]
[85.07270813 -5.79892206]
[69.22597504 -11.16896152]
[60.19017029 -27.21968079]
[64.50988007 -46.85937881]
[56.28310394 -59.40211105]
[48.05632782 -71.94484711]
[39.82954788 -84.48757935]
[31.60276985 -97.03031158]
[23.37599182 -109.57303619]
[15.14921379 -122.11576843]
[6.92243624 -134.65850830]
[-1.30434191 -147.20123291]
[-9.53112030 -159.74397278]
[-17.75789833 -172.28669739]
[-25.09935951 -177.76280212]
[-26.01592827 -185.11454773]
[-34.02736664 -197.79589844]
[-42.03880310 -210.47726440]
[-57.50861359 -213.71153259]
[-66.09040833 -226.98286438]
[-62.69276047 -242.41761780]
[-49.33143616 -250.85862732]
[-33.93347168 -247.29798889]
[-25.63420296 -233.84815979]
[-29.35744286 -218.48870850]
[-21.34600639 -205.80734253]
[-13.33456898 -193.12597656]
[-5.21516609 -180.51347351]
[3.01161194 -167.97074890]
[11.23838997 -155.42800903]
[19.46516800 -142.88528442]
[27.69194603 -130.34254456]
[35.91872406 -117.79981995]
[44.14550400 -105.25708771]
[52.37228012 -92.71435547]
[60.59906006 -80.17162323]
[68.82583618 -67.62889099]
[77.05261230 -55.08615875]
[91.97397614 -56.62012100]
[97.47678375 -70.57429504]
[91.42605591 -84.92791748]
[97.20546722 -99.00104523]
[110.92674255 -104.68103790]
[116.42955780 -118.63521576]
[121.93236542 -132.58938599]
[114.31743622 -146.24760437]
[117.31414032 -161.59536743]
[129.50753784 -171.38592529]
[145.14025879 -170.99649048]
[156.83103943 -160.61093140]
[159.05982971 -145.13299561]
[150.77426147 -131.87089539]
[135.88655090 -127.08657837]
[130.38372803 -113.13240051]
[124.88092041 -99.17822266]
[131.03201294 -85.66158295]
[125.65016174 -71.43167877]
[111.43096161 -65.07148743]
[105.92815399 -51.11730576]
[113.32839203 -26.79027557]
[99.64620972 -9.35038853]
[103.19767761 5.22311783]
[106.74914551 19.79662323]
[110.30061340 34.37012863]
[113.85207367 48.94363785]
[117.40354156 63.51714325]
[129.50862122 72.37531281]
[144.47364807 71.35167694]
[159.43867493 70.32803345]
[174.39442444 69.17668152]
[189.33979797 67.89769745]
[204.28517151 66.61871338]
[219.21908569 65.21218872]
[232.15565491 56.10419083]
[245.60745239 62.49938202]
[260.52880859 60.96541977]
[275.45016479 59.43145752]
[290.37152100 57.89749527]
[305.29290771 56.36353302]
[320.43066406 48.72911835]
[331.95727539 61.16188049]
[323.20126343 75.67975616]
[306.82684326 71.28488922]
[291.90548706 72.81885529]
[276.98413086 74.35281372]
[262.06277466 75.88677979]
[247.14141846 77.42073822]
[235.27212524 86.41902161]
[220.75305176 80.13354492]
[214.40562439 83.95433807]
[205.56416321 81.56408691]
[190.61878967 82.84307098]
[175.67341614 84.12205505]
[169.26168823 87.83391571]
[160.46232605 85.29306793]
[145.49728394 86.31670380]
[130.53225708 87.34033966]
[132.18370056 97.90488434]
[130.36906433 108.17784882]
[125.44962311 117.08022308]
[118.10347748 123.73236084]
[109.23687744 127.54028320]
[99.87445068 128.24678040]
[95.82749939 142.69053650]
[91.78054810 157.13430786]
[99.26742554 170.79389954]
[94.95748138 185.38427734]
[81.88900757 192.43768311]
[77.84205627 206.88143921]
[73.79510498 221.32519531]
[69.74815369 235.76895142]
[65.70120239 250.21272278]
[61.65425110 264.65646362]
[72.32461548 277.76580811]
[73.08006287 294.48568726]
[63.82090759 308.22842407]
[48.35440826 313.69708252]
[44.55464554 328.20782471]
[48.54375458 343.51788330]
[37.83478165 353.87002563]
[34.03501892 368.38076782]
[30.23525429 382.89151001]
[26.43549156 397.40228271]
[30.42460060 412.71231079]
[19.71562576 423.06448364]
[33.83076096 417.98876953]
[46.69086075 425.71002197]
[48.84587860 440.55441284]
[38.71223068 451.61376953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[4 16]
[6 15]
[20 179]
[22 177]
[23 176]
[24 175]
[25 174]
[27 172]
[28 171]
[33 167]
[34 166]
[35 165]
[36 164]
[37 163]
[38 162]
[41 159]
[42 158]
[43 157]
[50 120]
[51 119]
[52 118]
[53 117]
[54 116]
[55 115]
[58 92]
[59 91]
[60 90]
[61 89]
[62 88]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[70 81]
[71 80]
[72 79]
[93 113]
[94 112]
[97 109]
[98 108]
[99 107]
[121 151]
[122 150]
[123 149]
[124 147]
[125 146]
[126 145]
[127 143]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
