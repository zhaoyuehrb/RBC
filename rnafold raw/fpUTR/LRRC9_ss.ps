%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACAGGGCCAUGCCCUCGGGGCUCAAGGCCAGAGAGGCUCCGCGCUUCCAGGACCCGAGAGCUAAAGAUAAUGAAUGGGAGAGAGCGAGACUGGAGGAGGUAACGAAUAAGUCCCCACCACCUUGCCCAUAACGCGUUGCUUUCAGUCACGUUCCGCGAACUGGCGAAGUUAUAAUAUUAUGAUCACUGUUUUUAAUGGAAG\
) } def
/len { sequence length } bind def

/coor [
[63.45583725 232.88090515]
[69.17543030 218.84301758]
[79.35363007 207.61003113]
[92.76136780 200.53836060]
[90.69906616 185.68081665]
[88.63676453 170.82325745]
[86.57446289 155.96569824]
[71.99565125 152.43609619]
[63.36587143 164.70503235]
[54.73609161 176.97396851]
[46.10631180 189.24290466]
[50.06837082 207.76522827]
[39.42023468 223.04257202]
[21.30340576 225.64459229]
[13.05365944 238.17224121]
[4.80391312 250.69987488]
[-3.44583321 263.22750854]
[-7.10733175 279.78134155]
[-24.02784920 280.84552002]
[-29.73448181 264.88082886]
[-15.97346973 254.97776794]
[-7.72372341 242.45011902]
[0.52602309 229.92248535]
[8.77576923 217.39485168]
[4.10608387 206.97914124]
[5.05622339 195.48385620]
[11.50531960 185.77642822]
[21.94645500 180.33433533]
[33.83737183 180.61312866]
[42.46715164 168.34419250]
[51.09693146 156.07525635]
[59.72671127 143.80630493]
[56.29620361 137.13685608]
[45.73030090 147.78399658]
[32.33923340 141.02534485]
[34.62904358 126.20115662]
[49.43519211 123.79794312]
[46.00468826 117.12848663]
[31.00512695 117.01355743]
[16.00556755 116.89862061]
[1.00600779 116.78368378]
[-13.99355221 116.66874695]
[-28.99355125 116.66874695]
[-43.99311066 116.78368378]
[-57.73359299 124.62649536]
[-70.51977539 116.98694611]
[-85.51801300 117.21681213]
[-100.51405334 117.56159210]
[-114.23503876 126.54304504]
[-128.74974060 118.91052246]
[-129.12667847 102.51570892]
[-114.97809601 94.22418213]
[-100.85883331 102.56555176]
[-85.86279297 102.22077179]
[-79.24484253 98.92266083]
[-70.63471222 101.98738861]
[-57.96709824 94.15279388]
[-44.10804749 101.78412628]
[-29.10848618 101.66918945]
[-22.44076920 98.47288513]
[-13.87861633 101.66918945]
[1.12094295 101.78412628]
[16.12050247 101.89906311]
[31.12006187 102.01399231]
[46.11962128 102.12892914]
[47.47942734 88.48144531]
[52.22959137 75.65695953]
[60.04337311 64.48073578]
[70.39756775 55.66662979]
[82.60752869 49.77149582]
[95.87239838 47.16005325]
[109.32766724 47.98236084]
[122.10147095 52.16532898]
[133.37112427 59.41876602]
[142.41607666 69.25540161]
[148.23587036 55.43042755]
[154.05566406 41.60544968]
[159.87545776 27.78047562]
[165.69526672 13.95549870]
[171.40895081 0.08633538]
[177.01620483 -13.82620144]
[174.01383972 -31.99172783]
[188.24006653 -42.26355362]
[193.63346863 -56.26038361]
[199.02687073 -70.25721741]
[204.42027283 -84.25404358]
[209.81365967 -98.25087738]
[215.20706177 -112.24770355]
[220.60046387 -126.24453735]
[225.99386597 -140.24136353]
[219.83093262 -154.54716492]
[225.50000000 -168.66511536]
[239.17637634 -174.45236206]
[244.13832092 -188.60789490]
[248.66412354 -202.90884399]
[253.18994141 -217.20979309]
[246.16220093 -231.11117554]
[250.95573425 -245.54989624]
[264.25189209 -252.16410828]
[268.77770996 -266.46505737]
[273.30352783 -280.76599121]
[277.82931519 -295.06692505]
[282.35513306 -309.36788940]
[270.03799438 -318.15100098]
[261.03942871 -330.31164551]
[256.24105835 -344.65844727]
[256.11297607 -359.78585815]
[260.66772461 -374.21185303]
[269.45910645 -386.52313232]
[281.62576294 -395.51351929]
[295.97579956 -400.30227661]
[311.10327148 -400.42022705]
[325.52621460 -395.85580444]
[337.83160400 -387.05618286]
[346.81384277 -374.88351440]
[351.59298706 -360.53027344]
[351.70077515 -345.40270996]
[347.12670898 -330.98281860]
[338.31884766 -318.68334961]
[326.14013672 -309.70925903]
[311.78372192 -304.93975830]
[296.65606689 -304.84207153]
[292.13027954 -290.54113770]
[287.60446167 -276.24017334]
[283.07864380 -261.93923950]
[278.55285645 -247.63829041]
[285.62289429 -234.57881165]
[281.23681641 -220.01115417]
[267.49087524 -212.68397522]
[262.96505737 -198.38302612]
[258.43927002 -184.08209229]
[259.61413574 -181.53196716]
[259.84719849 -178.36172485]
[258.89682007 -174.92868042]
[256.65530396 -171.67100525]
[253.17321777 -169.05895996]
[259.42993164 -155.59089661]
[254.15966797 -141.31929016]
[239.99069214 -134.84796143]
[234.59729004 -120.85113525]
[229.20388794 -106.85430908]
[223.81050110 -92.85747528]
[218.41709900 -78.86064148]
[213.02369690 -64.86381531]
[207.63029480 -50.86698532]
[202.23689270 -36.87015533]
[206.85499573 -25.68659782]
[202.47248840 -13.97961044]
[190.92874146 -8.21894550]
[185.32148743 5.69359159]
[185.73701477 13.07614994]
[179.52023315 19.77529526]
[173.70043945 33.60027313]
[167.88064575 47.42524719]
[162.06085205 61.25022507]
[156.24104309 75.07520294]
[162.79365540 88.56829071]
[177.25744629 92.54300690]
[191.72125244 96.51773071]
[205.33268738 88.48627472]
[220.61546326 92.51277161]
[228.50256348 106.20835876]
[224.31471252 121.44770050]
[210.53649902 129.18955994]
[195.34228516 124.84082794]
[187.74653625 110.98153687]
[173.28273010 107.00681305]
[158.81892395 103.03208923]
[155.13548279 109.56525421]
[147.76858521 122.63157654]
[144.08514404 129.16474915]
[154.97235107 139.48310852]
[165.85955811 149.80148315]
[176.74676514 160.11984253]
[187.63397217 170.43821716]
[198.52117920 180.75659180]
[214.58694458 184.04641724]
[219.51335144 199.68811035]
[208.23251343 211.59083557]
[192.34921265 207.51008606]
[188.20280457 191.64379883]
[177.31559753 181.32542419]
[166.42839050 171.00704956]
[155.54118347 160.68869019]
[144.65397644 150.37031555]
[133.76676941 140.05195618]
[124.23139954 147.02226257]
[113.27570343 151.73426819]
[101.43202209 153.90339661]
[103.49432373 168.76095581]
[105.55661774 183.61851501]
[107.61891937 198.47605896]
[122.44583130 201.62861633]
[135.29867554 209.66479492]
[144.62542725 221.61416626]
[149.29983521 236.03379822]
[148.75743103 251.18244934]
[143.06370544 265.23083496]
[132.90623474 276.48257446]
[119.51155090 283.57891846]
[104.49713898 285.66299438]
[89.67607117 282.48312378]
[76.83805084 274.42327881]
[67.53333282 262.45675659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 192]
[5 191]
[6 190]
[7 189]
[8 32]
[9 31]
[10 30]
[11 29]
[14 24]
[15 23]
[16 22]
[17 21]
[38 65]
[39 64]
[40 63]
[41 62]
[42 61]
[43 59]
[44 58]
[46 56]
[47 54]
[48 53]
[75 156]
[76 155]
[77 154]
[78 153]
[79 152]
[80 150]
[81 149]
[83 146]
[84 145]
[85 144]
[86 143]
[87 142]
[88 141]
[89 140]
[90 139]
[93 136]
[94 131]
[95 130]
[96 129]
[99 126]
[100 125]
[101 124]
[102 123]
[103 122]
[157 168]
[158 167]
[159 166]
[171 186]
[172 185]
[173 184]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
