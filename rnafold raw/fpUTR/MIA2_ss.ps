%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACAGUGUUUGUCUCUCAAGUUAAACCAACAAGCCGAUAGAAAAAGGUAGUUAUCAAGAGAUUUUUAAAACUUCAACCCUUUUUCUCUUAUAGUUAGUGAAGAGAGUAGAAUAUCUCCAGUUUUGGCUGACAUCUCUACAACCUGAACAAUUGGCUUAAACUUCACUUGGGAUUCCCGGUUGCUUGUUUUAGC\
) } def
/len { sequence length } bind def

/coor [
[93.04759216 627.48522949]
[89.22369385 641.98962402]
[85.39979553 656.49407959]
[81.57589722 670.99847412]
[77.75199890 685.50286865]
[84.55458069 700.03228760]
[77.30751801 714.34521484]
[61.57013321 717.46197510]
[49.41479874 706.99163818]
[50.16604996 690.96618652]
[63.24759293 681.67895508]
[67.07148743 667.17456055]
[70.89538574 652.67016602]
[74.71928406 638.16577148]
[78.54318237 623.66131592]
[65.62100983 605.94921875]
[70.04586029 584.19464111]
[89.33237457 572.65515137]
[91.73854828 557.84942627]
[94.14471436 543.04364014]
[96.55088806 528.23791504]
[98.95705414 513.43212891]
[96.93368530 509.09268188]
[97.62423706 503.43481445]
[101.68663788 498.19134521]
[104.56853485 483.47079468]
[107.45043945 468.75024414]
[110.33233643 454.02969360]
[89.61901855 438.19161987]
[82.77101135 413.84030151]
[91.63245392 390.98059082]
[111.78349304 378.43252563]
[110.57649994 363.48117065]
[109.36949921 348.52981567]
[108.16249847 333.57846069]
[106.95550537 318.62710571]
[105.74850464 303.67575073]
[104.54150391 288.72439575]
[103.33450317 273.77301025]
[94.59817505 261.70962524]
[101.19993591 247.33160400]
[89.20059967 241.46176147]
[81.61051941 230.33815002]
[80.50255585 216.80876160]
[86.27307129 204.40209961]
[97.51042938 196.40705872]
[96.54445648 181.43818665]
[95.57847595 166.46932983]
[94.61250305 151.50045776]
[86.07164764 139.29788208]
[92.90418243 125.02807617]
[91.93820190 110.05921173]
[85.72697449 96.40562439]
[75.07773590 85.84182739]
[64.42849731 75.27803040]
[56.12025452 71.44911194]
[53.69451523 64.45722961]
[43.21684647 53.72324753]
[32.73917389 42.98926163]
[22.26150322 32.25527954]
[11.78383350 21.52129364]
[1.30616283 10.78730869]
[-11.84581947 18.18242836]
[-26.46389580 21.92063904]
[-41.55138397 21.74706650]
[-56.07959366 17.67354584]
[-69.05796051 9.97781277]
[-79.60160828 -0.81542194]
[-86.99165344 -13.97025871]
[-90.72422028 -28.58977890]
[-90.54482269 -43.67719650]
[-86.46569061 -58.20383072]
[-78.76494598 -71.17922974]
[-67.96764374 -81.71871185]
[-54.80995178 -89.10366821]
[-40.18899155 -92.83058929]
[-25.10164261 -92.64537048]
[-10.57658577 -88.56063080]
[2.39583921 -80.85487366]
[12.93114853 -70.05350494]
[20.31102753 -56.89296341]
[24.03230476 -42.27056503]
[23.84125519 -27.18329048]
[19.75090790 -12.65981007]
[12.04014683 0.30963847]
[22.51781845 11.04362297]
[32.99548721 21.77760696]
[43.47315979 32.51159286]
[53.95082855 43.24557495]
[64.42849731 53.97956085]
[74.99229431 64.62879944]
[85.64153290 75.19258881]
[96.29076385 85.75638580]
[111.13336182 83.58905029]
[118.31727600 70.42123413]
[125.50119019 57.25341797]
[132.68510437 44.08560181]
[139.86901855 30.91778755]
[147.05293274 17.74997139]
[146.86999512 1.92982256]
[159.75765991 -5.53726244]
[166.94157410 -18.70507812]
[174.12548828 -31.87289429]
[181.30940247 -45.04071045]
[177.07752991 -60.03167725]
[184.55061340 -73.28337860]
[198.86828613 -77.22543335]
[198.68534851 -93.04558563]
[211.57301331 -100.51266479]
[218.75692749 -113.68048096]
[225.94084167 -126.84829712]
[228.21884155 -143.64851379]
[244.99310303 -146.11030579]
[252.00225830 -130.67308044]
[239.10865784 -119.66438293]
[231.92474365 -106.49656677]
[224.74082947 -93.32875061]
[225.43760681 -78.45045471]
[212.03610229 -70.04151917]
[216.47093201 -55.86873245]
[209.37300110 -42.41235733]
[194.47721863 -37.85679626]
[187.29330444 -24.68898201]
[180.10939026 -11.52116489]
[172.92547607 1.64665115]
[173.62225342 16.52495003]
[160.22074890 24.93388557]
[153.03683472 38.10169983]
[145.85292053 51.26951599]
[138.66900635 64.43733215]
[131.48509216 77.60514832]
[124.30117798 90.77296448]
[139.06059265 93.44870758]
[148.42790222 105.16423798]
[147.79054260 120.15068817]
[137.46235657 131.02857971]
[122.52905273 132.44151306]
[110.34394836 123.69375610]
[106.90706635 109.09323883]
[107.87304688 124.06210327]
[116.48299408 137.33535767]
[109.58136749 150.53448486]
[110.54734039 165.50334167]
[111.51332092 180.47221375]
[112.47929382 195.44107056]
[126.89282990 204.28024292]
[133.14028931 219.81278992]
[128.94537354 235.84896851]
[116.15129089 246.12460327]
[124.97396088 259.25741577]
[118.28586578 272.56600952]
[119.49286652 287.51739502]
[120.69986725 302.46875000]
[121.90686035 317.42010498]
[123.11386108 332.37145996]
[124.32086182 347.32281494]
[125.52785492 362.27416992]
[126.73485565 377.22555542]
[133.60488892 378.32504272]
[140.22076416 380.71490479]
[146.33975220 384.33792114]
[151.73181152 389.09109497]
[156.18814087 394.82855225]
[159.52929688 401.36587524]
[161.61216736 408.48596191]
[162.33598328 415.94628906]
[161.64677429 423.48706055]
[159.54031372 430.84033203]
[156.06318665 437.73953247]
[151.31213379 443.92907715]
[160.70491028 455.62420654]
[170.09768677 467.31930542]
[184.73008728 475.88256836]
[180.55216980 492.31365967]
[163.60662842 492.84759521]
[158.40257263 476.71209717]
[149.00979614 465.01696777]
[139.61701965 453.32186890]
[125.05288696 456.91159058]
[122.17098999 471.63214111]
[119.28908539 486.35269165]
[116.40718842 501.07327271]
[113.76280975 515.83831787]
[111.35663605 530.64410400]
[108.95046997 545.44982910]
[106.54430389 560.25561523]
[104.13813019 575.06134033]
[111.02296448 579.71966553]
[116.21246338 586.17016602]
[119.26323700 593.83013916]
[119.92399597 602.01489258]
[118.15609741 609.99908447]
[114.13526154 617.08105469]
[108.23428345 622.64440918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[18 187]
[19 186]
[20 185]
[21 184]
[22 183]
[25 182]
[26 181]
[27 180]
[28 179]
[32 158]
[33 157]
[34 156]
[35 155]
[36 154]
[37 153]
[38 152]
[39 151]
[41 149]
[46 145]
[47 144]
[48 143]
[49 142]
[51 140]
[52 139]
[53 93]
[54 92]
[55 91]
[57 90]
[58 89]
[59 88]
[60 87]
[61 86]
[62 85]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
[99 127]
[101 125]
[102 124]
[103 123]
[104 122]
[107 119]
[109 117]
[110 116]
[111 115]
[170 178]
[171 177]
[172 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
