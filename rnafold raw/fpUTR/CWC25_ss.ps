%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUGACGCCCUCCCGGAAGUGACCUCUAGAGCGGUGGUGAAACUGGCAGUUGACGGCUCCUGGGACUAGAUCCCGCGAGGUAGCCCCCGAACUAUUUCUCUACGUUUUCUCUUGAUCCUCCCGAAAUCUUCCAGAUCCGCGUAGUGAGGAAUCGUCUCCACCGUC\
) } def
/len { sequence length } bind def

/coor [
[1.55289197 265.83447266]
[-6.18870211 278.68234253]
[-13.93029594 291.53021240]
[-14.42546368 307.34365845]
[-27.62127686 314.25161743]
[-28.11644363 330.06506348]
[-41.31225586 336.97302246]
[-49.05385208 349.82089233]
[-45.46827316 364.97943115]
[-53.50237274 377.89871216]
[-67.97582245 381.22360229]
[-75.71741486 394.07147217]
[-75.48291016 410.46893311]
[-89.70298767 418.63726807]
[-103.74925995 410.17355347]
[-103.17211914 393.78457642]
[-88.56528473 386.32986450]
[-80.82369232 373.48199463]
[-84.64710236 359.13220215]
[-76.97904968 345.99234009]
[-61.90171814 342.07931519]
[-54.16012573 329.23144531]
[-54.21868896 314.33694458]
[-40.46914673 306.51004028]
[-40.52770615 291.61553955]
[-26.77816391 283.78860474]
[-19.03656960 270.94073486]
[-11.29497623 258.09289551]
[-16.39179420 247.83137512]
[-15.87789726 236.26507568]
[-9.76560974 226.29113770]
[0.51594871 220.46411133]
[12.45343971 220.34208679]
[20.67001724 207.79267883]
[28.88659477 195.24325562]
[37.10317230 182.69384766]
[45.31975174 170.14442444]
[53.53632736 157.59501648]
[61.75290680 145.04559326]
[62.25130463 130.15933228]
[76.28388977 122.85199738]
[84.50047302 110.30258179]
[72.65110016 119.49999237]
[57.65111160 119.51957703]
[45.77775955 110.35314178]
[41.99985123 95.83669281]
[47.89837646 82.04512024]
[61.00490189 74.74998474]
[75.83455658 77.00417328]
[86.18190002 87.86549377]
[79.92748260 74.23162842]
[73.67307281 60.59776306]
[67.41866302 46.96389389]
[50.80968475 43.87100601]
[39.41859436 31.61997032]
[37.57746887 15.15998936]
[45.81358719 0.98190659]
[39.30533218 -12.53262615]
[32.79707718 -26.04715919]
[26.28882027 -39.56169128]
[19.65448952 -53.01478195]
[12.89466572 -66.40525818]
[6.13484097 -79.79573059]
[-0.99787730 -92.99134827]
[-8.49787712 -105.98172760]
[-15.99787712 -118.97210693]
[-23.49787712 -131.96249390]
[-38.55976486 -137.48690796]
[-43.49463272 -152.75212097]
[-34.51687622 -166.04795837]
[-18.51346016 -167.17500305]
[-7.76083565 -155.26867676]
[-10.50749588 -139.46249390]
[-3.00749612 -126.47210693]
[4.49250364 -113.48172760]
[11.99250412 -100.49134827]
[15.32846451 -99.23332214]
[18.20850945 -96.27359772]
[19.82883263 -91.85013580]
[19.52531433 -86.55555725]
[26.28513908 -73.16508484]
[33.04496384 -59.77460861]
[38.89082336 -55.20153046]
[39.80335236 -46.06995010]
[46.31161118 -32.55541611]
[52.81986618 -19.04088211]
[59.32812119 -5.52634954]
[72.65132141 -4.36495352]
[83.74381256 3.29820275]
[89.63859558 15.54373074]
[88.69473267 29.21004868]
[81.05252838 40.70948410]
[87.30693817 54.34334946]
[93.56135559 67.97721863]
[99.81576538 81.61108398]
[112.59069061 89.47246552]
[127.58020020 88.91159821]
[142.56970215 88.35073090]
[157.55921936 87.78986359]
[172.54873657 87.22899628]
[187.53823853 86.66812897]
[202.52775574 86.10726166]
[217.50415039 85.26620483]
[232.46220398 84.14524841]
[247.42027283 83.02429962]
[262.37832642 81.90335083]
[277.33639526 80.78239441]
[283.70428467 68.53126526]
[295.20880127 61.09452057]
[308.77780151 60.33037949]
[320.85040283 66.33197021]
[328.31158447 77.43096161]
[343.28796387 76.58990479]
[358.26437378 75.74884796]
[371.60900879 67.24993896]
[384.75009155 74.26144409]
[399.72650146 73.42038727]
[404.71398926 59.06095505]
[414.82070923 47.70653152]
[428.50540161 41.08858490]
[443.68130493 40.21629715]
[458.03414917 45.22268677]
[469.37527466 55.34432220]
[475.97521973 69.03771973]
[476.82754517 84.21474457]
[471.80227661 98.56100464]
[461.66571045 109.88879395]
[447.96365356 116.47071838]
[432.78552246 117.30307770]
[418.44589233 112.25894165]
[407.13143921 102.10750580]
[400.56753540 88.39678955]
[385.59115601 89.23784637]
[373.31771851 97.67659760]
[359.10543823 90.72525024]
[344.12902832 91.56630707]
[329.15261841 92.40736389]
[320.72760010 106.47401428]
[305.43084717 112.82462311]
[289.19836426 108.78092957]
[278.45733643 95.74045563]
[263.49926758 96.86140442]
[248.54121399 97.98235321]
[233.58316040 99.10330963]
[218.62510681 100.22425842]
[214.86302185 103.22747803]
[209.16377258 103.87156677]
[203.08862305 101.09677124]
[188.09910583 101.65763855]
[173.10960388 102.21850586]
[158.12008667 102.77937317]
[143.13058472 103.34024048]
[128.14106750 103.90110779]
[113.15155792 104.46197510]
[110.86862183 111.06419373]
[105.21380615 116.31838226]
[97.04988861 118.51915741]
[88.83330536 131.06857300]
[87.74720001 146.85246277]
[74.30232239 153.26217651]
[66.08574677 165.81158447]
[57.86916733 178.36100769]
[49.65258789 190.91041565]
[41.43601227 203.45983887]
[33.21943283 216.00926208]
[25.00285721 228.55867004]
[29.59579659 246.90501404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[5 24]
[7 22]
[8 21]
[11 18]
[12 17]
[33 166]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[39 160]
[41 158]
[42 157]
[50 95]
[51 94]
[52 93]
[53 92]
[57 87]
[58 86]
[59 85]
[60 84]
[61 82]
[62 81]
[63 80]
[64 76]
[65 75]
[66 74]
[67 73]
[96 154]
[97 153]
[98 152]
[99 151]
[100 150]
[101 149]
[102 148]
[103 145]
[104 144]
[105 143]
[106 142]
[107 141]
[112 137]
[113 136]
[114 135]
[116 133]
[117 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
