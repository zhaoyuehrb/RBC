%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUUUCCGGCCUUUGUAGUUUAUCAUUCUUUGGGCUGCGGUUGUCAAGGAUUCAGAGCAGAUGUGAUCUGCGCUAGGUGGCAUCUCCUCUCACGGAUGCCUCGAUCUCGGGGUUUCCAGAAGAAAAGAUCAAGGGAGAAUUAUCAAGAAUAGAUUAUUUUUCUGAAUAGUUAAACCUUUG\
) } def
/len { sequence length } bind def

/coor [
[120.45226288 163.47145081]
[105.00590515 166.49707031]
[89.28065491 165.81805420]
[74.15259552 161.47221375]
[60.46453857 153.70166016]
[48.97905731 142.93930054]
[36.48905945 151.24592590]
[23.99906540 159.55255127]
[11.65430641 168.07351685]
[-0.54153466 176.80630493]
[-12.73737621 185.53907776]
[-15.44658184 200.87850952]
[-27.93930054 209.56105042]
[-42.54640198 206.88371277]
[-54.74224472 215.61648560]
[-66.93808746 224.34927368]
[-79.13392639 233.08204651]
[-91.32976532 241.81483459]
[-103.52561188 250.54760742]
[-115.72145081 259.28039551]
[-127.91728973 268.01318359]
[-140.11312866 276.74594116]
[-152.30897522 285.47872925]
[-152.28144836 300.99578857]
[-161.40711975 313.54574585]
[-176.17698669 318.30291748]
[-190.91174316 313.43804932]
[-199.94555664 300.82180786]
[-199.80474854 285.30535889]
[-190.54347229 272.85513306]
[-175.72285461 268.25848389]
[-161.04176331 273.28289795]
[-148.84591675 264.55010986]
[-136.65007019 255.81732178]
[-124.45423126 247.08454895]
[-112.25839233 238.35176086]
[-100.06254578 229.61898804]
[-87.86670685 220.88621521]
[-75.67086792 212.15342712]
[-63.47502518 203.42065430]
[-51.27918243 194.68786621]
[-49.10857773 179.99691772]
[-36.86466217 170.96690369]
[-21.47015572 173.34324646]
[-9.27431488 164.61045837]
[2.92152667 155.87768555]
[4.57317209 151.37136841]
[9.08776569 147.86601257]
[15.69244194 147.06256104]
[28.18243790 138.75593567]
[40.67243576 130.44931030]
[34.02879333 109.73243713]
[34.40707779 87.97965240]
[41.76702118 67.50630188]
[55.32523727 50.49155807]
[46.59245682 38.29571533]
[37.85967636 26.09987450]
[29.12689590 13.90403366]
[14.80177784 7.18826199]
[13.68300533 -7.66426706]
[4.95022535 -19.86010933]
[-3.78255486 -32.05595016]
[-12.51533508 -44.25179291]
[-21.24811554 -56.44763184]
[-29.98089600 -68.64347076]
[-44.30601120 -75.35924530]
[-45.42478561 -90.21177673]
[-54.15756607 -102.40761566]
[-62.89034653 -114.60345459]
[-71.62312317 -126.79930115]
[-80.35590363 -138.99514771]
[-94.49323273 -148.35314941]
[-89.41453552 -164.52853394]
[-72.46536255 -164.12611389]
[-68.16006470 -147.72792053]
[-59.42728424 -135.53207397]
[-50.69450378 -123.33623505]
[-41.96172333 -111.14039612]
[-33.22894287 -98.94455719]
[-19.52845192 -93.10111237]
[-17.78505325 -77.37625122]
[-9.05227375 -65.18041229]
[-0.31949347 -52.98457336]
[8.41328716 -40.78873062]
[17.14606667 -28.59288788]
[25.87884712 -16.39704704]
[39.57933807 -10.55360413]
[41.32273483 5.17125320]
[50.05551529 17.36709404]
[58.78829575 29.56293678]
[67.52108002 41.75877762]
[81.83213043 35.83732224]
[97.12317657 33.37685013]
[112.56939697 34.51007080]
[127.33761597 39.17586517]
[134.98660278 26.27265167]
[142.63558960 13.36943531]
[143.01701355 -2.44717240]
[156.16279602 -9.44985294]
[163.81179810 -22.35306740]
[171.46078491 -35.25628281]
[179.10977173 -48.15950012]
[186.75875854 -61.06271362]
[194.40774536 -73.96592712]
[194.05531311 -90.36128998]
[208.21627808 -98.63166809]
[222.32305908 -90.26920319]
[221.86380005 -73.87648773]
[207.31095886 -66.31694031]
[199.66197205 -53.41372681]
[192.01298523 -40.51050949]
[184.36399841 -27.60729408]
[176.71501160 -14.70407867]
[169.06600952 -1.80086362]
[169.23170471 13.09282017]
[155.53880310 21.01842499]
[147.88981628 33.92163849]
[140.24082947 46.82485580]
[146.03395081 51.75275803]
[151.22825623 57.30824661]
[155.75621033 63.41905975]
[159.55889893 70.00570679]
[162.58686829 76.98251343]
[164.80072021 84.25872803]
[166.17166138 91.73969269]
[166.68185425 99.32811737]
[166.32466125 106.92527008]
[165.10475159 114.43235016]
[163.03796387 121.75169373]
[160.15119934 128.78810120]
[156.48199463 135.45002747]
[168.20947266 144.80236816]
[179.93693542 154.15472412]
[191.66441345 163.50706482]
[203.39189148 172.85942078]
[215.11935425 182.21176147]
[232.45075989 179.92951965]
[245.81561279 190.66650391]
[247.26350403 207.41014099]
[259.15066528 216.55867004]
[271.03781128 225.70721436]
[282.92495728 234.85574341]
[294.81210327 244.00427246]
[306.69927979 253.15280151]
[322.16662598 251.30923462]
[334.09155273 260.75646973]
[335.75381470 275.51361084]
[347.64096069 284.66213989]
[359.52810669 293.81066895]
[371.41525269 302.95919800]
[385.58267212 297.02792358]
[400.81561279 298.99090576]
[413.01647949 308.32012939]
[418.90332031 322.50607300]
[416.89257812 337.73275757]
[407.52514648 349.90432739]
[393.32083130 355.74667358]
[378.10049438 353.68823242]
[365.95837402 344.28271484]
[360.16058350 330.06015015]
[362.26672363 314.84634399]
[350.37957764 305.69781494]
[338.49243164 296.54928589]
[326.60525513 287.40075684]
[311.91445923 289.57232666]
[299.72888184 280.46374512]
[297.55075073 265.03994751]
[285.66357422 255.89141846]
[273.77642822 246.74288940]
[261.88928223 237.59436035]
[250.00213623 228.44583130]
[238.11497498 219.29730225]
[225.68054199 222.73271179]
[213.35661316 218.30541992]
[205.72726440 207.42372131]
[205.76701355 193.93923950]
[194.03953552 184.58688354]
[182.31207275 175.23454285]
[170.58459473 165.88220215]
[158.85711670 156.52984619]
[147.12965393 147.17750549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 51]
[7 50]
[8 49]
[9 46]
[10 45]
[11 44]
[14 41]
[15 40]
[16 39]
[17 38]
[18 37]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[55 91]
[56 90]
[57 89]
[58 88]
[60 86]
[61 85]
[62 84]
[63 83]
[64 82]
[65 81]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[95 118]
[96 117]
[97 116]
[99 114]
[100 113]
[101 112]
[102 111]
[103 110]
[104 109]
[131 181]
[132 180]
[133 179]
[134 178]
[135 177]
[136 176]
[139 172]
[140 171]
[141 170]
[142 169]
[143 168]
[144 167]
[147 164]
[148 163]
[149 162]
[150 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
