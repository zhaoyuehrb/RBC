%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAGCGACGUGUCCCACUGUCCUGGCUCCGUGGGUCCAGUGAGAUUGGGCCUGGGCGCUGGAGCUGCUGUGGCUCCCGCCGCGGCGGCUGCCAUGGAGGCCAUGCCAGAGCCCAGAACUCACGCCGGGGGAGGCCGAGACAGCCGGCGGUACUCAUAGAUGAGGCAGCGGCGGCGGCGGCGGCGGCGGCAGCCCGGGCUCUCCAUGAGCAGGCGGCGGCGGCGACGGGUGCGGCGGCACCGGCAGUUUUCGGU\
CCCCAGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[253.79983521 1076.01110840]
[262.64346313 1063.89538574]
[275.61819458 1056.36840820]
[290.52572632 1054.70520020]
[304.84024048 1059.18786621]
[316.13577271 1069.05578613]
[311.28283691 1054.86254883]
[306.16278076 1049.56835938]
[306.45739746 1040.47363281]
[301.77182007 1026.22412109]
[290.44604492 1016.55072021]
[293.48538208 1001.02416992]
[288.79980469 986.77478027]
[284.11419678 972.52539062]
[279.42861938 958.27600098]
[274.65930176 944.05438232]
[269.80636597 929.86114502]
[258.36758423 920.32159424]
[261.22399902 904.76037598]
[256.37109375 890.56707764]
[251.51817322 876.37377930]
[246.66526794 862.18054199]
[241.81234741 847.98724365]
[236.87600708 833.82275391]
[231.85643005 819.68756104]
[220.30618286 810.28326416]
[222.97932434 794.68951416]
[217.95974731 780.55432129]
[212.94017029 766.41912842]
[207.92059326 752.28393555]
[202.73860168 747.05035400]
[202.92617798 737.95275879]
[198.07325745 723.75946045]
[193.22033691 709.56622314]
[188.36743164 695.37292480]
[174.29226685 690.18737793]
[161.39103699 697.83972168]
[148.48979187 705.49200439]
[135.58856201 713.14434814]
[122.68731689 720.79669189]
[109.78607941 728.44903564]
[96.88484192 736.10131836]
[86.34645844 749.38208008]
[70.66739655 742.93200684]
[72.52498627 726.08013916]
[89.23252106 723.20007324]
[102.13375854 715.54779053]
[115.03499603 707.89544678]
[127.93623352 700.24310303]
[140.83746338 692.59082031]
[153.73870850 684.93847656]
[166.63993835 677.28613281]
[166.16223145 663.82012939]
[171.98963928 652.86425781]
[181.63227844 646.88360596]
[179.87141418 631.98730469]
[178.11053467 617.09106445]
[176.34967041 602.19476318]
[172.45692444 595.94256592]
[174.65678406 587.11297607]
[173.07130432 572.19702148]
[171.48582458 557.28100586]
[169.90034485 542.36505127]
[166.08142090 536.06750488]
[168.38502502 527.26440430]
[166.97515869 512.33081055]
[165.56527710 497.39721680]
[164.15541077 482.46362305]
[162.74554443 467.53002930]
[161.33567810 452.59643555]
[159.92581177 437.66284180]
[158.51594543 422.72924805]
[149.61665344 410.78555298]
[156.02259827 396.31921387]
[154.61273193 381.38562012]
[153.20286560 366.45202637]
[144.30357361 354.50833130]
[150.70951843 340.04202271]
[149.29965210 325.10842896]
[147.88978577 310.17483521]
[146.47991943 295.24124146]
[145.07005310 280.30764771]
[143.66018677 265.37405396]
[142.25032043 250.44046021]
[133.35101318 238.49676514]
[139.75697327 224.03044128]
[138.34710693 209.09684753]
[129.44779968 197.15315247]
[135.85375977 182.68684387]
[134.44389343 167.75325012]
[133.03402710 152.81965637]
[131.62416077 137.88606262]
[130.21427917 122.95246124]
[14.87481403 125.48995972]
[4.23705864 114.91460419]
[-6.40069723 104.33924866]
[-17.03845215 93.76389313]
[-27.67620850 83.18853760]
[-43.17187500 76.30953979]
[-40.85134125 59.51515198]
[-24.07089424 57.09585190]
[-17.10085297 72.55078125]
[-6.46309710 83.12613678]
[4.17465878 93.70149231]
[14.81241417 104.27684784]
[25.45017052 114.85220337]
[31.63985062 110.61689758]
[30.49372864 95.66074371]
[44.01921082 102.14627075]
[50.20889282 97.91096497]
[44.20473480 84.16505432]
[38.20057678 70.41913605]
[23.14947701 66.17668915]
[14.38943768 53.22308731]
[16.05668068 37.67463684]
[27.36398506 26.87283707]
[42.97238922 25.91796875]
[55.51207733 35.26089096]
[59.06219864 50.49015808]
[51.94649124 64.41498566]
[57.95064545 78.16089630]
[63.95480347 91.90680695]
[71.35327911 90.67692566]
[93.54869843 86.98729706]
[94.78275299 72.03814697]
[96.01681519 57.08899307]
[97.25087738 42.13984299]
[98.48493958 27.19069290]
[99.71900177 12.24154377]
[86.05242920 5.63932705]
[75.69658661 -5.45666027]
[70.05201721 -19.54577827]
[69.88209534 -34.72258759]
[75.20980835 -48.93455124]
[85.31462097 -60.25961685]
[98.82994843 -67.16616058]
[113.92794800 -68.72013855]
[128.56674194 -64.71137238]
[140.76655579 -55.68202591]
[148.87745667 -42.85324097]
[151.80252075 -27.96000671]
[149.14614868 -13.01650906]
[141.26759338 -0.04373384]
[129.23237610 9.20385742]
[114.66815186 13.47560501]
[113.43408966 28.42475510]
[112.20002747 43.37390518]
[110.96596527 58.32305527]
[109.73191071 73.27220917]
[108.49784851 88.22135925]
[115.55056000 90.77268219]
[127.02227783 81.10832977]
[129.65597534 95.87532806]
[136.70869446 98.42665863]
[145.32438660 86.14781952]
[153.94007874 73.86898041]
[162.55575562 61.59014130]
[163.46128845 45.21601486]
[178.21461487 38.05561066]
[191.63879395 47.47494507]
[189.92416382 63.78420639]
[174.83459473 70.20583344]
[166.21891785 82.48467255]
[157.60322571 94.76351166]
[148.98753357 107.04235077]
[145.14788818 121.54259491]
[146.55775452 136.47618103]
[147.96762085 151.40979004]
[149.37748718 166.34338379]
[150.78735352 181.27697754]
[159.78749084 194.28881836]
[153.28070068 207.68698120]
[154.69056702 222.62057495]
[163.69070435 235.63241577]
[157.18391418 249.03057861]
[158.59378052 263.96417236]
[160.00364685 278.89776611]
[161.41351318 293.83135986]
[162.82337952 308.76495361]
[164.23324585 323.69857788]
[165.64311218 338.63217163]
[174.64326477 351.64401245]
[168.13645935 365.04217529]
[169.54632568 379.97576904]
[170.95619202 394.90936279]
[179.95634460 407.92120361]
[173.44953918 421.31936646]
[174.85940552 436.25296021]
[176.26927185 451.18655396]
[177.67913818 466.12014771]
[179.08901978 481.05374146]
[180.49888611 495.98733521]
[181.90875244 510.92092896]
[183.31861877 525.85455322]
[184.81631470 540.77960205]
[186.40179443 555.69555664]
[187.98727417 570.61151123]
[189.57275391 585.52746582]
[191.24595642 600.43389893]
[193.00682068 615.33013916]
[194.76770020 630.22644043]
[196.52856445 645.12274170]
[215.50341797 663.40405273]
[202.56069946 690.52001953]
[207.41362000 704.71331787]
[212.26654053 718.90655518]
[217.11946106 733.09985352]
[222.05578613 747.26434326]
[227.07536316 761.39953613]
[232.09494019 775.53472900]
[237.11453247 789.66992188]
[249.02381897 800.08526611]
[245.99163818 814.66796875]
[251.01121521 828.80316162]
[256.81246948 835.81365967]
[256.00561523 843.13433838]
[260.85855103 857.32757568]
[265.71145630 871.52087402]
[270.56436157 885.71417236]
[275.41729736 899.90740967]
[287.20321655 910.46221924]
[283.99966431 925.00817871]
[288.85256958 939.20147705]
[294.57095337 946.27972412]
[293.67800903 953.59039307]
[298.36361694 967.83978271]
[303.04919434 982.08917236]
[307.73477173 996.33856201]
[319.39569092 1007.03131104]
[316.02120972 1021.53857422]
[320.70678711 1035.78796387]
[325.47613525 1050.00952148]
[330.32904053 1064.20288086]
[336.25222778 1077.98388672]
[343.21105957 1091.27197266]
[349.94113159 1097.39636230]
[350.17251587 1104.75769043]
[356.97451782 1118.12683105]
[363.63208008 1124.32983398]
[363.77685547 1131.69348145]
[370.42108154 1145.14160156]
[377.06530762 1158.58984375]
[383.70953369 1172.03808594]
[390.35372925 1185.48632812]
[405.40155029 1190.31738281]
[412.55142212 1204.41186523]
[407.56152344 1219.40771484]
[393.39224243 1226.40820312]
[378.44995117 1221.26000977]
[371.59967041 1207.01757812]
[376.90554810 1192.13049316]
[370.26132202 1178.68225098]
[363.61709595 1165.23413086]
[356.97286987 1151.78588867]
[350.32864380 1138.33764648]
[343.60540771 1124.92883301]
[336.80343628 1111.55969238]
[329.92291260 1098.23083496]
[322.96408081 1084.94262695]
[322.35076904 1099.93017578]
[315.75241089 1113.40087891]
[304.28689575 1123.07263184]
[289.89685059 1127.30664062]
[275.02038574 1125.38549805]
[262.17797852 1117.63488770]
[253.54554749 1105.36779785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 233]
[7 232]
[9 231]
[10 230]
[12 228]
[13 227]
[14 226]
[15 225]
[16 223]
[17 222]
[19 220]
[20 219]
[21 218]
[22 217]
[23 216]
[24 214]
[25 213]
[27 211]
[28 210]
[29 209]
[30 208]
[32 207]
[33 206]
[34 205]
[35 204]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[42 46]
[55 202]
[56 201]
[57 200]
[58 199]
[60 198]
[61 197]
[62 196]
[63 195]
[65 194]
[66 193]
[67 192]
[68 191]
[69 190]
[70 189]
[71 188]
[72 187]
[74 185]
[75 184]
[76 183]
[78 181]
[79 180]
[80 179]
[81 178]
[82 177]
[83 176]
[84 175]
[86 173]
[87 172]
[89 170]
[90 169]
[91 168]
[92 167]
[93 166]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[110 122]
[111 121]
[112 120]
[124 150]
[125 149]
[126 148]
[127 147]
[128 146]
[129 145]
[154 165]
[155 164]
[156 163]
[157 162]
[234 259]
[235 258]
[237 257]
[238 256]
[240 255]
[241 254]
[242 253]
[243 252]
[244 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
