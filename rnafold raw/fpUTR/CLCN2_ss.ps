%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCGAGCGGGAGGCUGCGCCAGCGGCGCCCGCCGGGGGCCCGCCGCACUCUGCUCUCGGCCUCCCGGGCUGCGGGGACGGGACGGCUGCCGGCGCGGACUUUGCGGGCCGGGAGCCGAGUCCAGGACAGAGCCGGAACCGCCGAGGGAGGCGAGAGGGCAGUGCGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[-141.77676392 410.10128784]
[-153.84034729 412.24307251]
[-165.59638977 409.05780029]
[-169.25782776 424.44949341]
[-183.57226562 428.56610107]
[-193.73675537 439.59710693]
[-197.26815796 448.06094360]
[-204.18739319 450.73397827]
[-214.55052185 461.57858276]
[-224.91363525 472.42321777]
[-235.27676392 483.26782227]
[-245.63989258 494.11242676]
[-246.13360596 507.02450562]
[-255.01832581 515.84594727]
[-267.13143921 516.22137451]
[-277.68978882 526.87597656]
[-288.24810791 537.53063965]
[-298.80645752 548.18530273]
[-309.36480713 558.83996582]
[-313.01171875 574.82843018]
[-328.75924683 579.40515137]
[-340.40774536 567.86199951]
[-335.97418213 552.07354736]
[-320.01943970 548.28161621]
[-309.46109009 537.62695312]
[-298.90277100 526.97229004]
[-288.34442139 516.31768799]
[-277.78607178 505.66302490]
[-274.26162720 488.48712158]
[-256.48449707 483.74929810]
[-246.12138367 472.90469360]
[-235.75825500 462.06008911]
[-225.39512634 451.21545410]
[-215.03199768 440.37084961]
[-204.76776123 429.43258667]
[-194.60327148 418.40158081]
[-191.66885376 403.79891968]
[-176.62739563 398.89331055]
[-180.91152954 381.79000854]
[-174.03579712 365.38406372]
[-158.56733704 356.28677368]
[-140.57597351 358.28582764]
[-130.81872559 346.89303589]
[-121.06148529 335.50021362]
[-111.30423737 324.10739136]
[-109.33444977 316.95611572]
[-101.26490021 312.59838867]
[-91.30238342 301.38464355]
[-81.33987427 290.17086792]
[-71.37735748 278.95712280]
[-61.41484451 267.74337769]
[-58.74608231 253.08979797]
[-43.79617310 247.91188049]
[-41.12741089 233.25831604]
[-26.17750549 228.08039856]
[-16.21499062 216.86663818]
[-6.25247765 205.65287781]
[3.71003652 194.43913269]
[13.67255020 183.22537231]
[23.63506508 172.01161194]
[25.73438644 164.89727783]
[33.88173676 160.68679810]
[44.04623413 149.65579224]
[54.21073151 138.62478638]
[64.37522888 127.59378815]
[74.53971863 116.56278992]
[84.70421600 105.53178406]
[87.93888092 89.08712006]
[103.97905731 84.22886658]
[113.94156647 73.01510620]
[123.90408325 61.80135345]
[133.55747986 50.32041931]
[136.09222412 34.70358276]
[150.07015991 29.55899239]
[159.40728760 17.81939888]
[168.74441528 6.07980633]
[177.64910889 -5.99108553]
[174.93237305 -21.32917976]
[183.68899536 -33.77009583]
[198.32826233 -36.26555634]
[199.72294617 -52.02516937]
[213.29064941 -58.17063141]
[221.75117493 -70.55690002]
[230.21168518 -82.94316864]
[238.67219543 -95.32943726]
[246.90640259 -107.86730194]
[254.91157532 -120.55261230]
[262.91674805 -133.23791504]
[270.92193604 -145.92323303]
[271.74343872 -161.72309875]
[285.07907104 -168.35716248]
[293.08422852 -181.04246521]
[301.08941650 -193.72778320]
[309.09460449 -206.41310120]
[317.09976196 -219.09840393]
[317.92129517 -234.89826965]
[331.25689697 -241.53233337]
[339.26208496 -254.21765137]
[334.32385254 -269.05502319]
[340.12628174 -283.57626343]
[353.92962646 -290.92483521]
[369.21640015 -287.63098145]
[378.76858521 -275.24996948]
[378.07601929 -259.62774658]
[367.46563721 -248.14060974]
[351.94738770 -246.21246338]
[343.94219971 -233.52716064]
[343.69326782 -218.63462830]
[329.78509521 -211.09323120]
[321.77990723 -198.40791321]
[313.77471924 -185.72261047]
[305.76956177 -173.03729248]
[297.76437378 -160.35197449]
[297.51544189 -145.45945740]
[283.60723877 -137.91806030]
[275.60208130 -125.23274231]
[267.59689331 -112.54743195]
[259.59170532 -99.86212158]
[259.76306152 -95.05677032]
[256.89300537 -90.09957886]
[251.05847168 -86.86892700]
[242.59794617 -74.48265839]
[234.13743591 -62.09638596]
[225.67692566 -49.71011353]
[224.88739014 -34.83644867]
[210.71453857 -27.80504227]
[213.71475220 -13.26082420]
[205.31103516 -0.57886147]
[190.03538513 2.46942925]
[190.44595337 5.27677393]
[189.74899292 8.41836357]
[187.81057739 11.46564579]
[184.65692139 13.94929790]
[180.48400879 15.41693401]
[171.14688110 27.15652657]
[161.80975342 38.89612198]
[159.94285583 53.67326355]
[145.29707336 59.65754700]
[145.34675598 63.21689224]
[143.65238953 66.97466278]
[140.14099121 70.10051727]
[135.11784363 71.76387024]
[125.15532684 82.97762299]
[115.19281006 94.19137573]
[115.17296600 105.86026001]
[107.34397125 114.51301575]
[95.73522186 115.69628143]
[85.57072449 126.72727966]
[75.40622711 137.75828552]
[65.24172974 148.78929138]
[55.07723618 159.82029724]
[44.91273880 170.85128784]
[34.84881973 181.97413635]
[24.88630676 193.18788147]
[14.92379189 204.40164185]
[4.96127844 215.61540222]
[-5.00123549 226.82914734]
[-14.96374989 238.04290771]
[-18.34509659 253.49855042]
[-32.58241653 257.87438965]
[-35.96376419 273.33004761]
[-50.20108795 277.70587158]
[-60.16360092 288.91964722]
[-70.12611389 300.13339233]
[-80.08863068 311.34713745]
[-90.05113983 322.56091309]
[-99.91143036 333.86465454]
[-109.66867828 345.25747681]
[-119.42591858 356.65026855]
[-129.18316650 368.04309082]
[-124.69329834 379.75335693]
[-125.61736298 392.18823242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 38]
[5 36]
[6 35]
[8 34]
[9 33]
[10 32]
[11 31]
[12 30]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[42 170]
[43 169]
[44 168]
[45 167]
[47 166]
[48 165]
[49 164]
[50 163]
[51 162]
[53 160]
[55 158]
[56 157]
[57 156]
[58 155]
[59 154]
[60 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[69 144]
[70 143]
[71 142]
[72 138]
[74 136]
[75 135]
[76 134]
[77 129]
[80 126]
[82 124]
[83 123]
[84 122]
[85 121]
[86 118]
[87 117]
[88 116]
[89 115]
[91 113]
[92 112]
[93 111]
[94 110]
[95 109]
[97 107]
[98 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
