%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGAGUAGAAAAGCAGCCGCAGGCUGUGGCGCUCCACCACGCCGUCCGGGUGGGCCUAGCAGUCGCUCCAUUUAUCGCUUGAGAUCUCCAGCCUUACCGCGGCUCGAA\
) } def
/len { sequence length } bind def

/coor [
[78.11527252 360.13739014]
[68.61374664 371.86871338]
[56.29883194 380.60055542]
[42.08437347 385.68502808]
[27.02517128 386.74475098]
[12.23872375 383.70114136]
[-1.17771673 376.78005981]
[-12.22856236 366.49502563]
[-20.09376717 353.60934448]
[-24.18968010 339.07916260]
[-24.21235657 323.98272705]
[-20.16011620 309.44033813]
[-12.33365917 296.53106689]
[-1.31376278 286.21289062]
[12.08182430 279.25152588]
[26.85906029 276.16348267]
[41.92137909 277.17797852]
[46.91847610 263.03482056]
[51.91557312 248.89166260]
[56.91267014 234.74850464]
[61.90976334 220.60534668]
[66.90686035 206.46218872]
[71.09580231 192.05895996]
[74.46317291 177.44181824]
[77.83055115 162.82467651]
[81.19792175 148.20753479]
[84.56529236 133.59039307]
[87.93266296 118.97325897]
[74.72676086 103.80912018]
[78.19618225 81.44287109]
[65.42324829 73.57825470]
[52.65030670 65.71364594]
[39.87736893 57.84904099]
[25.58069992 63.88102341]
[10.47661972 60.32485199]
[0.37295538 48.54794312]
[-0.84522676 33.07875824]
[7.29048872 19.86551666]
[21.65175438 13.98897743]
[36.71636963 17.70879173]
[46.69168091 29.59461403]
[47.74198151 45.07610321]
[60.51491547 52.94071198]
[73.28785706 60.80532074]
[86.06079102 68.66992950]
[100.76737213 65.71755981]
[109.51531982 53.53258896]
[118.26325989 41.34762192]
[126.83790588 29.04008293]
[135.23753357 16.61243820]
[143.63714600 4.18479252]
[152.03677368 -8.24285221]
[160.43638611 -20.67049599]
[168.83601379 -33.09814072]
[177.23564148 -45.52578735]
[168.60000610 -61.65035248]
[169.20312500 -79.84825134]
[178.79901123 -95.22393036]
[194.73373413 -103.68303680]
[212.67887878 -103.02256012]
[219.99430847 -116.11776733]
[227.30973816 -129.21298218]
[226.53677368 -145.59390259]
[240.48088074 -154.22486877]
[254.79757690 -146.22709656]
[254.75904846 -129.82798767]
[240.40495300 -121.89756012]
[233.08952332 -108.80234528]
[225.77409363 -95.70713806]
[233.29283142 -86.33409119]
[237.16165161 -74.92097473]
[236.89077759 -62.83803558]
[232.48899841 -51.54460907]
[224.46546936 -42.41286087]
[213.77090454 -36.56107330]
[201.68499756 -34.71673584]
[189.66328430 -37.12616348]
[181.26365662 -24.69852066]
[172.86404419 -12.27087498]
[164.46441650 0.15676962]
[156.06478882 12.58441448]
[147.66517639 25.01205826]
[139.26554871 37.43970490]
[138.11051941 44.85190201]
[130.44822693 50.09556580]
[121.70028687 62.28053284]
[112.95233917 74.46549988]
[124.25778198 87.92900848]
[125.15532684 104.52279663]
[116.43186188 117.52308655]
[102.54980469 122.34062958]
[99.18243408 136.95776367]
[95.81506348 151.57490540]
[92.44768524 166.19204712]
[89.08031464 180.80918884]
[85.71294403 195.42633057]
[87.27066040 199.84300232]
[87.24616241 204.07723999]
[85.91225433 207.62750244]
[83.68347931 210.14320374]
[81.05002594 211.45927429]
[76.05292511 225.60244751]
[71.05583191 239.74560547]
[66.05873108 253.88876343]
[61.06163788 268.03192139]
[56.06454086 282.17507935]
[68.42088318 290.84823608]
[77.97814941 302.53417969]
[84.02711487 316.36575317]
[86.11891174 331.31655884]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 106]
[18 105]
[19 104]
[20 103]
[21 102]
[22 101]
[23 96]
[24 95]
[25 94]
[26 93]
[27 92]
[28 91]
[30 45]
[31 44]
[32 43]
[33 42]
[46 87]
[47 86]
[48 85]
[49 83]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[60 69]
[61 68]
[62 67]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
