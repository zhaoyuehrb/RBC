%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGUGCGGUGCGGAAGCGGAAGUGAAGGGUGCGCUUGGCGGCGGCGGCGGGAGCUGCGGAGUCGGGAAUCAAAACAAAGGGCCUGGGGGGGGCGGGGGGAAGGCGGCGGGGCCGGAAUGUGAGCGGAGGUGGAGCCGGCGGCAGAGGGUGGAAGAAUGAAAGAAAAGAAAGAUGAAAGGAUGUUGAAUCACUUUGCAUGGCUGU\
) } def
/len { sequence length } bind def

/coor [
[110.80542755 183.84429932]
[119.25785065 169.79122925]
[119.03130341 154.79293823]
[118.80475616 139.79464722]
[110.87611389 127.18569183]
[118.40410614 113.27023315]
[118.17755127 98.27194214]
[117.95100403 83.27365875]
[117.72445679 68.27536774]
[130.56750488 116.18311310]
[85.29649353 129.35774231]
[75.69329834 140.88069153]
[66.09010315 152.40365601]
[56.48691559 163.92662048]
[62.35379028 179.38414001]
[59.64106750 195.59835815]
[49.18241501 208.16011047]
[33.90470123 213.70195007]
[18.00943375 210.80055237]
[8.58137035 222.46723938]
[6.56818581 238.74234009]
[-8.63650703 244.88639832]
[-21.39142418 234.57891846]
[-18.57539940 218.42335510]
[-3.08531809 213.03916931]
[6.34274530 201.37248230]
[0.60583371 188.97735596]
[0.77044868 175.25379944]
[6.86147261 162.88111877]
[17.74118805 154.29943848]
[31.32136345 151.22854614]
[44.96395111 154.32344055]
[54.56714249 142.80047607]
[64.17033386 131.27751160]
[73.77352905 119.75453949]
[66.70758820 90.62549591]
[86.64619446 66.20230103]
[71.65303802 65.74925232]
[56.65988541 65.29620361]
[41.66672897 64.84316254]
[26.67357063 64.39011383]
[11.68041420 63.93706894]
[1.76962554 72.19410706]
[-10.71031189 71.50673676]
[-19.09775925 62.78820038]
[-33.23423386 69.89247131]
[-45.59797668 61.58661652]
[-60.58258057 60.90717697]
[-75.56718445 60.22773743]
[-90.55178833 59.54829788]
[-105.53639221 58.86885834]
[-119.83833313 66.89298248]
[-133.79830933 58.28768539]
[-133.05549622 41.90537262]
[-118.37403107 34.59875488]
[-104.85695648 43.88425446]
[-89.87235260 44.56369400]
[-74.88774872 45.24313354]
[-59.90314102 45.92257309]
[-44.91853714 46.60201263]
[-31.85385895 39.44914627]
[-18.41831970 47.80359650]
[-3.29789734 38.89827347]
[12.13345909 48.94391251]
[27.12661552 49.39695740]
[42.11977386 49.85000610]
[57.11293030 50.30305099]
[72.10608673 50.75609589]
[87.09924316 51.20914078]
[91.26602173 44.97311783]
[78.32548523 37.38743210]
[65.38495636 29.80174446]
[52.44442749 22.21605682]
[39.50389481 14.63037014]
[24.94346619 11.02565765]
[19.52557945 -2.96171141]
[27.85870361 -15.43404293]
[42.85466003 -15.78233814]
[51.75802231 -3.70922685]
[63.71841049 5.34334850]
[75.67879486 14.39592361]
[87.63918304 23.44849968]
[99.59957123 32.50107574]
[103.76634979 26.26505280]
[97.61016083 12.58655453]
[91.45396423 -1.09194303]
[85.29777527 -14.77044106]
[70.86750793 -21.78092384]
[67.49211884 -37.46487427]
[77.76092529 -49.79090881]
[93.79657745 -49.30355072]
[103.29788971 -36.37665558]
[98.97627258 -20.92663193]
[105.13246155 -7.24813509]
[111.28865814 6.43036270]
[117.44484711 20.10886002]
[124.90296936 20.90033340]
[126.05821991 5.94488716]
[120.27340698 -7.89476252]
[129.23471069 -19.92368698]
[144.15103149 -18.34141541]
[150.38932800 -4.70016956]
[141.82855225 7.61847210]
[139.81921387 22.48328018]
[147.27732849 23.27475548]
[149.22415161 7.57378483]
[162.99914551 1.90819466]
[171.88908386 -10.17357254]
[173.83590698 -25.87454224]
[187.61088562 -31.54013252]
[196.50082397 -43.62189865]
[205.39076233 -55.70366669]
[203.21391296 -71.12764740]
[212.40167236 -83.25363159]
[227.11949158 -85.23387146]
[236.00942993 -97.31563568]
[244.89936829 -109.39740753]
[239.55090332 -125.44272614]
[244.76748657 -141.35661316]
[258.30535889 -150.93008423]
[274.71572876 -150.55250549]
[283.42218018 -162.76716614]
[284.44900513 -179.13414001]
[299.25500488 -186.18501282]
[312.60900879 -176.66645813]
[310.77355957 -160.37034607]
[295.63681030 -154.06071472]
[286.93038940 -141.84606934]
[292.32754517 -129.63346863]
[290.97393799 -116.24142456]
[283.11679077 -105.17930603]
[270.72152710 -99.39898682]
[256.98114014 -100.50747681]
[248.09120178 -88.42570496]
[239.20126343 -76.34394073]
[241.68928528 -61.70340347]
[232.84573364 -49.32413101]
[217.47251892 -46.81373215]
[208.58259583 -34.73196793]
[199.69265747 -22.65019989]
[198.38169861 -7.81339836]
[183.97084045 -1.28363943]
[175.08091736 10.79812717]
[173.76995850 25.63492775]
[159.35910034 32.16468811]
[172.95306396 25.82400131]
[186.54701233 19.48331261]
[200.14097595 13.14262581]
[213.73492432 6.80193901]
[222.81712341 -5.13596821]
[234.17105103 -14.93844128]
[247.30616760 -22.18197823]
[261.65499878 -26.55363274]
[276.59759521 -27.86453438]
[291.48840332 -26.05804634]
[305.68411255 -21.21221733]
[318.57138062 -13.53640175]
[329.59347534 -3.36222458]
[338.27413940 8.87075520]
[344.23840332 22.63402939]
[347.22854614 37.33297729]
[347.11538696 52.33255005]
[343.90383911 66.98471832]
[337.73263550 80.65644836]
[328.86840820 92.75708008]
[317.69409180 102.76381683]
[304.69247437 110.24433899]
[290.42529297 114.87545776]
[275.50891113 116.45709991]
[260.58776855 114.92092133]
[246.30653381 110.33329773]
[233.28219604 102.89242554]
[222.07745361 92.91978455]
[213.17575073 80.84515381]
[199.67910767 74.29987335]
[186.18246460 67.75460052]
[172.68582153 61.20932388]
[159.18917847 54.66404724]
[167.89562988 66.87870026]
[176.60206604 79.09336090]
[185.30851746 91.30801392]
[194.10696411 103.45657349]
[202.99688721 115.53833771]
[211.88682556 127.62010193]
[227.46705627 131.44580078]
[234.05902100 146.07199097]
[226.60594177 160.27871704]
[210.82516479 163.16778564]
[198.82235718 152.52296448]
[199.80505371 136.51004028]
[190.91513062 124.42826843]
[182.02519226 112.34650421]
[175.52746582 108.82122803]
[173.09385681 100.01445770]
[164.38742065 87.79980469]
[155.68096924 75.58514404]
[146.97453308 63.37049103]
[132.72274780 68.04882050]
[132.94929504 83.04710388]
[133.17584229 98.04539490]
[133.40238953 113.04368591]
[141.34724426 126.72542572]
[133.80303955 139.56809998]
[134.02958679 154.56639099]
[134.25613403 169.56468201]
[143.12915039 183.35604858]
[135.38244629 197.81013489]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 203]
[6 201]
[7 200]
[8 199]
[9 198]
[11 35]
[12 34]
[13 33]
[14 32]
[19 26]
[20 25]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[45 62]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[84 96]
[85 95]
[86 94]
[87 93]
[105 145]
[107 143]
[108 142]
[110 140]
[111 139]
[112 138]
[115 135]
[116 134]
[117 133]
[121 128]
[122 127]
[178 197]
[179 196]
[180 195]
[181 194]
[182 192]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
