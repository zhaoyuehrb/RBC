%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCCCAGAAGCUCCCCAGGCUCUAGUGCAGGAGGAGAAGGAGGAGGAGCAGGAGGUGGAGAUUCCCAGUUAAAAGGCUCCAGAAUCGUGUACCAGGCAGAGAACUGAAGUACUGGGGCCUCCUCCACUGGGUCCGAAUCAGUAGGUGACCCCGCCCCUGGAUUCUGGAAGACCUCACC\
) } def
/len { sequence length } bind def

/coor [
[7.21238422 189.59542847]
[-4.44480515 199.03523254]
[-16.10199547 208.47503662]
[-27.75918388 217.91484070]
[-39.41637421 227.35464478]
[-50.99074173 236.89581299]
[-46.84906769 252.61688232]
[-49.96004868 268.51467896]
[-59.65228271 281.42202759]
[-73.94841003 288.78991699]
[-89.96833038 289.19107056]
[-104.50940704 282.59591675]
[-115.83005524 292.43679810]
[-127.15069580 302.27770996]
[-138.47134399 312.11859131]
[-149.70567322 322.05789185]
[-160.85284424 332.09484863]
[-162.31182861 344.92864990]
[-171.82653809 353.05899048]
[-183.92919922 352.53240967]
[-195.24983215 362.37329102]
[-196.10212708 378.15460205]
[-207.91949463 388.64868164]
[-223.69088745 387.62957764]
[-234.05943298 375.70193481]
[-232.87365723 359.94219971]
[-220.83705139 349.70031738]
[-205.09072876 351.05267334]
[-193.77008057 341.21176147]
[-188.97506714 324.34298706]
[-170.88981628 320.94766235]
[-159.74263000 310.91070557]
[-156.86767578 304.07922363]
[-148.31222534 300.79794312]
[-136.99157715 290.95706177]
[-125.67093658 281.11618042]
[-114.35029602 271.27526855]
[-118.66380310 258.07427979]
[-117.61160278 244.18287659]
[-111.31986237 231.70480347]
[-100.71077728 222.54244995]
[-87.36747742 218.10675049]
[-73.29788971 219.10008240]
[-60.63255692 225.40515137]
[-57.52093506 218.67816162]
[-48.85617828 215.69746399]
[-37.19898987 206.25764465]
[-25.54180145 196.81784058]
[-13.88461113 187.37803650]
[-2.22742176 177.93823242]
[-1.43310785 159.66958618]
[12.68565369 147.55390930]
[31.49666023 149.61145020]
[42.81730270 139.77056885]
[54.13794708 129.92967224]
[65.45858765 120.08879089]
[76.77923584 110.24790955]
[74.09906006 102.29032898]
[74.13568878 93.69188690]
[77.01493073 85.37596130]
[82.55054474 78.27713013]
[90.25128174 73.23641968]
[99.36277771 70.90273285]
[108.94095612 71.65186310]
[117.94975281 75.53299713]
[122.33532715 61.18843079]
[126.72090149 46.84385681]
[131.10647583 32.49928665]
[135.49205017 18.15471458]
[139.87762451 3.81014419]
[128.48294067 -8.15288925]
[124.68976593 -24.13645363]
[129.43951416 -39.76429367]
[141.34777832 -50.80636597]
[157.10609436 -54.32374191]
[161.24066162 -68.74266815]
[165.37521362 -83.16159058]
[169.50978088 -97.58052063]
[173.64433289 -111.99944305]
[177.77890015 -126.41837311]
[181.91346741 -140.83729553]
[186.04801941 -155.25622559]
[172.86994934 -148.09114075]
[158.14080811 -150.92881775]
[148.56797791 -162.47702026]
[148.51074219 -177.47689819]
[157.99517822 -189.09780884]
[172.70223999 -192.04779053]
[185.93460083 -184.98348999]
[191.66647339 -171.12225342]
[197.52745056 -184.92982483]
[203.38841248 -198.73739624]
[209.24937439 -212.54496765]
[214.86846924 -226.45272827]
[220.24398804 -240.45643616]
[225.61950684 -254.46014404]
[217.05569458 -267.40002441]
[217.76690674 -282.90078735]
[227.47970581 -295.00207520]
[242.45930481 -299.05068970]
[256.94573975 -293.48986816]
[265.36868286 -280.45785522]
[264.48934937 -264.96572876]
[254.64585876 -252.97050476]
[239.62321472 -249.08462524]
[234.24769592 -235.08091736]
[228.87217712 -221.07720947]
[229.97454834 -216.40409851]
[228.13313293 -210.99035645]
[223.05694580 -206.68400574]
[217.19598389 -192.87643433]
[211.33502197 -179.06886292]
[205.47404480 -165.26127625]
[200.46694946 -151.12165833]
[196.33238220 -136.70272827]
[192.19783020 -122.28381348]
[188.06326294 -107.86488342]
[183.92871094 -93.44596100]
[179.79414368 -79.02703094]
[175.65959167 -64.60810852]
[171.52502441 -50.18918228]
[181.64825439 -40.99975204]
[186.84393311 -28.28182793]
[186.04328918 -14.50055122]
[179.34584045 -2.35388660]
[168.01113892 5.75556326]
[154.22219849 8.19571972]
[149.83662415 22.54029083]
[145.45104980 36.88486099]
[141.06547546 51.22943497]
[136.67990112 65.57400513]
[132.29432678 79.91857910]
[137.54743958 93.96865845]
[150.26815796 101.91744995]
[162.98887634 109.86623383]
[175.77848816 117.70371246]
[188.63598633 125.42928314]
[201.49349976 133.15486145]
[214.35101318 140.88043213]
[227.20852661 148.60600281]
[240.63560486 141.28063965]
[255.82621765 141.65711975]
[268.70324707 149.53422546]
[275.86062622 162.71101379]
[275.46414185 177.60089111]
[288.32162476 185.32646179]
[301.17913818 193.05203247]
[314.03665161 200.77760315]
[330.43383789 200.52265930]
[338.61987305 214.73254395]
[330.17367554 228.78935242]
[313.78396606 228.23265076]
[306.31109619 213.63511658]
[293.45358276 205.90954590]
[280.59606934 198.18397522]
[267.73855591 190.45840454]
[254.77772522 197.79885864]
[239.78311157 197.66540527]
[226.78265381 189.99374390]
[219.31867981 176.75796509]
[219.48294067 161.46351624]
[206.62544250 153.73794556]
[193.76792908 146.01237488]
[180.91041565 138.28678894]
[168.05291748 130.56121826]
[160.67938232 129.80921936]
[155.04008484 122.58695984]
[142.31936646 114.63816833]
[129.59864807 106.68938446]
[118.78703308 121.68406677]
[102.14299011 126.95101929]
[86.62011719 121.56855011]
[75.29947662 131.40943909]
[63.97883224 141.25032043]
[52.65818787 151.09120178]
[41.33754349 160.93209839]
[42.83338547 172.75976562]
[38.46632385 183.72390747]
[29.43379974 191.13188171]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 50]
[2 49]
[3 48]
[4 47]
[5 46]
[6 44]
[12 37]
[13 36]
[14 35]
[15 34]
[16 32]
[17 31]
[20 29]
[21 28]
[53 176]
[54 175]
[55 174]
[56 173]
[57 172]
[65 132]
[66 131]
[67 130]
[68 129]
[69 128]
[70 127]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
[90 113]
[91 112]
[92 111]
[93 110]
[94 107]
[95 106]
[96 105]
[133 169]
[134 168]
[135 167]
[136 165]
[137 164]
[138 163]
[139 162]
[140 161]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
