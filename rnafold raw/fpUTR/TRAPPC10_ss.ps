%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCUGAGGCCGGCAGCAGCGGGCGGCAGCUGCGGCGCAACCGGCUCCGGAGCUGCCUGGCGCGGCCGGGCGGGCGGCGCCGCUCAGGCUCGGGCUCCGGCUGGGCCCGGCGCGGCCUCGGGGCUGCCCAUGGGGCGCGGGGGGCCGGGCCGGUGACGCCGGACGCCC\
) } def
/len { sequence length } bind def

/coor [
[222.66488647 127.44972229]
[208.93672180 133.22787476]
[196.42680359 123.54219055]
[182.69865417 129.32034302]
[170.18873596 119.63465118]
[155.35237122 117.42512512]
[140.51599121 115.21559906]
[125.67961884 113.00607300]
[110.84323883 110.79654694]
[96.95867920 116.47271729]
[87.91915894 128.44297791]
[78.87963867 140.41323853]
[76.73767853 156.08877563]
[62.89328003 161.58259583]
[53.85375977 173.55284119]
[52.37657928 189.88533020]
[37.38203812 196.52578735]
[24.29523659 186.64309692]
[26.57875252 170.40371704]
[41.88350296 164.51332092]
[50.92302322 152.54307556]
[52.41841888 137.72372437]
[66.90937805 131.37371826]
[75.94889832 119.40345001]
[84.98841858 107.43319702]
[78.17855835 94.06809998]
[63.18112183 94.34528351]
[48.18368530 94.62246704]
[33.18624496 94.89965057]
[18.18880653 95.17683411]
[3.19136739 95.45401764]
[-11.80607128 95.73120117]
[-25.46091080 103.72219086]
[-38.32898712 96.22139740]
[-53.32642365 96.49858093]
[-68.32386017 96.77576447]
[-81.97870636 104.76675415]
[-94.84677887 97.26596069]
[-109.84421539 97.54314423]
[-121.96734619 108.05072784]
[-137.71423340 104.98230743]
[-145.00520325 90.69171143]
[-138.24726868 76.14146423]
[-122.62451935 72.49326324]
[-110.12139893 82.54570770]
[-95.12396240 82.26852417]
[-82.54183960 74.29735565]
[-68.60104370 81.77832794]
[-53.60360718 81.50114441]
[-38.60617065 81.22396088]
[-26.02404785 73.25279236]
[-12.08325481 80.73375702]
[2.91418386 80.45657349]
[17.91162300 80.17938995]
[32.90906143 79.90220642]
[47.90650177 79.62502289]
[62.90393829 79.34783936]
[77.90137482 79.07065582]
[85.32121277 66.03432465]
[77.90137482 52.99798965]
[70.48153687 39.96165466]
[63.06170273 26.92532158]
[55.64186478 13.88898754]
[48.22202682 0.85265285]
[34.67128754 -7.31362343]
[35.10007095 -22.20205498]
[27.68023491 -35.23838806]
[20.26039696 -48.27472305]
[5.23282623 -53.89181137]
[0.39208323 -69.18713379]
[9.45157146 -82.42742157]
[25.46162605 -83.45586395]
[36.14070511 -71.48352814]
[33.29673004 -55.69456100]
[40.71656799 -42.65822601]
[48.13640594 -29.62189293]
[61.15642929 -22.38806343]
[61.25836182 -6.56718493]
[68.67819977 6.46914959]
[76.09803772 19.50548363]
[83.51787567 32.54181671]
[90.93771362 45.57815170]
[98.35755157 58.61448669]
[113.05276489 95.96017456]
[127.88914490 98.16970062]
[142.72550964 100.37922668]
[157.56188965 102.58875275]
[172.39826965 104.79827881]
[187.18762207 99.17816925]
[198.63633728 108.70581055]
[213.42568970 103.08570099]
[224.87440491 112.61334991]
[239.73056030 114.68569946]
[254.60523987 116.62068176]
[269.47991943 118.55567169]
[284.35458374 120.49066162]
[299.24649048 122.28812408]
[314.15438843 123.94791412]
[329.06225586 125.60770416]
[343.97015381 127.26750183]
[358.87805176 128.92729187]
[373.78591919 130.58708191]
[382.70117188 128.42098999]
[388.95303345 132.41775513]
[399.63485718 121.31798553]
[414.62908936 118.66733551]
[428.14910889 125.27593231]
[435.10198975 138.42109680]
[449.97665405 140.35609436]
[464.85131836 142.29107666]
[479.72601318 144.22605896]
[494.60067749 146.16105652]
[509.28363037 140.26861572]
[520.90649414 149.58306885]
[535.78112793 151.51806641]
[550.65582275 153.45304871]
[565.53045654 155.38803101]
[580.40515137 157.32302856]
[595.27984619 159.25801086]
[610.15447998 161.19300842]
[619.83081055 151.79002380]
[632.96636963 149.71969604]
[644.71630859 155.51818848]
[650.87756348 166.86082458]
[665.71392822 169.07034302]
[674.70312500 167.23516846]
[680.80303955 171.46023560]
[695.59606934 173.94354248]
[710.38909912 176.42684937]
[725.18206787 178.91015625]
[741.80364990 175.56947327]
[749.61505127 190.61666870]
[737.31835938 202.28829956]
[722.69879150 193.70317078]
[707.90576172 191.21986389]
[693.11279297 188.73654175]
[678.31976318 186.25323486]
[663.50445557 183.90672302]
[648.66802979 181.69720459]
[635.61529541 192.27400208]
[618.61450195 190.11425781]
[608.21948242 176.06767273]
[593.34484863 174.13269043]
[578.47015381 172.19769287]
[563.59552002 170.26271057]
[548.72082520 168.32771301]
[533.84613037 166.39273071]
[518.97149658 164.45774841]
[505.35244751 170.48858643]
[492.66567993 161.03572083]
[477.79101562 159.10073853]
[462.91635132 157.16574097]
[448.04165649 155.23075867]
[433.16699219 153.29577637]
[423.08242798 164.22459412]
[408.32162476 167.15425110]
[394.50457764 160.75564575]
[387.01803589 147.29243469]
[372.12612915 145.49496460]
[357.21826172 143.83517456]
[342.31036377 142.17538452]
[327.40246582 140.51559448]
[312.49459839 138.85580444]
[297.58670044 137.19601440]
[290.56338501 139.59045410]
[282.41958618 135.36532593]
[267.54492188 133.43034363]
[252.67024231 131.49536133]
[237.79557800 129.56036377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 92]
[3 90]
[5 88]
[6 87]
[7 86]
[8 85]
[9 84]
[10 25]
[11 24]
[12 23]
[14 21]
[15 20]
[26 58]
[27 57]
[28 56]
[29 55]
[30 54]
[31 53]
[32 52]
[34 50]
[35 49]
[36 48]
[38 46]
[39 45]
[59 83]
[60 82]
[61 81]
[62 80]
[63 79]
[64 78]
[66 76]
[67 75]
[68 74]
[93 169]
[94 168]
[95 167]
[96 166]
[97 164]
[98 163]
[99 162]
[100 161]
[101 160]
[102 159]
[104 158]
[108 154]
[109 153]
[110 152]
[111 151]
[112 150]
[114 148]
[115 147]
[116 146]
[117 145]
[118 144]
[119 143]
[120 142]
[124 139]
[125 138]
[127 137]
[128 136]
[129 135]
[130 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
