%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACAGGGCGGGAGAUUCGGUGUGCCGCACGCAGGCUUCCCAUCCCCCAGCUGGCCUCCGGUGCUCCUUACCUCCCCGGUGGUCGGGCGCGAAUUACUGGAAAUUGGCUUUUCCCGUUGGGGCCGAAGGUACCUUCCCUGCGGCGGCGACUCAGCGGGGUGUCGUUCGGCCGGCGUGACGCAGCCGGAUCGGCGCCAGACGGAAACCUAGCGGUGACUGUAUCUGAAUUUUGCAGCUGCAGAAUGUGUAGUACCU\
UAAAAGGUUGGCAACA\
) } def
/len { sequence length } bind def

/coor [
[6.37861395 442.60351562]
[-4.48471880 452.94702148]
[-18.83202171 457.32363892]
[-33.61901474 454.80474854]
[-45.70812225 445.92480469]
[-52.53421402 432.56799316]
[-52.64894485 417.56863403]
[-61.54961014 429.64248657]
[-64.10865021 438.37225342]
[-70.62345886 441.80361938]
[-79.66297913 453.77386475]
[-88.70249176 465.74411011]
[-97.74201202 477.71438599]
[-90.84957123 491.28845215]
[-90.53548431 506.44723511]
[-96.80849457 520.18292236]
[-108.37566376 529.79339600]
[-122.90849304 533.41369629]
[-137.51150513 530.37768555]
[-146.55102539 542.34796143]
[-155.59054565 554.31823730]
[-157.73251343 569.99377441]
[-171.57690430 575.48754883]
[-180.61642456 587.45782471]
[-189.65594482 599.42810059]
[-188.87249756 615.45202637]
[-201.00677490 625.94671631]
[-216.75038147 622.86157227]
[-224.02619934 608.56323242]
[-217.25280762 594.02020264]
[-201.62620544 590.38854980]
[-192.58668518 578.41833496]
[-183.54716492 566.44805908]
[-182.05177307 551.62872314]
[-167.56080627 545.27868652]
[-158.52128601 533.30841064]
[-149.48176575 521.33819580]
[-156.39817810 508.12347412]
[-156.89318848 493.15469360]
[-150.81509399 479.39904785]
[-139.32041931 469.60653687]
[-124.65437317 465.76025391]
[-109.71227264 468.67486572]
[-100.67275238 456.70458984]
[-91.63323212 444.73434448]
[-82.59371185 432.76409912]
[-73.62347412 420.74182129]
[-64.72280884 408.66796875]
[-63.66279221 397.84588623]
[-53.38468170 391.26748657]
[-45.93474960 378.24835205]
[-38.48481750 365.22918701]
[-31.03488731 352.21002197]
[-23.58495522 339.19085693]
[-16.13502312 326.17169189]
[-8.68509197 313.15252686]
[-1.23516059 300.13339233]
[-7.68687534 281.71957397]
[1.67969024 264.25442505]
[21.18284988 259.28967285]
[28.17728615 246.02023315]
[35.17172241 232.75079346]
[42.16616058 219.48136902]
[49.16059875 206.21192932]
[56.15503693 192.94250488]
[52.27796936 183.53651428]
[54.24043655 173.33068848]
[61.63446808 165.71879578]
[72.20671082 163.36535645]
[79.50578308 150.26101685]
[86.80484772 137.15667725]
[70.44749451 129.24914551]
[58.64335251 114.20785522]
[54.44264221 94.58000183]
[59.50660324 74.17388153]
[73.61344910 57.32039261]
[60.18599701 50.63431549]
[46.75854874 43.94823837]
[33.33109665 37.26216507]
[19.90364838 30.57608986]
[6.47619867 23.89001465]
[-6.95125055 17.20393944]
[-20.37870026 10.51786327]
[-33.84453583 3.90944242]
[-47.34831238 -2.62110376]
[-63.65515518 -0.88359290]
[-73.09331512 -14.29452801]
[-65.95362091 -29.05788994]
[-49.58078003 -29.98639488]
[-40.81776810 -16.12487984]
[-27.31399155 -9.59433365]
[-19.95124817 -9.51165295]
[-13.69262409 -2.90958595]
[-0.26517513 3.77648926]
[13.16227436 10.46256447]
[26.58972359 17.14863968]
[40.01717377 23.83471489]
[53.44462204 30.52079010]
[66.87207031 37.20686722]
[80.29952240 43.89294052]
[86.65324402 39.90793991]
[78.07501984 27.60289574]
[69.49680328 15.29785061]
[60.91858292 2.99280548]
[48.51894760 -5.44811249]
[48.80037308 -20.44547272]
[61.50794983 -28.41525459]
[75.13166046 -22.13874626]
[77.33186340 -7.30146503]
[84.67480469 5.77833700]
[92.01774597 18.85813904]
[99.36068726 31.93794060]
[105.71440887 27.95293999]
[105.54116058 12.95394135]
[105.36791229 -2.04505801]
[105.19467163 -17.04405785]
[105.02142334 -32.04305649]
[104.84817505 -47.04205704]
[104.67493439 -62.04105759]
[104.50168610 -77.04005432]
[104.32843781 -92.03905487]
[103.72222900 -107.02680206]
[102.68356323 -121.99079895]
[101.64489746 -136.95478821]
[100.60623169 -151.91879272]
[91.93192291 -165.15007019]
[98.76935577 -178.38255310]
[97.73069000 -193.34655762]
[96.69202423 -208.31054688]
[83.94010162 -217.36164856]
[80.03952789 -232.50494385]
[86.83204651 -246.59025574]
[101.11042786 -252.96690369]
[116.13286591 -248.62405396]
[124.80622101 -235.61224365]
[123.03520203 -220.07527161]
[111.65602112 -209.34921265]
[112.69468689 -194.38522339]
[113.73335266 -179.42121887]
[122.33337402 -167.26026917]
[115.57022858 -152.95745850]
[116.60889435 -137.99345398]
[117.64756012 -123.02946472]
[118.68622589 -108.06546783]
[130.21818542 -117.65785980]
[144.93147278 -114.73912811]
[151.92851257 -101.47106171]
[146.02682495 -87.68083954]
[131.59759521 -83.58238220]
[119.32743835 -92.21230316]
[119.50068665 -77.21330261]
[119.67393494 -62.21430206]
[119.84717560 -47.21530151]
[120.02042389 -32.21630096]
[120.19367218 -17.21730423]
[120.36691284 -2.21830392]
[120.54016113 12.78069592]
[120.71340942 27.77969551]
[134.10202026 34.54320145]
[146.27787781 25.78258133]
[158.45373535 17.02196121]
[170.62959290 8.26134109]
[182.80545044 -0.49927869]
[194.98130798 -9.25989914]
[207.10636902 -18.09068871]
[219.18023682 -26.99135208]
[231.25410461 -35.89201355]
[243.32797241 -44.79267883]
[255.40182495 -53.69334030]
[267.47570801 -62.59400558]
[270.16342163 -75.18462372]
[280.37246704 -82.35233307]
[292.33413696 -80.71173096]
[304.51000977 -89.47235107]
[316.68585205 -98.23297119]
[326.01156616 -112.39163971]
[342.19851685 -107.34990692]
[341.83480835 -90.39986420]
[325.44647217 -86.05711365]
[313.27062988 -77.29649353]
[301.09475708 -68.53587341]
[294.73388672 -52.16366196]
[276.37637329 -50.52014160]
[264.30249023 -41.61947632]
[252.22863770 -32.71881485]
[240.15476990 -23.81815147]
[228.08090210 -14.91748714]
[216.00703430 -6.01682425]
[212.50068665 0.45791730]
[203.74192810 2.91595984]
[191.56607056 11.67658043]
[179.39021301 20.43720055]
[167.21435547 29.19782066]
[155.03849792 37.95843887]
[142.86264038 46.71905899]
[146.38116455 61.30055618]
[161.21238708 63.54434586]
[176.04362488 65.78813934]
[190.87486267 68.03192902]
[205.73101807 70.10427856]
[220.61010742 72.00489807]
[235.48921204 73.90551758]
[247.91304016 64.50943756]
[262.97549438 66.64889526]
[271.85665894 78.55101776]
[286.73574829 80.45163727]
[301.61483765 82.35225677]
[316.52420044 75.52264404]
[329.73495483 85.23899841]
[327.65704346 101.50597382]
[312.42803955 107.58949280]
[299.71423340 97.23136139]
[284.83511353 95.33073425]
[269.95602417 93.43011475]
[258.36816406 102.71756744]
[243.25155640 101.00202179]
[233.58859253 88.78462219]
[218.70948792 86.88399506]
[203.83038330 84.98337555]
[199.59703064 87.12185669]
[193.97959900 86.64886475]
[188.63105774 82.86315918]
[173.79983521 80.61936951]
[158.96859741 78.37557983]
[144.13737488 76.13178253]
[143.91572571 108.87670898]
[124.67604828 130.75424194]
[135.87715149 140.73097229]
[147.07826233 150.70770264]
[158.27937317 160.68443298]
[169.48048401 170.66116333]
[180.68159485 180.63789368]
[191.88270569 190.61462402]
[208.04252625 193.40602112]
[213.45031738 208.88787842]
[202.54299927 221.13378906]
[186.54107666 217.54620361]
[181.90597534 201.81573486]
[170.70486450 191.83900452]
[159.50375366 181.86227417]
[148.30264282 171.88554382]
[137.10153198 161.90881348]
[125.90042877 151.93208313]
[114.69931793 141.95535278]
[99.90917969 144.45574951]
[92.61011505 157.56008911]
[85.31105042 170.66441345]
[86.49562836 190.81167603]
[69.42446899 199.93693542]
[62.43003082 213.20637512]
[55.43559265 226.47579956]
[48.44115829 239.74523926]
[41.44672012 253.01466370]
[34.45228195 266.28408813]
[40.01875305 275.31097412]
[41.34546661 285.75164795]
[38.26112366 295.72991943]
[31.38113022 303.48028564]
[21.98612976 307.66043091]
[11.78399944 307.58331299]
[4.33406734 320.60247803]
[-3.11586428 333.62164307]
[-10.56579590 346.64077759]
[-18.01572800 359.65994263]
[-25.46566010 372.67910767]
[-32.91559219 385.69827271]
[-40.36552429 398.71743774]
[-26.59765434 392.76379395]
[-11.62172699 393.61325073]
[1.38459527 401.08557129]
[9.66156769 413.59524536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 48]
[8 47]
[10 46]
[11 45]
[12 44]
[13 43]
[19 37]
[20 36]
[21 35]
[23 33]
[24 32]
[25 31]
[50 267]
[51 266]
[52 265]
[53 264]
[54 263]
[55 262]
[56 261]
[57 260]
[60 254]
[61 253]
[62 252]
[63 251]
[64 250]
[65 249]
[69 247]
[70 246]
[71 245]
[76 100]
[77 99]
[78 98]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[84 91]
[85 90]
[113 158]
[114 157]
[115 156]
[116 155]
[117 154]
[118 153]
[119 152]
[120 151]
[121 150]
[122 144]
[123 143]
[124 142]
[125 141]
[127 139]
[128 138]
[129 137]
[159 195]
[160 194]
[161 193]
[162 192]
[163 191]
[164 190]
[165 188]
[166 187]
[167 186]
[168 185]
[169 184]
[170 183]
[173 181]
[174 180]
[175 179]
[196 225]
[197 224]
[198 223]
[199 222]
[200 219]
[201 218]
[202 217]
[205 214]
[206 213]
[207 212]
[227 244]
[228 243]
[229 242]
[230 241]
[231 240]
[232 239]
[233 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
