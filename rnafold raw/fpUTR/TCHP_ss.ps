%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGCGAGCUCAGGGCGCCUCCGGGGUCCUCACUGCGCUCCCCACGCGCUGUGACCCCAUUUGUUGCACGUGCAUGUUCAGGUCGAGAGAGGGAUGCGACGUGUUCGGGGAGCAGCCCACCUUGUGGGUGGCCAAUCCGGGACGGGAAUCUUAAACUUUUAACUCUUGGUGCAAAGACUGAUCCACUGGCGGCUUUACGGGAGCGGGAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[104.33805084 144.86810303]
[101.50580597 159.59829712]
[98.67356110 174.32847595]
[95.84131622 189.05867004]
[101.72013092 204.36785889]
[91.19249725 216.94168091]
[75.08832550 213.84524536]
[69.97422028 198.26391602]
[81.11112976 186.22640991]
[83.94337463 171.49623108]
[86.77561951 156.76605225]
[89.60786438 142.03585815]
[75.88986969 135.96820068]
[66.89671326 147.97332764]
[57.90356064 159.97846985]
[48.91041183 171.98359680]
[39.91725922 183.98872375]
[37.27798462 192.73033142]
[30.70395088 196.10229492]
[21.53634453 207.97474670]
[19.88377380 224.29040527]
[4.81875181 230.76939392]
[-8.16111565 220.74665833]
[-5.70325470 204.53274536]
[9.66389751 198.80712891]
[18.83150291 186.93469238]
[27.91212463 174.99557495]
[36.90527725 162.99044800]
[45.89842987 150.98530579]
[54.89158249 138.98017883]
[63.88473511 126.97504425]
[60.84238434 120.60702515]
[58.88507080 113.96089172]
[58.02363205 107.21637726]
[58.23985291 100.54959106]
[59.48791122 94.12844849]
[61.69647217 88.10842133]
[64.77148438 82.62878418]
[52.83237457 73.54816437]
[40.89326477 64.46754456]
[28.95415688 55.38692093]
[17.01504898 46.30630112]
[5.07594013 37.22567749]
[-6.86316824 28.14505768]
[-18.93368530 19.23985481]
[-31.13302994 10.51197052]
[-43.33237839 1.78408659]
[-55.53172302 -6.94379711]
[-67.73107147 -15.67168045]
[-83.45662689 -17.40876770]
[-89.30556488 -31.10691071]
[-101.50491333 -39.83479309]
[-113.70426178 -48.56267929]
[-125.90360260 -57.29056168]
[-138.73028564 -55.95340347]
[-148.71092224 -63.47154236]
[-150.82449341 -75.38008881]
[-162.89500427 -84.28529358]
[-174.96551514 -93.19049072]
[-183.72616577 -95.76583099]
[-187.14607239 -102.31505585]
[-199.08517456 -111.39567566]
[-211.02429199 -120.47629547]
[-226.69236755 -122.67214203]
[-232.13854980 -136.53533936]
[-244.07766724 -145.61596680]
[-256.01678467 -154.69657898]
[-264.73886108 -157.39965820]
[-268.06271362 -163.99815369]
[-279.86785889 -173.25224304]
[-295.50216675 -175.67678833]
[-300.74520874 -189.61808777]
[-312.55038452 -198.87219238]
[-328.20785522 -196.72302246]
[-340.74838257 -206.34127808]
[-342.73187256 -222.02059937]
[-332.98156738 -234.45874023]
[-317.28216553 -236.27636719]
[-304.94781494 -226.39509583]
[-303.29626465 -210.67733765]
[-291.49111938 -201.42324829]
[-276.70117188 -199.66061401]
[-270.61373901 -185.05740356]
[-258.80859375 -175.80329895]
[-246.93615723 -166.63569641]
[-234.99703979 -157.55506897]
[-223.05793762 -148.47445679]
[-208.24382019 -146.92811584]
[-201.94366455 -132.41540527]
[-190.00456238 -123.33478546]
[-178.06544495 -114.25416565]
[-166.06031799 -105.26100922]
[-153.98979187 -96.35580444]
[-141.91928101 -87.45060730]
[-124.39871979 -86.42984009]
[-117.17572021 -69.48990631]
[-104.97637177 -60.76202393]
[-92.77703094 -52.03414154]
[-80.57768250 -43.30625534]
[-65.72470856 -42.19344711]
[-59.00318527 -27.87102699]
[-46.80384064 -19.14314270]
[-34.60449219 -10.41525936]
[-22.40514755 -1.68737578]
[-10.20580101 7.04050779]
[-5.43409443 7.15724993]
[-0.68437731 10.27076721]
[2.21745300 16.20594788]
[14.15656185 25.28656960]
[26.09567070 34.36719131]
[38.03477859 43.44781113]
[49.97388840 52.52843475]
[61.91299438 61.60905457]
[73.85210419 70.68967438]
[99.45444489 60.72520065]
[125.32367706 69.97470093]
[138.80409241 93.91313934]
[153.79408264 94.46097565]
[168.78407288 95.00880432]
[182.85762024 87.78067780]
[195.29382324 95.97763824]
[210.28741455 96.41593933]
[225.28381348 96.74468231]
[240.28021240 97.07343292]
[255.27661133 97.40217590]
[270.27301025 97.73091888]
[285.26940918 98.05966187]
[300.26580811 98.38841248]
[315.26419067 98.60758209]
[330.26379395 98.71717072]
[344.12014771 91.08090210]
[356.79052734 98.91098022]
[371.79013062 99.02056885]
[386.78973389 99.13015747]
[401.78933716 99.23974609]
[407.27798462 90.09720612]
[415.99893188 84.10214233]
[426.34176636 82.28031921]
[436.42993164 84.89426422]
[444.46121216 91.40780640]
[449.02963257 100.59442139]
[464.01000977 101.36122131]
[478.99038696 102.12802124]
[493.97598267 102.78535461]
[508.96597290 103.33318329]
[523.95599365 103.88101196]
[528.56280518 101.43945312]
[533.18371582 101.04638672]
[537.03674316 102.36461639]
[539.58673096 104.79564667]
[554.53833008 105.99984741]
[569.48992920 107.20404053]
[584.44146729 108.40824127]
[597.55615234 96.82910919]
[614.65081787 98.29019928]
[625.18670654 111.40046692]
[640.15429688 112.38607025]
[655.12188721 113.37167358]
[663.59191895 100.55939484]
[677.34045410 93.71300507]
[692.66925049 94.67414856]
[705.45489502 103.18427277]
[712.25817871 116.95421600]
[711.24896240 132.27992249]
[702.69879150 145.03884888]
[688.90759277 151.79890442]
[673.58514404 150.74168396]
[660.85308838 142.15158081]
[654.13629150 128.33924866]
[639.16870117 127.35365295]
[624.20111084 126.36804962]
[615.79595947 136.13212585]
[603.11254883 139.32081604]
[590.72583008 134.55300903]
[583.23730469 123.35982513]
[568.28570557 122.15562439]
[553.33410645 120.95143127]
[538.38250732 119.74723053]
[523.40814209 118.87100983]
[508.41815186 118.32317352]
[493.42816162 117.77534485]
[486.63107300 120.67150116]
[478.22360229 117.10840607]
[463.24322510 116.34161377]
[448.26281738 115.57481384]
[434.79415894 129.65342712]
[415.00860596 129.27706909]
[401.67974854 114.23934937]
[386.68014526 114.12976074]
[371.68054199 114.02017212]
[356.68093872 113.91058350]
[343.89749146 121.55468750]
[330.15420532 113.71677399]
[315.15460205 113.60718536]
[308.44506836 116.70071411]
[299.93707275 113.38480377]
[284.94067383 113.05606079]
[269.94427490 112.72731781]
[254.94786072 112.39857483]
[239.95146179 112.06982422]
[224.95507812 111.74108124]
[209.95867920 111.41233826]
[203.20463562 114.40750122]
[194.74600220 110.96763611]
[181.74462891 118.23494720]
[168.23625183 109.99879456]
[153.24626160 109.45096588]
[138.25625610 108.90313721]
[137.08451843 115.00041962]
[134.93104553 120.94312286]
[131.81663513 126.57183838]
[127.78814697 131.73010254]
[122.91806030 136.26861572]
[117.30329132 140.04956055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[13 31]
[14 30]
[15 29]
[16 28]
[17 27]
[19 26]
[20 25]
[38 114]
[39 113]
[40 112]
[41 111]
[42 110]
[43 109]
[44 108]
[45 105]
[46 104]
[47 103]
[48 102]
[49 101]
[51 99]
[52 98]
[53 97]
[54 96]
[57 94]
[58 93]
[59 92]
[61 91]
[62 90]
[63 89]
[65 87]
[66 86]
[67 85]
[69 84]
[70 83]
[72 81]
[73 80]
[117 208]
[118 207]
[119 206]
[121 204]
[122 202]
[123 201]
[124 200]
[125 199]
[126 198]
[127 197]
[128 196]
[129 194]
[130 193]
[132 191]
[133 190]
[134 189]
[135 188]
[141 185]
[142 184]
[143 183]
[144 181]
[145 180]
[146 179]
[150 178]
[151 177]
[152 176]
[153 175]
[156 171]
[157 170]
[158 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
