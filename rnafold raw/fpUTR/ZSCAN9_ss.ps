%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCGCCUUCGAGGAGAGGUCGGCAUCUUUGUUCCCUGCCCGGCCAUUGUUCGUGCCGCGCUUCUAGCAACGCCGGGCCGGUAACCCCCUCUCCCUCCUUGCGCGUUCCGGGUCUCGCAAGCGCCUCCAAGGUUUGUCUUGAAGCAUAGCUCCAGCUGGAGGGUACCUUUUAAGCUGUUCAAGGUCAAG\
) } def
/len { sequence length } bind def

/coor [
[174.08287048 230.08215332]
[162.24578857 220.86892700]
[160.23858643 206.00382996]
[169.20822144 193.98112488]
[184.02914429 191.67083740]
[172.66342163 181.88204956]
[161.29769897 172.09326172]
[149.93197632 162.30447388]
[138.56625366 152.51568604]
[123.87335968 150.07270813]
[118.46601868 135.20425415]
[107.10029602 125.41546631]
[76.07656097 109.45533752]
[61.37086487 106.49858093]
[46.66516495 103.54182434]
[31.95946693 100.58506775]
[17.25376701 97.62831116]
[2.54806733 94.67156219]
[-12.15763187 91.71480560]
[-18.56212616 93.46948242]
[-24.05983162 91.94305420]
[-27.29703712 88.40950775]
[-41.89693832 84.96814728]
[-34.04671860 97.74993134]
[-36.11114502 112.60719299]
[-47.14876938 122.76449585]
[-62.12604904 123.58976746]
[-74.21282196 114.70664215]
[-77.89710999 100.16614532]
[-71.49873352 86.59924316]
[-57.93638992 80.19300079]
[-72.04117584 75.08860016]
[-86.14597321 69.98419952]
[-101.75549316 72.56362915]
[-111.09024048 60.95709610]
[-125.19503021 55.85269547]
[-140.80455017 58.43212509]
[-150.13929749 46.82558823]
[-164.24409485 41.72119141]
[-178.34887695 36.61679459]
[-192.45367432 31.51239586]
[-206.55847168 26.40799713]
[-220.66325378 21.30360031]
[-234.76805115 16.19920349]
[-246.76927185 20.95702744]
[-258.41925049 16.40184593]
[-263.66195679 5.48794365]
[-277.68041992 0.15103613]
[-291.69888306 -5.18587160]
[-305.71734619 -10.52277946]
[-319.73580933 -15.85968685]
[-335.38583374 -13.53869724]
[-344.52740479 -25.29798889]
[-362.62438965 -21.94010735]
[-373.17825317 -35.95133209]
[-387.28305054 -41.05572891]
[-404.23443604 -40.76018906]
[-409.21102905 -56.96727753]
[-395.01498413 -66.23596191]
[-382.17864990 -55.16051865]
[-368.07385254 -50.05612183]
[-356.97912598 -54.90443039]
[-345.17913818 -50.75335312]
[-339.19052124 -39.31645584]
[-324.54318237 -42.01917648]
[-314.39889526 -29.87815475]
[-300.38043213 -24.54124641]
[-286.36196899 -19.20433807]
[-272.34350586 -13.86743069]
[-258.32504272 -8.53052330]
[-241.18469238 -12.25972939]
[-229.66365051 2.09441209]
[-215.55885315 7.19880962]
[-201.45407104 12.30320740]
[-187.34927368 17.40760422]
[-173.24449158 22.51200294]
[-159.13969421 27.61639977]
[-145.03489685 32.72079849]
[-130.43424988 29.77626801]
[-120.09062958 41.74790573]
[-105.98583984 46.85230255]
[-91.38519287 43.90777206]
[-81.04157257 55.87941360]
[-66.93678284 60.98381042]
[-52.83198929 66.08820343]
[-38.45557785 70.36824799]
[-23.85567856 73.80960846]
[-9.20087719 77.00910187]
[5.50482273 79.96585846]
[20.21052170 82.92261505]
[34.91622162 85.87937164]
[49.62192154 88.83612823]
[64.32762146 91.79287720]
[79.03331757 94.74963379]
[71.24878693 81.92774200]
[79.31374359 69.28034973]
[94.22279358 70.92964935]
[99.32812500 85.03516388]
[106.24823761 71.72682190]
[113.16835785 58.41847992]
[120.08847809 45.11013794]
[127.00859070 31.80179405]
[133.92871094 18.49345207]
[133.43058777 2.68008876]
[146.16691589 -5.04230213]
[139.11662292 -18.86521912]
[141.57096863 -34.18696213]
[152.58621216 -45.11600494]
[167.92677307 -47.44991302]
[181.69386292 -40.29124832]
[188.59379578 -26.39266396]
[185.97337341 -11.09844685]
[174.84022522 -0.28953925]
[159.47525024 1.87781525]
[160.46835327 16.73927689]
[147.23704529 25.41356850]
[140.31694031 38.72191238]
[133.39682007 52.03025436]
[126.47669983 65.33859253]
[119.55657959 78.64693451]
[112.63646698 91.95528412]
[125.61211395 84.42981720]
[139.26193237 90.64935303]
[142.09704590 105.37899017]
[131.73118591 116.22098541]
[116.88908386 114.04974365]
[128.25480652 123.83853149]
[143.76065063 126.98165894]
[148.35504150 141.14996338]
[159.72076416 150.93875122]
[171.08648682 160.72753906]
[182.45220947 170.51632690]
[193.81793213 180.30509949]
[205.65504456 189.51829529]
[217.93441772 198.13322449]
[230.21379089 206.74815369]
[242.56396484 215.26127625]
[254.98410034 223.67199707]
[267.40423584 232.08273315]
[279.82437134 240.49345398]
[292.24450684 248.90417480]
[304.66461182 257.31491089]
[317.08474731 265.72561646]
[312.73068237 251.37147522]
[316.71450806 236.91017151]
[327.80511475 226.81072998]
[342.57513428 224.19421387]
[356.46017456 229.86918640]
[365.16934204 242.08190918]
[366.01116943 257.05825806]
[358.72555542 270.17007446]
[345.56399536 277.36541748]
[330.59378052 276.42065430]
[341.62963867 286.57986450]
[352.66549683 296.73907471]
[363.70135498 306.89831543]
[374.73721313 317.05752563]
[385.93954468 327.03289795]
[397.30526733 336.82168579]
[408.67098999 346.61047363]
[420.03671265 356.39926147]
[431.40243530 366.18804932]
[447.34973145 371.94305420]
[446.23431396 388.86026001]
[429.66943359 392.47155762]
[421.61364746 377.55377197]
[410.24792480 367.76498413]
[398.88220215 357.97619629]
[387.51647949 348.18740845]
[376.15075684 338.39862061]
[371.38928223 337.85662842]
[366.92291260 334.30612183]
[364.57800293 328.09338379]
[353.54214478 317.93417358]
[342.50628662 307.77493286]
[331.47042847 297.61572266]
[320.43457031 287.45651245]
[308.67404175 278.14575195]
[296.25390625 269.73504639]
[283.83377075 261.32431030]
[271.41363525 252.91358948]
[258.99349976 244.50285339]
[246.57336426 236.09213257]
[234.15324402 227.68141174]
[226.83877563 226.53202820]
[221.59886169 219.02752686]
[209.31948853 210.41259766]
[197.04011536 201.79766846]
[198.43881226 216.73231506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 133]
[6 132]
[7 131]
[8 130]
[9 129]
[11 127]
[12 126]
[13 94]
[14 93]
[15 92]
[16 91]
[17 90]
[18 89]
[19 88]
[22 87]
[23 86]
[31 85]
[32 84]
[33 83]
[35 81]
[36 80]
[38 78]
[39 77]
[40 76]
[41 75]
[42 74]
[43 73]
[44 72]
[47 70]
[48 69]
[49 68]
[50 67]
[51 66]
[53 64]
[55 61]
[56 60]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[103 116]
[105 114]
[134 188]
[135 187]
[136 186]
[137 184]
[138 183]
[139 182]
[140 181]
[141 180]
[142 179]
[143 178]
[153 177]
[154 176]
[155 175]
[156 174]
[157 173]
[158 170]
[159 169]
[160 168]
[161 167]
[162 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
