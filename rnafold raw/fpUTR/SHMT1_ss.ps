%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGGCGGGGCCAAGCCCAAGCCUGGCGCGCAGAGUGCACCUUCCUGAGCUCGAGCGGUCCAGCGCCAAGUUCGGGGUUUGGGGUUGGAGCGGCUGGUCACGUGGCUGGCCCGCGGCGGUGCGCGGGGCGUUGGGUCAGCGGGUCUGGGACUGGUGGCACCGGCGGCGGCGUAGGACGGAGGCGUCGCUAGGCAGCUUCGAACCAGUGCA\
) } def
/len { sequence length } bind def

/coor [
[65.41322327 288.55487061]
[71.05390167 274.19567871]
[83.57566833 265.18408203]
[82.68706512 250.21041870]
[71.41371918 240.54359436]
[70.29924011 225.37083435]
[80.51512909 213.61186218]
[79.62651825 198.63821411]
[78.73790741 183.66455078]
[77.84929657 168.69090271]
[76.96068573 153.71723938]
[76.07208252 138.74359131]
[64.78227997 128.86734009]
[49.82343292 129.97773743]
[34.86458969 131.08813477]
[21.67504501 139.82577515]
[8.40992832 133.05186462]
[-6.54891586 134.16226196]
[-21.50776100 135.27264404]
[-36.46660614 136.38304138]
[-51.42544937 137.49343872]
[-66.38429260 138.60383606]
[-81.34313965 139.71423340]
[-96.30197906 140.82463074]
[-91.32254028 159.56158447]
[-103.00993347 181.51118469]
[-115.69387817 189.51852417]
[-123.23289490 203.42800903]
[-138.12538147 203.67950439]
[-150.80931091 211.68685913]
[-163.49325562 219.69419861]
[-176.17720032 227.70155334]
[-186.34303284 241.26960754]
[-202.19502258 235.25708008]
[-200.80574036 218.36015320]
[-184.18455505 215.01760864]
[-171.50061035 207.01026917]
[-158.81666565 199.00291443]
[-146.13272095 190.99555969]
[-139.50094604 177.65881348]
[-123.70122528 176.83459473]
[-111.01728821 168.82723999]
[-112.23443604 161.42666626]
[-126.26986694 156.13453674]
[-114.66872406 146.62550354]
[-115.88587189 139.22492981]
[-130.46621704 135.70164490]
[-145.04655457 132.17834473]
[-159.62690735 128.65505981]
[-174.20724487 125.13176727]
[-188.78759766 121.60847473]
[-203.36793518 118.08518219]
[-218.59941101 122.36454773]
[-229.15321350 111.85425568]
[-238.22903442 112.88040161]
[-243.92272949 108.16921997]
[-258.44924927 104.43026733]
[-272.97579956 100.69130707]
[-286.45480347 108.94306946]
[-301.80105591 105.16567230]
[-309.90985107 91.60016632]
[-305.97039795 76.29473114]
[-292.31991577 68.32980347]
[-277.05697632 72.43084717]
[-269.23684692 86.16477203]
[-254.71029663 89.90373230]
[-240.18376160 93.64269257]
[-225.62992859 97.27391815]
[-211.44134521 92.74253845]
[-199.84465027 103.50483704]
[-185.26429749 107.02812958]
[-170.68395996 110.55142212]
[-156.10362244 114.07471466]
[-141.52326965 117.59800720]
[-126.94292450 121.12129211]
[-112.36258698 124.64458466]
[-97.41237640 125.86578369]
[-82.45352936 124.75538635]
[-67.49468994 123.64499664]
[-52.53584290 122.53459930]
[-37.57699966 121.42420197]
[-22.61815643 120.31380463]
[-7.65931177 119.20340729]
[7.29953241 118.09301758]
[19.41911888 109.43479156]
[33.75419235 116.12928009]
[48.71303558 115.01889038]
[63.67188263 113.90849304]
[60.79002762 102.45995331]
[61.46573257 90.55654907]
[65.70694733 79.28887177]
[73.19181061 69.71005249]
[83.29204559 62.73741531]
[81.73885345 47.81804657]
[80.18566895 32.89867401]
[78.63247681 17.97930527]
[77.07929230 3.05993533]
[75.52610016 -11.85943508]
[73.97290802 -26.77880478]
[72.41972351 -41.69817352]
[62.36083603 -54.65004349]
[68.79778290 -69.73307037]
[85.10877991 -71.43113708]
[94.51447296 -57.99741364]
[87.33909607 -43.25136185]
[88.89228058 -28.33199310]
[90.44547272 -13.41262341]
[91.99865723 1.50674677]
[93.55184937 16.42611694]
[95.10503387 31.34548759]
[96.65822601 46.26485825]
[98.21141052 61.18422699]
[113.04701233 63.39892578]
[118.88979340 49.58364487]
[124.73256683 35.76836395]
[130.57533264 21.95308304]
[124.40413666 7.40344906]
[130.40596008 -7.21686935]
[145.02001953 -13.23389626]
[159.57606506 -7.07783747]
[165.43824768 7.59902763]
[159.12864685 22.08917427]
[144.39062500 27.79585648]
[138.54785156 41.61113739]
[132.70507812 55.42641830]
[126.86229706 69.24169922]
[128.78193665 75.78692627]
[129.38973999 82.14696503]
[139.98498535 70.39743805]
[154.51989746 73.65102386]
[168.72978210 68.84697723]
[182.93968201 64.04293060]
[197.14958191 59.23888397]
[211.35946655 54.43483353]
[225.56936646 49.63078690]
[239.74327087 44.72158432]
[253.88043213 39.70749664]
[268.01757812 34.69341278]
[282.15472412 29.67932510]
[292.57467651 17.77408409]
[307.15621948 20.81193161]
[321.29336548 15.79784489]
[335.43051147 10.78375816]
[339.70092773 -4.13411808]
[351.94500732 -13.66629219]
[367.45462036 -14.14744949]
[380.26602173 -5.39257526]
[385.45294189 9.23190308]
[381.02093506 24.10257530]
[368.67419434 33.50136566]
[353.16024780 33.81424332]
[340.44458008 24.92090607]
[326.30743408 29.93499184]
[312.17028809 34.94907761]
[302.76150513 46.49567795]
[287.16879272 43.81647110]
[273.03164673 48.83055878]
[258.89450073 53.84464645]
[244.75737000 58.85873413]
[239.50450134 64.05687714]
[230.37341309 63.84068298]
[216.16351318 68.64472961]
[201.95362854 73.44877625]
[187.74372864 78.25282288]
[173.53382874 83.05687714]
[159.32394409 87.86092377]
[149.74508667 99.26683044]
[134.19378662 96.35686493]
[133.84504700 106.08277893]
[130.78538513 115.32147980]
[142.43324280 124.77280426]
[158.02458191 127.45992279]
[163.03244019 141.48742676]
[174.68029785 150.93873596]
[186.32815552 160.39006042]
[198.04571533 169.75480652]
[209.83235168 179.03248596]
[221.61898804 188.31016541]
[233.40560913 197.58784485]
[249.70520020 199.39216614]
[256.04373169 214.51681519]
[245.90065002 227.40286255]
[229.71031189 224.79423523]
[224.12792969 209.37448120]
[212.34130859 200.09680176]
[200.55467224 190.81912231]
[188.76803589 181.54144287]
[181.56840515 179.87452698]
[176.87683105 172.03791809]
[165.22897339 162.58659363]
[153.58111572 153.13528442]
[138.82290649 151.12417603]
[132.98193359 136.42065430]
[121.33406830 126.96933746]
[107.94281006 135.77226257]
[91.04573822 137.85498047]
[91.93434143 152.82862854]
[92.82295227 167.80229187]
[93.71156311 182.77595520]
[94.60017395 197.74960327]
[95.48878479 212.72326660]
[107.02373505 223.19143677]
[107.71160889 238.38951111]
[97.66072083 249.32180786]
[98.54932404 264.29547119]
[112.04903412 271.76281738]
[119.34843445 285.35409546]
[118.11830902 300.73233032]
[108.75119019 312.99041748]
[94.23608398 318.21682739]
[79.20471954 314.74383545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 205]
[4 204]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[13 88]
[14 87]
[15 86]
[17 84]
[18 83]
[19 82]
[20 81]
[21 80]
[22 79]
[23 78]
[24 77]
[26 42]
[27 41]
[29 39]
[30 38]
[31 37]
[32 36]
[46 76]
[47 75]
[48 74]
[49 73]
[50 72]
[51 71]
[52 70]
[54 68]
[56 67]
[57 66]
[58 65]
[93 112]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
[113 126]
[114 125]
[115 124]
[116 123]
[128 168]
[130 166]
[131 165]
[132 164]
[133 163]
[134 162]
[135 161]
[136 159]
[137 158]
[138 157]
[139 156]
[141 154]
[142 153]
[143 152]
[170 194]
[171 193]
[173 191]
[174 190]
[175 189]
[176 187]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
