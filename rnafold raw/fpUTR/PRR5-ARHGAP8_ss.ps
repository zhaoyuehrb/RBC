%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCCGGCCUCCGUUUGCGCCGGGUCUGUGCUGGCCGCGCGCCUGGCGCUCCACGCUGAGCCUCUCCGUGCAAUGAUUAACCCGGCGGGGCGGCCGGCGCGGGACCCGAGACGGAGGCGCGGGGCCGGGGCGGGACCCCGCAGGACCGCUCGGCUUCCUGCUCUCGCCGGAGUUUCCGCGUAGAGGGCGCAUCGCCGGCCCGGGGCCCUUGGUGCGGCGUGGCGCAGGGCGCGGCGUGGGGCGCGCGUGGGCGC\
GGCGCAGGCGGCCCGGGUCACC\
) } def
/len { sequence length } bind def

/coor [
[75.15579224 816.11987305]
[72.67207336 800.89373779]
[78.83544922 786.75103760]
[91.67921448 778.20458984]
[91.34022522 763.20843506]
[91.00122833 748.21228027]
[90.66223907 733.21612549]
[90.32324982 718.21990967]
[82.36463928 711.88769531]
[79.11700439 702.01892090]
[81.87345886 691.77478027]
[89.96202850 684.57672119]
[89.96202850 669.57672119]
[89.96202850 654.57672119]
[89.96202850 639.57672119]
[89.96202850 624.57672119]
[89.96202850 609.57672119]
[89.96202850 594.57672119]
[89.96202850 579.57672119]
[89.96202850 564.57672119]
[89.96202850 549.57672119]
[89.96202850 534.57672119]
[89.96202850 519.57672119]
[82.22472382 506.84945679]
[89.96202850 493.04928589]
[89.96202850 478.04928589]
[89.96202850 463.04928589]
[89.96202850 448.04928589]
[89.96202850 433.04928589]
[89.96202850 418.04928589]
[89.96202850 403.04928589]
[89.96202850 388.04928589]
[79.28115845 377.73159790]
[79.06747437 362.51947021]
[89.96202850 351.38635254]
[89.96202850 336.38635254]
[89.96202850 321.38635254]
[82.22472382 308.65905762]
[89.96202850 294.85888672]
[89.96202850 279.85888672]
[89.96202850 264.85888672]
[89.96202850 249.85890198]
[89.96202850 234.85890198]
[89.96202850 219.85890198]
[87.30632019 215.93228149]
[87.06282043 210.30364990]
[90.13536835 204.52085876]
[90.47435760 189.52468872]
[90.81334686 174.52851868]
[91.15234375 159.53236389]
[91.49133301 144.53619385]
[91.83032227 129.54002380]
[73.17745972 121.05383301]
[62.46866226 101.12596130]
[66.29086304 76.66505432]
[51.53538895 73.96764374]
[36.77991486 71.27022552]
[22.02444458 68.57281494]
[7.26897192 65.87540436]
[-1.69531822 67.40789032]
[-7.63759518 63.06323624]
[-22.36164284 60.19925308]
[-37.08569336 57.33526993]
[-52.10928345 62.29533005]
[-63.12511444 52.27032471]
[-77.84916687 49.40634155]
[-92.57321167 46.54235840]
[-107.29726410 43.67837524]
[-122.02130890 40.81439209]
[-136.74536133 37.95040512]
[-144.80471802 50.81163025]
[-156.96820068 59.88985062]
[-171.59078979 63.95731735]
[-186.69491577 62.46393204]
[-200.23783875 55.61166763]
[-210.38801575 44.32723618]
[-215.77270508 30.13676262]
[-215.66368103 14.95939350]
[-210.07568359 0.84774238]
[-199.76443481 -10.28970528]
[-186.12446594 -16.94670105]
[-171.00045776 -18.22294235]
[-156.43780518 -13.94582558]
[-144.40600586 -4.69379759]
[-136.53222656 8.28188229]
[-133.88137817 23.22635841]
[-119.15732574 26.09034157]
[-104.43328094 28.95432663]
[-89.70922852 31.81830978]
[-74.98518372 34.68229294]
[-60.26113129 37.54627609]
[-46.29070282 32.38136292]
[-34.22170639 42.61122131]
[-19.49765968 45.47520447]
[-4.77361107 48.33918762]
[9.96638393 51.11993027]
[24.72185707 53.81734467]
[39.47732925 56.51475525]
[54.23280334 59.21216965]
[68.98827362 61.90958023]
[79.59487915 51.30297852]
[76.89746094 36.54750824]
[74.20005035 21.79203415]
[71.50263977 7.03656244]
[68.80522919 -7.71890974]
[56.55865479 -21.49454308]
[63.14491653 -37.77862930]
[60.28093338 -52.50267792]
[57.41695023 -67.22673035]
[54.55296707 -81.95077515]
[51.68898392 -96.67481995]
[46.99578476 -104.46462250]
[48.87681580 -111.58139038]
[46.17940521 -126.33686066]
[43.48199081 -141.09233093]
[29.11135483 -146.32989502]
[19.35620689 -157.98039246]
[16.75963402 -172.85063171]
[21.92033768 -186.92980957]
[33.35831451 -196.47120667]
[30.66090012 -211.22666931]
[27.96348763 -225.98214722]
[25.26607513 -240.73762512]
[22.56866264 -255.49308777]
[19.87125015 -270.24856567]
[17.09050751 -284.98855591]
[14.22652435 -299.71261597]
[0.98458743 -308.33969116]
[-2.19681096 -323.82046509]
[6.56979704 -336.97045898]
[22.08333778 -339.98800659]
[35.13990402 -331.08285522]
[37.99326324 -315.53826904]
[28.95057297 -302.57659912]
[31.81455612 -287.85253906]
[36.15921402 -281.91027832]
[34.62672424 -272.94598389]
[37.32413483 -258.19052124]
[40.02154922 -243.43502808]
[42.71895981 -228.67956543]
[45.41637421 -213.92408752]
[48.11378479 -199.16860962]
[62.18767166 -194.29098511]
[71.99569702 -182.94821167]
[74.82803345 -168.12106323]
[69.82566071 -153.77278137]
[58.23746490 -143.78974915]
[60.93487549 -129.03427124]
[63.63228989 -114.27880096]
[66.41303253 -99.53881073]
[69.27701569 -84.81475830]
[72.14099884 -70.09071350]
[75.00498199 -55.36666107]
[77.86896515 -40.64261246]
[87.70359802 -33.64172363]
[90.22799683 -21.42763329]
[83.56069946 -10.41632271]
[86.25811005 4.33914995]
[88.95552063 19.09462166]
[91.65293884 33.85009384]
[94.35034943 48.60556793]
[108.65751648 53.11166382]
[119.32388306 42.56516266]
[129.99024963 32.01866150]
[140.65660095 21.47215843]
[151.26321411 10.86555672]
[161.80970764 0.19919342]
[172.35621643 -10.46716976]
[176.14422607 -18.73505783]
[183.08267212 -21.19363213]
[193.74903870 -31.74013519]
[204.41540527 -42.28663635]
[211.42727661 -57.72262955]
[228.20111084 -55.25788498]
[230.47615051 -38.45727158]
[214.96189880 -31.62027359]
[204.29553223 -21.07377052]
[193.62918091 -10.52726936]
[183.02256775 0.07933211]
[172.47607422 10.74569511]
[161.92956543 21.41205788]
[159.47099304 28.35050964]
[151.20310974 32.13852310]
[140.53674316 42.68502426]
[129.87037659 53.23152542]
[119.20401764 63.77802658]
[127.80545044 77.41299438]
[129.44581604 91.49703217]
[144.43719482 90.98859406]
[159.42857361 90.48016357]
[174.41995239 89.97173309]
[185.17739868 78.70606995]
[200.38803101 78.40400696]
[211.06182861 88.72901917]
[226.05320740 88.22058105]
[241.04458618 87.71215057]
[256.03598022 87.20372009]
[271.02734375 86.69528198]
[281.78479004 75.42962646]
[296.99542236 75.12756348]
[307.66921997 85.45256805]
[322.66061401 84.94413757]
[337.65197754 84.43570709]
[352.64337158 83.92726898]
[367.63473511 83.41883850]
[383.25982666 76.83909607]
[393.90789795 90.03208923]
[384.17816162 103.91620636]
[368.14318848 98.41021729]
[353.15179443 98.91864777]
[338.16043091 99.42708588]
[323.16903687 99.93551636]
[308.17764282 100.44395447]
[298.22793579 111.46841431]
[283.03179932 112.19759369]
[271.53579712 101.68666077]
[256.54440308 102.19509888]
[241.55302429 102.70352936]
[226.56164551 103.21196747]
[211.57026672 103.72039795]
[201.62054443 114.74485779]
[186.42439270 115.47403717]
[174.92839050 104.96311188]
[159.93701172 105.47154236]
[144.94563293 105.97998047]
[129.95423889 106.48841095]
[121.79416656 121.54925537]
[106.82649231 129.87901306]
[106.48750305 144.87518311]
[106.14851379 159.87135315]
[105.80951691 174.86752319]
[105.47052765 189.86369324]
[105.13153076 204.85984802]
[104.96202850 219.85890198]
[104.96202850 234.85890198]
[104.96202850 249.85890198]
[104.96202850 264.85888672]
[104.96202850 279.85888672]
[104.96202850 294.85888672]
[112.69932556 308.65905762]
[104.96202850 321.38635254]
[104.96202850 336.38635254]
[104.96202850 351.38635254]
[115.85658264 362.51947021]
[115.64289856 377.73159790]
[104.96202850 388.04928589]
[104.96202850 403.04928589]
[104.96202850 418.04928589]
[104.96202850 433.04928589]
[104.96202850 448.04928589]
[104.96202850 463.04928589]
[104.96202850 478.04928589]
[104.96202850 493.04928589]
[112.69932556 506.84945679]
[104.96202850 519.57672119]
[104.96202850 534.57672119]
[104.96202850 549.57672119]
[104.96202850 564.57672119]
[104.96202850 579.57672119]
[104.96202850 594.57672119]
[104.96202850 609.57672119]
[104.96202850 624.57672119]
[104.96202850 639.57672119]
[104.96202850 654.57672119]
[104.96202850 669.57672119]
[104.96202850 684.57672119]
[115.79927063 701.60437012]
[105.31941223 717.88092041]
[105.65840912 732.87713623]
[105.99739838 747.87329102]
[106.33639526 762.86944580]
[106.67538452 777.86560059]
[119.89221954 785.82293701]
[126.68837738 799.67266846]
[124.89521790 814.99548340]
[115.08494568 826.90185547]
[100.38797760 831.59259033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 272]
[5 271]
[6 270]
[7 269]
[8 268]
[12 266]
[13 265]
[14 264]
[15 263]
[16 262]
[17 261]
[18 260]
[19 259]
[20 258]
[21 257]
[22 256]
[23 255]
[25 253]
[26 252]
[27 251]
[28 250]
[29 249]
[30 248]
[31 247]
[32 246]
[35 243]
[36 242]
[37 241]
[39 239]
[40 238]
[41 237]
[42 236]
[43 235]
[44 234]
[47 233]
[48 232]
[49 231]
[50 230]
[51 229]
[52 228]
[55 100]
[56 99]
[57 98]
[58 97]
[59 96]
[61 95]
[62 94]
[63 93]
[65 91]
[66 90]
[67 89]
[68 88]
[69 87]
[70 86]
[101 161]
[102 160]
[103 159]
[104 158]
[105 157]
[107 154]
[108 153]
[109 152]
[110 151]
[111 150]
[113 149]
[114 148]
[115 147]
[120 142]
[121 141]
[122 140]
[123 139]
[124 138]
[125 137]
[126 135]
[127 134]
[162 186]
[163 185]
[164 184]
[165 183]
[166 181]
[167 180]
[168 179]
[170 178]
[171 177]
[172 176]
[188 226]
[189 225]
[190 224]
[191 223]
[194 220]
[195 219]
[196 218]
[197 217]
[198 216]
[201 213]
[202 212]
[203 211]
[204 210]
[205 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
