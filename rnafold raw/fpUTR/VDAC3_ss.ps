%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCGAAGCGCGCGACCGUGGCGCGACACGCCGGCGCACAGGCGCUCUCGGGGAGGGGCGGCGCGCAGGCGCGGCUGGGGGUGCGAGGCUGCGCAGGCGCGGACGGCGUUGGUUUGAAGACCUUCAGCGUUGCCCUGGCGGAGCAGAGACAGGCCCUCGGGGUGGAGGUCUUUGGUUUCAUAAGAGCCUGAGAGAGAUUUUUCUAAGAU\
) } def
/len { sequence length } bind def

/coor [
[81.23572540 123.51578522]
[73.93456268 121.80025482]
[62.82732773 131.88139343]
[51.72009659 141.96253967]
[40.61286163 152.04367065]
[29.50562668 162.12481689]
[18.39839363 172.20594788]
[7.36651611 182.36949158]
[-3.58939314 192.61488342]
[-14.54530239 202.86027527]
[-25.50121117 213.10566711]
[-36.45712280 223.35105896]
[-47.10313034 233.91810608]
[-57.42979813 244.79743958]
[-67.75646973 255.67677307]
[-71.39472961 264.05538940]
[-78.31879425 266.63977051]
[-88.80629730 277.36413574]
[-90.81319427 283.66366577]
[-95.06233978 287.43750000]
[-99.76931000 288.24584961]
[-110.57146454 298.65322876]
[-121.37362671 309.06060791]
[-132.17578125 319.46795654]
[-133.91076660 335.41693115]
[-147.53849792 343.88241577]
[-162.60493469 338.37045288]
[-167.55241394 323.10931396]
[-158.58563232 309.80606079]
[-142.58316040 308.66580200]
[-131.78099060 298.25845337]
[-120.97884369 287.85107422]
[-110.17668152 277.44369507]
[-99.53067780 266.87664795]
[-89.04317474 256.15225220]
[-78.63580322 245.35011292]
[-68.30913544 234.47077942]
[-57.98246384 223.59144592]
[-57.92059326 220.78889465]
[-56.74486542 217.84197998]
[-54.39474106 215.17507935]
[-50.96427155 213.22665405]
[-46.70251465 212.39515686]
[-35.74660492 202.14976501]
[-24.79069328 191.90437317]
[-13.83478451 181.65898132]
[-2.87887526 171.41358948]
[-0.14050069 164.54896545]
[8.31725502 161.09870911]
[19.42448807 151.01757812]
[30.53172302 140.93643188]
[41.63895416 130.85530090]
[52.74618912 120.77416229]
[63.85342407 110.69302368]
[65.08039856 95.74328613]
[55.76551437 83.98603821]
[41.13109207 77.97403717]
[39.29217911 63.19338226]
[24.65775490 57.18137741]
[22.81884384 42.40072632]
[13.50396156 30.64347458]
[-3.76853180 24.26049042]
[-5.64943361 6.81259346]
[-15.13833141 -4.80466986]
[-24.62722969 -16.42193413]
[-34.11612701 -28.03919601]
[-43.60502625 -39.65645981]
[-59.08542633 -41.38706970]
[-68.54302216 -53.30379868]
[-66.79775238 -68.05133057]
[-76.28665161 -79.66859436]
[-85.77555084 -91.28585815]
[-95.26445007 -102.90312195]
[-104.75334930 -114.52037811]
[-114.24224854 -126.13764191]
[-123.73114777 -137.75491333]
[-133.22004700 -149.37217712]
[-148.70043945 -151.10278320]
[-158.15803528 -163.01951599]
[-156.41276550 -177.76704407]
[-171.93077087 -183.07020569]
[-174.83117676 -199.21083069]
[-162.13029480 -209.58482361]
[-146.89370728 -203.52030945]
[-144.79550171 -187.25593567]
[-129.99644470 -186.02169800]
[-120.20786285 -174.37532043]
[-121.60277557 -158.86106873]
[-112.11388397 -147.24380493]
[-102.62498474 -135.62654114]
[-93.13608551 -124.00927734]
[-83.64718628 -112.39201355]
[-74.15828705 -100.77474976]
[-64.66938782 -89.15749359]
[-55.18049240 -77.54022980]
[-40.38142776 -76.30599213]
[-30.59284401 -64.65960693]
[-31.98776436 -49.14535904]
[-22.49886513 -37.52809525]
[-13.00996685 -25.91083145]
[-3.52106833 -14.29356861]
[5.96782970 -2.67630482]
[17.96783829 -1.15105939]
[25.96827126 8.44981670]
[25.26121330 21.32859230]
[34.57609558 33.08584213]
[48.54425812 38.25688934]
[51.04943085 53.87849808]
[65.01759338 59.04954529]
[67.52276611 74.67115784]
[76.83764648 86.42840576]
[79.02433777 75.52803802]
[86.17102814 65.01714325]
[98.09606171 57.03940201]
[113.73826599 53.60271072]
[131.24650574 56.23555374]
[148.19744873 65.69384003]
[162.12924194 60.13461304]
[176.06103516 54.57538986]
[189.99284363 49.01616287]
[203.92463684 43.45693588]
[217.85643005 37.89770889]
[231.78823853 32.33848572]
[245.72003174 26.77925873]
[259.65182495 21.22003365]
[273.58361816 15.66080666]
[260.26486206 8.76077843]
[255.59489441 -5.49374247]
[262.24887085 -18.93711853]
[276.41513062 -23.86837196]
[289.97857666 -17.46265793]
[295.16943359 -3.38946128]
[289.01486206 10.28879929]
[303.38708496 5.99467564]
[317.75927734 1.70055187]
[332.13150024 -2.59357190]
[346.50372314 -6.88769531]
[360.87594604 -11.18181896]
[375.24813843 -15.47594261]
[382.57476807 -20.93108749]
[389.86639404 -19.72529411]
[404.30093384 -23.80496025]
[411.70794678 -29.15041924]
[418.98083496 -27.83619690]
[433.47451782 -31.70050240]
[438.92742920 -46.22790146]
[451.89645386 -54.74754715]
[467.39468384 -53.98346329]
[479.46279907 -44.22945786]
[483.46029663 -29.23614311]
[477.85012817 -14.76875401]
[464.78945923 -6.39029789]
[449.30038452 -7.32246161]
[437.33880615 -17.20681000]
[422.84512329 -13.34250450]
[408.38061523 -9.37040806]
[393.94604492 -5.29074097]
[379.54226685 -1.10372984]
[365.17004395 3.19039369]
[350.79785156 7.48451757]
[336.42562866 11.77864075]
[322.05340576 16.07276535]
[307.68121338 20.36688805]
[293.30899048 24.66101265]
[279.14285278 29.59260559]
[265.21105957 35.15183258]
[251.27925110 40.71105576]
[237.34745789 46.27028275]
[223.41566467 51.82950974]
[209.48385620 57.38873672]
[195.55206299 62.94795990]
[181.62026978 68.50718689]
[167.68846130 74.06641388]
[153.75666809 79.62564087]
[151.31094360 94.42491150]
[162.71340942 104.17087555]
[174.11585999 113.91683960]
[185.51832581 123.66280365]
[196.92079163 133.40876770]
[212.96276855 133.59452820]
[222.70547485 146.34048462]
[218.67512512 161.86903381]
[203.96347046 168.26800537]
[189.85603333 160.62864685]
[187.17481995 144.81123352]
[175.77236938 135.06526184]
[164.36990356 125.31930542]
[152.96743774 115.57333374]
[141.56497192 105.82736969]
[135.45173645 110.17228699]
[123.22525024 118.86210632]
[117.11200714 123.20702362]
[122.56735992 137.17982483]
[128.02272034 151.15261841]
[133.47807312 165.12541199]
[138.93342590 179.09820557]
[152.06779480 188.91760254]
[149.86271667 205.16783142]
[134.58657837 211.13203430]
[121.95417786 200.67477417]
[124.96063232 184.55357361]
[119.50527954 170.58076477]
[114.04991913 156.60797119]
[108.59456635 142.63517761]
[103.13920593 128.66238403]
[95.83804321 126.94684601]
[93.92665863 141.82456970]
[93.84259033 156.82432556]
[79.84626770 162.21905518]
[69.71662140 151.15605164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 54]
[3 53]
[4 52]
[5 51]
[6 50]
[7 49]
[8 47]
[9 46]
[10 45]
[11 44]
[12 43]
[13 38]
[14 37]
[15 36]
[17 35]
[18 34]
[21 33]
[22 32]
[23 31]
[24 30]
[55 111]
[56 110]
[58 108]
[60 106]
[61 105]
[63 102]
[64 101]
[65 100]
[66 99]
[67 98]
[70 95]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[77 88]
[80 85]
[117 174]
[118 173]
[119 172]
[120 171]
[121 170]
[122 169]
[123 168]
[124 167]
[125 166]
[126 165]
[133 164]
[134 163]
[135 162]
[136 161]
[137 160]
[138 159]
[139 158]
[141 157]
[142 156]
[144 155]
[145 154]
[175 189]
[176 188]
[177 187]
[178 186]
[179 185]
[192 205]
[193 204]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
