%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCAUGGCAACGCGCGUACACAGGCCGGCCGGGCGGGCGGGGUGCCGGGUGCGAGCUGGAGACUCCGCGGGAGCGCGGCCGGGAGGCUUCGCCCCGGAGCUGGCCCGACGCCUCCCGAGCUGGCAGGGCUCUCGGCGGAGGUCGGAGCGUGGGCUUCCUCCUCCCGCCAGGGAAAACAGAGAGG\
) } def
/len { sequence length } bind def

/coor [
[129.02909851 142.16850281]
[143.96792603 143.51806641]
[132.10627747 134.33647156]
[120.24465179 125.15488434]
[114.49401093 128.85372925]
[108.09345245 131.25875854]
[101.32997894 132.26213074]
[94.50687408 131.81884766]
[88.59153748 145.60322571]
[93.18346405 160.97506714]
[83.91033936 174.06661987]
[67.88570404 174.83515930]
[57.40229034 162.69111633]
[60.50207520 146.95037842]
[74.80716705 139.68788147]
[80.72250366 125.90351868]
[76.30036163 121.93036652]
[72.68155670 117.21385193]
[69.98876190 111.91383362]
[68.31325531 106.20998383]
[67.71182251 100.29563141]
[68.20485687 94.37126160]
[69.77564240 88.63768005]
[72.37094116 83.28925323]
[75.90277863 78.50726318]
[67.33375549 66.19580841]
[58.76473236 53.88435745]
[50.19570923 41.57290649]
[41.62668610 29.26145554]
[33.05766296 16.95000267]
[24.38497353 4.71135616]
[15.60923862 -7.45361280]
[6.83350420 -19.61858177]
[-1.94223094 -31.78355217]
[-11.32284832 -43.48842239]
[-21.28426743 -54.70315170]
[-31.24568558 -65.91787720]
[-41.20710373 -77.13260651]
[-51.16852570 -88.34733582]
[-66.11792755 -93.52671814]
[-68.78525543 -108.18054199]
[-78.74667358 -119.39527130]
[-93.69607544 -124.57464600]
[-96.36341095 -139.22846985]
[-104.42073059 -143.57896423]
[-106.39640808 -150.71775818]
[-116.16699219 -162.09913635]
[-125.93758392 -173.48049927]
[-135.70817566 -184.86187744]
[-145.47875977 -196.24324036]
[-153.46145630 -200.72920227]
[-155.31626892 -207.90034485]
[-164.89324951 -219.44511414]
[-174.47021484 -230.98988342]
[-184.04718018 -242.53465271]
[-193.72129822 -253.99812317]
[-203.49188232 -265.37951660]
[-213.26248169 -276.76086426]
[-226.67247009 -271.92926025]
[-240.89639282 -271.96875000]
[-254.22323608 -276.85418701]
[-265.05688477 -285.97866821]
[-272.10729980 -298.22900391]
[-274.54400635 -312.12133789]
[-272.09402466 -325.98098755]
[-265.07220459 -338.14428711]
[-274.64916992 -349.68905640]
[-284.22613525 -361.23382568]
[-293.80310059 -372.77859497]
[-303.38006592 -384.32336426]
[-318.93795776 -389.50836182]
[-321.96099854 -405.62646484]
[-309.33938599 -416.09674072]
[-294.05712891 -410.14828491]
[-291.83529663 -393.90032959]
[-282.25833130 -382.35556030]
[-272.68136597 -370.81079102]
[-263.10440063 -359.26602173]
[-253.52742004 -347.72125244]
[-238.47138977 -352.63287354]
[-222.64451599 -351.39212036]
[-208.46919250 -344.15933228]
[-198.12634277 -332.01409912]
[-193.22000122 -316.79443359]
[-194.52845764 -300.81845093]
[-201.88110352 -286.53146362]
[-192.11051941 -275.15008545]
[-182.33993530 -263.76870728]
[-175.58262634 -260.73480225]
[-172.50241089 -252.11161804]
[-162.92544556 -240.56684875]
[-153.34848022 -229.02207947]
[-143.77149963 -217.47731018]
[-134.09738159 -206.01383972]
[-124.32679749 -194.63246155]
[-114.55620575 -183.25108337]
[-104.78562164 -171.86972046]
[-95.01503754 -160.48834229]
[-85.14868164 -149.18989563]
[-70.91178894 -144.81266785]
[-67.53194427 -129.35668945]
[-57.57052994 -118.14196014]
[-43.33363342 -113.76473236]
[-39.95379639 -98.30875397]
[-29.99237633 -87.09402466]
[-20.03095818 -75.87929535]
[-10.06953907 -64.66457367]
[-0.10811965 -53.44984055]
[2.00087023 -68.30084229]
[13.89877987 -77.43537903]
[28.79053307 -75.63658142]
[38.17122650 -63.93176651]
[36.68340302 -49.00573730]
[25.17677879 -39.38296890]
[10.22273827 -40.55928802]
[18.99847412 -28.39431763]
[27.77420807 -16.22934723]
[36.54994202 -4.06437874]
[43.02725220 -0.47130120]
[45.36911392 8.38097954]
[53.93813705 20.69243240]
[62.50716019 33.00388336]
[71.07618713 45.31533432]
[79.64521027 57.62678528]
[88.21423340 69.93824005]
[113.04669952 70.46362305]
[130.15927124 88.46604156]
[129.42623901 113.29324341]
[141.28787231 122.47483826]
[153.14950562 131.65643311]
[165.94572449 139.48309326]
[179.52244568 145.86062622]
[193.09916687 152.23814392]
[206.67587280 158.61566162]
[220.30596924 164.87829590]
[233.98846436 171.02558899]
[247.67095947 177.17289734]
[261.35345459 183.32020569]
[275.03594971 189.46751404]
[288.76986694 195.49903870]
[302.55422974 201.41438293]
[316.33859253 207.32972717]
[330.86581421 201.70849609]
[344.76083374 207.90385437]
[350.03030396 221.78796387]
[363.81466675 227.70330811]
[377.59902954 233.61863708]
[391.38339233 239.53398132]
[405.16775513 245.44931030]
[421.37973022 242.97866821]
[431.41268921 255.95063782]
[424.94558716 271.02075195]
[408.63122559 272.68618774]
[399.25244141 259.23367310]
[385.46804810 253.31834412]
[371.68368530 247.40301514]
[357.89932251 241.48767090]
[344.11495972 235.57232666]
[330.42138672 241.31877136]
[316.35781860 235.51614380]
[310.42327881 221.11408997]
[296.63888550 215.19874573]
[282.85452271 209.28341675]
[275.45169067 209.53543091]
[268.88864136 203.15000916]
[255.20614624 197.00270081]
[241.52365112 190.85539246]
[227.84115601 184.70808411]
[214.15866089 178.56079102]
[206.75260925 178.68774414]
[200.29835510 172.19236755]
[186.72164917 165.81484985]
[173.14492798 159.43733215]
[159.56820679 153.05981445]
[167.57431030 165.74453735]
[169.82012939 180.57546997]
[165.92849731 195.06184387]
[156.55297852 206.77079773]
[143.26811218 213.73590088]
[128.30502319 214.78739929]
[114.17662048 209.74871826]
[103.25567627 199.46606445]
[97.37628174 185.66633606]
[97.52583313 170.66708374]
[103.67922211 156.98731995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 130]
[3 129]
[4 128]
[8 16]
[9 15]
[25 125]
[26 124]
[27 123]
[28 122]
[29 121]
[30 120]
[31 118]
[32 117]
[33 116]
[34 115]
[35 108]
[36 107]
[37 106]
[38 105]
[39 104]
[41 102]
[42 101]
[44 99]
[46 98]
[47 97]
[48 96]
[49 95]
[50 94]
[52 93]
[53 92]
[54 91]
[55 90]
[56 88]
[57 87]
[58 86]
[66 79]
[67 78]
[68 77]
[69 76]
[70 75]
[131 174]
[132 173]
[133 172]
[134 171]
[135 169]
[136 168]
[137 167]
[138 166]
[139 165]
[140 163]
[141 162]
[142 161]
[145 158]
[146 157]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
