%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCGCGGCGGGGGGUGGGAAAAGAGAAGCAGAGGGAGGAGUUGUUGCUGCCGCCGCCGCAGCCGCAGCUACUGUGACUUCUCCGAUUGUGUGAGCUUUGUUGGAGCCUGCGUACGUGGAUUUAUCGCUGCCACGGUCUGCGUAGCUCCAGAGGUUUAACCAUAGGAUAGAGAAACCAGGAAUGUAAUGAGGAAAUCAAA\
) } def
/len { sequence length } bind def

/coor [
[80.63722992 156.54809570]
[76.04637146 170.82829285]
[71.45551300 185.10848999]
[66.86465454 199.38868713]
[62.27379227 213.66888428]
[65.41616058 229.17488098]
[54.15487671 238.92335510]
[60.17409134 253.79441833]
[52.17511749 267.70111084]
[36.29408646 269.97540283]
[24.71356392 258.87265015]
[26.31713486 242.90994263]
[39.87467957 234.33248901]
[36.40394211 219.84791565]
[47.99359512 209.07801819]
[52.58445358 194.79782104]
[57.17531204 180.51762390]
[61.76617050 166.23742676]
[66.35703278 151.95722961]
[62.93133163 145.28530884]
[52.05618286 155.61637878]
[45.11759949 168.91511536]
[31.08498573 174.21470642]
[17.08761024 168.82272339]
[10.23683262 155.47856140]
[14.01319027 140.96170044]
[26.49810410 132.64744568]
[41.34690857 134.75889587]
[56.07993698 131.94145203]
[52.65423965 125.26953125]
[38.37404251 120.67867279]
[24.09384537 116.08781433]
[9.81364822 111.49695587]
[-4.11958981 118.46134186]
[-18.53634071 113.60212708]
[-25.08995056 100.27599335]
[-39.37014771 95.68513489]
[-53.65034485 91.09427643]
[-67.93054199 86.50341797]
[-82.21073914 81.91255951]
[-96.49093628 77.32170105]
[-110.77113342 72.73084259]
[-125.05133057 68.13998413]
[-139.33152771 63.54912567]
[-153.71492004 59.29262543]
[-168.19369507 55.37279510]
[-183.53627014 59.23495102]
[-193.79936218 48.44059372]
[-208.27813721 44.52076340]
[-222.75691223 40.60093307]
[-237.23568726 36.68110657]
[-251.71446228 32.76127625]
[-267.05703735 36.62343216]
[-277.32012939 25.82907486]
[-291.79888916 21.90924644]
[-304.52740479 30.99324226]
[-320.11297607 29.71872711]
[-331.19656372 18.68748665]
[-332.54483032 3.10813546]
[-323.52117920 -9.66323280]
[-308.38629150 -13.59636879]
[-294.28640747 -6.83416605]
[-287.87905884 7.43046999]
[-273.40029907 11.35029888]
[-259.09335327 7.20777178]
[-247.79463196 18.28250122]
[-233.31585693 22.20232964]
[-218.83708191 26.12215996]
[-204.35830688 30.04198837]
[-189.87953186 33.96181870]
[-175.57258606 29.81929016]
[-164.27386475 40.89402008]
[-149.79508972 44.81385040]
[-146.56648254 43.37975311]
[-142.48152161 43.44256973]
[-138.25332642 45.38829041]
[-134.74066162 49.26892853]
[-120.46046448 53.85978699]
[-106.18027496 58.45064545]
[-91.90007782 63.04150772]
[-77.61988068 67.63236237]
[-63.33968353 72.22322083]
[-49.05948639 76.81407928]
[-34.77928925 81.40493774]
[-20.49909210 85.99580383]
[-7.40756512 78.98526764]
[7.13998318 83.43762970]
[14.40450668 97.21675873]
[28.68470383 101.80761719]
[42.96490097 106.39847565]
[57.24509811 110.98933411]
[78.03923035 71.76351929]
[113.14321899 75.96070862]
[123.66702271 65.27194977]
[134.19082642 54.58319092]
[144.71463013 43.89443207]
[155.23843384 33.20567322]
[165.76223755 22.51691437]
[176.28604126 11.82815456]
[186.80984497 1.13939476]
[188.84164429 -5.16442680]
[193.11352539 -8.92629910]
[197.83105469 -9.71173668]
[208.68218994 -20.06803703]
[219.53332520 -30.42433739]
[230.38444519 -40.78063583]
[241.23558044 -51.13693619]
[252.08671570 -61.49323654]
[256.13812256 -69.68833160]
[263.18804932 -71.92459106]
[274.19894409 -82.11088562]
[285.20980835 -92.29718018]
[296.22070312 -102.48347473]
[307.23156738 -112.66976166]
[318.24243164 -122.85605621]
[329.01272583 -133.29641724]
[339.53652954 -143.98518372]
[350.06033325 -154.67395020]
[360.58413696 -165.36270142]
[371.10794067 -176.05146790]
[366.38031006 -190.60852051]
[368.97061157 -205.69325256]
[378.28366089 -217.83926392]
[392.17935181 -224.25552368]
[407.46456909 -223.46759033]
[420.62689209 -215.65655518]
[428.64166260 -202.61732483]
[429.66720581 -187.34620667]
[423.46783447 -173.35240173]
[411.46810913 -163.85159302]
[396.42550659 -161.02699280]
[381.79669189 -165.52766418]
[371.27288818 -154.83889771]
[360.74908447 -144.15014648]
[350.22528076 -133.46138000]
[339.70147705 -122.77262115]
[339.36557007 -119.25584412]
[337.30517578 -115.72801971]
[333.53411865 -112.99991608]
[328.42874146 -111.84517670]
[317.41784668 -101.65888977]
[306.40698242 -91.47259521]
[295.39611816 -81.28630066]
[284.38522339 -71.10000610]
[273.37435913 -60.91371536]
[262.44302368 -50.64210510]
[251.59188843 -40.28580475]
[240.74075317 -29.92950630]
[229.88961792 -19.57320595]
[219.03848267 -9.21690559]
[208.18736267 1.13939476]
[197.49859619 11.66319752]
[186.97479248 22.35195732]
[176.45098877 33.04071808]
[165.92718506 43.72947693]
[155.40338135 54.41823578]
[144.87959290 65.10699463]
[134.35578918 75.79575348]
[123.83197784 86.48451233]
[134.31999207 110.08527374]
[120.51334381 139.08900452]
[131.03713989 149.77775574]
[146.23263550 154.18315125]
[149.64845276 168.68078613]
[160.17225647 179.36955261]
[175.74639893 179.65936279]
[186.26675415 190.64920044]
[185.89448547 205.49497986]
[196.41828918 216.18373108]
[206.94209290 226.87249756]
[221.18664551 221.48616028]
[236.39013672 222.36578369]
[249.91847229 229.35893250]
[259.42779541 241.25401306]
[263.27050781 255.99012756]
[260.78091431 271.01416016]
[252.39028931 283.72311401]
[239.55238342 291.91506958]
[224.49143982 294.17074585]
[209.81686401 290.09930420]
[198.07110596 280.40615845]
[191.28919983 266.77069092]
[190.64613342 251.55535889]
[196.25334167 237.39630127]
[185.72953796 226.70753479]
[175.20573425 216.01878357]
[160.35595703 216.16012573]
[149.53106689 205.47010803]
[149.48348999 189.89335632]
[138.95968628 179.20458984]
[124.51692963 175.56373596]
[120.34838867 160.30155945]
[109.82458496 149.61280823]
[102.52774811 151.34661865]
[106.63878632 165.77227783]
[110.74982452 180.19792175]
[117.55203247 193.56692505]
[107.49568939 204.69660950]
[93.50767517 199.28039551]
[93.56893158 184.28031921]
[90.75150299 169.54730225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[4 16]
[5 15]
[7 13]
[30 91]
[31 90]
[32 89]
[33 88]
[36 85]
[37 84]
[38 83]
[39 82]
[40 81]
[41 80]
[42 79]
[43 78]
[44 77]
[45 73]
[46 72]
[48 70]
[49 69]
[50 68]
[51 67]
[52 66]
[54 64]
[55 63]
[93 159]
[94 158]
[95 157]
[96 156]
[97 155]
[98 154]
[99 153]
[100 152]
[103 151]
[104 150]
[105 149]
[106 148]
[107 147]
[108 146]
[110 145]
[111 144]
[112 143]
[113 142]
[114 141]
[115 140]
[116 136]
[117 135]
[118 134]
[119 133]
[120 132]
[161 193]
[162 192]
[164 190]
[165 189]
[168 186]
[169 185]
[170 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
