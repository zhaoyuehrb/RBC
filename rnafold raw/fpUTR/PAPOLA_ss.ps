%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCUAGAACGUUGCUGUGGUAGCGCUCGGGCGCCAUGUUAGGACGAAGGGGAAGGAGGAGAAGCGCUUAAAGCGGCGGGAGCGGUGCGGGAGAGGGGUUGGACCCAGGGCUGAGGCAGGCCCCCCCCUCCCUCCCGCCUCAGUGGAUCAUGCCCAGGGCGGCAGCGGCGGCGGUUGCGGGGGGGAAGUGACUGGGCGGUGCCGGCGCCGGAGACG\
) } def
/len { sequence length } bind def

/coor [
[114.06632996 272.45681763]
[119.11268616 286.58245850]
[118.44356537 301.56753540]
[112.15830231 315.18719482]
[101.19007111 325.41940308]
[87.16728973 330.74496460]
[72.17189789 330.37322998]
[58.43022537 324.35937500]
[47.98246765 313.59628296]
[42.37977982 299.68191528]
[42.45347214 284.68463135]
[34.82901382 297.60235596]
[27.20456123 310.52008057]
[19.58010674 323.43783569]
[11.95565128 336.35556030]
[4.33119678 349.27328491]
[4.71479321 365.66793823]
[-9.43042850 373.96520996]
[-23.55307579 365.62957764]
[-23.12498093 349.23602295]
[-8.58653069 341.64883423]
[-0.96207619 328.73107910]
[6.66237831 315.81335449]
[14.28683281 302.89562988]
[21.91128731 289.97790527]
[29.53574181 277.06018066]
[35.82054520 263.44030762]
[40.70179749 249.25674438]
[45.58304977 235.07318115]
[42.40855026 220.52079773]
[54.21552277 209.98960876]
[59.09677505 195.80604553]
[63.97802734 181.62248230]
[68.85927582 167.43891907]
[73.74053192 153.25535583]
[78.62178040 139.07180786]
[70.07734680 132.98892212]
[63.19236755 125.07652283]
[58.34867477 115.77342987]
[55.81489563 105.59557343]
[40.82891083 104.94728088]
[25.84292603 104.29898834]
[10.85694218 103.65069580]
[-4.12904167 103.00240326]
[-12.83265781 105.75690460]
[-19.32585335 102.23525238]
[-34.30093765 101.37107086]
[-39.77986145 115.47201538]
[-49.34962845 127.18844604]
[-62.07269287 135.37251282]
[-76.70257568 139.22241211]
[-91.80599213 138.36097717]
[-105.90325928 132.87260437]
[-117.61327362 123.29499054]
[-125.78880310 110.56644440]
[-129.62890625 95.93399048]
[-128.75735474 80.83115387]
[-123.25953674 66.73756409]
[-113.67407990 55.03396988]
[-100.94005585 46.86696625]
[-86.30503082 43.03667450]
[-71.20278168 43.91834641]
[-57.11288452 49.42560577]
[-45.41571426 59.01890564]
[-37.25724411 71.75839233]
[-33.43675995 86.39598846]
[-18.46167374 87.26016235]
[-3.48074985 88.01641846]
[11.50523376 88.66471100]
[26.49121857 89.31300354]
[41.47720337 89.96129608]
[56.46318436 90.60958862]
[58.60721970 77.91727448]
[64.53498077 65.76673889]
[53.85223007 55.23683929]
[43.16947937 44.70693970]
[27.90969086 40.52968597]
[24.27707100 26.08484840]
[13.59432030 15.55494690]
[-2.40384364 11.95067406]
[-7.02253675 -3.78462696]
[4.48955679 -15.46382809]
[20.28978157 -11.07236767]
[24.12422180 4.87219572]
[34.80697250 15.40209675]
[49.30265808 18.82618141]
[53.69937897 34.02418900]
[64.38213348 44.55408859]
[75.06488037 55.08399200]
[89.10188293 49.79602432]
[90.18177032 34.83494949]
[91.26165771 19.87387085]
[92.34154510 4.91279316]
[93.42144012 -10.04828453]
[90.91889954 -18.82766533]
[94.62621307 -25.21667671]
[95.92158508 -40.16064072]
[97.21695709 -55.10460281]
[98.51232910 -70.04856110]
[88.25015259 -59.10837555]
[73.72780609 -55.35317612]
[59.44871140 -59.94745636]
[49.84084320 -71.46652222]
[47.88362503 -86.33827972]
[54.18399429 -99.95097351]
[66.78819275 -108.08326721]
[81.78762817 -108.21331787]
[94.53094482 -100.30079651]
[101.06645966 -86.79907227]
[104.28373718 -101.44998169]
[107.50101471 -116.10089111]
[110.71829224 -130.75180054]
[113.93556976 -145.40270996]
[105.20722961 -158.57812500]
[108.43361664 -174.04957581]
[121.70057678 -182.63813782]
[137.13705444 -179.24835205]
[145.58486938 -165.89132690]
[142.03207397 -150.49154663]
[128.58647156 -142.18542480]
[125.36920166 -127.53452301]
[122.15192413 -112.88361359]
[118.93464661 -98.23270416]
[115.71736908 -83.58179474]
[113.45629120 -68.75318909]
[112.16091919 -53.80923080]
[110.86554718 -38.86526871]
[109.57017517 -23.92130470]
[108.38251495 -8.96839619]
[107.30262756 5.99268103]
[106.22274017 20.95375824]
[105.14285278 35.91483688]
[104.06296539 50.87591553]
[125.56111145 59.71839142]
[139.97033691 76.98550415]
[144.50326538 98.24107361]
[159.37727356 100.18110657]
[174.25128174 102.12113953]
[189.12530518 104.06117249]
[203.99931335 106.00120544]
[212.90829468 104.00862122]
[219.07310486 108.07785797]
[233.91761780 110.23203278]
[248.76213074 112.38620758]
[263.60662842 114.54037476]
[278.37493896 108.86514282]
[289.85910034 118.35002136]
[297.81451416 109.52393341]
[308.92807007 105.67111206]
[320.40322876 107.63870239]
[329.41104126 114.82434845]
[333.78759766 125.35397339]
[348.71328735 120.10668945]
[359.91937256 129.91857910]
[374.69561768 132.49964905]
[389.47189331 135.08071899]
[400.62707520 124.45675659]
[415.72253418 122.46174622]
[428.94186401 129.65296936]
[435.31555176 143.08851624]
[450.09182739 145.66958618]
[464.86810303 148.25065613]
[479.64434814 150.83171082]
[494.42062378 153.41278076]
[509.34634399 148.16549683]
[520.55242920 157.97738647]
[535.32867432 160.55845642]
[550.53558350 154.41986084]
[563.28680420 164.73191833]
[560.46496582 180.88645935]
[544.97296143 186.26509094]
[532.74761963 175.33471680]
[517.97131348 172.75366211]
[504.10253906 178.18556213]
[491.83956909 168.18905640]
[477.06329346 165.60798645]
[462.28701782 163.02691650]
[447.51077271 160.44584656]
[432.73449707 157.86479187]
[422.18344116 168.34397888]
[407.30905151 170.62789917]
[393.78381348 163.63352966]
[386.89083862 149.85697937]
[372.11456299 147.27590942]
[357.33828735 144.69485474]
[343.46948242 150.12675476]
[331.20651245 140.13024902]
[316.88327026 151.53630066]
[298.45605469 148.79841614]
[287.70492554 133.19453430]
[273.99841309 139.02384949]
[261.45245361 129.38488770]
[246.60795593 127.23071289]
[231.76344299 125.07654572]
[216.91893005 122.92237091]
[202.05928040 120.87521362]
[187.18527222 118.93518829]
[172.31124878 116.99515533]
[157.43724060 115.05512238]
[142.56323242 113.11508942]
[137.11392212 124.62094879]
[128.63208008 134.11506653]
[117.81075287 140.82170105]
[105.53414154 144.19284058]
[92.80534363 143.95304871]
[87.92408752 158.13661194]
[83.04283905 172.32017517]
[78.16158295 186.50373840]
[73.28033447 200.68730164]
[68.39908600 214.87084961]
[71.22444153 230.43774414]
[59.76660919 239.95442200]
[54.88535690 254.13798523]
[50.00410461 268.32156372]
[61.36957550 258.53247070]
[75.59255981 253.76731873]
[90.56140900 254.73356628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[27 214]
[28 213]
[29 212]
[31 210]
[32 209]
[33 208]
[34 207]
[35 206]
[36 205]
[40 72]
[41 71]
[42 70]
[43 69]
[44 68]
[46 67]
[47 66]
[74 89]
[75 88]
[76 87]
[78 85]
[79 84]
[90 133]
[91 132]
[92 131]
[93 130]
[94 129]
[96 128]
[97 127]
[98 126]
[99 125]
[109 124]
[110 123]
[111 122]
[112 121]
[113 120]
[136 200]
[137 199]
[138 198]
[139 197]
[140 196]
[142 195]
[143 194]
[144 193]
[145 192]
[147 190]
[152 187]
[154 185]
[155 184]
[156 183]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
