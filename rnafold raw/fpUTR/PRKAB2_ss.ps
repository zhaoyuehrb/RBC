%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGGCGGACUCCGCGCCGCCGGCCUUGUAGCCAUUUUAGGAGGAAUCGCUGGUCGCCAGCGAGGGGUGCGGCUUCAAUUUCAAUAACUUUAUUGGUGGCCUGAUCUGCAGAACAGCCAUCACAUCAGUGGCCCUUGGAGGAGGGAGCGCAUCGCCCGAGGUGGUCCCCGACGAGCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[95.31510925 180.39877319]
[110.28151703 179.39547729]
[123.47380829 186.53752136]
[117.76298523 172.66717529]
[112.05216980 158.79682922]
[106.34134674 144.92648315]
[100.63052368 131.05613708]
[94.91970062 117.18579102]
[82.01506042 109.53920746]
[67.10634613 111.19155121]
[57.24107742 123.24618530]
[42.09798050 124.70951843]
[30.66652489 115.23020172]
[15.75781155 116.88254547]
[0.84909731 118.53488922]
[-14.05961704 120.18723297]
[-28.96833038 121.83958435]
[-43.87704468 123.49192810]
[-58.78575897 125.14427185]
[-66.99249268 129.20819092]
[-73.96136475 126.69587708]
[-88.89598846 128.09481812]
[-85.03997803 140.71731567]
[-89.62532806 156.14411926]
[-103.70897675 169.47500610]
[-117.62731171 175.06785583]
[-131.54563904 180.66070557]
[-145.46398926 186.25355530]
[-155.38410950 198.57839966]
[-170.07850647 196.14448547]
[-183.99684143 201.73733521]
[-197.91517639 207.33018494]
[-205.50871277 221.46232605]
[-221.31735229 224.19483948]
[-233.21405029 213.43156433]
[-232.07267761 197.42916870]
[-218.76881409 188.46331787]
[-203.50802612 193.41184998]
[-189.58969116 187.81900024]
[-175.67135620 182.22615051]
[-166.74676514 170.30134583]
[-151.05682373 172.33522034]
[-137.13848877 166.74237061]
[-123.22016144 161.14952087]
[-109.30182648 155.55667114]
[-109.49284363 148.05911255]
[-109.87488556 133.06398010]
[-110.06591034 125.56640625]
[-124.25099182 120.68957520]
[-138.43606567 115.81274414]
[-152.62115479 110.93591309]
[-166.80622864 106.05908203]
[-180.99131775 101.18225098]
[-195.17639160 96.30541992]
[-212.12081909 96.87361908]
[-217.35749817 80.74868774]
[-203.31239319 71.25283051]
[-190.29956055 82.12033844]
[-176.11448669 86.99716949]
[-161.92939758 91.87400055]
[-147.74432373 96.75083160]
[-133.55923462 101.62766266]
[-119.37416077 106.50449371]
[-105.18907928 111.38133240]
[-90.29492950 113.16020203]
[-75.36031342 111.76125336]
[-60.43810272 110.23555756]
[-45.52938843 108.58321381]
[-30.62067604 106.93087006]
[-15.71196079 105.27851868]
[-0.80324686 103.62617493]
[14.10546684 101.97383118]
[29.01418114 100.32148743]
[38.09250641 88.56906128]
[53.18852615 86.68096924]
[65.45400238 96.28283691]
[80.36271667 94.63049316]
[66.48690796 88.93294525]
[51.52108383 87.92098999]
[37.72085571 82.04274750]
[26.62199783 71.95239258]
[19.45965385 58.77283096]
[17.03089523 43.97076797]
[19.60600662 29.19345856]
[26.89841843 16.08541870]
[38.09658051 6.10538244]
[51.95430374 0.36399075]
[66.92941284 -0.49982053]
[81.35538483 3.61007857]
[93.62681580 12.23631382]
[102.37806702 24.41890717]
[106.63525391 38.80210495]
[105.92459869 53.78525925]
[100.32659912 67.69867706]
[99.42126465 82.67132568]
[107.39404297 69.96562958]
[115.36682129 57.25992584]
[123.33959961 44.55422592]
[131.31237793 31.84852409]
[139.28515625 19.14282417]
[147.25791931 6.43712378]
[149.17572021 -2.51764965]
[155.47550964 -6.41502762]
[163.66288757 -18.98351288]
[164.71229553 -34.76987839]
[178.14224243 -41.21083069]
[186.32962036 -53.77931595]
[186.67027283 -70.17492676]
[201.16806030 -77.83954620]
[214.90888977 -68.88848114]
[213.75738525 -52.52980804]
[198.89810181 -45.59193802]
[190.71072388 -33.02345276]
[190.24693298 -18.13606834]
[176.23136902 -10.79613304]
[168.04399109 1.77235198]
[159.96362305 14.40990067]
[151.99084473 27.11560059]
[144.01806641 39.82130051]
[136.04530334 52.52700424]
[128.07252502 65.23270416]
[120.09974670 77.93840027]
[112.12696838 90.64410400]
[115.61672974 97.28274536]
[126.08751678 86.54205322]
[139.53810120 93.18148041]
[137.37989807 108.02540588]
[122.59624481 110.56002808]
[126.08600616 117.19867706]
[141.07249451 117.83528900]
[156.05897522 118.47190857]
[172.16635132 109.56994629]
[186.60641479 119.52536774]
[201.60154724 119.90740967]
[216.59667969 120.28945160]
[231.59181213 120.67150116]
[246.58694458 121.05354309]
[260.72689819 112.74728394]
[274.85482788 121.07395172]
[274.43716431 137.46777344]
[259.90353394 145.06420898]
[246.20491028 136.04867554]
[231.20977783 135.66662598]
[216.21464539 135.28459167]
[201.21949768 134.90254211]
[186.22436523 134.52049255]
[177.22935486 142.62992859]
[164.71911621 142.42047119]
[155.42236328 133.45838928]
[140.43586731 132.82177734]
[125.44938660 132.18516541]
[119.82511139 125.33821869]
[114.27185822 118.43463898]
[108.79004669 111.47496796]
[114.50086975 125.34531403]
[120.21169281 139.21565247]
[125.92251587 153.08599854]
[131.63333130 166.95635986]
[137.34416199 180.82670593]
[144.09721375 194.22058105]
[151.85308838 207.05984497]
[165.61132812 214.87145996]
[165.56932068 229.76600647]
[179.32756042 237.57763672]
[179.28555298 252.47218323]
[187.04142761 265.31143188]
[194.79730225 278.15069580]
[208.16242981 288.58187866]
[201.83871460 304.31234741]
[184.97244263 302.59039307]
[181.95805359 285.90655518]
[174.20217896 273.06732178]
[166.44630432 260.22805786]
[153.24282837 253.33477783]
[152.73007202 237.52188110]
[139.52658081 230.62861633]
[139.01383972 214.81571960]
[131.25796509 201.97645569]
[129.15621948 216.82849121]
[119.45070648 228.26541138]
[105.13850403 232.75547791]
[90.63922882 228.91218567]
[80.43027496 217.92231750]
[77.66417694 203.17956543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 159]
[4 158]
[5 157]
[6 156]
[7 155]
[8 154]
[9 77]
[10 76]
[13 73]
[14 72]
[15 71]
[16 70]
[17 69]
[18 68]
[19 67]
[21 66]
[22 65]
[25 45]
[26 44]
[27 43]
[28 42]
[30 40]
[31 39]
[32 38]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[54 58]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
[101 117]
[103 116]
[104 115]
[106 113]
[107 112]
[129 151]
[130 150]
[131 149]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
[160 178]
[161 177]
[163 175]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
