%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGAGGGCCCAGCGACGCCGCCGCGCCAGCUCCCAGGGCCCGGCCCCCCCCGGCGCUCACGCUCUCGGGGCGGACUCCCGGCCCUCCGCGCCCUCUCGCGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[130.02716064 281.75332642]
[139.39093018 270.03500366]
[153.79342651 265.84356689]
[167.98249817 270.70706177]
[161.64321899 257.11245728]
[155.30393982 243.51783752]
[148.96467590 229.92323303]
[142.62539673 216.32861328]
[136.28611755 202.73399353]
[129.94685364 189.13937378]
[123.60757446 175.54475403]
[112.27143097 171.05314636]
[106.92045593 159.64971924]
[110.96007538 147.29394531]
[105.33400726 142.32197571]
[105.05284882 133.03263855]
[99.51475525 119.09243011]
[86.25216675 113.25720215]
[80.90254974 99.79139709]
[86.54502869 86.44566345]
[81.00693512 72.50545502]
[75.46884155 58.56523895]
[69.93075562 44.62502670]
[64.39266205 30.68481255]
[52.10691071 20.71631622]
[54.59856415 6.03159809]
[49.06047058 -7.90861464]
[34.82522964 -14.23282051]
[29.40739822 -28.44907188]
[35.52428818 -41.98122787]
[29.98619843 -55.92144012]
[24.44810486 -69.86164856]
[13.64260769 -71.56584930]
[4.63488054 -77.62760925]
[-0.92882389 -86.85601807]
[-2.06692481 -97.48947906]
[1.36492443 -107.53185272]
[8.65963936 -115.12712860]
[4.35759068 -129.49697876]
[0.05554223 -143.86682129]
[-4.24650621 -158.23666382]
[-8.75709343 -172.54240417]
[-13.47526455 -186.78105164]
[-18.19343567 -201.01968384]
[-22.91160774 -215.25833130]
[-37.14554214 -222.12641907]
[-42.27503204 -237.07511902]
[-35.25683975 -251.23565674]
[-20.25473595 -256.20681763]
[-6.16920090 -249.03929138]
[-1.35693395 -233.98547363]
[-8.67296791 -219.97650146]
[-3.95479631 -205.73785400]
[0.76337504 -191.49922180]
[5.48154640 -177.26058960]
[10.65286827 -171.81719971]
[10.12333679 -162.53871155]
[14.42538452 -148.16886902]
[18.72743416 -133.79902649]
[23.02948189 -119.42917633]
[40.75483704 -111.67906952]
[47.39741898 -93.19190216]
[38.38831711 -75.39974213]
[43.92641068 -61.45952988]
[49.46450424 -47.51931763]
[63.20009613 -41.87405014]
[69.01509094 -27.81558418]
[63.00068665 -13.44670677]
[68.53878021 0.49350604]
[80.42840576 9.46490574]
[78.33287048 25.14672089]
[83.87096405 39.08693314]
[89.40905762 53.02714539]
[94.94715118 66.96736145]
[100.48524475 80.90756989]
[113.74783325 86.74279785]
[119.09745026 100.20860291]
[113.45497131 113.55433655]
[118.99306488 127.49454498]
[124.73331451 141.35273743]
[139.73419189 151.90737915]
[137.20219421 169.20549011]
[143.54145813 182.80009460]
[149.88073730 196.39471436]
[156.22001648 209.98933411]
[162.55928040 223.58395386]
[168.89855957 237.17857361]
[175.23783875 250.77317810]
[181.57710266 264.36779785]
[189.45175171 277.13455200]
[198.75529480 288.90078735]
[208.05882263 300.66702271]
[217.36235046 312.43325806]
[233.08689880 314.01885986]
[243.01980591 326.31164551]
[241.26805115 342.01855469]
[228.87091064 351.82095337]
[213.18341064 349.90322876]
[203.51264954 337.40313721]
[205.59611511 321.73678589]
[196.29258728 309.97055054]
[186.98905945 298.20431519]
[177.68551636 286.43807983]
[175.66342163 301.30117798]
[165.45373535 312.29034424]
[150.77931213 315.39859009]
[136.99098206 309.49252319]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 89]
[5 88]
[6 87]
[7 86]
[8 85]
[9 84]
[10 83]
[11 82]
[14 80]
[16 79]
[17 78]
[20 75]
[21 74]
[22 73]
[23 72]
[24 71]
[26 69]
[27 68]
[30 65]
[31 64]
[32 63]
[38 60]
[39 59]
[40 58]
[41 57]
[42 55]
[43 54]
[44 53]
[45 52]
[90 103]
[91 102]
[92 101]
[93 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
