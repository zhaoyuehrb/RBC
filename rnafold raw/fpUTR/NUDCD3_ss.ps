%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGCCCGUGGGGCAGCUGGGUCUGGGGAAAACAGCCCGGGGCCGCGGGGGCCGAACGAGCACGGACCGGAAGUUCCGCAGCCGCGCCGUCCGGCGGAGCCGUUGGCUGCGGACGCCGGAAGUGGCCAGUCGGCAGGUCUGAGGCGGCGCUGUGUGUGUGAAGCGUACCUAGGGCGGGAGGCGAC\
) } def
/len { sequence length } bind def

/coor [
[107.82001495 131.12286377]
[100.00000000 132.09027100]
[92.17998505 131.12286377]
[84.83145905 128.27897644]
[78.39748383 123.73007965]
[65.98703003 132.15507507]
[53.57657242 140.58007812]
[41.16611862 149.00506592]
[34.09413528 163.15773010]
[19.21827126 163.90464783]
[6.80781507 172.32963562]
[-0.26416522 186.48229980]
[-15.14003086 187.22921753]
[-27.55048752 195.65422058]
[-39.96094513 204.07920837]
[-43.15238953 216.59039307]
[-53.67994690 223.34973145]
[-65.59485626 221.18684387]
[-78.14509583 229.40216064]
[-90.69533539 237.61749268]
[-103.24557495 245.83280945]
[-115.79581451 254.04812622]
[-121.27653503 261.38232422]
[-128.62660217 262.29397583]
[-141.31307983 270.29730225]
[-153.99955750 278.30065918]
[-155.92997742 293.81860352]
[-167.41864014 304.42730713]
[-183.04098511 305.11761475]
[-195.42059326 295.56359863]
[-198.71220398 280.27636719]
[-191.36161804 266.47409058]
[-176.83955383 260.67379761]
[-162.00289917 265.61416626]
[-149.31642151 257.61083984]
[-136.62994385 249.60751343]
[-124.01113129 241.49789429]
[-111.46089935 233.28257751]
[-98.91065979 225.06724548]
[-86.36042023 216.85192871]
[-73.81018066 208.63661194]
[-66.76828003 192.57214355]
[-48.38594055 191.66876221]
[-35.97548294 183.24375916]
[-23.56502724 174.81875610]
[-17.38072586 161.26872253]
[-1.61718178 159.91918945]
[10.79327488 151.49418640]
[16.97757530 137.94413757]
[32.74111938 136.59461975]
[45.15157700 128.16961670]
[57.56203461 119.74462128]
[69.97248840 111.31962585]
[68.00714111 102.49840546]
[68.57926941 93.47903442]
[71.64350891 84.97686005]
[76.95681763 77.66623688]
[84.09777069 72.12699127]
[92.50000000 68.79847717]
[81.60544586 57.66534805]
[81.81912994 42.45321655]
[92.50000000 32.13553619]
[92.50000000 17.13553429]
[92.50000000 2.13553452]
[81.93463135 -6.23849392]
[78.18254852 -18.98450851]
[82.40048218 -31.37852097]
[92.83368683 -38.96074677]
[93.08567047 -53.95862961]
[93.33766174 -68.95651245]
[93.58964539 -83.95439911]
[83.80111694 -90.74509430]
[78.56838989 -101.31403351]
[79.09166718 -112.97569275]
[85.12467957 -122.82878876]
[95.06486511 -128.47813416]
[95.82054138 -143.45909119]
[96.57621765 -158.44004822]
[97.33189392 -173.42098999]
[98.08757782 -188.40194702]
[98.84325409 -203.38290405]
[99.59893036 -218.36386108]
[100.35460663 -233.34480286]
[101.11029053 -248.32575989]
[101.36227417 -263.32363892]
[101.11029053 -278.32153320]
[93.14225006 -291.98977661]
[100.66464996 -304.84521484]
[100.41265869 -319.84310913]
[100.16067505 -334.84100342]
[99.90868378 -349.83886719]
[93.59711456 -365.57418823]
[106.97028351 -375.99508667]
[120.68597412 -366.02932739]
[114.90657043 -350.09088135]
[115.15855408 -335.09298706]
[115.41054535 -320.09509277]
[115.66252899 -305.09722900]
[123.61254883 -292.50170898]
[116.10816956 -278.57351685]
[116.36016083 -263.57562256]
[118.30147552 -261.52600098]
[119.53911591 -258.57595825]
[119.72303772 -254.99287415]
[118.60757446 -251.16673279]
[116.09123993 -247.57008362]
[115.33556366 -232.58912659]
[114.57988739 -217.60818481]
[113.82420349 -202.62722778]
[113.06852722 -187.64627075]
[112.31285095 -172.66531372]
[111.55717468 -157.68437195]
[110.80149078 -142.70341492]
[110.04581451 -127.72245789]
[123.11596680 -114.92657471]
[122.69639587 -96.32138062]
[108.58753204 -83.70240784]
[108.33554077 -68.70452881]
[108.08355713 -53.70664215]
[107.83156586 -38.70875931]
[120.02548218 -27.14023018]
[120.09103394 -9.99444008]
[107.50000000 2.13553452]
[107.50000000 17.13553429]
[107.50000000 32.13553619]
[118.18087006 42.45321655]
[118.39455414 57.66534805]
[107.50000000 68.79847717]
[128.35649109 84.97686005]
[130.02751160 111.31962585]
[142.43797302 119.74462128]
[154.84841919 128.16961670]
[167.25888062 136.59461975]
[183.02243042 137.94413757]
[189.20672607 151.49418640]
[207.64611816 147.21783447]
[223.10311890 157.58174133]
[226.04605103 175.63452148]
[238.73252869 183.63784790]
[251.41900635 191.64117432]
[264.10546875 199.64450073]
[279.90545654 200.46372986]
[286.54147339 213.79837036]
[299.22793579 221.80169678]
[311.91442871 229.80502319]
[324.65753174 227.72451782]
[335.06414795 234.66859436]
[337.84875488 246.45372009]
[350.39901733 254.66903687]
[362.94924927 262.88436890]
[375.49948120 271.09967041]
[388.04971313 279.31500244]
[401.72354126 272.32055664]
[417.06179810 273.11608887]
[429.93862915 281.48764038]
[436.89019775 295.18331909]
[436.04656982 310.51901245]
[427.63467407 323.36953735]
[413.91729736 330.27813721]
[398.58432007 329.38644409]
[385.76022339 320.93432617]
[378.89465332 307.19534302]
[379.83438110 291.86523438]
[367.28414917 283.64993286]
[354.73391724 275.43460083]
[342.18368530 267.21926880]
[329.63345337 259.00393677]
[312.09335327 258.97717285]
[303.91110229 242.49150085]
[291.22460938 234.48817444]
[278.53814697 226.48484802]
[263.64556885 226.23808289]
[256.10214233 212.33097839]
[243.41567993 204.32765198]
[230.72920227 196.32432556]
[218.04272461 188.32099915]
[207.70217896 193.19906616]
[196.17228699 192.46261597]
[186.33410645 186.17944336]
[180.70207214 175.81776428]
[180.78172302 163.90464783]
[165.90586853 163.15773010]
[158.83387756 149.00506592]
[146.42343140 140.58007812]
[134.01296997 132.15507507]
[121.60251617 123.73007965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 53]
[6 52]
[7 51]
[8 50]
[10 48]
[11 47]
[13 45]
[14 44]
[15 43]
[18 41]
[19 40]
[20 39]
[21 38]
[22 37]
[24 36]
[25 35]
[26 34]
[59 128]
[62 125]
[63 124]
[64 123]
[68 120]
[69 119]
[70 118]
[71 117]
[76 114]
[77 113]
[78 112]
[79 111]
[80 110]
[81 109]
[82 108]
[83 107]
[84 106]
[85 101]
[86 100]
[88 98]
[89 97]
[90 96]
[91 95]
[130 186]
[131 185]
[132 184]
[133 183]
[135 181]
[138 176]
[139 175]
[140 174]
[141 173]
[143 171]
[144 170]
[145 169]
[148 167]
[149 166]
[150 165]
[151 164]
[152 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
