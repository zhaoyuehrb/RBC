%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUGACUAAGAACAAUAGCCCAGUGAAUACUUAGAGCAGUGUUCUCAAGGAAUCCUGCAGAGGCGGCUUCUGAAAAGCCAAGGUAGUAUCUGCCUGCUGAAGGUGUUCUCAGGAUUUCAUUUGCUCUUCUCCAGGAACCACAUCACCUGCCCUUCUGCCUACACUCCUGCCUGCUGUGCCUAACCACAGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[212.35546875 245.04605103]
[207.15374756 240.28799438]
[202.74736023 234.77697754]
[199.24412537 228.64465332]
[196.73022461 222.03793335]
[195.26812744 215.11540222]
[194.89505005 208.04357910]
[195.62196350 200.99288940]
[197.43330383 194.13354492]
[200.28730774 187.63146973]
[188.45407104 178.41331482]
[176.62083435 169.19515991]
[164.78758240 159.97698975]
[149.99235535 158.25935364]
[143.86054993 143.67471313]
[132.02731323 134.45655823]
[120.19406891 125.23840332]
[114.76018524 128.75611877]
[108.73434448 131.12054443]
[102.35820770 132.23687744]
[95.88748932 132.06033325]
[89.58171082 130.59797668]
[83.69375610 127.90849304]
[78.45977783 124.09971619]
[74.08968353 119.32440948]
[64.47530365 131.88920593]
[49.72555161 129.81700134]
[35.94880295 135.75006104]
[22.17205620 141.68312073]
[8.39530754 147.61618042]
[-5.38144064 153.54924011]
[-19.15818977 159.48229980]
[-32.93493652 165.41535950]
[-38.54504776 180.19041443]
[-52.99359131 186.59472656]
[-67.70850372 180.82872009]
[-73.95969391 166.31326294]
[-68.03843689 151.66014099]
[-53.45770645 145.56275940]
[-38.86799622 151.63861084]
[-25.09124947 145.70555115]
[-11.31450081 139.77249146]
[2.46224713 133.83943176]
[16.23899460 127.90637207]
[30.01574326 121.97331238]
[43.79249191 116.04025269]
[52.42146301 103.89981842]
[68.15662384 105.54766083]
[68.27305603 93.82113647]
[72.56573486 82.90794373]
[80.46961212 74.24459076]
[74.42688751 60.51558304]
[68.38417053 46.78658295]
[62.34144974 33.05757904]
[56.29872894 19.32857513]
[50.25600815 5.59957218]
[44.21328735 -8.12943077]
[38.17056656 -21.85843468]
[32.12784576 -35.58743668]
[25.79919243 -42.19063950]
[26.10017014 -49.58388519]
[20.27714729 -63.40750122]
[14.45412350 -77.23111725]
[8.63110065 -91.05473328]
[2.40855122 -97.75801849]
[2.82738662 -105.14552307]
[-2.77445769 -119.06024170]
[-15.10570812 -128.97239685]
[-12.68129826 -143.66836548]
[-18.28314209 -157.58308411]
[-23.88498688 -171.49780273]
[-29.48683167 -185.41252136]
[-37.73244095 -172.88215637]
[-52.65430450 -171.35310364]
[-63.26984406 -181.95075989]
[-61.76596451 -196.87518311]
[-49.24952698 -205.14190674]
[-34.93160629 -200.66557312]
[-39.40732574 -214.98226929]
[-43.88304520 -229.29898071]
[-48.49290466 -234.06425476]
[-49.79917526 -239.61009216]
[-48.26533890 -244.14404297]
[-52.28223801 -258.59619141]
[-56.29913712 -273.04833984]
[-60.31603622 -287.50048828]
[-64.33293152 -301.95263672]
[-68.34983063 -316.40478516]
[-78.41695404 -330.04623413]
[-68.09545898 -343.49627686]
[-52.31379318 -337.30148315]
[-53.89768600 -320.42169189]
[-49.88078690 -305.96954346]
[-45.86388779 -291.51739502]
[-41.84698868 -277.06524658]
[-37.83008957 -262.61309814]
[-33.81319046 -248.16094971]
[-29.56634331 -233.77468872]
[-25.09062386 -219.45799255]
[-20.61490440 -205.14129639]
[-15.57211494 -191.01435852]
[-9.97027016 -177.09963989]
[-4.36842585 -163.18492126]
[1.23341823 -149.27020264]
[13.16398716 -140.35333252]
[11.14025879 -124.66208649]
[16.74210358 -110.74736786]
[22.45471764 -96.87776184]
[28.27774239 -83.05413818]
[34.10076523 -69.23052216]
[39.92378616 -55.40690613]
[45.85684967 -41.63015747]
[51.89957047 -27.90115547]
[57.94229126 -14.17215157]
[63.98501205 -0.44314882]
[70.02773285 13.28585434]
[76.07044983 27.01485825]
[82.11317444 40.74386215]
[88.15589142 54.47286224]
[94.19861603 68.20186615]
[116.78002930 72.37377930]
[130.89215088 90.48934174]
[129.41223145 113.40516663]
[141.24546814 122.62332153]
[153.07870483 131.84147644]
[168.72033691 134.21846008]
[174.00575256 148.14375305]
[185.83898926 157.36190796]
[197.67222595 166.58007812]
[209.50546265 175.79823303]
[232.81233215 164.50741577]
[258.42474365 167.69470215]
[278.11911011 184.24058533]
[285.62426758 208.75181580]
[300.45245361 211.01560974]
[315.28067017 213.27940369]
[330.10885620 215.54318237]
[344.93704224 217.80697632]
[350.24905396 203.71881104]
[358.37438965 191.04315186]
[368.95788574 180.33412170]
[381.53683472 172.05986023]
[395.56137085 166.58209229]
[410.41842651 164.14028931]
[425.45843506 164.84118652]
[440.02398682 168.65415955]
[453.47830200 175.41249084]
[465.23321533 184.82077026]
[474.77487183 196.46768188]
[481.68612671 209.84407043]
[485.66488647 224.36520386]
[486.53717041 239.39627075]
[484.26486206 254.28016663]
[478.94732666 268.36624146]
[470.81698608 281.03869629]
[460.22930908 291.74356079]
[447.64706421 300.01287842]
[433.62039185 305.48513794]
[418.76239014 307.92108154]
[403.72262573 307.21426392]
[389.15859985 303.39556885]
[375.70693970 296.63195801]
[363.95571899 287.21905518]
[354.41867065 275.56838989]
[347.51266479 262.18927002]
[343.53964233 247.66656494]
[342.67324829 232.63516235]
[327.84506226 230.37138367]
[313.01687622 228.10758972]
[298.18869019 225.84379578]
[283.36047363 223.58001709]
[280.48458862 230.37628174]
[276.53958130 236.61300659]
[271.63085938 242.12341309]
[265.88977051 246.76017761]
[272.15063477 260.39108276]
[278.41152954 274.02197266]
[284.67239380 287.65286255]
[290.93328857 301.28375244]
[297.19418335 314.91467285]
[312.09918213 320.16976929]
[318.84722900 334.46099854]
[313.43484497 349.30963135]
[299.07305908 355.90618896]
[284.28250122 350.33712769]
[277.83813477 335.90640259]
[283.56326294 321.17553711]
[277.30239868 307.54464722]
[271.04150391 293.91375732]
[264.78063965 280.28283691]
[258.51974487 266.65194702]
[252.25886536 253.02105713]
[245.37620544 254.35733032]
[238.36325073 254.61216736]
[231.38903809 253.77745056]
[224.62196350 251.87135315]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 130]
[11 129]
[12 128]
[13 127]
[15 125]
[16 124]
[17 123]
[25 48]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[51 120]
[52 119]
[53 118]
[54 117]
[55 116]
[56 115]
[57 114]
[58 113]
[59 112]
[61 111]
[62 110]
[63 109]
[64 108]
[66 107]
[67 106]
[69 104]
[70 103]
[71 102]
[72 101]
[78 100]
[79 99]
[80 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[134 171]
[135 170]
[136 169]
[137 168]
[138 167]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
[180 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
