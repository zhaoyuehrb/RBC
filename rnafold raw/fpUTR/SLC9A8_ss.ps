%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAAAGCCCCGGGAGAGACUAAGAAGCAAUCCUCCCACGCGCUUUCUCCCACCCUCGGGCCACUGAGACGGAGGGACAGAGGGCCGCCCUCGCGCGGCCGAGGCCCCGCCUCCCGCUCGCCCGCCCGCGCCUCCAGCGGAAGCCGGAAGCAAAAGCGGGUCCUGCUAGCCCCGCGGCUCCGAACUCGGUGGUCCUGGAAGCUCCGCAGG\
) } def
/len { sequence length } bind def

/coor [
[110.23173523 138.77206421]
[91.57222748 144.99403381]
[69.75545502 141.62628174]
[59.59191132 152.65815735]
[49.42836380 163.69003296]
[39.26481628 174.72190857]
[29.10127068 185.75378418]
[18.93772316 196.78565979]
[8.85658550 207.89289856]
[9.55736637 223.45396423]
[-0.74149323 234.65164185]
[-15.58090687 235.22383118]
[-25.57907867 246.40580750]
[-35.57725143 257.58779907]
[-45.57542419 268.76974487]
[-55.57359314 279.95172119]
[-58.96078110 288.43493652]
[-65.80483246 291.22433472]
[-75.96837616 302.25622559]
[-70.76059723 316.64849854]
[-72.84925079 331.81082153]
[-81.75437927 344.25900269]
[-95.42964935 351.13253784]
[-110.73258209 350.85195923]
[-124.14668274 343.48171997]
[-132.58947754 330.71542358]
[-134.12089539 315.48672485]
[-128.38899231 301.29504395]
[-116.71095276 291.40151978]
[-101.77028656 288.07962036]
[-87.00025177 292.09268188]
[-76.83670807 281.06079102]
[-66.75556946 269.95355225]
[-56.75739670 258.77157593]
[-46.75922394 247.58961487]
[-36.76105499 236.40763855]
[-26.76288033 225.22566223]
[-27.84790039 210.41491699]
[-17.86762428 198.93237305]
[-2.32538939 197.89472961]
[-0.21036637 190.81317139]
[7.90584660 186.62211609]
[18.06939316 175.59024048]
[28.23294067 164.55836487]
[38.39648819 153.52648926]
[48.56003571 142.49461365]
[58.72357941 131.46273804]
[54.75148392 116.99820709]
[40.37927246 112.70408630]
[26.00705910 108.40995789]
[11.63484573 104.11583710]
[-3.80274963 107.57866669]
[-13.78235912 96.52169800]
[-28.15457153 92.22756958]
[-42.58912277 88.14790344]
[-57.08281708 84.28359985]
[-71.57650757 80.41929626]
[-86.07020569 76.55498505]
[-100.56389618 72.69068146]
[-116.24966431 77.47489929]
[-128.04949951 66.08648682]
[-123.82475281 50.24087524]
[-107.92147064 46.23866272]
[-96.69959259 58.19699097]
[-82.20590210 62.06129456]
[-67.71220398 65.92559814]
[-53.21851349 69.78990936]
[-38.72481918 73.65421295]
[-34.21623993 72.07885742]
[-28.67016220 73.31903839]
[-23.86044884 77.85536194]
[-9.48823547 82.14948273]
[4.92136383 78.37950897]
[15.92896938 89.74362183]
[30.30118179 94.03775024]
[44.67339706 98.33187103]
[59.04560852 102.62599182]
[63.52595520 96.61130524]
[72.48664856 84.58192444]
[76.96700287 78.56723785]
[68.73818970 66.02584076]
[60.50938416 53.48443985]
[52.28057861 40.94303894]
[44.05176926 28.40163803]
[30.30731964 18.47558975]
[36.04061127 2.52047443]
[52.95932770 3.61289263]
[56.59317017 20.17283058]
[64.82197571 32.71422958]
[73.05078125 45.25563049]
[81.27959442 57.79703140]
[89.50839996 70.33843231]
[103.91218567 66.15142059]
[96.38120270 52.23757935]
[104.30713654 39.62691498]
[104.53046417 24.62857819]
[104.75379181 9.63024139]
[104.97711945 -5.36809587]
[102.09583282 -11.31870270]
[102.57961273 -16.98112106]
[105.43702698 -20.80790329]
[106.10681152 -35.79294205]
[106.77659607 -50.77798080]
[107.44638062 -65.76302338]
[108.11616516 -80.74806213]
[102.78311157 -96.84137726]
[116.77115631 -106.42108917]
[129.84877014 -95.63162231]
[123.10120392 -80.07826996]
[122.43141937 -65.09323120]
[121.76163483 -50.10819626]
[121.09185028 -35.12315750]
[120.42206573 -20.13811874]
[119.97545624 -5.14476824]
[119.75212860 9.85356903]
[119.52880096 24.85190582]
[119.30547333 39.85024261]
[126.85242462 52.69130325]
[118.91052246 66.37474823]
[131.86352539 73.93912506]
[144.81651306 66.37474823]
[157.76951599 58.81036758]
[170.72251892 51.24599075]
[183.67550659 43.68161011]
[196.62850952 36.11723328]
[196.65527344 20.82192230]
[204.28399658 7.68040037]
[217.37925720 0.17171271]
[232.37435913 0.22554667]
[245.24250793 7.72730780]
[258.19549561 0.16292882]
[266.21054077 -13.47780228]
[281.10284424 -13.21464729]
[294.05581665 -20.77902603]
[307.00881958 -28.34340477]
[315.02386475 -41.98413467]
[329.91616821 -41.72098160]
[342.86917114 -49.28535843]
[350.52377319 -63.78841782]
[366.91915894 -64.14037323]
[375.18911743 -49.97916031]
[366.82623291 -35.87262726]
[350.43353271 -36.33236313]
[337.48052979 -28.76798248]
[330.39196777 -15.66830635]
[314.57321167 -15.39040661]
[301.62020874 -7.82602739]
[288.66720581 -0.26164863]
[281.57864380 12.83802795]
[265.75988770 13.11592770]
[252.80688477 20.68030548]
[253.01736450 35.57397079]
[245.69596863 48.66034317]
[232.72157288 56.37599564]
[217.52743530 56.56271744]
[204.19288635 49.07023239]
[191.23989868 56.63460922]
[178.28689575 64.19898987]
[165.33389282 71.76336670]
[152.38088989 79.32774353]
[139.42790222 86.89212799]
[137.20277405 101.72616577]
[147.36633301 112.75804901]
[157.52987671 123.78992462]
[167.69342041 134.82180786]
[177.85696411 145.85368347]
[195.55636597 150.93431091]
[198.72976685 168.19398499]
[209.05644226 179.07331848]
[219.38310242 189.95265198]
[237.15618896 194.76921082]
[240.58621216 211.97973633]
[251.07371521 222.70410156]
[261.56121826 233.42848206]
[276.74169922 237.88537598]
[280.10833740 252.39451599]
[290.59582520 263.11889648]
[301.08331299 273.84326172]
[311.57083130 284.56765747]
[322.13787842 295.21365356]
[332.78387451 305.78070068]
[343.42990112 316.34774780]
[359.41540527 320.00772095]
[363.97924805 335.75903320]
[352.42654419 347.39807129]
[336.64172363 342.95159912]
[332.86285400 326.99377441]
[322.21682739 316.42672729]
[311.57083130 305.85968018]
[304.60903931 303.37866211]
[300.84643555 295.05514526]
[290.35894775 284.33078003]
[279.87142944 273.60638428]
[269.38394165 262.88201904]
[254.95361328 259.19219971]
[250.83683777 243.91598511]
[240.34933472 233.19160461]
[229.86183167 222.46722412]
[217.77360535 222.01866150]
[208.94851685 213.16983032]
[208.50376892 200.27932739]
[198.17710876 189.39999390]
[187.85043335 178.52066040]
[175.77021790 177.89215088]
[167.07786560 168.91291809]
[166.82508850 156.01722717]
[156.66154480 144.98535156]
[146.49800110 133.95347595]
[136.33445740 122.92159271]
[126.17090607 111.88971710]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 47]
[4 46]
[5 45]
[6 44]
[7 43]
[8 42]
[9 40]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[18 32]
[19 31]
[48 77]
[49 76]
[50 75]
[51 74]
[53 72]
[54 71]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[80 92]
[81 91]
[82 90]
[83 89]
[84 88]
[93 119]
[95 117]
[96 116]
[97 115]
[98 114]
[101 113]
[102 112]
[103 111]
[104 110]
[105 109]
[120 161]
[121 160]
[122 159]
[123 158]
[124 157]
[125 156]
[130 151]
[131 150]
[133 148]
[134 147]
[135 146]
[137 144]
[138 143]
[162 210]
[163 209]
[164 208]
[165 207]
[166 206]
[168 203]
[169 202]
[170 201]
[172 198]
[173 197]
[174 196]
[176 194]
[177 193]
[178 192]
[179 191]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
