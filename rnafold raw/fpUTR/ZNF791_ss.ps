%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAAUGCGUGCUACGUCACUGUGCGAUCGGGUUGUGCUUAGCUUGGGGUCUCCUGGCCCCUUGACGCGUCAGGUUGCUGUACCCCUGCAUCGGAUGCGCUGUACCCUGCGCUGGCUCCGUGAACCUUAGGGACAACACCGGGACACCCGCGAGGCCGGAAA\
) } def
/len { sequence length } bind def

/coor [
[212.20541382 186.55668640]
[199.56535339 178.48027039]
[186.92527771 170.40385437]
[177.12623596 173.50071716]
[167.03596497 170.60729980]
[160.08106995 162.45341492]
[158.76194763 151.59596252]
[151.43925476 150.35675049]
[146.28971863 142.75288391]
[134.13749695 133.95951843]
[121.98526764 125.16614532]
[109.83303833 116.37277222]
[95.51006317 118.56331635]
[83.77140045 110.06919861]
[81.37358856 95.77945709]
[69.22135925 86.98608398]
[57.06913757 78.19271088]
[52.62712479 77.90278625]
[48.90137482 76.34590912]
[46.20708466 73.91160583]
[44.69699478 71.05242920]
[44.35499191 68.22420502]
[32.91611099 58.52101135]
[17.38710594 55.49436569]
[12.68649006 41.36095047]
[1.24760783 31.65775490]
[-10.19127464 21.95456123]
[-21.63015556 12.25136757]
[-33.16201401 2.65885639]
[-44.78577423 -6.82208109]
[-56.40953445 -16.30301857]
[-68.03329468 -25.78395653]
[-80.95235443 -25.26507187]
[-90.44478607 -33.44091797]
[-91.75833130 -45.49612045]
[-103.19721985 -55.19931412]
[-114.63610077 -64.90250397]
[-126.07498169 -74.60570526]
[-144.24488831 -77.45529175]
[-149.55517578 -94.16013336]
[-161.17893982 -103.64106750]
[-172.80270386 -113.12200928]
[-184.42646790 -122.60294342]
[-196.05023193 -132.08387756]
[-207.67398071 -141.56481934]
[-220.15606689 -149.88334656]
[-233.38061523 -156.96226501]
[-246.60517883 -164.04118347]
[-259.82974243 -171.12010193]
[-273.05429077 -178.19902039]
[-286.27883911 -185.27792358]
[-302.64324951 -184.21072388]
[-311.52340698 -197.99748230]
[-303.78417969 -212.45558167]
[-287.38702393 -212.71176147]
[-279.19992065 -198.50248718]
[-265.97537231 -191.42356873]
[-252.75082397 -184.34465027]
[-239.52626038 -177.26573181]
[-226.30169678 -170.18681335]
[-213.07714844 -163.10789490]
[-219.14991760 -176.82363892]
[-217.67826843 -191.75126648]
[-209.04409790 -204.01712036]
[-195.48794556 -210.43823242]
[-180.52760315 -209.34834290]
[-168.04521179 -201.03027344]
[-161.27996826 -187.64254761]
[-161.98739624 -172.65924072]
[-169.98393250 -159.96847534]
[-183.19448853 -152.86347961]
[-198.19305420 -153.18858337]
[-186.56929016 -143.70764160]
[-174.94552612 -134.22669983]
[-163.32176208 -124.74576569]
[-151.69799805 -115.26483154]
[-140.07424927 -105.78389740]
[-127.98138428 -106.68728638]
[-118.21384430 -98.84216309]
[-116.37178802 -86.04458618]
[-104.93290710 -76.34139252]
[-93.49402618 -66.63819885]
[-82.05513763 -56.93500137]
[-64.66265106 -54.75505066]
[-58.55236053 -37.40771866]
[-46.92860031 -27.92677879]
[-35.30483627 -18.44584274]
[-23.68107605 -8.96490479]
[-16.47557640 -7.16539383]
[-11.92696285 0.81248546]
[-0.48808026 10.51567936]
[10.95080185 20.21887398]
[22.38968468 29.92206764]
[37.10050201 32.25467682]
[42.61930466 47.08213043]
[54.05818558 56.78532410]
[65.86251068 66.04048157]
[78.01473236 74.83385468]
[90.16696167 83.62722778]
[104.48993683 81.43668365]
[116.22859955 89.93080139]
[118.62641144 104.22054291]
[130.77864075 113.01391602]
[142.93086243 121.80728912]
[155.08308411 130.60066223]
[167.31948853 139.27651978]
[187.43344116 140.00056458]
[195.00169373 157.76377869]
[207.64176941 165.84019470]
[220.28184509 173.91661072]
[241.67576599 173.49679565]
[250.55250549 192.10076904]
[263.63818359 199.43324280]
[276.72384644 206.76570129]
[289.80950928 214.09817505]
[302.89520264 221.43064880]
[315.98086548 228.76312256]
[331.80206299 228.75923157]
[339.12283325 241.73057556]
[352.20849609 249.06303406]
[365.29418945 256.39550781]
[378.37985229 263.72799683]
[397.34329224 257.22634888]
[414.74417114 266.55505371]
[419.67181396 285.36062622]
[433.15936279 291.92465210]
[446.64691162 298.48867798]
[453.33535767 298.40222168]
[458.29437256 301.29971313]
[460.52032471 305.57440186]
[473.74487305 312.65332031]
[488.19177246 306.66818237]
[503.09027100 311.41888428]
[511.40573120 324.66226196]
[509.21188354 340.14520264]
[497.54458618 350.55709839]
[481.91278076 350.98184204]
[469.69732666 341.21881104]
[466.66598511 325.87786865]
[453.44140625 318.79895020]
[440.08288574 311.97622681]
[426.59533691 305.41220093]
[413.10781860 298.84817505]
[404.59478760 304.72976685]
[394.32418823 306.53622437]
[384.15841675 303.87133789]
[375.96954346 297.15594482]
[371.29458618 287.56314087]
[371.04739380 276.81365967]
[357.96170044 269.48120117]
[344.87603760 262.14871216]
[331.79037476 254.81623840]
[316.90512085 255.34460449]
[308.64840698 241.84880066]
[295.56271362 234.51632690]
[282.47705078 227.18385315]
[269.39138794 219.85137939]
[256.30569458 212.51890564]
[243.22003174 205.18643188]
[235.10256958 208.98457336]
[226.01109314 208.58772278]
[218.01646423 203.95846558]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 110]
[2 109]
[3 108]
[7 106]
[9 105]
[10 104]
[11 103]
[12 102]
[15 99]
[16 98]
[17 97]
[22 96]
[23 95]
[25 93]
[26 92]
[27 91]
[28 90]
[29 88]
[30 87]
[31 86]
[32 85]
[35 83]
[36 82]
[37 81]
[38 80]
[40 77]
[41 76]
[42 75]
[43 74]
[44 73]
[45 72]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[112 159]
[113 158]
[114 157]
[115 156]
[116 155]
[117 154]
[119 152]
[120 151]
[121 150]
[122 149]
[125 143]
[126 142]
[127 141]
[130 140]
[131 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
