%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGUCGCGGGGGACGCGGGGGACGCGGGGGACGGCGGGGAACGGCGGGGGACGGCGGGGAACAGCGGGGGACGGCGGGGAACAGCGGGGGACGGCGGGGAACAGCAGGGGACUGCGGGUCGCGUCCUGGCCGCCGAGCAUUUAUUUGCUGGCUUUAGCAGCCAACAUCGGCAGUUACGGAUGCAUAACUCUUUAUAGACAG\
) } def
/len { sequence length } bind def

/coor [
[83.68630981 353.72216797]
[72.74539948 342.31723022]
[73.15703583 326.51831055]
[84.67699432 315.69860840]
[84.90911865 300.70037842]
[85.14125061 285.70217896]
[73.13722229 276.92486572]
[68.54915619 262.59262085]
[73.33617401 248.13792419]
[85.86142731 239.16996765]
[86.09355927 224.17176819]
[86.32568359 209.17356873]
[86.55781555 194.17536926]
[86.78993988 179.17715454]
[72.61263275 174.27778625]
[63.53501892 186.21917725]
[54.45740509 198.16058350]
[45.37979126 210.10197449]
[46.11217880 226.12829590]
[33.94453049 236.58430481]
[18.21082115 233.44902039]
[10.98060894 219.12757874]
[17.80029297 204.60617065]
[33.43839645 201.02436829]
[42.51601028 189.08296204]
[51.59362030 177.14157104]
[60.67123413 165.20018005]
[56.27223969 159.12573242]
[44.12335587 167.92372131]
[29.20312119 169.46858215]
[35.32536697 155.77484131]
[47.47425461 146.97685242]
[43.07526016 140.90240479]
[28.89794731 145.80177307]
[18.38185120 157.62219238]
[3.82542491 154.46629333]
[-10.35188675 159.36566162]
[-18.63339233 173.10598755]
[-34.55758667 175.05523682]
[-45.90878677 163.71813965]
[-43.97932816 147.79154968]
[-30.24932480 139.49295044]
[-15.25125790 145.18835449]
[-1.07394648 140.28898621]
[8.42809296 128.81900024]
[23.99857712 131.62446594]
[38.17588806 126.72509003]
[41.19200516 94.11511230]
[58.24779129 70.97415924]
[81.25845337 61.74547195]
[77.13381195 47.32370758]
[71.76197815 39.92768478]
[73.05878448 32.64678192]
[69.15781403 18.16291428]
[65.25684357 3.67904544]
[61.35587692 -10.80482292]
[50.29587173 -22.11795044]
[54.45703125 -36.41949081]
[50.55606079 -50.90335846]
[46.65509415 -65.38722992]
[42.75412750 -79.87109375]
[30.96952438 -84.02658081]
[22.97280693 -93.42550659]
[20.81367874 -105.41783905]
[24.92404175 -116.72366333]
[15.84642887 -128.66505432]
[1.33530891 -134.96885681]
[-0.20729676 -149.78337097]
[-15.39323521 -147.95730591]
[-29.36202431 -153.93807983]
[-38.40158844 -166.02743530]
[-40.16442871 -180.91865540]
[-34.27655029 -194.60070801]
[-48.78767014 -200.90451050]
[-50.33027649 -215.71902466]
[-59.40789032 -227.66041565]
[-74.91782379 -227.18963623]
[-87.72335815 -235.95306396]
[-92.90051270 -250.58100891]
[-88.45856476 -265.44869995]
[-76.10552979 -274.83923340]
[-60.59140015 -275.14175415]
[-47.88168335 -266.23992920]
[-42.86351776 -251.55667114]
[-47.46649551 -236.73803711]
[-38.38888168 -224.79663086]
[-24.52705383 -219.34695435]
[-22.33515549 -203.67832947]
[-7.57664299 -205.69125366]
[6.30017996 -200.00883484]
[15.53054428 -188.06452942]
[17.55627632 -173.00486755]
[11.73409939 -158.86097717]
[25.59592628 -153.41130066]
[27.78782463 -137.74267578]
[36.86543655 -125.80126953]
[39.78670120 -126.55169678]
[42.78113556 -126.91268158]
[39.13681793 -142.30844116]
[50.07554626 -152.41752625]
[54.20018768 -166.83929443]
[44.81161499 -179.05242920]
[44.41934204 -194.27410889]
[52.96429062 -206.66151428]
[66.99697113 -211.58309937]
[71.12161255 -226.00485229]
[75.24625397 -240.42662048]
[79.37089539 -254.84838867]
[74.86988068 -270.61776733]
[86.46890259 -282.21063232]
[102.23588562 -277.70126343]
[105.95110321 -261.72848511]
[93.79266357 -250.72375488]
[89.66802216 -236.30198669]
[85.54338074 -221.88021851]
[81.41873169 -207.45845032]
[90.72704315 -195.86132812]
[91.42993164 -180.82902527]
[83.04847717 -168.11663818]
[68.62195587 -162.71464539]
[64.49731445 -148.29287720]
[68.43665314 -133.92866516]
[57.20289993 -122.78804016]
[67.57696533 -103.60611725]
[57.23799515 -83.77206421]
[61.13896179 -69.28819275]
[65.03993225 -54.80432892]
[68.94089508 -40.32045746]
[79.72187805 -30.04331398]
[75.83974457 -14.70579147]
[79.74071503 -0.22192258]
[83.64168549 14.26194572]
[87.54264832 28.74581528]
[91.55557251 43.19906616]
[95.68021393 57.62083054]
[120.26560211 59.47297287]
[141.14541626 75.23332977]
[155.59866333 71.22040558]
[170.05191040 67.20748138]
[184.50515747 63.19455719]
[192.06427002 49.31523895]
[207.24694824 44.92638016]
[221.04556274 52.63180542]
[225.27365112 67.86003113]
[217.42277527 81.57640839]
[202.15069580 85.64326477]
[188.51808167 77.64780426]
[174.06483459 81.66072845]
[159.61158752 85.67365265]
[145.15834045 89.68657684]
[146.08628845 104.65785217]
[160.92446899 106.85521698]
[175.76264954 109.05258942]
[190.60083008 111.24995422]
[204.28938293 102.88317871]
[219.31559753 108.50390625]
[224.15263367 123.80039978]
[215.08995056 137.03849792]
[199.07963562 138.06306458]
[188.40345764 126.08813477]
[173.56527710 123.89076996]
[158.72711182 121.69339752]
[143.88893127 119.49603271]
[144.97921753 130.71730042]
[143.28848267 142.85046387]
[138.54812622 155.23127747]
[150.12945557 164.76399231]
[161.71080017 174.29670715]
[173.29212952 183.82940674]
[188.86425781 186.62573242]
[193.77369690 200.68797302]
[209.47792053 198.91244507]
[221.78575134 208.82672119]
[223.39515686 224.54884338]
[213.35130310 236.75115967]
[197.61303711 238.19425964]
[185.51759338 228.02195740]
[184.24098206 212.26931763]
[169.49722290 210.15484619]
[163.75942993 195.41075134]
[152.17808533 185.87803650]
[140.59674072 176.34532166]
[129.01541138 166.81260681]
[122.20859528 169.96177673]
[128.50692749 183.57540894]
[134.80505371 197.18914795]
[121.19123077 203.48706055]
[114.89329529 189.87374878]
[108.59496307 176.26011658]
[101.78814697 179.40928650]
[101.55601501 194.40748596]
[101.32389069 209.40570068]
[101.09175873 224.40390015]
[100.85963440 239.40209961]
[113.10136414 248.75337219]
[117.43875885 263.34927368]
[112.40935516 277.53268433]
[100.13945007 285.93432617]
[99.90732574 300.93252563]
[99.67519379 315.93072510]
[110.85479736 327.10174561]
[110.77731323 342.90585327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[10 194]
[11 193]
[12 192]
[13 191]
[14 190]
[15 27]
[16 26]
[17 25]
[18 24]
[33 47]
[34 46]
[36 44]
[37 43]
[50 135]
[51 134]
[53 133]
[54 132]
[55 131]
[56 130]
[58 128]
[59 127]
[60 126]
[61 125]
[65 96]
[66 95]
[68 93]
[73 88]
[75 86]
[76 85]
[98 123]
[100 121]
[101 120]
[105 116]
[106 115]
[107 114]
[108 113]
[137 150]
[138 149]
[139 148]
[140 147]
[151 163]
[152 162]
[153 161]
[154 160]
[166 183]
[167 182]
[168 181]
[169 180]
[171 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
