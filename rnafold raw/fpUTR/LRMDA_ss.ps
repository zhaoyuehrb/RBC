%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGAAGAAAGAGGAUCUGGCUGAAAGACCCGCAACUUUCACUUGUUGAGAACCUUUAGCCAGCGCCGGCGUGCAUGUGUUUUAGUUUUAUUCUUUUUCCCUUGCCCCCAAAGCCGUGGAGUACCUGCUGUUGCUCUCAUGCCUCUUGCCAACAGUGGCAUCUGCUCAGUGUAGCCAUCAAGAAUUUGAAUGUCAAUAUCUUUGCCUUGAAAUGA\
) } def
/len { sequence length } bind def

/coor [
[-67.46762085 142.59501648]
[-79.87946320 139.28863525]
[-91.31761169 133.45965576]
[-101.27621460 125.36914062]
[-109.31552887 115.37805176]
[-115.08135986 103.93122101]
[-118.32064819 91.53749847]
[-133.31430054 91.97377014]
[-148.30795288 92.41004181]
[-163.30160522 92.84631348]
[-178.29525757 93.28258514]
[-193.28892517 93.71884918]
[-208.28257751 94.15512085]
[-223.27622986 94.59139252]
[-238.26988220 95.02766418]
[-253.26353455 95.46393585]
[-264.07507324 106.67768097]
[-279.28698730 106.90653229]
[-289.91098022 96.53026581]
[-304.90463257 96.96653748]
[-319.89828491 97.40280914]
[-334.89193726 97.83908081]
[-349.88558960 98.27535248]
[-364.87924194 98.71162415]
[-379.87289429 99.14788818]
[-394.86654663 99.58415985]
[-408.43585205 107.71956635]
[-421.38278198 100.35570526]
[-436.37643433 100.79197693]
[-447.18795776 112.00572205]
[-462.39987183 112.23457336]
[-473.02386475 101.85830688]
[-488.01751709 102.29457855]
[-503.01116943 102.73085022]
[-518.45751953 112.75855255]
[-533.56671143 103.82903290]
[-548.55242920 104.48332214]
[-559.19970703 115.85312653]
[-574.40673828 116.30319214]
[-585.18048096 106.08253479]
[-598.63000488 114.41442871]
[-611.68267822 107.23964691]
[-626.66839600 107.89393616]
[-640.11791992 116.22583008]
[-653.17059326 109.05104828]
[-668.15631104 109.70533752]
[-683.14202881 110.35962677]
[-698.12774658 111.01392365]
[-713.11346436 111.66821289]
[-728.09918213 112.32250214]
[-741.63183594 121.58530426]
[-756.30102539 114.25405884]
[-757.01635742 97.87052155]
[-743.04193115 89.28867340]
[-728.75347900 97.33677673]
[-713.76776123 96.68248749]
[-698.78204346 96.02819824]
[-683.79632568 95.37390900]
[-668.81060791 94.71961212]
[-653.82489014 94.06532288]
[-641.44720459 85.78023529]
[-627.32269287 92.90821075]
[-612.33697510 92.25392151]
[-599.95928955 83.96883392]
[-585.83477783 91.09680939]
[-575.99279785 79.97605133]
[-560.80444336 79.09903717]
[-549.20672607 89.49759674]
[-534.22100830 88.84330750]
[-525.82232666 80.14086914]
[-513.34539795 79.47100830]
[-503.44741821 87.73719788]
[-488.45376587 87.30092621]
[-473.46011353 86.86465454]
[-463.45745850 75.88821411]
[-448.25796509 75.23218536]
[-436.81268311 85.79832458]
[-421.81903076 85.36205292]
[-409.32217407 77.25785828]
[-395.30282593 84.59050751]
[-380.30917358 84.15423584]
[-365.31552124 83.71796417]
[-350.32183838 83.28169250]
[-335.32818604 82.84542847]
[-320.33453369 82.40915680]
[-305.34088135 81.97288513]
[-290.34722900 81.53661346]
[-280.34457397 70.56017303]
[-265.14508057 69.90414429]
[-253.69981384 80.47028351]
[-238.70614624 80.03401184]
[-223.71249390 79.59774017]
[-208.71884155 79.16146851]
[-193.72518921 78.72519684]
[-178.73153687 78.28892517]
[-163.73788452 77.85265350]
[-148.74423218 77.41638947]
[-133.75057983 76.98011780]
[-118.75691986 76.54384613]
[-114.77217102 59.80813980]
[-106.25561523 44.84555817]
[-93.88185120 32.85601807]
[-78.63511658 24.80335426]
[-61.73103714 21.33785439]
[-44.51968002 22.74374199]
[-28.37774277 28.91587639]
[-14.59842777 39.36758804]
[-4.28784323 53.26904297]
[1.72378874 69.51311493]
[16.66670990 68.20578003]
[31.60963058 66.89844513]
[43.61412048 58.08133316]
[58.03612900 64.58642578]
[72.97904968 63.27909088]
[85.85897827 55.59095383]
[94.10160828 43.05863571]
[102.34424591 30.52631760]
[110.58688354 17.99400139]
[118.73815918 5.40207386]
[126.79765320 -7.24879789]
[134.85714722 -19.89966965]
[142.91664124 -32.55054092]
[150.97613525 -45.20141220]
[151.86538696 -60.99760818]
[165.22932434 -67.57443237]
[165.40368652 -83.97265625]
[179.82298279 -91.78391266]
[193.65388489 -82.97265625]
[192.66833496 -66.60314941]
[177.88018799 -59.51493835]
[177.56741333 -44.62361908]
[163.62701416 -37.14191818]
[155.56752014 -24.49104691]
[147.50802612 -11.84017563]
[139.44853210 0.81069618]
[131.38903809 13.46156788]
[130.44660950 20.78903198]
[123.11920166 26.23663521]
[114.87656403 38.76895142]
[106.63392639 51.30126953]
[98.39129639 63.83358765]
[102.73767853 69.94578552]
[111.67757416 57.90093231]
[125.89546967 62.68123245]
[125.74268341 77.68045807]
[111.43045807 82.17017365]
[115.77684021 88.28236389]
[130.32066345 84.61121368]
[144.86448669 80.94006348]
[159.40829468 77.26891327]
[173.95211792 73.59776306]
[185.33207703 61.78978348]
[201.18070984 66.00320435]
[205.19429016 81.90361786]
[193.24400330 93.13404846]
[177.62326050 88.14158630]
[163.07945251 91.81273651]
[148.53562927 95.48388672]
[133.99180603 99.15503693]
[119.44799042 102.82618713]
[119.99331665 117.81693268]
[120.53858185 132.80635071]
[135.31069946 135.41107178]
[150.08280945 138.01579285]
[164.85493469 140.62052917]
[178.76847839 132.63346863]
[193.63436890 138.66543579]
[198.04878235 154.08918762]
[188.62535095 167.07296753]
[172.59292603 167.65672302]
[162.25021362 155.39263916]
[147.47808838 152.78791809]
[132.70597839 150.18319702]
[117.93386078 147.57847595]
[114.27872467 154.12751770]
[128.99473572 157.03248596]
[130.77941895 171.92594910]
[117.16638184 178.22558594]
[106.96844482 167.22560120]
[103.31330872 173.77464294]
[113.28524780 184.98002625]
[123.25718689 196.18539429]
[133.22912598 207.39077759]
[148.76887512 208.46484375]
[158.72221375 219.97073364]
[157.60249329 234.77890015]
[167.57443237 245.98428345]
[177.54637146 257.18966675]
[187.51831055 268.39501953]
[202.56486511 276.20767212]
[199.22283936 292.82897949]
[182.32595825 294.21878052]
[176.31292725 278.36697388]
[166.34098816 267.16159058]
[156.36904907 255.95622253]
[146.39710999 244.75083923]
[131.55908203 244.14387512]
[121.28649902 232.92208862]
[122.02374268 217.36270142]
[112.05181122 206.15733337]
[102.07987213 194.95195007]
[92.10793304 183.74658203]
[45.45059204 122.23552704]
[74.28638458 78.22200775]
[59.34346390 79.52935028]
[46.27015686 88.43997192]
[32.91696548 81.84136963]
[17.97404480 83.14870453]
[3.03112483 84.45603943]
[1.18696630 97.22366333]
[-3.28744435 109.31556702]
[-10.19099045 120.19660187]
[-19.21512032 129.38584900]
[-29.95763206 136.47790527]
[-41.94060898 141.16073608]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 99]
[8 98]
[9 97]
[10 96]
[11 95]
[12 94]
[13 93]
[14 92]
[15 91]
[16 90]
[19 87]
[20 86]
[21 85]
[22 84]
[23 83]
[24 82]
[25 81]
[26 80]
[28 78]
[29 77]
[32 74]
[33 73]
[34 72]
[36 69]
[37 68]
[40 65]
[42 63]
[43 62]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[109 209]
[110 208]
[111 207]
[113 205]
[114 204]
[115 141]
[116 140]
[117 139]
[118 138]
[119 136]
[120 135]
[121 134]
[122 133]
[123 132]
[125 130]
[147 160]
[148 159]
[149 158]
[150 157]
[151 156]
[162 174]
[163 173]
[164 172]
[165 171]
[180 202]
[181 201]
[182 200]
[183 199]
[186 196]
[187 195]
[188 194]
[189 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
