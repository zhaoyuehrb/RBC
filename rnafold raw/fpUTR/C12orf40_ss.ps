%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGAGGCUGUUGGGAGGUUGGGCCUCAGGCGGUGGACCAGAAGGAGCUUACUCGGGCCCUGACGUUGUCAGGAGGCCCUGGGGGAUCCUGCUGAAGCUGCGAUUUGGCGCAGAGCUGAGAUGUCUGAGCUCUAGACACAGGGACCUCAGUGUCAAAAGAUUUGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[102.34953308 228.49725342]
[93.92285919 216.21554565]
[100.88819122 202.01010132]
[100.06187439 187.03286743]
[99.23555756 172.05564880]
[98.40924072 157.07843018]
[82.59748077 150.34854126]
[70.56443787 139.72462463]
[59.90923309 150.28239441]
[49.25402832 160.84016418]
[38.59882355 171.39794922]
[27.94361687 181.95571899]
[17.28841209 192.51348877]
[16.44212341 205.40879822]
[7.31802845 213.98455811]
[-4.80228281 214.02713013]
[-15.64964581 224.38737488]
[-26.49700737 234.74763489]
[-37.34437180 245.10787964]
[-48.19173431 255.46812439]
[-55.46981430 270.78039551]
[-72.19845581 268.02560425]
[-74.18227386 251.18812561]
[-58.55197906 244.62075806]
[-47.70461655 234.26051331]
[-36.85725403 223.90026855]
[-26.00989342 213.54002380]
[-15.16252995 203.17976379]
[-11.16834545 186.10801697]
[6.73063707 181.85829163]
[17.38584328 171.30050659]
[28.04104805 160.74273682]
[38.69625473 150.18496704]
[49.35145950 139.62719727]
[60.00666428 129.06941223]
[53.57933807 117.01821899]
[50.69441223 103.66835022]
[51.57204056 90.03855133]
[56.14524841 77.16890717]
[64.06505585 66.04153442]
[54.85186386 54.20442581]
[45.63867188 42.36731720]
[31.05661392 36.22939301]
[29.34517860 21.43343735]
[20.13198853 9.59632969]
[10.91879749 -2.24077821]
[1.70560658 -14.07788563]
[-12.87645149 -20.21581268]
[-14.58788681 -35.01176834]
[-23.80107689 -46.84887314]
[-33.01426697 -58.68598175]
[-40.78565216 -63.56007004]
[-42.28559494 -70.82623291]
[-51.27976990 -82.83059692]
[-65.74661255 -89.23537445]
[-67.18594360 -104.06027222]
[-76.18012238 -116.06463623]
[-85.17430115 -128.06900024]
[-94.16847992 -140.07336426]
[-103.16265106 -152.07772827]
[-112.37584686 -163.91484070]
[-121.80493927 -175.58068848]
[-131.23403931 -187.24655151]
[-140.66313171 -198.91239929]
[-150.09222412 -210.57826233]
[-164.75117493 -219.09596252]
[-160.62435913 -235.53997803]
[-143.68055725 -236.12658691]
[-138.42636108 -220.00735474]
[-128.99726868 -208.34149170]
[-119.56817627 -196.67564392]
[-110.13908386 -185.00978088]
[-100.70999146 -173.34393311]
[-96.10356140 -171.95761108]
[-92.33437347 -167.64047241]
[-91.15828705 -161.07189941]
[-82.16411591 -149.06753540]
[-73.16993713 -137.06317139]
[-64.17575836 -125.05881500]
[-55.18157959 -113.05445099]
[-41.35806274 -107.50830841]
[-39.27540588 -91.82477570]
[-30.28122902 -79.82041168]
[-21.17716026 -67.89916992]
[-11.96397018 -56.06206512]
[-2.75077915 -44.22495651]
[11.17228985 -38.93370056]
[13.54271412 -23.29107666]
[22.75590515 -11.45396900]
[31.96909523 0.38313884]
[41.18228531 12.22024632]
[55.10535431 17.51150322]
[57.47578049 33.15412903]
[66.68897247 44.99123383]
[75.90216064 56.82834244]
[93.65724945 49.44475174]
[113.46079254 49.29502106]
[132.39485168 56.83236694]
[142.24612427 45.52076721]
[145.53994751 36.95911789]
[152.38378906 34.09399796]
[162.44120789 22.96528244]
[161.39285278 7.19580269]
[171.86499023 -4.64100361]
[187.64466858 -5.52256918]
[199.37010193 5.07412434]
[200.08477783 20.86224556]
[189.36471558 32.47498322]
[173.56991577 33.02270508]
[163.51249695 44.15141678]
[153.55772400 55.37204742]
[143.70645142 66.68364716]
[151.08680725 79.74237061]
[165.85891724 77.13764954]
[180.63102722 74.53292847]
[195.40315247 71.92820740]
[210.17526245 69.32348633]
[224.94738770 66.71875763]
[237.19433594 56.70263290]
[251.07182312 62.11231995]
[265.84393311 59.50759506]
[278.05175781 48.55767059]
[293.55236816 53.91148376]
[296.40005493 70.06149292]
[283.66537476 80.39395142]
[268.44866943 74.27970886]
[253.67654419 76.88443756]
[242.48619080 86.71425629]
[227.55210876 81.49087524]
[212.77998352 84.09559631]
[198.00787354 86.70032501]
[183.23576355 89.30504608]
[168.46363831 91.90976715]
[153.69152832 94.51448822]
[154.14192200 112.36435699]
[148.65420532 129.88720703]
[160.74067688 138.77073669]
[172.82716370 147.65426636]
[184.91363525 156.53779602]
[197.00010681 165.42132568]
[212.70211792 167.35983276]
[218.37500000 181.13182068]
[230.46148682 190.01535034]
[246.81173706 191.28060913]
[253.64610291 206.18777466]
[243.93394470 219.40162659]
[227.66632080 217.32890320]
[221.57795715 202.10182190]
[209.49147034 193.21829224]
[194.65397644 191.91520691]
[188.11659241 177.50781250]
[176.03010559 168.62428284]
[163.94363403 159.74075317]
[151.85716248 150.85722351]
[139.77067566 141.97369385]
[133.17462158 145.54328918]
[140.31384277 158.73539734]
[147.45285034 171.92761230]
[134.26051331 179.06642151]
[127.12172699 165.87461853]
[119.98252106 152.68251038]
[113.38646698 156.25210571]
[114.21278381 171.22933960]
[115.03910065 186.20655823]
[115.86541748 201.18377686]
[124.35118866 214.53677368]
[117.32675171 227.67094421]
[126.74433136 241.09634399]
[119.58200073 255.84872437]
[103.20775604 256.75213623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[3 165]
[4 164]
[5 163]
[6 162]
[8 35]
[9 34]
[10 33]
[11 32]
[12 31]
[13 30]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[40 95]
[41 94]
[42 93]
[44 91]
[45 90]
[46 89]
[47 88]
[49 86]
[50 85]
[51 84]
[53 83]
[54 82]
[56 80]
[57 79]
[58 78]
[59 77]
[60 76]
[61 73]
[62 72]
[63 71]
[64 70]
[65 69]
[98 112]
[99 111]
[101 110]
[102 109]
[113 134]
[114 133]
[115 132]
[116 131]
[117 130]
[118 129]
[120 127]
[121 126]
[136 155]
[137 154]
[138 153]
[139 152]
[140 151]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
