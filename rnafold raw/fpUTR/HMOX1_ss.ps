%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUGUGACCGGCCGCGGCUCCGGCAGUCAACGCCUGCCUCCUCUCGAGCGUCCUCAGCGCAGCCGCCGCCCGCGGAGCCAGCACGAACGAGCCCAGCACCGGCCGG\
) } def
/len { sequence length } bind def

/coor [
[77.16952515 313.47241211]
[71.56476593 327.84567261]
[59.06557083 336.88854980]
[43.66038895 337.71551514]
[30.26495361 330.06268311]
[23.15370369 316.37203979]
[24.59580994 301.01223755]
[34.13110352 288.88449097]
[48.71690750 283.85876465]
[52.17614365 269.26309204]
[55.63538361 254.66743469]
[59.09461975 240.07174683]
[62.55385971 225.47607422]
[66.01309967 210.88040161]
[69.47233582 196.28472900]
[61.45878601 183.78198242]
[64.75902557 168.93061829]
[77.92739105 160.61004639]
[81.38662720 146.01437378]
[84.84586334 131.41870117]
[74.29351044 123.57878113]
[67.39218140 112.39002228]
[65.12205505 99.44153595]
[50.52638626 95.98229980]
[35.93071365 92.52306366]
[21.33503914 89.06382751]
[6.73936605 85.60458374]
[-5.69501829 95.08721161]
[-21.31312561 94.30701447]
[-32.74056625 83.63238525]
[-34.58164978 68.10356140]
[-25.96707344 55.05277252]
[-10.96437645 50.64220428]
[3.34262538 56.95439148]
[10.19860363 71.00891113]
[24.79427719 74.46815491]
[39.38994980 77.92739105]
[53.98562241 81.38662720]
[68.58129883 84.84586334]
[75.52871704 75.14161682]
[85.34079742 68.34734344]
[96.86891174 65.25839996]
[108.76356506 66.23637390]
[119.63233185 71.16678619]
[130.54293823 60.87315750]
[141.45353699 50.57953262]
[152.36413574 40.28591156]
[152.98579407 24.72148514]
[164.19732666 14.43771172]
[179.03179932 15.12627411]
[189.94239807 4.83264971]
[200.85301208 -5.46097469]
[205.58123779 -20.55913544]
[220.14837646 -23.66521072]
[231.05897522 -33.95883560]
[233.40325928 -40.41047287]
[238.01928711 -44.05303574]
[242.91616821 -44.51083755]
[247.57235718 -52.55388641]
[254.88412476 -54.26007843]
[266.65036011 -63.56361389]
[268.95874023 -76.35639954]
[279.08074951 -83.85412598]
[291.19055176 -82.42751312]
[303.22241211 -91.38489532]
[315.25424194 -100.34226990]
[327.28610229 -109.29965210]
[331.02459717 -124.90103912]
[345.61367798 -131.57472229]
[359.86187744 -124.20122528]
[362.83917236 -108.43685913]
[352.26165771 -96.37470245]
[336.24346924 -97.26780701]
[324.21163940 -88.31042480]
[312.17977905 -79.35305023]
[300.14794922 -70.39566803]
[294.16693115 -53.96816254]
[275.95388794 -51.79737854]
[264.18765259 -42.49384308]
[252.55798340 -33.02016830]
[241.35260010 -23.04823112]
[230.44200134 -12.75460720]
[226.49417114 1.60728526]
[211.14663696 5.44962978]
[200.23602295 15.74325466]
[189.32542419 26.03687859]
[189.15026855 40.88628769]
[178.23200989 51.48091125]
[162.65776062 51.19651413]
[151.74716187 61.49013901]
[140.83656311 71.78376007]
[129.92594910 82.07738495]
[134.88130188 99.72076416]
[130.20906067 117.44120789]
[117.19882202 130.34770203]
[99.44153595 134.87794495]
[95.98229980 149.47361755]
[92.52306366 164.06929016]
[100.55648041 177.41477966]
[96.84040070 192.16758728]
[84.06800842 199.74397278]
[80.60877228 214.33964539]
[77.14952850 228.93531799]
[73.69029236 243.53099060]
[70.23105621 258.12667847]
[66.77182007 272.72235107]
[63.31258011 287.31802368]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 107]
[10 106]
[11 105]
[12 104]
[13 103]
[14 102]
[15 101]
[18 98]
[19 97]
[20 96]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[44 92]
[45 91]
[46 90]
[47 89]
[50 86]
[51 85]
[52 84]
[54 82]
[55 81]
[58 80]
[60 79]
[61 78]
[64 76]
[65 75]
[66 74]
[67 73]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
