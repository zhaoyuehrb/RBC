%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUAUUAGGCGGCGCGGGGCGGCCGGCAUGGAGCUCCCGGAGGCGCGGCAGGGUCAGGAGCUCGGUGGCAUGGCGGCGGUGGCUGCCCCGAUUUCCUCCAGCUGCCACUCCUUGCUUCGUGUCCCCGGUCCCUAGACGCCUCGUCUCCUCCCGUGUCCCUCUUCCC\
) } def
/len { sequence length } bind def

/coor [
[84.71350098 362.28924561]
[70.78289795 356.20593262]
[60.24428558 345.25122070]
[54.70472336 331.09558105]
[55.00895691 315.89770508]
[61.11059189 301.97509766]
[72.07917023 291.45092773]
[86.24207306 285.92999268]
[86.52255249 270.93261719]
[86.80303955 255.93522644]
[83.77147675 249.16050720]
[87.23159790 240.66073608]
[87.79246521 225.67123413]
[88.35333252 210.68171692]
[88.91419983 195.69221497]
[89.47506714 180.70269775]
[90.03593445 165.71319580]
[90.59680176 150.72367859]
[91.15767670 135.73416138]
[91.71854401 120.74465942]
[77.82820892 102.70832825]
[86.96855164 81.85875702]
[82.81602478 67.44499207]
[78.66349030 53.03123474]
[74.51095581 38.61747360]
[70.35842133 24.20371437]
[66.20589447 9.78995419]
[61.65074158 -4.50167274]
[56.69655609 -18.65992355]
[51.74236679 -32.81817245]
[46.78818130 -46.97642136]
[41.83399582 -61.13467407]
[36.87981033 -75.29292297]
[31.92562485 -89.45117188]
[26.97143936 -103.60942078]
[15.41432190 -106.60134888]
[6.83771086 -114.73193359]
[3.30599427 -125.88391113]
[5.59135580 -137.23382568]
[13.00837803 -145.96673584]
[8.58705044 -160.30032349]
[4.16572285 -174.63392639]
[-0.25560477 -188.96751404]
[-13.94769001 -196.39480591]
[-18.22735786 -210.99407959]
[-11.06219578 -224.00161743]
[-15.48352337 -238.33522034]
[-19.90485191 -252.66880798]
[-24.32617950 -267.00241089]
[-28.74750710 -281.33599854]
[-39.78573608 -288.06079102]
[-43.15845490 -300.12210083]
[-37.57801437 -310.88391113]
[-41.73054886 -325.29766846]
[-46.26522827 -330.20111084]
[-47.43483734 -335.81613159]
[-45.75802231 -340.32843018]
[-49.36870193 -354.88735962]
[-52.97938538 -369.44631958]
[-56.59006500 -384.00524902]
[-60.20074463 -398.56420898]
[-71.03240967 -410.09616089]
[-66.58621979 -424.31164551]
[-70.19690704 -438.87060547]
[-73.80758667 -453.42956543]
[-77.41826630 -467.98849487]
[-86.29186249 -455.89474487]
[-101.09078217 -453.44686890]
[-113.38601685 -462.03915405]
[-116.17459106 -476.77764893]
[-107.86822510 -489.26782227]
[-93.19795227 -492.39562988]
[-80.51966095 -484.37979126]
[-82.47755432 -499.25146484]
[-84.43544769 -514.12310791]
[-86.39334106 -528.99481201]
[-88.35123444 -543.86645508]
[-90.30912781 -558.73815918]
[-100.71613312 -571.41198730]
[-94.69128418 -586.66430664]
[-78.43243408 -588.80480957]
[-68.66529083 -575.63159180]
[-75.43745422 -560.69604492]
[-73.47956085 -545.82440186]
[-71.52166748 -530.95269775]
[-69.56377411 -516.08105469]
[-67.60588074 -501.20935059]
[-65.64798737 -486.33767700]
[-62.85931778 -471.59918213]
[-59.24863434 -457.04022217]
[-55.63795471 -442.48129272]
[-52.02727509 -427.92233276]
[-41.45386887 -417.43176270]
[-45.64179611 -402.17489624]
[-42.03111649 -387.61593628]
[-38.42043686 -373.05700684]
[-34.80975342 -358.49804688]
[-31.19907379 -343.93908691]
[-27.31678772 -329.45022583]
[-23.16425514 -315.03643799]
[-9.88830280 -303.58682251]
[-14.41391468 -285.75732422]
[-9.99258709 -271.42373657]
[-5.57125902 -257.09014893]
[-1.14993143 -242.75654602]
[3.27139616 -228.42294312]
[16.51893806 -221.71189880]
[21.20697975 -207.23858643]
[14.07798767 -193.38883972]
[18.49931526 -179.05525208]
[22.92064285 -164.72166443]
[27.34197044 -150.38806152]
[43.99642563 -142.86204529]
[50.00376892 -125.26493835]
[41.12968826 -108.56360626]
[46.08387375 -94.40535736]
[51.03805923 -80.24710846]
[55.99224472 -66.08885956]
[60.94643402 -51.93060684]
[65.90061951 -37.77235794]
[70.85480499 -23.61410904]
[75.80899048 -9.45585823]
[78.85291290 -7.59957457]
[81.13249969 -4.15600920]
[81.90219879 0.49157360]
[80.61965179 5.63742161]
[84.77218628 20.05118179]
[88.92471313 34.46494293]
[93.07724762 48.87870026]
[97.22978210 63.29246140]
[101.38231659 77.70622253]
[110.58673096 80.33163452]
[117.84717560 86.56862640]
[121.83045197 95.27192688]
[121.80515289 104.84342194]
[134.50601196 112.82389832]
[147.20687866 120.80438232]
[159.90774536 128.78486633]
[172.60861206 136.76535034]
[189.23683167 140.07269287]
[190.66188049 156.96664429]
[174.82264709 163.01271057]
[164.62812805 149.46620178]
[151.92726135 141.48573303]
[139.22639465 133.50524902]
[126.52553558 125.52476501]
[113.82466888 117.54428101]
[111.61005402 119.08219147]
[109.22627258 120.34205627]
[106.70805359 121.30552673]
[106.14718628 136.29504395]
[105.58631897 151.28454590]
[105.02545166 166.27406311]
[104.46457672 181.26356506]
[103.90370941 196.25308228]
[103.34284210 211.24258423]
[102.78197479 226.23210144]
[102.22110748 241.22160339]
[101.80041504 256.21569824]
[101.51992798 271.21307373]
[101.23944855 286.21047974]
[115.18601227 292.25711060]
[125.75341034 303.18408203]
[131.33020020 317.32507324]
[131.06594849 332.52371216]
[125.00096130 346.46231079]
[114.06010437 357.01531982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 161]
[9 160]
[10 159]
[12 158]
[13 157]
[14 156]
[15 155]
[16 154]
[17 153]
[18 152]
[19 151]
[20 150]
[22 131]
[23 130]
[24 129]
[25 128]
[26 127]
[27 126]
[28 122]
[29 121]
[30 120]
[31 119]
[32 118]
[33 117]
[34 116]
[35 115]
[40 112]
[41 111]
[42 110]
[43 109]
[46 106]
[47 105]
[48 104]
[49 103]
[50 102]
[53 100]
[54 99]
[57 98]
[58 97]
[59 96]
[60 95]
[61 94]
[63 92]
[64 91]
[65 90]
[66 89]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
[135 147]
[136 146]
[137 145]
[138 144]
[139 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
