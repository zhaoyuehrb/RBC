%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACAUAACGGGCAGAACGCACUGCGAAGCGGCUUCUUCAGAGCACGGGCUGGAACUGGCAGGCACCGCGAGCCCCUAGCACCCGACAAGCUGAGUGUGCAGGACGAGUCCCCACCACACCCACACCACAGCCGCUGAAUGAGGCUUCCAGGCGUCCGCUCGCGGCCCGCAGAGCCCCGCCGUGGGUCCGCCCGCUGAGGCGCCCCCAGCCAGUGCGCUCACCUGCCAGACUGCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[123.51724243 431.76373291]
[122.92835236 416.77529907]
[114.69734192 404.36160278]
[121.88688660 390.26831055]
[121.29798889 375.27987671]
[108.82752228 369.73748779]
[99.91565704 359.31549072]
[96.34248352 346.00796509]
[98.85936737 332.39364624]
[107.03178406 321.13616943]
[119.31311035 314.46286011]
[118.92045593 299.46801758]
[118.52780151 284.47314453]
[118.13514709 269.47827148]
[117.74249268 254.48342896]
[102.66664124 242.11932373]
[101.55828094 222.34669495]
[115.58487701 207.93627930]
[114.60382843 192.96839905]
[113.62277985 178.00050354]
[112.64173126 163.03262329]
[111.66069031 148.06474304]
[110.67964172 133.09686279]
[95.66767883 133.48957825]
[82.33740997 127.59082031]
[73.10836792 116.88176727]
[69.47753906 103.67447662]
[71.78429413 90.61923218]
[59.20423508 82.44964600]
[46.62417603 74.28005981]
[34.04411697 66.11047363]
[21.46405792 57.94088745]
[8.88399982 49.77130127]
[-3.69605851 41.60171509]
[-22.82334328 52.45964050]
[-45.40969086 49.88572693]
[-62.69244003 34.00529099]
[-67.45663452 10.26943874]
[-82.27196503 7.92292166]
[-97.08728790 5.57640505]
[-111.90261078 3.22988796]
[-122.18341064 16.19154739]
[-137.51223755 22.16030502]
[-153.66546631 19.59331703]
[-166.24345398 9.28576374]
[-171.86882019 -5.87204361]
[-186.71359253 -8.02443314]
[-201.55836487 -10.17682266]
[-216.40313721 -12.32921124]
[-225.32492065 -10.46567726]
[-231.42762756 -14.60815907]
[-246.24295044 -16.95467567]
[-254.97955322 -4.48739004]
[-268.20889282 2.92013288]
[-283.28085327 3.84539008]
[-297.20272827 -1.84167659]
[-307.23342896 -12.96348476]
[-311.42318726 -27.27820969]
[-326.23852539 -29.62472725]
[-341.05383301 -31.97124290]
[-353.75418091 -22.95242500]
[-368.74560547 -25.54317665]
[-377.26538086 -37.70659256]
[-392.08071899 -40.05310822]
[-408.67071533 -36.55899429]
[-416.62081909 -51.53336716]
[-404.43246460 -63.31811905]
[-389.73419189 -54.86843491]
[-374.91888428 -52.52191544]
[-363.05737305 -61.45724869]
[-347.99908447 -59.28859711]
[-338.70730591 -46.78656769]
[-323.89199829 -44.44005203]
[-309.07666016 -42.09353638]
[-300.66848755 -54.41294098]
[-287.69189453 -61.89075089]
[-272.69400024 -62.99738312]
[-258.64562988 -57.45991898]
[-248.35282898 -46.32685089]
[-243.89643860 -31.77000046]
[-229.08111572 -29.42348289]
[-214.25074768 -27.17398262]
[-199.40597534 -25.02159309]
[-184.56120300 -22.86920357]
[-169.71643066 -20.71681404]
[-161.99430847 -31.96844292]
[-150.12275696 -38.83181763]
[-136.38691711 -39.92005539]
[-123.45923615 -34.96430588]
[-113.87954712 -24.87722206]
[-109.55609894 -11.58543682]
[-94.74076843 -9.23892021]
[-79.92544556 -6.89240313]
[-65.11012268 -4.54588652]
[-55.44326019 -16.01548958]
[-60.26485443 -30.21944237]
[-65.08644867 -44.42339325]
[-69.90803528 -58.62734604]
[-74.72962952 -72.83129883]
[-88.62463379 -79.87165070]
[-93.31207275 -94.34516144]
[-86.51454163 -107.54853821]
[-91.33613586 -121.75249481]
[-106.19462585 -126.22516632]
[-115.55960846 -138.59759521]
[-115.83004761 -154.11230469]
[-106.90195465 -166.80360413]
[-92.20836639 -171.79139709]
[-77.39926910 -167.15780640]
[-68.16905975 -154.68450928]
[-68.06694031 -139.16777039]
[-77.13218689 -126.57408142]
[-72.31059265 -112.37013245]
[-58.88004303 -106.03326416]
[-53.78792191 -91.69712067]
[-60.52567673 -77.65289307]
[-55.70408630 -63.44893646]
[-50.88249207 -49.24498749]
[-46.06090164 -35.04103470]
[-41.23931122 -20.83708191]
[-32.42801285 -22.31990814]
[-23.61680984 -21.78800964]
[-15.25496769 -19.31705284]
[-7.75793886 -15.08032990]
[-1.48673904 -9.33751583]
[3.26937580 -2.41919279]
[6.30610180 5.29193354]
[7.51255369 13.38207340]
[6.87467384 21.42850685]
[4.47352695 29.02165794]
[17.05358505 37.19124222]
[29.63364410 45.36082840]
[42.21370316 53.53041458]
[54.79376221 61.70000076]
[67.37381744 69.86958313]
[79.95388031 78.03916931]
[88.54167938 71.78309631]
[99.01427460 68.84049225]
[110.10855865 69.74869537]
[120.42234802 74.56914520]
[128.59147644 82.85816956]
[133.46957397 93.70285034]
[134.28680420 105.81996155]
[149.24055481 104.64308167]
[164.19432068 103.46619415]
[179.14808655 102.28930664]
[185.44879150 90.04245758]
[196.88455200 82.56319427]
[210.41409302 81.71294403]
[222.50175476 87.60688782]
[230.04145813 98.61165619]
[245.00933838 97.63060760]
[259.97723389 96.64955902]
[274.94509888 95.66851044]
[289.91299438 94.68746948]
[304.88085938 93.70642090]
[319.84201050 92.62743378]
[334.78775024 91.35269928]
[349.72482300 89.98017120]
[359.81436157 78.11262512]
[374.98223877 76.93347168]
[386.23394775 86.62545776]
[401.17102051 85.25292969]
[416.10809326 83.88040924]
[431.04519653 82.50788116]
[445.97296143 81.03762817]
[460.89077759 79.46969604]
[475.80862427 77.90177155]
[490.72644043 76.33384705]
[505.64425659 74.76591492]
[513.83282471 70.76359558]
[520.76745605 73.27641296]
[529.00769043 69.38162231]
[535.90881348 71.98499298]
[550.86254883 70.80811310]
[566.17846680 63.53768539]
[577.40466309 76.24239349]
[568.30413818 90.54684448]
[552.03948975 85.76187134]
[537.08569336 86.93875885]
[522.13995361 88.21348572]
[507.21218872 89.68374634]
[492.29437256 91.25167084]
[477.37652588 92.81960297]
[462.45870972 94.38752747]
[447.54089355 95.95545197]
[441.22973633 99.77286530]
[432.41769409 97.44495392]
[417.48062134 98.81748199]
[402.54354858 100.19000244]
[387.60647583 101.56253052]
[378.30941772 113.14267731]
[363.18063354 114.74739838]
[351.09735107 104.91724396]
[336.16027832 106.28977203]
[329.79968262 110.02424622]
[321.01889038 107.58119202]
[314.60998535 111.23208618]
[305.86190796 108.67430115]
[290.89404297 109.65534973]
[275.92614746 110.63639832]
[260.95825195 111.61744690]
[245.99038696 112.59849548]
[231.02249146 113.57953644]
[222.70378113 127.74185944]
[207.42689514 134.21340942]
[191.14306641 130.25773621]
[180.32496643 117.24306488]
[165.37120056 118.41995239]
[150.41744995 119.59683990]
[135.46368408 120.77372742]
[125.64752197 132.11581421]
[126.62857056 147.08369446]
[127.60961914 162.05157471]
[128.59066772 177.01947021]
[129.57171631 191.98735046]
[130.55276489 206.95523071]
[140.04478455 211.75053406]
[146.64782715 219.98365784]
[149.22804260 230.13409424]
[147.38670349 240.36227417]
[141.52026367 248.84291077]
[132.73735046 254.09077454]
[133.13000488 269.08563232]
[133.52265930 284.08050537]
[133.91531372 299.07534790]
[134.30796814 314.07022095]
[148.92611694 321.81677246]
[157.58837891 335.80120850]
[158.00807190 352.15173340]
[150.16526794 366.39752197]
[136.28642273 374.69097900]
[136.87532043 389.67941284]
[145.14845276 403.16519165]
[137.91677856 416.18640137]
[138.50567627 431.17483521]
[147.70935059 444.74777222]
[140.31416321 459.38482666]
[123.92766571 460.02865601]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 236]
[2 235]
[4 233]
[5 232]
[11 227]
[12 226]
[13 225]
[14 224]
[15 223]
[18 217]
[19 216]
[20 215]
[21 214]
[22 213]
[23 212]
[28 136]
[29 135]
[30 134]
[31 133]
[32 132]
[33 131]
[34 130]
[38 94]
[39 93]
[40 92]
[41 91]
[46 85]
[47 84]
[48 83]
[49 82]
[51 81]
[52 80]
[58 74]
[59 73]
[60 72]
[63 69]
[64 68]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
[102 113]
[103 112]
[143 211]
[144 210]
[145 209]
[146 208]
[151 204]
[152 203]
[153 202]
[154 201]
[155 200]
[156 199]
[157 197]
[158 195]
[159 194]
[162 191]
[163 190]
[164 189]
[165 188]
[166 186]
[167 185]
[168 184]
[169 183]
[170 182]
[172 181]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
