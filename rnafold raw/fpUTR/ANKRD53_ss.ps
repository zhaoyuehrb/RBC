%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCGGGUGGGGAGCGGCAGGCGGGCAGGGUCCCCGGAGGCCCCCGGGCUCUGCCCCUCCAGCUAGAGAGGCAGCCGAACCCUAGCGGCCUGGAAGGGGCCGGGAAACCGCGGCCAGCUGGCAAGGAGUGGCCCCCGGGGGCGGGGCGCCGGCGGGUGUGUGAGUAGCCCGCCCGGCCCGGGUCCGAGUUCCAGCCCCGCG\
) } def
/len { sequence length } bind def

/coor [
[382.18521118 83.00941467]
[373.66317749 70.39450073]
[358.80987549 72.48722839]
[343.95657349 74.57995605]
[332.43325806 84.01723480]
[317.68856812 78.28094482]
[306.16525269 87.71822357]
[291.42056274 81.98193359]
[276.56726074 84.07466125]
[261.71398926 86.16738892]
[246.86067200 88.26012421]
[232.00738525 90.35285187]
[223.28074646 102.36873627]
[208.24720764 104.70265198]
[195.70300293 95.46789551]
[180.84970093 97.56062317]
[165.99641418 99.65335083]
[151.14311218 101.74608612]
[143.61470032 111.22023010]
[131.25205994 113.08168793]
[120.60544586 105.79233551]
[105.72139740 107.65381622]
[91.12772369 111.12145996]
[76.99720764 116.15421295]
[62.86669540 121.18695831]
[48.73617935 126.21971130]
[34.60566711 131.25245667]
[20.47515106 136.28521729]
[6.34463787 141.31796265]
[-7.78587627 146.35070801]
[-12.36224079 151.13853455]
[-17.84669495 152.66218567]
[-22.43484116 151.31278992]
[-36.71503830 155.90364075]
[-50.99523544 160.49450684]
[-65.27542877 165.08535767]
[-79.55562592 169.67622375]
[-86.55052185 183.84826660]
[-101.54443359 188.84408569]
[-115.64173889 181.69975281]
[-120.47875214 166.65385437]
[-113.18576813 152.63287354]
[-98.08957672 147.95520020]
[-84.14648438 155.39602661]
[-69.86628723 150.80516052]
[-55.58609390 146.21430969]
[-41.30589676 141.62344360]
[-27.02569962 137.03259277]
[-12.81862640 132.22019958]
[1.31188762 127.18744659]
[15.44240189 122.15470123]
[29.57291603 117.12194824]
[43.70343018 112.08919525]
[57.83394241 107.05644989]
[71.96445465 102.02369690]
[86.09497070 96.99094391]
[86.32824707 81.99275970]
[72.36108398 76.52298737]
[58.39392471 71.05321503]
[44.01521301 77.61280060]
[29.23903656 72.00565338]
[22.83183670 57.55839157]
[28.59489632 42.84231949]
[43.10908890 36.58822632]
[57.76340485 42.50654984]
[63.86370087 57.08605576]
[77.83086395 62.55582809]
[91.79801941 68.02559662]
[99.90236664 75.26176453]
[103.96562195 84.01739502]
[103.85991669 92.76976776]
[118.74396515 90.90828705]
[133.15879822 79.45529175]
[149.05038452 86.89278412]
[163.90367126 84.80005646]
[178.75697327 82.70732117]
[193.61027527 80.61459351]
[203.11456299 68.27334595]
[218.20773315 66.36261749]
[229.91464233 75.49954987]
[244.76794434 73.40682220]
[259.62124634 71.31409454]
[274.47454834 69.22135925]
[289.32785034 67.12863159]
[301.91357422 57.54166794]
[315.59585571 63.42764664]
[328.18157959 53.84068298]
[341.86386108 59.72666168]
[356.71713257 57.63393021]
[371.57043457 55.54120255]
[376.27520752 41.06271362]
[386.75695801 30.10735512]
[400.89801025 24.81102562]
[415.87475586 26.17405891]
[428.72152710 33.87276459]
[436.91775513 46.33420563]
[451.77102661 44.24147415]
[466.62432861 42.14874649]
[481.47763062 40.05601501]
[496.33093262 37.96328354]
[504.70272827 28.14503098]
[517.12225342 26.71117783]
[526.86486816 33.88877487]
[541.74890137 32.02729416]
[556.63293457 30.16581345]
[571.51696777 28.30433273]
[581.21203613 16.11238861]
[596.33312988 14.43661118]
[607.89648438 23.75450706]
[622.78057861 21.89302635]
[630.91448975 17.72012901]
[637.91033936 20.12019157]
[652.82153320 18.49040985]
[667.73272705 16.86062813]
[682.64392090 15.23084545]
[698.34051514 2.59006929]
[715.68658447 11.12463760]
[730.53985596 9.03190708]
[745.39318848 6.93917704]
[760.24645996 4.84644699]
[746.20819092 -0.43806019]
[734.28424072 -9.53860569]
[728.38513184 -23.32992554]
[730.03942871 -38.23842621]
[738.81848145 -50.40102005]
[752.44738770 -56.66615295]
[767.39471436 -55.41040039]
[779.78735352 -46.95915222]
[786.41375732 -33.50352097]
[776.60119629 -22.15836143]
[790.65167236 -27.41025734]
[804.70220947 -32.66215515]
[818.71148682 -38.02315140]
[832.67864990 -43.49292374]
[846.64581299 -48.96269608]
[860.61297607 -54.43247223]
[874.58013916 -59.90224457]
[884.38598633 -73.04673767]
[900.63848877 -70.85842133]
[906.61846924 -55.58845139]
[896.17425537 -42.94526291]
[880.04992676 -45.93508148]
[866.08276367 -40.46530914]
[852.11560059 -34.99553680]
[838.14843750 -29.52576447]
[824.18127441 -24.05599022]
[819.09570312 -18.68577576]
[809.95416260 -18.61161804]
[795.90362549 -13.35972118]
[781.85308838 -8.10782433]
[782.08636475 6.89036131]
[796.29339600 11.70274830]
[810.50048828 16.51513481]
[824.70758057 21.32752037]
[838.91461182 26.13990784]
[853.12170410 30.95229340]
[867.32879639 35.76467896]
[879.32794189 26.06811905]
[894.66711426 24.42081642]
[908.45159912 31.34841919]
[916.28283691 44.64035797]
[915.66186523 60.05521774]
[906.78686523 72.67417908]
[892.48980713 78.47057343]
[877.33288574 75.59479523]
[866.15252686 64.96449280]
[862.51641846 49.97175217]
[848.30932617 45.15936661]
[834.10223389 40.34698105]
[819.89520264 35.53459549]
[805.68811035 30.72220802]
[791.48101807 25.90982056]
[777.27392578 21.09743500]
[762.33923340 19.69974518]
[747.48590088 21.79247665]
[732.63262939 23.88520622]
[717.77929688 25.97793579]
[712.38604736 34.66740036]
[702.89941406 39.04215240]
[692.35455322 37.43639755]
[684.27368164 30.14204216]
[669.36248779 31.77182579]
[654.45129395 33.40160751]
[639.54010010 35.03139114]
[624.64202881 36.77707291]
[609.75799561 38.63855362]
[600.84558105 50.51727295]
[585.77752686 52.61711121]
[573.37847900 43.18838120]
[558.49444580 45.04986191]
[543.61035156 46.91134262]
[528.72631836 48.77282333]
[515.33050537 60.10469818]
[498.42367554 52.81658554]
[483.57037354 54.90931320]
[468.71707153 57.00204468]
[453.86376953 59.09477234]
[439.01046753 61.18750381]
[434.57644653 75.42845917]
[424.35696411 86.37704468]
[410.33984375 91.82512665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 90]
[3 89]
[4 88]
[6 86]
[8 84]
[9 83]
[10 82]
[11 81]
[12 80]
[15 77]
[16 76]
[17 75]
[18 74]
[21 72]
[22 71]
[23 56]
[24 55]
[25 54]
[26 53]
[27 52]
[28 51]
[29 50]
[30 49]
[33 48]
[34 47]
[35 46]
[36 45]
[37 44]
[57 68]
[58 67]
[59 66]
[96 198]
[97 197]
[98 196]
[99 195]
[100 194]
[103 192]
[104 191]
[105 190]
[106 189]
[109 186]
[110 185]
[112 184]
[113 183]
[114 182]
[115 181]
[117 177]
[118 176]
[119 175]
[120 174]
[130 150]
[131 149]
[132 148]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
[151 173]
[152 172]
[153 171]
[154 170]
[155 169]
[156 168]
[157 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
