%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGGGGCGGGGCGAAGCGAGGGUGCGCGCCGCUGUUCGCCGCGGGCUGCUCGCGCGCACCUGCGGGUCGGACCCGCUGCCUACCGCGUGCCCGGCGUCCUCGUCGCGCGAGUUGCCGGUCCCGCGGGGCCUGGGCUGCGGGCCCACGGGUCCCGGGGAUGGCGUCGGAGCCGCGCUAACUCCGUUUCUCCUUGGACCAAG\
) } def
/len { sequence length } bind def

/coor [
[79.04943085 523.20416260]
[71.29788971 509.62301636]
[74.14051056 494.24597168]
[86.23509216 484.33358765]
[86.23509216 469.33358765]
[75.55421448 459.01589966]
[75.34053802 443.80377197]
[86.23509216 432.67065430]
[86.23509216 417.67065430]
[86.23509216 402.67065430]
[86.23509216 387.67065430]
[86.23509216 372.67065430]
[78.49778748 359.94338989]
[86.23509216 346.14321899]
[86.23509216 331.14321899]
[86.23509216 316.14321899]
[86.23509216 301.14321899]
[86.23509216 286.14321899]
[86.23509216 271.14321899]
[83.08911896 264.44952393]
[86.35354614 255.91038513]
[86.58682251 240.91220093]
[86.82009888 225.91401672]
[87.05337524 210.91583252]
[87.05337524 195.91583252]
[86.82009888 180.91764832]
[86.58682251 165.91946411]
[86.35354614 150.92126465]
[73.10049438 96.41233826]
[58.75062943 92.04412079]
[44.36722946 87.78762054]
[29.95116425 83.64308929]
[15.53510094 79.49856567]
[0.13432689 83.12165070]
[-9.95965481 72.16898346]
[-24.37571907 68.02445984]
[-38.08562469 75.41880035]
[-52.64652252 71.01029968]
[-59.61140442 57.89442825]
[-74.02746582 53.74990082]
[-89.42824554 57.37298203]
[-99.52222443 46.42032242]
[-113.93828583 42.27579498]
[-128.35435486 38.13127136]
[-142.77041626 33.98674393]
[-157.18647766 29.84221840]
[-171.63433838 25.80991936]
[-186.11311340 21.89008904]
[-200.59188843 17.97026062]
[-215.10070801 14.16313934]
[-229.63868713 10.46895599]
[-244.17668152 6.77477217]
[-258.71466064 3.08058882]
[-273.25265503 -0.61359483]
[-287.79061890 -4.30777836]
[-301.24417114 3.98548102]
[-316.60195923 0.25538144]
[-324.75250244 -13.28507519]
[-320.86026001 -28.60257530]
[-307.23437500 -36.60951996]
[-291.95889282 -32.55552673]
[-284.09643555 -18.84576416]
[-269.55847168 -15.15157986]
[-255.02047729 -11.45739651]
[-240.48249817 -7.76321268]
[-225.94450378 -4.06902885]
[-211.40652466 -0.37484539]
[-204.14422607 -1.77540410]
[-196.67205811 3.49148536]
[-182.19328308 7.41131401]
[-167.71450806 11.33114338]
[-160.43130493 10.04369545]
[-153.04196167 15.42615414]
[-138.62588501 19.57068062]
[-124.20982361 23.71520615]
[-109.79376221 27.85973167]
[-95.37770081 32.00425720]
[-81.00805664 28.08473015]
[-69.88294220 39.33383560]
[-55.46687698 43.47836304]
[-42.59971237 36.06407928]
[-27.92073250 40.06185532]
[-20.23119354 53.60839462]
[-5.81512880 57.75292206]
[8.55451202 53.83339691]
[19.67962646 65.08250427]
[34.09569168 69.22702789]
[48.51175690 73.37155151]
[55.81409836 72.19752502]
[63.11885071 77.69425201]
[77.46871185 82.06247711]
[90.11610413 73.99751282]
[92.20883179 59.14421844]
[94.30156708 44.29091644]
[96.39429474 29.43762016]
[98.48702240 14.58432102]
[100.57975769 -0.26897779]
[93.45685577 -11.02766705]
[95.51035309 -23.35985756]
[105.10043335 -30.74001884]
[107.42390442 -45.55897522]
[109.74737549 -60.37793350]
[112.07085419 -75.19689178]
[114.39432526 -90.01584625]
[110.87441254 -106.60037231]
[125.83640289 -114.57377625]
[137.64009094 -102.40377045]
[129.21328735 -87.69237518]
[126.88980865 -72.87341309]
[124.56633759 -58.05445862]
[122.24285889 -43.23550415]
[119.91938782 -28.41654587]
[127.10884094 -12.41121578]
[115.43305206 1.82375228]
[113.34032440 16.67705154]
[111.24759674 31.53034973]
[109.15486145 46.38364792]
[107.06213379 61.23694611]
[104.96940613 76.09024811]
[116.73831940 85.39038849]
[130.70547485 79.92061615]
[144.67263794 74.45084381]
[158.63980103 68.98107147]
[165.49546814 62.93349457]
[172.86694336 63.53669739]
[186.91748047 58.28480148]
[200.96801758 53.03290558]
[215.01855469 47.78100586]
[229.06909180 42.52910995]
[243.11962891 37.27721405]
[257.17016602 32.02531815]
[271.22070312 26.77342033]
[285.18786621 21.30364799]
[299.06826782 15.61732101]
[312.94866943 9.93099499]
[326.82910156 4.24466896]
[340.70950317 -1.44165683]
[353.07431030 -13.04113197]
[367.64337158 -4.37059784]
[363.34481812 12.02936268]
[346.39581299 12.43875027]
[332.51541138 18.12507629]
[318.63500977 23.81140137]
[304.75460815 29.49772835]
[290.87420654 35.18405533]
[288.23373413 39.17152786]
[283.05709839 41.53863525]
[276.47259521 40.82395554]
[262.42205811 46.07585526]
[248.37152100 51.32775116]
[234.32099915 56.57964706]
[220.27046204 61.83154297]
[206.21992493 67.08344269]
[192.16938782 72.33533478]
[178.11885071 77.58723450]
[164.10957336 82.94823456]
[150.14241028 88.41800690]
[136.17524719 93.88777924]
[122.20809174 99.35755157]
[121.85828400 106.84938812]
[120.80887604 129.32490540]
[134.20559692 136.07232666]
[147.60232544 142.81974792]
[162.52970886 137.62850952]
[176.71911621 144.58808899]
[181.75225830 159.56951904]
[174.64305115 173.68457031]
[159.60923767 178.55902100]
[145.57014465 171.30097961]
[140.85490417 156.21647644]
[127.45817566 149.46905518]
[114.06145477 142.72163391]
[101.35173035 150.68798828]
[101.58500671 165.68618774]
[101.81828308 180.68437195]
[102.05156708 195.68255615]
[105.11808014 201.55305481]
[104.80162811 207.23641968]
[102.05156708 211.14910889]
[101.81828308 226.14729309]
[101.58500671 241.14547729]
[101.35173035 256.14367676]
[101.23509216 271.14321899]
[101.23509216 286.14321899]
[101.23509216 301.14321899]
[101.23509216 316.14321899]
[101.23509216 331.14321899]
[101.23509216 346.14321899]
[108.97238922 359.94338989]
[101.23509216 372.67065430]
[101.23509216 387.67065430]
[101.23509216 402.67065430]
[101.23509216 417.67065430]
[101.23509216 432.67065430]
[112.12964630 443.80377197]
[111.91596222 459.01589966]
[101.23509216 469.33358765]
[101.23509216 484.33358765]
[113.32967377 494.24597168]
[116.17229462 509.62301636]
[108.42075348 523.20416260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 198]
[5 197]
[8 194]
[9 193]
[10 192]
[11 191]
[12 190]
[14 188]
[15 187]
[16 186]
[17 185]
[18 184]
[19 183]
[21 182]
[22 181]
[23 180]
[24 179]
[25 176]
[26 175]
[27 174]
[28 173]
[29 91]
[30 90]
[31 88]
[32 87]
[33 86]
[35 84]
[36 83]
[39 80]
[40 79]
[42 77]
[43 76]
[44 75]
[45 74]
[46 73]
[47 71]
[48 70]
[49 69]
[50 67]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[120 159]
[121 158]
[122 157]
[123 156]
[125 155]
[126 154]
[127 153]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[133 145]
[134 144]
[135 143]
[136 142]
[137 141]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
