%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCCGCUGGCACGAGUGCAGGGUAACUGAGCCAGGGCCGCUGGCGCAUUUGGCCUGGCCGAGGCCACCCCGCGCGGCCGCUCCACUGUGCCCGAGGCUGUCCUGGAGGUGAGGCCGGCCCACAGGGACCCUGCCCGUGCCCGGGCUCCGGGCGGAUUCCUGGGCAAG\
) } def
/len { sequence length } bind def

/coor [
[71.71443939 107.76015472]
[56.71506882 107.89794159]
[41.71570206 108.03572845]
[26.71633530 108.17351532]
[11.71696854 108.31130219]
[-3.28239894 108.44908905]
[-18.28176689 108.58687592]
[-33.28113174 108.72466278]
[-48.28049850 108.86244965]
[-63.24950027 109.82630920]
[-78.14267731 111.61331177]
[-93.03585052 113.40032196]
[-107.92902374 115.18732452]
[-122.38159943 126.56962585]
[-138.23886108 119.08992767]
[-153.09669495 121.15023041]
[-161.20346069 125.44339752]
[-168.24610901 123.10930634]
[-183.13929749 124.89631653]
[-191.32356262 129.03982544]
[-198.32215881 126.57675171]
[-213.24563599 128.08985901]
[-228.16912842 129.60295105]
[-243.09262085 131.11605835]
[-256.04190063 140.20596313]
[-269.48474121 133.79197693]
[-284.40823364 135.30508423]
[-299.33172607 136.81817627]
[-312.28103638 145.90808105]
[-325.72387695 139.49409485]
[-340.64736938 141.00720215]
[-353.59664917 150.09710693]
[-367.03948975 143.68312073]
[-381.96298218 145.19622803]
[-396.88647461 146.70932007]
[-411.80996704 148.22242737]
[-426.73345947 149.73553467]
[-437.94869995 161.20713806]
[-453.89498901 159.44783020]
[-462.33969116 145.80722046]
[-456.80477905 130.74919128]
[-441.53610229 125.82499695]
[-428.24655151 134.81204224]
[-413.32305908 133.29893494]
[-398.39956665 131.78582764]
[-383.47607422 130.27273560]
[-368.55258179 128.75962830]
[-356.67071533 119.77794647]
[-342.16046143 126.08370972]
[-327.23696899 124.57061005]
[-315.35510254 115.58892822]
[-300.84484863 121.89469147]
[-285.92135620 120.38159180]
[-270.99786377 118.86848450]
[-259.11599731 109.88681030]
[-244.60572815 116.19257355]
[-229.68223572 114.67946625]
[-214.75874329 113.16636658]
[-199.83525085 111.65325928]
[-184.92630005 110.00313568]
[-170.03312683 108.21613312]
[-155.15699768 106.29239655]
[-140.29916382 104.23209381]
[-132.73381042 94.76271057]
[-120.34495544 92.94358826]
[-109.71602631 100.29415131]
[-94.82285309 98.50714874]
[-79.92967987 96.72013855]
[-65.03650665 94.93313599]
[-75.95947266 84.65262604]
[-76.58359528 69.66561890]
[-66.55321503 58.51252365]
[-51.58419418 57.54899216]
[-40.20669556 67.32408905]
[-38.90424347 82.26744080]
[-48.41828918 93.86308289]
[-33.41891861 93.72529602]
[-18.41955376 93.58750916]
[-3.42018604 93.44972229]
[11.57918072 93.31193542]
[26.57854843 93.17414856]
[41.57791519 93.03636169]
[56.57728195 92.89857483]
[71.57665253 92.76078796]
[76.33773804 82.66822052]
[84.52395630 75.08444214]
[94.95033264 71.10720062]
[106.10765076 71.31220245]
[116.38088989 75.66977692]
[124.28298187 83.54916382]
[128.67010498 93.80982208]
[143.65428162 94.49851990]
[158.63845825 95.18722534]
[173.62265015 95.87593079]
[188.60682678 96.56463623]
[197.36148071 93.82471466]
[203.85920715 97.40612793]
[218.82820129 98.36998749]
[233.79721069 99.33384705]
[248.78707886 99.88488007]
[263.78643799 100.02266693]
[278.78582764 100.16045380]
[287.43389893 97.10078430]
[294.05880737 100.44107819]
[309.05313110 100.85439301]
[324.04742432 101.26771545]
[339.04171753 101.68103027]
[354.03604126 102.09434509]
[369.03033447 102.50765991]
[384.02462769 102.92097473]
[398.03277588 95.56686401]
[410.54202271 103.65191650]
[421.97109985 93.06826782]
[437.17156982 93.70102692]
[447.19104004 104.66213989]
[462.18533325 105.07545471]
[477.17962646 105.48876953]
[492.17709351 105.76433563]
[507.17648315 105.90212250]
[522.17584229 106.03990936]
[528.00744629 98.54454041]
[536.51818848 94.65152740]
[545.72674561 95.12695312]
[553.55346680 99.73583221]
[558.28955078 107.32405853]
[573.25854492 108.28791809]
[588.22753906 109.25177765]
[603.19659424 110.21563721]
[619.39147949 105.19957733]
[628.69470215 119.37300873]
[617.65057373 132.23626709]
[602.23272705 125.18463898]
[587.26373291 124.22077942]
[572.29467773 123.25691986]
[557.32568359 122.29306030]
[539.74487305 133.06524658]
[522.03808594 121.03927612]
[507.03869629 120.90148926]
[492.03930664 120.76370239]
[485.29617310 123.85837555]
[476.76632690 120.48307800]
[461.77203369 120.06976318]
[446.77770996 119.65644836]
[436.16964722 130.04896545]
[420.95739746 129.84339905]
[410.12869263 118.64622498]
[397.19305420 126.02989197]
[383.61132812 117.91527557]
[368.61703491 117.50196075]
[353.62271118 117.08864594]
[338.62841797 116.67533112]
[323.63409424 116.26201630]
[308.63980103 115.84870148]
[293.64550781 115.43538666]
[278.64804077 115.15982056]
[263.64865112 115.02203369]
[248.64929199 114.88424683]
[245.87286377 117.11549377]
[241.86506653 118.09226227]
[237.23701477 117.24493408]
[232.83334351 114.30284882]
[217.86434937 113.33898926]
[202.89533997 112.37512970]
[187.91812134 111.54881287]
[172.93394470 110.86010742]
[157.94976807 110.17140961]
[142.96557617 109.48270416]
[127.98139954 108.79399872]
[117.13658142 123.80400848]
[99.46116638 129.32580566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 84]
[2 83]
[3 82]
[4 81]
[5 80]
[6 79]
[7 78]
[8 77]
[9 76]
[10 69]
[11 68]
[12 67]
[13 66]
[15 63]
[16 62]
[18 61]
[19 60]
[21 59]
[22 58]
[23 57]
[24 56]
[26 54]
[27 53]
[28 52]
[30 50]
[31 49]
[33 47]
[34 46]
[35 45]
[36 44]
[37 43]
[91 168]
[92 167]
[93 166]
[94 165]
[95 164]
[97 163]
[98 162]
[99 161]
[100 157]
[101 156]
[102 155]
[104 154]
[105 153]
[106 152]
[107 151]
[108 150]
[109 149]
[110 148]
[112 146]
[115 143]
[116 142]
[117 141]
[118 139]
[119 138]
[120 137]
[125 135]
[126 134]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
