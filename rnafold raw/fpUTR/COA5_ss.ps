%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGUUGCCGCUGGCUUCCGGUCCCCUGAGACUGGGGCCUCGCUCGCUCCCGACCCGGUUGCAAGUGUUGCGGUGGGAGAAAGUCGCGUCCGCAUCGGAGGGGAAGCGCCGUC\
) } def
/len { sequence length } bind def

/coor [
[75.96308899 360.35772705]
[60.65665817 359.08938599]
[48.04421234 350.32458496]
[41.51843643 336.42098999]
[42.83473587 321.11862183]
[51.63903046 308.53369141]
[65.56301117 302.05154419]
[58.90314484 288.72879028]
[67.75363159 275.61471558]
[68.99231720 260.66592407]
[70.23101044 245.71716309]
[71.46969604 230.76840210]
[60.07431412 218.48515320]
[61.04067993 201.42150879]
[74.25941467 190.06536865]
[75.08573151 175.08815002]
[75.91204834 160.11093140]
[76.73836517 145.13369751]
[77.56468201 130.15647888]
[67.55847931 118.98168945]
[52.58125687 118.15537262]
[37.60403442 117.32905579]
[22.62681389 116.50273895]
[7.64959049 115.67642212]
[-7.32763243 114.85010529]
[-17.02124977 126.96676636]
[-31.99441528 131.03910828]
[-46.48963928 125.50122833]
[-54.93321609 112.48256683]
[-54.07841492 96.98905182]
[-44.25392532 84.97826385]
[-29.23746490 81.06859589]
[-14.80316734 86.76338959]
[-6.50131607 99.87288666]
[8.47590637 100.69920349]
[23.45312881 101.52552032]
[38.43035126 102.35183716]
[53.40757370 103.17814636]
[68.38479614 104.00446320]
[74.43638611 86.20974731]
[88.46622467 76.44836426]
[85.99730682 61.65294266]
[83.52838135 46.85752106]
[81.05946350 32.06210327]
[71.15625763 19.72366333]
[76.69319153 5.89645767]
[74.22427368 -8.89896202]
[61.64585495 -18.08706093]
[59.35278702 -33.12689209]
[68.18975067 -45.06186676]
[65.72083282 -59.85728455]
[63.25191498 -74.65270233]
[54.68100357 -89.28061676]
[66.36458588 -101.56598663]
[81.40417480 -93.73992920]
[78.04733276 -77.12162781]
[80.51625061 -62.32620621]
[82.98516846 -47.53078461]
[95.21860504 -39.11183548]
[97.93320465 -24.14234924]
[89.01969147 -11.36788082]
[91.48860931 3.42753911]
[101.21522522 14.70770931]
[95.85488129 29.59318352]
[98.32380676 44.38860321]
[100.79272461 59.18402100]
[103.26164246 73.97943878]
[114.64440155 78.24570465]
[122.88050842 87.18632507]
[137.51745605 83.90611267]
[152.15440369 80.62589264]
[166.79133606 77.34568024]
[181.42828369 74.06546021]
[196.01864624 70.58388519]
[210.55964661 66.90160370]
[222.03814697 56.01331711]
[236.27536011 60.38949966]
[250.81637573 56.70721436]
[260.23071289 43.71685791]
[276.26275635 43.12190628]
[286.61404419 55.37876129]
[283.34396362 71.08500671]
[268.96105957 78.19216156]
[254.49865723 71.24822235]
[239.95764160 74.93050385]
[229.51922607 85.55540466]
[214.24192810 81.44260406]
[199.70092773 85.12488556]
[193.90945435 89.88311005]
[184.70851135 88.70240784]
[170.07156372 91.98262787]
[155.43461609 95.26284027]
[140.79766846 98.54306030]
[126.16072083 101.82327271]
[122.39585876 116.98052979]
[110.08271790 128.24066162]
[92.54190826 130.98278809]
[91.71559143 145.96002197]
[90.88927460 160.93724060]
[90.06295776 175.91445923]
[89.23664093 190.89169312]
[99.36808777 199.89184570]
[102.37828064 212.90447998]
[97.37698364 225.07798767]
[86.41846466 232.00709534]
[85.17977905 246.95585632]
[83.94108582 261.90463257]
[82.70239258 276.85339355]
[89.27365875 291.24536133]
[80.51177979 303.29022217]
[93.17892456 311.97579956]
[99.79172516 325.83819580]
[98.57138824 341.14852905]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 110]
[9 108]
[10 107]
[11 106]
[12 105]
[15 101]
[16 100]
[17 99]
[18 98]
[19 97]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[41 67]
[42 66]
[43 65]
[44 64]
[46 62]
[47 61]
[50 58]
[51 57]
[52 56]
[69 94]
[70 93]
[71 92]
[72 91]
[73 90]
[74 88]
[75 87]
[77 85]
[78 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
