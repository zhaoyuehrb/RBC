%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCCGGAGGAGGGAGGGGGGGACACCGAGCGCGGAGAGCGCGGAGAGCGCGGAGGGAGGCGCGCGCGGGAGCGAACACCCUCCCGGAUCCAGAGCCCGGCGGCGGCGAAGCAGCAGCUGCGGCCGCGCCCUUGCCAGAGCCGGUGCGUCCGCCUAGCCCCGCUCCGCCUGAGGCCGUCAGGGCUCCCGAGG\
) } def
/len { sequence length } bind def

/coor [
[165.88235474 409.75704956]
[180.88200378 409.85836792]
[193.50993347 417.95812988]
[188.75991821 403.73007202]
[184.00990295 389.50201416]
[179.25987244 375.27398682]
[174.15286255 369.91775513]
[174.54994202 360.77828979]
[170.02975464 346.47558594]
[165.50956726 332.17285156]
[160.98937988 317.87011719]
[147.69581604 311.25070190]
[142.90795898 296.81008911]
[149.94114685 282.91146851]
[145.42095947 268.60873413]
[140.90077209 254.30603027]
[127.60720825 247.68659973]
[122.81935120 233.24600220]
[129.85253906 219.34736633]
[125.33235168 205.04464722]
[120.81216431 190.74191284]
[109.59922028 180.93788147]
[112.81822968 165.44760132]
[108.29804230 151.14488220]
[103.77784729 136.84216309]
[99.25765991 122.53943634]
[92.53446198 119.21549988]
[90.36709595 134.05809021]
[75.58119965 136.58340454]
[68.61041260 123.30152893]
[79.08805084 112.56762695]
[72.36485291 109.24369049]
[58.25573730 114.33612823]
[44.14662552 119.42856598]
[30.03750992 124.52099609]
[21.94433212 138.37307739]
[6.04823017 140.53952026]
[-5.45666695 129.35842896]
[-3.74478650 113.40696716]
[9.87066364 104.92174530]
[24.94507408 110.41188812]
[39.05418777 105.31945038]
[53.16330338 100.22701263]
[67.27241516 95.13457489]
[69.55924225 80.30992126]
[57.64057922 71.20248413]
[45.72191238 62.09504700]
[32.65778351 65.40539551]
[20.25495338 60.65246201]
[12.96573353 49.78258514]
[13.26776314 36.89313507]
[1.49736571 27.59486771]
[-7.18899488 24.72524834]
[-10.38616467 18.05076790]
[-22.00523949 8.56408691]
[-33.62431335 -0.92259413]
[-45.24338913 -10.40927505]
[-56.86246109 -19.89595604]
[-68.48153687 -29.38263512]
[-81.37810516 -28.86638260]
[-90.86208344 -37.01816559]
[-92.19935608 -49.04898453]
[-107.73384857 -47.90121841]
[-119.22293091 -57.87396240]
[-120.22142029 -72.69079590]
[-131.68615723 -82.36343384]
[-143.15089417 -92.03606415]
[-158.87553406 -90.45133972]
[-171.06207275 -100.51432800]
[-172.48045349 -116.25484467]
[-162.28918457 -128.33430481]
[-146.53454590 -129.58619690]
[-134.56350708 -119.26778412]
[-133.47825623 -103.50080109]
[-122.01351929 -93.82816315]
[-110.54878998 -84.15553284]
[-95.77534485 -85.66581726]
[-84.01068115 -76.01970673]
[-82.52672577 -60.51372147]
[-65.11583710 -58.36224365]
[-58.99485779 -41.00170898]
[-47.37578201 -31.51502991]
[-35.75670624 -22.02834892]
[-24.13763237 -12.54166889]
[-12.51855850 -3.05498791]
[-0.89948386 6.43169260]
[10.79563141 15.82447052]
[22.56602859 25.12273598]
[39.16368103 22.44794083]
[52.83343506 32.80362701]
[54.82934952 50.17638016]
[66.74801636 59.28381729]
[78.66667938 68.39125824]
[92.16152954 69.81210327]
[102.07276154 75.84514618]
[107.13637543 84.24236298]
[107.16904449 92.53081512]
[118.15307617 82.31557465]
[129.05445862 72.01219177]
[139.87249756 61.62132263]
[150.69053650 51.23045731]
[161.50857544 40.83959198]
[172.32661438 30.44872665]
[182.89039612 19.79949188]
[193.19378662 8.89810467]
[203.49717712 -2.00328207]
[213.53413391 -13.15045452]
[223.29879761 -24.53690338]
[233.06347656 -35.92335129]
[242.82814026 -47.30979919]
[241.80554199 -62.85303116]
[251.87051392 -74.26140594]
[266.69491577 -75.14051056]
[276.45959473 -86.52695465]
[279.56982422 -102.03943634]
[293.72836304 -106.66384888]
[303.49304199 -118.05029297]
[305.98056030 -134.25968933]
[321.35815430 -139.95719910]
[333.80667114 -129.28170776]
[330.52017212 -113.21525574]
[314.87948608 -108.28562927]
[305.11480713 -96.89917755]
[302.70300293 -82.20113373]
[287.84603882 -76.76228333]
[278.08135986 -65.37583923]
[279.47259521 -50.59070969]
[269.73202515 -38.90412903]
[254.21459961 -37.54512787]
[244.44992065 -26.15867996]
[234.68525696 -14.77223206]
[224.92057800 -3.38578343]
[224.82952881 0.15157743]
[223.01228333 3.81934905]
[219.42691040 6.80290794]
[214.39855957 8.30010414]
[204.09516907 19.20149040]
[193.79179382 30.10287857]
[193.52993774 33.63171005]
[191.53761292 37.20740128]
[187.81228638 40.01425171]
[182.71746826 41.26676559]
[171.89942932 51.65763092]
[161.08140564 62.04849625]
[150.26336670 72.43936157]
[139.44532776 82.83022308]
[136.79559326 89.74032593]
[128.36831665 93.29960632]
[117.38428497 103.51483917]
[113.56038666 118.01924896]
[118.08057404 132.32197571]
[122.60076141 146.62469482]
[127.12094879 160.92741394]
[138.65721130 171.75448608]
[135.11488342 186.22172546]
[139.63507080 200.52445984]
[144.15527344 214.82717896]
[157.89830017 222.15974426]
[162.27867126 236.72914124]
[155.20349121 249.78584290]
[159.72367859 264.08856201]
[164.24386597 278.39129639]
[177.98690796 285.72384644]
[182.36727905 300.29324341]
[175.29209900 313.34994507]
[179.81228638 327.65264893]
[184.33247375 341.95538330]
[188.85267639 356.25811768]
[193.48793030 370.52395630]
[198.23794556 384.75201416]
[202.98796082 398.98004150]
[207.73797607 413.20809937]
[213.50613403 427.05468750]
[220.26210022 440.44711304]
[227.01808167 453.83953857]
[240.14172363 462.67584229]
[238.96598816 477.52398682]
[245.72195435 490.91638184]
[259.72842407 499.44583130]
[259.07446289 515.83197021]
[244.43284607 523.21807861]
[230.86560059 514.00604248]
[232.32954407 497.67236328]
[225.57356262 484.27993774]
[212.93315125 476.40155029]
[213.62565613 460.59552002]
[206.86968994 447.20309448]
[200.11370850 433.81066895]
[196.97203064 448.47796631]
[186.48138428 459.19927979]
[171.88584900 462.65914917]
[157.69892883 457.78768921]
[148.30772400 446.09130859]
[146.61633301 431.18698120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 172]
[4 171]
[5 170]
[6 169]
[8 168]
[9 167]
[10 166]
[11 165]
[14 162]
[15 161]
[16 160]
[19 157]
[20 156]
[21 155]
[23 153]
[24 152]
[25 151]
[26 150]
[32 44]
[33 43]
[34 42]
[35 41]
[45 93]
[46 92]
[47 91]
[51 88]
[52 87]
[54 86]
[55 85]
[56 84]
[57 83]
[58 82]
[59 81]
[62 79]
[65 76]
[66 75]
[67 74]
[97 149]
[98 148]
[99 146]
[100 145]
[101 144]
[102 143]
[103 142]
[104 138]
[105 137]
[106 136]
[107 132]
[108 131]
[109 130]
[110 129]
[113 126]
[114 125]
[116 123]
[117 122]
[173 188]
[174 187]
[175 186]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
