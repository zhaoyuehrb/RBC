%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCAGAGCCGGGAUGUGUCCAGCCCCGAGGGCACGGCAGGCAGCUGGACCCUGACCCAGCGGCGCGGAGUCGGAGCCCCGGCCGUCCCGCGCUCCUCGGACCCGAACCUGCAGGGGACCUCGGGCCGCUGGCGCCUCCGCAUGCGGCACCGCAAUUAGGGAG\
) } def
/len { sequence length } bind def

/coor [
[27.72211075 165.03698730]
[24.90771866 164.60336304]
[12.47572613 172.99655151]
[0.04373471 181.38973999]
[-12.38825703 189.78292847]
[-24.82024956 198.17611694]
[-32.47196960 214.90150452]
[-49.99082184 215.50143433]
[-62.25976562 224.13121033]
[-74.52870178 232.76098633]
[-73.71697998 246.54718018]
[-79.78604889 258.83142090]
[-91.04920197 266.44183350]
[-104.49459839 267.47280884]
[-116.59033966 261.76113892]
[-129.02232361 270.15432739]
[-141.45431519 278.54751587]
[-153.88630676 286.94070435]
[-166.31829834 295.33389282]
[-178.75028992 303.72708130]
[-191.18229675 312.12026978]
[-191.58262634 327.63217163]
[-201.05085754 339.92575073]
[-215.94628906 344.27386475]
[-230.54129028 339.00457764]
[-239.22380066 326.14404297]
[-238.65522766 310.63739014]
[-229.05416870 298.44723511]
[-214.11245728 294.26095581]
[-199.57546997 299.68826294]
[-187.14347839 291.29507446]
[-174.71148682 282.90191650]
[-162.27949524 274.50872803]
[-149.84750366 266.11553955]
[-137.41551208 257.72235107]
[-124.98352814 249.32916260]
[-124.95346069 232.93476868]
[-115.07201385 219.64564514]
[-99.06290436 214.80058289]
[-83.15848541 220.49205017]
[-70.88954163 211.86227417]
[-58.62060165 203.23248291]
[-56.22340393 191.34605408]
[-46.03208542 184.06132507]
[-33.21343613 185.74412537]
[-20.78144264 177.35093689]
[-8.34945202 168.95774841]
[4.08254004 160.56455994]
[16.51453209 152.17137146]
[28.61591911 143.30816650]
[40.36894226 133.98794556]
[52.12196350 124.66773224]
[63.87498474 115.34751129]
[75.62800598 106.02729034]
[87.38102722 96.70707703]
[94.92246246 83.74070740]
[97.21220398 68.91649628]
[99.50194550 54.09229279]
[93.96190643 39.27275848]
[103.55133820 27.87573814]
[105.84107971 13.05153084]
[107.98872375 -1.79392588]
[109.99408722 -16.65927124]
[100.68572998 -29.14895821]
[102.93122101 -44.19596481]
[114.89559174 -52.99309158]
[116.90095520 -67.85843658]
[118.90631866 -82.72378540]
[116.94688416 -91.69445038]
[121.09510803 -97.85361481]
[123.38484192 -112.67782593]
[125.67458344 -127.50202942]
[127.53747559 -142.38589478]
[128.97198486 -157.31715393]
[130.40649414 -172.24839783]
[131.84100342 -187.17964172]
[133.27551270 -202.11090088]
[125.67343903 -212.56832886]
[127.20455933 -225.00158691]
[136.50175476 -232.78594971]
[138.22200012 -247.68698120]
[139.94224548 -262.58801270]
[131.14067078 -276.00112915]
[136.27648926 -291.19992065]
[151.40994263 -296.52514648]
[164.93194580 -287.89178467]
[166.46955872 -271.92257690]
[154.84327698 -260.86776733]
[153.12303162 -245.96672058]
[151.40277100 -231.06568909]
[159.24484253 -215.38856506]
[148.20675659 -200.67639160]
[146.77224731 -185.74513245]
[145.33773804 -170.81388855]
[143.90322876 -155.88264465]
[142.46871948 -140.95138550]
[144.45912170 -137.98773193]
[145.08642578 -133.89939880]
[143.83195496 -129.35008240]
[140.49879456 -125.21228790]
[138.20904541 -110.38808441]
[135.91931152 -95.56388092]
[133.77166748 -80.71842194]
[131.76629639 -65.85307312]
[129.76094055 -50.98772812]
[138.96655273 -39.33473206]
[137.14459229 -24.23059082]
[124.85943604 -14.65390873]
[122.85407257 0.21143731]
[125.08669281 7.29369974]
[120.66528320 15.34127045]
[118.37554169 30.16547775]
[124.07935333 43.92468262]
[114.32614899 56.38203049]
[112.03640747 71.20623779]
[109.74666595 86.03044128]
[118.51887512 73.86293030]
[133.41876221 72.13278961]
[144.74568176 81.96643829]
[145.12521362 96.96163177]
[134.31024170 107.35569000]
[119.34230042 106.38170624]
[132.23583984 114.04698944]
[145.12939453 121.71226501]
[158.09576416 129.25370789]
[171.13375854 136.67060852]
[184.17176819 144.08749390]
[197.20977783 151.50439453]
[210.24778748 158.92129517]
[225.31161499 154.95663452]
[238.42835999 162.66415405]
[242.11521912 177.04965210]
[255.15322876 184.46655273]
[268.19122314 191.88345337]
[284.57766724 191.23771667]
[293.10009766 205.24844360]
[284.99136353 219.50259399]
[268.59304810 219.33671570]
[260.77432251 204.92146301]
[247.73632812 197.50456238]
[234.69831848 190.08766174]
[220.44892883 194.26980591]
[207.12088013 186.93374634]
[202.83088684 171.95930481]
[189.79287720 164.54240417]
[176.75486755 157.12550354]
[163.71685791 149.70860291]
[150.67886353 142.29170227]
[143.27545166 141.71499634]
[137.46411133 134.60580444]
[124.57056427 126.94052887]
[111.67701721 119.27525330]
[105.95014191 118.22571564]
[101.36486053 115.74938965]
[98.23056030 112.31800842]
[96.70124817 108.46009827]
[84.94822693 117.78031158]
[73.19520569 127.10053253]
[61.44218063 136.42074585]
[49.68915939 145.74096680]
[37.93613815 155.06118774]
[36.45608902 159.25625610]
[33.95129776 162.42025757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 49]
[3 48]
[4 47]
[5 46]
[6 45]
[8 42]
[9 41]
[10 40]
[15 36]
[16 35]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[50 161]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[56 116]
[57 115]
[58 114]
[60 112]
[61 111]
[62 109]
[63 108]
[66 105]
[67 104]
[68 103]
[70 102]
[71 101]
[72 100]
[73 96]
[74 95]
[75 94]
[76 93]
[77 92]
[80 90]
[81 89]
[82 88]
[122 152]
[123 151]
[124 150]
[125 148]
[126 147]
[127 146]
[128 145]
[129 144]
[132 141]
[133 140]
[134 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
