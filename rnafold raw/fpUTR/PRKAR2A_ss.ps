%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCAGCUCGCCUGCCCGUCGGUCCCCGCGGCGGCGGCGGCUGCCCAGUGACAGCGGCGGCGGUGCCAGGUCGGCCGUGGUAGCGUAGGGUUGCGCGGCCCGGAAACGCAGAGCCGGCCAAAGAGCGGCGCGACGUGAGCCGGGGCCGUGCGCGAAGAGACCUCGCGGGCGCGGAGCGAAAGGCCGGCGUGAGUGAGCGCGGAGACAGUGGCCGCCGGCGGCCCAACCCGUCUAUCCCUUCGGCCGCCGCCGGC\
) } def
/len { sequence length } bind def

/coor [
[397.50726318 528.14208984]
[402.73089600 506.93991089]
[394.06427002 494.69696045]
[385.39767456 482.45401001]
[369.07675171 475.97229004]
[367.56442261 457.60733032]
[358.74765015 445.47207642]
[349.93084717 433.33682251]
[341.11407471 421.20156860]
[332.29730225 409.06631470]
[323.48052979 396.93106079]
[314.58917236 384.85034180]
[305.54965210 372.88009644]
[296.43655396 360.96575928]
[287.32345581 349.05139160]
[278.21038818 337.13705444]
[264.33242798 331.72860718]
[262.09393311 316.06655884]
[252.98085022 304.15222168]
[243.86776733 292.23788452]
[229.11566162 290.53167725]
[219.70396423 278.57867432]
[221.59359741 263.11688232]
[212.48051453 251.20252991]
[203.29420471 239.34454346]
[193.96252441 227.60061646]
[184.55865479 215.91441345]
[175.15480042 204.22821045]
[165.75094604 192.54199219]
[156.34709167 180.85578918]
[142.34007263 175.79090881]
[139.71640015 160.18876648]
[125.70939636 155.12390137]
[123.08571625 139.52175903]
[113.68186188 127.83554840]
[104.27799988 116.14933777]
[89.73104858 112.49063110]
[75.91746521 118.33741760]
[66.22470093 130.84185791]
[51.48819733 128.67744446]
[37.67461395 134.52423096]
[23.86103058 140.37101746]
[10.04744911 146.21780396]
[6.67266035 161.36344910]
[-4.98223877 171.60762024]
[-20.43570137 173.01121521]
[-33.74555588 165.03454590]
[-39.79389572 150.74478149]
[-36.25500488 135.63664246]
[-24.48966026 125.51950836]
[-9.02188015 124.28363037]
[4.20066071 132.40422058]
[18.01424408 126.55743408]
[31.82782555 120.71064758]
[45.64140701 114.86386108]
[54.34613419 102.77762604]
[70.07067871 104.52383423]
[83.88426208 98.67704773]
[82.59220123 83.73213196]
[81.30027008 68.78853607]
[66.68819427 65.39926910]
[52.07611465 62.01000214]
[36.88458252 66.42903900]
[26.23470688 56.01609039]
[11.62262821 52.62681961]
[-2.98945045 49.23755264]
[-17.60153008 45.84828186]
[-32.21360779 42.45901489]
[-46.84628677 39.15981674]
[-61.49901199 35.95082092]
[-76.95391083 41.43518448]
[-89.25366211 30.58861351]
[-85.74534607 14.56913376]
[-70.03800964 9.85621166]
[-58.29001617 21.29809761]
[-43.63729095 24.50709343]
[-36.45129776 22.87263107]
[-28.82433891 27.84693527]
[-14.21226025 31.23620415]
[0.39981893 34.62547302]
[15.01189804 38.01474380]
[29.62397766 41.40401077]
[43.77035522 36.74255371]
[55.46538544 47.39792252]
[70.07746124 50.78718948]
[84.68954468 54.17646027]
[96.20049286 44.55782700]
[107.71042633 34.94005966]
[106.97152710 19.95827103]
[106.23262787 4.97648144]
[105.49372864 -10.00530815]
[104.75482941 -24.98709869]
[103.37080383 -39.92311096]
[101.34422302 -54.78557968]
[99.31764221 -69.64804840]
[97.29106140 -84.51052094]
[95.26448822 -99.37298584]
[93.23790741 -114.23545837]
[91.21132660 -129.09793091]
[89.18475342 -143.96038818]
[87.15817261 -158.82286072]
[85.04007721 -173.67256165]
[82.83055115 -188.50894165]
[68.57907104 -198.67668152]
[66.15241241 -215.67292786]
[76.57061768 -228.89125061]
[74.17848206 -243.69927979]
[71.78634644 -258.50729370]
[59.25576019 -267.76052856]
[57.04073715 -282.81204224]
[65.93949890 -294.70101929]
[56.10042572 -307.09066772]
[61.70901108 -320.88897705]
[59.31687164 -335.69699097]
[56.92473602 -350.50503540]
[54.53260040 -365.31304932]
[40.34946823 -371.38284302]
[31.71836472 -384.16986084]
[31.39344406 -399.59378052]
[39.47838593 -412.73294067]
[53.39331436 -419.39465332]
[68.69802856 -417.45318604]
[80.50884247 -407.52804565]
[85.05698395 -392.78634644]
[80.89114380 -377.93206787]
[69.34062958 -367.70520020]
[71.73276520 -352.89715576]
[74.12490082 -338.08914185]
[76.51703644 -323.28109741]
[86.18500519 -311.95062256]
[80.74752045 -297.09317017]
[92.93711853 -288.61087036]
[95.57403564 -273.62750244]
[86.59437561 -260.89944458]
[88.98651123 -246.09141541]
[91.37864685 -231.28338623]
[102.76608276 -225.28872681]
[108.71823883 -213.66017151]
[106.86760712 -200.53219604]
[97.66693115 -190.71846008]
[99.87644958 -175.88209534]
[103.95870972 -169.74652100]
[102.02063751 -160.84944153]
[104.04721832 -145.98696899]
[106.07379913 -131.12449646]
[108.10037994 -116.26203156]
[110.12695312 -101.39956665]
[112.15353394 -86.53709412]
[114.18011475 -71.67462921]
[116.20668793 -56.81216049]
[118.23326874 -41.94968796]
[127.07057953 -54.06999969]
[141.60577393 -57.77516937]
[155.16683960 -51.36443329]
[161.52891541 -37.78047943]
[157.77166748 -23.25866318]
[145.61975098 -14.46485710]
[130.65119934 -15.43562794]
[119.73661804 -25.72599792]
[120.47551727 -10.74420738]
[121.21441650 4.23758221]
[121.95331573 19.21937180]
[122.69221497 34.20116043]
[115.96421051 106.74548340]
[125.36807251 118.43168640]
[134.77192688 130.11790466]
[149.45156860 136.01864624]
[151.40261841 150.78491211]
[166.08224487 156.68566895]
[168.03329468 171.45193481]
[177.43714905 183.13813782]
[186.84101868 194.82434082]
[196.24487305 206.51055908]
[205.64872742 218.19676208]
[213.44377136 222.90328979]
[215.09538269 230.08535767]
[222.83186340 234.88755798]
[224.39486694 242.08943176]
[233.50794983 254.00378418]
[248.92518616 256.22784424]
[257.99743652 268.44052124]
[255.78210449 283.12478638]
[264.89520264 295.03912354]
[274.00827026 306.95349121]
[288.53808594 313.21411133]
[290.12472534 328.02395630]
[299.23782349 339.93832397]
[308.35089111 351.85266113]
[317.46398926 363.76699829]
[325.14071655 368.66415405]
[326.61486816 375.88473511]
[334.23068237 380.87609863]
[335.61578369 388.11428833]
[344.43255615 400.24954224]
[353.24932861 412.38479614]
[362.06610107 424.52005005]
[370.88290405 436.65530396]
[379.69967651 448.79055786]
[392.27648926 451.56777954]
[399.37258911 461.83325195]
[397.64062500 473.78741455]
[406.30722046 486.03036499]
[414.97384644 498.27331543]
[423.70861816 496.89761353]
[432.37695312 498.40908813]
[440.05465698 502.61822510]
[445.93237305 509.04934692]
[449.40084839 516.99438477]
[450.11398315 525.59063721]
[448.02328491 533.91455078]
[443.37991333 541.08081055]
[451.27639771 553.83404541]
[459.17288208 566.58734131]
[467.06936646 579.34057617]
[480.91259766 587.00054932]
[481.03427124 601.89465332]
[488.93075562 614.64794922]
[496.82723999 627.40118408]
[504.72369385 640.15441895]
[512.62017822 652.90771484]
[520.51666260 665.66094971]
[528.41314697 678.41424561]
[536.30963135 691.16748047]
[550.99877930 687.55029297]
[566.08660889 688.65136719]
[580.09497070 694.36279297]
[591.65148926 704.12506104]
[599.62396240 716.98181152]
[603.23132324 731.67333984]
[602.12017822 746.76043701]
[596.39929199 760.76501465]
[586.62927246 772.31494141]
[573.76721191 780.27880859]
[559.07324219 783.87634277]
[543.98687744 782.75506592]
[529.98620605 777.02484131]
[518.44281006 767.24707031]
[510.48754883 754.37969971]
[506.89990234 739.68328857]
[508.03128052 724.59765625]
[513.77087402 710.60083008]
[523.55639648 699.06396484]
[515.65991211 686.31072998]
[507.76342773 673.55743408]
[499.86694336 660.80419922]
[491.97045898 648.05090332]
[484.07397461 635.29766846]
[476.17749023 622.54443359]
[468.28100586 609.79113770]
[455.00256348 603.04339600]
[454.31610107 587.23706055]
[446.41961670 574.48382568]
[438.52313232 561.73052979]
[430.62664795 548.97729492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[12 191]
[13 189]
[14 188]
[15 187]
[16 186]
[18 184]
[19 183]
[20 182]
[23 179]
[24 178]
[25 176]
[26 174]
[27 173]
[28 172]
[29 171]
[30 170]
[32 168]
[34 166]
[35 165]
[36 164]
[37 58]
[38 57]
[40 55]
[41 54]
[42 53]
[43 52]
[60 86]
[61 85]
[62 84]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[69 76]
[70 75]
[88 163]
[89 162]
[90 161]
[91 160]
[92 159]
[93 151]
[94 150]
[95 149]
[96 148]
[97 147]
[98 146]
[99 145]
[100 144]
[101 143]
[102 141]
[103 140]
[106 136]
[107 135]
[108 134]
[111 131]
[113 129]
[114 128]
[115 127]
[116 126]
[211 254]
[212 253]
[213 252]
[214 251]
[216 249]
[217 248]
[218 247]
[219 246]
[220 245]
[221 244]
[222 243]
[223 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
