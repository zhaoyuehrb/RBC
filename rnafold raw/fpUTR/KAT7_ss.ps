%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAGGUGACGCGAGACCCAGCCGGAAGUGAAGGAAAAAGCGCUUCAGCCCGCGGCGCCUGCGCAGAACGCUCCAGACGCUGAGAGGCAGGAGGCACUAGGGAUCGUCCGCAGGAUUGGGACUGAUACAGAGGCCGCCACGGAGCCCGCCGGAGCCACCGUUCCUGCUGCUGCCGCCGCUGCCCGAAUCGGAACCGUCGGGCCGCAGCCGCCGGCA\
) } def
/len { sequence length } bind def

/coor [
[91.78879547 222.74110413]
[88.85191345 231.79502869]
[82.85778809 239.11424255]
[74.66126251 243.72137451]
[65.40737915 245.02116394]
[60.50447083 259.19723511]
[55.60156250 273.37335205]
[64.59448242 286.01876831]
[64.40345001 301.53466797]
[55.10191345 313.95486450]
[40.26650620 318.50350952]
[25.60174370 313.43157959]
[16.74652863 300.68936157]
[17.10586929 285.17642212]
[26.54159546 272.85787964]
[41.42547607 268.47042847]
[46.32838440 254.29434204]
[51.23129272 240.11825562]
[40.78724289 222.54368591]
[46.80521393 202.69818115]
[65.78221130 193.63047791]
[69.85643005 179.19439697]
[73.93064880 164.75830078]
[78.00486755 150.32220459]
[82.07908630 135.88612366]
[76.27714539 133.94819641]
[70.67272949 131.06196594]
[65.42164612 127.24612427]
[60.67805099 122.54499054]
[47.30802536 129.34516907]
[33.93800354 136.14535522]
[20.56797791 142.94552612]
[7.19795465 149.74571228]
[5.74963617 165.10493469]
[-3.79056072 177.22880554]
[-18.37839508 182.24864197]
[-33.35894012 178.56260681]
[-43.95196152 167.34692383]
[-46.77725983 152.18048096]
[-40.93330002 137.90281677]
[-28.28486061 129.06988525]
[-12.86801624 128.50025940]
[0.39777347 136.37568665]
[13.76779747 129.57550049]
[27.13782120 122.77532959]
[40.50784302 115.97514343]
[53.87786865 109.17496490]
[53.33508682 94.18478394]
[39.50825882 88.36938477]
[25.68143463 82.55398560]
[11.81287670 76.83882141]
[-3.88021803 78.84812927]
[-12.78613663 66.90937805]
[-26.69570160 61.29475403]
[-40.60526657 55.68013000]
[-54.51483154 50.06550217]
[-68.42439270 44.45087814]
[-84.11749268 46.46019363]
[-93.02340698 34.52143860]
[-106.93297577 28.90681267]
[-120.84253693 23.29218864]
[-139.01451111 26.28171158]
[-149.27258301 12.04071140]
[-163.26196289 6.62804270]
[-178.45759583 11.77320576]
[-191.87611389 2.97987723]
[-193.22401428 -13.00645256]
[-181.46728516 -23.92243958]
[-165.62467957 -21.39427376]
[-157.84930420 -7.36134672]
[-143.85990906 -1.94867778]
[-132.67599487 -6.55066252]
[-120.97865295 -2.15929770]
[-115.22791290 9.38262463]
[-101.31835175 14.99724865]
[-87.40878296 20.61187363]
[-72.71059418 18.20096397]
[-62.80977249 30.54131508]
[-48.90020752 36.15593719]
[-34.99064255 41.77056503]
[-21.08107758 47.38518906]
[-7.17151260 52.99981308]
[7.52667713 50.58890152]
[17.42750168 62.92925262]
[24.80332565 62.51823807]
[31.49683762 68.72715759]
[45.32366180 74.54255676]
[59.15048981 80.35796356]
[76.74221039 64.16691589]
[98.84364319 59.90467072]
[101.22232819 45.09447479]
[95.77134705 30.24195480]
[105.42902374 18.90270233]
[107.80770874 4.09250784]
[110.18639374 -10.71768665]
[108.45785522 -19.68239212]
[112.70820618 -25.72443008]
[115.30104828 -40.49863815]
[106.49491882 -53.34736633]
[109.33489227 -68.29357910]
[121.63845825 -76.60969543]
[112.83232880 -89.45841980]
[115.67230225 -104.40463257]
[127.97586823 -112.72074890]
[130.56871033 -127.49495697]
[133.05453491 -142.28753662]
[135.43322754 -157.09773254]
[137.81190491 -171.90792847]
[140.19059753 -186.71812439]
[138.46205139 -195.68283081]
[142.71240234 -201.72486877]
[145.30525208 -216.49908447]
[139.17877197 -231.71086121]
[149.50099182 -244.45385742]
[165.65327454 -241.61917114]
[171.01956177 -226.12287903]
[160.07945251 -213.90623474]
[157.48661804 -199.13203430]
[155.00077820 -184.33944702]
[152.62210083 -169.52925110]
[150.24342346 -154.71905518]
[147.86473083 -139.90885925]
[149.90672302 -132.80941772]
[145.34291077 -124.90211487]
[142.75007629 -110.12790680]
[151.48669434 -98.11928558]
[149.06765747 -83.09920502]
[136.41265869 -74.01685333]
[145.14929199 -62.00822830]
[142.73023987 -46.98814774]
[130.07525635 -37.90579605]
[127.48241425 -23.13158989]
[124.99658966 -8.33900261]
[122.61790466 6.47119236]
[120.23921967 21.28138733]
[125.86033630 35.07458496]
[116.03252411 47.47315979]
[113.65383911 62.28335571]
[127.22871399 68.29777527]
[138.17098999 79.20324707]
[144.72671509 93.85347748]
[159.55374146 91.58206177]
[174.36392212 89.20337677]
[189.15650940 86.71755219]
[203.94911194 84.23171997]
[212.05157471 74.19992828]
[224.42033386 72.43198395]
[234.35003662 79.33554840]
[249.17706299 77.06413269]
[261.64645386 67.32632446]
[275.39862061 73.04714203]
[290.22564697 70.77572632]
[305.05264282 68.50430298]
[319.87966919 66.23288727]
[334.70669556 63.96147156]
[347.15802002 53.28922653]
[362.53411865 58.99073410]
[365.01742554 75.20076752]
[352.05328369 85.24384308]
[336.97811890 78.78849792]
[322.15109253 81.05991364]
[307.32406616 83.33132935]
[292.49703979 85.60274506]
[277.67001343 87.87416077]
[266.26116943 97.44950104]
[251.44848633 91.89115906]
[236.62145996 94.16257477]
[223.53599548 105.85891724]
[206.43493652 99.02430725]
[191.64234924 101.51013947]
[176.84976196 103.99596405]
[170.77711487 108.20246887]
[161.82514954 106.40908813]
[146.99812317 108.68050385]
[141.99272156 122.82073212]
[152.08871460 133.91445923]
[167.09951782 138.91311646]
[169.94343567 153.53369141]
[180.03942871 164.62742615]
[195.05023193 169.62608337]
[197.89414978 184.24665833]
[207.99014282 195.34039307]
[218.08613586 206.43412781]
[228.18212891 217.52786255]
[238.27812195 228.62159729]
[248.37411499 239.71533203]
[254.53939819 242.08279419]
[258.05841064 246.53807068]
[258.59606934 251.27947998]
[268.36666870 262.66085815]
[284.00988770 267.58233643]
[287.30474854 283.64709473]
[274.86178589 294.32904053]
[259.48123169 288.63952637]
[256.98529053 272.43142700]
[247.21470642 261.05004883]
[237.28038025 249.81132507]
[227.18438721 238.71759033]
[217.08839417 227.62385559]
[206.99240112 216.53012085]
[196.89640808 205.43638611]
[186.80041504 194.34265137]
[172.51174927 190.13749695]
[168.94569397 174.72341919]
[158.84970093 163.62968445]
[144.56103516 159.42453003]
[140.99497986 144.01045227]
[130.89898682 132.91671753]
[119.82312775 138.68556213]
[108.02672577 141.01226807]
[96.51518250 139.96034241]
[92.44096375 154.39642334]
[88.36674500 168.83251953]
[84.29251862 183.26861572]
[80.21829987 197.70469666]
[87.19721222 204.42996216]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 18]
[6 17]
[7 16]
[21 215]
[22 214]
[23 213]
[24 212]
[25 211]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[48 88]
[49 87]
[50 86]
[51 84]
[53 82]
[54 81]
[55 80]
[56 79]
[57 78]
[59 76]
[60 75]
[61 74]
[63 71]
[64 70]
[90 138]
[91 137]
[93 135]
[94 134]
[95 133]
[97 132]
[98 131]
[101 128]
[104 125]
[105 124]
[106 122]
[107 121]
[108 120]
[109 119]
[111 118]
[112 117]
[141 174]
[142 173]
[143 171]
[144 170]
[145 169]
[148 167]
[149 166]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
[175 208]
[176 207]
[178 205]
[179 204]
[181 202]
[182 201]
[183 200]
[184 199]
[185 198]
[186 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
