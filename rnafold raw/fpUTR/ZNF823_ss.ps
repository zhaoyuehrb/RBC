%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAGGCACGCUGCAGGGAGGAGGGUGCGACGUUCAAAGAGCCCGCGGAGUCUUCUCCACGCCCCUGCGCUCUGAGUCCUGGCUCUGGCGCUGAGAGAGAGACGCCCUGGAAGGUCUGUAUCAGCGUCUGUCGCGCUGGGACCCACACUGGCUUUUAAGGAGGACACCCGGACACCUGGAAGCUGGGAA\
) } def
/len { sequence length } bind def

/coor [
[68.12862396 133.33578491]
[70.67366791 118.55327606]
[82.47633362 109.29290771]
[68.02536774 113.31402588]
[53.57439423 117.33515167]
[39.12342453 121.35626984]
[24.67245102 125.37739563]
[20.99573708 129.13040161]
[16.67696571 130.90835571]
[12.58041286 130.79887390]
[9.40899849 129.22154236]
[-5.22272301 132.52497864]
[-12.92011547 137.47541809]
[-20.12221718 135.76033020]
[-34.80629349 138.82267761]
[-49.49036789 141.88502502]
[-64.17444611 144.94735718]
[-78.85852051 148.00970459]
[-93.54259491 151.07205200]
[-108.59660339 166.30751038]
[-127.92355347 159.09210205]
[-142.43870544 162.87500000]
[-156.95385742 166.65789795]
[-171.46900940 170.44079590]
[-185.98416138 174.22369385]
[-200.49932861 178.00659180]
[-211.90213013 188.97410583]
[-226.16931152 184.69664001]
[-240.68446350 188.47953796]
[-248.71020508 201.82963562]
[-263.48452759 205.45925903]
[-276.16235352 197.72567749]
[-290.67749023 201.50857544]
[-305.19265747 205.29147339]
[-308.59561157 220.21388245]
[-318.55236816 231.83805847]
[-332.77496338 237.49284363]
[-347.99511719 235.87879944]
[-360.71539307 227.36683655]
[-368.01272583 213.91293335]
[-368.21026611 198.60870361]
[-361.26257324 184.97093201]
[-348.76626587 176.13349915]
[-333.59280396 174.12718201]
[-319.22900391 179.41299438]
[-308.97555542 190.77632141]
[-294.46038818 186.99342346]
[-279.94525146 183.21052551]
[-272.65469360 170.27284241]
[-257.98815918 166.22967529]
[-244.46736145 173.96438599]
[-229.95220947 170.18148804]
[-219.58761597 159.48454285]
[-204.28221130 163.49143982]
[-189.76705933 159.70854187]
[-175.25190735 155.92564392]
[-160.73675537 152.14274597]
[-146.22160339 148.35984802]
[-131.70645142 144.57695007]
[-128.50941467 136.26199341]
[-121.73519897 130.26678467]
[-112.82605743 128.03724670]
[-103.75852966 130.19882202]
[-96.60493469 136.38796997]
[-81.92086029 133.32562256]
[-67.23678589 130.26329041]
[-52.55270767 127.20094299]
[-37.86863327 124.13860321]
[-23.18455887 121.07626343]
[-8.52616501 117.89326477]
[6.10555601 114.58982086]
[20.65132904 110.92642212]
[35.10230255 106.90529633]
[49.55327225 102.88417816]
[64.00424194 98.86305237]
[78.45521545 94.84193420]
[98.59912109 75.86049652]
[105.48580933 62.53482437]
[112.37248993 49.20914841]
[119.25917816 35.88347626]
[126.14586639 22.55780411]
[133.03254700 9.23213005]
[139.91923523 -4.09354305]
[146.80592346 -17.41921616]
[137.49311829 -34.12000656]
[140.08671570 -52.91389847]
[153.36344910 -66.25568390]
[171.84779358 -68.89868927]
[178.06881714 -82.54782867]
[184.28984070 -96.19696045]
[190.51086426 -109.84609222]
[196.73188782 -123.49523163]
[202.95291138 -137.14436340]
[209.17393494 -150.79350281]
[215.39495850 -164.44262695]
[207.84910583 -174.43336487]
[205.28860474 -186.61509705]
[208.14035034 -198.65771484]
[215.80203247 -208.28440857]
[226.76792908 -213.70207214]
[238.92463684 -213.93516541]
[245.59121704 -227.37229919]
[252.25779724 -240.80944824]
[258.92437744 -254.24658203]
[250.35539246 -266.99285889]
[249.32357788 -282.31707764]
[256.10650635 -296.09704590]
[268.87960815 -304.62603760]
[284.20693970 -305.60980225]
[297.96557617 -298.78372192]
[306.45449829 -285.98394775]
[307.39022827 -270.65359497]
[300.52105713 -256.91641235]
[287.69473267 -248.46766663]
[272.36151123 -247.58000183]
[265.69494629 -234.14286804]
[259.02835083 -220.70571899]
[252.36178589 -207.26858521]
[261.26608276 -192.03337097]
[259.23745728 -174.34580994]
[246.89929199 -161.29393005]
[229.04409790 -158.22161865]
[222.82307434 -144.57247925]
[216.60205078 -130.92333984]
[210.38102722 -117.27420807]
[204.16000366 -103.62507629]
[197.93898010 -89.97593689]
[191.71795654 -76.32680511]
[185.49693298 -62.67766953]
[192.74171448 -54.15695190]
[196.29212952 -43.49694824]
[195.59690857 -32.23130417]
[190.71855164 -21.99597740]
[182.32975769 -14.29167938]
[171.62100220 -10.26386356]
[160.13159180 -10.53253174]
[153.24490356 2.79314184]
[146.35821533 16.11881447]
[139.47154236 29.44448853]
[132.58485413 42.77016068]
[125.69816589 56.09583664]
[118.81148529 69.42150879]
[111.92479706 82.74718475]
[123.90798950 73.72481537]
[138.65153503 76.48667145]
[146.55657959 89.23462677]
[142.47650146 103.66905975]
[129.06767273 110.39237976]
[115.06026459 105.02764130]
[125.35720825 115.93511200]
[135.65415955 126.84257507]
[145.95111084 137.75004578]
[156.24804688 148.65751648]
[166.54499817 159.56498718]
[176.84194946 170.47245789]
[187.13890076 181.37992859]
[197.43583679 192.28738403]
[207.73278809 203.19485474]
[215.91415405 207.29631042]
[218.10757446 214.36743164]
[228.22372437 225.44277954]
[243.24359131 230.41412354]
[246.11410522 245.02949524]
[261.66647339 245.90231323]
[271.76791382 257.27841187]
[270.83996582 272.09982300]
[286.62722778 276.53765869]
[290.41482544 292.49343872]
[278.30639648 303.55319214]
[262.75808716 298.33959961]
[259.76461792 282.21597290]
[244.91998291 281.80114746]
[234.50299072 270.71328735]
[235.03875732 255.14566040]
[220.74246216 250.96650696]
[217.14837646 235.55894470]
[207.03221130 224.48358154]
[196.82531738 213.49180603]
[186.52838135 202.58433533]
[176.23143005 191.67686462]
[165.93447876 180.76939392]
[155.63752747 169.86193848]
[145.34059143 158.95446777]
[135.04364014 148.04699707]
[124.74668884 137.13952637]
[114.44974518 126.23205566]
[104.15279388 115.32458496]
[109.47588348 129.34831238]
[104.02095795 143.32127380]
[90.60441589 150.02922058]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 76]
[4 75]
[5 74]
[6 73]
[7 72]
[11 71]
[12 70]
[14 69]
[15 68]
[16 67]
[17 66]
[18 65]
[19 64]
[21 59]
[22 58]
[23 57]
[24 56]
[25 55]
[26 54]
[28 52]
[29 51]
[32 48]
[33 47]
[34 46]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[88 129]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[101 118]
[102 117]
[103 116]
[104 115]
[149 187]
[150 186]
[151 185]
[152 184]
[153 183]
[154 182]
[155 181]
[156 180]
[157 179]
[158 178]
[160 177]
[161 176]
[163 174]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
