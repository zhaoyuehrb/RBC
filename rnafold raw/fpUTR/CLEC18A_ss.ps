%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCCGAGGUCCUCCUCCCAGGGCCCGGGGCUGGGGAGCGGAAGCCAUCAGUGGGCUCGGAGGACACUGUCCCAGCCAGGACACGGCCAUCGGUCACUAAUCUGCAGCACUGGAAUGUCCGCGGGCCAAUCAGCGGGCCCAGCCUGACUCCUGGAGAUUGUGAAUAGCUCCAUCCAGCCUGAGAAACAAGCCGGGUGGCUGAGCCAGGCUGUGCACGGAGCGCCUGACGGGCCCAACAGACCC\
) } def
/len { sequence length } bind def

/coor [
[36.77888870 148.74768066]
[50.40419006 142.48228455]
[60.84040070 131.70797729]
[71.27661133 120.93368530]
[56.95250320 125.38563538]
[42.62839127 129.83758545]
[28.30428123 134.28953552]
[13.98017025 138.74148560]
[-0.31510264 143.28518677]
[-14.58095074 147.92044067]
[-28.84679794 152.55569458]
[-43.11264420 157.19094849]
[-50.10846710 179.41357422]
[-79.21716309 185.58320618]
[-91.94354248 193.52293396]
[-104.66992188 201.46264648]
[-117.39630890 209.40237427]
[-130.12268066 217.34210205]
[-142.84906006 225.28182983]
[-146.27008057 230.89685059]
[-151.25929260 233.55834961]
[-156.00515747 233.25712585]
[-168.93095398 240.86790466]
[-181.85675049 248.47868347]
[-194.78254700 256.08944702]
[-207.70832825 263.70022583]
[-220.63412476 271.31100464]
[-223.18370056 275.81439209]
[-226.83427429 278.62271118]
[-230.76181030 279.60003662]
[-234.20664978 278.95489502]
[-247.41558838 286.06292725]
[-260.62451172 293.17095947]
[-273.83343506 300.27899170]
[-287.04238892 307.38702393]
[-295.52828979 320.73992920]
[-310.40234375 319.95755005]
[-316.45922852 326.76419067]
[-323.82650757 327.07080078]
[-337.12551880 334.00888062]
[-345.46304321 348.13040161]
[-361.85653687 347.70010376]
[-369.44177246 333.16061401]
[-360.41571045 319.46893311]
[-344.06359863 320.70986938]
[-330.76458740 313.77182007]
[-317.51034546 306.74862671]
[-309.96923828 293.90411377]
[-294.15042114 294.17810059]
[-280.94146729 287.07006836]
[-267.73254395 279.96203613]
[-254.52360535 272.85400391]
[-241.31468201 265.74597168]
[-228.24490356 258.38519287]
[-215.31910706 250.77442932]
[-202.39331055 243.16365051]
[-189.46751404 235.55288696]
[-176.54173279 227.94210815]
[-163.61593628 220.33132935]
[-150.78878784 212.55545044]
[-138.06240845 204.61572266]
[-125.33602905 196.67599487]
[-112.60964966 188.73626709]
[-99.88327026 180.79655457]
[-87.15689087 172.85682678]
[-87.78128052 165.38285828]
[-101.35108185 158.99064636]
[-89.03005981 150.43493652]
[-89.65444946 142.96096802]
[-103.52182007 137.24293518]
[-117.38919830 131.52490234]
[-131.25657654 125.80686951]
[-145.12394714 120.08884430]
[-159.61737061 126.39091492]
[-174.29118347 120.52109528]
[-180.43968201 105.96185303]
[-174.41505432 91.35091400]
[-159.79161072 85.35670471]
[-145.24519348 91.53546906]
[-139.40591431 106.22146606]
[-125.53854370 111.93949890]
[-111.67116547 117.65753174]
[-97.80378723 123.37555695]
[-83.93641663 129.09359741]
[-60.26392365 128.99250793]
[-47.74790192 142.92509460]
[-33.48205185 138.28984070]
[-19.21620560 133.65458679]
[-4.95035744 129.01933289]
[0.42763939 123.97472382]
[9.52822018 124.41737366]
[23.85233116 119.96542358]
[38.17644119 115.51347351]
[52.50054932 111.06152344]
[66.82466125 106.60957336]
[92.96623993 76.12385559]
[95.64459229 61.36491013]
[98.32295227 46.60596848]
[96.77771759 37.62661362]
[101.13143158 31.67547226]
[103.99880981 16.95208549]
[106.86618805 2.22869825]
[109.73356628 -12.49468899]
[112.60094452 -27.21807671]
[107.64434814 -42.24281311]
[117.67189789 -53.25633240]
[120.53927612 -67.97972107]
[106.88500214 -61.76998901]
[93.45751953 -68.45599365]
[90.18429565 -83.09450531]
[99.48536682 -94.86268616]
[114.48406982 -95.05985260]
[124.09105682 -83.54107666]
[127.89587402 -98.05049896]
[131.70069885 -112.55992126]
[130.33425903 -118.99147034]
[132.13557434 -124.35160065]
[135.79357910 -127.39017487]
[139.96920776 -141.79725647]
[144.14483643 -156.20434570]
[139.33386230 -173.98971558]
[152.48094177 -185.62832642]
[156.47149658 -200.08776855]
[160.36926270 -214.57250977]
[164.17408752 -229.08192444]
[167.97889709 -243.59135437]
[171.78372192 -258.10076904]
[175.58853149 -272.61019897]
[165.65521240 -284.53112793]
[164.65951538 -300.01623535]
[172.98432922 -313.11114502]
[187.42857361 -318.78063965]
[202.43815613 -314.84466553]
[212.24159241 -302.81668091]
[213.06924438 -287.32168579]
[204.60285950 -274.31784058]
[190.09796143 -268.80538940]
[186.29313660 -254.29595947]
[182.48832703 -239.78652954]
[178.68350220 -225.27711487]
[174.87867737 -210.76768494]
[176.21913147 -203.51689148]
[170.93093872 -196.09722900]
[166.94038391 -181.63777161]
[172.63223267 -170.98005676]
[169.44271851 -158.91151428]
[158.55192566 -152.02871704]
[154.37629700 -137.62162781]
[150.20066833 -123.21454620]
[146.21011353 -108.75510406]
[142.40528870 -94.24568176]
[138.60047913 -79.73625946]
[135.26266479 -65.11234283]
[132.39527893 -50.38895416]
[137.55697632 -36.41733170]
[127.32433319 -24.35069656]
[124.45695496 -9.62730980]
[121.58957672 5.09607744]
[118.72219849 19.81946564]
[115.85481262 34.54285049]
[113.08189392 49.28432083]
[110.40354156 64.04326630]
[107.72518921 78.80220795]
[117.20370483 67.17647552]
[132.17074585 68.17039490]
[140.02874756 80.94740295]
[134.16372681 94.75325775]
[119.51213837 97.96774292]
[133.89215088 102.23565674]
[148.27217102 106.50357056]
[162.65219116 110.77148438]
[177.03221130 115.03939819]
[192.46347046 111.54843140]
[202.46321106 122.58718872]
[216.87030029 126.76281738]
[231.32974243 130.75337219]
[245.81448364 134.65113831]
[260.29919434 138.54890442]
[274.78393555 142.44667053]
[289.26867676 146.34443665]
[303.75338745 150.24220276]
[318.23812866 154.13996887]
[327.31494141 153.34765625]
[332.88299561 158.18168640]
[341.58135986 149.23956299]
[353.18563843 144.86114502]
[365.47924805 145.81735229]
[376.14151001 151.86630249]
[383.18588257 161.81057739]
[385.32977295 173.73382568]
[399.65386963 178.18577576]
[413.97799683 182.63772583]
[428.30209351 187.08967590]
[444.16986084 182.94888306]
[455.49563599 194.80886841]
[450.62841797 210.46908569]
[434.57519531 213.81964111]
[423.85015869 201.41378784]
[409.52603149 196.96183777]
[395.20193481 192.50988770]
[380.87780762 188.05793762]
[367.21066284 199.26979065]
[349.39141846 200.02250671]
[334.56777954 189.82461548]
[328.79980469 172.61524963]
[314.34036255 168.62469482]
[299.85562134 164.72692871]
[285.37091064 160.82916260]
[270.88616943 156.93139648]
[256.40142822 153.03363037]
[241.91671753 149.13586426]
[227.43197632 145.23809814]
[220.17272949 146.53204346]
[212.78712463 141.19638062]
[205.51188660 142.39712524]
[198.19529724 136.96720886]
[183.79260254 140.76344299]
[172.76429749 129.41941833]
[158.38427734 125.15150452]
[144.00425720 120.88359070]
[129.62423706 116.61567688]
[115.24422455 112.34776306]
[105.44776917 123.70687866]
[111.78220367 137.30375671]
[118.11663055 150.90061951]
[124.45106506 164.49749756]
[136.62060547 176.30166626]
[128.64662170 191.26335144]
[112.06222534 187.74278259]
[110.85418701 170.83192444]
[104.51976013 157.23506165]
[98.18532562 143.63818359]
[91.85089874 130.04130554]
[90.89119720 145.01057434]
[89.93148804 159.97984314]
[94.45397949 174.28184509]
[92.79539490 189.18986511]
[85.24008179 202.14814758]
[73.08329010 210.93519592]
[58.40910721 214.04461670]
[43.73321152 210.94331360]
[31.57156181 202.16297913]
[24.00909233 189.20886230]
[22.34227371 174.30175781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 95]
[5 94]
[6 93]
[7 92]
[8 91]
[9 89]
[10 88]
[11 87]
[12 86]
[14 65]
[15 64]
[16 63]
[17 62]
[18 61]
[19 60]
[22 59]
[23 58]
[24 57]
[25 56]
[26 55]
[27 54]
[31 53]
[32 52]
[33 51]
[34 50]
[35 49]
[37 47]
[39 46]
[40 45]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[96 163]
[97 162]
[98 161]
[100 160]
[101 159]
[102 158]
[103 157]
[104 156]
[106 154]
[107 153]
[113 152]
[114 151]
[115 150]
[118 149]
[119 148]
[120 147]
[122 144]
[123 143]
[124 141]
[125 140]
[126 139]
[127 138]
[128 137]
[168 222]
[169 221]
[170 220]
[171 219]
[172 218]
[174 216]
[175 214]
[176 212]
[177 211]
[178 210]
[179 209]
[180 208]
[181 207]
[182 206]
[184 205]
[190 201]
[191 200]
[192 199]
[193 198]
[223 233]
[224 232]
[225 231]
[226 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
