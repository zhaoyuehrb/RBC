%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGCAGGGCGGUAACUCUGGGCGGGGCUGGGCUCCAGGGCUGGACAGCACAGUCCCUCUGAACUGCACAGAGACCUCGCAGGCCCCGAGAACUGUCGCCCUUCCACG\
) } def
/len { sequence length } bind def

/coor [
[94.77693939 429.82870483]
[84.93371582 418.16363525]
[81.13488770 403.38082886]
[84.13469696 388.41540527]
[93.33753967 376.23876953]
[106.91618347 369.26858521]
[106.48391724 354.27481079]
[106.05164337 339.28103638]
[105.61937714 324.28729248]
[105.18710327 309.29351807]
[104.75483704 294.29974365]
[104.32257080 279.30596924]
[103.89029694 264.31219482]
[103.45803070 249.31843567]
[92.05702209 233.81298828]
[101.49375916 216.11495972]
[100.19838715 201.17098999]
[98.90301514 186.22703552]
[90.09551239 174.21548462]
[96.61215210 159.79869080]
[95.31678009 144.85473633]
[94.02140808 129.91076660]
[92.72603607 114.96680450]
[74.79412079 95.22750092]
[63.96073914 84.85263824]
[53.12735367 74.47777557]
[42.29397202 64.10290527]
[31.46058846 53.72804260]
[20.62720680 43.35317993]
[9.79382324 32.97831726]
[-5.52457666 29.02139664]
[-9.36497498 14.63040638]
[-20.19835854 4.25554180]
[-31.32622337 -5.80281734]
[-42.73933029 -15.53631687]
[-54.15243530 -25.26981735]
[-65.56554413 -35.00331497]
[-81.78167725 -37.44648743]
[-87.52120972 -52.80844879]
[-76.87979889 -65.28612518]
[-60.80442047 -62.04356003]
[-55.83204269 -46.41642380]
[-44.41893768 -36.68292236]
[-33.00582886 -26.94942284]
[-21.59272385 -17.21592331]
[-16.70243263 -16.71844482]
[-12.11791801 -13.04228592]
[-9.82349396 -6.57784128]
[1.00988960 3.79702330]
[15.55341339 7.01186180]
[20.16868782 22.14493179]
[31.00206947 32.51979828]
[41.83545303 42.89466095]
[52.66883469 53.26952362]
[63.50222015 63.64439011]
[74.33560181 74.01925659]
[85.16898346 84.39411926]
[77.91879272 71.26268005]
[81.34576416 56.65939331]
[93.68053436 48.12397385]
[108.55464172 50.06327438]
[118.28855133 61.47603226]
[117.85662079 76.46981049]
[107.48000336 87.30416870]
[120.61209106 80.05513763]
[133.74417114 72.80611420]
[146.87625122 65.55709076]
[151.24934387 53.31736755]
[162.46104431 47.57962418]
[174.17224121 50.96879196]
[187.50776672 44.10121536]
[195.91995239 30.02402687]
[212.31094360 30.54110718]
[219.81910706 45.12053299]
[210.72067261 58.76423645]
[194.37533569 57.43674850]
[181.03981018 64.30432129]
[172.44921875 79.53197479]
[154.12528992 78.68917084]
[140.99319458 85.93820190]
[127.86111450 93.18722534]
[114.72903442 100.43624878]
[107.66999817 113.67143250]
[108.96537018 128.61540222]
[110.26074219 143.55935669]
[111.55611420 158.50332642]
[120.45626831 171.58375549]
[113.84697723 184.93165588]
[115.14234924 199.87562561]
[116.43772125 214.81958008]
[125.29877472 221.45230103]
[128.89035034 231.68742371]
[126.22758484 241.97384644]
[118.45179749 248.88615417]
[118.88407135 263.87994385]
[119.31633759 278.87368774]
[119.74860382 293.86746216]
[120.18087769 308.86123657]
[120.61314392 323.85501099]
[121.04541779 338.84878540]
[121.47768402 353.84255981]
[121.90995789 368.83633423]
[135.86761475 375.01263428]
[145.75668335 386.63882446]
[149.61370850 401.40658569]
[146.67285156 416.38369751]
[137.51802063 428.59646606]
[123.96694183 435.62005615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 102]
[7 101]
[8 100]
[9 99]
[10 98]
[11 97]
[12 96]
[13 95]
[14 94]
[16 90]
[17 89]
[18 88]
[20 86]
[21 85]
[22 84]
[23 83]
[24 57]
[25 56]
[26 55]
[27 54]
[28 53]
[29 52]
[30 51]
[32 49]
[33 48]
[34 45]
[35 44]
[36 43]
[37 42]
[64 82]
[65 81]
[66 80]
[67 79]
[70 77]
[71 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
