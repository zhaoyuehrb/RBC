%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCGGCCAGUUGGCUGUAGACGGUCCAUGCUCAAUGGUCCUCUACAGAUAUGAAACUGGUUCUGGAGUGAGACGAGCUCGGCUGGGGACGCUACUUGAGAAGGCCUUUCCCCACAGGGUGACUUAAAUGUCCCAGGCUGGAAGGUGGAGCGAGAAGUGGAUGCCCCCAGGGCUCUGGGUCACACUCCAGG\
) } def
/len { sequence length } bind def

/coor [
[-161.59584045 325.22970581]
[-174.58627319 332.72961426]
[-189.11361694 328.99380493]
[-196.87445068 316.15753174]
[-193.43302917 301.55789185]
[-206.77577209 308.41143799]
[-220.11849976 315.26501465]
[-233.46124268 322.11856079]
[-246.80398560 328.97213745]
[-260.14672852 335.82568359]
[-273.48947144 342.67922974]
[-286.83221436 349.53280640]
[-291.92398071 369.91909790]
[-310.13076782 379.80911255]
[-329.44967651 373.17410278]
[-342.31558228 380.88565063]
[-355.18151855 388.59716797]
[-368.04745483 396.30871582]
[-380.91339111 404.02026367]
[-393.77929688 411.73181152]
[-406.64523315 419.44332886]
[-412.40881348 426.55111694]
[-419.78536987 427.17382812]
[-432.77575684 434.67382812]
[-440.85839844 448.27459717]
[-455.74917603 447.93753052]
[-468.73956299 455.43753052]
[-481.72994995 462.93753052]
[-494.72033691 470.43753052]
[-500.24475098 485.49942017]
[-515.50994873 490.43429565]
[-528.80578613 481.45654297]
[-529.93286133 465.45312500]
[-518.02648926 454.70050049]
[-502.22033691 457.44717407]
[-489.22994995 449.94717407]
[-476.23956299 442.44717407]
[-463.24917603 434.94717407]
[-456.09570312 421.88281250]
[-440.27575684 421.68344116]
[-427.28536987 414.18344116]
[-414.35678101 406.57742310]
[-401.49084473 398.86587524]
[-388.62490845 391.15432739]
[-375.75900269 383.44277954]
[-362.89306641 375.73126221]
[-350.02713013 368.01971436]
[-337.16119385 360.30816650]
[-337.79214478 350.93893433]
[-334.94131470 341.93087769]
[-328.96191406 334.54046631]
[-320.64666748 329.81463623]
[-311.12261963 328.44271851]
[-301.69876099 330.65597534]
[-293.68576050 336.19006348]
[-280.34301758 329.33648682]
[-267.00027466 322.48294067]
[-253.65754700 315.62939453]
[-240.31480408 308.77581787]
[-226.97206116 301.92227173]
[-213.62931824 295.06869507]
[-200.28657532 288.21514893]
[-187.29620361 280.71514893]
[-174.68946838 272.58676147]
[-162.08274841 264.45840454]
[-149.47602844 256.33001709]
[-136.86929321 248.20166016]
[-124.26257324 240.07328796]
[-111.65584564 231.94490051]
[-99.04911804 223.81652832]
[-92.54528046 210.41693115]
[-76.75417328 209.44152832]
[-64.14744568 201.31315613]
[-51.54071808 193.18478394]
[-39.13727188 184.74948120]
[-26.94457054 176.01231384]
[-14.75186920 167.27514648]
[-2.55916929 158.53797913]
[9.63353062 149.80081177]
[10.56287670 146.38381958]
[13.20284176 143.25100708]
[17.39991760 141.20574951]
[22.64577103 140.95147705]
[35.25249863 132.82310486]
[47.85922241 124.69473267]
[60.46595001 116.56636047]
[73.07267761 108.43798065]
[85.67940521 100.30960846]
[92.23797607 87.96146393]
[106.19222260 87.08366394]
[118.79895020 78.95529175]
[131.33876038 70.72405243]
[143.81080627 62.39049530]
[156.28283691 54.05694199]
[168.75488281 45.72338867]
[181.22692871 37.38983536]
[193.69897461 29.05628395]
[196.79119873 11.84615803]
[211.08770752 2.37681174]
[227.48196411 6.09480953]
[227.63592529 -10.81118679]
[237.73132324 -24.16523743]
[253.63600159 -28.82950401]
[269.03292847 -23.15763855]
[281.22564697 -31.89480400]
[293.41833496 -40.63196945]
[305.61102295 -49.36913300]
[317.80374146 -58.10630035]
[319.96813965 -62.89158630]
[323.41275024 -66.04327393]
[327.29653931 -67.34712982]
[330.81597900 -66.95563507]
[343.42269897 -75.08400726]
[356.02941895 -83.21237946]
[368.56924438 -91.44361877]
[371.77340698 -106.68734741]
[384.54052734 -114.96108246]
[399.05334473 -111.81246185]
[411.52539062 -120.14601135]
[416.93325806 -127.52802277]
[424.27038574 -128.51193237]
[436.87710571 -136.64030457]
[449.48382568 -144.76867676]
[452.57489014 -160.26774597]
[465.76629639 -168.97190857]
[481.23181152 -165.71714783]
[489.79602051 -152.43446350]
[486.37792969 -137.00422668]
[473.00543213 -128.58091736]
[457.61221313 -132.16195679]
[445.00549316 -124.03358459]
[432.39874268 -115.90520477]
[419.85894775 -107.67396545]
[407.38690186 -99.34041595]
[404.74203491 -84.72740173]
[392.21234131 -76.09832001]
[376.90277100 -78.97158051]
[373.08172607 -72.63116455]
[364.15780640 -70.60565948]
[351.55108643 -62.47728348]
[338.94433594 -54.34891129]
[326.54089355 -45.91360092]
[314.34820557 -37.17643356]
[302.15548706 -28.43926811]
[289.96279907 -19.70210266]
[277.77011108 -10.96493721]
[278.92083740 2.34503961]
[273.29571533 14.58199596]
[262.26846313 22.50119781]
[248.66029358 23.94479752]
[236.01846313 18.42883301]
[235.50558472 31.31321526]
[227.54257202 41.70166016]
[214.86219788 45.66040039]
[202.03253174 41.52832794]
[189.56048584 49.86188126]
[177.08843994 58.19543457]
[164.61639404 66.52898407]
[152.14434814 74.86254120]
[139.67230225 83.19609833]
[135.85124207 89.53650665]
[126.92732239 91.56201935]
[114.32059479 99.69039154]
[107.76202393 112.03853607]
[93.80777740 112.91633606]
[81.20104980 121.04470825]
[68.59432220 129.17308044]
[55.98759842 137.30145264]
[43.38087082 145.42982483]
[30.77414513 153.55821228]
[18.37069702 161.99351501]
[6.17799616 170.73068237]
[-6.01470423 179.46784973]
[-18.20740509 188.20501709]
[-30.40010452 196.94218445]
[-32.56451035 201.72746277]
[-36.00913239 204.87915039]
[-39.89292526 206.18301392]
[-43.41234589 205.79151917]
[-56.01906967 213.91989136]
[-68.62580109 222.04826355]
[-76.03134918 236.02926636]
[-90.92074585 236.42326355]
[-103.52747345 244.55163574]
[-116.13420105 252.68000793]
[-128.74092102 260.80838013]
[-141.34765625 268.93676758]
[-153.95437622 277.06512451]
[-166.56109619 285.19351196]
[-179.16783142 293.32186890]
[-164.80325317 297.64151001]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 62]
[6 61]
[7 60]
[8 59]
[9 58]
[10 57]
[11 56]
[12 55]
[15 48]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[23 41]
[24 40]
[26 38]
[27 37]
[28 36]
[29 35]
[63 190]
[64 189]
[65 188]
[66 187]
[67 186]
[68 185]
[69 184]
[70 183]
[72 181]
[73 180]
[74 179]
[75 175]
[76 174]
[77 173]
[78 172]
[79 171]
[83 170]
[84 169]
[85 168]
[86 167]
[87 166]
[88 165]
[90 163]
[91 162]
[92 160]
[93 159]
[94 158]
[95 157]
[96 156]
[97 155]
[100 151]
[104 146]
[105 145]
[106 144]
[107 143]
[108 142]
[112 141]
[113 140]
[114 139]
[115 137]
[118 134]
[119 133]
[121 132]
[122 131]
[123 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
