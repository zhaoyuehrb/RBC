%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCUGAGCUUCGGUUGGCCCGGCUUCCUUGAGGCGUAAGCUCGGUCUGUCCAAUGAGGAGCGAGCGUCGCGGGGGCCGUCGGGAAGGGCGGCCGACCCAUAUAAGCAGCCUGCGGGGCGUUCCCUCGGGUUGUGGUUGGUGUGCGGGUUUCGGUUGGAGGACUCGUUGGGGAGGUGGCCUGCGCUUGUAGAGACUGCAUCCCCGAGACG\
) } def
/len { sequence length } bind def

/coor [
[59.65763474 95.25254822]
[74.55694580 93.51746368]
[88.09506226 99.97610474]
[75.81836700 91.35736084]
[63.54166794 82.73861694]
[51.26496887 74.11988068]
[38.98827362 65.50113678]
[26.71157646 56.88239288]
[14.43488026 48.26364899]
[-1.30554104 46.66687393]
[-7.27641153 33.02143478]
[-15.72710228 36.15784073]
[-24.53246880 35.63423157]
[-32.20826721 31.69431496]
[-37.52315903 25.14453697]
[-52.40543365 23.26892853]
[-67.28771210 21.39331818]
[-82.16998291 19.51770973]
[-97.05225372 17.64210129]
[-111.93453217 15.76649380]
[-126.81680298 13.89088535]
[-141.69908142 12.01527596]
[-152.33651733 23.15759087]
[-167.32006836 25.86806488]
[-180.86633301 19.31347847]
[-187.87162781 6.19616508]
[-202.75389099 4.32055664]
[-217.63616943 2.44494796]
[-232.51844788 0.56933933]
[-247.40072632 -1.30626917]
[-262.28298950 -3.18187761]
[-271.18704224 -1.15027440]
[-277.37033081 -5.19646692]
[-292.22332764 -7.29136610]
[-307.09133911 -9.27667427]
[-321.97363281 -11.15228271]
[-336.85589600 -13.02789116]
[-351.51522827 -7.07689714]
[-363.17514038 -16.34489822]
[-375.58316040 -6.92794132]
[-390.64916992 -9.04207897]
[-399.55035400 -20.92925262]
[-414.43261719 -22.80486107]
[-431.23648071 -15.27241421]
[-444.79287720 -26.41752434]
[-459.70120239 -28.07343483]
[-474.27117920 -21.90688133]
[-486.06652832 -31.00190544]
[-500.97482300 -32.65781403]
[-513.24261475 -23.05887985]
[-528.33819580 -24.95058250]
[-537.41369629 -36.70518494]
[-552.32202148 -38.36109161]
[-567.23034668 -40.01700211]
[-580.60534668 -31.15760422]
[-595.82611084 -36.22776031]
[-601.21667480 -51.33808517]
[-592.64172363 -64.89722443]
[-576.67932129 -66.50377655]
[-565.57440186 -54.92532349]
[-550.66607666 -53.26941299]
[-535.75775146 -51.61350250]
[-524.32403564 -61.09008026]
[-509.18130493 -59.62312698]
[-499.31890869 -47.56613541]
[-484.41061401 -45.91022491]
[-470.90698242 -52.19521713]
[-458.04528809 -42.98175430]
[-443.13699341 -41.32584381]
[-433.49966431 -48.63510895]
[-421.06661987 -47.37855911]
[-412.55700684 -37.68713379]
[-397.67474365 -35.81152725]
[-386.10247803 -45.11844254]
[-370.98303223 -43.42831421]
[-361.29953003 -31.22717285]
[-347.70468140 -37.31232071]
[-334.98028564 -27.91016579]
[-320.09802246 -26.03455734]
[-305.21575928 -24.15894890]
[-298.18743896 -26.44101715]
[-290.12841797 -22.14435959]
[-275.27542114 -20.04945946]
[-260.40737915 -18.06415176]
[-245.52511597 -16.18854332]
[-230.64283752 -14.31293488]
[-215.76055908 -12.43732643]
[-200.87829590 -10.56171799]
[-185.99601746 -8.68610954]
[-175.95513916 -19.65509796]
[-161.20614624 -22.64364243]
[-147.36366272 -16.30023384]
[-139.82347107 -2.86699796]
[-124.94120026 -0.99138951]
[-110.05892181 0.88421905]
[-95.17665100 2.75982761]
[-80.29437256 4.63543606]
[-65.41210175 6.51104450]
[-50.52982712 8.38665295]
[-35.64755249 10.26226139]
[-49.77964020 5.23393345]
[-57.87671661 -7.39291525]
[-56.55029297 -22.33415222]
[-46.35544968 -33.33711624]
[-31.55856323 -35.79723740]
[-18.35189438 -28.68500328]
[-12.26221848 -14.97676373]
[-15.83864689 -0.40813175]
[-9.21672058 -13.86733246]
[-2.59479427 -27.32653427]
[4.02713203 -40.78573608]
[10.64905834 -54.24493790]
[17.27098465 -67.70413971]
[23.89291000 -81.16333771]
[30.51483536 -94.62254333]
[29.66455841 -110.42088318]
[42.22568893 -118.42508698]
[48.84761429 -131.88429260]
[55.46953964 -145.34349060]
[51.68061447 -160.93270874]
[61.61989975 -173.52595520]
[77.66282654 -173.46279907]
[87.50263977 -160.79165649]
[83.59107208 -145.23275757]
[68.92874146 -138.72155762]
[62.30681610 -125.26235962]
[55.68489075 -111.80316162]
[57.00881195 -96.96751404]
[43.97403717 -88.00061035]
[37.35211182 -74.54141235]
[30.73018456 -61.08221054]
[24.10825920 -47.62300873]
[17.48633385 -34.16381073]
[10.86440659 -20.70460701]
[4.24248075 -7.24540663]
[-2.37944531 6.21379423]
[1.34233081 20.74473953]
[16.20464134 21.72504616]
[23.05362320 35.98695374]
[35.33031845 44.60569763]
[47.60701752 53.22443771]
[59.88371277 61.84318161]
[72.16040802 70.46192169]
[84.43710327 79.08066559]
[96.71380615 87.69940948]
[111.15885925 91.74172974]
[126.12583160 90.74688721]
[141.09280396 89.75203705]
[156.05978394 88.75719452]
[171.02674866 87.76235199]
[185.99372864 86.76750946]
[200.96069336 85.77265930]
[215.91992188 84.66747284]
[230.87060547 83.45198822]
[242.31217957 72.20610809]
[258.22024536 74.28275299]
[266.39154053 88.08890533]
[260.55767822 103.03366852]
[245.19395447 107.65269470]
[232.08607483 98.40266418]
[217.13540649 99.61814117]
[210.72430420 103.29270935]
[201.95553589 100.73963928]
[186.98857117 101.73448181]
[172.02159119 102.72932434]
[157.05462646 103.72416687]
[142.08764648 104.71900940]
[127.12067413 105.71385956]
[112.15370178 106.70870209]
[106.43901062 120.57745361]
[116.36035156 131.82765198]
[126.28168488 143.07786560]
[136.20301819 154.32806396]
[146.12435913 165.57826233]
[156.04570007 176.82847595]
[170.97651672 182.06115723]
[173.59155273 196.72441101]
[183.51287842 207.97460938]
[193.43421936 219.22482300]
[203.35556030 230.47502136]
[213.35958862 241.65174866]
[223.52737427 252.67971802]
[233.77621460 263.63241577]
[244.02505493 274.58508301]
[254.27389526 285.53778076]
[270.11346436 289.78512573]
[274.09298706 305.69409180]
[262.11868286 316.89889526]
[246.50866699 311.87301636]
[243.32121277 295.78662109]
[233.07237244 284.83392334]
[222.82353210 273.88125610]
[212.57469177 262.92855835]
[205.71028137 260.19274902]
[202.25694275 251.73793030]
[195.43362427 248.90116882]
[192.10536194 240.39636230]
[182.18402100 229.14614868]
[172.26268005 217.89595032]
[162.34133911 206.64575195]
[148.12016296 202.21774292]
[144.79550171 186.74980164]
[134.87416077 175.49960327]
[124.95281982 164.24940491]
[115.03148651 152.99919128]
[105.11014557 141.74899292]
[95.18880463 130.49879456]
[85.88633728 142.26586914]
[71.74888611 147.27908325]
[57.11140442 144.00123596]
[46.46219254 133.43742371]
[43.06660461 118.82681274]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 145]
[4 144]
[5 143]
[6 142]
[7 141]
[8 140]
[9 139]
[11 137]
[15 100]
[16 99]
[17 98]
[18 97]
[19 96]
[20 95]
[21 94]
[22 93]
[26 89]
[27 88]
[28 87]
[29 86]
[30 85]
[31 84]
[33 83]
[34 82]
[35 80]
[36 79]
[37 78]
[39 76]
[42 73]
[43 72]
[45 69]
[46 68]
[48 66]
[49 65]
[52 62]
[53 61]
[54 60]
[108 136]
[109 135]
[110 134]
[111 133]
[112 132]
[113 131]
[114 130]
[115 129]
[117 127]
[118 126]
[119 125]
[146 169]
[147 168]
[148 167]
[149 166]
[150 165]
[151 164]
[152 163]
[153 161]
[154 160]
[170 207]
[171 206]
[172 205]
[173 204]
[174 203]
[175 202]
[177 200]
[178 199]
[179 198]
[180 197]
[181 195]
[182 193]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
