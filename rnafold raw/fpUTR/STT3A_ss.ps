%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGCCUGGAGCCAGCCAACGGGGGAGCGGUCCGGGAGGCGGACCCGGCUCCUGCCAGGGUUGGGUGCGCCGCUGAACGGAUGGCUGAGGGAGCCCCGCGGAUCGUUUAGGAAAGCCGGCCAGGCAUUCCAGAAAACAGCUGCAAACCCUGAGAGAUAUGGCUGGAUUGUUGACCUCCUGGAGUAGUUAGGCCUUUAUUUUUAGUUGCAAACUGAUCGUCGUGUGUUGCCACCCAUUCAUGUCAAG\
) } def
/len { sequence length } bind def

/coor [
[84.21704102 471.94760132]
[90.26337433 456.10848999]
[90.26337433 441.10848999]
[90.26337433 426.10848999]
[90.26337433 411.10848999]
[90.26337433 396.10848999]
[82.52607727 383.38122559]
[90.26337433 369.58105469]
[90.26337433 354.58105469]
[90.26337433 339.58105469]
[90.26337433 324.58105469]
[89.78842163 309.58856201]
[81.26104736 297.37655640]
[88.10932922 283.11431885]
[87.15988922 268.14437866]
[86.21044159 253.17446899]
[85.26100159 238.20454407]
[73.94847870 228.58361816]
[72.77235413 213.41551208]
[82.94037628 201.61512756]
[81.99092865 186.64520264]
[81.04148865 171.67527771]
[80.09204865 156.70535278]
[71.56467438 144.49334717]
[78.41295624 130.23110962]
[68.21700287 119.22917938]
[53.36239243 117.14575958]
[38.50778580 115.06234741]
[23.65317726 112.97892761]
[8.79856968 110.89551544]
[-6.05603838 108.81210327]
[-20.91064644 106.72868347]
[-35.76525497 104.64527130]
[-50.61986160 102.56185913]
[-65.47447205 100.47843933]
[-91.86112976 135.03770447]
[-106.65819550 137.49676514]
[-119.00322723 147.39173889]
[-132.82673645 141.84558105]
[-147.62380981 144.30464172]
[-162.42086792 146.76370239]
[-177.21792603 149.22274780]
[-189.56297302 159.11772156]
[-203.38647461 153.57157898]
[-218.18354797 156.03062439]
[-232.98060608 158.48968506]
[-247.77766418 160.94874573]
[-262.57473755 163.40779114]
[-277.37179565 165.86685181]
[-292.16885376 168.32589722]
[-306.96591187 170.78495789]
[-321.76296997 173.24400330]
[-330.75003052 186.24433899]
[-346.31222534 188.99993896]
[-359.21682739 179.87594604]
[-361.80770874 164.28547668]
[-352.54782104 151.47807312]
[-336.93081665 149.05213928]
[-324.22204590 158.44694519]
[-309.42495728 155.98789978]
[-294.62789917 153.52883911]
[-279.83084106 151.06977844]
[-265.03378296 148.61073303]
[-250.23672485 146.15167236]
[-235.43965149 143.69262695]
[-220.64259338 141.23356628]
[-205.84553528 138.77452087]
[-194.55888367 129.05541992]
[-179.67698669 134.42568970]
[-164.87991333 131.96662903]
[-150.08285522 129.50758362]
[-135.28579712 127.04852295]
[-123.99914551 117.32943726]
[-109.11724854 122.69969940]
[-94.32018280 120.24064636]
[-92.39434052 112.99211884]
[-103.02352905 102.40815735]
[-88.54265594 98.49506378]
[-86.61681366 91.24654388]
[-98.24204254 81.76741028]
[-109.86727905 72.28827667]
[-116.28372955 70.86518097]
[-120.41346741 67.00552368]
[-121.66296387 62.41878510]
[-133.04434204 52.64819717]
[-144.42570496 42.87760925]
[-155.80708313 33.10702515]
[-171.84861755 32.88660049]
[-181.56375122 20.11961937]
[-177.49984741 4.59981585]
[-162.77439880 -1.76734531]
[-148.68350220 5.90247726]
[-146.03648376 21.72565269]
[-134.65512085 31.49623871]
[-123.27375031 41.26682663]
[-111.89237213 51.03741455]
[-100.38814545 60.66304398]
[-88.76291656 70.14217377]
[-77.13768005 79.62130737]
[-63.39105606 85.62383270]
[-48.53644943 87.70724487]
[-33.68183899 89.79066467]
[-18.82723045 91.87407684]
[-3.97262311 93.95748901]
[10.88198471 96.04090881]
[25.73659325 98.12432098]
[40.59120178 100.20774078]
[55.44580841 102.29115295]
[70.30041504 104.37456512]
[72.97847748 80.84562683]
[93.11390686 64.43700409]
[91.97491455 49.48030853]
[90.83591461 34.52361679]
[89.69692230 19.56692314]
[80.93406677 6.39411020]
[87.68260956 -6.88393450]
[86.54360962 -21.84062767]
[85.40461731 -36.79732132]
[74.21739960 -48.29626465]
[76.37538147 -64.19351959]
[90.22314453 -72.29406738]
[105.13787079 -66.38386536]
[109.67826080 -50.99671555]
[100.36130524 -37.93631744]
[101.50030518 -22.97962570]
[102.63930511 -8.02293110]
[111.32068634 4.08007860]
[104.65361023 18.42792511]
[105.79261017 33.38462067]
[106.93161011 48.34131241]
[108.07060242 63.29800797]
[114.14380646 67.69870758]
[115.69294739 52.77891541]
[129.38847351 46.66070938]
[141.53469849 55.46237564]
[139.98524475 70.38213348]
[126.29022217 76.50010681]
[132.36343384 80.90080261]
[146.93104553 77.32526398]
[161.49867249 73.74972534]
[174.50740051 60.70110321]
[191.15582275 66.28304291]
[205.67698669 62.52325058]
[220.19813538 58.76346207]
[234.71929932 55.00367737]
[249.24046326 51.24388885]
[252.92863464 47.61848068]
[257.20819092 45.92343521]
[261.25094604 46.06288910]
[264.38485718 47.62832260]
[279.03839111 44.42296600]
[293.69189453 41.21760941]
[308.34542847 38.01225281]
[322.99893188 34.80689621]
[337.65246582 31.60153961]
[352.30599976 28.39618301]
[357.04415894 13.85324860]
[368.35083008 3.70159054]
[383.12252808 0.59305018]
[397.37152100 5.26447630]
[407.30221558 16.36613655]
[421.95574951 13.16077900]
[436.60925293 9.95542240]
[451.26278687 6.75006580]
[463.09082031 -3.75747871]
[477.17749023 1.08140457]
[491.83099365 -2.12395191]
[506.48452759 -5.32930851]
[521.13806152 -8.53466511]
[535.79156494 -11.74002171]
[540.12341309 -22.78014946]
[549.14685059 -30.29024315]
[560.55487061 -32.50024414]
[571.50213623 -28.97640228]
[579.31445312 -20.70064545]
[594.04449463 -23.53376007]
[606.08135986 -34.67137527]
[621.66296387 -29.55818558]
[624.76037598 -13.45420265]
[612.18713379 -2.92582250]
[596.87762451 -8.80374146]
[582.14758301 -5.97062635]
[572.78881836 9.78271770]
[554.56915283 13.73628426]
[538.99694824 2.91349959]
[524.34338379 6.11885595]
[509.68988037 9.32421303]
[495.03637695 12.52956963]
[480.38284302 15.73492622]
[469.60293579 26.01320267]
[454.46813965 21.40358734]
[439.81463623 24.60894394]
[425.16110229 27.81430054]
[410.50756836 31.01965714]
[406.11886597 45.25358963]
[395.12155151 55.44746780]
[380.40106201 58.79014206]
[365.88861084 54.28623962]
[355.51135254 43.04970551]
[340.85781860 46.25506210]
[326.20431519 49.46041870]
[311.55078125 52.66577530]
[296.89724731 55.87113190]
[282.24374390 59.07648849]
[267.59020996 62.28184509]
[253.00024414 65.76504517]
[238.47908020 69.52483368]
[223.95793152 73.28462219]
[209.43676758 77.04441071]
[194.91561890 80.80419922]
[188.52259827 91.05543518]
[176.47433472 94.31655884]
[165.07420349 88.31734467]
[150.50659180 91.89288330]
[135.93898010 95.46842194]
[129.74122620 116.79499817]
[113.00332642 129.33503723]
[93.38288116 129.28166199]
[101.97816467 142.56442261]
[95.06196594 155.75592041]
[96.01141357 170.72583008]
[96.96085358 185.69575500]
[97.91029358 200.66567993]
[109.48768616 211.08689880]
[110.23730469 226.28204346]
[100.23092651 237.25509644]
[101.18036652 252.22502136]
[102.12980652 267.19494629]
[103.07925415 282.16485596]
[111.67453766 295.44763184]
[104.75833893 308.63912964]
[116.39196014 299.17028809]
[131.07560730 302.23464966]
[137.95097351 315.56616211]
[131.93383789 329.30639648]
[117.47376251 333.29464722]
[105.26337433 324.58105469]
[105.26337433 339.58105469]
[105.26337433 354.58105469]
[105.26337433 369.58105469]
[113.00067902 383.38122559]
[105.26337433 396.10848999]
[105.26337433 411.10848999]
[105.26337433 426.10848999]
[105.26337433 441.10848999]
[105.26337433 456.10848999]
[111.30971527 471.94760132]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 246]
[3 245]
[4 244]
[5 243]
[6 242]
[8 240]
[9 239]
[10 238]
[11 237]
[12 231]
[14 229]
[15 228]
[16 227]
[17 226]
[20 223]
[21 222]
[22 221]
[23 220]
[25 218]
[26 109]
[27 108]
[28 107]
[29 106]
[30 105]
[31 104]
[32 103]
[33 102]
[34 101]
[35 100]
[36 75]
[37 74]
[39 72]
[40 71]
[41 70]
[42 69]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[79 99]
[80 98]
[81 97]
[84 96]
[85 95]
[86 94]
[87 93]
[111 131]
[112 130]
[113 129]
[114 128]
[116 126]
[117 125]
[118 124]
[138 215]
[139 214]
[140 213]
[142 210]
[143 209]
[144 208]
[145 207]
[146 206]
[150 205]
[151 204]
[152 203]
[153 202]
[154 201]
[155 200]
[156 199]
[161 194]
[162 193]
[163 192]
[164 191]
[166 189]
[167 188]
[168 187]
[169 186]
[170 185]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
