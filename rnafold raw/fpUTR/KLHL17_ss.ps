%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGAGCGACACAGAGCGGGCCGCCACCGCCGAGCAGCCCUCCGGCAGUCUCCGCGUCCGUUAAGCCCGCGGGUCCUCCGCGAAUCGGCGGUGGGUCCGGCAGCCGA\
) } def
/len { sequence length } bind def

/coor [
[16.29761505 395.44375610]
[0.23822434 398.48248291]
[-5.70297194 412.25570679]
[-11.64416885 426.02896118]
[-7.08109426 441.40939331]
[-16.37877274 454.48352051]
[-32.40482330 455.22198486]
[-42.86542511 443.05828857]
[-39.73610687 427.32339478]
[-25.41740990 420.08776855]
[-19.47621346 406.31451416]
[-13.53501701 392.54129028]
[-21.41643143 381.65942383]
[-22.86407089 368.19204712]
[-17.38820648 355.68447876]
[-6.33612537 347.48342896]
[7.43759871 345.84158325]
[13.77687263 332.24697876]
[20.11614609 318.65234375]
[26.05734253 304.87911987]
[31.59543419 290.93890381]
[37.13352585 276.99868774]
[42.67161942 263.05847168]
[47.59637833 248.88995361]
[51.89842606 234.52011108]
[56.20047379 220.15026855]
[60.50252151 205.78042603]
[64.80457306 191.41058350]
[69.10662079 177.04074097]
[73.40866852 162.67089844]
[77.71071625 148.30105591]
[82.01276398 133.93121338]
[86.31481171 119.56137085]
[77.45170593 107.84257507]
[77.12968445 93.15307617]
[85.47073364 81.05713654]
[99.31534576 76.13658142]
[103.61739349 61.76673508]
[89.12162781 65.62326050]
[76.89380646 56.93531418]
[75.76554108 41.97780609]
[86.55172729 31.55388069]
[101.46198273 33.19227219]
[109.72737885 45.71022797]
[116.06665039 32.11560822]
[116.88745880 22.85833359]
[122.79310608 18.22191429]
[129.52508545 4.81742477]
[124.78589630 -10.02096558]
[131.80404663 -23.51912498]
[145.97938538 -27.94577408]
[152.71138000 -41.35026550]
[159.44335938 -54.75475311]
[166.17535400 -68.15924072]
[172.90733337 -81.56373596]
[179.63932800 -94.96822357]
[174.90013123 -109.80661011]
[181.91827393 -123.30477142]
[196.09362793 -127.73142242]
[192.43255615 -143.35116577]
[202.47470093 -155.86254883]
[218.51657104 -155.66793823]
[228.25222778 -142.91659546]
[224.21330261 -127.39027405]
[209.49810791 -120.99943542]
[214.41232300 -106.98564911]
[207.77607727 -93.29569244]
[193.04382324 -88.23623657]
[186.31182861 -74.83174896]
[179.57983398 -61.42725754]
[172.84785461 -48.02276611]
[166.11585999 -34.61827469]
[159.38388062 -21.21378708]
[164.29808044 -7.20000315]
[157.66184998 6.48995543]
[142.92958069 11.54941273]
[136.19758606 24.95390129]
[129.66127014 38.45488358]
[123.32199860 52.04949951]
[117.98723602 66.06878662]
[113.68518829 80.43862915]
[122.54829407 92.15742493]
[122.87031555 106.84692383]
[114.52926636 118.94286346]
[100.68465424 123.86341858]
[96.38260651 138.23326111]
[92.08055878 152.60310364]
[87.77851105 166.97294617]
[83.47646332 181.34278870]
[79.17441559 195.71263123]
[74.87236786 210.08247375]
[70.57032013 224.45231628]
[66.26826477 238.82215881]
[61.96622086 253.19200134]
[63.26150894 258.57351685]
[62.34874725 263.38845825]
[59.85011292 266.86126709]
[56.61183167 268.59655762]
[51.07374191 282.53677368]
[45.53564835 296.47698975]
[39.99755478 310.41720581]
[40.59949493 317.25509644]
[37.95536804 322.50720215]
[33.71076202 324.99163818]
[27.37148857 338.58624268]
[21.03221512 352.18084717]
[29.42346191 366.78125000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[17 106]
[18 105]
[19 104]
[20 101]
[21 100]
[22 99]
[23 98]
[24 94]
[25 93]
[26 92]
[27 91]
[28 90]
[29 89]
[30 88]
[31 87]
[32 86]
[33 85]
[37 81]
[38 80]
[44 79]
[45 78]
[47 77]
[48 76]
[51 73]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[59 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
