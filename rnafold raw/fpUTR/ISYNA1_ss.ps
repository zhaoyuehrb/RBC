%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGCCAGGCGGGGACCCGAUGGCCACGGUGGCUCUGGGUUGUCGGGCCUCGAACCGGGUCUCCAGACGUUGGGCCCCUCCCUCCCAGCGCGGGAGAGGCGGGGAAGGGGGCGGGGCGGGGGAGGGGCCGCAGCGCUUUUCUCCGGAGGUCGCGCGCCCGAGAGCCCGCGCUGUCCGCCGCCGCUGCCUGAGUCGACUCUGCGCCGCCCGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[218.85958862 123.14591217]
[211.57928467 116.84111786]
[207.06536865 108.26814270]
[192.06575012 108.16055298]
[177.06613159 108.05296326]
[162.06651306 107.94538116]
[147.06690979 107.83779144]
[132.06729126 107.73020172]
[117.06768036 107.62261200]
[99.51213074 122.86380768]
[74.85740662 109.96545410]
[60.18073273 113.06307983]
[48.27584457 123.48345184]
[34.22509384 118.54121399]
[19.54841995 121.63883972]
[4.87174797 124.73646545]
[-9.80492496 127.83409119]
[-17.54985237 132.66554260]
[-24.71428871 130.86929321]
[-39.43388748 133.75605774]
[-54.15348434 136.64283752]
[-68.87307739 139.52961731]
[-83.59267426 142.41638184]
[-98.31227112 145.30316162]
[-113.03186798 148.18992615]
[-126.61889648 154.54545593]
[-138.26931763 163.99362183]
[-149.91973877 173.44178772]
[-161.57014465 182.88995361]
[-170.06385803 197.56282043]
[-186.51460266 193.46290588]
[-187.12893677 176.52009583]
[-171.01831055 171.23953247]
[-159.36788940 161.79136658]
[-147.71748352 152.34320068]
[-136.06706238 142.89503479]
[-141.33192444 128.84934998]
[-156.32228088 129.38719177]
[-171.31263733 129.92501831]
[-186.30299377 130.46284485]
[-201.29335022 131.00067139]
[-216.28370667 131.53849792]
[-224.99446106 144.24397278]
[-239.34854126 149.32466125]
[-253.77136230 145.02972412]
[-262.79156494 133.20712280]
[-277.78192139 133.74494934]
[-292.77227783 134.28277588]
[-307.76263428 134.82060242]
[-316.31533813 147.76785278]
[-330.85656738 153.18371582]
[-345.79498291 148.98567200]
[-355.38644409 136.78797913]
[-355.94281006 121.28087616]
[-347.25015259 108.42717743]
[-332.65100098 103.16938019]
[-317.75903320 107.52922821]
[-308.30047607 119.83025360]
[-293.31011963 119.29242706]
[-278.31976318 118.75460052]
[-263.32940674 118.21676636]
[-255.17964172 105.77814484]
[-241.10169983 100.46064758]
[-226.42041016 104.49958801]
[-216.82153320 116.54814148]
[-201.83117676 116.01031494]
[-186.84082031 115.47248840]
[-171.85046387 114.93466187]
[-156.86010742 114.39682770]
[-141.86976624 113.85900116]
[-115.91864777 133.47033691]
[-101.19905090 130.58355713]
[-86.47945404 127.69679260]
[-71.75985718 124.81001282]
[-57.04025650 121.92324066]
[-42.32065964 119.03646851]
[-27.60106277 116.14969635]
[-12.90254974 113.15741730]
[1.77412319 110.05979156]
[16.45079613 106.96216583]
[31.12746811 103.86454773]
[41.98258591 93.66573334]
[57.08311081 98.38640594]
[71.75978088 95.28878021]
[78.01768494 81.65651703]
[70.79892731 68.50777435]
[63.58016205 55.35902786]
[56.36140060 42.21028519]
[49.14263916 29.06153870]
[34.20310593 23.21433067]
[29.59782600 7.84647703]
[38.85957718 -5.25312185]
[54.88354111 -6.03557348]
[65.37749481 6.09935141]
[62.29138565 21.84277725]
[69.51014709 34.99152374]
[76.72890472 48.14026642]
[83.94766998 61.28901291]
[91.16642761 74.43775940]
[109.24551392 79.08320618]
[117.17526245 92.62300110]
[132.17488098 92.73059082]
[147.17449951 92.83817291]
[162.17410278 92.94576263]
[177.17372131 93.05335236]
[192.17333984 93.16094208]
[207.17294312 93.26852417]
[221.16978455 77.56835175]
[241.90747070 77.32109833]
[255.87248230 92.25328827]
[270.85357666 91.50048828]
[285.82888794 90.64025116]
[300.79766846 89.67262268]
[315.76641846 88.70499420]
[330.73516846 87.73736572]
[345.70391846 86.76974487]
[360.67266846 85.80211639]
[373.94497681 77.19070435]
[387.14486694 84.09087372]
[402.11364746 83.12324524]
[417.08239746 82.15561676]
[432.05114746 81.18798828]
[447.01989746 80.22035980]
[461.98864746 79.25273895]
[472.39581299 67.66269684]
[487.59002686 66.89462280]
[498.57522583 76.88766479]
[513.54400635 75.92004395]
[520.71923828 61.02035904]
[534.35223389 51.82640839]
[550.66760254 50.77000046]
[565.20446777 58.04504395]
[574.03588867 71.58040619]
[588.98919678 70.39816284]
[603.94256592 69.21591187]
[618.89587402 68.03366089]
[633.84924316 66.85140991]
[648.80255127 65.66916656]
[651.39862061 59.94232178]
[655.46057129 55.19554901]
[660.64990234 51.78977585]
[666.54394531 49.97567368]
[672.66967773 49.87531281]
[678.54211426 51.47420120]
[683.70263672 54.62418747]
[687.75457764 59.05690765]
[690.39398193 64.40653229]
[705.39050293 64.72927094]
[720.38702393 65.05200958]
[734.35052490 57.61343002]
[746.90832520 65.62277985]
[761.90484619 65.94551849]
[775.86834717 58.50693512]
[788.42614746 66.51628876]
[803.42462158 66.73146057]
[818.42425537 66.83904266]
[833.42388916 66.94663239]
[848.42346191 67.05422211]
[863.42309570 67.16181183]
[874.63409424 56.34738922]
[889.84429932 56.67017365]
[900.08508301 67.42477417]
[914.07067871 58.86116409]
[928.34863281 66.92790985]
[928.23101807 83.32663727]
[913.83880615 91.18773651]
[899.97747803 82.42439270]
[889.58349609 93.03098297]
[874.37017822 93.13555145]
[863.31549072 82.16142273]
[848.31585693 82.05383301]
[833.31628418 81.94625092]
[818.31665039 81.83866119]
[803.31701660 81.73107147]
[796.60986328 84.82451630]
[788.10345459 81.51281738]
[775.21264648 88.97447968]
[761.58215332 80.94204712]
[746.58563232 80.61930847]
[733.69482422 88.08097076]
[720.06427002 80.04853821]
[705.06774902 79.72579956]
[690.07122803 79.40305328]
[670.85821533 93.26358795]
[649.98480225 80.62249756]
[635.03149414 81.80474854]
[620.07812500 82.98699951]
[605.12481689 84.16925049]
[590.17144775 85.35149384]
[575.21813965 86.53374481]
[570.17022705 99.22031403]
[560.10113525 108.53993988]
[546.93646240 112.63278961]
[533.22723389 110.64604187]
[521.65600586 102.91086578]
[514.51159668 90.88880157]
[499.54287720 91.85642242]
[489.93566895 103.18062592]
[474.76901245 104.37517548]
[462.95629883 94.22149658]
[447.98751831 95.18911743]
[433.01876831 96.15674591]
[418.05001831 97.12437439]
[403.08126831 98.09200287]
[388.11248779 99.05963135]
[375.91085815 107.60182953]
[361.64031982 100.77087402]
[346.67153931 101.73850250]
[331.70278931 102.70612335]
[316.73403931 103.67375183]
[301.76528931 104.64138031]
[286.79650879 105.60900879]
[280.32827759 109.17516327]
[271.60638428 106.48158264]
[256.62530518 107.23439026]
[252.79655457 115.75522614]
[246.08834839 122.33916473]
[237.39099121 126.05338287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 107]
[4 106]
[5 105]
[6 104]
[7 103]
[8 102]
[9 101]
[11 84]
[12 83]
[14 81]
[15 80]
[16 79]
[17 78]
[19 77]
[20 76]
[21 75]
[22 74]
[23 73]
[24 72]
[25 71]
[26 36]
[27 35]
[28 34]
[29 33]
[37 70]
[38 69]
[39 68]
[40 67]
[41 66]
[42 65]
[46 61]
[47 60]
[48 59]
[49 58]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[110 215]
[111 214]
[112 212]
[113 211]
[114 210]
[115 209]
[116 208]
[117 207]
[119 205]
[120 204]
[121 203]
[122 202]
[123 201]
[124 200]
[127 197]
[128 196]
[133 190]
[134 189]
[135 188]
[136 187]
[137 186]
[138 185]
[147 183]
[148 182]
[149 181]
[151 179]
[152 178]
[154 176]
[155 174]
[156 173]
[157 172]
[158 171]
[159 170]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
