%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAAGUCAACAUAUAACAGCAAACUUACAACAAUUAUUUAACAUUUUUAAAGCCAUGAAGAAGGGACAGAGCACGGAGCGGCCGGGGAGAGCGGCAGAGCCAGAGGCAGAGGCACGGCUGGCUCCCCGGGAGGGCCCUUGCGGCGCGGGGCGCAGUGCCUAGGCCGCCCGGGUCUCCUGCGUUGCGGGGAGCGCAGCGCAGGCUCUCGCUUGCC\
) } def
/len { sequence length } bind def

/coor [
[-37.84379959 163.30752563]
[-51.04682159 170.42652893]
[-64.24983978 177.54554749]
[-68.87867737 192.41873169]
[-82.36982727 199.45033264]
[-96.52061462 194.94578552]
[-109.72363281 202.06478882]
[-122.92665100 209.18379211]
[-119.18468475 223.78117371]
[-119.04530334 238.84082031]
[-122.51226044 253.48728943]
[-129.37980652 266.87023926]
[-139.24487305 278.21368408]
[-151.53076172 286.86111450]
[-165.52078247 292.31341553]
[-180.40014648 294.25769043]
[-195.30340576 292.58523560]
[-209.36470032 287.39758301]
[-221.76818848 279.00033569]
[-231.79530334 267.88525391]
[-244.99833679 275.00427246]
[-240.48876953 289.35906982]
[-238.77763367 304.30792236]
[-239.92677307 319.31045532]
[-243.89465332 333.82431030]
[-250.53784180 347.32485962]
[-259.61618042 359.32403564]
[-270.80151367 369.38809204]
[-283.68948364 377.15319824]
[-297.81417847 382.33865356]
[-312.66503906 384.75701904]
[-327.70520020 384.32086182]
[-342.39096069 381.04598999]
[-356.19143677 375.05072021]
[-368.60778809 366.55181885]
[-379.19113159 355.85653687]
[-387.55886841 343.35144043]
[-393.40856934 329.48861694]
[-396.52871704 314.76922607]
[-396.80654907 299.72531128]
[-394.23202515 284.90072632]
[-388.89819336 270.83135986]
[-380.99789429 258.02581787]
[-370.81671143 246.94703674]
[-358.72265625 237.99546814]
[-345.15295410 231.49473572]
[-330.59811401 227.67980957]
[-315.58432007 226.68861389]
[-300.65429688 228.55697632]
[-286.34774780 233.21736145]
[-273.18185425 240.50129700]
[-261.63253784 250.14546204]
[-252.11734009 261.80123901]
[-238.91432190 254.68223572]
[-242.69084167 240.19685364]
[-242.89079285 225.21952820]
[-239.49821472 210.62083435]
[-232.70605469 197.25032043]
[-222.90528870 185.88717651]
[-210.66232300 177.19477844]
[-196.68629456 171.68191528]
[-181.78804016 169.67309570]
[-166.83297729 171.28938293]
[-152.69090271 176.44116211]
[-140.18534851 184.83302307]
[-130.04565430 195.98077393]
[-116.84263611 188.86177063]
[-103.63961792 181.74276733]
[-99.62712860 167.44467163]
[-86.33879852 160.03691101]
[-71.36884308 164.34251404]
[-58.16582489 157.22351074]
[-44.96280670 150.10450745]
[-43.29402161 133.77204895]
[-32.10596848 121.53083801]
[-15.66274929 118.34006500]
[-0.40850377 125.65202332]
[12.68958282 118.34174347]
[25.78766823 111.03147125]
[38.88575363 103.72119141]
[51.98384094 96.41091919]
[65.08192444 89.10063934]
[72.39220428 76.00255585]
[71.73791504 61.01683044]
[71.08362579 46.03110886]
[70.42932892 31.04538536]
[69.77503967 16.05966187]
[69.12075043 1.07393813]
[68.46646118 -13.91178513]
[67.81217194 -28.89750862]
[58.84866333 -38.16869354]
[58.61020279 -50.66135788]
[66.67941284 -59.67009354]
[66.24314117 -74.66374969]
[65.80686951 -89.65740204]
[65.37059784 -104.65105438]
[52.72442627 -113.44767761]
[47.74108887 -127.83585358]
[52.13363266 -142.22924805]
[64.01705933 -151.16915894]
[63.58079147 -166.16281128]
[63.14451981 -181.15646362]
[49.87633896 -189.02786255]
[42.99047852 -202.83325195]
[44.68418884 -218.16735840]
[54.41701508 -230.13713074]
[69.08324432 -234.92308044]
[84.00293732 -230.99800110]
[94.41528320 -219.61437988]
[96.99772644 -204.40469360]
[90.92622375 -190.22229004]
[78.13817596 -181.59274292]
[78.57444763 -166.59907532]
[79.01071930 -151.60542297]
[91.39385223 -143.37159729]
[96.61585999 -129.25796509]
[92.47755432 -114.60437012]
[80.36425781 -105.08732605]
[80.80052185 -90.09367371]
[81.23679352 -75.10002136]
[81.67306519 -60.10636520]
[91.67678833 -45.68594360]
[82.79788971 -29.55179977]
[83.45217896 -14.56607628]
[84.10647583 0.41964737]
[84.76076508 15.40537071]
[85.41505432 30.39109421]
[86.06934357 45.37681580]
[86.72363281 60.36254120]
[87.37792969 75.34826660]
[101.86022949 71.30802155]
[116.89795685 75.44293976]
[128.05458069 87.12890625]
[142.69902039 83.88231659]
[157.34346008 80.63571930]
[171.98789978 77.38912201]
[186.63233948 74.14253235]
[201.27677917 70.89593506]
[209.78799438 57.84997940]
[224.68579102 54.76608658]
[237.07066345 62.96062469]
[251.71510315 59.71403122]
[266.35955811 56.46743774]
[281.00399780 53.22084045]
[295.64843750 49.97424698]
[303.34585571 45.06335068]
[310.52941895 46.78856659]
[322.47985840 36.42047882]
[336.50881958 41.42425156]
[351.19894409 38.39098740]
[365.88903809 35.35772324]
[380.57916260 32.32445908]
[390.56079102 19.76475143]
[406.60342407 19.88195419]
[416.40051270 32.58616257]
[412.43655396 48.13179398]
[397.75238037 54.59357071]
[383.61242676 47.01456833]
[368.92230225 50.04783249]
[354.23220825 53.08109665]
[339.54208374 56.11436081]
[328.64236450 66.26548767]
[313.56268311 61.47867584]
[298.89501953 64.61869049]
[284.25057983 67.86528015]
[269.60614014 71.11187744]
[254.96170044 74.35846710]
[240.31726074 77.60506439]
[232.55590820 90.26591492]
[217.75061035 93.76703644]
[204.52337646 85.54037476]
[189.87893677 88.78697205]
[175.23449707 92.03356934]
[160.59005737 95.28015900]
[145.94561768 98.52675629]
[131.30117798 101.77334595]
[126.89474487 116.11152649]
[137.18836975 127.02213287]
[147.48199463 137.93273926]
[157.77561951 148.84333801]
[168.06924438 159.75395203]
[178.36286926 170.66455078]
[188.65649414 181.57514954]
[198.95011902 192.48576355]
[209.24374390 203.39636230]
[219.53736877 214.30696106]
[229.83099365 225.21757507]
[245.76089478 227.11956787]
[254.08314514 240.83523560]
[248.41362000 255.84310913]
[233.10148621 260.63040161]
[219.89291382 251.52474976]
[218.92037964 235.51119995]
[208.62675476 224.60058594]
[198.33312988 213.68998718]
[188.03950500 202.77938843]
[177.74588013 191.86877441]
[167.45225525 180.95817566]
[157.15863037 170.04756165]
[146.86502075 159.13696289]
[136.57139587 148.22636414]
[126.27776337 137.31575012]
[115.98413849 126.40515137]
[101.06506348 130.05461121]
[86.64807129 126.05929565]
[76.30268097 115.81143951]
[72.39220428 102.19873047]
[59.29411697 109.50900269]
[46.19602966 116.81928253]
[33.09794617 124.12955475]
[19.99985886 131.43983459]
[6.90177202 138.75010681]
[6.28508663 152.51788330]
[-0.99536425 164.09181213]
[-12.94793892 170.50651550]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 73]
[2 72]
[3 71]
[6 68]
[7 67]
[8 66]
[20 54]
[21 53]
[77 212]
[78 211]
[79 210]
[80 209]
[81 208]
[82 207]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[93 121]
[94 120]
[95 119]
[96 118]
[100 114]
[101 113]
[102 112]
[133 176]
[134 175]
[135 174]
[136 173]
[137 172]
[138 171]
[141 168]
[142 167]
[143 166]
[144 165]
[145 164]
[147 163]
[149 161]
[150 160]
[151 159]
[152 158]
[177 203]
[178 202]
[179 201]
[180 200]
[181 199]
[182 198]
[183 197]
[184 196]
[185 195]
[186 194]
[187 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
