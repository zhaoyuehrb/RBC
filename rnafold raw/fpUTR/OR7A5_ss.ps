%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUGCAGAAUGUACGCUGUCUUCAGUUAAGGCUGAGAGUGGGAAGGAGUUCCUAAUCAGAGAUGACAUGGAGAUCCCUUAAAGAGAACCAGAUUCAUACACAAAAUGUAAGAUAAUUUAUUGGCUAUAAAAUAUAAAUGAUGGUAUUUCUGAAAGGUUAGCAAUGCAUGCCUGUCUCGUUUCCCUCUUUCUCUCUCUCUCUCUGAUAGUCACUUCAAUCAA\
) } def
/len { sequence length } bind def

/coor [
[-48.49356842 937.20465088]
[-54.81164932 950.80908203]
[-61.12973404 964.41357422]
[-67.44781494 978.01806641]
[-73.76589203 991.62255859]
[-80.08397675 1005.22705078]
[-78.87921906 1021.00231934]
[-91.25747681 1029.28649902]
[-97.57556152 1042.89099121]
[-103.89364624 1056.49548340]
[-98.70199585 1071.18164062]
[-105.30323029 1084.88854980]
[-119.33627319 1089.74743652]
[-117.34337616 1106.02502441]
[-130.60472107 1115.67224121]
[-145.47817993 1108.76489258]
[-146.66320801 1092.40856934]
[-132.94075012 1083.42944336]
[-138.28207397 1069.57275391]
[-132.06843567 1055.68591309]
[-117.49812317 1050.17736816]
[-111.18003845 1036.57287598]
[-104.86196136 1022.96838379]
[-106.51862335 1008.16619873]
[-93.68845367 998.90893555]
[-87.37037659 985.30444336]
[-81.05229187 971.70001221]
[-74.73421478 958.09552002]
[-68.41613007 944.49102783]
[-62.09804916 930.88653564]
[-57.64323044 916.56335449]
[-55.13063431 901.77526855]
[-52.61804199 886.98718262]
[-61.41972733 875.02618408]
[-59.08226395 859.99316406]
[-46.47677231 850.84228516]
[-43.96417618 836.05419922]
[-41.45158386 821.26611328]
[-38.93899155 806.47808838]
[-36.42639923 791.69000244]
[-41.92248154 777.84649658]
[-31.98288536 765.53735352]
[-29.47029305 750.74932861]
[-26.95769882 735.96124268]
[-24.44510651 721.17315674]
[-21.93251228 706.38513184]
[-19.41991997 691.59704590]
[-16.90732574 676.80895996]
[-14.39473248 662.02093506]
[-11.88213921 647.23284912]
[-22.61901855 641.93731689]
[-31.63584518 634.04016113]
[-38.31652832 624.07110596]
[-42.20204544 612.70178223]
[-43.02199936 600.70043945]
[-40.71339417 588.88006592]
[-35.42542648 578.04327393]
[-27.50985718 568.92797852]
[-17.49763107 562.15686035]
[-6.06325436 558.19500732]
[6.02063704 557.31811523]
[9.35845089 542.69415283]
[12.69626522 528.07025146]
[16.03407860 513.44635010]
[19.37189293 498.82241821]
[22.60707664 484.17544556]
[17.69814873 470.11303711]
[28.14669991 458.23284912]
[31.27909279 443.56356812]
[34.41148376 428.89428711]
[37.54387665 414.22497559]
[32.63495255 400.16256714]
[43.08350372 388.28240967]
[29.08057404 376.76458740]
[22.84197998 359.64968872]
[26.17934799 341.65484619]
[38.25221252 327.78671265]
[55.77749252 321.94842529]
[58.29008484 307.16036987]
[60.80267715 292.37231445]
[63.31526947 277.58422852]
[54.51358414 265.62322998]
[56.85105133 250.59022522]
[69.45654297 241.43931580]
[71.96913147 226.65124512]
[74.48172760 211.86317444]
[76.99432373 197.07511902]
[79.50691223 182.28704834]
[81.91574860 167.48173523]
[84.22069550 152.65988159]
[86.52565002 137.83802795]
[88.83059692 123.01618195]
[76.58754730 116.92854309]
[68.08491516 104.27242279]
[66.76659393 87.49542999]
[74.46464539 70.76549530]
[71.53829193 56.05371475]
[61.25738144 44.02818298]
[66.36304474 30.03598785]
[63.43669128 15.32420921]
[60.51033401 0.61242980]
[57.58398056 -14.09934902]
[45.09719086 -24.17206764]
[45.33105469 -40.21341705]
[58.10617447 -49.91784668]
[73.62256622 -45.84094620]
[79.97738647 -31.11017036]
[72.29576111 -17.02570343]
[75.22211456 -2.31392503]
[78.14846802 12.39785385]
[81.07482147 27.10963249]
[91.14642334 38.08288193]
[86.25006866 53.12736130]
[89.17642975 67.83914185]
[96.60995483 68.83546448]
[111.47701263 70.82811737]
[118.91053772 71.82444000]
[125.60768890 58.40251160]
[132.30484009 44.98058319]
[139.00198364 31.55865288]
[145.69914246 18.13672447]
[152.39628601 4.71479559]
[143.00750732 -7.31905746]
[139.77819824 -22.23664093]
[143.34953308 -37.07605743]
[153.01243591 -48.89093399]
[166.84831238 -55.33541107]
[182.11004639 -55.12994003]
[195.76741028 -48.31531525]
[205.10871887 -36.24458313]
[208.27926636 -21.31439590]
[204.64952087 -6.48915768]
[194.94017029 5.28757286]
[181.07902527 11.67751694]
[165.81822205 11.41194630]
[159.12106323 24.83387566]
[152.42391968 38.25580215]
[145.72677612 51.67773056]
[139.02961731 65.09966278]
[132.33247375 78.52159119]
[134.28128052 102.91883850]
[121.81847382 120.58177948]
[103.65245056 125.32113647]
[101.34749603 140.14297485]
[99.04254913 154.96482849]
[96.73759460 169.78668213]
[98.51024628 178.73760986]
[94.29498291 184.79963684]
[91.78238678 199.58770752]
[89.26979065 214.37577820]
[86.75720215 229.16383362]
[84.24460602 243.95190430]
[93.12036133 256.75262451]
[90.36157227 271.71405029]
[78.10334015 280.09683228]
[75.59074402 294.88488770]
[73.07814789 309.67297363]
[70.56555939 324.46102905]
[80.71363831 330.87103271]
[88.08789062 340.29776001]
[91.84460449 351.62487793]
[91.56673431 363.52087402]
[87.31005096 374.59564209]
[79.59391785 383.56292725]
[69.33802032 389.38958740]
[57.75279236 391.41479492]
[62.43767166 406.52645874]
[52.21316910 417.35739136]
[49.08077621 432.02667236]
[45.94838333 446.69595337]
[42.81599045 461.36526489]
[47.50086975 476.47692871]
[37.27636719 487.30783081]
[38.54434967 496.34408569]
[33.99581146 502.16021729]
[30.65799713 516.78411865]
[27.32018471 531.40808105]
[23.98237038 546.03198242]
[20.64455605 560.65588379]
[35.80678940 570.76348877]
[45.90428543 585.89154053]
[49.40940857 603.70434570]
[45.80997849 621.46356201]
[35.68391037 636.44952393]
[20.60661316 646.37731934]
[2.90592599 649.74542236]
[0.39333272 664.53350830]
[-2.11926055 679.32159424]
[-4.63185406 694.10961914]
[-7.14444733 708.89770508]
[-9.65704060 723.68579102]
[-12.16963387 738.47381592]
[-14.68222713 753.26190186]
[-17.19482040 768.04998779]
[-11.87845516 782.95117188]
[-21.63833237 794.20257568]
[-24.15092659 808.99066162]
[-26.66351891 823.77874756]
[-29.17611313 838.56677246]
[-31.68870544 853.35485840]
[-22.81295013 866.15557861]
[-25.57173729 881.11700439]
[-37.82997513 889.49981689]
[-40.34257126 904.28784180]
[-42.85516357 919.07592773]
[-33.93798828 907.01422119]
[-21.89544487 898.07122803]
[-7.77090788 893.02172852]
[7.21187401 892.30322266]
[21.75478745 895.97796631]
[34.59783554 903.72753906]
[44.62828827 914.88061523]
[50.97710800 928.47076416]
[53.09423447 943.32061768]
[50.79623413 958.14349365]
[44.28221130 971.65527344]
[34.11653900 982.68518066]
[21.17997551 990.27764893]
[6.59334373 993.77484131]
[-8.37956524 992.87371826]
[-22.44149590 987.65240479]
[-34.37412262 978.56323242]
[-43.14359283 966.39379883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[3 28]
[4 27]
[5 26]
[6 25]
[8 23]
[9 22]
[10 21]
[13 18]
[31 205]
[32 204]
[33 203]
[36 200]
[37 199]
[38 198]
[39 197]
[40 196]
[42 194]
[43 193]
[44 192]
[45 191]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[61 179]
[62 178]
[63 177]
[64 176]
[65 175]
[66 173]
[68 171]
[69 170]
[70 169]
[71 168]
[73 166]
[78 158]
[79 157]
[80 156]
[81 155]
[84 152]
[85 151]
[86 150]
[87 149]
[88 148]
[89 146]
[90 145]
[91 144]
[92 143]
[96 114]
[97 113]
[99 111]
[100 110]
[101 109]
[102 108]
[117 140]
[118 139]
[119 138]
[120 137]
[121 136]
[122 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
