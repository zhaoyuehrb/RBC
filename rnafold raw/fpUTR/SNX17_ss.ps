%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAGGGCCAACUCCACUUUGGGCUCCCUAUCCGGACAGGUGGCUCUUGCCCUUUAGACUACAGUUCCCAGCAUGCCCAGGCGAUUGCGUCCCAGAACCGACGUCCCACCGCCUUCCCACAUCGGAUCGCAGGGCUCCCAAAAUGGCGAGUGAGGCUGCGGGGACUCGCUGAGCAGCGGAGGGGGAGCGUGCAGAGCCGCUGCGGCCCUCACAGUCCGGAGCCCGGCCGUGCCGUGCCGUAGGGAAC\
) } def
/len { sequence length } bind def

/coor [
[134.64897156 237.88394165]
[137.20491028 225.74996948]
[144.71276855 215.79048157]
[138.47370911 202.14958191]
[132.23466492 188.50866699]
[125.99561310 174.86776733]
[119.75656891 161.22686768]
[113.51751709 147.58596802]
[107.27846527 133.94505310]
[101.03942108 120.30415344]
[93.54180908 120.11492157]
[93.16310883 135.11013794]
[78.16790009 134.73121643]
[78.54658508 119.73645782]
[71.04897308 119.54722595]
[64.12973785 132.85601807]
[57.21050262 146.16482544]
[55.26882553 163.00721741]
[38.54713058 165.80386353]
[31.23075485 150.50984192]
[43.90169907 139.24559021]
[50.82093430 125.93679047]
[57.74016953 112.62799072]
[57.92941666 97.62918091]
[51.34817886 84.15003967]
[44.76694107 70.67089844]
[38.18570709 57.19175339]
[31.60446930 43.71260834]
[25.02323151 30.23346329]
[18.44199562 16.75432014]
[5.43437004 7.74808598]
[6.80310345 -7.08349657]
[0.22186671 -20.56264114]
[-6.35936975 -34.04178619]
[-12.94060612 -47.52092743]
[-21.73966408 -46.57723236]
[-30.64475822 -48.55404282]
[-38.68505096 -53.41267014]
[-44.92927170 -60.79211044]
[-48.59226227 -70.03182983]
[-62.49528885 -64.40103149]
[-69.25401306 -58.29413605]
[-76.60941315 -58.78812027]
[-90.58237457 -53.33318329]
[-104.55533600 -47.87824249]
[-114.37512207 -34.74417114]
[-130.62527466 -36.94973755]
[-136.58903503 -52.22604752]
[-126.13139343 -64.85813904]
[-110.01027679 -61.85120392]
[-96.03731537 -67.30614471]
[-82.06435394 -72.76108551]
[-68.12608337 -78.30406189]
[-54.22305679 -83.93485260]
[-47.55691910 -97.37221527]
[-51.48488617 -111.84878540]
[-55.41285324 -126.32535553]
[-59.34082031 -140.80192566]
[-64.59574127 -148.24238586]
[-63.22579193 -155.48594666]
[-72.87078094 -160.44613647]
[-78.09820557 -169.69792175]
[-77.39913940 -180.08160400]
[-71.24346924 -188.19960022]
[-74.62081146 -202.81443787]
[-77.99815369 -217.42929077]
[-81.37548828 -232.04412842]
[-84.75283051 -246.65896606]
[-88.13016510 -261.27380371]
[-91.50750732 -275.88864136]
[-96.47710419 -283.52264404]
[-94.83403015 -290.70916748]
[-98.02671051 -305.36544800]
[-101.21939087 -320.02172852]
[-106.09228516 -327.71780396]
[-104.35866547 -334.88302612]
[-107.36618805 -349.57843018]
[-110.37370300 -364.27383423]
[-113.47386169 -378.94998169]
[-180.08238220 -393.82092285]
[-189.52954102 -405.47216797]
[-198.97669983 -417.12338257]
[-208.42385864 -428.77462769]
[-217.87101746 -440.42587280]
[-235.96188354 -438.93615723]
[-251.18156433 -448.53634644]
[-257.51757812 -465.21002197]
[-252.60192871 -482.19219971]
[-262.34005737 -493.60137939]
[-272.07818604 -505.01052856]
[-281.81628418 -516.41967773]
[-291.55441284 -527.82885742]
[-307.01293945 -526.48205566]
[-320.29336548 -534.50762939]
[-326.28915405 -548.81951904]
[-322.69473267 -563.91455078]
[-310.89227295 -573.98834229]
[-295.42007446 -575.16735840]
[-282.22747803 -566.99822998]
[-276.38729858 -552.62213135]
[-280.14526367 -537.56695557]
[-270.40713501 -526.15783691]
[-260.66900635 -514.74865723]
[-250.93089294 -503.33947754]
[-241.19276428 -491.93032837]
[-229.39245605 -494.66003418]
[-217.47872925 -492.10797119]
[-207.71720886 -484.69686890]
[-201.99070740 -473.77941895]
[-201.43624878 -461.39157104]
[-206.21978760 -449.87301636]
[-196.77262878 -438.22177124]
[-187.32546997 -426.57055664]
[-177.87831116 -414.91931152]
[-168.43115234 -403.26809692]
[-154.49287415 -408.81106567]
[-155.62730408 -423.76809692]
[-156.76173401 -438.72515869]
[-168.91203308 -448.83187866]
[-170.27383423 -464.57739258]
[-160.03921509 -476.62014771]
[-144.28019714 -477.81539917]
[-132.34631348 -467.45404053]
[-131.31773376 -451.68325806]
[-141.80470276 -439.85958862]
[-140.67027283 -424.90252686]
[-139.53584290 -409.94549561]
[-132.18814087 -408.44174194]
[-129.18061829 -423.13714600]
[-126.17310333 -437.83255005]
[-116.22104645 -449.05557251]
[-111.47769928 -434.82501221]
[-114.48521423 -420.12963867]
[-117.49273682 -405.43423462]
[-110.14503479 -403.93045044]
[-103.22579956 -417.23925781]
[-96.30656433 -430.54806519]
[-89.38732910 -443.85687256]
[-82.55219269 -457.20904541]
[-75.80142212 -470.60409546]
[-69.05065155 -483.99914551]
[-67.32161713 -500.86468506]
[-50.63653946 -503.87207031]
[-43.12778854 -488.67156982]
[-55.65560913 -477.24835205]
[-62.40637970 -463.85333252]
[-69.15715027 -450.45828247]
[-69.36035156 -443.08911133]
[-76.07852936 -436.93762207]
[-82.99776459 -423.62884521]
[-89.91699982 -410.32003784]
[-96.83623505 -397.01123047]
[-98.81757355 -382.14266968]
[-94.33422852 -376.29067993]
[-95.67829895 -367.28137207]
[-92.67078400 -352.58596802]
[-89.66326904 -337.89056396]
[-86.56310272 -323.21441650]
[-83.37042236 -308.55813599]
[-80.17774200 -293.90185547]
[-76.89266205 -279.26599121]
[-73.51532745 -264.65115356]
[-70.13798523 -250.03630066]
[-66.76065063 -235.42146301]
[-63.38330841 -220.80662537]
[-60.00597000 -206.19178772]
[-56.62863159 -191.57693481]
[-42.44710541 -178.41175842]
[-48.70081711 -159.23095703]
[-44.86425018 -144.72988892]
[-40.93628311 -130.25332642]
[-37.00831604 -115.77674866]
[-33.08034897 -101.30017853]
[-15.56303978 -104.48771667]
[0.34250090 -97.64697266]
[9.53943348 -83.55986786]
[9.40975094 -67.22756195]
[0.53853762 -54.10216522]
[7.11977434 -40.62302017]
[13.70101070 -27.14387703]
[20.28224754 -13.66473293]
[32.81913757 -5.62261772]
[31.92114067 10.17308331]
[38.50237656 23.65222740]
[45.08361435 37.13137054]
[51.66484833 50.61051559]
[58.24608612 64.08966064]
[64.82732391 77.56880188]
[71.40856171 91.04795074]
[86.81532288 72.71942139]
[110.99286652 71.40089417]
[128.69145203 88.31795502]
[143.09109497 92.51918030]
[157.49073792 96.72039795]
[171.89038086 100.92161560]
[186.59243774 94.50062561]
[200.71128845 102.11885071]
[203.41618347 117.93223572]
[192.63212585 129.81010437]
[176.63174438 128.64077759]
[167.68916321 115.32126617]
[153.28952026 111.12004089]
[138.88986206 106.91882324]
[124.49022675 102.71759796]
[114.68032074 114.06510162]
[120.91937256 127.70600891]
[127.15842438 141.34690857]
[133.39747620 154.98782349]
[139.63652039 168.62872314]
[145.87556458 182.26962280]
[152.11462402 195.91052246]
[158.35366821 209.55143738]
[176.24356079 212.62559509]
[188.58439636 225.72164917]
[190.55690002 243.44917297]
[181.55702209 258.66629028]
[188.13825989 272.14544678]
[194.71948242 285.62457275]
[212.68125916 288.24636841]
[225.34858704 301.02688599]
[227.76774597 318.69900513]
[219.15466309 334.13836670]
[226.07389832 347.44714355]
[239.30462646 356.12231445]
[238.31054688 370.98373413]
[245.22978210 384.29251099]
[252.14900208 397.60131836]
[259.06823730 410.91012573]
[271.73919678 422.17437744]
[264.42282104 437.46838379]
[247.70111084 434.67175293]
[245.75944519 417.82934570]
[238.84020996 404.52056885]
[231.92097473 391.21176147]
[225.00173950 377.90295410]
[212.26593018 370.17971802]
[212.76510620 354.36639404]
[205.84587097 341.05758667]
[193.73394775 341.06030273]
[182.70074463 335.89129639]
[174.85852051 326.47265625]
[171.73719788 314.54617310]
[173.98617554 302.35156250]
[181.24034119 292.20581055]
[174.65910339 278.72665405]
[168.07786560 265.24752808]
[155.96974182 264.94464111]
[145.07048035 259.49890137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 212]
[4 211]
[5 210]
[6 209]
[7 208]
[8 207]
[9 206]
[10 205]
[15 23]
[16 22]
[17 21]
[24 189]
[25 188]
[26 187]
[27 186]
[28 185]
[29 184]
[30 183]
[32 181]
[33 180]
[34 179]
[35 178]
[40 54]
[41 53]
[43 52]
[44 51]
[45 50]
[55 173]
[56 172]
[57 171]
[58 170]
[60 169]
[64 167]
[65 166]
[66 165]
[67 164]
[68 163]
[69 162]
[70 161]
[72 160]
[73 159]
[74 158]
[76 157]
[77 156]
[78 155]
[79 153]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
[88 105]
[89 104]
[90 103]
[91 102]
[92 101]
[116 127]
[117 126]
[118 125]
[135 152]
[136 151]
[137 150]
[138 149]
[139 147]
[140 146]
[141 145]
[192 204]
[193 203]
[194 202]
[195 201]
[216 246]
[217 245]
[218 244]
[222 238]
[223 237]
[225 235]
[226 234]
[227 233]
[228 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
