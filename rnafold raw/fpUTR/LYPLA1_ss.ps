%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCGGGCGAGGGGCAGGGCAGGGCGGACCCUGGACGCGCGGGCGCGCGCGGAAGGUAGCGCGGGGCCGCGUUGGCGCGCACGCGCCUGAGCGUGCGCCCGGUGGGGCCGGCCGGGACUCGCCGCUCGCACGCCCUUGGGCCGCGGCCGGGCGCCCGCUCUUCCUUCCGCUUGCGCUGUGAGCUGAGGCGGUGU\
) } def
/len { sequence length } bind def

/coor [
[195.48074341 575.86859131]
[208.09941101 567.75878906]
[222.35978699 572.41113281]
[218.07060242 558.03741455]
[213.78141785 543.66375732]
[209.49223328 529.29003906]
[205.20304871 514.91638184]
[200.91386414 500.54269409]
[196.62467957 486.16900635]
[192.21984863 471.83032227]
[187.69966125 457.52758789]
[183.17947388 443.22488403]
[178.65928650 428.92214966]
[174.13909912 414.61944580]
[169.11903381 409.18164062]
[169.66329956 400.04974365]
[165.37411499 385.67605591]
[161.08493042 371.30236816]
[156.79574585 356.92868042]
[152.50656128 342.55499268]
[147.57475281 337.03704834]
[148.26606750 327.91513062]
[144.20899963 313.47418213]
[140.15193176 299.03326416]
[136.09486389 284.59234619]
[132.03779602 270.15142822]
[129.14511108 268.11337280]
[127.10151672 264.56674194]
[126.60802460 259.92852783]
[128.15170288 254.91426086]
[124.79706573 240.29420471]
[121.44242859 225.67413330]
[118.08778381 211.05406189]
[114.73314667 196.43399048]
[104.34545898 185.75947571]
[108.80047607 170.57846069]
[105.44583893 155.95838928]
[102.09119415 141.33831787]
[98.73655701 126.71825409]
[95.26425171 112.12568665]
[91.20718384 97.68476105]
[86.68699646 83.38204193]
[82.16680908 69.07931519]
[77.64662170 54.77659607]
[73.12642670 40.47387314]
[61.59017181 29.64680672]
[65.13249207 15.17955875]
[60.61230469 0.87683558]
[55.86228180 -13.35121059]
[50.88366699 -27.50088882]
[45.90504837 -41.65056610]
[40.92642975 -55.80024338]
[26.95429802 -62.68626404]
[22.10683823 -77.10697174]
[28.75771141 -90.38482666]
[23.77909470 -104.53450012]
[18.80047607 -118.68418121]
[14.02308655 -123.28565979]
[12.52228165 -128.78436279]
[13.89741039 -133.37065125]
[2.36115360 -144.19772339]
[5.90347290 -158.66496277]
[1.38328373 -172.96769714]
[-3.13690543 -187.27041626]
[-7.88692522 -201.49845886]
[-12.86554337 -215.64813232]
[-17.84416008 -229.79782104]
[-22.82277870 -243.94749451]
[-34.70185089 -254.39729309]
[-31.62744522 -268.97113037]
[-36.60606384 -283.12081909]
[-41.58468246 -297.27050781]
[-46.56330109 -311.42016602]
[-51.54191589 -325.56985474]
[-56.52053452 -339.71954346]
[-62.32844543 -346.78747559]
[-61.46338272 -354.13745117]
[-66.21340179 -368.36550903]
[-70.96341705 -382.59353638]
[-75.71343994 -396.82159424]
[-80.46346283 -411.04965210]
[-85.21347809 -425.27767944]
[-89.96350098 -439.50573730]
[-94.71352386 -453.73376465]
[-108.96279144 -460.57000732]
[-114.12571716 -475.50720215]
[-107.13922882 -489.68338013]
[-92.14828491 -494.68811035]
[-78.04674530 -487.55212402]
[-73.20080566 -472.50909424]
[-80.48547363 -458.48379517]
[-75.73545074 -444.25573730]
[-70.98543549 -430.02770996]
[-66.23541260 -415.79965210]
[-61.48539352 -401.57162476]
[-56.73537445 -387.34356689]
[-51.98535538 -373.11550903]
[-47.23533249 -358.88748169]
[-42.37085724 -344.69815063]
[-37.39223862 -330.54846191]
[-32.41362381 -316.39880371]
[-27.43500328 -302.24911499]
[-22.45638657 -288.09942627]
[-17.47776794 -273.94976807]
[-5.95480013 -264.51205444]
[-8.67310143 -248.92611694]
[-3.69448376 -234.77642822]
[1.28413403 -220.62675476]
[6.26275206 -206.47708130]
[10.11726761 -203.63670349]
[12.22076702 -198.33920288]
[11.16581726 -191.79060364]
[15.68600655 -177.48788452]
[20.20619583 -163.18516541]
[31.41913795 -153.38111877]
[28.20013428 -137.89083862]
[32.95015335 -123.66279602]
[37.92877197 -109.51312256]
[42.90739059 -95.36344147]
[56.40730286 -89.17572021]
[61.65789413 -74.89685822]
[55.07610703 -60.77886200]
[60.05472565 -46.62918472]
[65.03334045 -32.47950745]
[70.01196289 -18.32982826]
[73.86647797 -15.48944950]
[75.96997833 -10.19195080]
[74.91502380 -3.64335346]
[79.43521881 10.65936947]
[90.64815521 20.46340942]
[87.42915344 35.95368195]
[91.94934082 50.25640488]
[96.46952820 64.55912781]
[100.98972321 78.86185455]
[105.50991058 93.16457367]
[108.10072327 94.79786682]
[110.15087128 97.41497803]
[111.29300690 100.81607819]
[111.23928833 104.66783142]
[109.82838440 108.53594971]
[114.92702484 116.13143921]
[113.35662079 123.36361694]
[116.71126556 137.98368835]
[120.06590271 152.60374451]
[123.42054749 167.22381592]
[134.04817200 178.94406128]
[129.35321045 193.07936096]
[132.70785522 207.69941711]
[136.06250000 222.31948853]
[139.41712952 236.93955994]
[142.77177429 251.55963135]
[146.47871399 266.09436035]
[150.53578186 280.53527832]
[154.59284973 294.97619629]
[158.64991760 309.41711426]
[162.70698547 323.85806274]
[166.88024902 338.26580811]
[171.16943359 352.63949585]
[175.45861816 367.01318359]
[179.74780273 381.38687134]
[184.03698730 395.76055908]
[188.44181824 410.09924316]
[192.96200562 424.40197754]
[197.48219299 438.70468140]
[202.00238037 453.00741577]
[206.52256775 467.31011963]
[212.09977722 474.56152344]
[210.99836731 481.87982178]
[215.28755188 496.25350952]
[219.57673645 510.62719727]
[223.86592102 525.00085449]
[228.15510559 539.37457275]
[232.44429016 553.74822998]
[236.73347473 568.12194824]
[241.59796143 582.31127930]
[247.02983093 596.29321289]
[252.46171570 610.27514648]
[257.89358521 624.25708008]
[263.32546997 638.23901367]
[278.36361694 642.06439209]
[288.25537109 654.01983643]
[289.19708252 669.50830078]
[280.82669067 682.57415771]
[266.36276245 688.19329834]
[251.36698914 684.20501709]
[241.60552979 672.14294434]
[240.83187866 656.64514160]
[249.34352112 643.67089844]
[243.91165161 629.68896484]
[238.47976685 615.70703125]
[233.04789734 601.72509766]
[227.61601257 587.74316406]
[219.20964050 600.16619873]
[204.26945496 601.50439453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 174]
[4 173]
[5 172]
[6 171]
[7 170]
[8 169]
[9 168]
[10 166]
[11 165]
[12 164]
[13 163]
[14 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[22 156]
[23 155]
[24 154]
[25 153]
[26 152]
[30 151]
[31 150]
[32 149]
[33 148]
[34 147]
[36 145]
[37 144]
[38 143]
[39 142]
[40 140]
[41 135]
[42 134]
[43 133]
[44 132]
[45 131]
[47 129]
[48 128]
[49 125]
[50 124]
[51 123]
[52 122]
[55 119]
[56 118]
[57 117]
[60 116]
[62 114]
[63 113]
[64 112]
[65 109]
[66 108]
[67 107]
[68 106]
[70 104]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
