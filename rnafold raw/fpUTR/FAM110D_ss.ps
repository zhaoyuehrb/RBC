%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGAGGUUUGGCUGCCACCAAAGUUACUUCUAGUCCUUGCUGUCCACUCCUGCCCUCAGUCUGGACCUGCCCAAGGACCCCUGCAAUUAGGCCUCCCAUGCAGAGGUCAGUGAGAGCCCAAGCCAAUUGCUCUAGGCCCCGUGGCUGGCUACUUAUGGGGCACUGUCCUGACCAGCUCUGCUAAG\
) } def
/len { sequence length } bind def

/coor [
[127.09532166 387.20812988]
[125.34471130 372.31060791]
[123.59409332 357.41311646]
[121.84348297 342.51562500]
[112.54029083 334.76455688]
[110.97010040 322.35339355]
[118.51793671 311.87826538]
[117.01650238 296.95358276]
[115.51506805 282.02893066]
[114.01363373 267.10424805]
[105.04124451 255.21537781]
[111.35834503 240.71003723]
[109.85691071 225.78536987]
[108.23082733 210.87376404]
[106.23152924 196.00761414]
[103.98409271 181.17692566]
[101.73665619 166.34625244]
[99.48921967 151.51556396]
[95.37030792 145.36103821]
[97.33029175 136.41850281]
[95.33098602 121.55233765]
[89.95832062 135.55714417]
[88.43296051 150.47938538]
[80.83060455 163.41012573]
[68.53305817 171.99909973]
[53.77551651 174.68515015]
[39.24029922 170.98010254]
[27.56931877 161.55734253]
[20.88388824 148.12957764]
[20.39914513 133.13740540]
[26.20319557 119.30581665]
[37.24110031 109.14881897]
[51.50661850 104.51254272]
[66.40593719 106.23936462]
[81.23956299 104.01147461]
[67.15372467 98.85501099]
[53.06788635 93.69854736]
[38.98204422 88.54208374]
[24.89620590 83.38562012]
[10.81036758 78.22915649]
[-3.35966921 73.30877686]
[-17.60994530 68.62586975]
[-35.53121567 72.81766510]
[-46.72290802 59.31151962]
[-61.04944611 54.86738586]
[-75.37598419 50.42325211]
[-89.70252228 45.97911835]
[-104.02906036 41.53498459]
[-115.15682983 49.14474106]
[-128.44165039 48.95246506]
[-139.02949524 41.25278091]
[-143.18098450 29.04244041]
[-157.43125916 24.35953331]
[-171.68153381 19.67662621]
[-187.61416626 23.56037712]
[-198.74673462 11.51887417]
[-193.62702942 -4.06061792]
[-177.52174377 -7.15125322]
[-166.99862671 5.42634916]
[-152.74835205 10.10925579]
[-138.49807739 14.79216290]
[-123.83639526 6.57192564]
[-107.44033051 11.58861256]
[-99.58492279 27.20844650]
[-85.25838470 31.65258026]
[-70.93184662 36.09671402]
[-56.60531235 40.54084778]
[-42.27877426 44.98498154]
[-31.41983604 39.62664032]
[-19.43900681 43.22692490]
[-12.92703819 54.37559509]
[1.32323802 59.05850220]
[5.93018103 57.73250580]
[11.41866970 59.30059052]
[15.96683216 64.14331055]
[30.05267143 69.29978180]
[44.13851166 74.45624542]
[58.22434998 79.61270905]
[72.31018829 84.76917267]
[86.39602661 89.92563629]
[93.00303650 86.37635040]
[83.11369324 75.09801483]
[73.22434998 63.81968307]
[61.76988220 54.13489151]
[60.41846848 39.19589233]
[69.94899750 27.61275291]
[84.86855316 26.06139755]
[96.57828522 35.43594742]
[98.32933807 50.33328629]
[102.27320099 64.80553436]
[106.21705627 79.27778625]
[112.82406616 75.72850037]
[116.30136871 61.13711929]
[119.77867126 46.54574203]
[123.25597382 31.95436096]
[126.73327637 17.36297989]
[130.21058655 2.77160025]
[120.74335480 -9.67451191]
[121.54288483 -25.29164314]
[132.23164368 -36.70586014]
[147.76274109 -38.52772141]
[160.80285645 -29.89699554]
[165.19485474 -14.88885117]
[158.86495972 -0.58967388]
[144.80195618 6.24890280]
[141.32466125 20.84028244]
[137.84735107 35.43166351]
[134.37005615 50.02304077]
[130.89274597 64.61442566]
[127.41545105 79.20580292]
[122.25488281 86.61699677]
[115.90402222 92.63056183]
[130.60345459 89.64277649]
[145.30287170 86.65498352]
[160.00230408 83.66719818]
[174.70172119 80.67940521]
[189.37567139 77.56890106]
[204.02311707 74.33590698]
[218.67057800 71.10290527]
[233.31802368 67.86991119]
[238.47106934 63.67660904]
[244.11959839 62.85405731]
[248.50869751 64.78227234]
[263.25598145 62.04052353]
[278.00329590 59.29877472]
[292.75057983 56.55702591]
[307.49789429 53.81527710]
[314.55511475 38.45394135]
[329.22860718 30.39934921]
[345.64804077 32.64818573]
[357.37796021 44.11936569]
[372.07736206 41.13157654]
[386.77679443 38.14378357]
[401.09420776 29.06367111]
[413.78289795 40.30791092]
[406.49069214 55.61346054]
[389.76458740 52.84321213]
[375.06515503 55.83100128]
[360.36572266 58.81879044]
[355.97235107 71.43758392]
[345.83279419 80.30501556]
[332.52883911 83.02098083]
[319.51904297 78.77012634]
[310.23962402 68.56257629]
[295.49234009 71.30432892]
[280.74502563 74.04607391]
[265.99774170 76.78781891]
[251.25044250 79.52957153]
[236.55101013 82.51735687]
[221.90356445 85.75035858]
[207.25611877 88.98335266]
[192.60867310 92.21635437]
[186.74299622 96.73714447]
[177.68951416 95.37882996]
[162.99009705 98.36662292]
[148.29066467 101.35440826]
[133.59123230 104.34220123]
[118.89181519 107.32998657]
[110.19715118 119.55303192]
[112.19644928 134.41918945]
[114.31990051 149.26812744]
[116.56733704 164.09881592]
[118.81476593 178.92948914]
[121.06220245 193.76017761]
[124.90196228 199.18179321]
[125.34539032 204.87265015]
[123.12832642 209.12315369]
[127.24518585 217.30006409]
[124.78157806 224.28393555]
[126.28301239 239.20860291]
[135.36279297 252.16499329]
[128.93829346 265.60281372]
[130.43972778 280.52749634]
[131.94116211 295.45214844]
[133.44261169 310.37683105]
[144.54489136 325.05615234]
[136.74098206 340.76501465]
[138.49159241 355.66250610]
[140.24220276 370.55999756]
[141.99281311 385.45748901]
[155.59045410 392.93304443]
[162.16667175 406.98770142]
[159.19277954 422.21713257]
[147.81230164 432.76531982]
[132.40127563 434.57629395]
[118.88552856 426.95367432]
[112.46216583 412.82852173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[3 178]
[4 177]
[7 175]
[8 174]
[9 173]
[10 172]
[12 170]
[13 169]
[14 167]
[15 164]
[16 163]
[17 162]
[18 161]
[20 160]
[21 159]
[35 80]
[36 79]
[37 78]
[38 77]
[39 76]
[40 75]
[41 72]
[42 71]
[44 68]
[45 67]
[46 66]
[47 65]
[48 64]
[52 61]
[53 60]
[54 59]
[92 110]
[93 109]
[94 108]
[95 107]
[96 106]
[97 105]
[112 158]
[113 157]
[114 156]
[115 155]
[116 154]
[117 152]
[118 151]
[119 150]
[120 149]
[123 148]
[124 147]
[125 146]
[126 145]
[127 144]
[131 139]
[132 138]
[133 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
