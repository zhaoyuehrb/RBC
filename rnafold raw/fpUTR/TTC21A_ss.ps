%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUUGUUCCUCCCACUCCAGACACUGGACGCUCCUAGCAACCGGCUAGCAGCUCGGUUUCCAAGGACUGUAACGCCUUCAACCGCCCGCCGCGAUAGAGUGCCCACGACCCUGCCUCGGGAAUCCCGCUCUGCACCGCCCCACCAGACCCGGACUCGGAGCCGCGAGCGGCCCGAG\
) } def
/len { sequence length } bind def

/coor [
[111.12126160 241.47329712]
[96.12444305 241.78253174]
[83.73268127 233.33006287]
[78.54763031 219.25471497]
[82.49475861 204.78335571]
[94.10830688 195.28991699]
[109.07559204 194.29974365]
[121.83739471 202.17924500]
[117.65761566 187.77337646]
[113.47783661 173.36749268]
[104.03582001 174.48591614]
[94.52823639 174.39422607]
[85.10954285 173.09387207]
[75.93277740 170.60601807]
[67.14701080 166.97105408]
[58.89499664 162.24804688]
[51.31079102 156.51373291]
[40.42713928 166.83584595]
[29.54348564 177.15795898]
[18.65983391 187.48007202]
[7.77618074 197.80220032]
[0.44440880 213.08883667]
[-16.27446365 210.27536011]
[-18.19917870 193.43101501]
[-2.54593658 186.91854858]
[8.33771610 176.59642029]
[19.22136879 166.27430725]
[30.10502052 155.95219421]
[40.98867416 145.63008118]
[31.99746704 130.66098022]
[26.73260689 114.01176453]
[11.79097557 115.33374786]
[-3.15065622 116.65573883]
[-16.21522141 125.57917023]
[-29.57487488 118.99366760]
[-44.51650620 120.31565094]
[-59.45813751 121.63764191]
[-74.39977264 122.95962524]
[-89.34140015 124.28161621]
[-100.70254517 135.60874939]
[-116.62502289 133.64550781]
[-124.89447021 119.89793396]
[-119.16727448 104.91198730]
[-103.83685303 100.18359375]
[-90.66339111 109.33998108]
[-75.72175598 108.01799774]
[-60.78012466 106.69600677]
[-45.83849335 105.37402344]
[-30.89686394 104.05203247]
[-18.90102386 95.22315216]
[-4.47264338 101.71410370]
[10.46898746 100.39212036]
[25.41061974 99.07012939]
[31.46693993 70.54393005]
[47.99728394 46.51955795]
[38.67453384 34.76853943]
[29.35178757 23.01752472]
[20.02903938 11.26651001]
[10.70629025 -0.48450541]
[-0.19082688 -1.10823476]
[-8.75932789 -7.50852299]
[-12.30041027 -17.36688042]
[-9.86682892 -27.32904053]
[-18.76905823 -39.40174866]
[-27.67128944 -51.47445679]
[-36.57352066 -63.54716492]
[-44.20923615 -68.61654663]
[-45.52409744 -75.91241455]
[-61.14662170 -78.30245972]
[-70.43593597 -91.08855438]
[-67.88085175 -106.68493652]
[-54.99725723 -115.83854675]
[-39.42876434 -113.11871338]
[-30.41187668 -100.13906097]
[-33.29615784 -84.60019684]
[-24.50081062 -72.44939423]
[-15.59858036 -60.37668610]
[-6.69635010 -48.30397797]
[2.20588017 -36.23126984]
[20.43827057 -29.84447670]
[22.45730591 -9.80725384]
[31.78005409 1.94376159]
[41.10280228 13.69477749]
[50.42555237 25.44579315]
[59.74829865 37.19680786]
[73.07411957 30.43393517]
[87.48053741 26.46291161]
[102.38939667 25.44310188]
[117.20235443 27.41543388]
[131.32495117 32.30075455]
[144.19039917 39.90299988]
[155.28237915 49.91707993]
[167.35508728 41.01485062]
[179.42779541 32.11262131]
[186.61941528 13.30178642]
[205.88775635 11.90818119]
[217.63877869 2.58543301]
[229.38978577 -6.73731518]
[241.14080811 -16.06006432]
[252.89181519 -25.38281250]
[264.64282227 -34.70555878]
[276.39385986 -44.02830887]
[272.56402588 -56.70865631]
[273.27893066 -69.90340424]
[278.43142700 -82.03682709]
[287.38565063 -91.66738129]
[299.05554199 -97.65896606]
[312.03652954 -99.31488800]
[324.77444458 -96.45885468]
[335.75173950 -89.45346069]
[347.82446289 -98.35569000]
[359.89718628 -107.25791931]
[362.01113892 -122.92018890]
[374.63128662 -132.43371582]
[390.27032471 -130.15428162]
[399.64990234 -117.43424225]
[397.20526123 -101.82016754]
[384.38674927 -92.57561493]
[368.79940796 -95.18521118]
[356.72668457 -86.28298187]
[344.65399170 -77.38075256]
[348.27099609 -60.90291595]
[344.32321167 -44.44438171]
[333.55490112 -31.31484795]
[318.08691406 -24.17615700]
[300.99899292 -24.50272751]
[285.71661377 -32.27729416]
[273.96557617 -22.95454597]
[262.21456909 -13.63179684]
[250.46354675 -4.30904818]
[238.71253967 5.01370001]
[226.96151733 14.33644867]
[215.21051025 23.65919685]
[214.95260620 33.91104507]
[208.95536804 42.49938583]
[199.01069641 46.43466187]
[188.33003235 44.18532944]
[176.25732422 53.08755875]
[164.18461609 61.98979187]
[168.64332581 70.80181122]
[171.89888000 80.12561035]
[173.89421082 89.79776001]
[174.59434509 99.64873505]
[173.98701477 109.50586700]
[172.08287048 119.19638062]
[168.91526794 128.55043030]
[164.53973389 137.40405273]
[159.03297424 145.60206604]
[152.49150085 153.00077820]
[145.02996826 159.47052002]
[136.77917480 164.89785767]
[127.88371277 169.18771362]
[132.06349182 183.59358215]
[136.24328613 197.99946594]
[141.42883301 212.07463074]
[147.59429932 225.74894714]
[153.75978088 239.42326355]
[159.92524719 253.09757996]
[166.09072876 266.77188110]
[172.49018860 273.33312988]
[172.24197388 280.74237061]
[178.16516113 294.52337646]
[184.08834839 308.30438232]
[190.01153564 322.08535767]
[203.46937561 331.45651245]
[201.81323242 347.77182007]
[186.74679565 354.24749756]
[173.76911926 344.22192383]
[176.23052979 328.00854492]
[170.30734253 314.22753906]
[164.38417053 300.44656372]
[158.46098328 286.66555786]
[152.41641235 272.93737793]
[146.25093079 259.26306152]
[140.08546448 245.58872986]
[133.91998291 231.91441345]
[127.75450897 218.24011230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 154]
[9 153]
[10 152]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[31 53]
[32 52]
[33 51]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[55 85]
[56 84]
[57 83]
[58 82]
[59 81]
[63 79]
[64 78]
[65 77]
[66 76]
[68 75]
[92 139]
[93 138]
[94 137]
[96 133]
[97 132]
[98 131]
[99 130]
[100 129]
[101 128]
[102 127]
[110 121]
[111 120]
[112 119]
[155 177]
[156 176]
[157 175]
[158 174]
[159 173]
[161 172]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
