%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUCGGGGCGGGACUUCCGGGGGUCAGCCGGCGUUGGCUGAGACGUCUUCGUGCCACGGUGCUGCCUCCUUUCCAAGCGCGACCCGUUGAGAUCCCCUUGACCACACCCUCAUUCUCAGCUGGUGCUCAUGAAGGACAGAAGAGUCAAUGUCAGUACAAUGUGAGUGAAGGGCUGAGGUCCUUGUC\
) } def
/len { sequence length } bind def

/coor [
[193.78001404 155.64643860]
[180.39152527 146.83415222]
[169.47880554 135.08299255]
[161.67169189 121.06527710]
[157.42216492 105.58435822]
[142.43054199 106.08558655]
[127.43891907 106.58680725]
[112.44729614 107.08803558]
[100.47863770 114.31594849]
[88.05392456 107.90359497]
[73.06230164 108.40481567]
[59.52838135 116.59893036]
[46.54967499 109.29122925]
[38.05771255 112.71131897]
[31.30380821 109.67346191]
[16.30590248 109.92411041]
[1.30799723 110.17475891]
[-11.84591675 125.33761597]
[-31.60492325 125.96104431]
[-45.26119232 112.09136200]
[-60.22769547 113.09325409]
[-75.19419861 114.09514618]
[-90.16069794 115.09703064]
[-105.12720490 116.09892273]
[-113.50013733 119.80085754]
[-120.35178375 116.99037933]
[-135.33293152 117.74204254]
[-150.31408691 118.49370575]
[-165.29524231 119.24536896]
[-173.72886658 122.80687714]
[-180.53259277 119.88230133]
[-194.06652832 128.07641602]
[-207.04522705 120.76871490]
[-222.03684998 121.26993561]
[-237.02847290 121.77116394]
[-245.52043152 125.19124603]
[-252.27433777 122.15339661]
[-267.27224731 122.40404510]
[-282.27014160 122.65468597]
[-297.26544189 123.03063965]
[-312.25704956 123.53186035]
[-327.24868774 124.03308868]
[-342.24029541 124.53430939]
[-354.20507812 135.22184753]
[-369.99606323 132.38903809]
[-377.49972534 118.20896912]
[-370.95993042 103.55937958]
[-355.39343262 99.67817688]
[-342.74154663 109.54268646]
[-327.74990845 109.04146576]
[-312.75830078 108.54023743]
[-297.76666260 108.03901672]
[-291.17346191 104.66653442]
[-282.52081299 107.65678406]
[-267.52288818 107.40613556]
[-252.52499390 107.15548706]
[-237.52969360 106.77954102]
[-222.53807068 106.27831268]
[-207.54644775 105.77709198]
[-195.08482361 97.61882782]
[-181.03382874 104.89067841]
[-166.04690552 104.26421356]
[-151.06575012 103.51255035]
[-136.08459473 102.76088715]
[-121.10344696 102.00922394]
[-106.12908936 101.13241577]
[-91.16259003 100.13053131]
[-76.19608307 99.12863922]
[-61.22958374 98.12674713]
[-46.26308060 97.12486267]
[-41.81973648 87.83347321]
[-33.85171127 81.18095398]
[-23.76037025 78.42493439]
[-13.35737514 80.12991333]
[-4.53946543 86.05319214]
[1.05734992 95.17684937]
[16.05525589 94.92620087]
[31.05316162 94.67555237]
[46.04845047 94.29960632]
[58.51007080 86.14134216]
[72.56108093 93.41319275]
[87.55270386 92.91196442]
[99.52136230 85.68405151]
[111.94607544 92.09640503]
[126.93769836 91.59518433]
[141.92932129 91.09395599]
[156.92094421 90.59273529]
[159.52944946 76.74876404]
[164.97335815 63.76240158]
[173.00941467 52.20708084]
[183.27996826 42.59244156]
[195.32888794 35.34185410]
[208.62182617 30.77377892]
[222.56991577 29.08778381]
[236.55584717 30.35582352]
[249.96118164 34.51916885]
[262.19372559 41.39112473]
[272.71365356 50.66540527]
[281.05740356 61.92977905]
[286.85797119 74.68438721]
[289.86120605 88.36393738]
[304.86120605 88.36393738]
[319.86120605 88.36393738]
[334.86120605 88.36393738]
[348.66137695 80.62663269]
[361.38864136 88.36393738]
[376.38864136 88.36393738]
[391.38812256 88.23860931]
[406.38601685 87.98796082]
[421.38394165 87.73731232]
[436.38183594 87.48666382]
[451.37713623 87.11071777]
[466.36874390 86.60948944]
[481.36038208 86.10826874]
[496.35198975 85.60704041]
[511.34362793 85.10581970]
[524.87756348 76.91170502]
[537.85626221 84.21939850]
[552.84790039 83.71817780]
[559.13793945 73.60202026]
[569.42956543 67.84539032]
[581.10162354 67.78158569]
[591.24487305 73.31053925]
[597.38702393 82.95261383]
[612.38702393 82.95261383]
[627.38702393 82.95261383]
[642.38702393 82.95261383]
[657.38702393 82.95261383]
[671.18725586 75.21530914]
[683.91448975 82.95261383]
[698.91448975 82.95261383]
[706.17181396 71.22090912]
[718.18542480 64.66369629]
[731.76171875 64.90216827]
[743.35125732 71.76686859]
[749.97711182 83.37004089]
[764.97503662 83.62068939]
[779.97296143 83.87133026]
[791.15777588 72.70553589]
[806.96179199 72.80253601]
[818.00866699 84.10478973]
[817.74462891 99.90687561]
[806.32617188 110.83368683]
[790.52777100 110.40254974]
[779.72229004 98.86923981]
[764.72436523 98.61859131]
[749.72650146 98.36794281]
[740.29095459 111.78990173]
[724.55914307 117.00205231]
[708.66064453 111.76522064]
[698.91448975 97.95261383]
[683.91448975 97.95261383]
[671.18725586 105.68991089]
[657.38702393 97.95261383]
[642.38702393 97.95261383]
[627.38702393 97.95261383]
[612.38702393 97.95261383]
[597.38702393 97.95261383]
[585.26489258 111.65089417]
[566.66143799 112.16750336]
[553.34912109 98.70980072]
[538.35748291 99.21102905]
[525.89587402 107.36928558]
[511.84484863 100.09744263]
[496.85321045 100.59866333]
[481.86160278 101.09989166]
[466.86996460 101.60111237]
[451.87835693 102.10234070]
[445.28515625 105.47482300]
[436.63247681 102.48456573]
[421.63458252 102.73521423]
[406.63668823 102.98586273]
[391.63876343 103.23651123]
[384.99014282 106.49835205]
[376.38864136 103.36393738]
[361.38864136 103.36393738]
[348.66137695 111.10123444]
[334.86120605 103.36393738]
[319.86120605 103.36393738]
[304.86120605 103.36393738]
[289.86120605 103.36393738]
[286.20938110 118.90161133]
[278.96139526 133.13151550]
[268.53002930 145.23437500]
[255.51150513 154.51228333]
[240.65138245 160.42898560]
[224.80187988 162.64088440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 87]
[6 86]
[7 85]
[8 84]
[10 82]
[11 81]
[13 79]
[15 78]
[16 77]
[17 76]
[20 70]
[21 69]
[22 68]
[23 67]
[24 66]
[26 65]
[27 64]
[28 63]
[29 62]
[31 61]
[33 59]
[34 58]
[35 57]
[37 56]
[38 55]
[39 54]
[40 52]
[41 51]
[42 50]
[43 49]
[101 181]
[102 180]
[103 179]
[104 178]
[106 176]
[107 175]
[108 173]
[109 172]
[110 171]
[111 170]
[112 168]
[113 167]
[114 166]
[115 165]
[116 164]
[118 162]
[119 161]
[124 158]
[125 157]
[126 156]
[127 155]
[128 154]
[130 152]
[131 151]
[136 147]
[137 146]
[138 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
