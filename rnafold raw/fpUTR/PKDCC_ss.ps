%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAAGUGUCAGGCCGAUGUGUCGCCCGCGAGGGGCCGGGGUCGGGGCCGCCGGGGCCAUGCGCGCGGGCUGGGCAGGGGGCCGGCGGGGCGCAGAGCGGAGCCGCCUCGGAGCCUGAGCCGCCCGGGGCCGGGGCCGGGGAGCCGCGCGGGGCCGGCCGGCCGGGGGGAGGGGAGCG\
) } def
/len { sequence length } bind def

/coor [
[75.60726929 111.28038025]
[72.62875366 93.23900604]
[57.66529465 94.28534698]
[42.70183563 95.33169556]
[33.94640350 109.78806305]
[18.45719910 116.12401581]
[2.40193534 112.03022766]
[-7.95265150 99.30862427]
[-22.89557266 100.61596680]
[-37.83849335 101.92330170]
[-52.78141403 103.23063660]
[-67.71235657 104.66831970]
[-82.63018799 106.23625183]
[-95.54598999 115.37367249]
[-109.01230621 109.00912476]
[-123.93013763 110.57704926]
[-138.84796143 112.14497375]
[-147.08255005 116.16419983]
[-154.03950500 113.60775757]
[-168.98242188 114.91509247]
[-183.92533875 116.22242737]
[-198.86825562 117.52976227]
[-213.81118774 118.83709717]
[-229.75361633 131.14410400]
[-246.92419434 122.28800201]
[-261.81237793 124.11604309]
[-276.70059204 125.94408417]
[-291.58877563 127.77212524]
[-299.75195312 131.93444824]
[-306.75247192 129.49980164]
[-321.67028809 131.06773376]
[-329.90487671 135.08695984]
[-336.86181641 132.53051758]
[-349.93511963 141.44113159]
[-363.28833008 134.84252930]
[-378.23123169 136.14987183]
[-393.17416382 137.45719910]
[-408.11709595 138.76454163]
[-415.99322510 152.13412476]
[-430.23699951 158.28997803]
[-445.37139893 154.86503601]
[-455.57690430 143.17625427]
[-456.92929077 127.71823120]
[-448.90856934 114.43487549]
[-434.59884644 108.43390656]
[-419.50253296 112.02282715]
[-409.42440796 123.82161713]
[-394.48150635 122.51428223]
[-379.53857422 121.20694733]
[-364.59567261 119.89961243]
[-352.59115601 111.08249664]
[-338.16915894 117.58759308]
[-323.23822021 116.14990234]
[-308.32040405 114.58197784]
[-293.41680908 112.88393402]
[-278.52862549 111.05589294]
[-263.64044189 109.22785187]
[-248.75222778 107.39981079]
[-243.18846130 98.78832245]
[-233.59597778 94.58651733]
[-223.06037903 96.41059113]
[-215.11851501 103.89418030]
[-200.17559814 102.58684540]
[-185.23268127 101.27950287]
[-170.28974915 99.97216797]
[-155.34683228 98.66483307]
[-140.41589355 97.22714996]
[-125.49806213 95.65921783]
[-110.58023834 94.09129333]
[-98.73145294 85.06601715]
[-84.19811249 91.31842041]
[-69.28028107 89.75049591]
[-62.93894958 85.91356659]
[-54.08874893 88.28771210]
[-39.14582825 86.98037720]
[-24.20290756 85.67304230]
[-9.25998783 84.36570740]
[-3.46580720 72.32066345]
[7.61638498 64.65591431]
[21.14701653 63.46564484]
[33.59416199 69.16810608]
[41.65548706 80.36824036]
[56.61894608 79.32189178]
[71.58240509 78.27554321]
[82.98849487 68.53382111]
[86.36276245 53.91827011]
[89.73703003 39.30271912]
[93.11129761 24.68717003]
[96.48555756 10.07161808]
[86.94607544 -4.57587576]
[90.86079407 -21.26550102]
[105.33726501 -29.80048943]
[108.45594025 -44.47270203]
[111.57461548 -59.14491653]
[108.95354462 -75.89503479]
[124.32347107 -83.05056000]
[135.45417786 -70.26214600]
[126.24682617 -56.02624130]
[123.12815094 -41.35402679]
[120.00947571 -26.68181419]
[128.47798157 -16.94871902]
[129.80546570 -3.91990948]
[123.28294373 7.66059494]
[111.10111237 13.44588375]
[107.72684479 28.06143570]
[104.35257721 42.67698669]
[100.97831726 57.29253769]
[97.60404968 71.90808868]
[108.77976227 74.59983826]
[117.43251038 81.31320190]
[122.30219269 90.51222992]
[122.91448975 100.35886383]
[137.10237122 93.92908478]
[151.32400513 99.33273315]
[157.36639404 112.89832306]
[171.46177673 118.02862549]
[185.55715942 123.15892792]
[197.04382324 116.09327698]
[210.30847168 116.93022919]
[220.51234436 125.13954926]
[224.06292725 137.54284668]
[238.06663513 142.91838074]
[253.72300720 140.64051819]
[262.83215332 152.42495728]
[276.83584595 157.80047607]
[290.83953857 163.17599487]
[304.84326172 168.55151367]
[318.84695435 173.92703247]
[332.94235229 179.05734253]
[347.12512207 183.94085693]
[361.30792236 188.82438660]
[375.49069214 193.70790100]
[389.67346191 198.59143066]
[403.85623169 203.47494507]
[417.92974854 196.79853821]
[432.24353027 201.95317078]
[438.52172852 215.41123962]
[452.70452881 220.29475403]
[466.88729858 225.17828369]
[482.45462036 222.35542297]
[491.96948242 233.81477356]
[506.06262207 226.66223145]
[521.05944824 231.64932251]
[528.06256104 245.81730652]
[522.91723633 260.76055908]
[508.67599487 267.61349487]
[493.78796387 262.31042480]
[487.08596802 247.99754333]
[472.53308105 251.16972351]
[462.00378418 239.36105347]
[447.82098389 234.47753906]
[433.63821411 229.59400940]
[420.40530396 236.33386230]
[405.95239258 231.58332825]
[398.97271729 217.65773010]
[384.78994751 212.77420044]
[370.60717773 207.89068604]
[356.42437744 203.00715637]
[342.24160767 198.12364197]
[328.05883789 193.24011230]
[323.42703247 194.50489807]
[317.95233154 192.85354614]
[313.47143555 187.93074036]
[299.46774292 182.55522156]
[285.46401978 177.17970276]
[271.46032715 171.80418396]
[257.45663452 166.42866516]
[242.80187988 169.09101868]
[232.69111633 156.92207336]
[218.68740845 151.54655457]
[203.64491272 159.03906250]
[187.51570129 153.23240662]
[180.42686462 137.25431824]
[166.33148193 132.12400818]
[152.23608398 126.99371338]
[138.88755798 133.50160217]
[124.51975250 128.49952698]
[117.78419495 114.45424652]
[105.12349701 123.68872070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 84]
[3 83]
[4 82]
[8 77]
[9 76]
[10 75]
[11 74]
[12 72]
[13 71]
[15 69]
[16 68]
[17 67]
[19 66]
[20 65]
[21 64]
[22 63]
[23 62]
[25 58]
[26 57]
[27 56]
[28 55]
[30 54]
[31 53]
[33 52]
[35 50]
[36 49]
[37 48]
[38 47]
[85 108]
[86 107]
[87 106]
[88 105]
[89 104]
[92 100]
[93 99]
[94 98]
[112 178]
[115 175]
[116 174]
[117 173]
[121 170]
[122 169]
[124 167]
[125 166]
[126 165]
[127 164]
[128 163]
[129 160]
[130 159]
[131 158]
[132 157]
[133 156]
[134 155]
[137 152]
[138 151]
[139 150]
[141 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
