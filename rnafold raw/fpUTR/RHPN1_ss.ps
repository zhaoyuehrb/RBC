%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCGGGGACCGGCGCGGGCACUCAGGAGCCCGCGGCCCAGGUGGUGCGGGCGGCCCUAGCCCGGCUGCGGAGCGCUGCGCGAGCGGCGGGCUGGCUGACCCCGAGGGACCCCCAGCGCAGCGGGUGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[103.55509186 132.69711304]
[107.34673309 118.18432617]
[99.85961151 118.62366486]
[93.71575165 132.30770874]
[87.57189941 145.99174500]
[81.42804718 159.67579651]
[75.28418732 173.35983276]
[74.31252289 190.28591919]
[57.77893829 194.03782654]
[49.59669876 179.18901062]
[61.60014343 167.21598816]
[67.74400330 153.53193665]
[73.88785553 139.84790039]
[80.03170776 126.16384888]
[86.17556763 112.47981262]
[75.82052612 101.62747955]
[61.86354828 107.12317657]
[47.90656662 112.61888123]
[33.94958878 118.11457825]
[19.99260902 123.61027527]
[6.03562880 129.10597229]
[2.27902460 144.16146851]
[-9.63113022 154.10771179]
[-25.11513901 155.12017822]
[-38.21908188 146.80957031]
[-43.90422821 132.37147522]
[-39.98452377 117.35762787]
[-27.96717262 107.54116821]
[-12.47309113 106.69672394]
[0.53992808 115.14900208]
[14.49690723 109.65329742]
[28.45388794 104.15760040]
[42.41086578 98.66189575]
[56.36784744 93.16619873]
[70.32482910 87.67049408]
[80.67986298 76.81816101]
[85.51532745 62.61892700]
[90.18402100 48.36398697]
[94.68528748 34.05529785]
[99.18656158 19.74661064]
[94.74485779 1.92085290]
[108.02944183 -9.48468208]
[112.19403839 -23.89496040]
[111.57362366 -33.10431671]
[116.62886047 -38.59209824]
[121.13013458 -52.90078735]
[125.63140106 -67.20948029]
[125.22704315 -76.43084717]
[130.40954590 -81.79861450]
[135.24501038 -95.99784851]
[140.08047485 -110.19708252]
[137.20491028 -125.75477600]
[148.63197327 -135.30838013]
[153.46743774 -149.50761414]
[158.30290222 -163.70684814]
[163.13836670 -177.90608215]
[167.97383118 -192.10531616]
[172.80929565 -206.30455017]
[164.26036072 -209.72377014]
[157.27232361 -218.20379639]
[154.47442627 -230.75915527]
[155.17750549 -245.74266052]
[155.70489502 -260.73339844]
[156.05653381 -275.72927856]
[156.40817261 -290.72515869]
[148.07327271 -304.84820557]
[156.37126160 -318.99301147]
[172.76591492 -318.60858154]
[180.39178467 -304.09039307]
[171.40405273 -290.37350464]
[171.05241394 -275.37762451]
[170.70077515 -260.38174438]
[173.71708679 -253.55729675]
[170.16102600 -245.03958130]
[169.45793152 -230.05606079]
[183.34953308 -224.39714050]
[193.31660461 -235.60684204]
[203.28367615 -246.81654358]
[213.25074768 -258.02624512]
[223.21781921 -269.23596191]
[225.99528503 -285.39819336]
[241.47247314 -290.81930542]
[253.72778320 -279.92254639]
[250.15400696 -263.91754150]
[234.42752075 -259.26889038]
[224.46044922 -248.05917358]
[214.49337769 -236.84947205]
[204.52630615 -225.63977051]
[194.55923462 -214.43006897]
[187.00852966 -201.46908569]
[182.17306519 -187.26985168]
[177.33760071 -173.07061768]
[172.50213623 -158.87138367]
[167.66667175 -144.67214966]
[162.83120728 -130.47291565]
[166.05264282 -115.93084717]
[154.27970886 -105.36161804]
[149.44424438 -91.16238403]
[144.60877991 -76.96315002]
[139.94009399 -62.70820618]
[135.43882751 -48.39951706]
[130.93754578 -34.09083176]
[126.60431671 -19.73036003]
[122.43972015 -5.32008219]
[128.01791382 5.47940922]
[124.59620667 17.56134605]
[113.49524689 24.24787903]
[108.99398041 38.55656815]
[104.49270630 52.86525726]
[105.49568939 60.25885391]
[99.71456909 67.45439148]
[94.87910461 81.65362549]
[121.48509216 77.16983032]
[142.67967224 109.16420746]
[150.38179016 122.03578186]
[157.54171753 127.86093140]
[158.10951233 135.30061340]
[165.50775146 148.34921265]
[172.90600586 161.39781189]
[180.30426025 174.44639587]
[195.32252502 180.08834839]
[200.13793945 195.39166260]
[191.05654907 208.61694336]
[175.04481506 209.61888123]
[164.38557434 197.62889099]
[167.25567627 181.84465027]
[159.85742188 168.79606628]
[152.45916748 155.74746704]
[145.06091309 142.69886780]
[137.51020813 129.73789978]
[129.80809021 116.86631775]
[122.32097626 117.30565643]
[127.78391266 131.27548218]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 15]
[4 14]
[5 13]
[6 12]
[7 11]
[16 35]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[36 112]
[37 111]
[38 109]
[39 108]
[40 107]
[42 104]
[43 103]
[45 102]
[46 101]
[47 100]
[49 99]
[50 98]
[51 97]
[53 95]
[54 94]
[55 93]
[56 92]
[57 91]
[58 90]
[61 75]
[62 74]
[63 72]
[64 71]
[65 70]
[76 89]
[77 88]
[78 87]
[79 86]
[80 85]
[114 131]
[115 130]
[117 129]
[118 128]
[119 127]
[120 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
