%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUACCUCUCUGUUCUGCAAGAGCUGGAAGCUCCAGUUGGGGUAAGGAGGCUCCCAUCCCGAGCUUGCGUAGUGGUUCUGUGUGGCGCUGAGGAAUUUGGAAACCUCAA\
) } def
/len { sequence length } bind def

/coor [
[151.18612671 366.90167236]
[149.07049561 352.05163574]
[146.95487976 337.20156860]
[144.83926392 322.35150146]
[140.72012329 316.08193970]
[142.88006592 307.05191040]
[141.18553162 292.14794922]
[138.44157410 277.40106201]
[134.66189575 262.88507080]
[130.88223267 248.36906433]
[127.10255432 233.85307312]
[116.40792084 223.48609924]
[120.41822052 208.18159485]
[116.63854980 193.66558838]
[105.94391632 183.29862976]
[109.95421600 167.99411011]
[106.17454529 153.47811890]
[102.39487457 138.96212769]
[98.61520386 124.44612885]
[94.83553314 109.93013763]
[90.85083008 95.46907806]
[86.66188812 81.06585693]
[82.47293854 66.66264343]
[78.28399658 52.25941849]
[74.09505463 37.85619736]
[69.90611267 23.45297813]
[64.70938110 9.38194656]
[51.97462082 -0.00616010]
[53.78269196 -14.79061699]
[47.60417175 -28.45904350]
[41.42565155 -42.12747192]
[35.24713516 -55.79589844]
[29.06861496 -69.46432495]
[22.89009666 -83.13275146]
[8.37692165 -88.79009247]
[2.30573678 -102.73983765]
[7.78858614 -116.54106903]
[-4.94617081 -125.92917633]
[-3.13810134 -140.71363831]
[-9.31661987 -154.38206482]
[-15.49513912 -168.05049133]
[-21.67365837 -181.71891785]
[-28.04497719 -195.29853821]
[-34.60782242 -208.78665161]
[-49.62615204 -213.70857239]
[-56.69075775 -227.84599304]
[-51.61033249 -242.81144714]
[-37.39900208 -249.72619629]
[-22.48809624 -244.48782349]
[-15.72399330 -230.20417786]
[-21.11971474 -215.34948730]
[-14.55686951 -201.86138916]
[-8.71522903 -197.15499878]
[-8.00522995 -187.89743042]
[-1.82671142 -174.22900391]
[4.35180712 -160.56057739]
[10.53032589 -146.89215088]
[22.82315445 -138.48170471]
[21.45701408 -122.71958923]
[35.43959427 -117.71728516]
[41.90020370 -103.94357300]
[36.55852509 -89.31127167]
[42.73704147 -75.64284515]
[48.91556168 -61.97441864]
[55.09408188 -48.30598831]
[61.27259827 -34.63756180]
[67.45111847 -20.96913528]
[79.74394226 -12.55868626]
[78.37780762 3.20342779]
[86.74899292 -9.24339008]
[101.67342377 -10.74713039]
[112.35935211 -0.22044863]
[111.07984161 14.72488022]
[98.76010132 23.28198814]
[84.30933380 19.26403618]
[88.49827576 33.66725540]
[92.68721771 48.07047653]
[96.87615967 62.47369766]
[101.06510162 76.87691498]
[105.25405121 91.28013611]
[110.42111969 97.63269806]
[109.35153198 106.15046692]
[113.13120270 120.66645813]
[116.91087341 135.18244934]
[120.69054413 149.69844055]
[124.47021484 164.21444702]
[135.43519592 175.61968994]
[131.15454102 189.88592529]
[134.93421936 204.40191650]
[145.89920044 215.80717468]
[141.61854553 230.07339478]
[145.39822388 244.58938599]
[149.17788696 259.10537720]
[152.95756531 273.62136841]
[163.31185913 262.76834106]
[178.27575684 263.80847168]
[187.02894592 275.98965454]
[183.24208069 290.50378418]
[169.65339661 296.85574341]
[156.08950806 290.45339966]
[157.78404236 305.35739136]
[159.68931580 320.23590088]
[161.80493164 335.08593750]
[163.92056274 349.93600464]
[166.03617859 364.78607178]
[178.82482910 374.07183838]
[181.21919250 389.69369507]
[171.79870605 402.38348389]
[156.15240479 404.61251831]
[143.56294250 395.05841064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[4 102]
[6 101]
[7 100]
[8 94]
[9 93]
[10 92]
[11 91]
[13 89]
[14 88]
[16 86]
[17 85]
[18 84]
[19 83]
[20 82]
[21 80]
[22 79]
[23 78]
[24 77]
[25 76]
[26 75]
[27 69]
[29 67]
[30 66]
[31 65]
[32 64]
[33 63]
[34 62]
[37 59]
[39 57]
[40 56]
[41 55]
[42 54]
[43 52]
[44 51]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
