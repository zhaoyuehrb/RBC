%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACUGCAGCCAUAUAAAUCAGAUUUUUGACAUGUUAUAAAAUGCAAGUCACAGCUGCUGUUGUCUGCGGUAUUCAAAAACUUUUGAAACACUGCAUGUCCAACAAAAUUUAUUUUUUGUGUGAAUGUACUGUUUUUCAACCCUACUCUCUUGACCAAGAAUGAAACUAUUUACAAAUUAAG\
) } def
/len { sequence length } bind def

/coor [
[53.38003159 174.91918945]
[53.92845917 159.92921448]
[58.11595917 145.52557373]
[65.68966675 132.57803345]
[76.19223785 121.86840820]
[88.98529053 114.04531860]
[75.62604523 120.86664581]
[62.26679611 127.68797302]
[48.90755081 134.50930786]
[35.54830170 141.33062744]
[50.52077484 142.23896790]
[64.43583679 147.83995056]
[75.86244965 157.55760193]
[83.62549591 170.39251709]
[86.92662048 185.02474976]
[85.42633057 199.94953918]
[79.27892303 213.63198853]
[69.11660004 224.66497803]
[55.98445129 231.91389465]
[41.23300171 234.63323975]
[26.37930489 232.54335022]
[12.95091724 225.85916138]
[2.32882500 215.26806641]
[-4.39458942 201.85928345]
[-6.52788544 187.01174927]
[-3.85167408 172.25242615]
[3.35882139 159.09913635]
[14.36152744 148.90496826]
[-0.29443005 152.09916687]
[-14.95038795 155.29336548]
[-29.60634613 158.48756409]
[-41.44236374 168.98609924]
[-55.52535248 164.13648987]
[-70.18131256 167.33068848]
[-84.83726501 170.52488708]
[-90.95200348 184.78636169]
[-104.29881287 192.70104980]
[-119.74558258 191.22558594]
[-131.35270691 180.92730713]
[-134.65701294 165.76614380]
[-128.38792419 151.57183838]
[-114.95604706 143.80241394]
[-99.52619171 145.44535828]
[-88.03146362 155.86892700]
[-73.37551117 152.67472839]
[-58.71955109 149.48052979]
[-47.93182373 139.21046448]
[-32.80054474 143.83160400]
[-18.14458656 140.63740540]
[-3.48862791 137.44320679]
[11.16732979 134.24900818]
[14.87990475 129.40544128]
[21.22739983 126.85558319]
[28.72697449 127.97138214]
[42.08622360 121.15005493]
[55.44546890 114.32872772]
[68.80471802 107.50740051]
[82.16396332 100.68607330]
[87.81488037 86.79121399]
[83.00853729 72.58209991]
[78.20218658 58.37297821]
[73.39583588 44.16386414]
[68.58948517 29.95474625]
[54.48160553 18.13841438]
[58.56249237 1.08140242]
[53.39188385 -12.99925041]
[48.10060120 -27.03500175]
[42.80932236 -41.07075500]
[37.51803970 -55.10650635]
[32.22675705 -69.14225769]
[26.93547630 -83.17800903]
[12.43028164 -94.50308990]
[15.92324066 -111.69013214]
[10.39179611 -125.63298798]
[4.86035252 -139.57583618]
[-0.67109156 -153.51869202]
[-6.20253563 -167.46154785]
[-11.73397923 -181.40440369]
[-24.92167664 -191.15203857]
[-22.80520821 -207.41404724]
[-7.56181622 -213.46144104]
[5.12740517 -203.07319641]
[2.20887280 -186.93583679]
[7.74031687 -172.99298096]
[13.27176094 -159.05014038]
[18.80320549 -145.10728455]
[24.33464813 -131.16442871]
[29.86609268 -117.22158051]
[40.85530090 -112.12831116]
[45.56997681 -100.53719330]
[40.97122955 -88.46929169]
[46.26250839 -74.43354034]
[51.55379105 -60.39778900]
[56.84507370 -46.36203766]
[62.13635254 -32.32628250]
[67.42763519 -18.29053116]
[72.74240875 -13.12789917]
[72.68701172 -3.96815681]
[83.49490356 1.49934018]
[87.80890656 13.24547100]
[82.79860687 25.14839745]
[87.60494995 39.35751343]
[92.41130066 53.56663132]
[97.21765137 67.77574921]
[102.02400208 81.98486328]
[105.62572479 84.27188873]
[108.31116486 87.17869568]
[110.00389099 90.41454315]
[110.70982361 93.69012451]
[125.70926666 93.56137085]
[140.70872498 93.43261719]
[155.70816040 93.30387115]
[170.70761108 93.17511749]
[185.70706177 93.04636383]
[200.70651245 92.91761017]
[215.70594788 92.78885651]
[230.70539856 92.66011047]
[244.43865967 84.80464172]
[257.23187256 92.43241119]
[272.23132324 92.30365753]
[284.25064087 79.60958862]
[301.39447021 79.52488708]
[313.06958008 91.61429596]
[328.06460571 91.22808075]
[338.91351318 80.05048370]
[354.12609863 79.87241364]
[364.71539307 90.28408051]
[379.71041870 89.89786530]
[394.70544434 89.51164246]
[405.55435181 78.33405304]
[420.76693726 78.15598297]
[431.35623169 88.56764984]
[446.35125732 88.18143463]
[461.34628296 87.79521179]
[475.04238892 78.77587891]
[489.57812500 86.36825562]
[490.00036621 102.76197052]
[475.87475586 111.09255981]
[461.73248291 102.79024506]
[446.73745728 103.17646027]
[431.74243164 103.56267548]
[421.70318604 114.50566864]
[406.50158691 115.11096191]
[395.09164429 104.50667572]
[380.09661865 104.89289093]
[365.10159302 105.27911377]
[355.06234741 116.22209930]
[339.86074829 116.82739258]
[328.45080566 106.22310638]
[313.45578003 106.60932159]
[305.96545410 117.11154938]
[293.60687256 121.43930054]
[280.82635498 117.79778290]
[272.36007690 107.30310822]
[257.36062622 107.43185425]
[244.70022583 115.27811432]
[230.83415222 107.65955353]
[215.83470154 107.78830719]
[200.83526611 107.91706085]
[185.83581543 108.04581451]
[170.83636475 108.17456055]
[155.83691406 108.30331421]
[140.83746338 108.43206787]
[125.83802032 108.56082153]
[110.83857727 108.68957520]
[125.80370331 109.71173859]
[140.06773376 114.35260773]
[152.76930237 122.33195496]
[163.14146423 133.16792297]
[170.55786133 146.20622253]
[174.57069397 160.65950012]
[174.93760681 175.65501404]
[171.63647461 190.28724670]
[164.86662292 203.67265320]
[155.03684998 215.00294495]
[142.74072266 223.59394836]
[128.72074890 228.92689514]
[113.82351685 230.67974854]
[98.94859314 228.74667358]
[84.99420929 223.24440002]
[72.80298615 214.50517273]
[63.11109924 203.05670166]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 58]
[7 57]
[8 56]
[9 55]
[10 54]
[28 51]
[29 50]
[30 49]
[31 48]
[33 46]
[34 45]
[35 44]
[59 105]
[60 104]
[61 103]
[62 102]
[63 101]
[65 98]
[66 96]
[67 95]
[68 94]
[69 93]
[70 92]
[71 91]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
[109 165]
[110 164]
[111 163]
[112 162]
[113 161]
[114 160]
[115 159]
[116 158]
[117 157]
[119 155]
[120 154]
[123 150]
[124 149]
[127 146]
[128 145]
[129 144]
[132 141]
[133 140]
[134 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
