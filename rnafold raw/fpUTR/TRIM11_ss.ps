%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCAUCCGGGAUCCCUACGUCCCGCGUCCCCCGAGCGCUCGGAGCCUACGCGCCCAGCGCUACCGAAACCCAGAGUCCUGCGCCCUGGAGUCCCCGCGCCCCGGAGCCCGAGCACCCGGGAGUCCCGAGCCUCGCGCCCCGGAGUGCCCGAGCCUGCGCCGCCGCACCCGGAUACCCCGCGUCCCCGCGAGCUGCCGAGGCCGCCCGCCGCCGCCCCGCGGACAGUACCGCCUUCCUCCCCUCUGUCCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[131.41036987 201.98223877]
[140.67765808 187.02223206]
[133.28417969 173.97093201]
[125.89070892 160.91961670]
[118.49723816 147.86831665]
[108.22386932 154.97409058]
[95.70882416 159.69973755]
[81.54103088 161.40731812]
[66.47914886 159.61120605]
[60.23270798 173.24873352]
[53.98626328 186.88624573]
[47.73982239 200.52377319]
[41.49337769 214.16128540]
[35.24693298 227.79881287]
[40.98767853 242.52359009]
[34.55858994 256.96112061]
[19.77392769 262.54586792]
[5.40517521 255.96449280]
[-0.02294519 241.12162781]
[6.70997524 226.82325745]
[21.60941315 221.55236816]
[27.85585785 207.91484070]
[34.10230255 194.27732849]
[40.34874344 180.63980103]
[46.59518814 167.00228882]
[52.84163284 153.36476135]
[47.73712158 147.86985779]
[36.74731064 158.07887268]
[25.75749588 168.28788757]
[18.46029854 181.39326477]
[3.74139094 178.50297546]
[1.94184768 163.61131287]
[15.54848003 157.29808044]
[26.53829384 147.08906555]
[37.52810669 136.88005066]
[32.42359924 131.38513184]
[18.36351585 136.61141968]
[4.30343056 141.83769226]
[-9.75665474 147.06398010]
[-23.81674004 152.29025269]
[-37.87682343 157.51654053]
[-48.11644363 169.57725525]
[-62.74203491 166.75920105]
[-76.80211639 171.98547363]
[-87.04174042 184.04618835]
[-101.66732788 181.22813416]
[-115.72740936 186.45440674]
[-125.76013947 199.42654419]
[-141.97215271 196.95619202]
[-147.68592834 181.58464050]
[-137.02360535 169.12481689]
[-120.95368958 172.39433289]
[-106.89360809 167.16804504]
[-97.65966034 155.48115540]
[-82.02839661 157.92538452]
[-67.96831512 152.69911194]
[-58.73436356 141.01222229]
[-43.10310364 143.45645142]
[-29.04302025 138.23017883]
[-14.98293495 133.00389099]
[-0.92284954 127.77761078]
[13.13723564 122.55133057]
[27.19732094 117.32505035]
[27.74905586 109.84537506]
[12.78969860 108.74190521]
[-2.16965866 107.63843536]
[-17.12901497 106.53496552]
[-31.69720650 110.10817719]
[-39.59732819 97.35717773]
[-29.91165924 85.90345001]
[-16.02554703 91.57560730]
[-1.06619024 92.67907715]
[13.89316654 93.78254700]
[28.85252380 94.88601685]
[29.40425682 87.40633392]
[16.26320648 80.17358398]
[0.44248742 80.29778290]
[-6.97669411 67.38247681]
[-20.11774635 60.14972305]
[-33.25879669 52.91696548]
[-47.24450302 59.63854980]
[-62.50394821 56.82271957]
[-73.16957092 45.55222321]
[-75.14022064 30.16079140]
[-67.65813446 16.56674576]
[-53.60033798 9.99727345]
[-38.37233353 12.97847271]
[-27.82960320 24.36400986]
[-26.02604103 39.77591324]
[-12.88498878 47.00867081]
[0.25606233 54.24142456]
[15.13684559 53.59989166]
[23.49596214 67.03253174]
[36.63701248 74.26528931]
[47.72959518 62.85976410]
[60.48563766 55.04349518]
[73.88450623 50.93103409]
[86.95006561 50.36913681]
[85.29673004 35.46052933]
[83.64339447 20.55192566]
[81.99006653 5.64332151]
[72.77882385 -7.21994352]
[79.06614685 -20.72249031]
[77.41281891 -35.63109589]
[75.75948334 -50.53969955]
[74.10614777 -65.44830322]
[64.89490509 -78.31156921]
[71.18223572 -91.81411743]
[69.52890778 -106.72271729]
[60.31766129 -119.58598328]
[66.60498810 -133.08853149]
[64.95166016 -147.99713135]
[63.29832458 -162.90574646]
[61.64499283 -177.81434631]
[52.09232330 -186.45304871]
[51.00820923 -198.88490295]
[58.43015671 -208.41421509]
[49.37746048 -221.38954163]
[55.83001328 -234.81391907]
[54.35975647 -249.74168396]
[52.88949966 -264.66946411]
[51.41924286 -279.59722900]
[43.84951019 -294.76745605]
[56.33135986 -306.24087524]
[70.81172943 -297.42300415]
[66.34701538 -281.06750488]
[67.81726837 -266.13970947]
[69.28752899 -251.21194458]
[70.75778198 -236.28417969]
[79.70532227 -224.37657166]
[73.35792542 -209.88447571]
[84.33068848 -196.17347717]
[76.55359650 -179.46768188]
[78.20693207 -164.55906677]
[79.86026001 -149.65046692]
[81.51359558 -134.74186707]
[90.60658264 -122.94496155]
[84.43750763 -108.37605286]
[86.09084320 -93.46744537]
[95.18383026 -81.67054749]
[89.01475525 -67.10163879]
[90.66809082 -52.19303131]
[92.32141876 -37.28442764]
[93.97475433 -22.37582397]
[103.06774139 -10.57892132]
[96.89866638 3.98998857]
[98.55200195 18.89859390]
[100.20533752 33.80719757]
[101.85866547 48.71580124]
[127.18839264 56.47627258]
[145.27255249 75.83557892]
[159.39572144 70.78223419]
[166.39703369 64.96107483]
[173.72331238 65.75469208]
[187.90742493 60.87503433]
[202.09153748 55.99538040]
[216.27565002 51.11572647]
[223.25909424 37.19203568]
[237.71331787 32.44543076]
[250.94438171 39.18889618]
[265.12850952 34.30924225]
[275.66101074 22.50345421]
[290.21304321 25.67959023]
[304.39715576 20.79993629]
[318.55105591 15.83334160]
[332.67422485 10.77999306]
[346.79736328 5.72664547]
[360.79226685 0.32821998]
[374.65045166 -5.41203165]
[384.43920898 -17.84146309]
[399.15863037 -15.56364536]
[413.01681519 -21.30389595]
[426.87500000 -27.04414749]
[434.31814575 -41.25609589]
[450.09686279 -44.15623856]
[462.10714722 -33.51983261]
[461.13568115 -17.50621796]
[447.92770386 -8.39967155]
[432.61526489 -13.18595505]
[418.75708008 -7.44570351]
[404.89886475 -1.70545197]
[396.10134888 10.31339741]
[380.39071655 8.44616127]
[366.53253174 14.18641281]
[365.33374023 16.69044113]
[363.08499146 18.87757492]
[359.89956665 20.35070419]
[356.03057861 20.76007462]
[351.85073853 19.84980583]
[337.72756958 24.90315437]
[323.60440063 29.95650291]
[318.38040161 35.15400314]
[309.27679443 34.98404694]
[295.09271240 39.86370087]
[285.57470703 51.32046127]
[270.00814819 48.49335098]
[255.82403564 53.37300491]
[249.54216003 66.82936096]
[235.22697449 71.98008728]
[221.15530396 65.29983521]
[206.97119141 70.17948914]
[192.78707886 75.05914307]
[178.60296631 79.93879700]
[164.44906616 84.90539551]
[150.32591248 89.95874023]
[151.15589905 104.07407379]
[148.10223389 117.88010406]
[141.39677429 130.32872009]
[131.54853821 140.47483826]
[138.94201660 153.52615356]
[146.33549500 166.57745361]
[153.72895813 179.62875366]
[166.56269836 178.50651550]
[178.82598877 182.29804993]
[188.71469116 190.40870667]
[194.78790283 201.61111450]
[196.17794800 214.23091125]
[192.71412659 226.39688110]
[184.94287109 236.31851196]
[192.01382446 249.54733276]
[199.08477783 262.77615356]
[206.15573120 276.00497437]
[213.22668457 289.23379517]
[220.29762268 302.46261597]
[227.36857605 315.69143677]
[234.43952942 328.92025757]
[241.51048279 342.14904785]
[256.45520020 339.71304321]
[271.38070679 342.26403809]
[284.66802979 349.52529907]
[294.87585449 360.70919800]
[300.89685059 374.60256958]
[302.07800293 389.69839478]
[298.29110718 404.35916138]
[289.94696045 416.99459839]
[277.95071411 426.23410034]
[263.60357666 431.07543945]
[248.46185303 430.99346924]
[234.16798401 425.99703979]
[222.27246094 416.62820435]
[214.06564331 403.90313721]
[210.43772888 389.20223999]
[211.78224182 374.12008667]
[217.95335388 360.29272461]
[228.28166199 349.22000122]
[221.21070862 335.99118042]
[214.13975525 322.76235962]
[207.06881714 309.53356934]
[199.99786377 296.30474854]
[192.92691040 283.07592773]
[185.85595703 269.84710693]
[178.78500366 256.61828613]
[171.71405029 243.38946533]
[154.47337341 243.44053650]
[139.51329041 234.69262695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 212]
[3 211]
[4 210]
[5 209]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[36 63]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[43 56]
[44 55]
[46 53]
[47 52]
[75 94]
[76 93]
[78 91]
[79 90]
[80 89]
[98 149]
[99 148]
[100 147]
[101 146]
[103 144]
[104 143]
[105 142]
[106 141]
[108 139]
[109 138]
[111 136]
[112 135]
[113 134]
[114 133]
[117 131]
[119 129]
[120 128]
[121 127]
[122 126]
[151 205]
[152 204]
[154 203]
[155 202]
[156 201]
[157 200]
[160 197]
[161 196]
[163 194]
[164 193]
[165 191]
[166 190]
[167 189]
[168 184]
[169 183]
[171 181]
[172 180]
[173 179]
[219 253]
[220 252]
[221 251]
[222 250]
[223 249]
[224 248]
[225 247]
[226 246]
[227 245]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
