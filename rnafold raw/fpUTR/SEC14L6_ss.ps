%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGGGGGUGGGGGGGUGUCUGCCUUUUAACCCUCCCCAAGAGGUCGUGCCUCUGAGCCCCAAAGCUGAAGGCCCCUCUUGGGGGUGGGUGCGGGCCGGAGGGGACCGAUCCUUUCAGAGCCGUGCCGAGGUGAAGGAAAAGCUGGAGUGGACUUUCUGUUCCGGGAGAACAUCCAAGAUGUGCUAUCUGCGCUGCCCAAUCCUGAUGACUACUUCCUCCUGCGCUGGCUCCAAGCUCGGAGCUUUGACCUGCA\
GAAAUCAGAGGAC\
) } def
/len { sequence length } bind def

/coor [
[249.50039673 414.43429565]
[242.43426514 401.20288086]
[235.36814880 387.97149658]
[228.30203247 374.74008179]
[221.23590088 361.50869751]
[214.16978455 348.27728271]
[207.10365295 335.04589844]
[200.03753662 321.81448364]
[192.97142029 308.58309937]
[187.06924438 304.17892456]
[185.90106201 295.15567017]
[178.98994446 281.84265137]
[172.07882690 268.52963257]
[165.16770935 255.21659851]
[152.43659973 247.48561096]
[152.94541931 231.67257690]
[146.03430176 218.35955811]
[139.12318420 205.04653931]
[132.13444519 191.77410889]
[125.06832123 178.54270935]
[118.00219727 165.31130981]
[73.16724396 136.42346191]
[77.27837372 100.72697449]
[62.49293900 103.25498199]
[47.70750046 105.78299713]
[32.92206573 108.31100464]
[28.09346962 119.12895966]
[18.74819565 126.21337891]
[7.26483154 127.90561676]
[-3.50249100 123.90149689]
[-10.93345070 115.29833221]
[-25.77389717 117.48033142]
[-40.61434555 119.66233063]
[-55.45479202 121.84433746]
[-70.28224182 124.11296082]
[-85.09619904 126.46812439]
[-99.91014862 128.82328796]
[-114.72409821 131.17846680]
[-129.53805542 133.53363037]
[-144.35200500 135.88879395]
[-159.16595459 138.24397278]
[-173.97990417 140.59913635]
[-188.79386902 142.95429993]
[-203.60781860 145.30946350]
[-218.42176819 147.66464233]
[-223.74354553 151.49174500]
[-229.35908508 152.00617981]
[-233.60884094 149.89759827]
[-241.66070557 154.13450623]
[-248.65896606 151.84175110]
[-263.54632568 153.67655945]
[-278.43368530 155.51135254]
[-293.32104492 157.34616089]
[-301.42184448 161.48872375]
[-308.39285278 159.11441040]
[-321.25149536 168.33210754]
[-334.75720215 162.05154419]
[-349.66497803 163.71237183]
[-364.57275391 165.37318420]
[-374.24502563 177.87208557]
[-389.93276978 179.78791809]
[-402.32870483 169.98405457]
[-404.07858276 154.27693176]
[-394.14419556 141.98532104]
[-378.41946411 140.40162659]
[-366.23355103 150.46540833]
[-351.32580566 148.80459595]
[-336.41802979 147.14378357]
[-324.62567139 138.04487610]
[-310.05368042 144.20663452]
[-295.15585327 142.45880127]
[-280.26849365 140.62399292]
[-265.38113403 138.78919983]
[-250.49377441 136.95439148]
[-235.61738586 135.03268433]
[-220.77693176 132.85069275]
[-205.96298218 130.49551392]
[-191.14903259 128.14035034]
[-176.33508301 125.78517914]
[-161.52113342 123.43001556]
[-146.70716858 121.07484436]
[-131.89321899 118.71968079]
[-117.07926941 116.36450958]
[-102.26531982 114.00934601]
[-87.45136261 111.65417480]
[-72.63741302 109.29900360]
[-66.54650879 105.15976715]
[-57.63679504 107.00389099]
[-42.79634857 104.82188416]
[-27.95590019 102.63988495]
[-13.11545277 100.45788574]
[-3.06197619 85.12932587]
[15.32513618 81.99862671]
[30.39405251 93.52557373]
[45.17948914 90.99755859]
[59.96492767 88.46954346]
[74.75036621 85.94153595]
[84.01439667 74.14418030]
[82.96417236 59.18098831]
[81.91394043 44.21780014]
[80.86370850 29.25461197]
[79.81347656 14.29142284]
[71.12894440 1.06684685]
[77.95614624 -12.17092133]
[76.90592194 -27.13410950]
[75.85569000 -42.09729767]
[64.20838165 -52.44031525]
[63.35645676 -67.63008118]
[73.28871918 -78.67026520]
[69.57740021 -86.97748566]
[72.31463623 -93.81414795]
[71.43922424 -108.78858185]
[70.56381226 -123.76301575]
[62.03431320 -137.08811951]
[69.01565552 -150.24523926]
[68.14024353 -165.21968079]
[67.26483154 -180.19410706]
[58.17694473 -189.31451416]
[57.73773575 -201.78166199]
[65.63821411 -210.91278076]
[64.93774414 -225.89642334]
[64.23727417 -240.88005066]
[50.69588089 -247.99186707]
[42.58591461 -260.84197998]
[42.00072098 -275.92587280]
[48.99739838 -289.18869019]
[61.60832596 -297.11523438]
[60.90785217 -312.09887695]
[47.86855698 -320.51055908]
[42.29521942 -334.99218750]
[46.33089447 -349.97528076]
[58.42378998 -359.69851685]
[73.92393494 -360.42315674]
[86.87121582 -351.87051392]
[92.28712463 -337.32925415]
[88.08914948 -322.39083862]
[75.89148712 -312.79934692]
[76.59195709 -297.81570435]
[89.88738251 -291.10028076]
[98.09089661 -278.54803467]
[98.91549683 -263.47534180]
[92.03974915 -249.92466736]
[79.22090912 -241.58052063]
[79.92137909 -226.59689331]
[80.62184906 -211.61325073]
[90.87394714 -197.35198975]
[82.23926544 -181.06951904]
[83.11467743 -166.09509277]
[83.99008942 -151.12065125]
[92.45697021 -138.86663818]
[85.53824615 -124.63842773]
[86.41365814 -109.66399384]
[87.28907013 -94.68955994]
[88.25190735 -79.72049713]
[99.62896729 -70.17595673]
[100.90720367 -55.01611710]
[90.81887817 -43.14752960]
[91.86911011 -28.18433952]
[92.91933441 -13.22115135]
[101.52875519 -1.06684351]
[94.77666473 13.24119186]
[95.82689667 28.20438004]
[96.87712860 43.16756821]
[97.92736053 58.13075638]
[98.97759247 73.09394836]
[112.84414673 78.81396484]
[124.13857269 68.94299316]
[135.43299866 59.07202911]
[137.93981934 43.22603989]
[151.96226501 35.43177032]
[166.74351501 41.66831589]
[170.94464111 57.15153122]
[161.34292603 70.00402069]
[145.30397034 70.36645508]
[134.00953674 80.23741913]
[122.71511078 90.10838318]
[126.43979645 96.61812592]
[139.45927429 89.16875458]
[154.45916748 89.22711945]
[146.90864563 102.18823242]
[133.88917542 109.63760376]
[137.61386108 116.14734650]
[151.84687805 111.41223907]
[166.07989502 106.67713928]
[180.31291199 101.94203186]
[188.75274658 88.29840088]
[204.69841003 86.53340149]
[215.91777039 98.00099945]
[213.80426025 113.90422821]
[199.97921753 122.04349518]
[185.04801941 116.17504883]
[170.81500244 120.91015625]
[156.58198547 125.64525604]
[142.34896851 130.38035583]
[139.57011414 137.34657288]
[154.33090210 140.01480103]
[169.09167480 142.68302917]
[184.08523560 142.24362183]
[194.93110657 152.60543823]
[195.17623901 167.60343933]
[184.67478943 178.31416321]
[169.67488098 178.36499023]
[159.10159302 167.72691345]
[146.55700684 159.50294495]
[134.01243591 151.27897644]
[131.23359680 158.24519348]
[138.29971313 171.47659302]
[145.36584473 184.70799255]
[152.14460754 190.77693176]
[152.43620300 198.13542175]
[159.34732056 211.44844055]
[166.25843811 224.76145935]
[179.48385620 233.44470215]
[178.48071289 248.30548096]
[185.39183044 261.61849976]
[192.30294800 274.93151855]
[199.21406555 288.24453735]
[206.20281982 301.51696777]
[213.26893616 314.74838257]
[220.33505249 327.97976685]
[227.40118408 341.21118164]
[234.46730042 354.44256592]
[241.53343201 367.67398071]
[248.59954834 380.90536499]
[255.66566467 394.13677979]
[262.73178101 407.36816406]
[285.76715088 408.13882446]
[301.53634644 432.51321411]
[311.86059570 443.39483643]
[322.18484497 454.27645874]
[332.50912476 465.15808105]
[342.83337402 476.03970337]
[353.15762329 486.92132568]
[368.96105957 487.08596802]
[379.95950317 498.43539429]
[379.62777710 514.23620605]
[368.16268921 525.11407471]
[352.36627197 524.61529541]
[341.61026001 513.03582764]
[342.27600098 497.24557495]
[331.95175171 486.36395264]
[321.62750244 475.48233032]
[311.30322266 464.60070801]
[300.97897339 453.71908569]
[290.65472412 442.83746338]
[284.10192871 446.48590088]
[291.39852905 459.59158325]
[278.29269409 466.88796997]
[270.99633789 453.78271484]
[264.44354248 457.43112183]
[268.25527954 471.93872070]
[272.06701660 486.44631958]
[286.99615479 489.81961060]
[298.64007568 499.75326538]
[304.32312012 513.96459961]
[302.73931885 529.18792725]
[294.25265503 541.92504883]
[280.81329346 549.24914551]
[265.50946045 549.47705078]
[251.85792542 542.55651855]
[242.99568176 530.07775879]
[240.95921326 514.90838623]
[246.21647644 500.53408813]
[257.55938721 490.25805664]
[253.74766541 475.75045776]
[249.93592834 461.24285889]
[240.03747559 448.68414307]
[237.42163086 434.50418091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 226]
[2 225]
[3 224]
[4 223]
[5 222]
[6 221]
[7 220]
[8 219]
[9 218]
[11 217]
[12 216]
[13 215]
[14 214]
[16 212]
[17 211]
[18 210]
[19 208]
[20 207]
[21 206]
[23 97]
[24 96]
[25 95]
[26 94]
[31 91]
[32 90]
[33 89]
[34 88]
[35 86]
[36 85]
[37 84]
[38 83]
[39 82]
[40 81]
[41 80]
[42 79]
[43 78]
[44 77]
[45 76]
[48 75]
[50 74]
[51 73]
[52 72]
[53 71]
[55 70]
[57 68]
[58 67]
[59 66]
[98 165]
[99 164]
[100 163]
[101 162]
[102 161]
[104 159]
[105 158]
[106 157]
[109 154]
[111 153]
[112 152]
[113 151]
[115 149]
[116 148]
[117 147]
[120 145]
[121 144]
[122 143]
[127 138]
[128 137]
[166 176]
[167 175]
[168 174]
[182 194]
[183 193]
[184 192]
[185 191]
[228 245]
[229 244]
[230 243]
[231 242]
[232 241]
[233 240]
[250 266]
[251 265]
[252 264]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
