%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGAAGUGACGCAGGGCAGCGGCGUCGCGGGGGCGGGGCUCGGGAAAGACCCGUGCCAGCGGGCGUGUGGCCGCGGGUUUCGCACGGUCCAAUAAGGGAGGGCGGCGUGGCCCGGCCUGGUAGCGACGAGGACGCGCCUGCGCAGAGGCGGCAGCACCACCGGGGUUGACUCCGGGGGCGCGGCGAGGAGAGAC\
) } def
/len { sequence length } bind def

/coor [
[467.99298096 519.17309570]
[458.68075562 507.41375732]
[449.36853027 495.65438843]
[440.05633545 483.89501953]
[425.34054565 486.19970703]
[411.35397339 480.79312134]
[401.88897705 469.03384399]
[399.56552124 454.01724243]
[405.10656738 439.76086426]
[395.79437256 428.00152588]
[389.16955566 424.70565796]
[386.42919922 415.97958374]
[377.30569458 404.07321167]
[368.18218994 392.16683960]
[359.05865479 380.26046753]
[349.93515015 368.35409546]
[340.81164551 356.44775391]
[331.59347534 344.61450195]
[322.28128052 332.85513306]
[307.50256348 331.39736938]
[297.89111328 319.60433960]
[299.52038574 304.11294556]
[284.74166870 302.65518188]
[275.13024902 290.86215210]
[276.75949097 275.37075806]
[267.44729614 263.61138916]
[258.13507080 251.85203552]
[248.82286072 240.09268188]
[239.51063538 228.33331299]
[230.19842529 216.57394409]
[211.92822266 215.56881714]
[199.98092651 201.29113770]
[202.29077148 182.49649048]
[192.60829163 171.04006958]
[182.92581177 159.58364868]
[173.24334717 148.12721252]
[159.11845398 143.40103149]
[156.11991882 127.86656952]
[146.43745422 116.41014862]
[136.75497437 104.95372009]
[127.07250214 93.49729156]
[122.21047974 130.93333435]
[74.28801727 140.91091919]
[59.28849411 141.03051758]
[44.28897095 141.15013123]
[29.28944969 141.26972961]
[17.05659676 151.64936829]
[1.34281957 148.41567993]
[-5.79761744 134.04927063]
[1.11281788 119.57081604]
[16.77303123 116.08695984]
[29.16984749 126.27020264]
[44.16936874 126.15060425]
[59.16889191 126.03099823]
[74.16841888 125.91139984]
[76.40627289 118.75304413]
[83.11985779 97.27799225]
[70.85931396 88.63629150]
[58.59877014 79.99458313]
[42.86136246 78.36834717]
[36.91604233 64.71176147]
[24.65550041 56.07005310]
[12.39495754 47.42834854]
[0.13441458 38.78664017]
[-15.60299110 37.16040421]
[-21.54831123 23.50381660]
[-37.92048264 22.56356812]
[-45.04958344 7.79509115]
[-35.60181046 -5.60907221]
[-19.29621887 -3.85986805]
[-12.90660477 11.24327278]
[1.95384502 12.25139523]
[8.77612019 26.52609825]
[21.03666306 35.16780472]
[33.29720688 43.80950928]
[45.55775070 52.45121765]
[60.41819763 53.45933914]
[67.24047852 67.73403931]
[79.50101471 76.37574768]
[91.76155853 85.01745605]
[98.33501434 81.40639496]
[111.48191833 74.18428040]
[118.05536652 70.57322693]
[117.33802032 55.59038925]
[116.62067413 40.60755539]
[108.23225403 27.19319344]
[115.35204315 14.11046124]
[106.96362305 0.69610232]
[114.08341217 -12.38663006]
[113.36606598 -27.36946678]
[112.64871216 -42.35230637]
[111.93136597 -57.33514023]
[98.51792145 -64.95635986]
[91.37439728 -78.63018799]
[92.78026581 -93.99336243]
[102.28693390 -106.14354706]
[116.86083984 -111.20365906]
[131.85151672 -107.55903625]
[142.47547913 -96.37267303]
[145.34268188 -81.21408844]
[139.53819275 -66.92032623]
[126.91420746 -58.05249023]
[127.63155365 -43.06965256]
[128.34890747 -28.08681679]
[129.06625366 -13.10397911]
[137.40335083 -0.76129258]
[130.33488464 13.39311314]
[138.67198181 25.73579979]
[131.60351562 39.89020538]
[132.32086182 54.87304306]
[133.03820801 69.85588074]
[138.52893066 83.81481934]
[148.21139526 95.27124786]
[157.89387512 106.72766876]
[167.57633972 118.18409729]
[182.39378357 123.72972870]
[184.69976807 138.44474792]
[194.38224792 149.90116882]
[204.06471252 161.35758972]
[213.74719238 172.81402588]
[225.57482910 171.48307800]
[236.46284485 175.98583984]
[243.74580383 185.09463501]
[245.70164490 196.47018433]
[241.95777893 207.26173401]
[251.27000427 219.02110291]
[260.58221436 230.78045654]
[269.89443970 242.53982544]
[279.20666504 254.29917908]
[288.51885986 266.05856323]
[303.97134399 268.02294922]
[313.24774170 280.08126831]
[311.27975464 294.80075073]
[326.73220825 296.76513672]
[336.00860596 308.82345581]
[334.04061890 323.54293823]
[343.35284424 335.30227661]
[351.14321899 340.09439087]
[352.71801758 347.32421875]
[361.84152222 359.23059082]
[370.96502686 371.13696289]
[380.08853149 383.04333496]
[389.21206665 394.94970703]
[398.33557129 406.85604858]
[407.55374146 418.68930054]
[416.86593628 430.44866943]
[432.01275635 428.32232666]
[446.09719849 434.02542114]
[455.37429810 445.93347168]
[457.43157959 460.78689575]
[451.81570435 474.58282471]
[461.12789917 486.34216309]
[470.44012451 498.10153198]
[479.75234985 509.86090088]
[490.08877563 514.28894043]
[493.30227661 523.73889160]
[504.83554077 533.32971191]
[520.39343262 536.20428467]
[525.23205566 550.29101562]
[536.76531982 559.88183594]
[552.32324219 562.75640869]
[557.16186523 576.84320068]
[568.69512939 586.43402100]
[580.22839355 596.02484131]
[591.76165771 605.61566162]
[603.29492188 615.20648193]
[614.82818604 624.79730225]
[631.07348633 627.03863525]
[637.00360107 642.32800293]
[626.51818848 654.93707275]
[610.40368652 651.89465332]
[605.23736572 636.33056641]
[593.70410156 626.73974609]
[582.17083740 617.14892578]
[570.63757324 607.55810547]
[559.10430908 597.96728516]
[547.57104492 588.37646484]
[532.83813477 586.18786621]
[527.17449951 571.41510010]
[515.64123535 561.82434082]
[500.90832520 559.63574219]
[495.24472046 544.86297607]
[483.71145630 535.27215576]
[488.08044434 549.62182617]
[486.80734253 564.56768799]
[480.07424927 577.97161865]
[468.84445190 587.91601562]
[454.72448730 592.97827148]
[439.73434448 592.43414307]
[426.01858521 586.36145020]
[415.53933716 575.62896729]
[409.79583740 561.77215576]
[409.60971069 546.77331543]
[415.00762939 532.77819824]
[425.21731567 521.78900146]
[438.77816772 515.37786865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[9 146]
[10 145]
[12 144]
[13 143]
[14 142]
[15 141]
[16 140]
[17 139]
[18 137]
[19 136]
[22 133]
[25 130]
[26 129]
[27 128]
[28 127]
[29 126]
[30 125]
[33 120]
[34 119]
[35 118]
[36 117]
[38 115]
[39 114]
[40 113]
[41 112]
[43 55]
[44 54]
[45 53]
[46 52]
[57 80]
[58 79]
[59 78]
[61 76]
[62 75]
[63 74]
[64 73]
[66 71]
[83 111]
[84 110]
[85 109]
[87 107]
[89 105]
[90 104]
[91 103]
[92 102]
[156 183]
[157 182]
[159 180]
[160 179]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
