%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUGACUUCCGGCCUCGGAGGCCGGCGUCGGCUGUUGCAGCCUGCUGCGCGCCCAGGGGUCCCGCGGGUUUUCGGGCGCAGGGUGGCGCCCGCGGCAGGCGGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[-89.86911774 261.85098267]
[-101.54737091 262.67062378]
[-112.03130341 257.73852539]
[-124.72394562 265.73208618]
[-137.41658020 273.72561646]
[-150.10922241 281.71917725]
[-162.80186462 289.71273804]
[-166.46253967 302.18405151]
[-177.32505798 308.55819702]
[-189.21205139 305.84936523]
[-202.12977600 313.47381592]
[-215.04750061 321.09826660]
[-227.96522522 328.72274780]
[-240.88296509 336.34719849]
[-253.80068970 343.97164917]
[-266.71841431 351.59609985]
[-277.28546143 364.85409546]
[-292.95056152 358.37017822]
[-291.05657959 341.52236938]
[-274.34286499 338.67837524]
[-261.42514038 331.05392456]
[-248.50741577 323.42947388]
[-235.58969116 315.80502319]
[-222.67195129 308.18054199]
[-209.75422668 300.55609131]
[-196.83650208 292.93164062]
[-189.13748169 277.23437500]
[-170.79541016 277.02008057]
[-158.10278320 269.02655029]
[-145.41014099 261.03298950]
[-132.71749878 253.03942871]
[-120.02484894 245.04588318]
[-117.17098236 227.07693481]
[-101.91614532 216.59426880]
[-83.50183868 220.50279236]
[-71.29080200 211.79127502]
[-59.07976532 203.07975769]
[-46.86872864 194.36822510]
[-34.65769577 185.65670776]
[-28.79039383 171.96641541]
[-13.06252480 170.25041199]
[-0.85148907 161.53889465]
[11.35954666 152.82737732]
[23.57058144 144.11584473]
[35.78161621 135.40432739]
[47.99265289 126.69280243]
[60.20368958 117.98128510]
[72.41472626 109.26976013]
[84.62575531 100.55824280]
[90.52188110 59.18130112]
[99.05653381 46.84599686]
[107.59118652 34.51069260]
[116.12583923 22.17538643]
[124.66048431 9.84008312]
[133.19512939 -2.49522185]
[135.55958557 -11.47990322]
[142.15773010 -15.05819130]
[151.04431152 -27.14242172]
[159.93090820 -39.22665024]
[168.81748962 -51.31088257]
[170.75996399 -67.01239014]
[184.53337097 -72.68180084]
[193.41996765 -84.76602936]
[194.68934631 -101.11597443]
[209.59825134 -107.94655609]
[222.80964661 -98.23106384]
[220.73280334 -81.96395874]
[205.50419617 -75.87944031]
[196.61761475 -63.79521179]
[195.31076050 -48.95804977]
[180.90171814 -42.42429733]
[172.01513672 -30.34006691]
[163.12855530 -18.25583649]
[154.24195862 -6.17160654]
[145.53044128 6.03942871]
[136.99578857 18.37473297]
[128.46113586 30.71003723]
[119.92649078 43.04534149]
[111.39183807 55.38064575]
[102.85718536 67.71595001]
[105.29781342 74.80773163]
[112.61968994 96.08306885]
[126.93802643 100.55355835]
[141.25636292 105.02404022]
[155.57470703 109.49452209]
[172.49604797 108.44351959]
[178.19026184 124.41262817]
[164.42155457 134.30499268]
[151.10421753 123.81285858]
[136.78588867 119.34237671]
[122.46754456 114.87189484]
[108.14920807 110.40141296]
[93.33728027 112.76927185]
[81.12624359 121.48079681]
[68.91520691 130.19232178]
[56.70417404 138.90383911]
[44.49313736 147.61535645]
[32.28210449 156.32688904]
[20.07106781 165.03840637]
[7.86003304 173.74992371]
[-4.35100269 182.46145630]
[-11.09171772 196.77484131]
[-25.94617271 197.86775208]
[-38.15720749 206.57926941]
[-50.36824417 215.29078674]
[-62.57928085 224.00230408]
[-74.79031372 232.71383667]
[-74.44481659 244.77841187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 32]
[4 31]
[5 30]
[6 29]
[7 28]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[15 21]
[16 20]
[35 107]
[36 106]
[37 105]
[38 104]
[39 103]
[41 101]
[42 100]
[43 99]
[44 98]
[45 97]
[46 96]
[47 95]
[48 94]
[49 93]
[50 80]
[51 79]
[52 78]
[53 77]
[54 76]
[55 75]
[57 74]
[58 73]
[59 72]
[60 71]
[62 69]
[63 68]
[82 92]
[83 91]
[84 90]
[85 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
