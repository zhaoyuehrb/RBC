%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGCUGACAGGCGGCCCCGGGGGCGGUGGCCAAGGCGGCGACCGGAGCGCGAUGGCGGGGGCGGCGGGACUCACGGCAGAAGUGAGCUGGAAGGUCUUGGAGCGAAGAGCUCGGACCAAGCGCUCAGUUUUAAAAUUGCUAUAGCUUAGCCUGCGACGCUUAUGAUUAGAGCCAACAAUUUGAA\
) } def
/len { sequence length } bind def

/coor [
[65.74411011 372.35772705]
[78.29619598 364.14523315]
[92.74073029 360.10107422]
[107.73236847 360.60189819]
[121.87480164 365.60107422]
[133.85134888 374.63351440]
[127.93600464 360.84915161]
[122.39683533 355.93148804]
[122.03934479 346.78164673]
[116.35766602 332.89935303]
[110.67597961 319.01705933]
[104.99429321 305.13473511]
[99.31261444 291.25244141]
[84.59468842 288.35714722]
[74.07804108 299.05294800]
[63.56138611 309.74874878]
[53.04473877 320.44451904]
[42.61878967 331.22875977]
[32.28428650 342.10064697]
[21.94978142 352.97253418]
[18.63613129 369.03341675]
[2.98714685 373.93661499]
[-8.89883709 362.63815308]
[-4.79453993 346.76089478]
[11.07788944 342.63803101]
[21.41239357 331.76614380]
[31.74689674 320.89425659]
[34.08160782 313.86468506]
[42.34894180 309.92788696]
[52.86558914 299.23208618]
[63.38224030 288.53628540]
[73.89889526 277.84048462]
[74.24966431 256.59457397]
[88.42657471 244.96133423]
[87.41393280 229.99555969]
[86.40128326 215.02978516]
[85.38864136 200.06399536]
[83.99719238 185.12867737]
[82.22784424 170.23339844]
[80.45848846 155.33811951]
[78.68914032 140.44284058]
[76.91979218 125.54755402]
[68.24710083 113.30890656]
[54.78003311 106.70299530]
[41.31296539 100.09708405]
[27.79059029 93.60513306]
[14.21387291 87.22761536]
[0.63715500 80.85009766]
[-12.99293709 74.58746338]
[-28.75189209 75.98957825]
[-37.19037628 63.71597672]
[-50.87287140 57.56867218]
[-60.00540924 56.90235901]
[-64.73317719 51.20026016]
[-80.51356506 52.33601379]
[-88.74355316 39.92164230]
[-102.32026672 33.54412460]
[-118.60643005 35.46581268]
[-128.19555664 22.16239929]
[-121.22315979 7.31929302]
[-104.86185455 6.20581055]
[-95.94274902 19.96740723]
[-82.36603546 26.34492493]
[-67.55673981 24.75300980]
[-58.35565948 37.62354279]
[-44.72556686 43.88617706]
[-31.04307175 50.03348160]
[-16.26278114 48.19167328]
[-6.84563208 60.90496826]
[0.56042069 60.77801132]
[7.01467323 67.27337646]
[20.59139061 73.65090179]
[34.16810989 80.02841949]
[41.57524872 80.02655792]
[47.91887665 86.63001251]
[61.38594437 93.23592377]
[74.85301208 99.84183502]
[84.31635284 83.46929932]
[100.94512939 79.59564972]
[107.09243774 65.91315460]
[113.23973846 52.23066330]
[119.38704681 38.54816818]
[117.98493195 22.78921509]
[130.25852966 14.35072994]
[136.40583801 0.66823572]
[142.55314636 -13.01425838]
[148.70043945 -26.69675255]
[154.84774780 -40.37924576]
[155.51406860 -49.51178360]
[161.21615601 -54.23955154]
[153.90118408 -67.79673004]
[155.94779968 -82.88529968]
[166.36346436 -93.74704742]
[181.00253296 -96.36157990]
[187.38005066 -109.93829346]
[193.75756836 -123.51501465]
[200.13508606 -137.09173584]
[206.51260376 -150.66844177]
[206.33525085 -157.31288147]
[209.13301086 -162.29115295]
[213.34165955 -164.59042358]
[220.17408752 -177.94400024]
[227.00650024 -191.29757690]
[233.83892822 -204.65115356]
[230.29522705 -220.29792786]
[240.43099976 -232.73358154]
[256.47094727 -232.41854858]
[266.11062622 -219.59448242]
[261.95526123 -204.09892273]
[247.19250488 -197.81872559]
[240.36007690 -184.46514893]
[233.52766418 -171.11157227]
[226.69523621 -157.75799561]
[220.08932495 -144.29092407]
[213.71180725 -130.71421814]
[207.33428955 -117.13749695]
[200.95677185 -103.56077576]
[194.57925415 -89.98406219]
[201.91349792 -77.04780579]
[200.20378113 -62.09651947]
[189.89753723 -50.88782501]
[174.79287720 -47.86203384]
[168.53024292 -34.23194122]
[162.38293457 -20.54944801]
[156.23564148 -6.86695337]
[150.08833313 6.81554079]
[143.94102478 20.49803543]
[145.78283691 35.27832413]
[133.06953430 44.69547272]
[126.92223358 58.37796783]
[120.77493286 72.06046295]
[114.62762451 85.74295807]
[120.77012634 94.97016144]
[121.33525848 106.53865051]
[115.65637207 117.20052338]
[104.89048767 123.70400238]
[91.81507111 123.77819824]
[93.58441925 138.67347717]
[95.35377502 153.56875610]
[97.12312317 168.46405029]
[98.89247131 183.35932922]
[102.04681396 187.57301331]
[103.14445496 192.12077332]
[102.40529633 196.15789795]
[100.35441589 199.05136108]
[101.36706543 214.01713562]
[102.37970734 228.98291016]
[103.39235687 243.94868469]
[120.76615143 259.54483032]
[113.19492340 285.57073975]
[118.87660217 299.45306396]
[124.55828857 313.33535767]
[130.23997498 327.21768188]
[135.92166138 341.09997559]
[141.72036743 354.93380737]
[147.63571167 368.71817017]
[154.03469849 372.59417725]
[157.28959656 378.51400757]
[157.13371277 384.54568481]
[166.51432800 396.25054932]
[175.89494324 407.95541382]
[185.27555847 419.66030884]
[200.91220093 419.83151245]
[212.74678040 430.05291748]
[215.19137573 445.49822998]
[207.09170532 458.87469482]
[192.27220154 463.86630249]
[177.73017883 458.11621094]
[170.33192444 444.33941650]
[173.57069397 429.04092407]
[164.19007874 417.33602905]
[154.80944824 405.63116455]
[145.42883301 393.92630005]
[147.76469421 408.74331665]
[145.52275085 423.57482910]
[138.91184998 437.03942871]
[128.54771423 447.88308716]
[115.39564514 455.09579468]
[100.68061066 458.00576782]
[85.77317047 456.34197998]
[72.06178284 450.25939941]
[60.82350922 440.32455444]
[53.10507965 427.46273804]
[49.62537384 412.87194824]
[50.70849609 397.91110229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 156]
[7 155]
[9 154]
[10 153]
[11 152]
[12 151]
[13 150]
[14 32]
[15 31]
[16 30]
[17 29]
[18 27]
[19 26]
[20 25]
[34 148]
[35 147]
[36 146]
[37 145]
[38 141]
[39 140]
[40 139]
[41 138]
[42 137]
[43 77]
[44 76]
[45 75]
[46 73]
[47 72]
[48 71]
[49 69]
[51 67]
[52 66]
[54 65]
[56 63]
[57 62]
[79 132]
[80 131]
[81 130]
[82 129]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[90 122]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[101 113]
[102 112]
[103 111]
[104 110]
[159 173]
[160 172]
[161 171]
[162 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
