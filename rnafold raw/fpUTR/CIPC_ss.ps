%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGAGGCUGUGGGGAUAGCGAGACACCCAGCGACGACGAGGUUGUCAUGGUGCCGCGGGGCCGUGCUCGCGCAUGCGCCACCUGACCCACAGGCCGGUCGUGGAGCUGCGACCCCGGCCCUAGGGCAGUCCAGAUGAAAAGAGUACCAAUGAAUCUGCCUCCAGCUGAAUAAACC\
) } def
/len { sequence length } bind def

/coor [
[335.97763062 218.44587708]
[323.69036865 209.84222412]
[311.40307617 201.23858643]
[299.11578369 192.63493347]
[284.25228882 191.67289734]
[277.38577271 177.41941833]
[265.09851074 168.81578064]
[248.18750000 165.77073669]
[240.43508911 151.46237183]
[226.16925049 146.82711792]
[211.90339661 142.19186401]
[197.59764099 137.68127441]
[183.25306702 133.29570007]
[168.90849304 128.91012573]
[154.56393433 124.52455139]
[140.21936035 120.13897705]
[125.87478638 115.75340271]
[116.11559296 127.07839203]
[101.62849426 132.68859863]
[85.62393188 130.75282288]
[71.93009186 121.18175507]
[64.07798767 105.77415466]
[49.22396469 107.86174774]
[34.36994553 109.94934845]
[26.28064346 114.25350952]
[19.23871613 111.94141388]
[11.07552814 116.10373688]
[4.07502460 113.66909790]
[-10.84280396 115.23702240]
[-25.76063156 116.80494690]
[-40.67845917 118.37287903]
[-51.42218399 132.16139221]
[-68.47704315 133.89356995]
[-81.26010895 122.98451233]
[-96.14830780 124.81255341]
[-111.03649902 126.64059448]
[-125.92469025 128.46862793]
[-140.81288147 130.29667664]
[-150.34425354 142.90336609]
[-166.00949097 144.99516296]
[-178.51470947 135.33103943]
[-180.44076538 119.64455414]
[-170.64497375 107.24221802]
[-154.93899536 105.48210907]
[-142.64091492 115.40848541]
[-127.75273132 113.58044434]
[-112.86454010 111.75240326]
[-97.97634125 109.92436218]
[-83.08815002 108.09632111]
[-76.64240265 96.92041016]
[-64.75560760 91.42348480]
[-51.68250275 93.82040405]
[-42.24638748 103.45504761]
[-27.32855988 101.88712311]
[-12.41073036 100.31919098]
[2.50709772 98.75126648]
[17.41067505 97.05321503]
[32.28234863 95.09532166]
[47.13636780 93.00772858]
[61.99039078 90.92013550]
[68.21079254 77.27071381]
[60.04120255 64.69065094]
[51.76214981 52.18236542]
[43.37425613 39.74680328]
[34.98636246 27.31123924]
[26.49026871 14.94934750]
[17.88662148 2.66206646]
[9.28297520 -9.62521458]
[0.67932862 -21.91249466]
[-7.92431784 -34.19977570]
[-23.00757217 -40.63619232]
[-24.70620728 -56.94712830]
[-11.27281284 -66.35329437]
[3.47348714 -59.17842865]
[4.36296272 -42.80342102]
[12.96660900 -30.51614189]
[21.57025528 -18.22886086]
[30.17390251 -5.94158030]
[38.77754974 6.34570074]
[45.20774078 10.03177738]
[47.42192459 18.92334557]
[55.80981827 31.35890961]
[64.19771576 43.79447174]
[70.56259155 47.59221268]
[72.62126160 56.52106857]
[80.79084778 69.10112762]
[99.55291748 65.14223480]
[116.86953735 71.24500275]
[127.96862793 84.83456421]
[130.26036072 101.40882874]
[144.60493469 105.79441071]
[158.94950867 110.17998505]
[173.29406738 114.56555939]
[187.63864136 118.95113373]
[201.98321533 123.33670807]
[211.13363647 122.85449982]
[216.53865051 127.92601776]
[230.80450439 132.56127930]
[245.07034302 137.19653320]
[259.37609863 132.68594360]
[268.40332031 120.70641327]
[277.43054199 108.72687531]
[286.45776367 96.74734497]
[295.48501587 84.76781464]
[304.51223755 72.78828430]
[302.06478882 57.17464828]
[311.44204712 44.45292664]
[327.08068848 42.17069244]
[339.70257568 51.68194962]
[341.81933594 67.34384155]
[332.17517090 79.86444092]
[316.49176025 81.81550598]
[307.46453857 93.79503632]
[298.43731689 105.77457428]
[289.41009521 117.75410461]
[280.38287354 129.73364258]
[271.35562134 141.71316528]
[273.70214844 156.52848816]
[285.98944092 165.13214111]
[301.73181152 166.70956421]
[307.71945190 180.34765625]
[320.00671387 188.95130920]
[332.29400635 197.55494690]
[344.58126831 206.15859985]
[352.26806641 206.09788513]
[358.25256348 209.59004211]
[361.21948242 215.00527954]
[375.22317505 220.38079834]
[389.22689819 225.75631714]
[403.23059082 231.13183594]
[417.23431396 236.50735474]
[431.23800659 241.88287354]
[447.07058716 234.47476196]
[463.05297852 240.67413330]
[469.49017334 256.19757080]
[483.58554077 261.32785034]
[495.60208130 256.59094238]
[507.24765015 261.17498779]
[512.46453857 272.10821533]
[526.46826172 277.48373413]
[538.35369873 267.75582886]
[553.51330566 265.28979492]
[567.86926270 270.74896240]
[577.55987549 282.66482544]
[579.97839355 297.83212280]
[574.47424316 312.17086792]
[562.52801514 321.82406616]
[547.35327148 324.19500732]
[533.03179932 318.64596558]
[523.41613770 306.66958618]
[521.09271240 291.48742676]
[507.08901978 286.11190796]
[489.94363403 289.79760742]
[478.45526123 275.42324829]
[464.35986328 270.29293823]
[453.54290771 277.32446289]
[440.45614624 276.82577515]
[429.89608765 268.75503540]
[425.86248779 255.88658142]
[411.85879517 250.51106262]
[397.85507202 245.13554382]
[383.85137939 239.76002502]
[369.84765625 234.38450623]
[355.84396362 229.00898743]
[364.99572754 240.89364624]
[369.66793823 255.14744568]
[369.32733154 270.14358521]
[364.01281738 284.17053223]
[354.33090210 295.62744141]
[341.38662720 303.20672607]
[326.65728760 306.04333496]
[311.82394409 303.81356812]
[298.57952881 296.77188110]
[288.43560791 285.72192383]
[282.54995728 271.92486572]
[281.59423828 256.95535278]
[285.67758179 242.52182007]
[294.33392334 230.27160645]
[306.57534790 221.60281372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 124]
[2 123]
[3 122]
[4 121]
[6 119]
[7 118]
[9 99]
[10 98]
[11 97]
[12 95]
[13 94]
[14 93]
[15 92]
[16 91]
[17 90]
[22 60]
[23 59]
[24 58]
[26 57]
[28 56]
[29 55]
[30 54]
[31 53]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[61 86]
[62 85]
[63 83]
[64 82]
[65 81]
[66 79]
[67 78]
[68 77]
[69 76]
[70 75]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[105 112]
[127 164]
[128 163]
[129 162]
[130 161]
[131 160]
[132 159]
[135 155]
[136 154]
[139 152]
[140 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
