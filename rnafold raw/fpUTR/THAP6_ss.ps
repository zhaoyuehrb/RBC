%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUUUCCGGUUCCCGGGGCUACGAGGCGGAAGCGAAGGCAGACGCAGUCUCCGUCGUUGACGUUAGUCGCAGUCUUCGCUGCUAACGUUUUGUUAUGAGUUGCUAAA\
) } def
/len { sequence length } bind def

/coor [
[112.09076691 341.33255005]
[98.60781097 347.90597534]
[83.62308502 348.58264160]
[69.60254669 343.25115967]
[58.85351181 332.78894043]
[53.14489365 318.91769409]
[53.41559601 303.92251587]
[43.84757614 315.47470093]
[34.27955627 327.02688599]
[24.71153450 338.57907104]
[19.26482010 354.63427734]
[2.32925749 353.84494019]
[-1.60048938 337.35272217]
[13.15934944 329.01104736]
[22.72736931 317.45886230]
[32.29539108 305.90667725]
[41.86341095 294.35449219]
[49.11243820 281.22241211]
[53.78878784 266.97000122]
[58.46514130 252.71755981]
[63.14149475 238.46513367]
[66.98896790 223.96696472]
[69.99478149 209.27120972]
[73.00060272 194.57546997]
[76.00641632 179.87971497]
[79.01222992 165.18395996]
[82.01805115 150.48820496]
[85.02386475 135.79246521]
[88.02967834 121.09671021]
[76.47342682 105.90425873]
[79.48664093 87.05542755]
[95.20330048 76.22287750]
[96.92878723 61.32245255]
[98.65428162 46.42202759]
[100.37976837 31.52160072]
[102.10525513 16.62117577]
[103.83074951 1.72074950]
[105.55623627 -13.17967606]
[107.28172302 -28.08010292]
[109.00720978 -42.98052597]
[100.08441925 -60.94315720]
[111.92752075 -76.11360168]
[112.79170227 -91.08869171]
[113.65588379 -106.06377411]
[100.46062469 -116.52880859]
[96.09168243 -132.62246704]
[102.06417847 -148.01531982]
[115.86549377 -156.77349854]
[116.29776764 -171.76727295]
[116.73003387 -186.76103210]
[103.93968201 -195.38719177]
[97.86439514 -209.56796265]
[100.44277954 -224.77833557]
[110.85208130 -236.16473389]
[125.77072906 -240.09379578]
[140.43823242 -235.31176758]
[150.17425537 -223.34458923]
[151.87205505 -208.01092529]
[144.98988342 -194.20370483]
[131.72380066 -186.32876587]
[131.29153442 -171.33500671]
[130.85926819 -156.34123230]
[142.20223999 -149.14224243]
[148.52323914 -137.16445923]
[148.05767822 -123.52030182]
[140.82052612 -111.81625366]
[128.63096619 -105.19959259]
[127.76679230 -90.22451019]
[126.90261078 -75.24942017]
[134.47596741 -68.11589050]
[136.84118652 -57.75700760]
[132.95616150 -47.62964630]
[123.90763855 -41.25503922]
[122.18215179 -26.35461235]
[120.45665741 -11.45418739]
[118.73117065 3.44623828]
[117.00568390 18.34666443]
[115.28019714 33.24708939]
[113.55470276 48.14751434]
[111.82921600 63.04794312]
[110.10372925 77.94836426]
[118.42759705 84.22713470]
[123.34664917 93.42021179]
[123.95200348 103.82901764]
[120.13180542 113.53034973]
[112.59190369 120.73171234]
[102.72543335 124.10253143]
[99.71961212 138.79827881]
[96.71379852 153.49403381]
[93.70798492 168.18977356]
[90.70216370 182.88552856]
[87.69635010 197.58128357]
[84.69053650 212.27702332]
[81.68471527 226.97277832]
[83.35684204 231.36199951]
[83.43456268 235.60710144]
[82.18038940 239.19631958]
[80.00355530 241.76686096]
[77.39392090 243.14147949]
[72.71756744 257.39392090]
[68.04122162 271.64633179]
[63.36486435 285.89877319]
[75.91143036 277.67782593]
[90.69126129 275.11727905]
[105.27211761 278.63845825]
[117.25447845 287.66195679]
[124.66645813 300.70275879]
[126.28829956 315.61480713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 17]
[8 16]
[9 15]
[10 14]
[18 102]
[19 101]
[20 100]
[21 99]
[22 94]
[23 93]
[24 92]
[25 91]
[26 90]
[27 89]
[28 88]
[29 87]
[32 81]
[33 80]
[34 79]
[35 78]
[36 77]
[37 76]
[38 75]
[39 74]
[40 73]
[42 69]
[43 68]
[44 67]
[48 62]
[49 61]
[50 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
