%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCUGGGGCGGGACCUGCGGGAAGAUAGACAUGGGCUGUCGCGGCUUGAGGAGGGGCGGGGCCCAAGGGGCGGGACCUCGGGUGGCCCGAGGUGGCCCGGCUGCUGGGUUGGAAGCGGCGCAGUCCGACUCAUCCCGGCCCCGGGAUGGCGUCCCCACGGGAAUUGACACAGAACCCCCUGAAGAAGAUCUGGAUGCCAUACAGCA\
) } def
/len { sequence length } bind def

/coor [
[213.66134644 225.95356750]
[226.40315247 218.03860474]
[241.40141296 218.16059875]
[229.73472595 208.73252869]
[218.06802368 199.30447388]
[206.40133667 189.87640381]
[194.73464966 180.44834900]
[183.06796265 171.02027893]
[171.40127563 161.59222412]
[159.73458862 152.16415405]
[147.99703979 142.82446289]
[136.18928528 133.57368469]
[124.38153076 124.32289886]
[112.57377625 115.07212067]
[97.79947662 117.66444397]
[89.84642029 130.38249207]
[89.80966187 146.78160095]
[75.45641327 154.71357727]
[61.55206299 146.01869202]
[62.40021896 129.64147949]
[77.12836456 122.42943573]
[85.08142853 109.71138763]
[73.70297241 119.48537445]
[58.70776749 119.10617828]
[47.83786392 108.76958466]
[46.70542145 93.81239319]
[55.89511871 81.95703888]
[70.66230011 79.32446289]
[83.38386536 87.27551270]
[73.60772705 75.89890289]
[58.08893204 74.55552673]
[48.33660889 62.87876511]
[49.71295166 48.09223938]
[39.93681717 36.71562958]
[30.16068649 25.33901978]
[20.38455582 13.96240997]
[10.60842514 2.58580017]
[0.83229345 -8.79080963]
[-8.94383812 -20.16741943]
[-16.91230011 -24.63791084]
[-18.78013039 -31.79047203]
[-28.38332176 -43.31343460]
[-37.98651505 -54.83639908]
[-52.76533890 -60.48413849]
[-54.96972656 -75.21471405]
[-64.57292175 -86.73767853]
[-74.17610931 -98.26064301]
[-83.77930450 -109.78360748]
[-89.96398926 -107.67503357]
[-96.44049835 -106.93322754]
[-102.91114807 -107.58568573]
[-109.07991791 -109.59598541]
[-114.66600037 -112.86571503]
[-119.41659546 -117.23931122]
[-123.11832428 -122.51141357]
[-125.60682678 -128.43653870]
[-126.77405548 -134.74047852]
[-126.57293701 -141.13301086]
[-125.01923370 -147.32125854]
[-122.19054413 -153.02307129]
[-118.22243500 -157.97993469]
[-125.98250580 -170.81665039]
[-133.74256897 -183.65336609]
[-141.50263977 -196.49008179]
[-149.26271057 -209.32681274]
[-157.02278137 -222.16352844]
[-172.10571289 -226.05488586]
[-179.79266357 -239.18368530]
[-175.98989868 -253.53898621]
[-183.74996948 -266.37570190]
[-197.51075745 -274.18283081]
[-197.47361755 -289.07739258]
[-205.23368835 -301.91412354]
[-212.99374390 -314.75082397]
[-220.75381470 -327.58755493]
[-228.70687866 -340.30560303]
[-236.85110474 -352.90209961]
[-244.99534607 -365.49856567]
[-253.13958740 -378.09506226]
[-261.28381348 -390.69152832]
[-269.42803955 -403.28802490]
[-277.57229614 -415.88452148]
[-285.71652222 -428.48098755]
[-299.39385986 -438.49929810]
[-293.55334473 -454.41546631]
[-276.64236450 -453.20925903]
[-273.12002563 -436.62524414]
[-264.97579956 -424.02874756]
[-256.83157349 -411.43225098]
[-248.68733215 -398.83578491]
[-240.54309082 -386.23928833]
[-232.39886475 -373.64279175]
[-224.25462341 -361.04632568]
[-216.11039734 -348.44982910]
[-211.70957947 -346.58911133]
[-208.43202209 -341.94281006]
[-207.91709900 -335.34762573]
[-200.15702820 -322.51089478]
[-192.39697266 -309.67416382]
[-184.63690186 -296.83746338]
[-171.43116760 -289.94848633]
[-170.91325378 -274.13577271]
[-163.15318298 -261.29904175]
[-148.67495728 -257.99499512]
[-140.62228394 -245.08728027]
[-144.18605042 -229.92359924]
[-136.42599487 -217.08686829]
[-128.66592407 -204.25015259]
[-120.90585327 -191.41343689]
[-113.14579010 -178.57672119]
[-105.38571930 -165.73999023]
[-81.56328583 -162.99320984]
[-67.34587860 -143.37139893]
[-72.25634003 -119.38680267]
[-62.65314865 -107.86383820]
[-53.04995346 -96.34087372]
[-43.44676208 -84.81790924]
[-29.35482407 -79.99436951]
[-26.46355057 -64.43959045]
[-16.86035919 -52.91662979]
[-7.25716591 -41.39366531]
[2.43277216 -29.94355202]
[12.20890331 -18.56694031]
[21.98503494 -7.19033098]
[31.76116562 4.18627882]
[41.53729630 15.56288910]
[51.31342697 26.93949890]
[61.08956146 38.31610870]
[75.91483307 39.18028259]
[85.99128723 50.57852173]
[84.98434448 66.12277222]
[94.76047516 77.49938202]
[115.31599426 83.40176392]
[121.82456207 103.26436615]
[133.63230896 112.51514435]
[145.44006348 121.76593018]
[157.24781799 131.01670837]
[165.93531799 133.84674072]
[169.16264343 140.49746704]
[180.82934570 149.92553711]
[192.49603271 159.35359192]
[204.16271973 168.78166199]
[215.82940674 178.20971680]
[227.49609375 187.63778687]
[239.16278076 197.06584167]
[250.82946777 206.49391174]
[263.10952759 215.10786438]
[275.94625854 222.86793518]
[288.78295898 230.62799072]
[301.61968994 238.38806152]
[314.45639038 246.14813232]
[327.29312134 253.90820312]
[340.12985229 261.66827393]
[352.96655273 269.42834473]
[365.80328369 277.18841553]
[377.02038574 258.78945923]
[406.29077148 254.82533264]
[420.06069946 260.77423096]
[435.79772949 259.14450073]
[444.41275024 271.29483032]
[458.18264771 277.24374390]
[471.95257568 283.19262695]
[486.49343872 277.60681152]
[500.37335205 283.83599854]
[505.60894775 297.73291016]
[519.37884521 303.68182373]
[533.97552490 297.62274170]
[548.54925537 303.73687744]
[554.45367432 318.39682007]
[548.18579102 332.90505981]
[533.46423340 338.65414429]
[519.02307129 332.23321533]
[513.42999268 317.45172119]
[499.66006470 311.50283813]
[485.95251465 317.21588135]
[471.90310669 311.37902832]
[466.00366211 296.96255493]
[452.23376465 291.01364136]
[438.46383667 285.06475830]
[423.71173096 287.11999512]
[414.11178589 274.54415894]
[400.34188843 268.59524536]
[390.82556152 280.19091797]
[381.31008911 291.78555298]
[389.83105469 304.13031006]
[398.35202026 316.47506714]
[412.32571411 326.07571411]
[406.96859741 342.16104126]
[390.02886963 341.46609497]
[386.00726318 324.99603271]
[377.48629761 312.65127563]
[368.96533203 300.30651855]
[358.04321289 290.02511597]
[345.20648193 282.26504517]
[332.36978149 274.50497437]
[319.53305054 266.74490356]
[306.69635010 258.98486328]
[293.85961914 251.22477722]
[281.02288818 243.46472168]
[268.18618774 235.70465088]
[255.34945679 227.94458008]
[260.57031250 242.00668335]
[257.46530151 256.68179321]
[246.99624634 267.42419434]
[232.40600586 270.90631104]
[218.21405029 266.04956055]
[208.81642151 254.35833740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 140]
[10 139]
[11 137]
[12 136]
[13 135]
[14 134]
[15 22]
[16 21]
[29 132]
[30 131]
[33 128]
[34 127]
[35 126]
[36 125]
[37 124]
[38 123]
[39 122]
[41 121]
[42 120]
[43 119]
[45 117]
[46 116]
[47 115]
[48 114]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[66 106]
[69 103]
[70 102]
[72 100]
[73 99]
[74 98]
[75 97]
[76 94]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[83 87]
[147 201]
[148 200]
[149 199]
[150 198]
[151 197]
[152 196]
[153 195]
[154 194]
[155 193]
[157 182]
[158 181]
[160 179]
[161 178]
[162 177]
[165 174]
[166 173]
[184 192]
[185 191]
[186 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
