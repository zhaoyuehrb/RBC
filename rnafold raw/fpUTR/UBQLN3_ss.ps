%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGACCUGAUAGUGCGGGUUCUGGCCCAGAAGGCCUCAGGGGUGGCUGUGUAGCAAGAUGAGGGAGGUUUGGAGCCCUGCAUAAAGAGAAGGACGGGACCACAGCUGACUGGAUGAUCUUGGUCUCCAAUCCCCAUGCCCCUAGCUGUGUCCCCACAGAUCUGGGCCUCCUGCUGCCACC\
) } def
/len { sequence length } bind def

/coor [
[120.63752747 125.96723938]
[97.32738495 135.55467224]
[91.05337524 149.17953491]
[84.77935791 162.80438232]
[78.50534058 176.42924500]
[72.23132324 190.05410767]
[65.95730591 203.67895508]
[59.68328476 217.30381775]
[53.40927124 230.92866516]
[59.12021637 245.66503906]
[52.66193390 260.08953857]
[37.86600876 265.64437866]
[23.51059723 259.03393555]
[18.11251259 244.18011475]
[24.87434196 229.89538574]
[39.78441238 224.65464783]
[46.05842972 211.02980042]
[52.33244705 197.40493774]
[58.60646439 183.78009033]
[64.88047791 170.15522766]
[71.15449524 156.53036499]
[77.42851257 142.90551758]
[83.70252991 129.28065491]
[72.56113434 119.23728943]
[59.65792084 126.88627625]
[46.75470734 134.53526306]
[33.85149002 142.18424988]
[28.50076675 157.30871582]
[13.29335499 162.41891479]
[-0.10491826 153.59475708]
[-1.41604531 137.60537720]
[10.36575890 126.71644592]
[26.20250130 129.28103638]
[39.10571671 121.63204956]
[52.00893402 113.98306274]
[64.91214752 106.33407593]
[66.18172455 93.63439178]
[71.73451233 82.64294434]
[80.54042816 74.68937683]
[91.20258331 70.60451508]
[102.17239380 70.63938904]
[111.97251892 74.46984100]
[121.72407532 63.07216644]
[131.47563171 51.67448807]
[141.22720337 40.27681351]
[150.97875977 28.87913513]
[160.73031616 17.48145676]
[163.82272339 1.96541286]
[177.97592163 -2.67529249]
[187.72747803 -14.07297039]
[173.27354431 -10.06250763]
[158.49351501 -12.62186909]
[146.22964478 -21.25887299]
[138.84039307 -34.31256866]
[137.74674988 -49.27264404]
[143.15902710 -63.26218796]
[154.03640747 -73.59091949]
[168.28709412 -78.27255249]
[183.17060852 -76.40679169]
[195.82473755 -68.35242462]
[203.81602478 -55.65835571]
[205.60769653 -40.76574326]
[200.85427856 -26.53701019]
[212.74142456 -35.68553925]
[224.62858582 -44.83406830]
[236.51573181 -53.98260117]
[248.40289307 -63.13113022]
[260.29003906 -72.27966309]
[272.17718506 -81.42819214]
[284.06433105 -90.57672119]
[295.95150757 -99.72525024]
[307.83865356 -108.87377930]
[319.72579956 -118.02230835]
[331.61294556 -127.17083740]
[328.15457153 -146.82272339]
[335.21112061 -165.34416199]
[350.65930176 -177.54707336]
[347.57440186 -192.22642517]
[344.48950195 -206.90577698]
[329.74676514 -211.01797485]
[318.61169434 -221.51889038]
[313.64306641 -235.99546814]
[315.98263550 -251.12110901]
[325.09277344 -263.42004395]
[338.88003540 -270.06607056]
[354.17623901 -269.53201294]
[367.46636963 -261.94052124]
[375.69653320 -249.03613281]
[376.97543335 -233.78414917]
[371.00918579 -219.68937683]
[359.16885376 -209.99067688]
[362.25375366 -195.31132507]
[365.33865356 -180.63197327]
[377.08560181 -178.74266052]
[387.62066650 -173.21342468]
[395.84857178 -164.61912537]
[409.68188477 -170.41912842]
[423.51516724 -176.21913147]
[437.34844971 -182.01911926]
[451.18176270 -187.81912231]
[457.90719604 -194.03938293]
[465.30422974 -193.59757996]
[479.23556519 -199.15794373]
[493.16690063 -204.71830750]
[507.09826660 -210.27867126]
[521.02960205 -215.83903503]
[534.96093750 -221.39939880]
[548.89227295 -226.95976257]
[552.80932617 -241.85818481]
[564.61004639 -251.48091125]
[579.63647461 -252.30010986]
[592.11456299 -244.21090698]
[602.06341553 -256.51257324]
[616.75207520 -254.04438782]
[630.68341064 -259.60476685]
[644.61474609 -265.16513062]
[648.54443359 -281.60397339]
[661.36468506 -292.36196899]
[677.90466309 -293.35821533]
[691.64532471 -284.39816284]
[705.47857666 -290.19815063]
[719.31188965 -295.99816895]
[733.14520264 -301.79815674]
[745.41442871 -313.49868774]
[760.05413818 -304.94796753]
[755.89025879 -288.51327515]
[738.94519043 -287.96487427]
[725.11187744 -282.16485596]
[711.27856445 -276.36486816]
[697.44531250 -270.56484985]
[695.59881592 -257.32797241]
[687.38171387 -246.65037537]
[674.85937500 -241.39160156]
[661.26733398 -243.02656555]
[650.17510986 -251.23377991]
[636.24377441 -245.67341614]
[622.31243896 -240.11305237]
[613.36004639 -228.20909119]
[597.67492676 -230.27955627]
[594.19604492 -215.82150269]
[582.73516846 -206.06893921]
[567.55169678 -204.92158508]
[554.45263672 -213.02842712]
[540.52130127 -207.46806335]
[526.58996582 -201.90768433]
[512.65863037 -196.34732056]
[498.72726440 -190.78695679]
[484.79592896 -185.22659302]
[470.86459351 -179.66622925]
[456.98175049 -173.98583984]
[443.14846802 -168.18583679]
[429.31518555 -162.38583374]
[415.48187256 -156.58583069]
[401.64859009 -150.78582764]
[401.95468140 -137.77841187]
[397.72103882 -125.43531036]
[389.44772339 -115.29531860]
[378.13998413 -108.63219452]
[365.18640137 -106.29465485]
[352.18820190 -108.59838867]
[340.76147461 -115.28369141]
[328.87432861 -106.13515472]
[316.98718262 -96.98662567]
[305.10003662 -87.83809662]
[293.21286011 -78.68956757]
[281.32571411 -69.54103851]
[269.43856812 -60.39250565]
[257.55142212 -51.24397659]
[245.66426086 -42.09544754]
[233.77711487 -32.94691849]
[221.88995361 -23.79838753]
[210.00280762 -14.64985657]
[199.12516785 -4.32140875]
[189.37359619 7.07626867]
[186.97869873 21.77707481]
[172.12800598 27.23301888]
[162.37643433 38.63069534]
[152.62487793 50.02837372]
[142.87332153 61.42605209]
[133.12174988 72.82373047]
[123.37019348 84.22140503]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 23]
[3 22]
[4 21]
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[24 36]
[25 35]
[26 34]
[27 33]
[42 181]
[43 180]
[44 179]
[45 178]
[46 177]
[47 176]
[49 174]
[50 173]
[63 172]
[64 171]
[65 170]
[66 169]
[67 168]
[68 167]
[69 166]
[70 165]
[71 164]
[72 163]
[73 162]
[74 161]
[77 93]
[78 92]
[79 91]
[96 154]
[97 153]
[98 152]
[99 151]
[100 150]
[102 149]
[103 148]
[104 147]
[105 146]
[106 145]
[107 144]
[108 143]
[112 139]
[114 137]
[115 136]
[116 135]
[120 130]
[121 129]
[122 128]
[123 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
