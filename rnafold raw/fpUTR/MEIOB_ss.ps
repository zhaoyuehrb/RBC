%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGAGGACGGGGCGGGGCCUCGCGCUAACGGUCGCGCGGCCGUCGCACCUGCACGAGGCUGUGGCCCGAGCGUCCUGUGGAGAAGCCGCGAAGCGCGGGCGACCCGGGGGUCGGGCGGGCCAGGUCCGCGAGGCCGCGGCGGCAGCUGUGCAGGCCCGGGGAGCAGCCGGCCGGGCGAGCCUCGGAUUAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[93.58715057 113.87961578]
[81.14859772 122.26308441]
[68.71005249 130.64654541]
[65.56699371 145.90298462]
[52.83310699 154.22781372]
[38.30779266 151.13737488]
[35.16473770 166.39381409]
[22.43085289 174.71864319]
[7.90553951 171.62820435]
[-4.53301096 180.01165771]
[-16.97156143 188.39512634]
[-29.41011238 196.77859497]
[-41.78107452 205.26147461]
[-54.08366013 213.84321594]
[-66.38624573 222.42497253]
[-78.68882751 231.00671387]
[-90.92224121 239.68678284]
[-103.08570099 248.46461487]
[-115.24915314 257.24246216]
[-127.41261292 266.02029419]
[-134.07534790 280.37014771]
[-148.92364502 281.54385376]
[-161.08709717 290.32168579]
[-173.25054932 299.09951782]
[-185.41400146 307.87734985]
[-197.50672913 316.75238037]
[-209.52792358 325.72402954]
[-218.60525513 340.04321289]
[-234.87767029 335.28457642]
[-234.80966187 318.33074951]
[-218.49958801 313.70281982]
[-206.47837830 304.73117065]
[-202.99386597 298.20285034]
[-194.19183350 295.71389771]
[-182.02838135 286.93606567]
[-169.86492920 278.15823364]
[-157.70147705 269.38040161]
[-151.90873718 255.65838623]
[-136.19044495 253.85682678]
[-124.02698517 245.07899475]
[-111.86352539 236.30116272]
[-99.70007324 227.52333069]
[-96.11137390 221.05171204]
[-87.27057648 218.70413208]
[-74.96799469 210.12239075]
[-62.66540909 201.54063416]
[-50.36282730 192.95889282]
[-46.67086029 186.54562378]
[-37.79357529 184.34004211]
[-25.35502434 175.95657349]
[-12.91647434 167.57312012]
[-0.47792411 159.18965149]
[2.10836244 144.56614685]
[14.60339546 135.88693237]
[29.92433167 138.69882202]
[32.51061630 124.07532501]
[45.00564957 115.39611053]
[60.32658386 118.20799255]
[72.76513672 109.82453156]
[85.20368958 101.44107056]
[85.62905884 96.11698914]
[87.91053772 91.27982330]
[80.97246552 77.98083496]
[67.72946930 69.32440948]
[68.70250702 54.46162033]
[61.76443100 41.16263199]
[54.82635498 27.86364174]
[47.88828278 14.56465244]
[40.95020676 1.26566315]
[27.70721436 -7.39076233]
[28.68025017 -22.25355148]
[21.74217415 -35.55253983]
[9.90917397 -36.84473801]
[0.27121171 -43.62398911]
[-4.83943748 -54.10813904]
[-4.25483370 -65.63683319]
[1.76379895 -75.34629822]
[-4.74445724 -88.86083221]
[-11.25271320 -102.37536621]
[-17.76096916 -115.88990021]
[-24.26922607 -129.40443420]
[-38.87615585 -136.03897095]
[-42.65645599 -151.63027954]
[-32.71020126 -164.21804810]
[-16.66731071 -164.14599609]
[-6.83451462 -151.46942139]
[-10.75469208 -135.91268921]
[-4.24643612 -122.39815521]
[2.26181984 -108.88362122]
[8.77007580 -95.36908722]
[15.27833176 -81.85456085]
[32.88347626 -76.87001038]
[41.41180801 -60.32211304]
[35.04116440 -42.49061584]
[41.97924042 -29.19162560]
[54.72597504 -21.48643112]
[54.24919891 -5.67241144]
[61.18727112 7.62657833]
[68.12534332 20.92556763]
[75.06342316 34.22455597]
[82.00149536 47.52354813]
[94.74822998 55.22874069]
[94.27145386 71.04276276]
[101.20952606 84.34175110]
[114.21990204 91.80702209]
[129.20256042 91.08601379]
[144.18522644 90.36500549]
[159.16787720 89.64400482]
[174.15054321 88.92299652]
[189.13320923 88.20198822]
[202.54551697 79.81030273]
[215.62998962 86.92689514]
[230.61265564 86.20588684]
[245.59530640 85.48487854]
[260.55630493 84.40389252]
[275.48699951 82.96354675]
[290.41769409 81.52320099]
[303.41113281 72.49652100]
[316.82254028 78.97595978]
[331.75323486 77.53561401]
[346.68392944 76.09526825]
[355.48043823 66.65099335]
[367.95431519 65.76492310]
[377.37280273 73.36804962]
[390.50924683 64.55078888]
[403.81509399 71.24434662]
[418.76693726 70.04349518]
[433.71881104 68.84264374]
[446.85525513 60.02537537]
[460.16110229 66.71893311]
[475.11294556 65.51808167]
[483.42864990 61.70758057]
[490.31375122 64.41976929]
[505.28292847 63.45871353]
[520.25213623 62.49766159]
[535.22131348 61.53660965]
[550.16302490 60.21596527]
[565.06872559 58.53649902]
[579.97442627 56.85703278]
[594.88006592 55.17756271]
[609.78576660 53.49809647]
[622.65197754 43.32989883]
[637.78900146 49.63889313]
[639.62512207 65.93492126]
[626.27154541 75.45403290]
[611.46527100 68.40377808]
[596.55957031 70.08324432]
[581.65386963 71.76271820]
[566.74816895 73.44218445]
[551.84252930 75.12165070]
[549.36572266 77.64763641]
[545.53747559 79.09333038]
[540.88171387 78.83448792]
[536.18237305 76.50579071]
[521.21319580 77.46684265]
[506.24398804 78.42789459]
[491.27481079 79.38894653]
[476.31381226 80.46994019]
[461.36193848 81.67079163]
[449.29495239 90.40216064]
[434.91964722 83.79449463]
[419.96780396 84.99534607]
[405.01593018 86.19620514]
[392.94894409 94.92757416]
[378.57363892 88.31990814]
[364.69265747 99.04833221]
[348.12426758 91.02595520]
[333.19357300 92.46630096]
[318.26287842 93.90664673]
[306.33740234 102.83029938]
[291.85803223 96.45388794]
[276.92733765 97.89423370]
[261.99664307 99.33457947]
[259.47967529 101.82054138]
[255.62875366 103.20469666]
[250.97776794 102.87126923]
[246.31631470 100.46754456]
[231.33364868 101.18855286]
[216.35099792 101.90955353]
[204.01034546 110.24967194]
[189.85421753 103.18465424]
[174.87155151 103.90565491]
[159.88888550 104.62666321]
[144.90623474 105.34767151]
[129.92356873 106.06867981]
[114.94090271 106.78968048]
[129.21691895 111.39353943]
[139.51829529 122.29682159]
[143.30493164 136.81100464]
[139.64312744 151.35717773]
[129.43580627 162.34855652]
[115.19986725 167.07489014]
[100.44562531 164.37075806]
[88.81116486 154.90295410]
[83.16531372 141.00604248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 60]
[2 59]
[3 58]
[6 55]
[9 52]
[10 51]
[11 50]
[12 49]
[13 47]
[14 46]
[15 45]
[16 44]
[17 42]
[18 41]
[19 40]
[20 39]
[22 37]
[23 36]
[24 35]
[25 34]
[26 32]
[27 31]
[62 104]
[63 103]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[71 95]
[72 94]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[105 186]
[106 185]
[107 184]
[108 183]
[109 182]
[110 181]
[112 179]
[113 178]
[114 177]
[115 173]
[116 172]
[117 171]
[119 169]
[120 168]
[121 167]
[124 165]
[126 163]
[127 162]
[128 161]
[130 159]
[131 158]
[133 157]
[134 156]
[135 155]
[136 154]
[137 150]
[138 149]
[139 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
