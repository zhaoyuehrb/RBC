%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUACCAUAGCGACGUGCACGCAGUAGCCAGGCCUGACCCGCUGGUCCCUUGCUGGCGGGAGGAAAGAGGCGGCACCAUGAGCCACGCAGUAACCAUCGAGGAGCCCCAGGCCCAGCCGCAGGUGUCUCAAACUCGGUACCGGGAGAGGUCGCGGGCUGGGAGCCACAUCUCCUCCAAUCGAGCGU\
) } def
/len { sequence length } bind def

/coor [
[176.84580994 109.43930054]
[161.85057068 109.06134033]
[146.85533142 108.68338013]
[131.86009216 108.30542755]
[116.86485291 107.92746735]
[111.40596008 114.73675537]
[103.44540405 118.31385040]
[94.72917175 117.87418365]
[87.16899109 113.51418304]
[82.42301941 106.19013214]
[67.46586609 105.05721283]
[52.50870895 103.92429352]
[42.22229767 111.72844696]
[29.77562332 110.46421051]
[21.79776573 101.35394287]
[12.94275761 103.68150330]
[6.62318850 99.81915283]
[-8.28746605 98.18441010]
[-22.84867287 104.37163544]
[-34.65690231 95.29337311]
[-49.56755829 93.65863037]
[-61.82168961 103.27497101]
[-76.91992188 101.40470123]
[-86.01211548 89.66299438]
[-100.92277527 88.02825165]
[-109.81563568 90.20672607]
[-116.06942749 86.23875427]
[-130.95051575 84.35375977]
[-145.83160400 82.46875763]
[-152.09677124 84.68379974]
[-157.69371033 83.55656433]
[-161.17776489 80.26231384]
[-175.98713684 77.87847137]
[-190.79649353 75.49462128]
[-205.60586548 73.11077881]
[-222.23706055 87.19586945]
[-243.57571411 84.47632599]
[-255.81610107 67.13228607]
[-270.77325439 65.99936676]
[-285.73040771 64.86644745]
[-300.68756104 63.73353195]
[-315.64471436 62.60061646]
[-330.60186768 61.46769714]
[-345.55902100 60.33478165]
[-360.51617432 59.20186234]
[-375.47332764 58.06894684]
[-388.52993774 67.39120483]
[-403.91894531 62.85707474]
[-409.83520508 47.94475174]
[-401.74029541 34.09369278]
[-385.84390259 31.92924690]
[-374.34042358 43.11178970]
[-359.38327026 44.24470901]
[-344.42611694 45.37762451]
[-329.46896362 46.51054382]
[-314.51181030 47.64345932]
[-299.55465698 48.77637863]
[-284.59750366 49.90929413]
[-269.64031982 51.04221344]
[-254.68318176 52.17512894]
[-250.39555359 44.63921356]
[-243.85289001 38.88388443]
[-235.75122070 35.55919647]
[-226.96487427 35.05459213]
[-218.45210266 37.45352173]
[-211.15055847 42.52120590]
[-205.87409973 49.72732925]
[-203.22201538 58.30141449]
[-188.41265869 60.68525696]
[-173.60328674 63.06910324]
[-158.79393005 65.45294952]
[-143.94660950 67.58766937]
[-129.06552124 69.47267151]
[-114.18442535 71.35766602]
[-99.28803253 73.11759949]
[-84.37737274 74.75234222]
[-72.95711517 65.25953674]
[-57.81230545 66.70499420]
[-47.93281555 78.74797058]
[-33.02215958 80.38271332]
[-19.52746391 74.07855988]
[-6.65272331 83.27375031]
[8.25793171 84.90849304]
[23.18179131 86.41793060]
[38.69358826 78.23017120]
[53.64162445 88.96714020]
[68.59877777 90.10005951]
[83.55593872 91.23297119]
[100.93881226 81.38853455]
[117.24281311 92.93222809]
[132.23805237 93.31018829]
[147.23329163 93.68814850]
[162.22853088 94.06610870]
[177.22375488 94.44406128]
[187.12043762 75.33013153]
[205.23669434 63.84056854]
[226.60264587 63.04193878]
[245.39976501 73.07955170]
[256.54541016 91.15751648]
[271.45605469 89.52277374]
[286.36669922 87.88803101]
[301.27734375 86.25328827]
[316.18801880 84.61854553]
[331.09866333 82.98380280]
[336.06448364 69.89483643]
[346.14038086 60.27157211]
[359.31781006 55.95343781]
[373.00363159 57.73009109]
[384.53057861 65.19770813]
[391.67691040 76.84895325]
[406.61291504 75.46492767]
[421.54891968 74.08090210]
[436.45959473 72.44615936]
[451.34066772 70.56115723]
[466.22177124 68.67616272]
[481.10284424 66.79116058]
[495.98394775 64.90616608]
[510.86502075 63.02116776]
[519.00537109 58.83030701]
[526.01165771 61.23166656]
[531.58819580 57.61759186]
[537.29370117 57.40950394]
[541.44952393 59.80113983]
[556.40667725 58.66822433]
[571.36383057 57.53530502]
[586.31091309 56.27679062]
[601.24694824 54.89276505]
[616.18298340 53.50873947]
[631.11895752 52.12471390]
[637.58978271 43.34916687]
[647.61981201 39.67036819]
[657.80218506 42.08001709]
[664.81817627 49.54394913]
[679.79223633 48.66246033]
[694.76635742 47.78097153]
[709.74041748 46.89947891]
[723.13104248 37.43250275]
[737.90972900 44.54043198]
[738.87341309 60.91123962]
[725.03076172 69.70404053]
[710.62188721 61.87355804]
[695.64782715 62.75504684]
[680.67376709 63.63653564]
[665.69964600 64.51802826]
[650.39556885 76.31649017]
[632.50299072 67.06072998]
[617.56701660 68.44475555]
[602.63098145 69.82877350]
[587.69494629 71.21279907]
[581.31140137 74.96844482]
[572.49676514 72.49246216]
[557.53961182 73.62538147]
[542.58245850 74.75829315]
[527.64642334 76.14231873]
[512.75000000 77.90225220]
[497.86892700 79.78725433]
[482.98785400 81.67224884]
[468.10675049 83.55725098]
[453.22567749 85.44224548]
[438.34457397 87.32724762]
[434.75183105 90.50259399]
[429.12017822 91.44117737]
[422.93295288 89.01691437]
[407.99694824 90.40093994]
[393.06094360 91.78496552]
[386.67498779 106.61811829]
[373.60836792 116.26718140]
[357.36630249 118.02613068]
[342.36557007 111.32153320]
[332.73339844 97.89446259]
[317.82275391 99.52920532]
[302.91210938 101.16394806]
[288.00143433 102.79869080]
[273.09078979 104.43343353]
[258.18014526 106.06817627]
[256.53289795 114.99467468]
[252.94189453 123.34419250]
[247.58123779 130.69862366]
[240.71383667 136.68841553]
[232.67845154 141.01116943]
[223.87298584 143.44688416]
[214.73481750 143.86914062]
[205.71905518 142.25169373]
[197.27587891 138.66998291]
[189.82801819 133.29766846]
[183.74966431 126.39821625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 94]
[2 93]
[3 92]
[4 91]
[5 90]
[10 88]
[11 87]
[12 86]
[15 84]
[17 83]
[18 82]
[20 80]
[21 79]
[24 76]
[25 75]
[27 74]
[28 73]
[29 72]
[32 71]
[33 70]
[34 69]
[35 68]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[99 175]
[100 174]
[101 173]
[102 172]
[103 171]
[104 170]
[110 165]
[111 164]
[112 163]
[113 160]
[114 159]
[115 158]
[116 157]
[117 156]
[118 155]
[120 154]
[123 153]
[124 152]
[125 151]
[126 149]
[127 148]
[128 147]
[129 146]
[133 144]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
