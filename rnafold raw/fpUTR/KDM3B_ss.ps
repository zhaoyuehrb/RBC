%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGCCCAGGCUGCGGCUCCGCUCCCGGCCACGGGGGGCGCUGCGCUGCGCCGGUGGUUGGUGGUGGCUGUUGGGGGGGGUGGGGGGGAACGGCGGCCGCGGGUGGUGCGGAGGGAGGCCUUGCGGGCGGAUCGGGCGCUUGGCGGCGGAGGUGGUGGGAGGCGGCGGGCGGGAGCGCGGGUCAGGCCGGCCCCGGCG\
) } def
/len { sequence length } bind def

/coor [
[84.35279846 488.62673950]
[94.24463654 475.99615479]
[93.77581787 461.00347900]
[93.30699921 446.01083374]
[92.83818817 431.01815796]
[92.36936951 416.02548218]
[91.90055084 401.03280640]
[91.43173218 386.04013062]
[88.61992645 382.17062378]
[88.21450043 376.49185181]
[91.18996429 370.57315063]
[91.18996429 355.57315063]
[91.18996429 340.57315063]
[91.18996429 325.57315063]
[82.85854340 316.79608154]
[82.74057007 304.29409790]
[91.44503021 294.76879883]
[91.67946625 279.77062988]
[91.91390228 264.77246094]
[92.14833832 249.77429199]
[92.38277435 234.77612305]
[92.50000000 219.77658081]
[92.50000000 204.77658081]
[92.50000000 189.77658081]
[92.50000000 174.77658081]
[92.50000000 159.77658081]
[92.50000000 144.77658081]
[92.50000000 129.77658081]
[92.50000000 114.77657318]
[87.77565002 100.53998566]
[78.80782318 88.51592255]
[69.84000397 76.49185181]
[62.19441605 71.47844696]
[60.82772827 64.20905304]
[52.04892731 52.04629517]
[37.69853592 45.38470078]
[36.52364731 30.53650665]
[27.74484634 18.37375069]
[18.96604538 6.21099377]
[10.18724346 -5.95176268]
[1.40844226 -18.11451912]
[-6.15785360 -23.24680519]
[-7.41076136 -30.53667450]
[-15.99839687 -42.83515167]
[-30.24291992 -49.72021866]
[-31.18559837 -64.58496094]
[-48.03893661 -71.99501038]
[-48.87141800 -89.52079773]
[-57.65021896 -101.68355560]
[-66.42901611 -113.84631348]
[-75.20781708 -126.00907135]
[-83.98662567 -138.17182922]
[-92.76542664 -150.33457947]
[-101.54422760 -162.49732971]
[-110.32302856 -174.66009521]
[-114.36254883 -176.30197144]
[-117.36350250 -178.88688660]
[-119.15666199 -181.97094727]
[-119.73489380 -185.10096741]
[-119.24211884 -187.86834717]
[-127.24385834 -200.55583191]
[-141.15000916 -208.10099792]
[-141.39491272 -222.99359131]
[-149.39665222 -235.68107605]
[-157.39839172 -248.36856079]
[-165.40013123 -261.05603027]
[-173.40187073 -273.74353027]
[-187.30801392 -281.28869629]
[-187.55290222 -296.18127441]
[-195.55464172 -308.86874390]
[-203.55638123 -321.55624390]
[-211.55812073 -334.24371338]
[-219.55986023 -346.93121338]
[-227.56159973 -359.61868286]
[-242.37016296 -356.38104248]
[-257.39257812 -358.40658569]
[-270.81481934 -365.45065308]
[-281.01611328 -376.66268921]
[-286.76452637 -390.68878174]
[-287.36599731 -405.83520508]
[-282.74783325 -420.27294922]
[-273.46774292 -432.25860596]
[-260.64633179 -440.34481812]
[-245.83181763 -443.55514526]
[-230.81315613 -441.50195312]
[-217.40391541 -434.43313599]
[-207.22332764 -423.20233154]
[-201.50074768 -409.16564941]
[-200.92720032 -394.01815796]
[-205.57196045 -379.58892822]
[-214.87413025 -367.62042236]
[-206.87239075 -354.93295288]
[-198.87065125 -342.24545288]
[-190.86891174 -329.55798340]
[-182.86717224 -316.87048340]
[-174.86543274 -304.18301392]
[-161.53161621 -297.54534912]
[-160.71438599 -281.74523926]
[-152.71264648 -269.05776978]
[-144.71090698 -256.37030029]
[-136.70916748 -243.68281555]
[-128.70742798 -230.99533081]
[-115.37361145 -224.35765076]
[-114.55638123 -208.55757141]
[-106.55464172 -195.87008667]
[-98.16027069 -183.43888855]
[-89.38146973 -171.27613831]
[-80.60266876 -159.11338806]
[-71.82386780 -146.95062256]
[-63.04506302 -134.78787231]
[-54.26626205 -122.62511444]
[-45.48746109 -110.46235657]
[-36.70866013 -98.29959869]
[-24.81632233 -96.05870819]
[-17.40383911 -85.99052429]
[-18.88712120 -73.17259979]
[-5.25684261 -67.16719818]
[-3.69991994 -51.42278671]
[4.88771534 -39.12430954]
[13.57119846 -26.89332008]
[22.35000038 -14.73056412]
[31.12880135 -2.56780767]
[39.90760422 9.59494877]
[48.68640518 21.75770569]
[62.40887833 27.54933739]
[64.21168518 43.26749420]
[72.99048615 55.43025208]
[81.86406708 67.52403259]
[90.83188629 79.54809570]
[99.79971313 91.57216644]
[102.91548157 88.56790924]
[107.57722473 86.86277771]
[113.25158691 87.04282379]
[119.21286774 89.48645782]
[134.19042969 90.30661011]
[148.39300537 83.33544159]
[160.67819214 91.75705719]
[174.88076782 84.78588104]
[187.16595459 93.20749664]
[202.14350891 94.02765656]
[217.12107849 94.84780884]
[232.09863281 95.66796875]
[247.07620239 96.48812103]
[264.62081909 86.57168579]
[280.34640503 97.81504059]
[295.34225464 98.16667938]
[309.32003784 90.75501251]
[321.86242676 98.78855133]
[336.85830688 99.14019012]
[350.98138428 90.80527496]
[365.12615967 99.10327148]
[364.74172974 115.49791718]
[350.22354126 123.12379456]
[336.50665283 114.13606262]
[321.51077271 113.78442383]
[308.60562134 121.22123718]
[294.99063110 113.16255188]
[279.99475098 112.81091309]
[273.25888062 120.50786591]
[263.18569946 123.28063965]
[253.04190063 119.97936249]
[246.25604248 111.46568298]
[231.27847290 110.64553070]
[216.30091858 109.82537079]
[201.32336426 109.00521851]
[186.34579468 108.18505859]
[173.21450806 115.21489716]
[159.85803223 106.73461914]
[146.72674561 113.76445007]
[133.37026978 105.28417206]
[118.39271545 104.46401978]
[107.50000000 114.77657318]
[107.50000000 129.77658081]
[107.50000000 144.77658081]
[107.50000000 159.77658081]
[107.50000000 174.77658081]
[107.50000000 189.77658081]
[107.50000000 204.77658081]
[107.50000000 219.77658081]
[110.63144684 228.36628723]
[107.38094330 235.01055908]
[107.14650726 250.00872803]
[106.91207123 265.00689697]
[106.67763519 280.00506592]
[106.44319153 295.00323486]
[115.77197266 310.87515259]
[106.18996429 325.57315063]
[106.18996429 340.57315063]
[106.18996429 355.57315063]
[106.18996429 370.57315063]
[106.42440033 385.57131958]
[106.89321899 400.56399536]
[107.36203766 415.55667114]
[107.83085632 430.54931641]
[108.29967499 445.54199219]
[108.76849365 460.53466797]
[109.23731232 475.52734375]
[119.89896393 487.51519775]
[117.03202820 503.30001831]
[102.83576965 510.77301025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[3 196]
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[11 190]
[12 189]
[13 188]
[14 187]
[17 185]
[18 184]
[19 183]
[20 182]
[21 181]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[27 174]
[28 173]
[29 172]
[30 130]
[31 129]
[32 128]
[34 127]
[35 126]
[37 124]
[38 123]
[39 122]
[40 121]
[41 120]
[43 119]
[44 118]
[46 116]
[48 113]
[49 112]
[50 111]
[51 110]
[52 109]
[53 108]
[54 107]
[55 106]
[60 105]
[61 104]
[63 102]
[64 101]
[65 100]
[66 99]
[67 98]
[69 96]
[70 95]
[71 94]
[72 93]
[73 92]
[74 91]
[134 171]
[135 170]
[137 168]
[139 166]
[140 165]
[141 164]
[142 163]
[143 162]
[145 158]
[146 157]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
