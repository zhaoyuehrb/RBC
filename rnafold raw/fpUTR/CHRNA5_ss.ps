%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUGCGUCCCGAGCCCGCCAGAAGCUGCUAGGCUGAGGCUGCUGUCCCGGCGGGAGCUGUGGCGCGGAGCGGCCCCUCUGCUGCGUCUGCCCUCGUUUUGUCUCACGACUCACACUCAGUGCUCCAUUCCCCAAGAGUUCGCGUUCCCCGCGCGGCGGUCGAGAGGCGGCUGCCCGCGGUCCCGCGCGGGCGCGGGGCG\
) } def
/len { sequence length } bind def

/coor [
[99.57015991 311.50463867]
[87.61094666 321.83676147]
[71.85489655 320.60293579]
[61.64978790 308.53515625]
[63.05013275 292.79302979]
[75.22513580 282.71606445]
[76.39617920 267.76184082]
[77.56722260 252.80763245]
[78.73826599 237.85342407]
[79.90930939 222.89920044]
[81.08035278 207.94497681]
[82.25139618 192.99076843]
[75.53131866 179.69828796]
[84.32238007 166.54428101]
[85.49342346 151.59005737]
[86.66446686 136.63584900]
[87.83551025 121.68162537]
[76.17094421 112.25093079]
[61.79365540 116.52801514]
[47.41636276 120.80510712]
[33.03907013 125.08219147]
[26.21912575 136.03608704]
[14.15003777 139.29957581]
[3.44874549 133.64877319]
[-10.99363804 137.70062256]
[-25.43602180 141.75248718]
[-39.87840652 145.80433655]
[-51.07553482 156.98176575]
[-65.41970825 152.97004700]
[-79.86209106 157.02189636]
[-84.75702667 161.48553467]
[-90.33421326 162.62915039]
[-94.81940460 160.96713257]
[-109.38137054 164.56561279]
[-123.94333649 168.16410828]
[-138.50531006 171.76258850]
[-150.04631042 182.58459473]
[-164.25808716 178.12651062]
[-178.82005310 181.72500610]
[-193.38201904 185.32348633]
[-204.82080078 197.07450867]
[-220.64819336 192.78199768]
[-224.58235168 176.86175537]
[-212.57612610 165.69113159]
[-196.98051453 170.76152039]
[-182.41854858 167.16302490]
[-167.85658264 163.56454468]
[-157.35714722 152.99992371]
[-142.10379028 157.20062256]
[-127.54183197 153.60214233]
[-112.97985840 150.00364685]
[-98.41789246 146.40515137]
[-83.91394806 142.57951355]
[-69.47156525 138.52766418]
[-59.30745316 127.64004517]
[-43.93026352 131.36195374]
[-29.48788071 127.31010437]
[-15.04549694 123.25823975]
[-0.60311347 119.20638275]
[10.96016788 106.01029968]
[28.76198387 110.70490265]
[43.13927460 106.42781067]
[57.51656723 102.15072632]
[71.89385986 97.87364197]
[76.17094421 83.49634552]
[66.46939850 72.05606842]
[56.76784897 60.61579132]
[47.06629944 49.17551422]
[37.36475372 37.73523712]
[27.57409668 26.37112427]
[17.69492912 15.08387184]
[7.81576395 3.79661846]
[-2.06340170 -7.49063444]
[-11.94256783 -18.77788734]
[-27.72665405 -19.57673073]
[-38.26068497 -31.35848427]
[-37.29500961 -47.13324356]
[-25.40254211 -57.54212189]
[-9.63887405 -56.40971756]
[0.64368874 -44.40786743]
[-0.65531445 -28.65705299]
[9.22385120 -17.36980057]
[19.10301781 -6.08254719]
[28.98218346 5.20470572]
[38.86134720 16.49195862]
[45.63776779 19.45711327]
[48.80503082 28.03368759]
[58.50657654 39.47396469]
[68.20812988 50.91424179]
[77.90967560 62.35452271]
[87.61122131 73.79479980]
[94.69173431 71.32165527]
[108.85274506 66.37537384]
[115.93325043 63.90223694]
[116.40206909 48.90956497]
[116.87088776 33.91689301]
[117.33970642 18.92421913]
[104.99526215 9.52238846]
[100.56691742 -5.34937525]
[105.75745392 -19.97257423]
[118.57099915 -28.72429276]
[134.08049011 -28.23931313]
[146.32221985 -18.70412254]
[150.58897400 -3.78519464]
[145.24011230 10.78083801]
[132.33238220 19.39303780]
[131.86355591 34.38570786]
[131.39474487 49.37837982]
[130.92591858 64.37105560]
[137.56265259 67.86445618]
[144.54945374 54.59100723]
[151.53627014 41.31755829]
[158.52308655 28.04410934]
[165.51010132 14.77076817]
[178.78332520 21.75798988]
[171.79652405 35.03092194]
[164.80972290 48.30437088]
[157.82290649 61.57781982]
[150.83609009 74.85127258]
[157.47282410 78.34467316]
[164.02206421 63.94266510]
[178.86062622 62.65177536]
[190.95440674 53.77819443]
[203.04818726 44.90460968]
[215.14196777 36.03102875]
[213.38519287 20.77293777]
[219.50753784 6.68704367]
[231.86213684 -2.43762088]
[247.12565613 -4.14656639]
[261.19229126 2.01990461]
[270.27819824 14.40304279]
[271.93927002 29.67184448]
[265.72872925 43.71908188]
[253.31718445 52.76611710]
[238.04325867 54.37934113]
[224.01554871 48.12480927]
[211.92176819 56.99839020]
[199.82798767 65.87197113]
[187.73420715 74.74555969]
[182.04998779 88.51287079]
[166.34640503 90.43845367]
[167.75102234 105.37254333]
[181.28727722 111.83550262]
[194.82353210 118.29845428]
[208.35978699 124.76141357]
[223.11230469 116.49529266]
[239.72042847 118.62700653]
[251.66764832 130.12054443]
[254.38533020 146.30603027]
[268.02093506 152.55664062]
[281.65655518 158.80723572]
[295.29217529 165.05784607]
[308.92779541 171.30845642]
[318.04107666 172.04124451]
[322.72647095 177.76478577]
[336.26272583 184.22773743]
[349.79898071 190.69070435]
[363.33523560 197.15365601]
[376.87149048 203.61660767]
[390.40774536 210.07957458]
[403.94400024 216.54252625]
[417.48025513 223.00547791]
[433.02377319 219.03321838]
[445.73321533 228.82350159]
[445.85897827 244.86607361]
[433.30462646 254.85441589]
[417.70074463 251.12635803]
[411.01730347 236.54173279]
[397.48104858 230.07878113]
[383.94479370 223.61582947]
[370.40853882 217.15286255]
[356.87228394 210.68991089]
[343.33602905 204.22695923]
[329.79977417 197.76399231]
[316.26351929 191.30104065]
[302.67718506 184.94406128]
[289.04156494 178.69346619]
[275.40594482 172.44285583]
[261.77032471 166.19224548]
[248.13471985 159.94165039]
[237.15393066 167.54321289]
[223.74320984 168.73379517]
[211.39802551 163.09562683]
[203.38928223 152.00495911]
[201.89683533 138.29766846]
[188.36058044 131.83471680]
[174.82432556 125.37175751]
[161.28807068 118.90879822]
[102.78972626 122.85266876]
[101.61868286 137.80688477]
[100.44763947 152.76110840]
[99.27659607 167.71533203]
[105.91291046 182.07742310]
[97.20561218 194.16180420]
[96.03456879 209.11602783]
[94.86352539 224.07023621]
[93.69248199 239.02445984]
[92.52143860 253.97868347]
[91.35039520 268.93289185]
[90.17935181 283.88711548]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[14 192]
[15 191]
[16 190]
[17 189]
[18 64]
[19 63]
[20 62]
[21 61]
[24 59]
[25 58]
[26 57]
[27 56]
[29 54]
[30 53]
[33 52]
[34 51]
[35 50]
[36 49]
[38 47]
[39 46]
[40 45]
[65 91]
[66 90]
[67 89]
[68 88]
[69 87]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[94 109]
[95 108]
[96 107]
[97 106]
[120 141]
[122 139]
[123 138]
[124 137]
[125 136]
[142 188]
[143 187]
[144 186]
[145 185]
[149 180]
[150 179]
[151 178]
[152 177]
[153 176]
[155 175]
[156 174]
[157 173]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
