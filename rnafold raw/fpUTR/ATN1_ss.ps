%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCCAUACUGGACGCCAAGUGGGAGGAACUUCAAGGCUGUCCCCUGCGGGCCUCCCGCUCUGCUUCUGCGAAGGUUUCAUUGAAAACAGAUCCUGCAAAAGUUCCAGGUGCCCACACUGGAAACUUGGAGAUCCUGCUUCCCAGACCACAGCUGUGGGGAACUUGGGGUGGAGCAGAGAAGUUUCUGUAUUCAGCUGCCCAGGCAGAGGAGAAUGGGGUCUCCACAGCCUGAAGA\
) } def
/len { sequence length } bind def

/coor [
[29.05607986 351.16812134]
[18.39635849 359.36804199]
[5.18493462 361.21954346]
[7.00031567 376.93624878]
[-5.04750013 385.69406128]
[-10.83345222 399.53323364]
[-11.25361252 408.63909912]
[-16.78819275 413.51611328]
[-22.75631332 427.27770996]
[-28.72443199 441.03930664]
[-34.69255066 454.80090332]
[-40.56971741 468.60156250]
[-46.35566711 482.44076538]
[-46.88687515 499.38638306]
[-63.31731033 503.56695557]
[-71.88289642 488.93591309]
[-60.19484329 476.65478516]
[-54.40888977 462.81561279]
[-54.72802734 455.44577026]
[-48.45414734 448.83276367]
[-42.48603058 435.07116699]
[-36.51791000 421.30957031]
[-30.54979134 407.54797363]
[-24.67262650 393.74728394]
[-18.88667488 379.90811157]
[-21.11590576 365.18127441]
[-8.65423965 355.43359375]
[-17.63133812 341.67980957]
[-16.62478256 325.11987305]
[-5.83377504 312.30010986]
[10.63545132 308.40679932]
[16.23822784 294.49246216]
[21.84100533 280.57809448]
[27.44378090 266.66375732]
[33.04655838 252.74942017]
[32.63016891 245.38442993]
[38.81621170 238.68919373]
[44.60216522 224.85002136]
[50.38811874 211.01083374]
[56.17406845 197.17166138]
[61.96002197 183.33248901]
[67.74597168 169.49331665]
[73.07216644 155.47077942]
[77.93280029 141.28013611]
[82.79343414 127.08950043]
[87.65406799 112.89885712]
[80.33924103 105.27986145]
[78.04695129 93.62592316]
[63.20479584 95.79627228]
[48.36264038 97.96662140]
[33.52048492 100.13697052]
[18.67832756 102.30731964]
[3.88071513 110.58179474]
[-8.16678047 98.65308380]
[-0.03932444 83.77421570]
[16.50797844 87.46516418]
[31.35013390 85.29481506]
[46.19228745 83.12446594]
[61.03444672 80.95411682]
[75.87660217 78.78376770]
[88.13858795 70.14411163]
[95.17678070 56.89783478]
[102.21496582 43.65155411]
[103.47351837 34.62330246]
[109.43447876 30.27778244]
[116.64690399 17.12555885]
[123.85932159 3.97333503]
[131.07174683 -9.17888832]
[138.28416443 -22.33111191]
[145.49658203 -35.48333740]
[152.70899963 -48.63555908]
[146.25439453 -62.62284851]
[149.23870850 -77.55426788]
[160.31198120 -87.74479675]
[175.08567810 -89.44058990]
[182.29809570 -102.59281158]
[189.51051331 -115.74503326]
[184.03211975 -126.27123260]
[184.30366516 -138.01484680]
[190.14251709 -148.06944275]
[200.00245667 -154.00225830]
[211.38145447 -154.44247437]
[218.93853760 -167.39973450]
[226.49562073 -180.35697937]
[234.05270386 -193.31423950]
[241.60978699 -206.27149963]
[241.87878418 -222.09040833]
[254.97447205 -229.18635559]
[262.53155518 -242.14361572]
[270.08865356 -255.10086060]
[277.64572144 -268.05810547]
[285.20281982 -281.01538086]
[292.41522217 -294.16760254]
[299.27795410 -307.50561523]
[306.05252075 -320.88864136]
[312.73858643 -334.31610107]
[319.42465210 -347.74356079]
[326.11074829 -361.17098999]
[318.85198975 -372.87628174]
[318.32424927 -386.53115845]
[324.55844116 -398.56961060]
[335.83349609 -405.90045166]
[349.14999390 -406.70089722]
[356.01272583 -420.03890991]
[362.87545776 -433.37695312]
[369.73818970 -446.71496582]
[376.60092163 -460.05300903]
[383.46365356 -473.39102173]
[390.32638550 -486.72906494]
[397.18911743 -500.06707764]
[404.05184937 -513.40509033]
[402.74163818 -531.78112793]
[417.87393188 -540.68365479]
[424.56002808 -554.11114502]
[431.24609375 -567.53857422]
[437.93215942 -580.96600342]
[444.61825562 -594.39349365]
[451.30432129 -607.82092285]
[457.90161133 -621.29223633]
[464.40988159 -634.80676270]
[470.91815186 -648.32128906]
[462.38699341 -661.01641846]
[461.36248779 -676.17712402]
[468.01983643 -689.72503662]
[480.48123169 -698.06585693]
[495.34432983 -699.04278564]
[501.85256958 -712.55731201]
[500.86917114 -728.34790039]
[513.36242676 -736.45770264]
[519.87066650 -749.97222900]
[526.37890625 -763.48675537]
[532.88714600 -777.00128174]
[526.29113770 -791.17968750]
[530.40185547 -806.26727295]
[543.27844238 -815.14019775]
[558.84082031 -813.60894775]
[569.74108887 -802.39648438]
[570.83233643 -786.79699707]
[561.59936523 -774.17614746]
[546.40173340 -770.49304199]
[539.89343262 -756.97851562]
[533.38519287 -743.46398926]
[526.87695312 -729.94946289]
[528.32586670 -715.12548828]
[515.36712646 -706.04907227]
[508.85885620 -692.53448486]
[517.36206055 -680.30499268]
[518.61053467 -665.36187744]
[512.16912842 -651.70996094]
[499.67721558 -643.05841064]
[484.43267822 -641.81298828]
[477.92440796 -628.29846191]
[471.41616821 -614.78393555]
[471.34591675 -607.40753174]
[464.73175049 -601.13482666]
[458.04568481 -587.70739746]
[451.35961914 -574.27996826]
[444.67355347 -560.85247803]
[437.98745728 -547.42504883]
[431.30139160 -533.99761963]
[434.84667969 -522.44433594]
[429.40136719 -511.20883179]
[417.38986206 -506.54238892]
[410.52713013 -493.20434570]
[403.66439819 -479.86633301]
[396.80166626 -466.52828979]
[389.93893433 -453.19027710]
[383.07623291 -439.85223389]
[376.21350098 -426.51422119]
[369.35076904 -413.17620850]
[362.48803711 -399.83816528]
[370.34884644 -385.41726685]
[368.03524780 -368.98886108]
[356.26382446 -357.06304932]
[339.53817749 -354.48492432]
[332.85211182 -341.05746460]
[326.16604614 -327.63003540]
[319.47994995 -314.20257568]
[319.31234741 -306.82772827]
[312.61599731 -300.64288330]
[305.75326538 -287.30487061]
[306.46511841 -284.61157227]
[306.16299438 -281.47647095]
[304.67422485 -278.28076172]
[301.96597290 -275.46075439]
[298.16006470 -273.45828247]
[290.60296631 -260.50103760]
[283.04589844 -247.54377747]
[275.48880005 -234.58651733]
[267.93173218 -221.62927246]
[268.20327759 -206.73713684]
[254.56704712 -198.71441650]
[247.00996399 -185.75715637]
[239.45288086 -172.79989624]
[231.89579773 -159.84265137]
[224.33871460 -146.88539124]
[230.04818726 -129.47839355]
[221.05000305 -113.15482330]
[202.66273499 -108.53261566]
[195.45031738 -95.38039398]
[188.23789978 -82.22816467]
[194.75048828 -68.85939026]
[192.11097717 -54.04396057]
[181.12528992 -43.50033951]
[165.86122131 -41.42314148]
[158.64880371 -28.27091599]
[151.43638611 -15.11869240]
[144.22396851 -1.96646833]
[137.01155090 11.18575573]
[129.79913330 24.33798027]
[122.58670807 37.49020386]
[115.46124268 50.68974304]
[108.42305756 63.93601990]
[101.38487244 77.18229675]
[118.41467285 89.51294708]
[117.36363220 108.92533875]
[101.84471130 117.75949097]
[96.98407745 131.95013428]
[92.12344360 146.14077759]
[87.26280212 160.33140564]
[101.64679718 156.07690430]
[114.01853180 164.55865479]
[115.23603821 179.50917053]
[104.39965057 189.88088989]
[89.51680756 188.00975037]
[81.58515167 175.27926636]
[75.79919434 189.11843872]
[70.01324463 202.95761108]
[64.22729492 216.79679871]
[58.44134140 230.63597107]
[52.65538788 244.47514343]
[46.96089935 258.35220337]
[41.35812378 272.26654053]
[35.75534821 286.18087769]
[30.15256882 300.09521484]
[24.54979324 314.00958252]
[32.71188354 325.10385132]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 27]
[5 25]
[6 24]
[8 23]
[9 22]
[10 21]
[11 20]
[12 18]
[13 17]
[31 236]
[32 235]
[33 234]
[34 233]
[35 232]
[37 231]
[38 230]
[39 229]
[40 228]
[41 227]
[42 226]
[43 220]
[44 219]
[45 218]
[46 217]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[61 214]
[62 213]
[63 212]
[65 211]
[66 210]
[67 209]
[68 208]
[69 207]
[70 206]
[71 205]
[75 201]
[76 200]
[77 199]
[82 196]
[83 195]
[84 194]
[85 193]
[86 192]
[88 190]
[89 189]
[90 188]
[91 187]
[92 186]
[93 181]
[94 180]
[95 178]
[96 177]
[97 176]
[98 175]
[103 171]
[104 170]
[105 169]
[106 168]
[107 167]
[108 166]
[109 165]
[110 164]
[111 163]
[113 160]
[114 159]
[115 158]
[116 157]
[117 156]
[118 155]
[119 153]
[120 152]
[121 151]
[126 146]
[127 145]
[129 143]
[130 142]
[131 141]
[132 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
