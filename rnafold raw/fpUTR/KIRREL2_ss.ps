%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGAGACCCAGGCCGCGGAACUGGCAGGCGUUUCAGAGCGUCAGAGGCUGCGGAUGAGCAGACUUGGAGGACUCCAGGCCAGAGACUAGGCUGGGCGAAGAGUCGAGCGUGAAGGGGGCUCCGGGCCAGGGUGACAGGAGGCGUGCUUGAGAGGAAGAAGUUGACGGGAAGGCCAGUGCGACGGCAAAUCUCGUGAACCUUGGGGGACGA\
) } def
/len { sequence length } bind def

/coor [
[442.87411499 242.81399536]
[441.13320923 227.50794983]
[428.14282227 220.00794983]
[413.25201416 220.34500122]
[405.16937256 206.74421692]
[390.89355469 210.83528137]
[377.61264038 203.41427612]
[373.41833496 188.41275024]
[360.42794800 180.91275024]
[347.43759155 173.41275024]
[334.44720459 165.91275024]
[319.55639648 166.24981689]
[311.47375488 152.64903259]
[298.48336792 145.14903259]
[285.49298096 137.64903259]
[272.50262451 130.14903259]
[265.13934326 129.52703857]
[259.37710571 122.44140625]
[246.49876404 114.75063324]
[233.62040710 107.05985260]
[220.74206543 99.36907959]
[204.63839722 120.65872955]
[181.35542297 108.10018158]
[166.35583496 107.98956299]
[151.35624695 107.87894440]
[136.35665894 107.76832581]
[121.35706329 107.65770721]
[112.28102112 133.08978271]
[76.37522888 141.67117310]
[63.16929245 148.78477478]
[49.96335602 155.89836121]
[36.75741959 163.01196289]
[23.55148315 170.12554932]
[10.34554672 177.23915100]
[2.19576144 191.46986389]
[-14.20200062 191.25669861]
[-21.97912788 176.81896973]
[-13.13517761 163.00894165]
[3.23195124 164.03321838]
[16.43788719 156.91961670]
[29.64382362 149.80603027]
[42.84976196 142.69242859]
[56.05569839 135.57882690]
[69.26163483 128.46524048]
[67.83237457 121.10268402]
[64.97386169 106.37757111]
[63.54460144 99.01501465]
[48.63628387 97.35910797]
[33.72796631 95.70319366]
[18.80784035 94.15727234]
[3.87672114 92.72142029]
[-11.05439854 91.28556824]
[-25.98551750 89.84971619]
[-38.01828003 100.09609222]
[-53.76511002 98.74966431]
[-63.88369370 86.60923767]
[-62.37085342 70.87752533]
[-50.12413025 60.88786316]
[-34.40929031 62.56694412]
[-24.54966736 74.91860199]
[-9.61854744 76.35444641]
[5.31257248 77.79029846]
[20.24369240 79.22615051]
[27.20162201 76.73778534]
[35.38387680 80.79487610]
[50.29219437 82.45078278]
[65.20051575 84.10669708]
[70.19197083 69.96154022]
[57.54605484 61.89427567]
[44.90013885 53.82700729]
[28.50202751 53.64257050]
[20.69963264 39.21847153]
[29.51938629 25.39298820]
[45.88828278 26.38859177]
[52.96740723 41.18109131]
[65.61331940 49.24835968]
[78.25923920 57.31562805]
[103.93124390 60.69855118]
[119.32007599 75.63795471]
[121.46768188 92.65811157]
[136.46726990 92.76873016]
[151.46685791 92.87934875]
[166.46646118 92.98996735]
[181.46604919 93.10058594]
[186.34321594 87.40293884]
[174.94807434 77.64841461]
[184.70277405 66.25343323]
[196.09754944 76.00762939]
[200.97471619 70.30997467]
[198.55174255 55.50696182]
[188.68690491 43.13783264]
[194.26673889 29.32788658]
[191.84378052 14.52487183]
[189.42080688 -0.27814308]
[179.55596924 -12.64727211]
[185.13580322 -26.45722008]
[182.71284485 -41.26023483]
[180.28987122 -56.06324768]
[168.15383911 -66.55592346]
[168.93458557 -82.57996368]
[182.03320312 -91.84310150]
[197.40155029 -87.23944855]
[203.25033569 -72.30053711]
[195.09288025 -58.48621368]
[197.51585388 -43.68320084]
[199.93881226 -28.88018417]
[209.63035583 -17.56986618]
[204.22383118 -2.70110869]
[206.64678955 12.10190582]
[209.06974792 26.90492058]
[218.76129150 38.21524048]
[213.35476685 53.08399582]
[215.77772522 67.88700867]
[218.13163757 53.07285690]
[228.40269470 42.14101410]
[243.04153442 38.86922836]
[256.98934937 44.38813400]
[265.42617798 56.79055405]
[265.43646240 71.79055023]
[257.01669312 84.20453644]
[243.07644653 89.74258423]
[228.43283081 86.49072266]
[241.31118774 94.18150330]
[254.18954468 101.87227631]
[267.06790161 109.56305695]
[280.00262451 117.15864563]
[292.99298096 124.65864563]
[305.98336792 132.15864563]
[318.97375488 139.65864563]
[334.79370117 139.85803223]
[341.94720459 152.92236328]
[354.93759155 160.42236328]
[367.92794800 167.92236328]
[380.91833496 175.42236328]
[396.00717163 171.55397034]
[409.07443237 179.34509277]
[412.66937256 193.75384521]
[428.48931885 193.95323181]
[435.64282227 207.01756287]
[448.63320923 214.51756287]
[462.75909424 208.37220764]
[477.62124634 211.68426514]
[487.56570435 222.97901917]
[488.93609619 237.78645325]
[501.92648315 245.28645325]
[514.91687012 252.78645325]
[530.73681641 252.98583984]
[537.89031982 266.05017090]
[550.88067627 273.55017090]
[563.87109375 281.05017090]
[576.50787354 278.47183228]
[587.17279053 284.98483276]
[590.43347168 296.63262939]
[603.31182861 304.32339478]
[616.19018555 312.01419067]
[629.06854248 319.70495605]
[626.45019531 304.93524170]
[634.93011475 292.56228638]
[649.64971924 289.67535400]
[662.17504883 297.92855835]
[665.32958984 312.59310913]
[657.30590820 325.26669312]
[642.70220947 328.68795776]
[654.85046387 337.48681641]
[670.56561279 339.31558228]
[676.33459473 353.04760742]
[688.48278809 361.84646606]
[700.63104248 370.64535522]
[712.77929688 379.44421387]
[724.92755127 388.24307251]
[737.07580566 397.04196167]
[754.29711914 393.96432495]
[768.14294434 404.09506226]
[770.33300781 420.77035522]
[782.60974121 429.38909912]
[794.88641357 438.00784302]
[809.52008057 432.84683228]
[824.38287354 437.30517578]
[833.75976562 449.66854858]
[834.04516602 465.18301392]
[825.12933350 477.88290405]
[810.44055176 482.88488770]
[795.62701416 478.26556396]
[786.38476562 465.80117798]
[786.26770020 450.28454590]
[773.99096680 441.66580200]
[761.71429443 433.04705811]
[749.45867920 437.02285767]
[736.96423340 433.15664673]
[728.85821533 422.64575195]
[728.27691650 409.19018555]
[716.12866211 400.39132690]
[703.98040771 391.59246826]
[691.83221436 382.79357910]
[679.68395996 373.99472046]
[667.53570557 365.19583130]
[652.68945312 363.99645996]
[646.05157471 349.63507080]
[633.90332031 340.83621216]
[621.37774658 332.58331299]
[608.49938965 324.89251709]
[595.62103271 317.20175171]
[582.74273682 309.51098633]
[565.20648193 310.19735718]
[556.37109375 294.04055786]
[543.38067627 286.54055786]
[530.39031982 279.04055786]
[515.49951172 279.37762451]
[507.41687012 265.77682495]
[494.42648315 258.27682495]
[481.43609619 250.77684021]
[467.92730713 256.99377441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 140]
[3 139]
[5 137]
[8 134]
[9 133]
[10 132]
[11 131]
[13 129]
[14 128]
[15 127]
[16 126]
[18 125]
[19 124]
[20 123]
[21 122]
[23 84]
[24 83]
[25 82]
[26 81]
[27 80]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[47 67]
[48 66]
[49 65]
[50 63]
[51 62]
[52 61]
[53 60]
[68 77]
[69 76]
[70 75]
[89 113]
[90 112]
[92 110]
[93 109]
[94 108]
[96 106]
[97 105]
[98 104]
[144 211]
[145 210]
[146 209]
[148 207]
[149 206]
[150 205]
[153 203]
[154 202]
[155 201]
[156 200]
[163 199]
[164 198]
[166 196]
[167 195]
[168 194]
[169 193]
[170 192]
[171 191]
[174 187]
[175 186]
[176 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
