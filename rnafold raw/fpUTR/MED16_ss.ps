%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAAGUCUUUGGGAGGCGGCCCCACGCCUCAGGCGACUGGUUGUUACCGAGGAAGAUGGCGGCGCCAGACCCGAGGCGCUAGGGAAGAUCGCACCGCGGACGCCCGCUGAGCUUGGCGCACGGGCCGACCAGGAGCUGGUGACUGCCCUC\
) } def
/len { sequence length } bind def

/coor [
[-89.83651733 210.35423279]
[-94.46786499 215.50976562]
[-100.43885803 218.92446899]
[-107.12929535 220.28115845]
[-113.85585022 219.47444153]
[-119.94188690 216.61828613]
[-124.78550720 212.03106689]
[-139.07038879 216.60731506]
[-153.35528564 221.18356323]
[-167.64016724 225.75981140]
[-181.92504883 230.33605957]
[-196.20994568 234.91229248]
[-210.49482727 239.48854065]
[-217.10940552 250.60951233]
[-229.14997864 254.10513306]
[-239.97453308 248.61753845]
[-254.35093689 252.89756775]
[-268.72735596 257.17761230]
[-283.10375977 261.45767212]
[-297.48019409 265.73770142]
[-311.85659790 270.01776123]
[-326.23300171 274.29779053]
[-331.47900391 288.78176880]
[-344.10018921 297.29992676]
[-359.13919067 296.75930786]
[-370.83609009 287.57672119]
[-385.21252441 291.85675049]
[-399.58892822 296.13681030]
[-413.96533203 300.41683960]
[-427.42074585 310.73129272]
[-441.05694580 300.65704346]
[-435.15127563 284.76492310]
[-418.24539185 286.04043579]
[-403.86895752 281.76037598]
[-389.49255371 277.48034668]
[-375.11614990 273.20028687]
[-370.34628296 259.11532593]
[-358.05181885 250.43717957]
[-342.82681274 250.66516113]
[-330.51306152 259.92138672]
[-316.13662720 255.64134216]
[-301.76022339 251.36129761]
[-287.38381958 247.08125305]
[-273.00738525 242.80120850]
[-258.63098145 238.52116394]
[-244.25457764 234.24111938]
[-232.93666077 220.86474609]
[-215.07107544 225.20365906]
[-200.78617859 220.62741089]
[-186.50129700 216.05116272]
[-172.21641541 211.47492981]
[-157.93153381 206.89868164]
[-143.64663696 202.32243347]
[-129.36175537 197.74618530]
[-116.10529327 178.77485657]
[-92.69195557 183.34498596]
[-79.08281708 177.03694153]
[-70.78948212 164.66481018]
[-55.01510620 165.88121033]
[-41.40596771 159.57316589]
[-27.79682922 153.26513672]
[-14.18769073 146.95709229]
[-0.57855165 140.64906311]
[12.96467304 134.20071411]
[26.44053841 127.61277008]
[39.91640472 121.02482605]
[53.39226913 114.43687439]
[66.86813354 107.84892273]
[80.34399414 101.26097870]
[90.35399628 78.40740204]
[119.69641113 80.66289520]
[131.53352356 71.44969940]
[143.37062073 62.23651123]
[155.20773315 53.02331924]
[157.59060669 40.30520248]
[167.69244385 32.87905121]
[179.74436951 34.30582809]
[191.76936340 25.33924103]
[203.79435730 16.37265587]
[215.81933594 7.40606880]
[227.84432983 -1.56051791]
[239.86930847 -10.52710438]
[251.89430237 -19.49369049]
[263.91928101 -28.46027756]
[262.17431641 -36.74758911]
[262.96969604 -45.14511490]
[266.21331787 -52.89487839]
[271.59307861 -59.30339813]
[278.60675049 -63.80374908]
[286.60873413 -66.00567627]
[294.86962891 -65.72937012]
[302.64254761 -63.02000809]
[309.23077393 -58.14179993]
[322.27252197 -65.55212402]
[325.99786377 -71.13751984]
[331.21395874 -73.58738708]
[336.00988770 -72.98642731]
[349.34674072 -79.85147095]
[362.68356323 -86.71652222]
[376.02038574 -93.58156586]
[384.43524170 -107.65715790]
[400.82614136 -107.13697052]
[408.33154297 -92.55612183]
[399.23052979 -78.91414642]
[382.88543701 -80.24473572]
[369.54861450 -73.37968445]
[356.21179199 -66.51464081]
[342.87493896 -59.64959335]
[329.68283081 -52.51038361]
[316.64108276 -45.10005569]
[313.15206909 -23.48401070]
[294.70291138 -11.19655800]
[272.88586426 -16.43528938]
[260.86090088 -7.46870375]
[248.83589172 1.49788308]
[236.81091309 10.46446991]
[224.78591919 19.43105698]
[212.76094055 28.39764214]
[200.73594666 37.36423111]
[188.71096802 46.33081436]
[182.68835449 62.78532028]
[164.42092896 64.86042786]
[152.58381653 74.07361603]
[140.74670410 83.28681183]
[128.90960693 92.50000000]
[128.90960693 107.50000000]
[140.74670410 116.71318817]
[156.78034973 116.16359711]
[167.09690857 128.44969177]
[163.78242493 144.14662170]
[149.37947083 151.21305847]
[134.93676758 144.22822571]
[131.53352356 128.55029297]
[119.69641113 119.33710480]
[107.08948517 123.93911743]
[95.15345001 121.79936218]
[86.93194580 114.73683929]
[73.45607758 121.32479095]
[59.98021698 127.91273499]
[46.50435257 134.50068665]
[33.02848816 141.08863831]
[19.55262184 147.67658997]
[13.16770744 154.29901123]
[5.72948551 154.25819397]
[-7.87965345 160.56623840]
[-21.48879242 166.87426758]
[-35.09793091 173.18231201]
[-48.70706940 179.49034119]
[-57.97382355 192.31367493]
[-72.77478027 190.64608765]
[-86.38391876 196.95411682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 54]
[8 53]
[9 52]
[10 51]
[11 50]
[12 49]
[13 48]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[21 41]
[22 40]
[26 36]
[27 35]
[28 34]
[29 33]
[56 151]
[57 150]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[71 125]
[72 124]
[73 123]
[74 122]
[77 120]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[93 110]
[94 109]
[97 108]
[98 107]
[99 106]
[100 105]
[126 134]
[127 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
