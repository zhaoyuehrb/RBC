%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUCCGCGGGGCUGGCGGGCGAGCGGGCGGCCGGGAUCGGCGGCGGCGGCGGCGGCGGCGGCGCUUGACAGACAAUGAGGGCGGCGGGGCGGCGUUGAGCGGCGGCGGCGGCGGCGGCGGCGGCGAGCGACGCGGGGCCCGGGGGCGGGGCGGGGCGCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[279.35424805 496.46984863]
[272.73593140 483.00888062]
[266.11761475 469.54788208]
[259.49929810 456.08691406]
[252.88098145 442.62594604]
[246.26266479 429.16497803]
[239.64434814 415.70397949]
[233.02603149 402.24301147]
[226.40771484 388.78204346]
[212.27033997 384.23559570]
[205.36666870 370.67852783]
[210.23126221 355.88076782]
[203.61294556 342.41979980]
[196.99462891 328.95883179]
[184.43563843 320.95123291]
[185.29016113 305.15313721]
[178.67184448 291.69216919]
[166.11285400 283.68457031]
[166.96737671 267.88647461]
[154.40838623 259.87890625]
[155.26290894 244.08078003]
[148.64459229 230.61981201]
[138.31813049 230.03793335]
[129.10440063 225.16313171]
[122.71522522 216.82464600]
[120.36937714 206.50196838]
[122.56053162 196.06257629]
[128.95524597 187.42401123]
[123.11619568 173.60716248]
[111.03484344 164.89566040]
[112.78985596 149.17210388]
[106.95080566 135.35523987]
[101.11175537 121.53839111]
[95.27270508 107.72153473]
[91.89124298 105.76397705]
[89.40487671 102.30795288]
[88.47050476 97.79463959]
[89.51977539 92.94526672]
[84.47903442 78.81760406]
[79.43829346 64.68993378]
[67.51342010 54.29243469]
[70.52376556 39.70521164]
[65.48302460 25.57754517]
[53.55815125 15.18004608]
[56.56849289 0.59282213]
[51.52775192 -13.53484344]
[37.22818756 -25.10341072]
[41.00181961 -42.22208023]
[35.69301987 -56.25121689]
[30.38421631 -70.28034973]
[25.07541656 -84.30948639]
[19.76661491 -98.33862305]
[7.64594793 -108.50720215]
[10.37801933 -123.14909363]
[5.06921864 -137.17822266]
[-7.05144787 -147.34680176]
[-4.31937647 -161.98870850]
[-15.75835514 -168.01182556]
[-19.87739754 -179.84158325]
[-14.97657967 -190.93196106]
[-20.01732063 -205.05963135]
[-31.94219208 -215.45713806]
[-28.93185234 -230.04435730]
[-33.97259140 -244.17202759]
[-39.01333237 -258.29968262]
[-44.05407333 -272.42733765]
[-49.09481430 -286.55502319]
[-60.41704941 -292.79483032]
[-64.31011963 -304.70086670]
[-59.19904327 -315.69592285]
[-63.96989441 -329.91702271]
[-77.63468933 -338.32254028]
[-79.43974304 -354.26373291]
[-68.00037384 -365.51184082]
[-52.09188461 -363.43832397]
[-43.91791153 -349.63375854]
[-49.74882126 -334.68786621]
[-44.97796631 -320.46679688]
[-31.22031212 -309.60327148]
[-34.96715164 -291.59576416]
[-29.92640877 -277.46807861]
[-24.88566780 -263.34042358]
[-19.84492683 -249.21276855]
[-14.80418682 -235.08509827]
[-3.23986197 -225.69810486]
[-5.88965511 -210.10037231]
[-0.84891421 -195.97270203]
[13.11307621 -185.37309265]
[9.70975876 -167.29750061]
[21.45070457 -158.13238525]
[19.09835434 -142.48703003]
[24.40715408 -128.45790100]
[36.14810181 -119.29277039]
[33.79574966 -103.64742279]
[39.10454941 -89.61828613]
[44.41335297 -75.58914948]
[49.72215271 -61.56001663]
[55.03095245 -47.53088379]
[65.94766235 -42.25452042]
[70.47055054 -30.57319260]
[65.65541840 -18.57558441]
[70.69615936 -4.44791889]
[82.26048279 4.93907547]
[79.61068726 20.53680420]
[84.65142822 34.66447067]
[96.21575165 44.05146408]
[93.56596375 59.64919281]
[98.60670471 73.77686310]
[103.64744568 87.90452576]
[109.08956146 101.88248444]
[114.92861176 115.69934082]
[120.76766205 129.51618958]
[126.60671234 143.33305359]
[139.10571289 153.03282166]
[136.93305969 167.76811218]
[142.77210999 181.58496094]
[161.73936462 188.08287048]
[169.75727844 206.12779236]
[162.10556030 224.00149536]
[168.72387695 237.46246338]
[181.75624084 246.43286133]
[180.42834473 261.26815796]
[193.46072388 270.23855591]
[192.13281250 285.07385254]
[198.75112915 298.53482056]
[211.78350830 307.50521851]
[210.45559692 322.34051514]
[217.07391357 335.80148315]
[223.69223022 349.26245117]
[238.38116455 354.44641113]
[244.90132141 368.19201660]
[239.86869812 382.16372681]
[246.48701477 395.62469482]
[253.10533142 409.08566284]
[259.72363281 422.54666138]
[266.34194946 436.00762939]
[272.96026611 449.46859741]
[279.57858276 462.92956543]
[286.19689941 476.39056396]
[292.81521606 489.85153198]
[302.14462280 491.69494629]
[309.45452881 497.55960083]
[313.16558838 506.01470947]
[312.55224609 515.08966064]
[307.88104248 522.73291016]
[313.72009277 536.54980469]
[319.55914307 550.36663818]
[331.21914673 555.94989014]
[335.78555298 567.61425781]
[331.31051636 578.88317871]
[336.88543701 592.80871582]
[342.46038818 606.73419189]
[348.03533936 620.65972900]
[359.53536987 633.11706543]
[350.74838257 647.61621094]
[334.38339233 643.18640137]
[334.10980225 626.23468018]
[328.53488159 612.30914307]
[322.95993042 598.38366699]
[317.38500977 584.45812988]
[303.02960205 574.39770508]
[305.74227905 556.20568848]
[299.90322876 542.38885498]
[294.06417847 528.57196045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 140]
[2 139]
[3 138]
[4 137]
[5 136]
[6 135]
[7 134]
[8 133]
[9 132]
[12 129]
[13 128]
[14 127]
[16 125]
[17 124]
[19 122]
[21 120]
[22 119]
[28 116]
[29 115]
[31 113]
[32 112]
[33 111]
[34 110]
[38 109]
[39 108]
[40 107]
[42 105]
[43 104]
[45 102]
[46 101]
[48 98]
[49 97]
[50 96]
[51 95]
[52 94]
[54 92]
[55 91]
[57 89]
[60 87]
[61 86]
[63 84]
[64 83]
[65 82]
[66 81]
[67 80]
[70 78]
[71 77]
[145 164]
[146 163]
[147 162]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
