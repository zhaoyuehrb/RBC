%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGGCGCCUGCGCAGUAGCUGCCCGUGUCGGCAGCUGCAGCGGGUCGCACGGCUCCGGCCCAUCUCGGGGGGCGGGCGGGGGAGGCGAGGUGCGCGAGCCGAGUCCGGGGCACG\
) } def
/len { sequence length } bind def

/coor [
[70.79241180 125.22417450]
[63.96923447 128.82962036]
[56.37757492 129.75875854]
[49.02001572 127.93832397]
[42.85067368 123.65492249]
[38.65150833 117.51119232]
[23.68529320 118.51735687]
[8.71907711 119.52352142]
[-6.23228264 120.73052216]
[-21.16609001 122.13813782]
[-36.09989929 123.54575348]
[-51.03370667 124.95336914]
[-65.96751404 126.36098480]
[-72.51555634 135.25120544]
[-82.69329834 138.92410278]
[-92.98002625 136.37042236]
[-99.96054077 128.69123840]
[-114.94837952 129.29522705]
[-129.93621826 129.89921570]
[-144.92404175 130.50320435]
[-159.91188049 131.10719299]
[-174.89971924 131.71118164]
[-189.88755798 132.31517029]
[-204.87538147 132.91915894]
[-219.86322021 133.52314758]
[-230.39393616 145.30787659]
[-246.17779541 146.11117554]
[-257.85052490 135.45645142]
[-258.48690796 119.66498566]
[-247.70936584 108.10556030]
[-231.91204834 107.63617706]
[-220.46720886 118.53531647]
[-205.47937012 117.93132782]
[-190.49154663 117.32733917]
[-175.50370789 116.72335052]
[-160.51586914 116.11936188]
[-145.52803040 115.51537323]
[-130.54020691 114.91138458]
[-115.55236816 114.30739594]
[-100.56452942 113.70340729]
[-85.16653442 102.13588715]
[-67.37512970 111.42717743]
[-52.44132233 110.01956177]
[-37.50751495 108.61194611]
[-22.57370567 107.20433044]
[-7.63989782 105.79671478]
[-1.19189799 101.98657227]
[7.71291208 104.55730438]
[22.67912865 103.55113983]
[37.64534378 102.54497528]
[54.55490112 87.79418945]
[75.66594696 97.31313324]
[90.36280823 94.31275177]
[105.01805878 91.11532593]
[119.62906647 87.72144318]
[134.24008179 84.32756042]
[148.85108948 80.93367004]
[163.46209717 77.53978729]
[178.07310486 74.14590454]
[192.68411255 70.75201416]
[195.80798340 62.69714355]
[201.85238647 56.65786743]
[209.73277283 53.60939026]
[218.07815552 53.99986649]
[225.46946716 57.68613434]
[230.68087769 63.97115326]
[245.57151794 62.16310120]
[260.46215820 60.35505295]
[275.35278320 58.54700089]
[290.24340820 56.73895264]
[297.84448242 43.34007263]
[311.71560669 37.05955124]
[326.45089722 40.11499786]
[336.44189453 51.12944031]
[351.33251953 49.32139206]
[366.22314453 47.51334000]
[378.99008179 38.16902542]
[392.55718994 44.31581116]
[407.44781494 42.50775909]
[415.04888916 29.10888290]
[428.92001343 22.82835770]
[443.65530396 25.88380623]
[453.64630127 36.89825058]
[466.42428589 26.61938667]
[481.61517334 32.79750061]
[483.59185791 49.07707977]
[470.32092285 58.71108627]
[455.45434570 51.78888321]
[448.38958740 64.87426758]
[434.81372070 71.36730957]
[419.84262085 68.58886719]
[409.25585938 57.39839172]
[394.36523438 59.20644379]
[382.66339111 68.42143250]
[368.03121948 62.40397263]
[353.14056396 64.21202087]
[338.24993896 66.02007294]
[331.18518066 79.10546112]
[317.60931396 85.59850311]
[302.63821411 82.82006073]
[292.05145264 71.62958527]
[277.16082764 73.43763733]
[262.27020264 75.24568176]
[247.37956238 77.05373383]
[232.48893738 78.86178589]
[216.80207825 93.70147705]
[196.07798767 85.36302185]
[181.46697998 88.75691223]
[166.85597229 92.15079498]
[152.24496460 95.54467773]
[137.63395691 98.93856812]
[123.02295685 102.33245087]
[108.41194916 105.72633362]
[101.79802704 110.53071594]
[93.36318970 109.00961304]
[78.66633606 112.00999451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 50]
[7 49]
[8 48]
[9 46]
[10 45]
[11 44]
[12 43]
[13 42]
[17 40]
[18 39]
[19 38]
[20 37]
[21 36]
[22 35]
[23 34]
[24 33]
[25 32]
[52 116]
[53 115]
[54 113]
[55 112]
[56 111]
[57 110]
[58 109]
[59 108]
[60 107]
[66 105]
[67 104]
[68 103]
[69 102]
[70 101]
[74 97]
[75 96]
[76 95]
[78 93]
[79 92]
[83 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
