%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUCCAGGUGGGCCUGAGGGAUUCAUUAGGGAGGGAGGUCUUCGUGCAGUAGGCCAGUGGGCCCAGCGGGGAGGUACUGGCCACCCUGCUGAUGCUGCCCAAGCCCAUCCUGGGCCCCACCCUCAGAACGAGCUGCAGCAGAUCCGCCUGUGCUUUGAGAGGAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[231.69328308 581.39532471]
[227.61174011 566.96130371]
[223.53018188 552.52728271]
[219.44863892 538.09326172]
[216.52725220 536.05548096]
[214.46391296 532.48352051]
[213.97695923 527.80377197]
[215.56343079 522.75097656]
[212.28320312 508.11401367]
[209.00299072 493.47705078]
[205.72277832 478.84011841]
[202.44256592 464.20315552]
[199.16233826 449.56622314]
[195.88212585 434.92926025]
[185.54888916 424.20205688]
[190.08106995 409.04388428]
[186.80085754 394.40695190]
[183.52064514 379.76998901]
[170.84201050 372.03775024]
[167.30688477 357.24053955]
[175.50314331 343.99444580]
[165.16990662 333.26721191]
[169.70210266 318.10903931]
[166.28756714 303.50283813]
[162.73901367 288.92864990]
[159.19046021 274.35443115]
[148.66189575 263.81884766]
[152.91485596 248.57997131]
[149.36628723 234.00576782]
[145.41749573 219.53485107]
[141.07147217 205.17825317]
[136.72544861 190.82165527]
[132.37940979 176.46504211]
[121.28645325 166.52545166]
[124.69348145 151.07545471]
[120.34745026 136.71884155]
[116.00142670 122.36224365]
[90.32823944 122.91528320]
[78.00502777 103.34538269]
[63.28325653 100.46971893]
[48.56148529 97.59406281]
[33.83971024 94.71840668]
[19.11793900 91.84274292]
[4.09041643 96.79088593]
[-6.91746092 86.75714874]
[-20.97538185 94.48725128]
[-35.72796249 88.18321228]
[-39.85828781 72.68095398]
[-30.19792175 59.87248230]
[-14.15747356 59.58336258]
[-4.04180145 72.03537750]
[9.93272114 66.88154602]
[21.99359894 77.12097168]
[36.71537018 79.99662781]
[51.43714142 82.87229156]
[66.15891266 85.74794769]
[80.88069153 88.62361145]
[83.24201965 85.36646271]
[86.15131378 82.58781433]
[89.51344299 80.37851715]
[87.31674194 65.54024506]
[85.12004852 50.70196152]
[82.92334747 35.86368179]
[80.72665405 21.02540398]
[65.49980927 4.61086369]
[74.03997040 -15.26226234]
[70.75975800 -29.89920807]
[67.47953796 -44.53615570]
[64.19932556 -59.17309952]
[60.91910934 -73.81004333]
[57.63889313 -88.44699097]
[54.35867691 -103.08393860]
[51.07846069 -117.72088623]
[40.51059341 -129.49504089]
[45.27740860 -143.60626221]
[41.99719238 -158.24320984]
[38.71697617 -172.88015747]
[27.21809387 -184.57237244]
[31.85457420 -200.30244446]
[47.85680389 -203.88862610]
[58.76305771 -191.64175415]
[53.35391998 -176.16036987]
[56.63413620 -161.52342224]
[59.91435242 -146.88648987]
[70.24759674 -136.15925598]
[65.71540833 -121.00109863]
[68.99562073 -106.36415100]
[72.27584076 -91.72721100]
[75.55605316 -77.09026337]
[78.83627319 -62.45331573]
[82.11648560 -47.81637192]
[85.39670563 -33.17942429]
[88.67691803 -18.54247856]
[96.15436554 -15.80955219]
[101.99592590 -10.26280403]
[105.18591309 -2.76337695]
[105.12890625 5.48034763]
[101.75939941 13.10735798]
[95.56493378 18.82870674]
[97.76162720 33.66698456]
[99.95832825 48.50526428]
[102.15502167 63.34354401]
[104.35172272 78.18182373]
[116.59592438 81.47356415]
[126.21446228 91.69834137]
[138.30093384 82.81481171]
[150.38742065 73.93128204]
[162.47389221 65.04775238]
[174.56036377 56.16422653]
[183.74214172 41.91180420]
[199.97933960 46.78927994]
[199.78736877 63.74214172]
[183.44389343 68.25070190]
[171.35742188 77.13423157]
[159.27095032 86.01776123]
[147.18446350 94.90129089]
[135.09799194 103.78482056]
[130.35803223 118.01622009]
[134.70405579 132.37281799]
[139.05007935 146.72941589]
[150.45390320 157.69589233]
[146.73602295 172.11901855]
[151.08204651 186.47561646]
[155.42807007 200.83222961]
[159.77410889 215.18882751]
[163.64138794 218.80717468]
[165.51997375 223.12083435]
[165.48115540 227.24575806]
[163.94050598 230.45719910]
[167.48905945 245.03141785]
[178.27145386 256.60943604]
[173.76467896 270.80587769]
[177.31323242 285.38006592]
[180.86178589 299.95428467]
[185.95082092 307.58663940]
[184.33905029 314.82882690]
[194.90690613 326.60299683]
[190.14009094 340.71420288]
[203.20556641 349.19543457]
[206.32366943 364.08612061]
[198.15759277 376.48977661]
[201.43780518 391.12673950]
[204.71801758 405.76367188]
[215.28588867 417.53784180]
[210.51907349 431.64904785]
[213.79928589 446.28601074]
[217.07949829 460.92294312]
[220.35972595 475.55990601]
[223.63993835 490.19683838]
[226.92015076 504.83377075]
[230.20036316 519.47070312]
[233.88264465 534.01171875]
[237.96420288 548.44573975]
[242.04576111 562.87976074]
[246.12730408 577.31378174]
[261.24655151 578.40197754]
[275.08056641 584.59844971]
[285.95877075 595.15496826]
[292.56762695 608.79675293]
[294.10906982 623.87658691]
[290.39694214 638.57336426]
[281.87948608 651.11248779]
[269.58529663 659.97973633]
[254.99888611 664.10437012]
[239.88166809 662.98834229]
[226.05911255 656.76635742]
[215.20036316 646.18981934]
[208.61666870 632.53582764]
[207.10302734 617.45324707]
[210.84223938 602.76330566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 155]
[2 154]
[3 153]
[4 152]
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[13 146]
[14 145]
[16 143]
[17 142]
[18 141]
[21 138]
[23 136]
[24 134]
[25 133]
[26 132]
[28 130]
[29 129]
[30 125]
[31 124]
[32 123]
[33 122]
[35 120]
[36 119]
[37 118]
[39 57]
[40 56]
[41 55]
[42 54]
[43 53]
[45 51]
[60 103]
[61 102]
[62 101]
[63 100]
[64 99]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[75 84]
[76 83]
[77 82]
[105 117]
[106 116]
[107 115]
[108 114]
[109 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
