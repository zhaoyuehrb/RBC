%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGAGGAGCCUGCUGUUGCCCCAGCAACAACCACGGAAACCAAGACGAGCGCGGUCGCGGAAGUAUCGCGGCUUACAUAUCUCGCAGCCAGGCGGGUCCUGGGAGAGGCGCGAGCCAGGCCUGGUCGGCGCCCGCGGAGAAAAGAAGCAGUCAAGCCCAUGAACUACAACCCCGGUUGCCGCUUUCUCCUCUCCUAACCGUUAAGUGCGCUAAGGGCC\
) } def
/len { sequence length } bind def

/coor [
[142.58905029 248.93840027]
[137.77166748 234.73301697]
[132.95428467 220.52764893]
[128.13690186 206.32226562]
[123.31951141 192.11688232]
[118.50212860 177.91149902]
[113.68473816 163.70613098]
[108.86735535 149.50074768]
[104.04997253 135.29536438]
[99.23258972 121.08998871]
[84.48799133 118.33374786]
[74.86433411 129.83963013]
[65.32270813 141.41362000]
[55.86358261 153.05513000]
[53.37197113 171.30337524]
[36.74073029 176.91394043]
[27.44804192 188.68875122]
[18.15535355 200.46354675]
[8.86266708 212.23835754]
[-0.43002033 224.01315308]
[-9.72270775 235.78794861]
[-11.54778576 252.08523560]
[-26.68050194 258.40447998]
[-39.55361557 248.24499512]
[-36.92437363 232.05799866]
[-21.49750900 226.49526978]
[-12.20482254 214.72045898]
[-2.91213489 202.94566345]
[6.38055277 191.17086792]
[15.67323971 179.39605713]
[24.96592712 167.62126160]
[23.86155319 155.57986450]
[31.50071716 145.69506836]
[44.22206116 143.59600830]
[53.68119049 131.95449829]
[55.45836258 124.78639984]
[63.35845566 120.21597290]
[72.98210907 108.71009064]
[59.02034378 114.19362640]
[47.28625870 123.53767395]
[32.72103500 127.12295532]
[17.99035072 124.29330444]
[5.79016924 115.56658936]
[-1.64667308 102.53994751]
[-2.95910907 87.59747314]
[2.09305906 73.47388458]
[12.58519936 62.75404739]
[26.59707642 57.39986038]
[41.56427765 58.39122772]
[54.74756241 65.54672241]
[63.73352051 77.55535126]
[75.85286713 86.39398193]
[69.45460510 72.82702637]
[63.05634308 59.26007462]
[56.65808105 45.69312286]
[45.22089005 35.98793411]
[30.79350662 31.88298798]
[16.36612129 27.77804375]
[1.93873727 23.67309952]
[-12.48864746 19.56815338]
[-26.91603279 15.46320915]
[-41.34341812 11.35826492]
[-56.00225449 17.87731171]
[-70.17169189 10.35356617]
[-72.98213959 -5.44139862]
[-62.27766800 -17.39103889]
[-46.26983261 -16.32861137]
[-37.23847198 -3.06912017]
[-22.81108665 1.03582466]
[-8.38370228 5.14076948]
[6.04368210 9.24571419]
[20.47106743 13.35065937]
[34.89845276 17.45560455]
[49.32583618 21.56054878]
[54.17843246 15.84195423]
[42.74124146 6.13676500]
[28.86476898 0.44084513]
[29.99386787 -14.51659870]
[44.56816101 -18.06484222]
[52.44643021 -5.30042458]
[63.88362122 4.40476465]
[68.73621368 -1.31383014]
[62.33795166 -14.88078403]
[55.93968964 -28.44773674]
[49.54142380 -42.01469040]
[36.65684128 -51.19609070]
[38.22612000 -66.00779724]
[31.82785606 -79.57475281]
[25.42959404 -93.14170074]
[18.83912468 -106.61633301]
[12.05778027 -119.99592590]
[-2.68086028 -126.33248901]
[-6.77698183 -141.84381104]
[2.91160965 -154.63095093]
[18.95265579 -154.88468933]
[29.04084015 -142.41038513]
[25.43736839 -126.77726746]
[32.21871185 -113.39768219]
[36.39175415 -111.08878326]
[39.16241837 -106.13748169]
[38.99654770 -99.53997040]
[45.39480972 -85.97301483]
[51.79307175 -72.40605927]
[64.22000885 -64.19506073]
[63.10837936 -48.41295242]
[69.50663757 -34.84600067]
[75.90490723 -21.27904701]
[82.30316925 -7.71209335]
[97.27249146 -8.67097569]
[101.88745880 -22.94339752]
[106.50242615 -37.21582031]
[111.11740112 -51.48824310]
[115.73236847 -65.76066589]
[108.79152679 -79.70564270]
[113.67507935 -94.11416626]
[127.01226807 -100.64526367]
[131.62722778 -114.91768646]
[136.24220276 -129.19010925]
[140.85717773 -143.46252441]
[136.89756775 -159.37648010]
[148.88591003 -170.56628418]
[164.48960876 -165.52084351]
[167.65693665 -149.43046570]
[155.12959290 -138.84756470]
[150.51463318 -124.57513428]
[145.89965820 -110.30271149]
[141.28468323 -96.03028870]
[148.27310181 -82.92694092]
[143.79617310 -68.38693237]
[130.00479126 -61.14569473]
[125.38982391 -46.87327194]
[120.77484894 -32.60084915]
[116.15988159 -18.32842636]
[111.54491425 -4.05600452]
[70.22503662 39.29486084]
[76.62329865 52.86181259]
[83.02156067 66.42876434]
[89.41982269 79.99571991]
[85.61370850 65.48664093]
[90.65333557 51.35857391]
[102.78285217 42.53389740]
[117.77619934 42.08721542]
[130.40954590 50.17416000]
[136.28129578 63.97714996]
[133.34567261 78.68708038]
[122.62623596 89.17846680]
[137.62283325 89.49829102]
[152.61941528 89.81810760]
[167.61601257 90.13793182]
[182.61259460 90.45775604]
[196.57460022 83.01644897]
[209.13401794 91.02335358]
[224.13059998 91.34317780]
[230.08891296 88.50537109]
[235.73933411 89.01994324]
[239.54730225 91.89128876]
[254.52874756 92.63729095]
[269.51019287 93.38328552]
[284.49160767 94.12928772]
[290.35519409 80.15093231]
[300.64828491 69.02313995]
[314.12799072 62.08964920]
[329.16656494 60.18770981]
[343.94799805 63.54698563]
[356.68740845 71.76183319]
[365.84640503 83.84027100]
[370.31900024 98.32376862]
[369.56512451 113.46337128]
[363.67581177 127.43089294]
[353.36221313 138.53968811]
[339.86975098 145.44833374]
[324.82769775 147.32255554]
[310.05249023 143.93605042]
[297.32824707 135.69773865]
[288.19152832 123.60243988]
[283.74563599 109.11072540]
[268.76419067 108.36472321]
[253.78274536 107.61872864]
[238.80131531 106.87272644]
[223.81077576 106.33976746]
[208.81419373 106.01994324]
[195.92483521 113.48412323]
[182.29277039 105.45434570]
[167.29618835 105.13452148]
[152.29959106 104.81469727]
[137.30300903 104.49488068]
[122.30641937 104.17505646]
[113.43796539 116.27260590]
[118.25534821 130.47798157]
[123.07273865 144.68336487]
[127.89012146 158.88873291]
[132.70750427 173.09411621]
[137.52488708 187.29949951]
[142.34226990 201.50488281]
[147.15966797 215.71025085]
[151.97705078 229.91563416]
[156.79443359 244.12101746]
[172.62294006 251.57760620]
[178.05090332 267.85546875]
[170.18136597 282.72225952]
[175.20019531 296.85772705]
[187.10893250 307.27368164]
[184.07597351 321.85623169]
[189.09480286 335.99169922]
[194.11361694 350.12716675]
[208.82769775 355.42150879]
[216.65145874 368.96118164]
[213.89077759 384.35314941]
[201.84915161 394.32980347]
[186.21228027 394.18045044]
[174.36341858 383.97564697]
[171.89721680 368.53375244]
[179.97816467 355.14599609]
[174.95933533 341.01052856]
[169.94050598 326.87506104]
[158.39074707 317.47015381]
[161.06472778 301.87652588]
[156.04589844 287.74108887]
[143.75471497 283.88803101]
[135.80648804 273.50558472]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[5 193]
[6 192]
[7 191]
[8 190]
[9 189]
[10 188]
[11 38]
[12 37]
[13 35]
[14 34]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[52 138]
[53 137]
[54 136]
[55 135]
[56 74]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[82 108]
[83 107]
[84 106]
[85 105]
[87 103]
[88 102]
[89 101]
[90 98]
[91 97]
[109 134]
[110 133]
[111 132]
[112 131]
[113 130]
[116 127]
[117 126]
[118 125]
[119 124]
[146 187]
[147 186]
[148 185]
[149 184]
[150 183]
[152 181]
[153 180]
[156 179]
[157 178]
[158 177]
[159 176]
[200 218]
[201 217]
[203 215]
[204 214]
[205 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
