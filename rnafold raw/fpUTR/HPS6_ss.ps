%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGAGACGGAAGUCUUGGCCCUGCUCCGCUCCCCCGAGAAUCGGGCCUCGCCCUGCUGGGCGGCUGGACCUGGGCAAAGCCUGGGCGCGCUCCCGCGCAGCGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[80.72435760 129.66331482]
[67.36528015 116.38099670]
[54.44754791 124.00545502]
[41.52981949 131.62991333]
[28.61209297 139.25436401]
[15.69436550 146.87881470]
[9.78299618 154.04615784]
[2.29267764 154.53068542]
[-10.83940601 161.77970886]
[-23.97149086 169.02873230]
[-37.10357285 176.27777100]
[-43.21903610 183.27177429]
[-50.72020721 183.54025269]
[-57.03468323 190.35511780]
[-64.54047394 190.40730286]
[-67.21002197 205.69302368]
[-78.37785339 216.46609497]
[-93.74970245 218.58407593]
[-107.41478729 211.23252869]
[-114.11859894 197.23829651]
[-111.28338623 181.98243713]
[-99.99934387 171.33114624]
[-84.60542297 169.38005066]
[-71.02089691 176.87940979]
[-57.58778381 170.20471191]
[-44.35260010 163.14567566]
[-31.22051620 155.89665222]
[-18.08843231 148.64762878]
[-4.95634794 141.39860535]
[8.06991100 133.96109009]
[20.98763847 126.33663940]
[33.90536499 118.71218109]
[46.82309341 111.08773041]
[59.74082184 103.46327209]
[61.25140762 88.53952789]
[50.12354279 78.48117065]
[38.99567795 68.42281342]
[27.86781120 58.36445236]
[12.06301022 52.22892761]
[13.58354950 35.34330368]
[30.23020363 32.13001633]
[37.92617035 47.23658371]
[49.05403519 57.29494476]
[60.18190384 67.35330200]
[71.30976868 77.41165924]
[82.99925995 68.97682190]
[96.62363434 65.93009186]
[109.89952087 68.41757202]
[120.74122620 75.68665314]
[127.58832550 86.26301575]
[142.23922729 83.04573822]
[156.89013672 79.82846832]
[171.54104614 76.61119080]
[186.14407349 73.18312073]
[200.69618225 69.54496765]
[215.24829102 65.90682220]
[229.80039978 62.26866913]
[244.29856873 58.42119598]
[258.73980713 54.36519623]
[273.18099976 50.30919647]
[287.62222290 46.25319290]
[295.17425537 40.84188843]
[302.53826904 42.29483032]
[317.09036255 38.65668106]
[331.64248657 35.01853180]
[339.80078125 21.74901962]
[354.61050415 18.26671791]
[367.21069336 26.12618065]
[374.91549683 20.93475914]
[382.23458862 22.59931183]
[396.88549805 19.38203621]
[411.53640747 16.16475868]
[426.18731689 12.94748306]
[440.83822632 9.73020649]
[455.48913574 6.51292992]
[470.14004517 3.29565310]
[484.31369019 -6.00722933]
[497.17666626 5.03722668]
[490.12466431 20.45492935]
[473.35729980 17.94656181]
[458.70639038 21.16383934]
[444.05548096 24.38111496]
[429.40457153 27.59839249]
[414.75366211 30.81566811]
[400.10275269 34.03294373]
[385.45184326 37.25022125]
[370.84881592 40.67829132]
[363.42980957 53.54272079]
[348.72372437 57.43962479]
[335.28060913 49.57064056]
[320.72851562 53.20878983]
[306.17639160 56.84693909]
[291.67822266 60.69441605]
[277.23699951 64.75041199]
[262.79580688 68.80641937]
[248.35456848 72.86241913]
[242.67996216 77.77550507]
[233.43855286 76.82077789]
[218.88644409 80.45893097]
[204.33433533 84.09707642]
[189.78222656 87.73522949]
[183.96838379 92.48274231]
[174.75833130 91.26210022]
[160.10742188 94.47937775]
[145.45651245 97.69664764]
[130.80560303 100.91392517]
[127.09378052 116.94887543]
[115.35555267 129.31991577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[3 33]
[4 32]
[5 31]
[6 30]
[8 29]
[9 28]
[10 27]
[11 26]
[13 25]
[15 24]
[35 45]
[36 44]
[37 43]
[38 42]
[50 106]
[51 105]
[52 104]
[53 103]
[54 101]
[55 100]
[56 99]
[57 98]
[58 96]
[59 95]
[60 94]
[61 93]
[63 92]
[64 91]
[65 90]
[68 87]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
