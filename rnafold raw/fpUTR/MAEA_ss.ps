%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUGGCUCCUCUGGGGGGCGUGGAUGUGGGGAGGAGCUGCUGUCUGGGUCAGCAGCUGCCCUGCUGGAGGGAGAGGGGGUGCUGCGCUCAUCCCCUGAACUCAGAUUGGAUAGCCCCGGGCCAGCGCUGGAGGAGGAGCAGAGGCAGGGAGGUGGGAGGAGCGUGCGCAGAGGCGUGGGAGGCCUGAGGAGUAAGCGGCUGG\
) } def
/len { sequence length } bind def

/coor [
[429.65838623 415.81942749]
[434.92477417 395.43585205]
[423.57485962 385.62872314]
[412.22494507 375.82162476]
[400.87503052 366.01452637]
[383.48764038 363.65344238]
[377.58065796 346.21475220]
[366.08178711 336.58273315]
[354.58291626 326.95068359]
[343.08404541 317.31866455]
[331.58517456 307.68664551]
[320.08630371 298.05459595]
[308.58743286 288.42257690]
[297.08856201 278.79055786]
[284.49108887 283.21957397]
[271.24414062 280.82513428]
[260.82803345 272.12762451]
[256.03298950 259.31747437]
[258.21209717 245.70437622]
[246.86216736 235.89727783]
[235.51225281 226.09016418]
[224.16233826 216.28305054]
[212.73760986 206.56320190]
[201.23873901 196.93118286]
[189.73986816 187.29914856]
[182.59022522 185.41299438]
[178.14006042 177.43034363]
[163.45112610 174.96366882]
[158.06776428 160.08650208]
[146.71784973 150.27940369]
[135.36793518 140.47229004]
[124.01801300 130.66517639]
[112.66809845 120.85807037]
[88.72773743 125.59421539]
[69.06980133 106.11772156]
[56.10749054 115.18904877]
[42.67385864 108.75579071]
[27.74821663 110.24748993]
[12.82257366 111.73919678]
[-2.10306954 113.23089600]
[-17.02871323 114.72260284]
[-31.95435524 116.21430206]
[-46.87999725 117.70600128]
[-61.80564117 119.19770813]
[-70.46611023 132.21809387]
[-85.48423767 136.57582092]
[-99.76892853 130.21330261]
[-106.57539368 116.13473511]
[-102.68981171 100.98757935]
[-89.94685364 91.92385864]
[-74.36334991 93.22319031]
[-63.29734421 104.27206421]
[-48.37170029 102.78036499]
[-33.44606018 101.28865814]
[-18.52041435 99.79695892]
[-3.59477210 98.30525208]
[11.33087158 96.81355286]
[26.25651360 95.32185364]
[41.18215942 93.83014679]
[53.07688904 84.86551666]
[67.57810211 91.19207764]
[74.64271545 77.95987701]
[67.57810211 64.72766876]
[52.36438370 65.27922058]
[38.47647476 59.19538879]
[28.64746475 47.73193741]
[24.78621864 33.19743729]
[27.60682487 18.48847198]
[36.49723053 6.51240492]
[29.43261528 -6.71979856]
[22.36800003 -19.95200157]
[8.60936165 -20.82662010]
[-2.82903814 -28.32693672]
[-9.01713943 -40.40374374]
[-8.43325901 -53.85270309]
[-1.33684111 -65.16434479]
[-8.19785309 -78.50325012]
[-15.05886459 -91.84216309]
[-21.91987610 -105.18107605]
[-28.78088951 -118.51998138]
[-35.64189911 -131.85888672]
[-42.50291061 -145.19779968]
[-49.36392593 -158.53671265]
[-64.65308380 -161.81932068]
[-74.21438599 -174.19331360]
[-73.53327942 -189.81605530]
[-62.93135071 -201.31097412]
[-47.41451645 -203.25051880]
[-34.30934906 -194.71888733]
[-29.80370522 -179.74447632]
[-36.02501297 -165.39772034]
[-29.16400337 -152.05880737]
[-22.30298996 -138.71990967]
[-15.44197845 -125.38099670]
[-8.58096695 -112.04208374]
[-1.71995509 -98.70317841]
[5.14105701 -85.36426544]
[12.00206852 -72.02535248]
[28.29535294 -70.04170227]
[40.31733322 -58.62414551]
[43.19524765 -42.12736130]
[35.60020447 -27.01661682]
[42.66481781 -13.78441334]
[49.72943497 -0.55220979]
[64.62711334 -1.27649677]
[78.41863251 4.56332922]
[88.34761810 15.85829163]
[92.40449524 30.40345955]
[89.73300934 45.32827759]
[80.81030273 57.66305542]
[87.87492371 70.89525604]
[102.35819244 69.98824310]
[115.02844238 75.57382965]
[123.29032135 85.84584808]
[125.76016998 98.11793518]
[122.47520447 109.50815582]
[133.82511902 119.31526184]
[145.17504883 129.12237549]
[156.52496338 138.92947388]
[167.87487793 148.73658752]
[183.37564087 151.90472412]
[187.94715881 166.08042908]
[199.37188721 175.80027771]
[210.87075806 185.43229675]
[222.36964417 195.06433105]
[230.96215820 198.17805481]
[233.96945190 204.93313599]
[245.31936646 214.74024963]
[256.66928101 224.54734802]
[268.01919556 234.35446167]
[284.43225098 230.27635193]
[299.88916016 236.71917725]
[308.37652588 250.96183777]
[306.72058105 267.29168701]
[318.21948242 276.92370605]
[329.71835327 286.55572510]
[341.21722412 296.18777466]
[352.71609497 305.81979370]
[364.21496582 315.45181274]
[375.71383667 325.08386230]
[387.21270752 334.71588135]
[400.10910034 334.36083984]
[409.48880005 342.62405396]
[410.68212891 354.66461182]
[422.03204346 364.47171021]
[433.38195801 374.27880859]
[444.73187256 384.08593750]
[452.92529297 379.12142944]
[462.04818726 376.24349976]
[471.57916260 375.60958862]
[480.97515869 377.24920654]
[489.70239258 381.06240845]
[497.26672363 386.82601929]
[503.24148560 394.20663452]
[507.29171753 402.77987671]
[509.19287109 412.05480957]
[508.84320068 421.50210571]
[506.26925659 430.58410645]
[501.62399292 438.78558350]
[511.85864258 449.75155640]
[527.41949463 450.45712280]
[537.64263916 461.72393799]
[536.87414551 476.55447388]
[547.10876465 487.52041626]
[562.18121338 492.32998657]
[565.20867920 506.91366577]
[575.44335938 517.87963867]
[585.67797852 528.84558105]
[603.40826416 533.80914307]
[606.69812012 551.04492188]
[622.26794434 551.51196289]
[632.66259766 562.62078857]
[632.12139893 577.46136475]
[642.52288818 588.26922607]
[652.92437744 599.07702637]
[663.32586670 609.88482666]
[678.91381836 608.64013672]
[691.62493896 617.74847412]
[695.45739746 632.90917969]
[688.60162354 646.96380615]
[674.29473877 653.27618408]
[659.29193115 648.86584473]
[650.67718506 635.81518555]
[652.51800537 620.28631592]
[642.11657715 609.47851562]
[631.71508789 598.67065430]
[621.31359863 587.86285400]
[606.46313477 587.83520508]
[595.76062012 577.02270508]
[595.89031982 561.44641113]
[583.80310059 560.90032959]
[575.04888916 551.97711182]
[574.71203613 539.08020020]
[564.47741699 528.11425781]
[554.24273682 517.14831543]
[539.90234375 513.12310791]
[536.14282227 497.75506592]
[525.90814209 486.78912354]
[511.05993652 486.53390503]
[500.52432251 475.55865479]
[500.89270020 459.98620605]
[490.65805054 449.02023315]
[470.83352661 455.16976929]
[450.55303955 450.41442871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 147]
[3 146]
[4 145]
[5 144]
[7 141]
[8 140]
[9 139]
[10 138]
[11 137]
[12 136]
[13 135]
[14 134]
[19 130]
[20 129]
[21 128]
[22 127]
[23 125]
[24 124]
[25 123]
[27 122]
[29 120]
[30 119]
[31 118]
[32 117]
[33 116]
[35 61]
[37 59]
[38 58]
[39 57]
[40 56]
[41 55]
[42 54]
[43 53]
[44 52]
[62 111]
[63 110]
[69 104]
[70 103]
[71 102]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[159 202]
[160 201]
[163 198]
[164 197]
[166 195]
[167 194]
[168 193]
[170 190]
[173 187]
[174 186]
[175 185]
[176 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
