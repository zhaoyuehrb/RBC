%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCCGCCUCAGUUCGCGCCGCGCCUCGGCUUGGAACGCAGGAGCGCCGGCUCCGGGAGCCCGAGCGGAGCCAGCCGCGCGCACAGCCAGCGGCCGCGCCGGCGAUGCGGGGCCACCCCGCGCCCGCCCCAGUCCCGGCCCCGGCCCCCGCGGGAAGGGGCUGAGCUGCCCGCCGCCGCCCGG\
) } def
/len { sequence length } bind def

/coor [
[-62.53116226 146.71060181]
[-58.79395676 161.23759460]
[-61.08318329 176.06187439]
[-69.02844238 188.78480530]
[-81.34413147 197.34773254]
[-96.03751373 200.36512756]
[-110.73109436 197.34875488]
[-123.04738617 188.78668213]
[-130.99353027 176.06430054]
[-133.28378296 161.24017334]
[-129.54759216 146.71293640]
[-120.38948059 134.83316040]
[-107.28881073 127.52230072]
[-122.22342682 126.12335968]
[-136.68505859 132.53988647]
[-148.63525391 123.64933014]
[-163.56988525 122.25038147]
[-178.50450134 120.85144043]
[-193.43911743 119.45249939]
[-208.37374878 118.05355072]
[-222.83537292 124.47008514]
[-234.78556824 115.57952118]
[-249.72019958 114.18058014]
[-262.97048950 125.58525848]
[-280.03466797 123.92253876]
[-290.41693115 110.70507812]
[-305.37313843 109.55993652]
[-320.32937622 108.41479492]
[-334.67996216 115.07597351]
[-346.77938843 106.38961792]
[-361.73562622 105.24447632]
[-376.69183350 104.09933472]
[-391.64807129 102.95419312]
[-406.60430908 101.80905151]
[-421.56051636 100.66390991]
[-428.47988892 114.16939545]
[-440.01171875 123.97041321]
[-454.37857056 128.59716797]
[-469.38165283 127.37426758]
[-482.73721313 120.51908875]
[-492.42431641 109.10395813]
[-496.99057007 94.88851929]
[-511.94680786 93.74337769]
[-526.90301514 92.59823608]
[-541.85925293 91.45309448]
[-556.81549072 90.30795288]
[-571.36004639 97.88338470]
[-585.04565430 88.84809113]
[-583.79370117 72.49680328]
[-568.89208984 65.65032196]
[-555.67034912 75.35172272]
[-540.71411133 76.49686432]
[-525.75787354 77.64200592]
[-510.80166626 78.78714752]
[-495.84542847 79.93228912]
[-489.16824341 66.57771301]
[-477.85623169 56.77041245]
[-463.61270142 52.02838898]
[-448.59832764 53.10380554]
[-435.10330200 59.86384201]
[-425.19799805 71.30622101]
[-420.41537476 85.70768738]
[-405.45916748 86.85282898]
[-390.50292969 87.99797058]
[-375.54669189 89.14311218]
[-360.59048462 90.28825378]
[-345.63424683 91.43339539]
[-332.35345459 84.69030762]
[-319.18423462 93.45857239]
[-304.22799683 94.60371399]
[-289.27178955 95.74885559]
[-280.75036621 86.06603241]
[-268.01620483 83.02068329]
[-255.67425537 87.94477844]
[-248.32124329 99.24595642]
[-233.38662720 100.64489746]
[-219.99322510 94.12830353]
[-206.97480774 103.11892700]
[-192.04017639 104.51787567]
[-177.10556030 105.91681671]
[-162.17092896 107.31576538]
[-147.23631287 108.71470642]
[-133.84291077 102.19811249]
[-120.82448578 111.18873596]
[-105.88986206 112.58767700]
[-100.57688141 108.84629059]
[-93.25970459 108.52806854]
[-86.18775177 112.58767700]
[-71.25312805 111.18873596]
[-57.52208710 100.27616882]
[-40.84764099 108.06433105]
[-25.93892479 106.41198730]
[-11.03021049 104.75964355]
[3.87850332 103.10729980]
[18.78721809 101.45494843]
[30.58472252 92.36274719]
[45.15322495 98.53279114]
[60.06193542 96.88043976]
[74.97064972 95.22809601]
[82.43121338 81.54527283]
[96.46424103 74.76633453]
[111.81999969 77.42729187]
[122.38146973 66.77575684]
[132.94294739 56.12422562]
[143.50442505 45.47269058]
[147.76832581 27.56984711]
[164.85169983 23.59690475]
[175.23077393 12.76756287]
[185.60986328 1.93822098]
[195.98893738 -8.89111996]
[206.36802673 -19.72046089]
[216.74710083 -30.54980278]
[227.12619019 -41.37914276]
[233.72071838 -56.99800110]
[250.55471802 -54.98492813]
[253.28044128 -38.25152206]
[237.95553589 -31.00006104]
[227.57644653 -20.17072105]
[217.19737244 -9.34137917]
[206.81828308 1.48796260]
[196.43919373 12.31730366]
[186.06011963 23.14664459]
[175.68103027 33.97598648]
[175.62011719 46.08670807]
[167.04177856 55.19504929]
[154.15596008 56.03416824]
[143.59448242 66.68569946]
[133.03300476 77.33723450]
[122.47153473 87.98876953]
[124.95295715 94.84353638]
[125.39179230 102.12039948]
[139.31013489 107.71324921]
[153.22846985 113.30609131]
[167.14680481 118.89894104]
[179.30976868 114.56179810]
[190.79573059 119.52390289]
[195.65194702 130.61849976]
[209.47331238 136.44689941]
[223.29466248 142.27528381]
[237.11602783 148.10366821]
[250.93737793 153.93205261]
[264.75872803 159.76043701]
[278.58010864 165.58882141]
[293.07159424 159.87619019]
[307.00540161 165.98388672]
[312.36221313 179.83453369]
[326.18356323 185.66291809]
[340.00491333 191.49130249]
[356.20101929 188.91857910]
[366.31549072 201.82707214]
[359.94345093 216.93763733]
[343.63989258 218.70582581]
[334.17654419 205.31265259]
[320.35519409 199.48426819]
[306.53381348 193.65588379]
[292.87670898 199.48846436]
[278.77685547 193.77455139]
[272.75170898 179.41017151]
[258.93035889 173.58178711]
[245.10899353 167.75340271]
[231.28764343 161.92501831]
[217.46627808 156.09663391]
[203.64492798 150.26824951]
[189.82356262 144.43986511]
[172.56472778 147.56364441]
[161.55395508 132.81727600]
[147.63562012 127.22442627]
[133.71728516 121.63158417]
[119.79895020 116.03873444]
[105.21381378 124.94104004]
[88.28391266 122.62681580]
[76.62299347 110.13681030]
[61.71428299 111.78915405]
[46.80556870 113.44150543]
[33.94169235 122.65189362]
[20.43956184 116.36366272]
[5.53084755 118.01601410]
[-9.37786674 119.66835785]
[-24.28658104 121.32070160]
[-39.19529343 122.97304535]
[-47.86232758 132.54545593]
[-60.32949066 133.60356140]
[-69.85418701 126.12335968]
[-84.78881073 127.52230072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 85]
[14 84]
[16 82]
[17 81]
[18 80]
[19 79]
[20 78]
[22 76]
[23 75]
[26 71]
[27 70]
[28 69]
[30 67]
[31 66]
[32 65]
[33 64]
[34 63]
[35 62]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[88 184]
[89 183]
[91 180]
[92 179]
[93 178]
[94 177]
[95 176]
[97 174]
[98 173]
[99 172]
[102 129]
[103 128]
[104 127]
[105 126]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[112 118]
[113 117]
[131 169]
[132 168]
[133 167]
[134 166]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[142 159]
[143 158]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
