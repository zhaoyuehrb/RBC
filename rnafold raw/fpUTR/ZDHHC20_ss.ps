%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGGGUGGGGGCGGGGCCUGGCUGGGCGCCGGGACGGGAGGAGUCCCGGCGGCGCCUCGGACUUUUGCUCCCACAAGUCCUGCCUCGGAGGCGGGGGAGCUGGACCAGCAGCCGCCUGGAGCGUCCGAGUCACCGUCGCCGGGGCUCCCGCGCUCCCCAGAACGGUGGGACGCGGGGCUCGGCAGCCGCCAGCGGAAC\
) } def
/len { sequence length } bind def

/coor [
[211.02549744 1060.64794922]
[209.84860229 1045.69421387]
[200.85394287 1037.59741211]
[199.75588989 1025.14270020]
[207.68721008 1014.96386719]
[206.74536133 999.99346924]
[205.80349731 985.02307129]
[204.86164856 970.05267334]
[203.91978455 955.08227539]
[192.61213684 945.45556641]
[191.44369507 930.28686523]
[201.61769104 918.49163818]
[200.67584229 903.52124023]
[192.15466309 891.30493164]
[199.01016235 877.04614258]
[198.06831360 862.07574463]
[197.12644958 847.10534668]
[196.18460083 832.13494873]
[195.24273682 817.16455078]
[194.30087280 802.19415283]
[185.77969360 789.97784424]
[192.63520813 775.71905518]
[191.69334412 760.74865723]
[178.29142761 754.24835205]
[169.88668823 741.82995605]
[168.81927490 726.77252197]
[175.47575378 713.11279297]
[188.15846252 704.56311035]
[187.21659851 689.59271240]
[186.27473450 674.62231445]
[185.33288574 659.65191650]
[183.68687439 644.74249268]
[181.34034729 629.92718506]
[178.99383545 615.11187744]
[176.64732361 600.29650879]
[174.18450928 585.50012207]
[171.60557556 570.72344971]
[161.79530334 559.51599121]
[167.04473877 544.59100342]
[162.79400635 538.53686523]
[164.54324341 529.56219482]
[162.19673157 514.74682617]
[159.85021973 499.93151855]
[157.50369263 485.11618042]
[155.15718079 470.30087280]
[152.81066895 455.48553467]
[150.46414185 440.67022705]
[148.11763000 425.85488892]
[145.77111816 411.03958130]
[143.42459106 396.22424316]
[141.07807922 381.40890503]
[138.73156738 366.59359741]
[136.38504028 351.77825928]
[134.03852844 336.96295166]
[131.69201660 322.14761353]
[117.34777069 307.31478882]
[125.31314850 287.42712402]
[122.27133942 272.73876953]
[119.22953033 258.05044556]
[116.18772125 243.36209106]
[113.14591217 228.67375183]
[110.10410309 213.98539734]
[107.06229401 199.29705811]
[104.78626251 197.64616394]
[103.03007507 194.99021912]
[102.18132782 191.52378845]
[102.54966736 187.57855225]
[104.32134247 183.59213257]
[102.20782471 168.74177551]
[100.09430695 153.89141846]
[97.98078918 139.04106140]
[95.86727142 124.19071198]
[89.10357666 123.14289093]
[82.63150024 120.17110443]
[77.00455475 115.36613464]
[72.74533844 108.97882843]
[70.29923248 101.40909576]
[69.99213409 93.18153381]
[71.99590302 84.90915680]
[76.30493927 77.24776459]
[70.78307343 63.30111694]
[65.26120758 49.35447311]
[59.73933792 35.40782547]
[54.21746826 21.46117592]
[48.69559860 7.51452971]
[43.17373276 -6.43211794]
[31.72121429 -18.93316460]
[40.56334305 -33.39874649]
[56.91135025 -28.90664482]
[57.12038040 -11.95398617]
[62.64224625 1.99266124]
[68.16411591 15.93930817]
[73.68598175 29.88595581]
[79.20785522 43.83260345]
[84.72972107 57.77925110]
[90.25158691 71.72589874]
[105.20534515 70.54901123]
[108.47749329 55.91025925]
[102.56230927 38.47638702]
[114.92582703 26.02741814]
[117.96763611 11.33907604]
[121.00944519 -3.34926581]
[124.05125427 -18.03760719]
[115.16595459 -31.10768509]
[118.20706177 -46.61662292]
[131.37034607 -55.36324692]
[146.84626770 -52.15834045]
[155.45323181 -38.90331268]
[152.08488464 -23.46214104]
[138.73959351 -14.99579906]
[135.69778442 -0.30745646]
[132.65597534 14.38088608]
[129.61416626 29.06922722]
[135.99276733 39.35396194]
[133.57243347 51.62054443]
[123.11624908 59.18240738]
[119.84410095 73.82115936]
[128.55696106 102.81716919]
[110.71762848 122.07719421]
[112.83114624 136.92755127]
[114.94466400 151.77790833]
[117.05818176 166.62826538]
[119.17169952 181.47860718]
[121.75063324 196.25524902]
[124.79244995 210.94358826]
[127.83425903 225.63194275]
[130.87606812 240.32028198]
[133.91787720 255.00862122]
[136.95968628 269.69696045]
[140.00149536 284.38531494]
[148.51550293 288.47421265]
[154.10635376 295.91519165]
[155.61845398 304.95932007]
[152.83677673 313.55230713]
[146.50733948 319.80108643]
[148.85385132 334.61642456]
[151.20037842 349.43176270]
[153.54689026 364.24707031]
[155.89340210 379.06240845]
[158.23992920 393.87771606]
[160.58644104 408.69305420]
[162.93295288 423.50836182]
[165.27947998 438.32369995]
[167.62599182 453.13903809]
[169.97250366 467.95434570]
[172.31903076 482.76968384]
[174.66554260 497.58499146]
[177.01205444 512.40032959]
[179.35858154 527.21563721]
[181.82138062 542.01208496]
[191.81611633 554.27648926]
[186.38221741 568.14453125]
[188.96115112 582.92114258]
[193.52314758 590.84539795]
[191.46264648 597.95001221]
[193.80915833 612.76531982]
[196.15567017 627.58068848]
[198.50219727 642.39599609]
[208.21759033 630.96746826]
[223.15614319 629.61114502]
[234.77093506 639.10308838]
[236.41670227 654.01251221]
[227.15180969 665.80920410]
[212.27709961 667.74383545]
[200.30328369 658.71008301]
[201.24514771 673.68048096]
[202.18699646 688.65087891]
[203.12886047 703.62127686]
[216.78311157 710.51391602]
[225.09910583 723.23168945]
[225.92732239 738.30419922]
[219.14529419 751.67803955]
[206.66375732 759.80676270]
[207.60560608 774.77722168]
[216.19416809 788.06433105]
[209.27128601 801.25231934]
[210.21313477 816.22271729]
[211.15499878 831.19311523]
[212.09684753 846.16351318]
[213.03871155 861.13391113]
[213.98057556 876.10430908]
[222.56912231 889.39141846]
[215.64624023 902.57940674]
[216.58810425 917.54980469]
[228.16020203 927.97686768]
[228.90213013 943.17242432]
[218.89018250 954.14038086]
[219.83204651 969.11077881]
[220.77389526 984.08117676]
[221.71575928 999.05157471]
[222.65760803 1014.02197266]
[233.20182800 1029.11340332]
[224.80236816 1044.51733398]
[225.97926331 1059.47106934]
[238.15818787 1069.54321289]
[239.56469727 1085.28491211]
[229.36430359 1097.35656738]
[213.60873413 1098.59655762]
[201.64547729 1088.26916504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[5 191]
[6 190]
[7 189]
[8 188]
[9 187]
[12 184]
[13 183]
[15 181]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[22 174]
[23 173]
[28 168]
[29 167]
[30 166]
[31 165]
[32 158]
[33 157]
[34 156]
[35 155]
[36 153]
[37 152]
[39 150]
[41 149]
[42 148]
[43 147]
[44 146]
[45 145]
[46 144]
[47 143]
[48 142]
[49 141]
[50 140]
[51 139]
[52 138]
[53 137]
[54 136]
[55 135]
[57 130]
[58 129]
[59 128]
[60 127]
[61 126]
[62 125]
[63 124]
[68 123]
[69 122]
[70 121]
[71 120]
[72 119]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[97 117]
[98 116]
[100 113]
[101 112]
[102 111]
[103 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
