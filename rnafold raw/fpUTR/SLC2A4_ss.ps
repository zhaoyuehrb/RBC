%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUCCACCAGAUCCGCGGGAGCCCCACUGCUCUCCGGGUCCUUGGCUUGUGGCUGUGGGUCCCAUCGGGCCCGCCCUCGCACGUCACUCCGGGACCCCCGCGGCCUCCGCAGGUUCUGCGCUCCAGGCCGGAGUCAGAGACUCCAGGAUCGGUUCUUUCAUCUUCGCCGCCCCUGCGCGUCCAGCUCUUCUAAGACGAG\
) } def
/len { sequence length } bind def

/coor [
[181.03820801 295.86941528]
[171.83476257 289.58239746]
[164.96875000 280.76867676]
[161.10615540 270.25680542]
[160.62971497 259.04122925]
[163.60092163 248.18832397]
[169.75276184 238.73483276]
[160.97395325 226.57208252]
[152.19515991 214.40933228]
[145.72618103 210.82264709]
[143.37594604 201.98716736]
[134.78831482 189.68869019]
[126.20068359 177.39021301]
[117.61304474 165.09173584]
[109.02541351 152.79325867]
[82.73854065 103.49964142]
[68.29615784 99.44778442]
[53.85377502 95.39591980]
[39.41139221 91.34406281]
[24.82174683 94.82864380]
[13.76918888 104.96969604]
[2.71663070 115.11074829]
[-8.33592701 125.25180054]
[-8.76453114 141.05027771]
[-20.29610252 151.85760498]
[-36.08916473 151.26199341]
[-46.77397156 139.61680603]
[-46.01142120 123.83093262]
[-34.25391769 113.26983643]
[-18.47698021 114.19924927]
[-7.42442226 104.05818939]
[3.62813568 93.91713715]
[14.68069363 83.77608490]
[13.92005062 76.31475830]
[0.23587979 70.17118835]
[12.39876366 61.39210129]
[11.63812065 53.93077087]
[-1.23345530 46.22866058]
[-14.10503101 38.52654648]
[-26.97660637 30.82443428]
[-39.84818268 23.12232018]
[-52.71975708 15.42020798]
[-65.59133148 7.71809530]
[-78.69734955 0.42204034]
[-92.02499390 -6.46082783]
[-105.35263824 -13.34369564]
[-118.68028259 -20.22656441]
[-134.49218750 -19.68421555]
[-142.25016785 -32.39889145]
[-155.57781982 -39.28175735]
[-168.90545654 -46.16462708]
[-182.23310852 -53.04749680]
[-195.56076050 -59.93036270]
[-210.45169067 -55.35897064]
[-223.86976624 -62.52903366]
[-228.13612366 -76.75344086]
[-241.46377563 -83.63630676]
[-254.79142761 -90.51918030]
[-268.11907959 -97.40204620]
[-281.44671631 -104.28491211]
[-294.77435303 -111.16778564]
[-308.10198975 -118.05065155]
[-321.42965698 -124.93351746]
[-337.77648926 -123.62477875]
[-346.85925293 -137.27891541]
[-339.33438110 -151.84971619]
[-322.94281006 -152.34799194]
[-314.54678345 -138.26116943]
[-301.21914673 -131.37829590]
[-287.89147949 -124.49542999]
[-274.56384277 -117.61255646]
[-261.23620605 -110.72969055]
[-247.90855408 -103.84682465]
[-234.58090210 -96.96395874]
[-221.25326538 -90.08108521]
[-207.18490601 -94.83679962]
[-193.57072449 -88.04644775]
[-188.67788696 -73.25801086]
[-175.35023499 -66.37513733]
[-162.02259827 -59.49227142]
[-148.69494629 -52.60940552]
[-135.36730957 -45.72653580]
[-120.50868225 -46.76119232]
[-111.79741669 -33.55421066]
[-98.46976471 -26.67134094]
[-85.14212036 -19.78847313]
[-71.81447601 -12.90560532]
[-69.09962463 -13.63416100]
[-65.93151093 -13.32679844]
[-62.70487976 -11.80505466]
[-59.87185669 -9.03711510]
[-57.88922119 -5.15348005]
[-45.01764297 2.54863262]
[-32.14606857 10.25074577]
[-19.27449417 17.95285797]
[-6.40291786 25.65497208]
[6.46865749 33.35708237]
[19.34023285 41.05919647]
[43.46324921 76.90167999]
[57.90563202 80.95353699]
[72.34801483 85.00540161]
[86.79039764 89.05725861]
[100.61470795 83.23587799]
[107.80812073 70.07324982]
[115.00153351 56.91061783]
[122.19494629 43.74798965]
[129.38835144 30.58535767]
[127.57086182 9.23853207]
[145.61949158 -0.76324522]
[152.18803406 -14.24857998]
[158.75657654 -27.73391533]
[165.32511902 -41.21924973]
[171.89366150 -54.70458221]
[173.39387512 -71.59202576]
[190.03665161 -74.82535553]
[197.75079346 -59.72806549]
[185.37899780 -48.13604355]
[178.81045532 -34.65070724]
[172.24191284 -21.16537285]
[165.67337036 -7.68003750]
[159.10482788 5.80529690]
[163.33419800 13.62805176]
[163.48724365 22.65725899]
[159.40292358 30.86538696]
[151.88587952 36.35099411]
[142.55097961 37.77877045]
[135.35757446 50.94139862]
[128.16416931 64.10402679]
[120.97074890 77.26666260]
[113.77734375 90.42929077]
[123.83171082 101.56076050]
[137.65602112 95.73938751]
[151.48033142 89.91800690]
[165.30464172 84.09662628]
[179.12895203 78.27525330]
[192.95326233 72.45387268]
[205.20440674 60.73440170]
[219.85731506 69.26248932]
[215.71884155 85.70357513]
[198.77464294 86.27818298]
[184.95033264 92.09956360]
[171.12602234 97.92093658]
[157.30171204 103.74231720]
[143.47740173 109.56369781]
[129.65309143 115.38507080]
[127.57078552 122.59020996]
[121.32389069 144.20562744]
[129.91152954 156.50410461]
[138.49916077 168.80258179]
[147.08679199 181.10105896]
[155.67442322 193.39953613]
[164.35791016 205.63052368]
[173.13671875 217.79327393]
[181.91551208 229.95603943]
[200.93569946 227.18069458]
[218.65635681 234.41357422]
[230.20315552 249.57559204]
[232.44557190 268.41915894]
[224.84515381 285.71792603]
[234.36671448 297.30844116]
[249.10528564 303.06042480]
[251.20556641 317.80621338]
[260.72714233 329.39672852]
[270.24868774 340.98721313]
[279.77026367 352.57772827]
[290.33532715 363.22570801]
[301.85107422 372.83755493]
[313.36682129 382.44940186]
[321.96789551 385.54953003]
[324.98590088 392.30258179]
[336.35000610 402.09323120]
[352.55368042 404.61776733]
[358.21603394 420.00833130]
[347.51214600 432.43243408]
[331.45324707 429.10925293]
[326.55935669 413.45733643]
[315.19525146 403.66668701]
[303.75497437 393.96514893]
[292.23922729 384.35330200]
[280.72348022 374.74145508]
[285.10427856 389.08746338]
[282.91647339 403.92706299]
[274.58190918 416.39843750]
[261.70791626 424.09652710]
[246.77722168 425.53677368]
[232.66915894 420.44143677]
[222.10443115 409.79312134]
[217.12042236 395.64532471]
[218.67828369 380.72644043]
[226.47758484 367.91354370]
[239.01425171 359.67752075]
[253.87062073 357.60668945]
[268.17974854 362.09930420]
[258.65817261 350.50878906]
[249.13662720 338.91827393]
[239.61505127 327.32775879]
[225.55754089 322.40481567]
[222.77621460 306.82998657]
[213.25465393 295.23950195]
[202.78475952 298.82257080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 154]
[8 153]
[9 152]
[11 151]
[12 150]
[13 149]
[14 148]
[15 147]
[16 102]
[17 101]
[18 100]
[19 99]
[20 33]
[21 32]
[22 31]
[23 30]
[37 98]
[38 97]
[39 96]
[40 95]
[41 94]
[42 93]
[43 92]
[44 87]
[45 86]
[46 85]
[47 84]
[49 82]
[50 81]
[51 80]
[52 79]
[53 78]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[103 130]
[104 129]
[105 128]
[106 127]
[107 126]
[109 121]
[110 120]
[111 119]
[112 118]
[113 117]
[131 145]
[132 144]
[133 143]
[134 142]
[135 141]
[136 140]
[159 199]
[160 198]
[162 196]
[163 195]
[164 194]
[165 193]
[166 180]
[167 179]
[168 178]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
