%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCUCCCCCGGCGCCUCCGACUGGCAGUGGGACUCAGCGGGCGUGGAGGUCGCGGCUGAGCGAGCGAGCCCUGGGCGAGUGAAUUGUGGCUGUGGGUUGACGGUGGAGACACCCCCCGGAGGGAGGCGGAGGGAAGGGAGGCGAGGCCUGCACCUGCAUGCUUCCCGCCUCCCACUCCCCAGCGCCCCCGGACCGUGCAGUUCUCUGCAGGACCAGGCC\
) } def
/len { sequence length } bind def

/coor [
[13.57653618 247.35728455]
[6.07653618 260.34765625]
[-1.42346358 273.33804321]
[-8.92346382 286.32843018]
[-16.42346382 299.31881714]
[-23.92346382 312.30917358]
[-31.33136177 325.35232544]
[-27.24983025 340.38491821]
[-34.85525894 353.56109619]
[-49.21169281 357.35958862]
[-56.52711487 370.45477295]
[-63.84254074 383.54998779]
[-71.15796661 396.64520264]
[-78.38054657 409.79183960]
[-85.50993347 422.98928833]
[-84.50524139 439.35760498]
[-98.32582092 448.18505859]
[-112.75424957 440.39065552]
[-112.94779205 423.99264526]
[-98.70735168 415.85989380]
[-91.57796478 402.66247559]
[-91.16472626 395.28945923]
[-84.25317383 389.32977295]
[-76.93775177 376.23458862]
[-69.62232971 363.13937378]
[-62.30690384 350.04415894]
[-66.59957123 335.82766724]
[-59.36724091 322.44305420]
[-44.42657471 318.03689575]
[-43.90903854 310.67047119]
[-36.91384506 304.80917358]
[-29.41384506 291.81881714]
[-21.91384506 278.82843018]
[-14.41384506 265.83804321]
[-6.91384459 252.84767151]
[0.58615530 239.85728455]
[-3.01999116 232.87275696]
[-3.58331156 224.93833923]
[-0.93849444 217.33708191]
[4.55496931 211.32742310]
[12.05983734 207.93504333]
[20.38820076 207.77813721]
[28.61111832 195.23287964]
[36.83403778 182.68760681]
[37.33996201 167.80160522]
[51.37623978 160.50135803]
[59.59915924 147.95610046]
[67.82207489 135.41084290]
[56.97553253 120.93421173]
[52.27854919 103.46542358]
[37.87192154 110.00450897]
[25.84666824 101.21573639]
[10.90070629 99.94364929]
[-4.04525614 98.67156219]
[-18.99121857 97.39947510]
[-30.91093636 107.77713013]
[-46.67158127 106.60340118]
[-56.92263794 94.57463074]
[-55.58234406 78.82727814]
[-43.44586182 68.70396423]
[-27.71356010 70.21067810]
[-17.71912956 82.45350647]
[-2.77316713 83.72560120]
[12.17279530 84.99768829]
[27.11875725 86.26977539]
[40.45634842 79.63969421]
[53.55063629 88.51946259]
[56.97553253 79.06578827]
[62.30046844 70.53660583]
[52.07566833 59.56147766]
[41.85086823 48.58634949]
[31.62607002 37.61121750]
[21.40126991 26.63608932]
[5.84106255 25.91656494]
[-4.37199306 14.64056587]
[-3.59014392 -0.18927898]
[-13.81494331 -11.16440868]
[-24.03974342 -22.13953781]
[-39.10786819 -26.96262741]
[-42.12226105 -41.54901505]
[-57.50763702 -39.53162766]
[-71.12434387 -46.97238159]
[-77.73648834 -61.01015854]
[-74.80155945 -76.24714661]
[-63.44809723 -86.82441711]
[-48.04174423 -88.67478180]
[-34.50655365 -81.08674622]
[-28.04708290 -66.97806549]
[-31.14713287 -51.77381516]
[-16.81035423 -47.73574066]
[-13.06461334 -32.36433792]
[-2.83981347 -21.38920784]
[7.38498592 -10.41407871]
[22.23299789 -10.14553738]
[32.75874329 0.83914900]
[32.37639999 16.41128922]
[42.60120010 27.38641930]
[52.82600021 38.36154938]
[63.05079651 49.33667755]
[73.27559662 60.31180954]
[77.29514313 57.88307190]
[81.53342438 55.86008835]
[85.94961548 54.26234436]
[90.50117493 53.10523987]
[89.86455536 38.11875534]
[89.22793579 23.13227272]
[88.59131622 8.14578724]
[79.34447479 -5.39777184]
[86.69301605 -20.05829620]
[103.07739258 -20.75429726]
[111.64275360 -6.76978588]
[103.57780457 7.50916958]
[104.21441650 22.49565315]
[104.85103607 37.48213959]
[105.48765564 52.46862411]
[120.55236053 56.79182053]
[133.41189575 65.75104523]
[142.68650818 78.38500214]
[156.96542358 73.79014587]
[171.24432373 69.19528198]
[185.52323914 64.60042572]
[192.72669983 58.99708557]
[200.03681946 60.04312134]
[214.37931824 55.65077972]
[228.72181702 51.25843811]
[235.44627380 40.25804520]
[247.47644043 36.89207077]
[258.22067261 42.43879318]
[272.62387085 38.24984741]
[283.71426392 26.96650314]
[298.09591675 30.84171677]
[305.45507812 25.44447136]
[312.73266602 26.69695473]
[327.19372559 22.71224976]
[341.65478516 18.72754288]
[356.11581421 14.74283695]
[368.74142456 1.33341908]
[385.53933716 6.42430449]
[399.94256592 2.23536134]
[414.34579468 -1.95358205]
[428.74902344 -6.14252520]
[443.15222168 -10.33146858]
[457.55545044 -14.52041149]
[471.95867920 -18.70935440]
[486.30117798 -23.10169601]
[500.58007812 -27.69655609]
[514.85900879 -32.29141617]
[529.13787842 -36.88627625]
[543.41680908 -41.48113632]
[554.18347168 -53.07381058]
[568.66900635 -49.60713196]
[582.94793701 -54.20199203]
[597.22680664 -58.79685211]
[607.82739258 -71.30926514]
[623.91326904 -68.11927795]
[628.93670654 -52.50848389]
[617.73004150 -40.53592300]
[601.82171631 -44.51794052]
[587.54278564 -39.92308044]
[573.26385498 -35.32822037]
[563.51855469 -24.06420517]
[548.01165771 -27.20222855]
[533.73278809 -22.60736847]
[519.45385742 -18.01250839]
[505.17492676 -13.41764736]
[490.89602661 -8.82278728]
[487.96038818 -5.06496811]
[482.63616943 -3.10673642]
[476.14761353 -4.30613470]
[461.74438477 -0.11719148]
[447.34118652 4.07175159]
[432.93795776 8.26069546]
[418.53472900 12.44963837]
[404.13150024 16.63858223]
[389.72830200 20.82752419]
[383.63464355 31.27126694]
[371.67568970 34.88214111]
[360.10052490 29.20389175]
[345.63946533 33.18859863]
[331.17843628 37.17330551]
[316.71737671 41.15801239]
[302.28488159 45.24493790]
[292.22470093 56.22866058]
[276.81283569 52.65306854]
[262.40960693 56.84201050]
[250.96202087 70.14764404]
[233.11416626 65.60093689]
[218.77166748 69.99327850]
[204.42916870 74.38562012]
[190.11810303 78.87933350]
[175.83918762 83.47419739]
[161.56028748 88.06905365]
[147.28137207 92.66391754]
[146.86064148 109.66577148]
[140.51943970 125.44643402]
[129.05894470 138.01214600]
[142.42555237 146.47645569]
[141.66723633 161.35173035]
[148.79661560 174.54916382]
[155.92601013 187.74658203]
[163.05538940 200.94400024]
[170.18476868 214.14141846]
[184.42521667 222.27418518]
[184.23167419 238.67218018]
[169.80323792 246.46656799]
[155.98266602 237.63914490]
[156.98735046 221.27079773]
[149.85797119 208.07337952]
[142.72859192 194.87596130]
[135.59919739 181.67854309]
[128.46981812 168.48112488]
[115.61315155 160.96078491]
[115.86153412 145.14152527]
[97.96931458 147.80400085]
[80.36734009 143.63375854]
[72.14442444 156.17901611]
[63.92150116 168.72428894]
[62.82741928 184.50761414]
[49.37929916 190.91053772]
[41.15637970 203.45579529]
[32.93346405 216.00105286]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 36]
[2 35]
[3 34]
[4 33]
[5 32]
[6 31]
[7 29]
[10 26]
[11 25]
[12 24]
[13 23]
[14 21]
[15 20]
[42 221]
[43 220]
[44 219]
[46 217]
[47 216]
[48 215]
[50 67]
[52 65]
[53 64]
[54 63]
[55 62]
[69 100]
[70 99]
[71 98]
[72 97]
[73 96]
[76 93]
[77 92]
[78 91]
[80 89]
[104 115]
[105 114]
[106 113]
[107 112]
[118 193]
[119 192]
[120 191]
[121 190]
[123 189]
[124 188]
[125 187]
[128 185]
[129 184]
[131 182]
[133 181]
[134 180]
[135 179]
[136 178]
[138 175]
[139 174]
[140 173]
[141 172]
[142 171]
[143 170]
[144 169]
[145 166]
[146 165]
[147 164]
[148 163]
[149 162]
[151 160]
[152 159]
[153 158]
[196 213]
[198 211]
[199 210]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
