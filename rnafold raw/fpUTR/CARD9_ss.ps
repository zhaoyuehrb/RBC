%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUGUGGAGUUAAGCAGAACCCAUCAGGAAGUGCACAGGCGUCCGGCGUGCUCCUCCCUCCCUGCAGCCCCGGGCAGCAUCUCCCAGAGGCUCCGCGGCCCAGGCUCCUGGUGUGUCUGCAGUGCAGGUGGCUCCUGGAAGACCCUCAGCCUGCCUGCUGAGGCC\
) } def
/len { sequence length } bind def

/coor [
[237.48641968 355.91699219]
[233.85455322 370.47067261]
[230.22268677 385.02435303]
[226.59082031 399.57803345]
[231.62542725 415.18524170]
[220.42730713 427.16580200]
[204.51611328 423.19515991]
[200.25993347 407.35797119]
[212.03713989 395.94616699]
[215.66900635 381.39248657]
[219.30087280 366.83880615]
[222.93275452 352.28512573]
[207.87234497 334.32870483]
[206.61410522 312.99005127]
[217.24978638 296.86102295]
[208.98970032 284.34020996]
[200.72961426 271.81939697]
[192.46952820 259.29855347]
[184.20942688 246.77774048]
[177.87403870 242.90945435]
[175.91430664 233.94279480]
[162.56933594 227.32759094]
[161.72549438 211.52890015]
[153.70239258 198.85491943]
[145.67929077 186.18093872]
[137.65618896 173.50695801]
[129.63308716 160.83297729]
[121.60997772 148.15899658]
[113.58687592 135.48501587]
[105.56377411 122.81102753]
[94.58288574 125.77774048]
[82.24614716 123.18507385]
[71.42721558 114.54727936]
[65.08662415 100.85751343]
[50.10320663 100.15232849]
[35.11979294 99.44713593]
[20.13637924 98.74195099]
[14.03298378 101.45893097]
[8.33875751 100.75899506]
[4.60577869 97.71791077]
[-10.34050655 96.44961548]
[-23.48098183 105.65328217]
[-38.82829666 100.98001099]
[-44.60930634 86.01473236]
[-36.38930893 72.23753357]
[-20.47399139 70.21710205]
[-9.07221699 81.50333405]
[5.87406826 82.77162170]
[20.84156609 83.75853729]
[35.82498169 84.46372223]
[50.80839539 85.16890717]
[65.79180908 85.87409973]
[71.21833801 80.69696045]
[58.40724182 72.89466858]
[44.11853409 68.33036804]
[37.81920242 54.71719360]
[43.58874893 40.87117386]
[57.69076538 35.75911331]
[70.99265289 42.69163132]
[74.88002014 57.17893982]
[82.07139587 70.34268188]
[87.49793243 65.16554260]
[87.49793243 50.16553879]
[87.49793243 35.16553879]
[87.49793243 20.16554070]
[78.93186188 10.48522377]
[79.26480103 -2.03512621]
[87.77077484 -10.67371178]
[88.05294037 -25.67105675]
[88.33509827 -40.66840363]
[80.85876465 -54.61167908]
[88.83410645 -67.19115448]
[89.11626434 -82.18849945]
[89.39842987 -97.18584442]
[89.53952026 -112.18518066]
[89.53952026 -127.18518066]
[78.64496613 -138.31831360]
[78.85864258 -153.53044128]
[89.53952026 -163.84812927]
[76.90725708 -172.85954285]
[72.01626587 -187.58563232]
[76.74722290 -202.36392212]
[89.28097534 -211.51184082]
[104.79805756 -211.51184082]
[117.33181000 -202.36392212]
[122.06276703 -187.58563232]
[117.17177582 -172.85954285]
[104.53952026 -163.84812927]
[115.22039032 -153.53044128]
[115.43406677 -138.31831360]
[104.53952026 -127.18518066]
[104.53952026 -112.18518066]
[107.69764709 -105.46751404]
[104.39577484 -96.90368652]
[104.11360931 -81.90633392]
[103.83145142 -66.90898895]
[111.32797241 -54.03842545]
[103.33245087 -40.38624191]
[103.05028534 -25.38889503]
[102.76811981 -10.39154911]
[112.07797241 4.46284866]
[102.49793243 20.16554070]
[102.49793243 35.16553879]
[102.49793243 50.16553879]
[102.49793243 65.16554260]
[126.79384613 88.38809204]
[118.23775482 114.78792572]
[126.26085663 127.46190643]
[134.28396606 140.13589478]
[142.30706787 152.80987549]
[150.33016968 165.48385620]
[158.35327148 178.15783691]
[166.37637329 190.83181763]
[174.39947510 203.50579834]
[188.31831360 211.02754211]
[188.58830261 225.91969299]
[196.73025513 238.51765442]
[204.99034119 251.03846741]
[213.25042725 263.55929565]
[221.51052856 276.08010864]
[229.77061462 288.60092163]
[247.34651184 285.63400269]
[264.87124634 293.67001343]
[275.62356567 311.40036011]
[274.52749634 333.56723022]
[286.64614868 342.40679932]
[298.76480103 351.24639893]
[310.88345337 360.08599854]
[323.00210571 368.92559814]
[335.12072754 377.76516724]
[347.32199097 386.49038696]
[359.60476685 395.10046387]
[371.88757324 403.71051025]
[384.17034912 412.32058716]
[397.10534668 408.47451782]
[409.70544434 412.73159790]
[417.42758179 423.31973267]
[417.62487793 436.22833252]
[429.74353027 445.06790161]
[445.75222778 444.01861572]
[456.44689941 455.97702026]
[453.62350464 471.76968384]
[439.44790649 479.28179932]
[424.79443359 472.75073242]
[420.90393066 457.18655396]
[408.78527832 448.34698486]
[392.31735229 451.66290283]
[378.25790405 441.86679077]
[375.56027222 424.60336304]
[363.27749634 415.99331665]
[350.99472046 407.38323975]
[338.71194458 398.77316284]
[331.39837646 397.50323486]
[326.28115845 389.88381958]
[314.16250610 381.04421997]
[302.04385376 372.20465088]
[289.92520142 363.36505127]
[277.80654907 354.52545166]
[265.68792725 345.68585205]
[258.63754272 348.24365234]
[265.03472900 361.81109619]
[275.80691528 372.24951172]
[272.66806030 386.91741943]
[258.56738281 392.03317261]
[246.75360107 382.79010010]
[248.32693481 367.87246704]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[15 121]
[16 120]
[17 119]
[18 118]
[19 117]
[21 116]
[23 114]
[24 113]
[25 112]
[26 111]
[27 110]
[28 109]
[29 108]
[30 107]
[34 52]
[35 51]
[36 50]
[37 49]
[40 48]
[41 47]
[62 105]
[63 104]
[64 103]
[65 102]
[68 100]
[69 99]
[70 98]
[72 96]
[73 95]
[74 94]
[75 92]
[76 91]
[79 88]
[125 159]
[126 158]
[127 157]
[128 156]
[129 155]
[130 154]
[131 152]
[132 151]
[133 150]
[134 149]
[138 146]
[139 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
