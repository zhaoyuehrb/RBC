%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUUUAUACGAGACCUAGUUUCCAGGGAAGAACUCACUGAUGCCGCGAGGGAGAUGGGGUACUGGAUGAUGGUCUUCAGCCUUAAGGGUACUUCAGUCUUAACCGUGUGUUAUAAGGUUUGAAAGGGAGGGUUCCCUAUGAAUAAGAAGCGCACUUGAAAGAACAGCCCUCUGGUCUAACCUCCCACUGGUGCUUCAGAGGAGGAUAAAAGGUCACAGCU\
) } def
/len { sequence length } bind def

/coor [
[112.02818298 313.84841919]
[97.90294647 319.23071289]
[82.81868744 320.20874023]
[68.11668396 316.69552612]
[55.10424042 309.00347900]
[44.93840408 297.81655884]
[38.52311707 284.12948608]
[36.42882156 269.15936279]
[38.84173965 254.23724365]
[45.54732132 240.69004822]
[55.94930649 229.72236633]
[69.12275696 222.30943298]
[83.89630890 219.11041260]
[85.16839600 204.16444397]
[86.44048309 189.21847534]
[87.71257019 174.27252197]
[88.98466492 159.32655334]
[82.38594818 155.76187134]
[75.25656891 168.95928955]
[68.12696838 182.15658569]
[54.92978287 175.02676392]
[62.05914688 161.82991028]
[69.18852997 148.63247681]
[62.58982086 145.06779480]
[50.78710556 154.32499695]
[38.98439026 163.58221436]
[32.90081024 178.18702698]
[18.11133194 179.95355225]
[6.30861664 189.21075439]
[2.96377540 204.90124512]
[-11.45281792 211.93981934]
[-25.88198662 204.92706299]
[-29.25490761 189.24258423]
[-18.98416328 176.91816711]
[-2.94859171 177.40803528]
[8.85412407 168.15083313]
[14.09349442 154.20816040]
[29.72718239 151.77949524]
[41.52989578 142.52227783]
[53.33261108 133.26507568]
[49.77172089 98.64967346]
[66.23350525 73.08155823]
[91.00720215 65.01765442]
[90.37058258 50.03116608]
[89.73397064 35.04468155]
[89.09735107 20.05819893]
[85.60891724 11.62504673]
[88.55928040 4.85544968]
[88.13479614 -10.13854313]
[87.71031189 -25.13253593]
[87.28582764 -40.12652969]
[86.86134338 -55.12052155]
[79.63876343 -68.26716614]
[67.21112061 -76.66678619]
[54.78347397 -85.06640625]
[42.29670715 -93.37789154]
[29.75144386 -101.60080719]
[17.20618248 -109.82372284]
[4.66092014 -118.04664612]
[-7.88434172 -126.26956177]
[-20.42960358 -134.49247742]
[-32.97486496 -142.71540833]
[-45.52012634 -150.93832397]
[-58.06539154 -159.16123962]
[-70.89365387 -166.93527222]
[-83.98886871 -174.25070190]
[-99.81005096 -174.22619629]
[-107.14769745 -187.18800354]
[-120.24291229 -194.50341797]
[-133.33811951 -201.81884766]
[-148.47428894 -197.27217102]
[-162.35237122 -204.83354187]
[-166.73875427 -220.01692200]
[-159.03108215 -233.81428528]
[-143.80218506 -238.03991699]
[-130.08706665 -230.18679810]
[-126.02269745 -214.91406250]
[-112.92749023 -207.59863281]
[-99.83227539 -200.28321838]
[-84.94774628 -200.83096313]
[-76.67343903 -187.34591675]
[-63.57823181 -180.03048706]
[-65.13760376 -194.94921875]
[-54.54848480 -205.57327271]
[-39.62470627 -204.06303406]
[-31.37870216 -191.53292847]
[-35.89530182 -177.22908020]
[-49.84247208 -171.70649719]
[-37.29721069 -163.48358154]
[-24.75194740 -155.26066589]
[-12.20668507 -147.03775024]
[0.33857724 -138.81481934]
[12.88383961 -130.59190369]
[25.42910194 -122.36898804]
[37.97436523 -114.14607239]
[50.51962662 -105.92314911]
[57.83103180 -104.88612366]
[63.18309402 -97.49405670]
[75.61074066 -89.09442902]
[88.03838348 -80.69480896]
[95.37004852 -82.27490234]
[87.83333588 -95.24401855]
[97.83873749 -106.41952515]
[111.55910492 -100.35721588]
[110.03337860 -85.43509674]
[117.36504364 -87.01519012]
[125.22965240 -99.78812408]
[133.09425354 -112.56106567]
[140.95886230 -125.33399963]
[148.82347107 -138.10693359]
[156.68807983 -150.87986755]
[164.55270386 -163.65281677]
[157.27630615 -175.59410095]
[155.85978699 -189.43923950]
[160.52272034 -202.48204041]
[170.30200195 -212.19776917]
[183.25006104 -216.73184204]
[196.82263184 -215.25369263]
[204.86720276 -227.91406250]
[212.91177368 -240.57443237]
[220.95634460 -253.23480225]
[229.00091553 -265.89517212]
[226.96102905 -278.62567139]
[233.91548157 -289.00308228]
[245.68580627 -291.77145386]
[253.90872192 -304.31671143]
[262.13165283 -316.86196899]
[270.35455322 -329.40722656]
[278.57748413 -341.95251465]
[278.96453857 -358.34707642]
[293.48394775 -365.97064209]
[307.19940186 -356.98071289]
[306.00158691 -340.62536621]
[291.12274170 -333.72958374]
[282.89981079 -321.18432617]
[274.67691040 -308.63906860]
[266.45397949 -296.09381104]
[258.23107910 -283.54852295]
[258.17999268 -265.99618530]
[241.66128540 -257.85058594]
[233.61671448 -245.19023132]
[225.57214355 -232.52986145]
[217.52757263 -219.86949158]
[209.48300171 -207.20912170]
[217.30982971 -193.06794739]
[216.93267822 -176.81571960]
[208.35984802 -162.89285278]
[193.85173035 -155.15110779]
[177.32563782 -155.78820801]
[169.46102905 -143.01525879]
[161.59642029 -130.24232483]
[153.73181152 -117.46939087]
[145.86720276 -104.69645691]
[138.00259399 -91.92351532]
[130.13798523 -79.15058136]
[143.16349792 -86.58939362]
[157.98576355 -84.28717041]
[170.62814331 -76.21435547]
[178.95256042 -63.73621368]
[181.55120850 -48.96302795]
[177.98460388 -34.39321899]
[168.85592651 -22.49081421]
[155.70899963 -15.26873207]
[140.76722717 -13.94836140]
[126.55753326 -18.75300026]
[115.48303986 -28.87009621]
[109.41635895 -42.59004593]
[101.85533905 -55.54500198]
[102.27982330 -40.55101013]
[102.70430756 -25.55701828]
[103.12878418 -10.56302643]
[103.55326843 4.43096638]
[104.08383179 19.42158127]
[104.72045135 34.40806580]
[105.35707092 49.39455032]
[105.99369049 64.38103485]
[122.66848755 66.61007690]
[138.14299011 76.89387512]
[148.51153564 94.39933777]
[150.46415710 116.43108368]
[142.14759827 138.83285522]
[153.12272644 149.05764771]
[164.09785461 159.28245544]
[175.07298279 169.50724792]
[186.04811096 179.73205566]
[198.93695068 180.05540466]
[207.86706543 188.79084778]
[208.43556213 200.86897278]
[219.26490784 211.24806213]
[230.09425354 221.62713623]
[240.92359924 232.00622559]
[256.97073364 235.38583374]
[261.80957031 251.05482483]
[250.46237183 262.89428711]
[234.60212708 258.72479248]
[230.54450989 242.83557129]
[219.71516418 232.45648193]
[208.88583374 222.07739258]
[198.05648804 211.69831848]
[180.80967712 208.43722534]
[175.82331848 190.70718384]
[164.84819031 180.48237610]
[153.87304688 170.25758362]
[142.89791870 160.03279114]
[131.92279053 149.80798340]
[124.92475128 152.50564575]
[134.38090515 164.14958191]
[126.22881317 176.74099731]
[111.73458862 172.87867737]
[110.92866516 157.90098572]
[103.93062592 160.59864807]
[102.65853119 175.54461670]
[101.38644409 190.49057007]
[100.11435699 205.43653870]
[98.84226990 220.38249207]
[112.86267090 226.03224182]
[124.59384155 235.56488037]
[132.99266052 248.13275146]
[137.31230164 262.61831665]
[137.16867065 277.73358154]
[132.57452393 292.13446045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 215]
[14 214]
[15 213]
[16 212]
[17 211]
[24 40]
[25 39]
[26 38]
[28 36]
[29 35]
[43 176]
[44 175]
[45 174]
[46 173]
[48 172]
[49 171]
[50 170]
[51 169]
[52 168]
[53 100]
[54 99]
[55 98]
[56 96]
[57 95]
[58 94]
[59 93]
[60 92]
[61 91]
[62 90]
[63 89]
[64 88]
[65 82]
[66 81]
[68 79]
[69 78]
[70 77]
[106 155]
[107 154]
[108 153]
[109 152]
[110 151]
[111 150]
[112 149]
[118 144]
[119 143]
[120 142]
[121 141]
[122 140]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
[181 205]
[182 204]
[183 203]
[184 202]
[185 201]
[188 199]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
