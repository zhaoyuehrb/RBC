%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGGCUGUGGGCGGCGGCGGCGGCGCGCAGCGACAGAGCGUCCCCCGGCGAGGACGAGCGAGCACGGCGCCCGCACCUCCCCGCACCGCCCGCGCUGCGCGCCCGGAGGAGCGACCGCCGCAGUUCUCGAGCUCCAGCUGCAUUCCCUCCGCGUCCGCCCCACGCUUCUCCCGCUCCGGGCCCCGCA\
) } def
/len { sequence length } bind def

/coor [
[69.70854950 203.81692505]
[75.75489044 187.97778320]
[75.75489044 172.97778320]
[75.75489044 157.97778320]
[75.75489044 142.97778320]
[75.75489044 127.97778320]
[70.44828796 98.45804596]
[87.30780792 81.83181763]
[83.38561249 67.35368347]
[79.46340942 52.87555313]
[75.54121399 38.39741898]
[71.61901093 23.91928482]
[67.69681549 9.44115162]
[63.65505600 -5.00406122]
[59.49401093 -19.41536522]
[55.33296967 -33.82667160]
[41.77762604 -41.50068283]
[37.76303101 -56.17506790]
[45.16256332 -69.05072784]
[41.00151825 -83.46202850]
[36.84047318 -97.87333679]
[32.67943192 -112.28463745]
[21.41758347 -123.39685822]
[25.32064056 -137.77098083]
[21.15959740 -152.18228149]
[7.59827137 -164.62681580]
[12.45213985 -181.48321533]
[1.00810313 -192.40771484]
[4.67296600 -206.84440613]
[0.27421558 -221.18493652]
[-4.12453508 -235.52548218]
[-8.52328587 -249.86601257]
[-12.92203617 -264.20654297]
[-24.32762718 -267.63571167]
[-32.57128143 -276.06454468]
[-35.68225479 -287.31222534]
[-32.99727631 -298.54577637]
[-25.29800606 -306.99365234]
[-29.22020531 -321.47177124]
[-33.14240646 -335.94992065]
[-37.06460571 -350.42803955]
[-48.66959000 -359.93194580]
[-63.63679123 -360.92330933]
[-78.60399628 -361.91467285]
[-93.57120514 -362.90603638]
[-103.39778900 -350.89697266]
[-118.41493225 -346.98992920]
[-132.84823608 -352.68722534]
[-141.14779663 -365.79818726]
[-140.12226868 -381.28134155]
[-130.16596985 -393.18310547]
[-115.10733032 -396.92700195]
[-100.73668671 -391.07345581]
[-92.57984161 -377.87322998]
[-77.61264038 -376.88186646]
[-62.64543533 -375.89053345]
[-47.67823029 -374.89916992]
[-42.20248413 -380.02423096]
[-52.45241547 -390.97589111]
[-41.50058365 -401.22564697]
[-31.25099182 -390.27432251]
[-25.77524376 -395.39938354]
[-25.77524376 -410.39938354]
[-25.77524376 -425.39938354]
[-25.77524376 -440.39938354]
[-35.35219193 -456.11746216]
[-26.01280212 -470.96585083]
[-26.26081085 -485.96380615]
[-26.50881958 -500.96173096]
[-26.75683022 -515.95971680]
[-27.00483894 -530.95764160]
[-38.08197784 -541.90911865]
[-38.11984253 -557.12268066]
[-27.61102104 -567.61553955]
[-27.85903168 -582.61352539]
[-28.10704041 -597.61145020]
[-36.07145309 -611.28179932]
[-28.54564285 -624.13531494]
[-28.79365349 -639.13323975]
[-29.04166222 -654.13116455]
[-29.28967094 -669.12915039]
[-29.53767967 -684.12707520]
[-40.68247223 -700.91046143]
[-30.61080170 -717.40429688]
[-31.35455704 -732.38586426]
[-32.09831238 -747.36743164]
[-40.51036072 -760.76696777]
[-33.41364288 -773.86224365]
[-41.82569122 -787.26177979]
[-34.72897339 -800.35705566]
[-35.47273254 -815.33862305]
[-44.81616974 -828.81567383]
[-37.57264328 -843.52838135]
[-21.19366646 -844.34149170]
[-12.52852917 -830.41857910]
[-20.49118042 -816.08233643]
[-19.74742508 -801.10083008]
[-11.38857555 -788.77282715]
[-18.43209457 -774.60601807]
[-10.07324505 -762.27801514]
[-17.11676407 -748.11114502]
[-16.37300873 -733.12963867]
[-15.62925148 -718.14807129]
[-7.45258665 -711.98333740]
[-3.95466089 -702.12548828]
[-6.52218294 -691.75891113]
[-14.53973007 -684.37512207]
[-14.29172134 -669.37713623]
[-14.04371262 -654.37921143]
[-13.79570293 -639.38122559]
[-13.54769421 -624.38330078]
[-5.60101938 -611.78570557]
[-13.10909081 -597.85949707]
[-12.86108112 -582.86151123]
[-12.61307240 -567.86358643]
[-1.76306784 -557.72387695]
[-1.29789972 -542.51739502]
[-12.00688934 -531.20562744]
[-11.75887966 -516.20770264]
[-11.51087093 -501.20974731]
[-11.26286125 -486.21179199]
[-11.01485252 -471.21383667]
[-2.53635669 -462.57009888]
[-2.21743751 -450.06530762]
[-10.77524471 -440.39938354]
[-10.77524471 -425.39938354]
[-10.77524471 -410.39938354]
[-10.77524471 -395.39938354]
[-6.78681898 -385.22265625]
[-6.53644323 -374.91760254]
[-9.64119530 -365.74163818]
[-15.33159256 -358.68203735]
[-22.58646965 -354.35025024]
[-18.66427231 -339.87210083]
[-14.74207211 -325.39398193]
[-10.81987286 -310.91583252]
[5.57219934 -302.79547119]
[10.93250942 -284.97195435]
[1.41850066 -268.60531616]
[5.81725121 -254.26477051]
[10.21600151 -239.92422485]
[14.61475277 -225.58369446]
[19.01350212 -211.24314880]
[30.14291191 -201.34439087]
[26.79267693 -185.88197327]
[37.33622360 -179.92941284]
[41.11149216 -168.00386047]
[35.57090378 -156.34332275]
[39.73194504 -141.93202209]
[50.69616699 -131.85060120]
[47.09073639 -116.44568634]
[51.25178146 -102.03437805]
[55.41282272 -87.62307739]
[59.57386780 -73.21176910]
[72.69770813 -66.26192474]
[77.12289429 -51.70608521]
[69.74427032 -37.98771667]
[73.90531921 -23.57641029]
[78.06636047 -9.16510487]
[82.95123291 -3.60090160]
[82.17494965 5.51895285]
[86.09714508 19.99708748]
[90.01934814 34.47521973]
[93.94154358 48.95335388]
[97.86374664 63.43148804]
[101.78594208 77.90962219]
[109.59865570 77.30764008]
[117.87263489 79.60845184]
[125.50758362 84.99852753]
[131.34950256 93.24788666]
[134.34600830 103.70143890]
[133.69960022 115.32707214]
[139.95132446 128.96217346]
[146.20304871 142.59725952]
[152.45477295 156.23236084]
[164.55239868 168.11022949]
[156.48768616 183.02319336]
[139.92498779 179.40197754]
[138.81968689 162.48408508]
[132.56794739 148.84899902]
[126.31622314 135.21389771]
[120.06449890 121.57879639]
[112.73709869 123.17854309]
[90.75489044 127.97778320]
[90.75489044 142.97778320]
[90.75489044 157.97778320]
[90.75489044 172.97778320]
[90.75489044 187.97778320]
[96.80123138 203.81692505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[3 187]
[4 186]
[5 185]
[6 184]
[8 166]
[9 165]
[10 164]
[11 163]
[12 162]
[13 161]
[14 159]
[15 158]
[16 157]
[19 154]
[20 153]
[21 152]
[22 151]
[24 149]
[25 148]
[27 145]
[29 143]
[30 142]
[31 141]
[32 140]
[33 139]
[38 136]
[39 135]
[40 134]
[41 133]
[42 57]
[43 56]
[44 55]
[45 54]
[62 128]
[63 127]
[64 126]
[65 125]
[67 122]
[68 121]
[69 120]
[70 119]
[71 118]
[74 115]
[75 114]
[76 113]
[78 111]
[79 110]
[80 109]
[81 108]
[82 107]
[84 103]
[85 102]
[86 101]
[88 99]
[90 97]
[91 96]
[172 182]
[173 181]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
