%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGCGGGCGGCUGCUCCGGUCCAGGGGUGGAGGUCGGGGCCCUGACCCGACGCAGCCAGGCGGAAGCGCGGCUGCCAUUGGAGGCUGCUUUUACCUGCGCGGGGCCCGGGGCGCAAAGUCCGAGGCGCCGGGGGGAGGAGGCGGCGGACGGCAGCGCAGGUGGGCCCGCGCUCUCGGCCCUGCAAG\
) } def
/len { sequence length } bind def

/coor [
[-24.18732643 442.41671753]
[-30.63199997 455.96170044]
[-37.07667160 469.50665283]
[-43.52134705 483.05163574]
[-49.85440826 496.64913940]
[-56.07543182 510.29827881]
[-62.18399429 523.99810791]
[-68.17967987 537.74774170]
[-74.17536926 551.49731445]
[-80.17105865 565.24694824]
[-77.79507446 581.47302246]
[-90.82537079 591.43011475]
[-105.85749817 584.87518311]
[-107.42768860 568.55139160]
[-93.92066193 559.25122070]
[-87.92498016 545.50164795]
[-81.92929077 531.75201416]
[-75.93360138 518.00244141]
[-76.14220428 510.60186768]
[-69.72456360 504.07723999]
[-63.50354385 490.42813110]
[-63.59039688 483.02511597]
[-57.06631470 476.60696411]
[-50.62164307 463.06198120]
[-44.17696762 449.51702881]
[-37.73229599 435.97204590]
[-41.96958923 413.92471313]
[-22.82060814 400.84158325]
[-17.51040840 386.81295776]
[-12.20020962 372.78436279]
[-6.89000988 358.75576782]
[-1.57981026 344.72714233]
[-4.31042242 330.08499146]
[7.81125784 319.91760254]
[13.12145710 305.88900757]
[18.43165779 291.86041260]
[23.74185753 277.83178711]
[21.01124382 263.18963623]
[33.13292313 253.02226257]
[38.44312286 238.99365234]
[43.63777542 224.92184448]
[48.71652222 210.80780029]
[53.79526901 196.69375610]
[58.87401581 182.57971191]
[63.95276260 168.46565247]
[69.03150940 154.35160828]
[67.83593750 149.71180725]
[69.55442047 144.27232361]
[74.51638794 139.86154175]
[80.05660248 125.92217255]
[85.59681702 111.98280334]
[80.51807404 97.86875153]
[67.36634827 90.65542603]
[58.32025909 89.26800537]
[54.05905151 83.21376038]
[41.02774429 75.78509521]
[27.99643898 68.35643005]
[12.92903042 72.30749512]
[-0.18074298 64.58813477]
[-3.85462570 50.19931793]
[-16.88593102 42.77065277]
[-33.27293777 43.40158844]
[-41.78271103 29.38318062]
[-33.66112518 15.13636017]
[-17.26297188 15.31703663]
[-9.45726681 29.73934555]
[3.57403946 37.16801071]
[17.82720566 32.99873734]
[31.14862633 40.34682465]
[35.42510605 55.32512283]
[48.45640945 62.75378799]
[61.48771667 70.18245697]
[74.57967377 77.50370026]
[87.73139954 84.71702576]
[102.48655701 82.01786804]
[112.23296356 70.61578369]
[121.97937012 59.21370316]
[131.72578430 47.81162262]
[141.47219849 36.40953827]
[151.21859741 25.00745583]
[152.17469788 19.84129715]
[154.76586914 15.95559692]
[158.22610474 13.76001930]
[161.73794556 13.29874706]
[159.02052307 -1.86442399]
[165.67492676 -15.56012821]
[178.96072388 -22.62774849]
[193.68441772 -20.54188347]
[203.98136902 -31.44935226]
[214.27832031 -42.35682297]
[224.57527161 -53.26428986]
[234.87220764 -64.17176056]
[245.16915894 -75.07923126]
[255.46611023 -85.98669434]
[265.76306152 -96.89416504]
[276.05999756 -107.80163574]
[279.90701294 -123.14800262]
[294.27011108 -127.09145355]
[304.56707764 -137.99891663]
[314.86401367 -148.90638733]
[318.71102905 -164.25276184]
[333.07412720 -168.19621277]
[336.69805908 -176.60000610]
[343.63125610 -179.19662476]
[354.10620117 -189.93327332]
[364.58117676 -200.66990662]
[368.68008423 -215.95092773]
[383.10607910 -219.65760803]
[393.58102417 -230.39424133]
[404.05599976 -241.13087463]
[404.03253174 -256.70770264]
[414.80856323 -267.44692993]
[429.65884399 -267.37332153]
[440.13378906 -278.10995483]
[450.60873413 -288.84658813]
[461.08370972 -299.58322144]
[462.32434082 -315.57821655]
[475.68359375 -324.46133423]
[490.91339111 -319.41821289]
[496.33071899 -304.31747437]
[487.77987671 -290.74313354]
[471.82034302 -289.10827637]
[461.34536743 -278.37164307]
[450.87042236 -267.63500977]
[440.39547729 -256.89834595]
[440.83541870 -242.05444336]
[430.36529541 -231.01673889]
[414.79263306 -230.65591431]
[404.31768799 -219.91928101]
[393.84271240 -209.18264771]
[390.49304199 -194.66958618]
[375.31781006 -190.19494629]
[364.84283447 -179.45831299]
[354.36788940 -168.72167969]
[343.98159790 -157.89926147]
[340.87109375 -143.33306885]
[325.77148438 -138.60943604]
[315.47454834 -127.70197296]
[305.17758179 -116.79450226]
[302.06707764 -102.22830963]
[286.96746826 -97.50468445]
[276.67053223 -86.59721375]
[266.37356567 -75.68975067]
[256.07662964 -64.78227997]
[245.77967834 -53.87481308]
[235.48274231 -42.96734238]
[225.18579102 -32.05987549]
[214.88883972 -21.15240479]
[204.59188843 -10.24493599]
[207.52145386 4.33435249]
[201.22996521 18.00480080]
[187.93981934 25.43618393]
[172.64541626 23.59569550]
[162.62068176 34.75386810]
[152.87428284 46.15594864]
[143.12786865 57.55803299]
[133.38145447 68.96011353]
[123.63504791 80.36219788]
[113.88863373 91.76428223]
[116.49240112 99.96506500]
[114.51937103 108.52680969]
[108.33854675 115.02478790]
[99.53618622 117.52301788]
[93.99597168 131.46238708]
[88.45575714 145.40174866]
[83.14556122 159.43035889]
[78.06681061 173.54440308]
[72.98806000 187.65844727]
[67.90931702 201.77250671]
[62.83056641 215.88655090]
[57.75181961 230.00059509]
[57.78907776 239.15238953]
[52.47172928 244.30384827]
[47.16152954 258.33245850]
[49.51232147 273.97802734]
[37.77046204 283.14199829]
[32.46026230 297.17059326]
[27.15006256 311.19921875]
[21.83986282 325.22781372]
[24.19065475 340.87338257]
[12.44879532 350.03735352]
[7.13859606 364.06594849]
[1.82839632 378.09457397]
[-3.48180318 392.12316895]
[-8.79200268 406.15176392]
[-4.22135019 412.16882324]
[-2.04907179 419.33480835]
[-2.50114465 426.74084473]
[-5.47378016 433.46469116]
[-10.55228233 438.68557739]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 26]
[2 25]
[3 24]
[4 23]
[5 21]
[6 20]
[7 18]
[8 17]
[9 16]
[10 15]
[28 185]
[29 184]
[30 183]
[31 182]
[32 181]
[34 179]
[35 178]
[36 177]
[37 176]
[39 174]
[40 173]
[41 171]
[42 170]
[43 169]
[44 168]
[45 167]
[46 166]
[49 165]
[50 164]
[51 163]
[52 74]
[53 73]
[55 72]
[56 71]
[57 70]
[60 67]
[61 66]
[75 159]
[76 158]
[77 157]
[78 156]
[79 155]
[80 154]
[84 153]
[88 149]
[89 148]
[90 147]
[91 146]
[92 145]
[93 144]
[94 143]
[95 142]
[96 141]
[98 139]
[99 138]
[100 137]
[102 135]
[104 134]
[105 133]
[106 132]
[108 130]
[109 129]
[110 128]
[113 125]
[114 124]
[115 123]
[116 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
