%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCUGACACACAGACCGACACAGGCAGCGAGAGACACGAGGAGCAAAGCAAGUGAAGGCACAGACGCACGGGACAGGAGAGCCUGGGCAAGACUGGAGAGCCCAGACCUGGG\
) } def
/len { sequence length } bind def

/coor [
[111.78788757 149.51507568]
[102.02321625 150.85867310]
[92.18267822 150.29499817]
[82.63529205 147.84521484]
[75.49608612 161.03732300]
[68.35687256 174.22943115]
[71.53801727 189.95391846]
[61.11754608 202.15200806]
[45.08915329 201.46635437]
[35.74844742 188.42294312]
[40.26081848 173.02754211]
[55.16476440 167.09020996]
[62.30397797 153.89810181]
[69.44318390 140.70599365]
[51.21710205 114.52330017]
[52.15478897 82.63529205]
[38.96268082 75.49608612]
[23.98615646 79.77877045]
[10.70918560 72.35066986]
[6.71858931 58.04645157]
[-6.47351694 50.90724182]
[-19.66562271 43.76802826]
[-34.64214706 48.05072021]
[-47.91912079 40.62261963]
[-51.90971756 26.31839943]
[-65.10182190 19.17918968]
[-85.10445404 20.77474022]
[-94.76212311 4.11776543]
[-108.32747650 -2.28388119]
[-119.55828094 7.96002007]
[-133.85606384 13.12160683]
[-149.04051208 12.41377449]
[-162.79609680 5.94446325]
[-173.02522278 -5.29980516]
[-178.16799927 -19.60436058]
[-177.44018555 -34.78786469]
[-170.95278931 -48.53493881]
[-159.69506836 -58.74925613]
[-145.38377380 -63.87320709]
[-130.20123291 -63.12543106]
[-116.46270752 -56.61994934]
[-106.26320648 -45.34880829]
[-101.15808105 -31.03077316]
[-101.92583466 -15.84923840]
[-88.36047363 -9.44759178]
[-78.92864990 -13.79887199]
[-68.45206451 -12.13127232]
[-60.51264191 -4.76581097]
[-57.96261215 5.98708248]
[-44.77050400 13.12629318]
[-30.61284256 8.64342022]
[-17.13246918 15.69566822]
[-12.52641201 30.57592392]
[0.66569382 37.71513367]
[13.85780048 44.85434723]
[28.01546288 40.37147141]
[41.49583435 47.42372131]
[46.10189438 62.30397797]
[59.29399872 69.44318390]
[65.15035248 62.90283585]
[72.04348755 57.46612167]
[79.76832581 53.29478836]
[88.09505463 50.51293564]
[96.77595520 49.20331955]
[105.55277252 49.40489960]
[114.16439056 51.11168289]
[122.35462189 54.27289200]
[129.87980652 58.79448318]
[136.51606750 64.54193115]
[142.06596375 71.34426117]
[146.36441040 78.99909210]
[149.28352356 87.27870178]
[150.73645020 95.93676758]
[150.67997742 104.71571350]
[149.11576843 113.35437012]
[162.85235596 119.37979889]
[176.58895874 125.40523529]
[190.32556152 131.43066406]
[197.66339111 126.83769989]
[206.13787842 125.61882782]
[214.28967285 127.90631866]
[220.74623108 133.23522949]
[224.45283508 140.63546753]
[224.84461975 148.80766296]
[237.83500671 156.30766296]
[250.82537842 163.80766296]
[263.81576538 171.30766296]
[276.80615234 178.80766296]
[289.79653931 186.30766296]
[302.69839478 178.07354736]
[317.94998169 176.78996277]
[332.04660034 182.75184631]
[341.74893188 194.58921814]
[344.82745361 209.58192444]
[340.57476807 224.28474426]
[329.96810913 235.31910706]
[315.44476318 240.14936829]
[300.34213257 237.66557312]
[288.13067627 228.43849182]
[281.61651611 214.58843994]
[282.29653931 199.29803467]
[269.30615234 191.79803467]
[256.31576538 184.29803467]
[243.32537842 176.79803467]
[230.33500671 169.29803467]
[217.34461975 161.79803467]
[195.89454651 164.25610352]
[184.30012512 145.16726685]
[170.56353760 139.14183044]
[156.82693481 133.11640930]
[143.09033203 127.09097290]
[137.06079102 134.88832092]
[129.64143372 141.37731934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 14]
[5 13]
[6 12]
[16 59]
[17 58]
[20 55]
[21 54]
[22 53]
[25 50]
[26 49]
[28 45]
[29 44]
[75 111]
[76 110]
[77 109]
[78 108]
[84 106]
[85 105]
[86 104]
[87 103]
[88 102]
[89 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
