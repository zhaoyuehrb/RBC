%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAAUUUAAGCCUGUGGCAUGGAACCUAAAGACUAGAGGCGGUUGUGUGAGUCAGGAAGAGGGGCCAGAUAUCUGAGUGUUCCUCUUUAGUUUCUUCAAUUGCAGAUAAUAUGGUGUCUAAUUUUAUGUUGUUCAGGAAAGACAGUGGUUCCUGACUCAGGAAGACAGUCUCAGAAAC\
) } def
/len { sequence length } bind def

/coor [
[-102.16344452 489.88787842]
[-107.29374695 503.98327637]
[-112.42404938 518.07867432]
[-117.55435181 532.17407227]
[-107.20495605 543.45007324]
[-103.29244995 558.24707031]
[-106.71591187 573.16479492]
[-116.68865204 584.77526855]
[-130.91900635 590.41046143]
[-146.13693237 588.77551270]
[-158.84547424 580.24609375]
[-166.12431335 566.78216553]
[-166.30079651 551.47766113]
[-159.33439636 537.84948730]
[-146.82592773 529.02923584]
[-131.64973450 527.04376221]
[-126.51943970 512.94836426]
[-121.38913727 498.85296631]
[-116.25883484 484.75756836]
[-124.91606903 479.36410522]
[-132.53698730 472.57818604]
[-138.90000916 464.59512329]
[-143.81974792 455.64501953]
[-147.15248108 445.98629761]
[-148.80032349 435.89804077]
[-148.71409607 425.67205811]
[-146.89480591 415.60430908]
[-143.39363098 405.98657227]
[-138.31051636 397.09768677]
[-131.79132080 389.19577026]
[-124.02355957 382.51049805]
[-115.23114777 377.23651123]
[-105.66781616 373.52777100]
[-95.60985565 371.49301147]
[-85.34811401 371.19262695]
[-75.17961121 372.63681030]
[-65.39888763 375.78524780]
[-57.89889145 362.79486084]
[-50.39889145 349.80447388]
[-42.89889145 336.81408691]
[-35.39889145 323.82369995]
[-35.73595428 308.93292236]
[-22.13516808 300.85028076]
[-14.63516808 287.85989380]
[-7.13516855 274.86950684]
[-8.09334278 257.35864258]
[7.90120554 248.26033020]
[7.30431414 233.37768555]
[20.76196671 225.05889893]
[28.03411102 211.93960571]
[35.30625534 198.82031250]
[42.57839966 185.70101929]
[49.85054398 172.58172607]
[57.12268829 159.46243286]
[64.39482880 146.34312439]
[71.66697693 133.22383118]
[78.93911743 120.10453796]
[86.21126556 106.98524475]
[85.55697632 91.99951935]
[77.16908264 79.56395721]
[68.78118896 67.12839508]
[60.39329147 54.69282913]
[52.00539780 42.25726700]
[43.61750793 29.82170296]
[35.22961426 17.38613892]
[26.84171867 4.95057535]
[18.13117409 -7.26115751]
[9.10394955 -19.24069023]
[0.07672395 -31.22022247]
[-15.22197056 -37.12631989]
[-17.48881340 -53.36803818]
[-4.39187288 -63.23729324]
[10.59584332 -56.58143616]
[12.05625629 -40.24744797]
[21.08348274 -28.26791573]
[30.11070824 -16.28838348]
[33.56118774 -15.44359970]
[36.76763153 -12.86901093]
[38.91394806 -8.70068359]
[39.27728271 -3.43731809]
[47.66517639 8.99824524]
[56.05307007 21.43380928]
[64.44096375 33.86937332]
[72.82885742 46.30493546]
[81.21675110 58.74050140]
[89.60464478 71.17606354]
[97.99253845 83.61162567]
[112.69140625 86.60214233]
[125.27146912 78.43256378]
[137.85153198 70.26297760]
[145.21128845 56.25781631]
[160.09930420 55.81509399]
[167.45907593 41.80993652]
[182.34709167 41.36721039]
[194.92715454 33.19762802]
[207.50721741 25.02803993]
[220.08728027 16.85845566]
[221.35723877 3.43259192]
[230.00851440 -6.65734053]
[242.70561218 -9.86602783]
[254.74813843 -5.23715258]
[267.46884155 -13.18594170]
[280.18957520 -21.13473129]
[283.64883423 -26.82208824]
[288.70785522 -29.48771477]
[293.49588013 -29.12996101]
[306.48626709 -36.62996292]
[319.47662354 -44.12996292]
[332.46701050 -51.62996292]
[345.45739746 -59.12996292]
[358.44778442 -66.62995911]
[371.43817139 -74.12995911]
[384.42855835 -81.62995911]
[397.41891479 -89.12995911]
[410.40930176 -96.62995911]
[411.04064941 -112.04440308]
[419.92413330 -124.65738678]
[434.22506714 -130.44415283]
[449.38009644 -127.55816650]
[460.55328369 -116.92034149]
[464.17929077 -101.92515564]
[459.10113525 -87.35753632]
[446.93917847 -77.86594391]
[431.57427979 -76.47911072]
[417.90930176 -83.63957977]
[404.91891479 -76.13957977]
[391.92855835 -68.63957977]
[378.93817139 -61.13957977]
[365.94778442 -53.63957977]
[352.95739746 -46.13957977]
[339.96701050 -38.63957977]
[326.97662354 -31.13957977]
[313.98626709 -23.63957977]
[300.99588013 -16.13957977]
[288.13836670 -8.41400909]
[275.41763306 -0.46522012]
[262.69692993 7.48356867]
[259.62789917 24.00613976]
[245.28369141 33.39296341]
[228.25686646 29.43851280]
[215.67680359 37.60810089]
[203.09674072 45.77768326]
[190.51667786 53.94726944]
[184.05673218 67.36808777]
[168.26889038 68.39514923]
[161.80894470 81.81596375]
[146.02111816 82.84303284]
[133.44105530 91.01261902]
[120.86099243 99.18220520]
[112.37927246 112.47542572]
[99.33055878 114.25738525]
[92.05841827 127.37668610]
[84.78627014 140.49598694]
[77.51412964 153.61528015]
[70.24198151 166.73457336]
[62.96983719 179.85386658]
[55.69769287 192.97315979]
[48.42554855 206.09245300]
[41.15340424 219.21174622]
[33.88125992 232.33105469]
[33.95800018 248.15206909]
[21.02050209 255.53247070]
[23.81929779 268.14208984]
[17.46993256 278.92715454]
[5.85521269 282.36950684]
[-1.64478731 295.35989380]
[-9.14478779 308.35028076]
[-9.34417439 324.17022705]
[-22.40851021 331.32369995]
[-29.90851021 344.31408691]
[-37.40850830 357.30447388]
[-44.90850830 370.29486084]
[-52.40850830 383.28524780]
[-38.49679184 398.21627808]
[-30.36194611 416.91091919]
[-28.92133522 437.22805786]
[-34.32642365 456.84542847]
[-45.94698334 473.52526855]
[-62.44454193 485.36932373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[4 16]
[37 173]
[38 172]
[39 171]
[40 170]
[41 169]
[43 167]
[44 166]
[45 165]
[47 162]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[55 154]
[56 153]
[57 152]
[58 151]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[64 82]
[65 81]
[66 80]
[67 76]
[68 75]
[69 74]
[88 149]
[89 148]
[90 147]
[92 145]
[94 143]
[95 142]
[96 141]
[97 140]
[101 137]
[102 136]
[103 135]
[106 134]
[107 133]
[108 132]
[109 131]
[110 130]
[111 129]
[112 128]
[113 127]
[114 126]
[115 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
