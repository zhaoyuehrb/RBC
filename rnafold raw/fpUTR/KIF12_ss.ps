%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGACAUCAGGAUGUACCAUCUGCCCUUCUGUCGGACCCCAGGGUACGUCCCAUGAGCGCGGCCGAGCUGCGUCGAGGGCAGCAGAGCGUGCUGCACUGCUCAGGGACCCGGACUCUGCAGUUUCUCCUGCACUGUUUUCACCUUUGGCCAGACGGGCUCUGGGAAGACCUACACCCUGACUGGACCCCCUCCCCAGGGGGAGGGGGUGCCUGUACCCCCCAGCCUGGCUGGCAUC\
) } def
/len { sequence length } bind def

/coor [
[509.10168457 265.01394653]
[507.24346924 247.92591858]
[493.01461792 243.17829895]
[478.78576660 238.43067932]
[464.55691528 233.68305969]
[450.32806396 228.93544006]
[436.09921265 224.18780518]
[421.87039185 219.44018555]
[403.24349976 224.66990662]
[390.13772583 209.33694458]
[375.78900146 204.96498108]
[361.44027710 200.59303284]
[347.09152222 196.22106934]
[332.74279785 191.84912109]
[325.44232178 192.90411377]
[318.23489380 187.32424927]
[310.67733765 195.48638916]
[300.57736206 200.26875305]
[289.37176514 200.94877625]
[278.67034912 197.39054871]
[270.02474976 190.06977844]
[264.70352173 180.01057434]
[263.50588989 168.64228821]
[249.40676880 163.52227783]
[235.30763245 158.40226746]
[221.20851135 153.28225708]
[212.70259094 163.07341003]
[201.35055542 169.41195679]
[188.48954773 171.52647400]
[175.64292908 169.14454651]
[164.33979797 162.52766418]
[155.93301392 152.44271851]
[151.43724060 140.07310486]
[151.40657043 126.87995911]
[137.44689941 121.39110565]
[123.48722839 115.90225220]
[109.52754974 110.41339874]
[94.53921509 111.00475311]
[81.05538177 117.57638550]
[67.57155609 124.14801025]
[58.85078049 138.03614807]
[42.47518921 137.15748596]
[35.29058075 122.41593170]
[44.68786621 108.97632599]
[60.99992371 110.66418457]
[74.48375702 104.09255219]
[87.96758270 97.52092743]
[88.26326752 90.02675629]
[88.85462189 75.03841400]
[89.15030670 67.54425049]
[76.22614288 59.93069839]
[63.30198669 52.31715393]
[50.37782669 44.70360565]
[37.45366669 37.09005737]
[28.49004555 35.43611526]
[24.41060448 29.29054070]
[11.58763599 21.50777245]
[-1.23533130 13.72500229]
[-14.05829906 5.94223309]
[-26.88126755 -1.84053648]
[-39.85518646 -9.36897755]
[-52.97501373 -16.64016342]
[-66.09484100 -23.91135025]
[-79.21466827 -31.18253708]
[-92.33449554 -38.45372391]
[-105.50182343 -45.63852310]
[-118.71609497 -52.73662949]
[-133.67921448 -48.40733337]
[-146.97924805 -55.79406738]
[-151.01435852 -70.08579254]
[-164.22862244 -77.18389893]
[-177.44288635 -84.28200531]
[-190.65716553 -91.38011169]
[-203.91778564 -98.39122009]
[-217.22421265 -105.31501770]
[-230.53063965 -112.23881531]
[-247.37237549 -114.18627167]
[-250.16328430 -130.90892029]
[-234.86676025 -138.22004700]
[-223.60684204 -125.54524231]
[-210.30041504 -118.62144470]
[-196.99398804 -111.69764709]
[-189.62373352 -111.39891052]
[-183.55905151 -104.59438324]
[-170.34478760 -97.49627686]
[-157.13050842 -90.39817047]
[-143.91624451 -83.30006409]
[-129.77261353 -87.82698822]
[-116.27034760 -80.81674194]
[-111.61798859 -65.95089722]
[-98.40371704 -58.85279083]
[-91.03802490 -58.45721054]
[-85.06330872 -51.57354736]
[-71.94348145 -44.30236435]
[-58.82365417 -37.03117752]
[-45.70382690 -29.75999069]
[-32.58399963 -22.48880386]
[-29.12842751 -23.09322548]
[-25.20906830 -22.06578255]
[-21.59072495 -19.20684242]
[-19.09849739 -14.66350365]
[-6.27552938 -6.88073492]
[6.54743814 0.90203476]
[19.37040520 8.68480396]
[32.19337463 16.46757317]
[45.06721497 24.16589737]
[57.99137497 31.77944565]
[70.91553497 39.39299393]
[83.83969116 47.00653839]
[96.76385498 54.62008667]
[115.01641083 96.45372009]
[128.97607422 101.94257355]
[142.93576050 107.43142700]
[156.89543152 112.92028809]
[169.28547668 101.00643921]
[185.58711243 95.73320007]
[202.49766541 98.11790466]
[216.61338806 107.63156128]
[225.11450195 122.31521606]
[226.32852173 139.18312073]
[240.42764282 144.30313110]
[254.52677917 149.42314148]
[268.62591553 154.54315186]
[284.04141235 143.16485596]
[303.04937744 143.39787292]
[317.94351196 154.96595764]
[322.79507446 173.03422546]
[337.11477661 177.50038147]
[351.46350098 181.87234497]
[365.81222534 186.24429321]
[380.16094971 190.61625671]
[394.50967407 194.98820496]
[403.77542114 189.33729553]
[414.40286255 189.70034790]
[422.90313721 195.71725464]
[426.61801147 205.21134949]
[440.84686279 209.95896912]
[455.07568359 214.70658875]
[469.30453491 219.45420837]
[483.53338623 224.20182800]
[497.76223755 228.94944763]
[511.99108887 233.69708252]
[520.48022461 223.59783936]
[531.86560059 216.99536133]
[544.78466797 214.65475464]
[557.69976807 216.83258057]
[569.08129883 223.24894714]
[577.58868408 233.12324524]
[582.22821045 245.26902771]
[582.46948242 258.23666382]
[596.56860352 263.35665894]
[610.66772461 268.47665405]
[624.76684570 273.59667969]
[638.86596680 278.71667480]
[654.47833252 276.15454102]
[663.80023193 287.77139282]
[677.89935303 292.89138794]
[691.99853516 298.01141357]
[706.09765625 303.13140869]
[720.19677734 308.25143433]
[734.29589844 313.37142944]
[748.47906494 306.93130493]
[762.70465088 312.32455444]
[768.75695801 325.88574219]
[782.85607910 331.00573730]
[796.95520020 336.12573242]
[787.44628906 324.52484131]
[782.61700439 310.32351685]
[783.08251953 295.33074951]
[788.78350830 281.45635986]
[798.99383545 270.46771240]
[812.41278076 263.76458740]
[827.33105469 262.20083618]
[841.84826660 265.97567749]
[854.11529541 274.60821533]
[862.56939697 286.99884033]
[866.13372803 301.56921387]
[864.35424805 316.46328735]
[857.45764160 329.78381348]
[846.32238770 339.83401489]
[832.36700439 345.33361816]
[817.37139893 345.58251953]
[830.39447021 353.02551270]
[846.21514893 353.15557861]
[853.42584229 366.18844604]
[866.44897461 373.63146973]
[879.52069092 380.98870850]
[892.64050293 388.25991821]
[905.76037598 395.53109741]
[918.88018799 402.80227661]
[932.00000000 410.07345581]
[945.11981201 417.34463501]
[958.23968506 424.61584473]
[971.35949707 431.88702393]
[984.47930908 439.15820312]
[997.59912109 446.42938232]
[1013.97735596 445.60113525]
[1022.65533447 459.51605225]
[1014.70593262 473.85964966]
[998.30676270 473.87646484]
[990.32794189 459.54922485]
[977.20812988 452.27804565]
[964.08831787 445.00683594]
[950.96844482 437.73565674]
[937.84863281 430.46447754]
[924.72882080 423.19329834]
[911.60900879 415.92208862]
[898.48919678 408.65090942]
[885.36932373 401.37973022]
[872.24951172 394.10855103]
[864.88964844 393.61618042]
[859.00592041 386.65457153]
[845.98284912 379.21157837]
[831.09362793 379.61386108]
[822.95147705 366.04864502]
[809.92834473 358.60562134]
[803.45526123 359.84274292]
[796.57550049 357.02099609]
[791.83520508 350.22488403]
[777.73608398 345.10485840]
[763.63696289 339.98486328]
[750.29315186 346.50250244]
[735.92169189 341.51092529]
[729.17590332 327.47055054]
[715.07678223 322.35055542]
[700.97766113 317.23056030]
[686.87847900 312.11053467]
[672.77935791 306.99053955]
[658.68023682 301.87051392]
[644.07635498 304.79888916]
[633.74597168 292.81579590]
[619.64685059 287.69580078]
[605.54772949 282.57580566]
[591.44860840 277.45578003]
[577.34942627 272.33578491]
[565.59472656 284.49417114]
[549.65246582 290.30139160]
[532.72137451 288.54058838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 142]
[3 141]
[4 140]
[5 139]
[6 138]
[7 137]
[8 136]
[10 132]
[11 131]
[12 130]
[13 129]
[14 128]
[16 127]
[23 123]
[24 122]
[25 121]
[26 120]
[34 114]
[35 113]
[36 112]
[37 111]
[38 47]
[39 46]
[40 45]
[50 110]
[51 109]
[52 108]
[53 107]
[54 106]
[56 105]
[57 104]
[58 103]
[59 102]
[60 101]
[61 97]
[62 96]
[63 95]
[64 94]
[65 93]
[66 91]
[67 90]
[70 87]
[71 86]
[72 85]
[73 84]
[74 82]
[75 81]
[76 80]
[150 235]
[151 234]
[152 233]
[153 232]
[154 231]
[156 229]
[157 228]
[158 227]
[159 226]
[160 225]
[161 224]
[164 221]
[165 220]
[166 219]
[182 216]
[183 215]
[185 213]
[186 212]
[187 210]
[188 209]
[189 208]
[190 207]
[191 206]
[192 205]
[193 204]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
