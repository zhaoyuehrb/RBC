%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCCAUCUUUUCCGGCGCUGGCUCCUCUCCGUCAGUGCGGUUUCGCCUUUAUGGUGGUGGAGUCUGCCCAGGCUGUGGACCGCAAAUAACCCUGUACAAAGAGGAAUGGAGAUUGCCUCUAUCCACCUAGAUUCAUAAGCUGGCCUGAGGUGAUCUUGGCAUCAAGGAAGGGAUGCACAUCAUCACACCAUCAGCUUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[109.33923340 131.42523193]
[108.10567474 116.47669220]
[101.18756866 119.37321472]
[96.24880981 133.53684998]
[91.31005096 147.70050049]
[86.37129211 161.86413574]
[95.96057129 173.94921875]
[97.47116089 189.30244446]
[90.42102814 203.02465820]
[77.05986023 210.73715210]
[61.65113831 209.97889709]
[49.11174393 200.99185181]
[43.44294357 186.64373779]
[46.45363617 171.51300049]
[57.18312073 160.42779541]
[72.20764923 156.92536926]
[77.14641571 142.76173401]
[82.08517456 128.59809875]
[87.02393341 114.43445587]
[83.40003967 99.87879181]
[72.39685059 89.68418884]
[61.39366913 79.48958588]
[50.39048386 69.29498291]
[23.21195602 67.31307983]
[16.15578079 37.54148865]
[2.59899998 31.12169838]
[-10.95778179 24.70191193]
[-24.51456261 18.28212357]
[-38.07134247 11.86233521]
[-51.62812424 5.44254732]
[-66.35279846 10.52406597]
[-80.00984955 3.82036614]
[-84.76355743 -10.24867249]
[-98.32033539 -16.66846085]
[-111.92567444 -22.98468971]
[-125.57878113 -29.19699097]
[-139.23188782 -35.40929413]
[-153.19699097 -40.88433838]
[-167.43429565 -45.60653305]
[-181.67160034 -50.32872391]
[-195.90890503 -55.05091476]
[-210.14620972 -59.77310944]
[-224.38351440 -64.49530029]
[-238.62081909 -69.21749115]
[-252.85812378 -73.93968201]
[-272.39392090 -68.97872162]
[-284.61108398 -83.96338654]
[-298.98577881 -88.24919891]
[-313.36047363 -92.53501129]
[-327.73516846 -96.82082367]
[-335.36465454 -91.26831055]
[-344.55767822 -89.87191010]
[-353.23120117 -92.81999207]
[-359.47854614 -99.33076477]
[-361.98815918 -107.85465240]
[-376.15179443 -112.79341125]
[-390.31546021 -117.73217010]
[-404.47909546 -122.67093658]
[-418.64273071 -127.60969543]
[-432.76364136 -120.51213074]
[-447.74090576 -125.55764008]
[-454.68878174 -139.75280762]
[-449.48519897 -154.67588806]
[-435.21737671 -161.47328186]
[-420.35012817 -156.11222839]
[-413.70394897 -141.77333069]
[-399.54031372 -136.83456421]
[-385.37667847 -131.89581299]
[-371.21304321 -126.95705414]
[-357.04940796 -122.01828766]
[-337.19161987 -127.63494110]
[-323.44934082 -111.19551849]
[-309.07464600 -106.90970612]
[-294.69995117 -102.62389374]
[-280.32525635 -98.33808136]
[-271.80578613 -103.98875427]
[-261.36312866 -104.01572418]
[-252.44709778 -98.16852570]
[-248.13594055 -88.17699432]
[-233.89863586 -83.45480347]
[-219.66133118 -78.73260498]
[-205.42401123 -74.01041412]
[-191.18670654 -69.28822327]
[-176.94940186 -64.56603241]
[-162.71209717 -59.84383774]
[-148.47479248 -55.12164688]
[-155.25474548 -68.50193787]
[-151.97312927 -83.13857269]
[-140.12947083 -92.34333801]
[-125.13572693 -91.91014099]
[-113.84327698 -82.03691101]
[-111.41220093 -67.23522949]
[-118.95336914 -54.26870728]
[-133.01959229 -49.06240082]
[-119.36647797 -42.85009766]
[-105.71337128 -36.63779449]
[-98.32030487 -36.72896194]
[-91.90055084 -30.22524261]
[-78.34376526 -23.80545425]
[-64.44753265 -29.04284859]
[-50.60757828 -22.72539330]
[-45.20833588 -8.11423397]
[-31.65155602 -1.69444609]
[-18.09477425 4.72534180]
[-4.53799343 11.14513016]
[9.01878834 17.56491852]
[22.57556915 23.98470497]
[36.58200836 18.61630630]
[42.37505341 4.78009892]
[48.16809845 -9.05610752]
[53.96114349 -22.89231491]
[59.75418854 -36.72852325]
[65.54723358 -50.56472778]
[60.81936646 -65.89530945]
[69.97620392 -79.06846619]
[85.99340057 -79.97886658]
[96.58394623 -67.92813873]
[93.62366486 -52.16056824]
[79.38343811 -44.77168274]
[73.59039307 -30.93547630]
[67.79734802 -17.09926987]
[62.00430298 -3.26306248]
[56.21125793 10.57314491]
[50.41821289 24.40935135]
[57.22045135 29.67832375]
[61.78366089 36.54436874]
[63.81727219 44.16190338]
[63.32537460 51.67066193]
[60.58508682 58.29179764]
[71.58827209 68.48640442]
[82.59145355 78.68100739]
[93.59464264 88.87561035]
[102.47692871 79.67643738]
[119.46772003 79.72076416]
[135.27976990 94.23034668]
[148.83654785 100.65013123]
[163.56121826 95.56861115]
[177.21827698 102.27231598]
[181.97198486 116.34135437]
[195.52876282 122.76113892]
[209.08554077 129.18092346]
[222.64233398 135.60072327]
[236.19911194 142.02050781]
[249.75588989 148.44029236]
[263.31268311 154.86007690]
[269.92868042 154.70419312]
[274.88433838 157.49612427]
[277.18041992 161.68794250]
[290.53512573 168.51817322]
[305.40789795 163.88806152]
[318.85415649 171.00514221]
[323.17660522 185.21260071]
[336.53131104 192.04283142]
[349.88601685 198.87306213]
[363.24069214 205.70329285]
[376.59539795 212.53352356]
[391.46820068 207.90342712]
[404.91445923 215.02049255]
[409.23690796 229.22795105]
[422.59158325 236.05818176]
[435.99798584 242.78639221]
[449.45529175 249.41217041]
[462.91259766 256.03796387]
[476.36990356 262.66372681]
[489.82720947 269.28952026]
[503.49172974 261.93695068]
[518.86376953 264.05377197]
[530.03240967 274.82598877]
[532.70306396 290.11151123]
[525.84887695 304.03271484]
[512.10540771 311.23660278]
[496.75726318 308.95315552]
[485.70614624 298.06039429]
[483.20141602 282.74682617]
[469.74411011 276.12103271]
[456.28680420 269.49523926]
[442.82949829 262.86947632]
[429.37219238 256.24368286]
[421.97979736 256.10934448]
[415.76135254 249.41288757]
[402.40667725 242.58265686]
[388.35717773 247.39382935]
[374.71630859 240.65724182]
[369.76516724 225.88822937]
[356.41046143 219.05799866]
[343.05578613 212.22776794]
[329.70108032 205.39753723]
[316.34637451 198.56729126]
[302.29690552 203.37847900]
[288.65603638 196.64189148]
[283.70489502 181.87287903]
[270.35018921 175.04264832]
[256.89288330 168.41685486]
[243.33610535 161.99707031]
[229.77932739 155.57728577]
[216.22253418 149.15750122]
[202.66575623 142.73771667]
[189.10897827 136.31791687]
[175.55220032 129.89813232]
[161.65596008 135.13552856]
[147.81600952 128.81806946]
[142.41676331 114.20691681]
[128.85998535 107.78712463]
[121.94187927 110.68364716]
[131.72688293 122.05263519]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[20 132]
[21 131]
[22 130]
[23 129]
[25 107]
[26 106]
[27 105]
[28 104]
[29 103]
[30 102]
[33 99]
[34 98]
[35 96]
[36 95]
[37 94]
[38 86]
[39 85]
[40 84]
[41 83]
[42 82]
[43 81]
[44 80]
[45 79]
[47 75]
[48 74]
[49 73]
[50 72]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
[108 124]
[109 123]
[110 122]
[111 121]
[112 120]
[113 119]
[135 203]
[136 202]
[139 199]
[140 198]
[141 197]
[142 196]
[143 195]
[144 194]
[145 193]
[148 192]
[149 191]
[152 188]
[153 187]
[154 186]
[155 185]
[156 184]
[159 181]
[160 180]
[161 178]
[162 177]
[163 176]
[164 175]
[165 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
