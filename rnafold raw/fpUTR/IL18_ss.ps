%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUCUCCCCAGCUUGCUGAGCCCUUUGCUCCCCUGGCGACUGCCUGGACAGUCAGCAAGGAAUUGUCUCCCAGUGCAUUUUGCCCUCCUGGCUGCCAACUCUGGCUGCUAAAGCGGCUGCCACCUGCUGCAGUCUACACAGCUUCGGGAAGAGGAAAGGAACCUCAGACCUUCCAGAUCGCUUCCUCUCGCAACAAACUAUUUGUCGCAGGAAUAAAG\
) } def
/len { sequence length } bind def

/coor [
[395.38531494 784.80987549]
[384.29672241 779.59863281]
[373.97341919 772.99694824]
[364.58877563 765.11523438]
[356.30053711 756.08544922]
[349.24810791 746.05877686]
[343.55007935 735.20324707]
[339.30245972 723.70074463]
[336.57690430 711.74414062]
[335.41955566 699.53393555]
[335.85021973 687.27496338]
[337.86209106 675.17297363]
[341.42184448 663.43096924]
[346.47012329 652.24609375]
[352.92260742 641.80627441]
[360.67141724 632.28680420]
[369.58685303 623.84765625]
[379.51959229 616.63073730]
[372.54873657 603.34887695]
[365.57791138 590.06707764]
[358.60705566 576.78521729]
[351.63619995 563.50335693]
[334.58126831 554.38305664]
[335.72247314 534.25219727]
[328.37686157 521.17388916]
[321.03128052 508.09555054]
[313.68569946 495.01724243]
[306.34008789 481.93893433]
[293.36141968 474.63116455]
[293.34945679 458.80996704]
[286.00384521 445.73165894]
[278.65826416 432.65335083]
[263.10366821 424.52120972]
[263.48431396 406.10757446]
[255.95355225 393.13500977]
[248.42279053 380.16244507]
[240.89204407 367.18984985]
[233.36128235 354.21728516]
[220.28004456 347.09475708]
[220.04316711 331.27532959]
[213.97108459 327.07180786]
[212.49906921 318.06439209]
[205.15347290 304.98608398]
[197.80789185 291.90777588]
[183.44273376 288.14239502]
[175.80696106 274.98376465]
[179.85382080 259.94180298]
[172.50822449 246.86349487]
[165.16264343 233.78518677]
[157.81704712 220.70686340]
[150.47145081 207.62855530]
[137.49278259 200.32080078]
[137.48080444 184.49960327]
[131.46908569 180.21018982]
[130.12525940 171.18276978]
[122.96631622 158.00135803]
[115.80737305 144.81994629]
[108.64842987 131.63853455]
[101.48948669 118.45713043]
[84.21340942 120.88661194]
[66.80123138 106.58592224]
[52.56196976 101.86962128]
[38.32270813 97.15332794]
[24.31470299 104.47120667]
[9.26024628 99.66091919]
[2.09087849 85.57632446]
[7.06006002 70.57357025]
[21.21966362 63.55351257]
[36.16904831 68.68103027]
[43.03900528 82.91406250]
[57.27826691 87.63036346]
[71.51752472 92.34665680]
[76.87706757 87.10019684]
[87.59614563 76.60728455]
[92.95568848 71.36082458]
[88.54405975 57.02424240]
[84.13243866 42.68766022]
[79.61902618 28.38279533]
[75.00405884 14.11037254]
[71.69336700 11.32662201]
[69.64257812 7.97286844]
[68.87635040 4.51372957]
[69.26639557 1.37432718]
[70.55746460 -1.10604227]
[66.76106262 -15.61767006]
[62.96466446 -30.12929916]
[59.06521988 -44.61357498]
[55.06292343 -59.06977463]
[44.24834824 -66.09000397]
[41.20968246 -78.20745087]
[47.04613113 -88.79757690]
[43.24973297 -103.30920410]
[39.45333099 -117.82083130]
[35.65693283 -132.33245850]
[24.67881393 -143.72506714]
[28.94301414 -157.99621582]
[25.14661407 -172.50784302]
[21.35021591 -187.01948547]
[17.55381584 -201.53111267]
[5.64816618 -212.80885315]
[9.72479534 -228.69322205]
[25.59001732 -232.84373474]
[36.92304993 -220.99070740]
[32.06544495 -205.32749939]
[35.86184311 -190.81587219]
[39.65824127 -176.30424500]
[43.45464325 -161.79261780]
[54.16121674 -151.43798828]
[50.16856003 -136.12886047]
[53.96496201 -121.61723328]
[57.76136017 -107.10560608]
[61.55775833 -92.59397888]
[74.54772186 -80.78984833]
[69.51911926 -63.07207108]
[73.52141571 -48.61587524]
[78.33192444 -43.01240158]
[77.47629547 -33.92569733]
[81.27268982 -19.41407013]
[85.06909180 -4.90244198]
[89.27648163 9.49540234]
[93.89144897 23.76782417]
[98.93647766 29.16111374]
[98.46901703 38.27603531]
[102.88064575 52.61261749]
[107.29226685 66.94919586]
[124.60581207 91.05454254]
[114.67089844 111.29818726]
[121.82984161 124.47959900]
[128.98878479 137.66101074]
[136.14772034 150.84240723]
[143.30667114 164.02381897]
[150.55911255 177.15400696]
[164.06320190 185.39721680]
[163.54977417 200.28295898]
[170.89535522 213.36128235]
[178.24095154 226.43959045]
[185.58654785 239.51789856]
[192.93212891 252.59622192]
[207.88291931 256.96792603]
[215.14608765 270.33584595]
[210.88619995 284.56216431]
[218.23179626 297.64050293]
[225.57739258 310.71881104]
[233.01574707 323.74456787]
[246.63565063 331.79498291]
[246.33386230 346.68652344]
[253.86462402 359.65911865]
[261.39538574 372.63168335]
[268.92611694 385.60424805]
[276.45687866 398.57684326]
[288.69613647 402.63140869]
[294.70269775 413.58526611]
[291.73657227 425.30776978]
[299.08215332 438.38607788]
[306.42776489 451.46438599]
[319.93185425 459.70758057]
[319.41839600 474.59332275]
[326.76400757 487.67166138]
[334.10958862 500.74996948]
[341.45516968 513.82824707]
[348.80078125 526.90661621]
[359.41653442 529.23315430]
[366.84927368 536.85803223]
[368.82089233 547.09869385]
[364.91802979 556.53253174]
[371.88888550 569.81439209]
[378.85974121 583.09619141]
[385.83059692 596.37805176]
[392.80142212 609.65991211]
[409.96783447 604.20153809]
[427.85317993 602.08984375]
[445.81124878 603.39965820]
[463.19357300 608.08227539]
[479.37274170 615.96716309]
[493.76501465 626.76831055]
[505.85140991 640.09442139]
[515.19647217 655.46325684]
[521.46386719 672.31896973]
[524.42858887 690.05224609]
[523.98498535 708.02246094]
[520.15045166 725.58050537]
[513.06488037 742.09259033]
[502.98556519 756.96289062]
[490.27764893 769.65509033]
[498.88616943 781.93896484]
[507.49465942 794.22290039]
[516.10314941 806.50677490]
[524.71166992 818.79064941]
[529.43048096 820.98767090]
[532.52923584 824.42852783]
[533.80548096 828.28985596]
[533.41210938 831.78680420]
[541.48907471 844.42651367]
[555.43981934 851.88891602]
[555.77319336 866.77984619]
[563.85015869 879.41955566]
[571.92712402 892.05926514]
[580.00408936 904.69897461]
[588.08105469 917.33868408]
[601.70483398 927.42974854]
[595.77954102 943.31457520]
[578.87524414 942.01824951]
[575.44134521 925.41564941]
[567.36437988 912.77593994]
[559.28741455 900.13623047]
[551.21044922 887.49652100]
[543.13348389 874.85681152]
[529.76043701 868.29846191]
[528.84936523 852.50347900]
[520.77239990 839.86376953]
[512.42779541 827.39910889]
[503.81927490 815.11523438]
[495.21078491 802.83135986]
[486.60226440 790.54748535]
[477.99377441 778.26361084]
[467.06918335 783.78558350]
[455.52096558 787.84967041]
[443.54275513 790.38732910]
[431.33541870 791.35552979]
[419.10372925 790.73760986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 169]
[19 168]
[20 167]
[21 166]
[22 165]
[24 161]
[25 160]
[26 159]
[27 158]
[28 157]
[30 155]
[31 154]
[32 153]
[34 150]
[35 149]
[36 148]
[37 147]
[38 146]
[40 144]
[42 143]
[43 142]
[44 141]
[47 138]
[48 137]
[49 136]
[50 135]
[51 134]
[53 132]
[55 131]
[56 130]
[57 129]
[58 128]
[59 127]
[61 72]
[62 71]
[63 70]
[75 125]
[76 124]
[77 123]
[78 121]
[79 120]
[84 119]
[85 118]
[86 117]
[87 115]
[88 114]
[91 112]
[92 111]
[93 110]
[94 109]
[96 107]
[97 106]
[98 105]
[99 104]
[184 215]
[185 214]
[186 213]
[187 212]
[188 211]
[192 210]
[193 209]
[195 207]
[196 206]
[197 205]
[198 204]
[199 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
