%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUCAUCACGUGCCUGGUCCGAGCCAGUACGCAGCUCUGUAAUGAGAUCACCAUGGCCAGCCUCCCACCCGAGCAAAAACAAGGUUAGCCUGCAGCAGAGCCGCAGCAGCAACAGCCACCAAAGCGGGGGCUGAAAGGGAAGAGAACUUAGAUUUGACCUGUGCAAGGACCUCAGCAGCUUGGACACAGCCCACUGCAGAG\
) } def
/len { sequence length } bind def

/coor [
[106.91866302 486.07656860]
[91.13123322 485.34667969]
[80.54584503 473.61105347]
[81.44261169 457.83221436]
[93.28950500 447.37149048]
[93.98226166 432.38751221]
[83.78929138 421.58755493]
[84.27838898 406.38177490]
[95.67548370 395.76370239]
[96.36823273 380.77969360]
[93.53527069 373.94900513]
[97.18878174 365.57083130]
[98.11219788 350.59927368]
[99.03561401 335.62771606]
[90.37709808 320.36621094]
[100.66854095 305.09948730]
[101.36128998 290.11547852]
[102.05404663 275.13150024]
[102.63140106 260.14260864]
[103.09332275 245.14971924]
[103.55525208 230.15682983]
[104.01717377 215.16395569]
[104.47910309 200.17106628]
[104.94103241 185.17817688]
[105.40295410 170.18528748]
[105.86488342 155.19241333]
[89.39745331 153.90699768]
[74.20433807 147.86833191]
[61.60970306 137.70977783]
[52.67929459 124.41880798]
[48.13054657 109.24153900]
[48.27566147 93.56626892]
[53.00214386 78.79646301]
[40.37199783 70.70452118]
[24.57813644 69.77472687]
[18.03563499 56.39395905]
[5.40549183 48.30202103]
[-7.22465229 40.21008301]
[-19.85479736 32.11814499]
[-32.48493958 24.02620888]
[-45.11508560 15.93427086]
[-57.74522781 7.84233236]
[-80.77526093 16.37088585]
[-103.63552094 0.66334730]
[-118.62840271 1.12527323]
[-133.62129211 1.58719909]
[-143.15650940 13.98129749]
[-158.43872070 17.29610634]
[-172.25213623 9.96647358]
[-178.07447815 -4.54677153]
[-173.15663147 -19.39091873]
[-159.82063293 -27.55701447]
[-144.36334229 -25.18928146]
[-134.08322144 -13.40568638]
[-119.09033203 -13.86761284]
[-104.09744263 -14.32953835]
[-99.00333405 -28.43804932]
[-110.24277496 -38.37158203]
[-121.48220825 -48.30511475]
[-136.94653320 -51.64655304]
[-141.35911560 -65.87252808]
[-152.59854126 -75.80606079]
[-163.83798218 -85.73959351]
[-175.07742310 -95.67312622]
[-186.31686401 -105.60665894]
[-199.33833313 -97.90623474]
[-214.10247803 -94.60853577]
[-229.16288757 -96.03662872]
[-243.04406738 -102.05060577]
[-254.38609314 -112.06127930]
[-262.07778931 -125.08790588]
[-265.36560059 -139.85427856]
[-263.92742920 -154.91371155]
[-257.90414429 -168.79086304]
[-247.88586426 -180.12619019]
[-234.85408020 -187.80914307]
[-220.08552551 -191.08706665]
[-205.02705383 -189.63877869]
[-191.15393066 -183.60621643]
[-179.82533264 -173.58033752]
[-172.15110779 -160.54342651]
[-168.88308716 -145.77265930]
[-170.34146118 -130.71516418]
[-176.38333130 -116.84609222]
[-165.14389038 -106.91255951]
[-153.90444946 -96.97903442]
[-142.66500854 -87.04550171]
[-131.42558289 -77.11196899]
[-116.76517487 -74.48104095]
[-111.54867554 -59.54455185]
[-100.30924225 -49.61101913]
[-89.06980133 -39.67748642]
[-74.69104004 -42.08971405]
[-61.40000153 -37.91598129]
[-51.91250610 -28.62013626]
[-47.88798904 -16.64383125]
[-49.65328979 -4.78781128]
[-37.02314758 3.30412650]
[-24.39300156 11.39606476]
[-11.76285839 19.48800278]
[0.86728567 27.57994080]
[13.49742985 35.67187881]
[26.12757301 43.76381683]
[41.01804352 44.11482239]
[48.46393585 58.07437897]
[61.09408188 66.16632080]
[66.88214874 60.48295593]
[73.48998260 55.77774811]
[80.75400543 52.16716385]
[88.49442291 49.74057007]
[96.51963043 48.55803680]
[104.63098907 48.64883041]
[112.62771606 50.01070786]
[120.31187439 52.60995483]
[127.49325562 56.38223648]
[137.25253296 44.99116135]
[147.01181030 33.60008621]
[156.77108765 22.20901489]
[166.53034973 10.81794071]
[169.73979187 2.25980449]
[176.52868652 -0.67190808]
[186.46221924 -11.91134453]
[185.23925781 -27.66824532]
[195.57963562 -39.62032318]
[211.34858704 -40.67662811]
[223.19067383 -30.21046448]
[224.08020020 -14.43122864]
[213.48941040 -2.70045853]
[197.70166016 -1.97781217]
[187.76812744 9.26162434]
[177.92143250 20.57721519]
[168.16215515 31.96828842]
[158.40287781 43.35936356]
[148.64360046 54.75043488]
[138.88433838 66.14151001]
[143.76411438 72.74031067]
[147.53503418 80.02980042]
[150.10154724 87.82527924]
[165.03755188 86.44125366]
[179.97357178 85.05722809]
[190.05398560 73.18191528]
[205.22093201 71.99108124]
[216.48011780 81.67440033]
[231.41612244 80.29037476]
[246.35214233 78.90634918]
[253.36830139 65.16673279]
[266.71035767 57.42122269]
[282.12091064 58.14137268]
[294.68249512 67.09738159]
[300.38674927 81.43143463]
[297.41348267 96.56957245]
[286.71145630 107.68127441]
[271.69564819 111.22084045]
[257.15753174 106.05880737]
[247.73616028 93.84236145]
[232.80015564 95.22638702]
[217.86413574 96.61041260]
[208.57597351 108.19771576]
[193.44845581 109.81407928]
[181.35758972 99.99324036]
[166.42158508 101.37726593]
[151.48556519 102.76129150]
[149.71223450 119.85698700]
[142.21913147 136.02975464]
[154.84928894 144.12168884]
[167.47943115 152.21362305]
[181.08403015 145.08549500]
[196.42936707 145.73069763]
[209.38760376 153.97566223]
[216.47305298 167.60255432]
[215.77976990 182.94578552]
[207.49421692 195.87812805]
[193.84518433 202.92082214]
[178.50419617 202.17944336]
[165.59790039 193.85339355]
[158.59802246 180.18235779]
[159.38748169 164.84376526]
[146.75733948 156.75183105]
[134.12719727 148.65989685]
[120.85776520 155.65432739]
[120.39584351 170.64721680]
[119.93391418 185.64010620]
[119.47199249 200.63299561]
[119.01006317 215.62586975]
[118.54813385 230.61875916]
[118.08621216 245.61164856]
[117.62428284 260.60452271]
[120.48917389 269.28408813]
[117.03804016 275.82424927]
[116.34528351 290.80822754]
[115.65253448 305.79223633]
[123.75101471 315.83572388]
[122.86225128 328.30499268]
[114.00716400 336.55114746]
[113.08374786 351.52267456]
[112.16033173 366.49423218]
[111.35222626 381.47244263]
[110.65947723 396.45645142]
[121.02823639 408.08084106]
[120.11223602 423.26687622]
[108.96625519 433.08026123]
[108.27349854 448.06427002]
[119.10466003 459.57345581]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 202]
[6 201]
[9 198]
[10 197]
[12 196]
[13 195]
[14 194]
[16 191]
[17 190]
[18 189]
[19 187]
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[25 181]
[26 180]
[33 106]
[34 105]
[36 103]
[37 102]
[38 101]
[39 100]
[40 99]
[41 98]
[42 97]
[44 56]
[45 55]
[46 54]
[57 92]
[58 91]
[59 90]
[61 88]
[62 87]
[63 86]
[64 85]
[65 84]
[115 135]
[116 134]
[117 133]
[118 132]
[119 131]
[121 130]
[122 129]
[138 162]
[139 161]
[140 160]
[143 157]
[144 156]
[145 155]
[164 179]
[165 178]
[166 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
