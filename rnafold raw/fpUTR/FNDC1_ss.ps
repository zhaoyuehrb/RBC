%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAGUGGCGGAGCGCGGCUGCCGGUGUGCGGCCGGGAGCGAUCGCCGCGGGGCAGGGGCGCGGCGGGCACCGCGCAGAGCGCGCAGAACAGACGGACGGCGGCGGGGACCCGACGGCGGCGCCUCGGCACUCCCCAGACUCCGGCCAGCGCCCCCCUGCCAGCCGCAAGCACCCAGCCCCGGCCCACCCCGGGCUCUCG\
) } def
/len { sequence length } bind def

/coor [
[-18.43863678 770.70251465]
[-28.96551514 760.01678467]
[-32.83953476 745.52526855]
[-38.33523178 759.48223877]
[-43.83093262 773.43920898]
[-49.32663345 787.39617920]
[-47.18345261 803.07153320]
[-59.04576111 812.07904053]
[-64.54145813 826.03601074]
[-70.03716278 839.99298096]
[-70.21439362 856.94604492]
[-86.55394745 861.46881104]
[-95.42319489 847.01983643]
[-83.99414062 834.49731445]
[-78.49844360 820.54034424]
[-73.00273895 806.58337402]
[-75.53900909 791.90625000]
[-63.28361511 781.90051270]
[-57.78791428 767.94348145]
[-52.29221344 753.98651123]
[-46.79651260 740.02954102]
[-42.40719986 725.68609619]
[-39.15106964 711.04382324]
[-35.89493942 696.40148926]
[-32.63880920 681.75915527]
[-37.42883301 667.65576172]
[-26.88035393 655.86425781]
[-23.62422371 641.22192383]
[-20.36809158 626.57958984]
[-21.98617172 619.36199951]
[-16.94495583 611.73474121]
[-13.46037483 597.14508057]
[-9.97579479 582.55541992]
[-6.49121380 567.96582031]
[-3.00663376 553.37615967]
[0.47794670 538.78649902]
[3.96252704 524.19689941]
[2.45745111 516.95483398]
[7.61725950 509.40731812]
[11.32943821 494.87390137]
[-0.50060338 483.87197876]
[-5.19735241 468.31643677]
[-1.38897073 452.42337036]
[9.97768497 440.55029297]
[25.87026405 436.00155640]
[29.35484314 421.41192627]
[23.44939423 404.89004517]
[36.21009827 391.61947632]
[39.46622849 376.97714233]
[42.72235870 362.33480835]
[45.97848892 347.69250488]
[49.00537491 333.00106812]
[51.80227661 318.26412964]
[54.59917831 303.52719116]
[57.39607620 288.79025269]
[60.19297791 274.05331421]
[62.98987961 259.31637573]
[65.78678131 244.57945251]
[68.58367920 229.84251404]
[63.35520172 215.89573669]
[73.52999115 203.78028870]
[76.32688904 189.04335022]
[79.12379456 174.30641174]
[77.28092194 167.14291382]
[82.08128357 159.36180115]
[77.07141876 145.33502197]
[87.43431854 133.38006592]
[90.46120453 118.68864441]
[93.48809052 103.99721527]
[82.71187592 105.82032776]
[71.29881287 102.84974670]
[60.87368774 95.01142120]
[51.17213821 83.57114410]
[41.47058868 72.13086700]
[31.76903915 60.69058609]
[22.06749153 49.25030899]
[7.21176338 41.08062744]
[10.94969559 24.54387665]
[27.87494850 23.55789948]
[33.50777054 39.54875946]
[43.20931625 50.98904037]
[52.91086578 62.42931747]
[62.61241531 73.86959076]
[72.31396484 85.30987549]
[79.81030273 85.07546234]
[76.78115082 70.38450623]
[73.75199890 55.69354630]
[70.72285461 41.00258636]
[65.34894562 26.99826241]
[71.13427734 13.15882778]
[84.87619781 7.14553261]
[98.96743011 12.28722382]
[105.60735321 25.73755836]
[101.11905670 40.05210495]
[99.01369476 54.90361786]
[96.90833282 69.75513458]
[94.80297089 84.60664368]
[102.29930878 84.37223816]
[111.26712799 72.34816742]
[120.23495483 60.32410431]
[122.28320312 44.63604355]
[136.09451294 39.05958939]
[133.25599670 21.80192566]
[143.57067871 8.09815025]
[160.26927185 6.13002968]
[169.04806519 -6.03272676]
[177.82687378 -18.19548416]
[186.60566711 -30.35824013]
[195.38447571 -42.52099609]
[196.51327515 -62.64251328]
[214.46858215 -69.80584717]
[222.86296082 -82.23703766]
[231.25733948 -94.66822815]
[239.65170288 -107.09941864]
[241.86354065 -115.97055054]
[248.27568054 -119.65789795]
[256.86331177 -131.95637512]
[265.45095825 -144.25485229]
[269.56161499 -160.70291138]
[286.50482178 -161.30616760]
[291.77487183 -145.19210815]
[277.74942017 -135.66722107]
[269.16180420 -123.36873627]
[260.57415771 -111.07025909]
[252.08290100 -98.70504761]
[243.68852234 -86.27385712]
[235.29415894 -73.84266663]
[226.89978027 -61.41147232]
[229.74015808 -51.58562469]
[226.63388062 -41.61025620]
[218.37730408 -34.85567474]
[207.54722595 -33.74219513]
[198.76843262 -21.57943916]
[189.98962402 -9.41668224]
[181.21083069 2.74607468]
[172.43202209 14.90883160]
[176.24732971 27.22118378]
[172.21189880 39.66793442]
[161.58666992 47.63301468]
[148.11857605 48.02741241]
[146.71177673 62.85543060]
[132.25901794 69.29193115]
[123.29119873 81.31599426]
[114.32337189 93.34005737]
[108.17951965 107.02410126]
[105.15263367 121.71553040]
[102.12574768 136.40695190]
[106.91910553 151.48455811]
[96.77271271 162.38868713]
[93.86072540 177.10331726]
[91.06382751 191.84025574]
[88.26692963 206.57719421]
[93.29535675 221.57803345]
[83.32061768 232.63940430]
[80.52371979 247.37634277]
[77.72681427 262.11328125]
[74.92991638 276.85021973]
[72.13301849 291.58715820]
[69.33611298 306.32409668]
[66.53921509 321.06103516]
[63.74231339 335.79797363]
[65.56199646 342.16769409]
[64.10481262 347.67126465]
[60.62081146 350.94863892]
[57.36468124 365.59094238]
[54.10855103 380.23327637]
[50.85242081 394.87561035]
[57.10596085 406.16241455]
[54.08694077 418.29498291]
[43.94448853 424.89648438]
[40.45990753 439.48614502]
[51.10594177 448.56622314]
[56.77249908 461.28738403]
[56.40522003 475.14251709]
[50.13284302 487.42773438]
[39.23091888 495.77014160]
[25.86283875 498.58609009]
[22.15065956 513.11950684]
[18.55216980 527.68145752]
[15.06759071 542.27111816]
[11.58300972 556.86071777]
[8.09842968 571.45037842]
[4.61384916 586.04003906]
[1.12926888 600.62963867]
[-2.35531139 615.21929932]
[-5.72577000 629.83575439]
[-8.98190022 644.47808838]
[-12.23803139 659.12036133]
[-7.68090534 674.27105713]
[-17.99648666 685.01525879]
[-21.25261688 699.65759277]
[-24.50874710 714.29992676]
[-27.76487732 728.94226074]
[-16.44487762 719.10064697]
[-1.74081469 716.13574219]
[12.50847626 720.82165527]
[22.58289146 731.93499756]
[25.85227203 746.57434082]
[21.46307182 760.91778564]
[10.56119156 771.22070312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[5 19]
[6 18]
[8 16]
[9 15]
[10 14]
[22 193]
[23 192]
[24 191]
[25 190]
[27 188]
[28 187]
[29 186]
[31 185]
[32 184]
[33 183]
[34 182]
[35 181]
[36 180]
[37 179]
[39 178]
[40 177]
[45 171]
[46 170]
[48 167]
[49 166]
[50 165]
[51 164]
[52 161]
[53 160]
[54 159]
[55 158]
[56 157]
[57 156]
[58 155]
[59 154]
[61 152]
[62 151]
[63 150]
[65 149]
[67 147]
[68 146]
[69 145]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[98 144]
[99 143]
[100 142]
[102 140]
[105 136]
[106 135]
[107 134]
[108 133]
[109 132]
[111 128]
[112 127]
[113 126]
[114 125]
[116 124]
[117 123]
[118 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
