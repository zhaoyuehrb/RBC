%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCCCCGGCGCCGUCGCCAGGCGCUGGCCGUGGUGCUGAUUCUGUCAGGCGCUGGCGGCGGCAGCGGCGGUGACGGCUGCGGCCCCGCUCCCUCUACCCGGCCGGACCCGGCUCUGCCCCCGCGCCCAAGCCCCACCAAGCCCCCCGCCCUCCCGCCGCGGUCCCAGCCCAGGGCGCGGCCGCAACCAGCACC\
) } def
/len { sequence length } bind def

/coor [
[1.69011295 169.19741821]
[-3.67818570 174.30557251]
[-10.42469215 177.20228577]
[-17.68933678 177.56982422]
[-24.56369781 175.40963745]
[-30.20459366 171.03630066]
[-44.14232635 176.58062744]
[-58.08005905 182.12496948]
[-64.39789581 196.36303711]
[-78.61171722 201.78723145]
[-92.14660645 195.67639160]
[-106.08434296 201.22071838]
[-120.02207947 206.76506042]
[-133.95980835 212.30938721]
[-147.89753723 217.85371399]
[-161.83528137 223.39804077]
[-175.77301025 228.94236755]
[-189.71073914 234.48670959]
[-203.64846802 240.03103638]
[-217.58621216 245.57536316]
[-231.52394104 251.11968994]
[-245.41656494 256.77612305]
[-259.26315308 262.54428101]
[-265.99255371 268.74127197]
[-273.37960815 268.29180908]
[-287.31732178 273.83615112]
[-301.25506592 279.38046265]
[-315.19281006 284.92480469]
[-329.13052368 290.46914673]
[-339.09353638 302.75933838]
[-353.77935791 300.27426147]
[-360.60769653 306.36206055]
[-367.98657227 305.79364014]
[-382.01181030 311.11273193]
[-396.03704834 316.43179321]
[-405.98385620 329.46994019]
[-422.21182251 327.10678101]
[-428.02703857 311.77331543]
[-417.44729614 299.24331665]
[-401.35610962 302.40655518]
[-387.33087158 297.08749390]
[-373.30563354 291.76840210]
[-359.32369995 286.33651733]
[-350.35760498 274.44290161]
[-334.67486572 276.53140259]
[-320.73712158 270.98706055]
[-306.79940796 265.44274902]
[-292.86166382 259.89840698]
[-278.92391968 254.35408020]
[-265.03131104 248.69766235]
[-251.18470764 242.92951965]
[-246.21249390 237.44793701]
[-237.06826782 237.18196106]
[-223.13053894 231.63763428]
[-209.19281006 226.09330750]
[-195.25506592 220.54896545]
[-181.31733704 215.00463867]
[-167.37960815 209.46031189]
[-153.44187927 203.91598511]
[-139.50413513 198.37165833]
[-125.56640625 192.82731628]
[-111.62866974 187.28298950]
[-97.69094086 181.73866272]
[-92.05181885 168.00054932]
[-77.99595642 162.17926025]
[-63.62438965 168.18722534]
[-49.68665695 162.64289856]
[-35.74892426 157.09857178]
[-23.84714317 138.06196594]
[-0.91474491 141.52548218]
[12.53165913 134.87760925]
[25.97806358 128.22973633]
[39.42446899 121.58186340]
[43.93984222 107.43453217]
[57.48170853 100.50109100]
[72.29011536 105.33316040]
[85.73651886 98.68528748]
[93.65174866 87.15962982]
[107.61560822 87.86830902]
[121.06201172 81.22043610]
[134.50842285 74.57256317]
[147.95481873 67.92469025]
[161.40122986 61.27681732]
[174.84762573 54.62894440]
[188.29403687 47.98107147]
[192.28610229 42.68386841]
[197.56382751 40.53120804]
[202.28242493 41.34349442]
[215.93601990 35.13225937]
[225.29359436 22.37505722]
[240.08235168 24.14771461]
[253.73593140 17.93647957]
[267.38952637 11.72524548]
[281.04312134 5.51401091]
[282.03967285 -1.96646440]
[285.54232788 -8.57388973]
[291.07238770 -13.50644207]
[297.90872192 -16.18431091]
[305.18142700 -16.31761932]
[311.98263550 -13.93708515]
[317.47970581 -9.38430119]
[331.58883667 -14.47673702]
[345.69793701 -19.56917381]
[357.23403931 -33.91396713]
[374.37203979 -30.16467285]
[388.39727783 -35.48374557]
[402.42251587 -40.80281830]
[416.44775391 -46.12189102]
[430.47299194 -51.44096375]
[444.45495605 -56.87284470]
[458.39266968 -62.41717529]
[472.33041382 -67.96150208]
[486.26812744 -73.50583649]
[485.45877075 -86.24643707]
[488.26300049 -98.68256378]
[494.44448853 -109.81153870]
[503.49484253 -118.73899841]
[514.67578125 -124.75074768]
[527.07897949 -127.36989594]
[539.70013428 -126.39466095]
[551.52026367 -121.91389465]
[561.58776855 -114.29910278]
[569.09521484 -104.17361450]
[583.28454590 -109.03808594]
[597.47387695 -113.90256500]
[599.44750977 -127.75790405]
[607.16387939 -139.35423279]
[619.06823730 -146.45802307]
[632.80609131 -147.73068237]
[645.68859863 -142.98043823]
[655.21929932 -133.18867493]
[669.48510742 -137.82392883]
[674.15191650 -152.62260437]
[686.64587402 -161.82482910]
[702.16278076 -161.89216614]
[714.73614502 -152.79872131]
[719.53112793 -138.04110718]
[714.70410156 -123.29392242]
[702.11108398 -114.22777557]
[686.59429932 -114.32877350]
[674.12036133 -123.55808258]
[659.85455322 -118.92282867]
[656.88562012 -103.04518127]
[646.25628662 -90.75806427]
[630.79370117 -85.47402954]
[614.68377686 -88.72355652]
[602.33831787 -99.71324158]
[588.14898682 -94.84876251]
[573.95965576 -89.98429108]
[573.41265869 -72.64405060]
[566.24182129 -56.80786896]
[553.51947021 -44.90941238]
[537.17340088 -38.78857422]
[519.69458008 -39.40698242]
[503.75793457 -46.69703674]
[491.81246948 -59.56809998]
[477.87472534 -54.02376938]
[463.93701172 -48.47943878]
[449.99926758 -42.93511200]
[444.93939209 -37.53434753]
[435.79208374 -37.41572189]
[421.76681519 -32.09664917]
[407.74157715 -26.77757454]
[393.71633911 -21.45850182]
[379.69110107 -16.13942909]
[374.43649292 -5.23446465]
[362.78451538 -0.69259971]
[350.79037476 -5.46005917]
[336.68127441 -0.36762348]
[322.57214355 4.72481251]
[310.06326294 23.36810875]
[287.25436401 19.16760254]
[273.60076904 25.37883759]
[259.94717407 31.59007263]
[246.29357910 37.80130768]
[237.91259766 50.11424255]
[222.14724731 48.78585052]
[208.49366760 54.99708557]
[194.94190979 61.42747498]
[181.49549866 68.07534790]
[168.04910278 74.72322083]
[154.60269165 81.37109375]
[141.15629578 88.01896667]
[127.70988464 94.66683960]
[114.26348114 101.31471252]
[106.34825134 112.84037018]
[92.38439178 112.13169098]
[78.93798828 118.77956390]
[73.78633118 133.47984314]
[60.05506134 140.03018188]
[46.07234192 135.02827454]
[32.62593460 141.67614746]
[19.17953300 148.32402039]
[5.73312807 154.97189331]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 68]
[7 67]
[8 66]
[11 63]
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 51]
[23 50]
[25 49]
[26 48]
[27 47]
[28 46]
[29 45]
[31 43]
[33 42]
[34 41]
[35 40]
[70 194]
[71 193]
[72 192]
[73 191]
[76 188]
[77 187]
[79 185]
[80 184]
[81 183]
[82 182]
[83 181]
[84 180]
[85 179]
[88 178]
[89 177]
[91 175]
[92 174]
[93 173]
[94 172]
[101 170]
[102 169]
[103 168]
[105 165]
[106 164]
[107 163]
[108 162]
[109 161]
[110 159]
[111 158]
[112 157]
[113 156]
[123 149]
[124 148]
[125 147]
[131 142]
[132 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
