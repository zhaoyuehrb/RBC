%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCAGGCGGGGCGUUGGAGUUCAGAUGUUCGCUCCCGGGAUAGGCUGCCCCGGAGAGGGAGAGGCGGGGUCGGCUGUAUCACGUGGAUCUGCUCCCGCCGCCGCCGCCGCCGCCGUCGUCUUUCUCUGUCUCGGCUGAGGCAGCCAUCUUUCUCUUGCCGCGUGCUGGUGUUGGAGGACCCUCCCUGCUUCAGAUUUACCAACAGC\
) } def
/len { sequence length } bind def

/coor [
[192.30163574 574.99487305]
[205.28923035 567.23742676]
[201.93571472 552.61712646]
[198.58221436 537.99682617]
[195.22869873 523.37646484]
[191.87518311 508.75613403]
[188.52166748 494.13580322]
[185.16815186 479.51550293]
[174.78129578 468.84017944]
[179.23747253 453.65948486]
[175.88395691 439.03918457]
[172.53045654 424.41885376]
[169.17694092 409.79852295]
[165.71363831 395.20379639]
[155.16748047 384.68582153]
[159.39498901 369.43988037]
[155.82209778 354.87161255]
[145.27595520 344.35363770]
[149.50344849 329.10769653]
[145.93055725 314.53942871]
[133.09950256 307.06280518]
[129.26855469 292.33941650]
[137.19770813 278.93170166]
[133.62481689 264.36343384]
[130.05192566 249.79518127]
[126.47903442 235.22691345]
[122.79674530 220.68589783]
[119.00528717 206.17298889]
[115.21382141 191.66006470]
[111.42235565 177.14715576]
[101.14582062 170.76411438]
[97.86895752 158.70298767]
[103.87505341 147.28739929]
[100.30216217 132.71913147]
[83.72583008 128.38633728]
[71.61157990 116.27053070]
[67.28091431 99.69364929]
[71.92121124 83.20076752]
[84.26020050 71.31391907]
[80.25102234 56.85962677]
[76.24183655 42.40533829]
[72.23265839 27.95104980]
[68.22348022 13.49676037]
[62.91344070 6.06235504]
[64.26441956 -1.20496798]
[60.47295761 -15.71788597]
[56.68149185 -30.23080444]
[52.89002991 -44.74372482]
[49.09856415 -59.25664139]
[45.30710220 -73.76956177]
[41.51563644 -88.28247833]
[37.28964615 -102.67487335]
[32.63295364 -116.93373871]
[27.97626114 -131.19259644]
[23.21253395 -145.41606140]
[18.34204102 -159.60331726]
[6.54306126 -170.14346313]
[9.72859478 -184.69343567]
[4.85810280 -198.88069153]
[-0.01238941 -213.06794739]
[-4.88288164 -227.25521851]
[-9.75337315 -241.44247437]
[-14.62386513 -255.62973022]
[-19.49435806 -269.81698608]
[-24.36484909 -284.00424194]
[-29.23534203 -298.19149780]
[-34.10583496 -312.37875366]
[-38.97632599 -326.56600952]
[-43.84681702 -340.75329590]
[-48.82379913 -354.90353394]
[-53.90699005 -369.01599121]
[-58.99018097 -383.12841797]
[-64.28491974 -397.16287231]
[-69.79001617 -411.11614990]
[-75.29510498 -425.06942749]
[-80.80020142 -439.02270508]
[-93.06232452 -449.02023315]
[-90.53593445 -463.69903564]
[-96.04103088 -477.65231323]
[-109.96554565 -478.99182129]
[-121.89736176 -486.16616821]
[-129.53709412 -497.72628784]
[-131.44123840 -511.38449097]
[-127.29460907 -524.46716309]
[-117.96089172 -534.43823242]
[-123.25563049 -548.47265625]
[-128.55036926 -562.50708008]
[-133.84510803 -576.54156494]
[-148.84510803 -580.51391602]
[-158.61932373 -592.56567383]
[-159.40937805 -608.06262207]
[-150.91146851 -621.04589844]
[-136.39323425 -626.52313232]
[-121.43721008 -622.38830566]
[-111.79431152 -610.23120117]
[-111.17241669 -594.72662354]
[-119.81066132 -581.83630371]
[-114.51592255 -567.80181885]
[-109.22118378 -553.76739502]
[-103.92643738 -539.73297119]
[-87.92263794 -537.50415039]
[-75.15278625 -527.45111084]
[-69.16047668 -512.24304199]
[-71.66915131 -495.99563599]
[-82.08775330 -483.15740967]
[-76.58265686 -469.20413208]
[-64.71429443 -460.20462036]
[-66.84692383 -444.52780151]
[-61.34182739 -430.57452393]
[-55.83673477 -416.62124634]
[-50.33164215 -402.66796875]
[-46.38396454 -399.97753906]
[-44.08534622 -394.77795410]
[-44.87773132 -388.21160889]
[-39.79454041 -374.09918213]
[-34.71135330 -359.98672485]
[-29.48629951 -354.75814819]
[-29.65955925 -345.62377930]
[-24.78906631 -331.43652344]
[-19.91857529 -317.24926758]
[-15.04808331 -303.06201172]
[-10.17759132 -288.87472534]
[-5.30709887 -274.68746948]
[-0.43660688 -260.50021362]
[4.43388510 -246.31295776]
[9.30437756 -232.12570190]
[14.17486954 -217.93844604]
[19.04536057 -203.75119019]
[23.91585350 -189.56393433]
[35.36646271 -180.03855896]
[32.52930069 -164.47381592]
[37.39979172 -150.28656006]
[42.54566574 -144.98004150]
[42.23512650 -135.84928894]
[46.89181900 -121.59043121]
[51.54851151 -107.33156586]
[53.98589706 -105.94391632]
[56.02003098 -103.50643158]
[57.24801254 -100.16801453]
[57.32829666 -96.22065735]
[56.02855301 -92.07394409]
[59.82001877 -77.56102753]
[63.61148453 -63.04810715]
[67.40294647 -48.53518677]
[71.19441223 -34.02227020]
[74.98587799 -19.50934982]
[78.77733612 -4.99643230]
[82.67777252 9.48758125]
[86.68695068 23.94186974]
[90.69612885 38.39616013]
[94.70530701 52.85044861]
[98.71448517 67.30474091]
[111.14965057 69.23771667]
[121.93553925 75.72109985]
[129.47668457 85.79586029]
[132.65759277 97.97171021]
[131.00775146 110.44759369]
[124.77118683 121.37805176]
[114.87042999 129.14624023]
[118.44332123 143.71450806]
[131.48896790 156.70935059]
[125.93527222 173.35568237]
[129.72674561 187.86860657]
[133.51820374 202.38151550]
[137.30966187 216.89443970]
[142.50735474 224.40782166]
[141.04730225 231.65402222]
[144.62019348 246.22229004]
[148.19308472 260.79055786]
[151.76597595 275.35882568]
[164.99879456 283.57650757]
[168.41468811 298.40170288]
[160.49882507 310.96652222]
[164.07171631 325.53479004]
[174.87342834 337.09478760]
[170.39036560 351.29870605]
[173.96325684 365.86697388]
[184.76496887 377.42700195]
[180.28190613 391.63092041]
[185.36607361 399.22158813]
[183.79725647 406.44500732]
[187.15077209 421.06533813]
[190.50428772 435.68566895]
[193.85780334 450.30596924]
[204.48452759 462.02703857]
[199.78848267 476.16198730]
[203.14199829 490.78231812]
[206.49551392 505.40261841]
[209.84901428 520.02294922]
[213.20252991 534.64331055]
[216.55604553 549.26361084]
[219.90956116 563.88391113]
[234.97967529 565.20562744]
[248.90298462 571.12145996]
[260.31542969 581.05175781]
[268.09890747 594.02374268]
[271.49090576 608.76654053]
[270.15911865 623.83575439]
[264.23397827 637.75512695]
[254.29598999 649.16088867]
[241.31880188 656.93566895]
[226.57374573 660.31781006]
[211.50541687 658.97589111]
[197.59005737 653.04144287]
[186.19093323 643.09582520]
[178.42483521 630.11340332]
[175.05259705 615.36608887]
[176.40458679 600.29870605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[10 184]
[11 183]
[12 182]
[13 181]
[14 179]
[16 177]
[17 176]
[19 174]
[20 173]
[23 170]
[24 169]
[25 168]
[26 167]
[27 165]
[28 164]
[29 163]
[30 162]
[33 160]
[34 159]
[39 152]
[40 151]
[41 150]
[42 149]
[43 148]
[45 147]
[46 146]
[47 145]
[48 144]
[49 143]
[50 142]
[51 141]
[52 136]
[53 135]
[54 134]
[55 132]
[56 131]
[58 129]
[59 128]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
[70 116]
[71 115]
[72 114]
[73 111]
[74 110]
[75 109]
[76 108]
[78 106]
[79 105]
[85 100]
[86 99]
[87 98]
[88 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
