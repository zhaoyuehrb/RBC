%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGGGCGGACCUCGCGCGGACGGACGGACGGAGACGGCGCCGCCACAUUCCUAUGCCCGGGAGCGGCGGCGGCGGCGGCGGCGGCUCCCGCGGGAGGCGGCAGGCGCGCGGCGCGGACAGCUGAGCUUCUCCUCCGUCGGCGCCCGGGCGGACAUCGCCCGGGCCCCGAUGGUUUGAGCUUGCUUCUCCCUCCCUCCCGACCCCCGUGGUGGCGAGGCCACGCCAUGUGAAGGUUAGGGCCGGGACAUCCCGAG\
GAGCCGCGGUGAAAG\
) } def
/len { sequence length } bind def

/coor [
[176.84852600 505.00979614]
[189.27699280 495.86993408]
[188.23449707 480.90621948]
[179.63136292 468.74743652]
[186.39085388 454.44290161]
[185.34835815 439.47918701]
[184.30586243 424.51544189]
[176.05596924 418.56103516]
[172.34944153 408.85104370]
[174.62687683 398.48580933]
[182.37576294 390.91754150]
[181.68045044 375.93368530]
[180.98513794 360.94979858]
[180.28984070 345.96591187]
[179.59452820 330.98205566]
[177.28248596 328.36489868]
[176.10491943 324.51058960]
[176.62402344 319.95608521]
[179.14476013 315.46691895]
[178.97087097 300.46792603]
[178.79698181 285.46893311]
[170.91265869 272.83221436]
[178.48947144 258.94326782]
[165.17314148 251.50558472]
[157.85920715 239.07720947]
[157.83647156 225.48783875]
[164.28018188 214.47586060]
[156.06446838 201.92587280]
[147.84875488 189.37588501]
[134.40432739 182.96524048]
[133.31930542 167.18128967]
[125.10359192 154.63130188]
[116.88788605 142.08132935]
[108.67217255 129.53134155]
[100.45645905 116.98135376]
[86.38434601 111.78755951]
[71.98528290 115.99079132]
[60.90609741 127.28513336]
[46.52060699 123.42419434]
[32.12154770 127.62742615]
[17.72249222 131.83065796]
[3.32343507 136.03388977]
[-11.07562160 140.23712158]
[-25.47467995 144.44035339]
[-39.87373734 148.64358521]
[-44.51886368 158.42858887]
[-53.58468246 163.94546509]
[-63.97196198 163.58943176]
[-72.28068542 157.71737671]
[-86.77331543 161.58567810]
[-101.26594543 165.45396423]
[-115.75857544 169.32225037]
[-130.25120544 173.19053650]
[-137.94863892 186.99360657]
[-153.17440796 191.23052979]
[-166.89533997 183.38758850]
[-170.97103882 168.11787415]
[-162.98347473 154.48063660]
[-147.67152405 150.56660461]
[-134.11949158 158.69790649]
[-119.62686157 154.82962036]
[-105.13423157 150.96131897]
[-90.64160156 147.09303284]
[-76.14897156 143.22474670]
[-63.45631409 128.61033630]
[-44.07696915 134.24452209]
[-29.67790985 130.04129028]
[-15.27885342 125.83805847]
[-0.87979639 121.63482666]
[13.51926041 117.43159485]
[27.91831779 113.22836304]
[42.31737518 109.02513123]
[52.36664581 98.03143311]
[67.78205109 101.59173584]
[82.18111420 97.38850403]
[84.86190796 82.63000488]
[72.86090088 73.63134766]
[60.85988998 64.63269806]
[45.17713547 62.54419327]
[39.63614655 48.71861267]
[27.63513756 39.71995926]
[15.58217144 30.79101753]
[3.47765231 21.93208694]
[-8.62686634 13.07315826]
[-24.33277512 11.16659546]
[-30.03366280 -2.59382463]
[-42.13817978 -11.45275402]
[-57.84408951 -13.35931683]
[-63.54497910 -27.11973763]
[-75.64949799 -35.97866440]
[-87.75401306 -44.83759689]
[-99.85853577 -53.69652557]
[-115.86888885 -52.67277908]
[-126.54445648 -64.64824677]
[-123.69584656 -80.43637848]
[-109.50827789 -87.92586517]
[-94.86523438 -81.37141418]
[-90.99960327 -65.80104065]
[-78.89508820 -56.94211578]
[-66.79056549 -48.08318329]
[-54.68605042 -39.22425461]
[-39.84593582 -37.95134354]
[-33.27925110 -23.55727196]
[-21.17473412 -14.69834328]
[-6.33462048 -13.42543030]
[0.23206273 0.96863979]
[12.33658123 9.82756901]
[24.44110107 18.68649864]
[31.66853905 20.09578705]
[36.63379288 27.71894836]
[48.63479996 36.71760178]
[63.45915985 38.16246033]
[69.85854340 52.63168716]
[81.85955048 61.63034058]
[93.86056519 70.62899017]
[101.09554291 68.65287781]
[97.14354706 54.18285370]
[111.61363220 50.23107529]
[115.56551361 64.70065308]
[122.80049133 62.72454453]
[128.56082153 48.87468338]
[134.32115173 35.02482224]
[134.72181702 25.93605042]
[140.22935486 21.04841805]
[146.14985657 7.26626444]
[152.07034302 -6.51588964]
[157.99084473 -20.29804420]
[163.91133118 -34.08019638]
[169.83181763 -47.86235046]
[162.10154724 -57.63387680]
[159.26170349 -69.69145966]
[161.78894043 -81.74481201]
[169.14637756 -91.53099060]
[179.89619446 -97.23921967]
[191.98030090 -97.84582520]
[198.21871948 -111.48702240]
[204.45713806 -125.12821960]
[210.69554138 -138.76940918]
[216.93395996 -152.41061401]
[223.17237854 -166.05180359]
[229.41078186 -179.69299316]
[228.11380005 -195.46095276]
[240.44340515 -203.81739807]
[246.68180847 -217.45858765]
[252.92022705 -231.09979248]
[259.15863037 -244.74098206]
[265.39706421 -258.38217163]
[271.63546753 -272.02337646]
[277.87387085 -285.66455078]
[284.11230469 -299.30575562]
[290.35070801 -312.94696045]
[286.12216187 -328.42269897]
[295.70111084 -341.29217529]
[311.73941040 -341.68301392]
[321.93383789 -329.29537964]
[318.46411133 -313.63204956]
[303.99191284 -306.70852661]
[297.75347900 -293.06735229]
[291.51507568 -279.42614746]
[285.27667236 -265.78494263]
[279.03823853 -252.14376831]
[272.79983521 -238.50256348]
[266.56143188 -224.86137390]
[260.32299805 -211.22018433]
[254.08459473 -197.57897949]
[255.82778931 -182.78674316]
[243.05198669 -173.45457458]
[236.81356812 -159.81338501]
[230.57514954 -146.17219543]
[224.33674622 -132.53099060]
[218.09832764 -118.88980103]
[211.85990906 -105.24861145]
[205.62149048 -91.60741425]
[215.00314331 -76.61234283]
[213.46455383 -58.83299637]
[201.43560791 -45.43777084]
[183.61398315 -41.94186020]
[177.69348145 -28.15970612]
[171.77299500 -14.37755203]
[165.85249329 -0.59539765]
[159.93200684 13.18675613]
[154.01152039 26.96891022]
[148.17100525 40.78514862]
[142.41067505 54.63500977]
[136.65036011 68.48487091]
[113.00644684 108.76564789]
[121.22215271 121.31562805]
[129.43786621 133.86561584]
[137.65357971 146.41558838]
[145.86929321 158.96557617]
[159.90136719 166.27388000]
[160.39874268 181.16017151]
[168.61445618 193.71015930]
[176.83016968 206.26014709]
[201.83599854 210.10586548]
[211.99089050 236.73345947]
[225.73849487 242.73374939]
[239.48609924 248.73402405]
[253.23370361 254.73429871]
[266.98132324 260.73458862]
[282.72433472 259.16360474]
[291.29391479 271.34603882]
[305.04150391 277.34631348]
[318.78912354 283.34658813]
[332.63897705 289.10693359]
[346.58691406 294.62554932]
[361.63125610 284.45208740]
[379.61160278 285.36611938]
[393.30465698 296.81042480]
[397.32388306 314.03579712]
[411.39599609 319.22958374]
[425.46810913 324.42337036]
[439.54025269 329.61715698]
[453.61236572 334.81097412]
[467.68447876 340.00476074]
[481.93130493 333.16342163]
[496.81497192 338.47863770]
[503.50531006 352.79699707]
[498.03302002 367.62365723]
[483.64474487 374.16223145]
[468.87677002 368.53347778]
[462.49069214 354.07687378]
[448.41854858 348.88308716]
[434.34643555 343.68930054]
[420.27432251 338.49548340]
[406.20220947 333.30169678]
[392.13009644 328.10791016]
[383.17996216 336.24969482]
[371.55273438 339.84835815]
[359.42544556 338.16610718]
[349.09594727 331.46005249]
[342.54751587 320.94491577]
[341.06826782 308.57348633]
[327.12033081 303.05487061]
[323.78463745 304.08834839]
[319.78671265 303.57943726]
[315.84704590 301.23596191]
[312.78884888 297.09420776]
[299.04122925 291.09393311]
[285.29364014 285.09365845]
[270.53393555 287.09381104]
[260.98104858 274.48217773]
[247.23342896 268.48190308]
[233.48582458 262.48162842]
[219.73822021 256.48135376]
[205.99061584 250.48107910]
[193.48846436 258.76937866]
[201.38522339 272.47894287]
[193.79597473 285.29504395]
[193.96986389 300.29403687]
[194.14375305 315.29302979]
[194.57841492 330.28674316]
[195.27371216 345.27059937]
[195.96902466 360.25448608]
[196.66432190 375.23837280]
[197.35963440 390.22222900]
[208.97596741 406.72567749]
[199.26959229 423.47296143]
[200.31208801 438.43667603]
[201.35458374 453.40042114]
[210.03227234 466.62948608]
[203.19822693 479.86370850]
[204.24072266 494.82745361]
[217.81648254 502.15563965]
[225.25520325 515.67114258]
[224.18324280 531.06121826]
[214.94262695 543.41491699]
[200.48202515 548.79028320]
[185.41574097 545.47204590]
[174.55139160 534.51898193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 263]
[3 262]
[5 260]
[6 259]
[7 258]
[11 256]
[12 255]
[13 254]
[14 253]
[15 252]
[19 251]
[20 250]
[21 249]
[23 247]
[27 194]
[28 193]
[29 192]
[31 190]
[32 189]
[33 188]
[34 187]
[35 186]
[36 75]
[37 74]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[76 115]
[77 114]
[78 113]
[80 111]
[81 110]
[82 108]
[83 107]
[84 106]
[86 104]
[87 103]
[89 101]
[90 100]
[91 99]
[92 98]
[120 185]
[121 184]
[122 183]
[124 182]
[125 181]
[126 180]
[127 179]
[128 178]
[129 177]
[135 173]
[136 172]
[137 171]
[138 170]
[139 169]
[140 168]
[141 167]
[143 165]
[144 164]
[145 163]
[146 162]
[147 161]
[148 160]
[149 159]
[150 158]
[151 157]
[196 246]
[197 245]
[198 244]
[199 243]
[200 242]
[202 240]
[203 239]
[204 238]
[205 234]
[206 233]
[210 227]
[211 226]
[212 225]
[213 224]
[214 223]
[215 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
