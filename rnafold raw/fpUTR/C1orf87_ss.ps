%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCUGAGAGUGUCAGCUUCCUGGGGAGAAGCACGGACCGCGCACCUCUGAGCUGCCAGGGUGGGGACGCUGCCCUAGCGGGAUCUGAAGGGAUUUUGAAAGGAAUC\
) } def
/len { sequence length } bind def

/coor [
[199.52876282 242.87280273]
[193.41719055 240.20074463]
[187.95684814 236.34997559]
[183.37254333 231.47344971]
[179.85414124 225.76641846]
[177.54870605 219.45867920]
[176.55433655 212.80531311]
[176.91600037 206.07635498]
[178.62359619 199.54582214]
[181.61204529 193.48057556]
[171.08215332 182.79782104]
[160.55224609 172.11506653]
[150.02233887 161.43232727]
[139.49244690 150.74957275]
[128.96253967 140.06681824]
[114.11286163 140.21664429]
[103.28186035 129.53280640]
[103.22540283 113.95607758]
[89.79872131 110.05531311]
[86.09185028 96.57382202]
[75.56194305 85.89106750]
[65.03204346 75.20832062]
[54.50214386 64.52556610]
[43.97224426 53.84281540]
[33.44234085 43.16006470]
[22.02923584 33.42656326]
[9.81820011 24.71504211]
[-2.39283514 16.00351906]
[-14.60387039 7.29199791]
[-29.99421120 9.69515228]
[-42.25383759 0.68647897]
[-44.45003510 -14.00066948]
[-56.66106796 -22.71219063]
[-72.38893890 -24.42819405]
[-78.25624084 -38.11848450]
[-90.46727753 -46.83000565]
[-106.87294006 -51.10673141]
[-107.30489349 -68.05517578]
[-91.13838196 -73.16204071]
[-81.75575256 -59.04104233]
[-69.54471588 -50.32952118]
[-54.69026184 -49.23662186]
[-47.94954681 -34.92322540]
[-35.73851013 -26.21170425]
[-21.13609695 -28.91449165]
[-8.62827110 -20.25371933]
[-5.89234829 -4.91903734]
[6.31868696 3.79248452]
[18.52972221 12.50400639]
[30.74075699 21.21552849]
[30.34864235 6.22065449]
[40.48003769 -4.84075642]
[55.45161819 -5.76367474]
[66.86489868 3.96962142]
[68.31745911 18.89912415]
[58.99448013 30.64995193]
[44.12509155 32.63016129]
[54.65499496 43.31291199]
[65.18489838 53.99566650]
[75.71479797 64.67841339]
[86.24469757 75.36116791]
[96.77459717 86.04392242]
[110.20127869 89.94468689]
[113.90814972 103.42617798]
[129.48245239 103.70709991]
[140.00909424 114.69093323]
[139.64529419 129.53691101]
[150.17520142 140.21966553]
[160.70509338 150.90242004]
[171.23500061 161.58517456]
[181.76489258 172.26792908]
[192.29479980 182.95066833]
[217.39265442 179.09017944]
[237.78019714 193.86436462]
[241.85560608 218.49229431]
[255.38351440 224.97270203]
[268.91140747 231.45312500]
[283.65869141 226.43759155]
[297.28558350 233.20236206]
[301.97625732 247.29254150]
[315.50415039 253.77296448]
[329.03207397 260.25338745]
[342.55996704 266.73379517]
[356.08786011 273.21423340]
[369.61578369 279.69464111]
[383.14367676 286.17504883]
[396.67156982 292.65548706]
[412.97186279 290.85751343]
[422.45968628 304.23333740]
[415.37481689 319.02307129]
[399.00552368 320.01229858]
[390.19116211 306.18338013]
[376.66326904 299.70297241]
[363.13534546 293.22253418]
[349.60745239 286.74212646]
[336.07955933 280.26171875]
[322.55163574 273.78128052]
[309.02374268 267.30087280]
[295.49584961 260.82043457]
[281.57629395 265.99557495]
[267.76477051 259.61621094]
[262.43099976 244.98103333]
[248.90309143 238.50061035]
[235.37518311 232.02018738]
[230.77650452 236.75668335]
[225.31140137 240.48036194]
[219.19967651 243.03593445]
[212.68821716 244.31521606]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 72]
[11 71]
[12 70]
[13 69]
[14 68]
[15 67]
[18 64]
[20 62]
[21 61]
[22 60]
[23 59]
[24 58]
[25 57]
[26 50]
[27 49]
[28 48]
[29 47]
[32 44]
[33 43]
[35 41]
[36 40]
[75 104]
[76 103]
[77 102]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
