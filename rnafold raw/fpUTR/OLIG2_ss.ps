%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAACCGGCCGAGCCCCUAAAGGUGCGGAUGCUUAUUAUAGAUCGACGCGACACCAGCGCCCGGUGCCAGGUUCUCCCCUGAGGCUUUUCGGAGCGAGCUCCUCAAAUCGCAUCCAGAUUUUCGGGUCCGAGGGAAGGAGGACCCUGCGAAAGCUGCGACGACUAUCUUCCCCUGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[34.01633072 479.99865723]
[32.29616547 495.07861328]
[25.24118423 508.51705933]
[13.80551243 518.49652100]
[-0.46426719 523.66741943]
[-15.63828564 523.33032227]
[-29.66438103 517.53094482]
[-40.64563751 507.05349731]
[-47.09693527 493.31503296]
[-48.14578247 478.17355347]
[-43.65033722 463.67681885]
[-34.21856689 451.78540039]
[-21.12604332 444.10748291]
[-6.14342308 441.68148804]
[-3.05852461 427.00213623]
[0.02637390 412.32278442]
[3.11127234 397.64340210]
[6.19617081 382.96405029]
[4.56446886 379.81082153]
[4.39435959 375.70489502]
[6.11934805 371.34899902]
[9.83943081 367.61380005]
[13.68001747 353.11380005]
[17.52060318 338.61383057]
[16.05430412 335.38034058]
[16.09695244 331.27111816]
[18.04509544 327.01034546]
[21.95352936 323.47271729]
[26.53950691 309.19094849]
[31.12548447 294.90917969]
[27.64979553 280.42578125]
[39.23576736 269.65194702]
[25.36753845 275.36788940]
[11.45876884 269.75131226]
[5.44848728 256.00805664]
[10.76731968 241.98274231]
[24.37931442 235.68086243]
[38.51483917 240.69952393]
[45.10548782 254.17477417]
[51.14339447 240.44364929]
[57.18130493 226.71252441]
[63.21921158 212.98139954]
[63.03298187 205.57354736]
[69.48166656 199.06680298]
[75.75568390 185.44194031]
[82.02970123 171.81709290]
[80.32513428 157.02033997]
[93.12527466 147.72157288]
[99.39929199 134.09672546]
[105.67330933 120.47187042]
[93.50418091 124.78684998]
[78.83575439 121.26816559]
[66.78153229 108.87956238]
[53.62199402 101.68050385]
[40.46245193 94.48143768]
[27.30291367 87.28237915]
[12.80212021 93.13567352]
[-2.05248284 88.24948883]
[-10.24700737 74.93093872]
[-7.91224861 59.46863174]
[3.84939122 49.16339874]
[19.48442459 48.88105392]
[31.61046982 58.75490952]
[34.50197601 74.12284088]
[47.66151428 81.32189941]
[60.82105637 88.52096558]
[73.98059845 95.72002411]
[79.19156647 90.32597351]
[94.82448578 74.14382935]
[87.17549896 61.24061203]
[79.52650452 48.33739853]
[71.87751770 35.43418121]
[56.50553513 31.76298714]
[48.30312729 18.25387764]
[52.13663864 2.92156672]
[65.73171997 -5.13755512]
[81.02263641 -1.14215529]
[88.93757629 12.53736687]
[84.78073120 27.78519440]
[92.42972565 40.68840790]
[100.07871246 53.59162521]
[107.72769928 66.49484253]
[122.86238098 84.15903473]
[121.05793762 102.80127716]
[133.68945312 94.71147919]
[146.32096863 86.62168121]
[158.95246887 78.53187561]
[171.58398438 70.44207764]
[184.21549988 62.35227585]
[189.77262878 55.06930542]
[197.13560486 54.23404312]
[209.90486145 46.36347580]
[217.59294128 32.53582001]
[232.48725891 32.44440842]
[245.25653076 24.57383919]
[252.94461060 10.74618340]
[267.83892822 10.65477085]
[271.59997559 -4.46119356]
[284.66192627 -12.26116562]
[299.04953003 -8.58243847]
[311.81878662 -16.45300674]
[324.58804321 -24.32357407]
[337.35733032 -32.19414139]
[350.12658691 -40.06470871]
[349.78927612 -55.35632324]
[357.10299683 -68.67571259]
[370.01580811 -76.49398804]
[385.00793457 -76.79711151]
[398.05102539 -69.60379028]
[410.82028198 -77.47435760]
[423.58953857 -85.34492493]
[431.27761841 -99.17257690]
[446.17193604 -99.26399231]
[458.94122314 -107.13455963]
[471.71047974 -115.00512695]
[484.47973633 -122.87569427]
[485.52282715 -138.35766602]
[495.49258423 -150.24815369]
[510.55548096 -153.97499084]
[524.91949463 -148.10514832]
[533.06134033 -134.89570618]
[531.85040283 -119.42595673]
[521.75219727 -107.64433289]
[506.64981079 -104.08111572]
[492.35031128 -110.10643005]
[479.58105469 -102.23586273]
[466.81176758 -94.36529541]
[454.04251099 -86.49472809]
[447.26779175 -73.23002625]
[431.46011353 -72.57566071]
[418.69085693 -64.70509338]
[405.92156982 -56.83452225]
[406.48654175 -41.95008850]
[399.47872925 -28.69314766]
[386.69165039 -20.67084122]
[371.50625610 -20.12249184]
[357.99716187 -27.29544067]
[345.22787476 -19.42487335]
[332.45861816 -11.55430603]
[319.68936157 -3.68373919]
[306.92007446 4.18682814]
[303.74111938 18.69302177]
[290.90338135 26.85680008]
[275.70950317 23.42403793]
[268.93475342 36.68873596]
[253.12710571 37.34310532]
[240.35783386 45.21367264]
[233.58309937 58.47837448]
[217.77543640 59.13274384]
[205.00616455 67.00331116]
[192.30529785 74.98378754]
[179.67378235 83.07359314]
[167.04228210 91.16339111]
[154.41076660 99.25318909]
[141.77925110 107.34299469]
[129.14773560 115.43279266]
[119.29817200 126.74588776]
[113.02415466 140.37074280]
[106.75013733 153.99559021]
[108.00594330 169.76689148]
[95.65455627 178.09111023]
[89.38053894 191.71595764]
[83.10652161 205.34082031]
[76.95033264 219.01931763]
[70.91242218 232.75044250]
[64.87451172 246.48155212]
[58.83660507 260.21267700]
[53.51753235 274.23791504]
[56.66520309 289.74285889]
[45.40724945 299.49517822]
[40.82127380 313.77694702]
[36.23529434 328.05868530]
[32.02059937 342.45440674]
[28.18001366 356.95440674]
[24.33942795 371.45440674]
[20.87552452 386.04895020]
[17.79062462 400.72830200]
[14.70572662 415.40765381]
[11.62082863 430.08703613]
[8.53592968 444.76638794]
[21.27460480 453.01806641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[22 175]
[23 174]
[24 173]
[28 172]
[29 171]
[30 170]
[32 168]
[39 167]
[40 166]
[41 165]
[42 164]
[44 163]
[45 162]
[46 161]
[48 159]
[49 158]
[50 157]
[53 67]
[54 66]
[55 65]
[56 64]
[69 82]
[70 81]
[71 80]
[72 79]
[84 156]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[91 150]
[92 149]
[94 147]
[95 146]
[97 144]
[100 141]
[101 140]
[102 139]
[103 138]
[104 137]
[109 132]
[110 131]
[111 130]
[113 128]
[114 127]
[115 126]
[116 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
