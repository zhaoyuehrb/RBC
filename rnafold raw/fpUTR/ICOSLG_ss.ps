%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACGGCUGCCUCCAGCACACCGCGCGCUGGGCGCUCAGAGCCUCGGGCGCGGCGGGAGCGCAGUUAGAGCCGAUCUCCCGCGCCCCGAGGUUGCUCCUCUCCGAGGUCUCCCGCGGCCCAAGUUCUCCGCGCCCCGAGGUCUCCGCGCCCCGAGGUCUCCGCGGCCCGAGGUCUCCGCCCGCACC\
) } def
/len { sequence length } bind def

/coor [
[105.99396515 793.59118652]
[103.41645050 778.58197021]
[107.17285919 763.82360840]
[116.61237335 751.87310791]
[130.09953308 744.80084229]
[129.09765625 729.83435059]
[128.09576416 714.86785889]
[116.74959564 705.28662109]
[115.52033234 690.12274170]
[125.64694214 678.28680420]
[124.64505768 663.32031250]
[123.64316559 648.35375977]
[122.64127350 633.38726807]
[121.63938904 618.42077637]
[110.29322052 608.83953857]
[109.06395721 593.67565918]
[119.19057465 581.83972168]
[118.18868256 566.87322998]
[116.14832306 564.92352295]
[114.76530457 562.04010010]
[114.40211487 558.47229004]
[115.32334900 554.59674072]
[117.65396118 550.87969971]
[117.65396118 535.87969971]
[117.65396118 520.87969971]
[117.65396118 505.87969971]
[106.77578735 489.90762329]
[117.06961060 472.59069824]
[116.56838989 457.59909058]
[116.06716156 442.60745239]
[115.19035339 427.63311768]
[113.93851471 412.68542480]
[112.68668365 397.73776245]
[111.43484497 382.79010010]
[110.18300629 367.84240723]
[108.93116760 352.89474487]
[100.54823303 347.00946045]
[96.71814728 337.27334595]
[98.93525696 326.82373047]
[106.70183563 319.17294312]
[105.95018005 304.19180298]
[105.19851685 289.21063232]
[104.32170868 274.23629761]
[103.31981659 259.26977539]
[102.31793213 244.30328369]
[101.31604004 229.33677673]
[100.31414795 214.37026978]
[99.31226349 199.40376282]
[98.31037140 184.43727112]
[97.18347168 169.47966003]
[95.93163300 154.53198242]
[94.67979431 139.58430481]
[93.42795563 124.63663483]
[92.17611694 109.68896484]
[86.20510101 95.92862701]
[76.14333344 84.80384827]
[66.08155823 73.67906189]
[56.01979065 62.55428314]
[47.92538452 58.27748108]
[45.88474274 51.15852356]
[36.01026917 39.86716461]
[26.13579559 28.57580566]
[16.26132393 17.28444672]
[8.23951435 12.87298584]
[6.31811190 5.72092295]
[-9.18939304 4.25291491]
[-18.84759140 -7.50182199]
[-17.35250282 -22.27681160]
[-27.03692055 -33.73159409]
[-36.72134018 -45.18637848]
[-52.52408600 -47.95272827]
[-60.08735275 -62.10110474]
[-53.60924530 -76.77808380]
[-38.05921173 -80.72473907]
[-25.36591148 -70.91354370]
[-25.26655579 -54.87079620]
[-15.58213806 -43.41601181]
[-5.89771986 -31.96122932]
[8.92013454 -30.97797775]
[18.90468979 -19.49915695]
[17.77289581 -3.96349454]
[27.55268097 7.40997314]
[37.42715454 18.70133209]
[47.30162811 29.99269104]
[57.17610168 41.28404999]
[67.14456940 52.49251175]
[77.20634460 63.61729431]
[87.26811218 74.74207306]
[97.32988739 85.86685181]
[104.71472931 84.55764008]
[126.86927032 80.62998199]
[132.49353027 66.72431183]
[138.11779785 52.81864548]
[143.74205017 38.91297531]
[149.36631775 25.00730324]
[154.99058533 11.10163307]
[149.80290222 -11.50167084]
[167.86909485 -24.83014679]
[172.31323242 -39.15668488]
[176.75737000 -53.48322296]
[181.20149231 -67.80976105]
[180.11936951 -84.72913361]
[196.07797241 -90.45272064]
[205.99565125 -76.70223999]
[195.52803040 -63.36562729]
[191.08390808 -49.03908920]
[186.63977051 -34.71255112]
[182.19563293 -20.38601303]
[187.00563049 -15.08974457]
[189.69657898 -8.38706684]
[189.88783264 -1.09870136]
[187.50805664 5.86496019]
[182.80998230 11.61757469]
[176.34451294 15.40962219]
[168.89625549 16.72589684]
[163.27198792 30.63156700]
[157.64772034 44.53723526]
[152.02346802 58.44290543]
[146.39920044 72.34857941]
[140.77493286 86.25424957]
[152.37742615 76.74729156]
[163.56968689 86.73394012]
[168.42002869 100.92810822]
[165.67977905 115.67568207]
[156.05439758 127.18011475]
[142.02180481 132.47975159]
[127.19448090 130.21026611]
[115.38867950 120.95478058]
[107.12379456 108.43712616]
[108.37562561 123.38480377]
[109.62746429 138.33247375]
[110.87930298 153.28015137]
[112.13114166 168.22781372]
[115.97247314 176.53771973]
[113.27687836 183.43537903]
[114.27876282 198.40187073]
[115.28065491 213.36837769]
[116.28254700 228.33488464]
[117.28443146 243.30139160]
[118.28632355 258.26788330]
[119.28820801 273.23440552]
[122.99015045 281.60733032]
[120.17967224 288.45898438]
[120.93133545 303.44012451]
[121.68299103 318.42129517]
[133.38610840 334.81869507]
[123.87884521 351.64291382]
[125.13067627 366.59057617]
[126.38251495 381.53826904]
[127.63435364 396.48593140]
[128.88618469 411.43359375]
[130.13803101 426.38128662]
[133.14195251 430.69866943]
[134.08161926 435.27841187]
[133.20544434 439.28543091]
[131.05879211 442.10623169]
[131.56001282 457.09786987]
[132.06123352 472.08947754]
[140.43922424 479.06542969]
[143.52067566 489.29354858]
[140.51649475 499.31533813]
[132.65396118 505.87969971]
[132.65396118 520.87969971]
[132.65396118 535.87969971]
[132.65396118 550.87969971]
[133.15518188 565.87133789]
[134.15707397 580.83782959]
[145.77090454 591.21838379]
[146.57376099 606.41082764]
[136.60589600 617.41888428]
[137.60777283 632.38537598]
[138.60966492 647.35186768]
[139.61155701 662.31842041]
[140.61344910 677.28491211]
[152.22727966 687.66546631]
[153.03013611 702.85791016]
[143.06225586 713.86596680]
[144.06414795 728.83245850]
[145.06604004 743.79895020]
[159.37550354 749.01043701]
[170.32363892 759.59619141]
[176.01362610 773.72216797]
[175.45964050 788.94104004]
[168.75765991 802.61596680]
[157.06884766 812.37768555]
[142.41835022 816.53497314]
[127.34447479 814.36749268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 179]
[6 178]
[7 177]
[10 174]
[11 173]
[12 172]
[13 171]
[14 170]
[17 167]
[18 166]
[23 165]
[24 164]
[25 163]
[26 162]
[28 158]
[29 157]
[30 156]
[31 152]
[32 151]
[33 150]
[34 149]
[35 148]
[36 147]
[40 145]
[41 144]
[42 143]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[50 133]
[51 132]
[52 131]
[53 130]
[54 129]
[55 89]
[56 88]
[57 87]
[58 86]
[60 85]
[61 84]
[62 83]
[63 82]
[65 81]
[68 78]
[69 77]
[70 76]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
[98 108]
[99 107]
[100 106]
[101 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
