%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUCCAAGUUGGAGUGGUGCCUGAUACAGGUGAAAAUCAGUUCGCAGCUACUGGAAGAGAGAGGAGCAUAUCAAUUGUUUAAAACAAAAAGCCAGCGUUAACAGGCUCAGAGAAAUGAAGUUGAAAGGAAUAGAUGUAGCUCCUGAAUAGAAGCAAAAGUCCAACGUGGUUCCAUUAAA\
) } def
/len { sequence length } bind def

/coor [
[97.39031219 416.31793213]
[97.22970581 401.14102173]
[102.56613922 386.93231201]
[112.67790985 375.61346436]
[126.19747162 368.71520996]
[124.63817596 353.79647827]
[123.07888031 338.87774658]
[114.06046295 327.02374268]
[120.32127380 312.49401855]
[118.76197815 297.57528687]
[117.20268250 282.65655518]
[115.64338684 267.73782349]
[114.08409119 252.81909180]
[112.52479553 237.90036011]
[103.50637054 226.04635620]
[109.76718140 211.51663208]
[98.07162476 202.36515808]
[96.27775574 187.25765991]
[105.95595551 175.05232239]
[104.39665985 160.13359070]
[102.83736420 145.21485901]
[89.01683044 139.38452148]
[77.24312592 148.67860413]
[65.46941376 157.97267151]
[56.78340530 172.53253174]
[40.38802338 168.21655273]
[39.99664688 151.26712036]
[56.17534256 146.19897461]
[67.94905090 136.90489197]
[79.72275543 127.61082458]
[73.18100739 114.11246490]
[58.59091568 117.59516144]
[44.00082016 121.07785034]
[29.41072464 124.56053925]
[14.82063007 128.04322815]
[6.75994730 141.63737488]
[-8.57280350 145.46913147]
[-22.08097076 137.26516724]
[-25.75040054 121.89276886]
[-17.40408516 108.47209167]
[-1.99374390 104.96539307]
[11.33794022 113.45313263]
[25.92803383 109.97044373]
[40.51813126 106.48775482]
[55.10822296 103.00506592]
[69.69831848 99.52236938]
[70.15365601 92.03620911]
[71.06433105 77.06388092]
[71.51966858 69.57771301]
[57.45922852 64.35238647]
[48.29738617 64.29330444]
[43.20141983 58.91242599]
[29.23378944 53.44385147]
[14.01771545 58.52820206]
[0.63445979 49.68128204]
[-0.64948779 33.68968964]
[11.15080738 22.82080650]
[26.98316765 25.41231155]
[34.70236206 39.47622299]
[48.66999435 44.94479370]
[62.68455505 50.29194641]
[76.74499512 55.51727295]
[90.71262360 50.04870224]
[97.48766327 36.66591644]
[104.26270294 23.28313637]
[111.03774261 9.90035343]
[117.81278229 -3.48242831]
[124.58781433 -16.86521149]
[131.24645996 -30.30628395]
[137.78820801 -43.80463791]
[144.32995605 -57.30299377]
[150.87170410 -70.80134583]
[157.41343689 -84.29969788]
[156.46920776 -100.09270477]
[168.98249817 -108.17148590]
[175.52424622 -121.66984558]
[182.06599426 -135.16819763]
[181.12174988 -150.96119690]
[193.63504028 -159.03999329]
[200.17678833 -172.53834534]
[206.71853638 -186.03669739]
[201.76997375 -200.80657959]
[208.59652710 -214.40263367]
[222.70783997 -219.02931213]
[229.24958801 -232.52766418]
[235.79133606 -246.02603149]
[229.55059814 -252.53979492]
[225.89523315 -261.28210449]
[225.61033630 -271.20904541]
[229.05564880 -281.00759888]
[236.07740784 -289.26928711]
[245.99061584 -294.69046021]
[250.60110474 -308.96435547]
[255.21159363 -323.23822021]
[244.85530090 -334.58029175]
[241.57319641 -349.58441162]
[246.24816895 -364.21450806]
[257.62265015 -374.53521729]
[272.63696289 -377.77026367]
[287.25238037 -373.04946899]
[297.53735352 -361.64270020]
[300.72534180 -346.61828613]
[295.95874023 -332.01776123]
[284.51977539 -321.76858521]
[269.48547363 -318.62771606]
[264.87496948 -304.35385132]
[260.26449585 -290.07998657]
[273.00967407 -282.17047119]
[283.75344849 -292.63812256]
[294.49722290 -303.10574341]
[294.45233154 -318.90997314]
[305.65493774 -330.05795288]
[321.45874023 -329.93576050]
[332.48764038 -318.61590576]
[332.19836426 -302.81427002]
[320.76257324 -291.90567017]
[304.96487427 -292.36196899]
[294.22109985 -281.89434814]
[283.47732544 -271.42669678]
[273.53732300 -244.81759644]
[249.28968811 -239.48428345]
[242.74794006 -225.98593140]
[236.20619202 -212.48756409]
[241.31809998 -198.54467773]
[234.87612915 -184.76223755]
[220.21688843 -179.49494934]
[213.67514038 -165.99659729]
[207.13339233 -152.49824524]
[208.54554749 -137.67073059]
[195.56434631 -128.62644958]
[189.02259827 -115.12809753]
[182.48085022 -101.62974548]
[183.89300537 -86.80223083]
[170.91180420 -77.75795746]
[164.37005615 -64.25959778]
[157.82830811 -50.76124573]
[151.28656006 -37.26289368]
[144.74481201 -23.76453972]
[144.65689087 -16.35407257]
[137.97059631 -10.09017277]
[131.19555664 3.29260969]
[124.42052460 16.67539215]
[117.64548492 30.05817413]
[110.87044525 43.44095612]
[104.09540558 56.82373810]
[116.65592194 59.50384140]
[127.99630737 65.79019928]
[137.09587097 75.19891357]
[143.11203003 86.96180725]
[145.45794678 100.08888245]
[143.85919189 113.45157623]
[138.38359070 125.87977600]
[129.44155884 136.26423645]
[117.75610352 143.65556335]
[119.31539917 158.57429504]
[120.87469482 173.49302673]
[132.86753845 183.43331909]
[134.23637390 198.58525085]
[124.68591309 209.95733643]
[133.81587219 222.87843323]
[127.44352722 236.34106445]
[129.00282288 251.25979614]
[130.56211853 266.17852783]
[132.12141418 281.09725952]
[133.68070984 296.01599121]
[135.24000549 310.93472290]
[144.36994934 323.85580444]
[137.99761963 337.31845093]
[139.55691528 352.23718262]
[141.11621094 367.15591431]
[155.76998901 371.10949707]
[168.00373840 380.09283447]
[176.16290283 392.89096069]
[179.14404297 407.77307129]
[176.54399109 422.72647095]
[168.71437073 435.72885132]
[156.71406555 445.02169800]
[142.16604614 449.34829712]
[127.03778076 448.12344360]
[113.37526703 441.51284790]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 170]
[6 169]
[7 168]
[9 166]
[10 165]
[11 164]
[12 163]
[13 162]
[14 161]
[16 159]
[19 156]
[20 155]
[21 154]
[22 30]
[23 29]
[24 28]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[49 62]
[50 61]
[52 60]
[53 59]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[75 132]
[76 131]
[77 130]
[79 128]
[80 127]
[81 126]
[84 123]
[85 122]
[86 121]
[92 107]
[93 106]
[94 105]
[108 119]
[109 118]
[110 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
