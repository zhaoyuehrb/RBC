%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGAGUCAUCACUAGAGAGUGGGAAGGGCAGCAGCAGCAGAGAAUCCAAACCCUAAAGCUGAUAUCACAAAGUACCAUUUCUCCAAGUUGGGGGCUCAGAGGGGAGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[139.72470093 294.00076294]
[151.38798523 284.25210571]
[146.87187195 269.94808960]
[142.35577393 255.64408875]
[137.83966064 241.34007263]
[133.32354736 227.03605652]
[128.80743408 212.73205566]
[124.29132843 198.42803955]
[113.08117676 188.62080383]
[116.30460358 173.13145447]
[111.78849030 158.82743835]
[107.27237701 144.52342224]
[102.55787659 130.28356934]
[97.64588165 116.11062622]
[84.69161224 105.54503632]
[87.87443542 89.13423157]
[82.57036591 75.10330963]
[77.26628876 61.07238388]
[71.96221924 47.04146194]
[66.65814209 33.01054001]
[61.15954971 19.05469894]
[55.46749115 5.17664194]
[49.77543640 -8.70141602]
[34.51995850 -6.11718893]
[19.07752037 -6.96826744]
[4.21176004 -11.20949459]
[-9.34287357 -18.62814331]
[-20.91741753 -28.85458755]
[-29.94140244 -41.38071060]
[-35.97097397 -55.58515549]
[-38.71072006 -70.76414490]
[-38.02814484 -86.16635895]
[-33.96007156 -101.03011322]
[-26.71067238 -114.62102509]
[-16.64121819 -126.26831055]
[-4.25208235 -135.39787292]
[-10.32772350 -149.11233521]
[-16.40336418 -162.82681274]
[-22.47900581 -176.54127502]
[-37.48826599 -174.74862671]
[-52.35879517 -177.46133423]
[-65.76831818 -184.43815613]
[-76.52447510 -195.05873108]
[-83.67082977 -208.37867737]
[-86.57192993 -223.21359253]
[-84.96981812 -238.24438477]
[-79.00695038 -252.13452148]
[-69.21353912 -263.64886475]
[-56.46041107 -271.76364136]
[-41.88156509 -275.75720215]
[-26.77334404 -275.27450562]
[-12.47915554 -270.35845947]
[-0.27003264 -261.44616699]
[8.76839828 -249.33013916]
[13.83244705 -235.08770752]
[14.47182083 -219.98530579]
[10.62966728 -205.36582947]
[2.64762807 -192.52922058]
[-8.76453972 -182.61691284]
[-2.68889832 -168.90245056]
[3.38674259 -155.18798828]
[9.46238327 -141.47351074]
[23.72509766 -144.43788147]
[38.29844284 -144.35057068]
[52.53651810 -141.21289062]
[65.80773926 -135.16142273]
[77.52286530 -126.46205139]
[87.16116333 -115.49826813]
[94.29354858 -102.75431061]
[98.60167694 -88.79374695]
[99.89217377 -74.23455048]
[98.10531616 -59.72176743]
[93.31774902 -45.89891434]
[85.73925781 -33.37945557]
[75.70352936 -22.71957588]
[63.65349197 -14.39347267]
[69.34555054 -0.51541489]
[75.03760529 13.36264324]
[80.56506348 18.42816162]
[80.68907166 27.70646477]
[85.99314117 41.73738861]
[91.29721832 55.76831055]
[96.60128784 69.79923248]
[101.90536499 83.83016205]
[112.28158569 89.31090546]
[116.27807617 100.34415436]
[111.81882477 111.19863892]
[116.73081970 125.37158203]
[122.57757568 132.57698059]
[121.57639313 140.00730896]
[126.09249878 154.31132507]
[130.60861206 168.61534119]
[142.14178467 179.44569397]
[138.59533691 193.91192627]
[143.11145020 208.21594238]
[147.62756348 222.51995850]
[152.14366150 236.82395935]
[156.65977478 251.12797546]
[161.17588806 265.43197632]
[165.69200134 279.73599243]
[180.83859253 281.02014160]
[194.33851624 288.00732422]
[204.13311768 299.63204956]
[208.72879028 314.12164307]
[207.42472839 329.26654053]
[200.41978455 342.75723267]
[188.78219604 352.53652954]
[174.28656006 357.11315918]
[159.14340210 355.78915405]
[145.66191101 348.76647949]
[135.89793396 337.11602783]
[131.34039307 322.61441040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 100]
[3 99]
[4 98]
[5 97]
[6 96]
[7 95]
[8 94]
[10 92]
[11 91]
[12 90]
[13 88]
[14 87]
[16 84]
[17 83]
[18 82]
[19 81]
[20 80]
[21 78]
[22 77]
[23 76]
[36 62]
[37 61]
[38 60]
[39 59]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
