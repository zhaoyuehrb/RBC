%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACGGACGGUGCAGGGGGUGGGCCACGUGUCCAGCCCUAACGAAACGGUAACCAGCCCUGGGAAGCCCGCAAGAGGCCUCAGCGGUGGCCGUCCGAGAGCCGAGAGGUGAGGGUGCCCCCGCCUCACCUGCAGAGGGGCCGUUCCGGGCUCGAACCCGGCACCUUCCGGAAA\
) } def
/len { sequence length } bind def

/coor [
[104.66530609 300.74188232]
[94.58846283 289.06024170]
[92.44948578 273.78189087]
[98.93090820 259.78207397]
[111.96453094 251.52810669]
[111.96453094 236.52810669]
[111.96453094 221.52810669]
[111.96453094 206.52810669]
[104.22723389 193.80082703]
[111.96453094 180.00065613]
[111.96453094 165.00065613]
[111.96453094 150.00065613]
[111.96453094 135.00065613]
[111.96453094 120.00065613]
[100.69684601 128.72326660]
[83.90697479 130.12864685]
[71.24205780 138.16604614]
[58.57713699 146.20344543]
[45.91222000 154.24084473]
[38.40620041 168.16816711]
[23.51435661 168.45495605]
[10.84943771 176.49237061]
[-1.81548154 184.52976990]
[-14.48040009 192.56716919]
[-27.14531898 200.60456848]
[-32.03416061 215.88458252]
[-47.07933044 221.45436096]
[-60.73945999 213.04125977]
[-62.53566742 197.09907532]
[-51.09005737 185.85729980]
[-35.18272018 187.93965149]
[-22.51780319 179.90225220]
[-9.85288334 171.86485291]
[2.81203532 163.82743835]
[15.47695446 155.79003906]
[22.07709312 142.43760681]
[37.87481689 141.57592773]
[50.53973389 133.53852844]
[63.20465469 125.50112152]
[75.86957550 117.46372223]
[75.13025665 110.00025177]
[60.20331192 111.47888184]
[45.27637100 112.95751190]
[30.34940147 114.43589783]
[28.87126541 99.50890350]
[43.79773712 98.03057098]
[58.72468185 96.55194092]
[73.65162659 95.07331085]
[72.91230774 87.60983276]
[58.91666031 82.21337128]
[44.92101288 76.81690979]
[29.73136139 81.97966766]
[16.30265617 73.20188904]
[14.93625069 57.21712875]
[26.68033218 46.28753281]
[42.52584839 48.79734802]
[50.31747437 62.82126236]
[64.31312561 68.21772003]
[78.30876923 73.61418915]
[109.53871918 72.89788818]
[122.81382751 95.23495483]
[133.84008789 85.06531525]
[144.86633301 74.89566803]
[155.89259338 64.72602081]
[160.95466614 43.92555618]
[181.22302246 40.12783051]
[191.68585205 29.37938881]
[202.14869690 18.63094521]
[212.61152649 7.88250208]
[223.07437134 -2.86594105]
[233.53720093 -13.61438370]
[229.03878784 -26.87847137]
[230.69351196 -40.71981430]
[238.12100220 -52.43779373]
[249.82017517 -59.77092743]
[263.47229004 -61.33323669]
[276.40042114 -56.87588501]
[287.05453491 -67.43477631]
[297.70861816 -77.99366760]
[308.36273193 -88.55256653]
[319.01681519 -99.11145782]
[329.67092896 -109.67034912]
[334.05487061 -129.32385254]
[352.91378784 -133.50454712]
[363.18197632 -144.43908691]
[373.45019531 -155.37361145]
[383.71841431 -166.30813599]
[391.29598999 -179.25340271]
[395.80300903 -193.56028748]
[400.31002808 -207.86717224]
[404.81704712 -222.17404175]
[409.19549561 -236.52079773]
[401.42471313 -250.28273010]
[405.74154663 -265.48605347]
[419.58486938 -273.11087036]
[434.74169922 -268.63354492]
[442.21972656 -254.71038818]
[437.58239746 -239.60174561]
[423.58096313 -232.27133179]
[424.70532227 -224.94116211]
[419.12393188 -217.66702271]
[414.61691284 -203.36015320]
[410.10989380 -189.05326843]
[405.60287476 -174.74638367]
[411.46661377 -170.07022095]
[429.05783081 -156.04170227]
[442.00308228 -163.61929321]
[454.94836426 -171.19689941]
[467.89361572 -178.77449036]
[480.83889771 -186.35209656]
[493.78417969 -193.92968750]
[499.63394165 -200.98979187]
[507.03051758 -201.52473450]
[520.10974121 -208.86872864]
[533.18896484 -216.21272278]
[544.03955078 -229.23965454]
[559.56109619 -222.41931152]
[557.30413818 -205.61627197]
[540.53295898 -203.13351440]
[527.45373535 -195.78952026]
[514.37451172 -188.44552612]
[501.36175537 -180.98442078]
[488.41650391 -173.40682983]
[475.47122192 -165.82922363]
[462.52597046 -158.25161743]
[449.58068848 -150.67402649]
[436.63543701 -143.09642029]
[417.49389648 -139.77540588]
[402.39196777 -145.37594604]
[394.65292358 -156.03993225]
[384.38473511 -145.10540771]
[374.11651611 -134.17086792]
[363.84829712 -123.23634338]
[365.08593750 -113.05213928]
[360.39929199 -103.67946625]
[351.12792969 -98.33967590]
[340.22979736 -99.01625061]
[329.57571411 -88.45735931]
[318.92160034 -77.89846802]
[308.26751709 -67.33957672]
[297.61343384 -56.78068161]
[286.95932007 -46.22179031]
[291.45336914 -30.71633530]
[287.50128174 -14.96726227]
[276.08779907 -3.28658843]
[260.25354004 1.07860708]
[244.28564453 -3.15154624]
[233.82281494 7.59689665]
[223.35997009 18.34533882]
[212.89714050 29.09378242]
[202.43429565 39.84222412]
[191.97146606 50.59066772]
[193.54188538 59.38857269]
[190.82812500 68.04817963]
[184.32281494 74.57169342]
[175.40791321 77.39299774]
[166.06224060 75.75227356]
[155.03598022 85.92192078]
[144.00973511 96.09156799]
[132.98347473 106.26121521]
[126.96453094 120.00065613]
[126.96453094 135.00065613]
[126.96453094 150.00065613]
[126.96453094 165.00065613]
[126.96453094 180.00065613]
[134.70182800 193.80082703]
[126.96453094 206.52810669]
[126.96453094 221.52810669]
[126.96453094 236.52810669]
[126.96453094 251.52810669]
[139.99816895 259.78207397]
[146.47958374 273.78189087]
[144.34060669 289.06024170]
[134.26376343 300.74188232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 170]
[6 169]
[7 168]
[8 167]
[10 165]
[11 164]
[12 163]
[13 162]
[14 161]
[16 40]
[17 39]
[18 38]
[19 37]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[49 59]
[50 58]
[51 57]
[61 160]
[62 159]
[63 158]
[64 157]
[66 152]
[67 151]
[68 150]
[69 149]
[70 148]
[71 147]
[77 142]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[84 133]
[85 132]
[86 131]
[87 130]
[88 104]
[89 103]
[90 102]
[91 101]
[92 99]
[106 127]
[107 126]
[108 125]
[109 124]
[110 123]
[111 122]
[113 121]
[114 120]
[115 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
