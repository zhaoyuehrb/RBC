%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUCACUCAGGAUGAGGAGCCUCCGCUAUCCCGCCCCCGUUGCCGGGAUACGCCGCGGCGCACGGCAGUUAGUGGGUAGGCCUGAGAGCCGAGGAAAACUGAGCGUGGGCCUCAGAAAGAAGUUAAGGCACCCGCGAGCCGGGCAACUGCCCUCCUUCCGCGCCGGCGGAGCGAUUAAAGUGAAGAAACA\
) } def
/len { sequence length } bind def

/coor [
[52.59149551 265.61099243]
[53.47921371 250.33123779]
[61.37603760 237.22023010]
[74.46733093 229.29075623]
[73.48628235 214.32286072]
[72.50524139 199.35498047]
[71.52419281 184.38710022]
[70.54314423 169.41921997]
[64.22811127 183.02510071]
[49.23013306 183.27165222]
[34.99221802 178.55130005]
[23.11202240 169.39373779]
[14.92265224 156.82655334]
[11.34305286 142.25993347]
[12.77489948 127.32842255]
[19.05752182 113.70753479]
[29.48593140 102.92568970]
[42.88993835 96.19273376]
[57.76400375 94.26413727]
[71.56922913 88.39765930]
[56.64146042 86.92739868]
[41.71369171 85.45714569]
[26.78591919 83.98688507]
[11.83609104 82.76107025]
[-3.13179255 81.78002167]
[-18.09967613 80.79897308]
[-33.06756210 79.81793213]
[-48.03544235 78.83688354]
[-63.00332642 77.85583496]
[-66.85756683 79.93362427]
[-70.77756500 80.59967041]
[-74.30857849 80.00823212]
[-77.09351349 78.44618988]
[-78.90794373 76.28936768]
[-93.77961731 74.33147430]
[-106.23952484 83.67965698]
[-121.29362488 81.48222351]
[-130.12890625 69.54599762]
[-145.00057983 67.58811188]
[-159.87225342 65.63021851]
[-174.74392700 63.67232132]
[-189.63111877 61.83616257]
[-204.53282166 60.12185669]
[-219.43453979 58.40755463]
[-234.33625793 56.69324875]
[-249.23797607 54.97894287]
[-264.15322876 53.38661194]
[-279.08099365 51.91635132]
[-292.34469604 60.94150925]
[-307.62744141 56.06115723]
[-313.20556641 41.01908493]
[-304.80004883 27.35428429]
[-288.85885620 25.54921913]
[-277.61074829 36.98858261]
[-262.68295288 38.45883942]
[-255.70692444 35.98169327]
[-247.52368164 40.07722855]
[-232.62196350 41.79153061]
[-217.72024536 43.50583649]
[-202.81852722 45.22014236]
[-187.91680908 46.93444443]
[-180.90118408 44.57176971]
[-172.78602600 48.80064774]
[-157.91435242 50.75854111]
[-143.04267883 52.71643448]
[-128.17100525 54.67432785]
[-116.54746246 45.43156052]
[-101.43757629 47.20528793]
[-91.82172394 59.45980072]
[-76.95005035 61.41769409]
[-62.02228165 62.88795090]
[-47.05439758 63.86899948]
[-32.08651352 64.85004425]
[-17.11862946 65.83109283]
[-2.15074563 66.81214142]
[12.81713772 67.79319000]
[16.94532394 65.36273193]
[22.64670563 65.51089478]
[28.25617599 69.05911255]
[43.18394852 70.52937317]
[58.11171722 71.99962616]
[73.03948975 73.46988678]
[84.71211243 64.04917145]
[86.42641449 49.14744949]
[88.14071655 34.24573517]
[89.85502625 19.34401703]
[91.56932831 4.44230127]
[89.43900299 -4.45718288]
[93.43553162 -10.68848038]
[95.39342499 -25.56015396]
[97.35131836 -40.43182755]
[91.48149109 -55.12385559]
[100.81384277 -66.73232269]
[94.94402313 -81.42435455]
[104.27636719 -93.03282166]
[92.43160248 -102.91741180]
[87.83297729 -117.64344788]
[91.94788361 -132.51190186]
[103.46327972 -142.77832031]
[118.70464325 -145.16670227]
[132.80850220 -138.91494751]
[141.27438354 -126.01795197]
[141.40084839 -110.59110260]
[133.14752197 -97.55706024]
[119.14804077 -91.07492828]
[125.15790558 -77.44662476]
[115.68551636 -64.77442932]
[121.69538116 -51.14612198]
[112.22299194 -38.47393417]
[110.26509857 -23.60226059]
[108.30720520 -8.73058701]
[106.47104645 6.15660572]
[104.75673676 21.05832291]
[103.04243469 35.96003723]
[101.32813263 50.86175537]
[99.61382294 65.76347351]
[105.41140747 70.52142334]
[114.06011200 58.26581573]
[122.70881653 46.01021194]
[131.35752869 33.75460434]
[139.33290100 21.05053520]
[154.22247314 22.86731529]
[158.90911865 37.11636353]
[148.00508118 47.41689682]
[137.67224121 58.29037094]
[127.33940125 69.16384888]
[117.00656128 80.03732300]
[122.80413818 84.79527283]
[137.08508301 80.20672607]
[151.36601257 75.61817932]
[156.08120728 60.83485794]
[168.60519409 51.67356873]
[184.12226868 51.65701294]
[196.66577148 60.79156113]
[201.41250610 75.56478882]
[196.53721619 90.29608917]
[183.91458130 99.32098389]
[168.39823914 99.16920471]
[155.95455933 89.89912415]
[141.67362976 94.48766327]
[127.39268494 99.07621002]
[128.86294556 114.00398254]
[143.76466370 115.71828461]
[158.66638184 117.43259430]
[173.56808472 119.14689636]
[188.39080811 112.13127136]
[201.72212219 121.68156433]
[199.84791565 137.97326660]
[184.69621277 144.24685669]
[171.85379028 134.04861450]
[156.95207214 132.33430481]
[142.05035400 130.62001038]
[127.14863586 128.90570068]
[121.40838623 142.76388550]
[133.15768433 152.08880615]
[148.77716064 154.60729980]
[153.93627930 168.57986450]
[165.68557739 177.90476990]
[177.43489075 187.22969055]
[189.18418884 196.55459595]
[200.93348694 205.87950134]
[212.68278503 215.20440674]
[228.97500610 217.07412720]
[235.25277710 232.22409058]
[225.05807495 245.06933594]
[208.87832642 242.39575195]
[203.35787964 226.95370483]
[191.60858154 217.62879944]
[179.85928345 208.30389404]
[168.10997009 198.97898865]
[156.36067200 189.65408325]
[144.61137390 180.32916260]
[129.83229065 178.47764587]
[123.83277893 163.83810425]
[112.08348083 154.51319885]
[105.44036865 157.99443054]
[112.40264893 171.28076172]
[99.11621094 178.24284363]
[92.15413666 164.95692444]
[85.51102448 168.43817139]
[86.49207306 183.40605164]
[87.47312164 198.37393188]
[88.45417023 213.34181213]
[89.43521881 228.30970764]
[103.44951630 234.46258545]
[112.99011230 246.43069458]
[115.86463928 261.46383667]
[111.41255951 276.10754395]
[100.65692902 286.99673462]
[86.06930542 291.62921143]
[71.00181580 288.94042969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[20 82]
[21 81]
[22 80]
[23 79]
[24 76]
[25 75]
[26 74]
[27 73]
[28 72]
[29 71]
[34 70]
[35 69]
[38 66]
[39 65]
[40 64]
[41 63]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[47 55]
[48 54]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
[89 111]
[90 110]
[91 109]
[93 107]
[95 105]
[128 141]
[129 140]
[130 139]
[142 153]
[143 152]
[144 151]
[145 150]
[154 175]
[155 174]
[157 172]
[158 171]
[159 170]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
