%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGAAACGGUUGAACUGGAUGCAAUUUUUAUCACAGCUUGUGUAAGACUGCCUCUGUCCCUCCUCUCACAUGCCAUUGGUUAACCAGCAGACAGUGUGCUCAGGGGCGUUGCCAGCUCAUUGCUCUUAUAGCCUGUGAGGGAGGAAGAAAGAAACAUUUGCCAGCCAGGCUAGUGACAGAA\
) } def
/len { sequence length } bind def

/coor [
[154.25617981 109.50033569]
[158.86235046 123.77559662]
[156.03395081 138.50653076]
[146.46841431 150.06076050]
[132.52439880 155.58927917]
[117.64022064 153.72885132]
[105.48600769 144.93821716]
[99.05875397 131.38497925]
[99.94290161 116.41223907]
[93.04192352 129.73051453]
[86.14095306 143.04879761]
[79.23997498 156.36708069]
[77.32139587 173.21211243]
[60.60355377 176.03169250]
[53.26620865 160.74772644]
[65.92169952 149.46609497]
[72.82266998 136.14782715]
[79.72364807 122.82954407]
[86.62462616 109.51126099]
[81.89146423 103.69342804]
[67.08152008 106.07369995]
[72.42514038 92.05776215]
[67.69198608 86.23992157]
[53.24822617 90.28687286]
[38.80446625 94.33382416]
[31.80309677 105.18492889]
[19.67152786 108.24938965]
[9.06025887 102.41075897]
[-5.45048857 106.21052551]
[-19.96123695 110.01028442]
[-34.47198486 113.81005096]
[-48.98273087 117.60980988]
[-56.51325607 122.82287598]
[-63.77368546 121.34832001]
[-78.34719086 124.89978790]
[-92.92070007 128.45124817]
[-107.49420166 132.00271606]
[-121.45142365 141.62728882]
[-134.56359863 130.87986755]
[-127.86600494 115.30493164]
[-111.04566956 117.42921448]
[-96.47216797 113.87774658]
[-81.89865875 110.32627869]
[-67.32514954 106.77481079]
[-52.78249359 103.09906006]
[-38.27174759 99.29930115]
[-23.76099968 95.49953461]
[-9.25025177 91.69977570]
[5.26049662 87.90000916]
[17.04178619 74.90725708]
[34.75751495 79.89006805]
[49.20127487 75.84311676]
[63.64503479 71.79616547]
[92.11702728 71.21790314]
[105.02457428 87.28499603]
[116.82016754 78.01871490]
[128.61576843 68.75243378]
[140.41134644 59.48614883]
[152.20693970 50.21986389]
[164.00253296 40.95358276]
[199.44979858 21.22602272]
[205.19004822 7.36782980]
[210.93029785 -6.49036312]
[216.67054749 -20.34855652]
[222.41079712 -34.20674896]
[222.80722046 -43.35703278]
[228.36917114 -48.25119781]
[234.34518433 -62.00936890]
[240.32121277 -75.76753998]
[246.29722595 -89.52570343]
[252.27323914 -103.28387451]
[258.24926758 -117.04204559]
[256.65051270 -132.78227234]
[268.81781006 -141.37332153]
[274.79382324 -155.13148499]
[264.33419800 -171.29255676]
[265.69104004 -190.29672241]
[278.08035278 -204.50929260]
[273.78741455 -218.88185120]
[269.49444580 -233.25440979]
[265.20147705 -247.62696838]
[252.91522217 -258.48883057]
[256.44345093 -274.50393677]
[272.15664673 -279.19732666]
[283.89038086 -267.74084473]
[279.57403564 -251.91992188]
[283.86700439 -237.54736328]
[288.15997314 -223.17480469]
[292.45291138 -208.80224609]
[297.97494507 -208.47074890]
[303.33853149 -207.11622620]
[311.77822876 -219.51666260]
[320.21795654 -231.91711426]
[328.55151367 -244.38916016]
[336.77828979 -256.93188477]
[345.00506592 -269.47463989]
[353.23184204 -282.01736450]
[361.45861816 -294.56008911]
[362.55755615 -310.34307861]
[376.00765991 -316.74185181]
[384.23443604 -329.28460693]
[392.46121216 -341.82733154]
[392.55047607 -346.22277832]
[393.90982056 -349.97537231]
[396.17700195 -352.76220703]
[398.92178345 -354.41296387]
[401.70205688 -354.91864014]
[410.76562500 -366.87072754]
[419.82916260 -378.82278442]
[424.58200073 -395.09692383]
[441.53582764 -395.03497314]
[446.16955566 -378.72653198]
[431.78125000 -369.75924683]
[422.71768188 -357.80715942]
[413.65414429 -345.85510254]
[405.00393677 -333.60055542]
[396.77716064 -321.05783081]
[388.55038452 -308.51507568]
[388.03988647 -293.62924194]
[374.00134277 -286.33331299]
[365.77456665 -273.79058838]
[357.54779053 -261.24783325]
[349.32101440 -248.70510864]
[341.09423828 -236.16238403]
[340.05230713 -228.82736206]
[332.61840820 -223.47740173]
[324.17868042 -211.07695007]
[315.73895264 -198.67649841]
[322.43627930 -185.95092773]
[322.35836792 -171.47999573]
[315.43811035 -158.66744995]
[303.22787476 -150.56719971]
[288.55200195 -149.15547180]
[282.57598877 -135.39730835]
[284.60217285 -120.64115143]
[272.00741577 -111.06603241]
[266.03140259 -97.30786133]
[260.05538940 -83.54969025]
[254.07937622 -69.79151917]
[248.10336304 -56.03335190]
[242.12733459 -42.27518082]
[236.26899719 -28.46649742]
[230.52874756 -14.60830498]
[224.78849792 -0.75011170]
[219.04823303 13.10808086]
[213.30798340 26.96627426]
[224.98950195 17.55658913]
[233.49028015 5.19791698]
[245.93682861 -3.17366362]
[260.58853149 -6.38739443]
[275.39633179 -3.99383903]
[288.28936768 3.67226648]
[297.46459961 15.53882504]
[301.63885498 29.94630814]
[300.22836304 44.87984467]
[293.43041992 58.25099564]
[282.19564819 68.18981934]
[268.09524536 73.30637360]
[253.10118103 72.88511658]
[239.31030273 66.98496246]
[228.65075684 56.43029404]
[215.41777039 49.36714172]
[223.64456177 61.90987396]
[231.87133789 74.45260620]
[247.22306824 79.11132050]
[253.01826477 94.07110596]
[244.81134033 107.85609436]
[228.89794922 109.89162445]
[217.48547363 98.61621094]
[219.32859802 82.67938232]
[211.10182190 70.13665009]
[202.87504578 57.59391785]
[195.47349548 56.38273239]
[193.05088806 71.18580627]
[178.24784851 68.76297760]
[180.67037964 53.96036148]
[173.26881409 52.74917221]
[161.47323608 62.01545715]
[149.67764282 71.28173828]
[137.88204956 80.54801941]
[126.08644867 89.81430817]
[114.29086304 99.08058929]
[128.83644104 95.41642761]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 19]
[10 18]
[11 17]
[12 16]
[23 53]
[24 52]
[25 51]
[28 49]
[29 48]
[30 47]
[31 46]
[32 45]
[34 44]
[35 43]
[36 42]
[37 41]
[55 182]
[56 181]
[57 180]
[58 179]
[59 178]
[60 177]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[67 141]
[68 140]
[69 139]
[70 138]
[71 137]
[72 136]
[74 134]
[75 133]
[78 89]
[79 88]
[80 87]
[81 86]
[91 128]
[92 127]
[93 126]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
[100 118]
[101 117]
[102 116]
[107 115]
[108 114]
[109 113]
[162 172]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
