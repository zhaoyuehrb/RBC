%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGACCGAAAACGCGGCCGAGCCCGGAGCCCGGAGCUGGAGCCAGAGCCUGGACCAGAACUUGGCCGCCGCCUGCACCGCCGCCGCCGCUGCCGCCCGCCGCCCCUUCCCCGCGCCGCAGCCGCCUCGCCGCCACCGCCGCGAGCUCGGCCGCCAGUGGUCCUCGGACUUUAGGUGUCUGGGUUGAAGGAGGUUUGUCUCCGAGGAAGACCCAGGGAACUGGAUAUCUAGCGAGAACUUCCUCCGGAUUCCCC\
GGCGCCUCGGGAAA\
) } def
/len { sequence length } bind def

/coor [
[392.92977905 275.49417114]
[388.11038208 265.21603394]
[387.45455933 253.83177185]
[373.61312866 248.05123901]
[359.77169800 242.27069092]
[345.89685059 236.57078552]
[331.98910522 230.95169067]
[318.08135986 225.33258057]
[304.17358398 219.71348572]
[294.97967529 227.57978821]
[283.24789429 230.82327271]
[271.17687988 228.77268982]
[261.05587769 221.75495911]
[254.83050537 211.04476929]
[253.72892761 198.63348389]
[239.95568848 192.69229126]
[226.18244934 186.75109863]
[212.40921021 180.80990601]
[198.63595581 174.86869812]
[184.86271667 168.92750549]
[171.08947754 162.98631287]
[157.31623840 157.04512024]
[143.54299927 151.10391235]
[129.76976013 145.16271973]
[115.17407990 148.62196350]
[105.53226471 160.11262512]
[95.89045715 171.60328674]
[86.24864197 183.09396362]
[80.69920349 199.11395264]
[63.76904678 198.21617126]
[59.94501114 181.69911194]
[74.75797272 173.45214844]
[84.39978790 161.96147156]
[94.04160309 150.47080994]
[103.68341827 138.98014832]
[99.10041809 133.04330444]
[89.93441772 121.16960907]
[85.35141754 115.23276520]
[71.79390717 121.65102386]
[58.23640442 128.06927490]
[44.67889786 134.48753357]
[39.62460709 146.32888794]
[28.22908592 151.40403748]
[16.80426979 147.49746704]
[3.17300200 153.75753784]
[-10.45826530 160.01760864]
[-24.08953285 166.27769470]
[-35.95999146 178.38258362]
[-50.87789536 170.32699585]
[-47.26680756 153.76208496]
[-30.34960938 152.64642334]
[-16.71834183 146.38635254]
[-3.08707500 140.12626648]
[10.54419231 133.86619568]
[19.92936134 119.01982880]
[38.26063919 120.93003082]
[51.81814575 114.51177216]
[65.37565613 108.09352112]
[78.93315887 101.67526245]
[77.97584534 94.23661041]
[63.09854126 96.15123749]
[49.25709534 90.37071991]
[61.18391800 81.27392578]
[76.06122589 79.35930634]
[75.10391235 71.92065430]
[60.36310196 69.14422607]
[45.62229156 66.36780548]
[30.62844276 71.41706848]
[19.55322456 61.45771027]
[4.81241465 58.68128586]
[-10.18143463 63.73054886]
[-21.25665283 53.77119064]
[-34.16436386 62.89075851]
[-49.72562790 60.12983322]
[-58.70821381 47.12642288]
[-55.78292084 31.59522247]
[-42.68526840 22.75061417]
[-27.18586540 25.83995056]
[-18.48022842 39.03038025]
[-4.54074097 33.78252792]
[7.58883858 43.94047546]
[22.32964897 46.71689987]
[36.26913452 41.46904755]
[48.39871597 51.62699509]
[63.13952637 54.40341949]
[77.88033295 57.17984390]
[85.68058014 44.36749649]
[76.44565582 32.54733276]
[61.85234451 26.43620682]
[60.11372757 11.64342308]
[50.87880707 -0.17673846]
[41.64388657 -11.99689960]
[32.40896225 -23.81706047]
[23.17403984 -35.63722229]
[8.58073044 -41.74834824]
[6.84211493 -56.54113388]
[-2.39280701 -68.36129761]
[-16.98611832 -74.47241974]
[-18.72473335 -89.26520538]
[-27.95965385 -101.08536530]
[-42.86217880 -97.78725433]
[-57.71791840 -101.29008484]
[-69.57725525 -110.89835358]
[-76.08550262 -124.70434570]
[-75.95045471 -139.96687317]
[-69.19892120 -153.65553284]
[-57.17141724 -163.05244446]
[-42.25602341 -166.29183960]
[-27.41419411 -162.73054504]
[-15.59278679 -153.07563782]
[-9.13895321 -139.24412537]
[-9.33410454 -123.98226166]
[-16.13949394 -110.32028961]
[-6.90457106 -98.50012970]
[7.02819538 -93.23445892]
[9.42735386 -77.59621429]
[18.66227722 -65.77605438]
[32.59504318 -60.51038742]
[34.99420166 -44.87214279]
[44.22912216 -33.05198288]
[53.46404648 -21.23182106]
[62.69896698 -9.41166019]
[71.93389130 2.40850067]
[85.86665344 7.67417002]
[88.26581573 23.31241226]
[97.50074005 35.13257217]
[111.76721954 30.49710464]
[126.03243256 25.86206436]
[126.55592346 10.87120152]
[127.07942200 -4.11966133]
[127.60291290 -19.11052322]
[120.35194397 -33.17231750]
[128.52870178 -45.62180710]
[129.05220032 -60.61267090]
[120.87970734 -74.83035278]
[129.33927917 -88.87910461]
[145.72843933 -88.30678558]
[153.18742371 -73.70214081]
[144.04306030 -60.08917999]
[143.51956177 -45.09831619]
[150.80798340 -32.10876846]
[142.59378052 -18.58703041]
[142.07028198 -3.59616876]
[141.54678345 11.39469337]
[141.02330017 26.38555527]
[135.71095276 131.38948059]
[149.48419189 137.33067322]
[163.25743103 143.27186584]
[177.03067017 149.21307373]
[190.80392456 155.15426636]
[204.57716370 161.09545898]
[218.35040283 167.03665161]
[232.12364197 172.97785950]
[245.89688110 178.91905212]
[259.67013550 184.86024475]
[275.01712036 175.15007019]
[292.96090698 176.61106873]
[306.29916382 188.46647644]
[309.79269409 205.80572510]
[323.70043945 211.42481995]
[337.60821533 217.04393005]
[351.51596069 222.66302490]
[360.60882568 222.97125244]
[365.55224609 228.42926025]
[379.39367676 234.20979309]
[393.23510742 239.99034119]
[409.19268799 229.35456848]
[428.18328857 230.51936340]
[442.49261475 242.82884216]
[446.41854858 261.13714600]
[460.45330811 266.43109131]
[474.48803711 271.72506714]
[490.13088989 269.35617065]
[499.30844116 281.08740234]
[513.34320068 286.38137817]
[527.37792969 291.67532349]
[541.41265869 296.96926880]
[555.44738770 302.26324463]
[569.48217773 307.55718994]
[583.51690674 312.85116577]
[599.15972900 310.48226929]
[608.33728027 322.21350098]
[622.37200928 327.50744629]
[636.40673828 332.80142212]
[647.48400879 322.35839844]
[661.93792725 317.77911377]
[676.88562012 319.92077637]
[689.36987305 328.30560303]
[696.94427490 341.22601318]
[698.15283203 356.09225464]
[712.18756104 361.38623047]
[726.22229004 366.68017578]
[740.25701904 371.97415161]
[754.29180908 377.26809692]
[766.18713379 367.65307617]
[781.19885254 365.29864502]
[795.28002930 370.73815918]
[804.68487549 382.41738892]
[806.96569824 397.13690186]
[821.00042725 402.43084717]
[835.03515625 407.72482300]
[849.06988525 413.01876831]
[863.13519287 418.23098755]
[875.10992432 413.50140381]
[886.73028564 418.03823853]
[891.98333740 428.90994263]
[906.01806641 434.20388794]
[920.05279541 439.49783325]
[930.95532227 431.09716797]
[944.47644043 429.18658447]
[957.07855225 434.15823364]
[965.51751709 444.61752319]
[967.67761230 457.77243042]
[981.64984131 463.22930908]
[995.62200928 468.68621826]
[1009.59417725 474.14309692]
[1025.71569824 471.13842773]
[1036.17163086 483.77200317]
[1030.20568848 499.04745483]
[1013.95526123 501.25076294]
[1004.13732910 488.11529541]
[990.16510010 482.65841675]
[976.19293213 477.20150757]
[962.22070312 471.74459839]
[948.67468262 481.04598999]
[932.08801270 480.42123413]
[919.02056885 469.91876221]
[914.75885010 453.53259277]
[900.72412109 448.23861694]
[886.68933105 442.94467163]
[869.53289795 446.70657349]
[858.00488281 432.32638550]
[850.67089844 432.98937988]
[843.77593994 427.05349731]
[829.74121094 421.75955200]
[815.70648193 416.46560669]
[801.67169189 411.17163086]
[790.23779297 420.71786499]
[775.46246338 423.27624512]
[761.29675293 418.06094360]
[751.57965088 406.37869263]
[748.99780273 391.30282593]
[734.96307373 386.00888062]
[720.92834473 380.71493530]
[706.89361572 375.42095947]
[692.85888672 370.12701416]
[682.13317871 380.49160767]
[667.91253662 385.19085693]
[653.00073242 383.24179077]
[640.36236572 374.97787476]
[632.53350830 361.99343872]
[631.11279297 346.83615112]
[617.07806396 341.54220581]
[603.04333496 336.24826050]
[588.40435791 338.99578857]
[578.22296143 326.88589478]
[564.18817139 321.59194946]
[550.15344238 316.29797363]
[536.11871338 311.00402832]
[522.08398438 305.71005249]
[508.04922485 300.41610718]
[494.01446533 295.12216187]
[479.37548828 297.86972046]
[469.19409180 285.75979614]
[455.15933228 280.46585083]
[441.12460327 275.17187500]
[433.17599487 282.91406250]
[422.87145996 287.16577148]
[411.67367554 287.28231812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 166]
[4 165]
[5 164]
[6 162]
[7 161]
[8 160]
[9 159]
[15 155]
[16 154]
[17 153]
[18 152]
[19 151]
[20 150]
[21 149]
[22 148]
[23 147]
[24 146]
[25 35]
[26 34]
[27 33]
[28 32]
[38 59]
[39 58]
[40 57]
[41 56]
[44 54]
[45 53]
[46 52]
[47 51]
[65 86]
[66 85]
[67 84]
[69 82]
[70 81]
[72 79]
[87 126]
[88 125]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[96 117]
[97 116]
[99 114]
[100 113]
[128 145]
[129 144]
[130 143]
[131 142]
[133 140]
[134 139]
[170 266]
[171 265]
[172 264]
[174 262]
[175 261]
[176 260]
[177 259]
[178 258]
[179 257]
[180 256]
[182 254]
[183 253]
[184 252]
[190 246]
[191 245]
[192 244]
[193 243]
[194 242]
[199 237]
[200 236]
[201 235]
[202 234]
[203 232]
[206 230]
[207 229]
[208 228]
[213 224]
[214 223]
[215 222]
[216 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
