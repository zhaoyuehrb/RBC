%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGUCCCCUCCCGCCCGCGACCUGCCGACCUGCGGGGAUCGUUAGCGGUCCCAGCCCCCGUCUAGAUUCAAAUCCGACUGGGUGAAGGAGGACCCGAGGAGGACCCACGCACGGCCCAUCUGAUUAAACAGACCAGGCCACUCACUGUGGAGUGGACCAAGGAUACUCCUGUCCCUGAGCCC\
) } def
/len { sequence length } bind def

/coor [
[47.65317535 122.82300568]
[55.26539612 109.89806366]
[68.15625000 102.22826385]
[83.14591980 101.70454407]
[68.77336121 97.41158295]
[54.40079880 93.11862183]
[40.02824020 88.82566833]
[25.61955452 84.65555573]
[11.17579556 80.60860443]
[-3.26796389 76.56165314]
[-17.71172333 72.51470184]
[-32.58890915 74.43026733]
[-45.53639221 82.00407410]
[-58.48387909 89.57788849]
[-71.43136597 97.15169525]
[-75.54021454 112.17684937]
[-88.77869415 119.67332458]
[-103.07756042 115.66357422]
[-116.02504730 123.23738098]
[-128.97253418 130.81118774]
[-141.92001343 138.38500977]
[-154.73631287 146.17875671]
[-167.41766357 154.19020081]
[-180.09902954 162.20162964]
[-192.78039551 170.21307373]
[-205.46174622 178.22450256]
[-208.69601440 193.69432068]
[-221.96736145 202.27612305]
[-237.40209961 198.87846375]
[-245.84310913 185.51715088]
[-242.28247070 170.11917114]
[-228.83264160 161.81991577]
[-213.47319031 165.54315186]
[-200.79182434 157.53170776]
[-188.11045837 149.52027893]
[-175.42910767 141.50883484]
[-162.74774170 133.49740601]
[-160.83802795 129.09628296]
[-156.13049316 125.85921478]
[-149.49383545 125.43751526]
[-136.54634094 117.86370850]
[-123.59885406 110.28990173]
[-110.65136719 102.71608734]
[-107.13849640 88.28711700]
[-94.11579132 80.42175293]
[-79.00517273 84.20420837]
[-66.05769348 76.63040161]
[-53.11020279 69.05659485]
[-40.16271591 61.48278046]
[-37.99343109 46.64046860]
[-48.23172760 35.67792892]
[-58.47002792 24.71539116]
[-75.94993591 24.44528008]
[-87.60569000 11.87236595]
[-86.59386444 -4.90420389]
[-97.01782990 -15.69034672]
[-107.44180298 -26.47649002]
[-117.86576843 -37.26263046]
[-130.74041748 -38.26716995]
[-139.20123291 -47.48565292]
[-139.10583496 -59.59678268]
[-149.34413147 -70.55931854]
[-159.58242798 -81.52185822]
[-172.43804932 -82.74606323]
[-180.74024963 -92.10765076]
[-180.43809509 -104.21538544]
[-190.48773193 -115.35112762]
[-200.53736877 -126.48686981]
[-216.29777527 -131.01918030]
[-219.98973083 -146.99734497]
[-207.81529236 -157.98437500]
[-192.29846191 -152.67778015]
[-189.40162659 -136.53651428]
[-179.35198975 -125.40077209]
[-169.30235291 -114.26502991]
[-152.34611511 -109.78211212]
[-148.61988831 -91.76015472]
[-138.38159180 -80.79761505]
[-128.14329529 -69.83507538]
[-111.11299133 -65.64230347]
[-107.07962799 -47.68659973]
[-96.65565491 -36.90045929]
[-86.23168945 -26.11431503]
[-75.80771637 -15.32817268]
[-63.00614929 -16.91133308]
[-51.46136093 -10.73344135]
[-45.50172806 1.14380300]
[-47.50748825 14.47709370]
[-37.26919174 25.43963242]
[-27.03089333 36.40217209]
[-20.61743355 22.84239578]
[-6.88038158 16.81799698]
[7.43891716 21.28539848]
[15.31338215 34.05226135]
[12.87868309 48.85335159]
[1.32962954 58.42515182]
[-13.66477108 58.07094193]
[0.77898777 62.11789322]
[15.22274685 66.16484833]
[29.66650581 70.21179962]
[36.97304535 68.98597717]
[44.32120132 74.45310211]
[58.69375992 78.74606323]
[73.06632233 83.03902435]
[87.43888092 87.33198547]
[113.05399323 76.50766754]
[127.27160645 71.72651672]
[141.48922729 66.94536591]
[155.70683289 62.16421127]
[169.92445374 57.38305664]
[174.84646606 38.91308212]
[189.77047729 27.21094513]
[208.58204651 26.84227753]
[223.71043396 37.77536011]
[237.66461182 32.27254868]
[251.61878967 26.76973534]
[265.57296753 21.26692200]
[272.23681641 5.10482740]
[288.20910645 -1.12584174]
[303.44479370 5.96999645]
[317.30297852 0.22974494]
[331.16116333 -5.51050663]
[345.01937866 -11.25075817]
[350.83508301 -25.94609451]
[365.37158203 -32.14817047]
[380.00460815 -26.17740059]
[386.05264282 -11.57614231]
[379.92752075 2.99294043]
[365.26312256 8.88626862]
[350.75961304 2.60743499]
[336.90142822 8.34768677]
[323.04324341 14.08793831]
[309.18502808 19.82818985]
[305.96151733 32.31800461]
[295.97909546 40.79148483]
[282.74362183 41.97838593]
[271.07577515 35.22109985]
[257.12161255 40.72391129]
[243.16741943 46.22672653]
[229.21325684 51.72953796]
[228.50878906 62.90315628]
[223.65324402 73.04826355]
[215.31707764 80.67494965]
[204.68492126 84.64729309]
[193.28735352 84.35240173]
[182.78054810 79.79465485]
[174.70561218 71.60066986]
[160.48799133 76.38182831]
[146.27037048 81.16297913]
[132.05276489 85.94412994]
[117.83514404 90.72528839]
[113.54218292 105.09784698]
[122.80846405 116.89344025]
[130.59011841 121.72363281]
[132.13020325 128.97044373]
[141.19374084 140.92251587]
[150.25729370 152.87460327]
[159.32083130 164.82667542]
[165.29093933 167.75601196]
[168.40136719 172.54817200]
[168.48147583 177.34509277]
[177.13168335 189.59963989]
[185.78189087 201.85418701]
[194.43208313 214.10873413]
[208.50588989 223.56202698]
[203.31803894 239.70274353]
[186.37197876 239.18583679]
[182.17753601 222.75894165]
[173.52734375 210.50439453]
[164.87713623 198.24984741]
[156.22692871 185.99530029]
[147.36875916 173.89021301]
[138.30522156 161.93814087]
[129.24166870 149.98606873]
[120.17812347 138.03398132]
[111.01287842 126.15972137]
[101.74658966 114.36412811]
[106.75852966 128.50204468]
[104.35193634 143.30772400]
[95.12023926 155.13040161]
[81.33978271 161.05485535]
[66.40854645 159.62020874]
[54.00827026 151.18023682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 105]
[5 104]
[6 103]
[7 102]
[8 100]
[9 99]
[10 98]
[11 97]
[12 49]
[13 48]
[14 47]
[15 46]
[18 43]
[19 42]
[20 41]
[21 40]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[50 90]
[51 89]
[52 88]
[55 84]
[56 83]
[57 82]
[58 81]
[61 79]
[62 78]
[63 77]
[66 75]
[67 74]
[68 73]
[106 151]
[107 150]
[108 149]
[109 148]
[110 147]
[114 140]
[115 139]
[116 138]
[117 137]
[120 133]
[121 132]
[122 131]
[123 130]
[152 177]
[153 176]
[155 175]
[156 174]
[157 173]
[158 172]
[161 171]
[162 170]
[163 169]
[164 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
