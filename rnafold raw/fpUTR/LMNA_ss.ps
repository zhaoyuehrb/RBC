%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGACCUAUUAGAGCCUUUGCCCCGGCGUCGGUGACUCAGUGUUCGCGGGAGCGCCGCACCUACACCAGCCAACCCAGAUCCCGAGGUCCGACAGCGCCCGGCCCAGAUCCCCACGCCUGCCAGGAGCAAGCCGAGAGCCAGCCGGCCGGCGCACUCCGACUCCGAGCAGUCUCUGUCCUUCGACCCGAGCCCCGCGCCCUUUCCGGGACCCCUGCCCCGCGGGCAGCGCUGCCAACCUGCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[378.83648682 459.76272583]
[386.46835327 437.02130127]
[375.79528809 426.48156738]
[365.12225342 415.94180298]
[354.44921875 405.40206909]
[343.77618408 394.86230469]
[333.10314941 384.32257080]
[322.43011475 373.78280640]
[320.05722046 388.59393311]
[307.06195068 396.08547974]
[293.05566406 390.71670532]
[288.39736938 376.45837402]
[296.53237915 363.85592651]
[311.44406128 362.23016357]
[301.45388794 351.04104614]
[291.46368408 339.85192871]
[281.47351074 328.66281128]
[271.29211426 329.00851440]
[262.40719604 323.59060669]
[257.86474609 313.98474121]
[259.37533569 303.24542236]
[249.66949463 291.80880737]
[239.96366882 280.37216187]
[230.25782776 268.93551636]
[218.24658203 267.64251709]
[210.06608582 258.21609497]
[210.50355530 245.34194946]
[200.94218445 233.78425598]
[191.38082886 222.22656250]
[177.30647278 217.35195923]
[174.47160339 201.78680420]
[164.91024780 190.22911072]
[155.34887695 178.67141724]
[145.78752136 167.11370850]
[136.22616577 155.55601501]
[122.15180206 150.68142700]
[119.31693268 135.11627197]
[108.27265167 140.72050476]
[95.61680603 142.80220032]
[82.48551941 140.90808105]
[70.13737488 134.95401001]
[59.83315277 125.25586700]
[52.70865631 112.52125549]
[37.90836716 114.96081543]
[23.10807610 117.40037537]
[8.30778790 119.83992767]
[-2.16061521 135.65357971]
[-20.55212975 138.71475220]
[-35.07096863 127.53501892]
[-49.80527878 130.34573364]
[-64.53958893 133.15646362]
[-79.27389526 135.96717834]
[-89.44437408 148.37446594]
[-105.48339081 148.01463318]
[-115.08718872 135.16368103]
[-110.88854980 119.67979431]
[-96.10831451 113.44085693]
[-82.08461761 121.23286438]
[-67.35030365 118.42214966]
[-52.61599731 115.61142731]
[-37.88169098 112.80071259]
[-33.68118286 102.22492981]
[-24.81245232 94.90540314]
[-13.39674664 92.74232483]
[-2.23747015 96.38426971]
[5.86822987 105.03964233]
[20.66851997 102.60008240]
[35.46880722 100.16053009]
[50.26909637 97.72097015]
[52.85391998 90.68046570]
[38.69585800 85.72573853]
[24.53779602 80.77101898]
[10.37973404 75.81629181]
[-4.57540369 74.65704346]
[-8.47873020 60.17381287]
[3.86848474 51.65640259]
[16.02148819 60.44935608]
[30.02218056 65.83272552]
[44.02287292 71.21608734]
[58.02356339 76.59945679]
[60.60838699 69.55895233]
[50.90254593 58.12231445]
[41.19670486 46.68567657]
[31.49086761 35.24903870]
[21.50068855 24.05992317]
[11.23248196 13.12539387]
[0.96427572 2.19086432]
[-7.16952848 -1.90859139]
[-9.36319256 -8.94618034]
[-19.49318504 -20.00887680]
[-29.62317657 -31.07157326]
[-44.64924622 -36.02412796]
[-47.53802872 -50.63591385]
[-63.33082581 -55.05401611]
[-67.13836670 -71.00502777]
[-55.04377747 -82.07991028]
[-39.48894119 -76.88577271]
[-36.47533417 -60.76590347]
[-22.17382812 -56.60462570]
[-18.56048012 -41.20156479]
[-8.43048763 -30.13887024]
[1.69950449 -19.07617188]
[11.89880562 -8.07734203]
[22.16701126 2.85718703]
[32.43521881 13.79171658]
[35.20451355 14.02651024]
[38.04910660 15.35841084]
[40.55573273 17.82198715]
[42.30603027 21.30348015]
[42.92750549 25.54320145]
[52.63334274 36.97983932]
[62.33918381 48.41647720]
[72.04502106 59.85311508]
[78.79496765 57.88469696]
[85.52413940 56.98656845]
[92.07015228 57.11140060]
[98.28381348 58.18812943]
[104.03247070 60.12475586]
[108.30776215 45.74692535]
[112.58305359 31.36910057]
[116.85833740 16.99127388]
[113.37528229 1.55822802]
[124.41917419 -8.43585968]
[128.69445801 -22.81368637]
[132.96975708 -37.19151306]
[132.41499329 -46.28307724]
[137.39015198 -51.72253036]
[141.84577942 -66.04549408]
[136.54447937 -85.51143646]
[151.35812378 -97.96157074]
[155.45240784 -112.39198303]
[145.16664124 -123.89009094]
[142.75260925 -139.12741089]
[148.98062134 -153.24177551]
[161.86335754 -161.72933960]
[177.28996277 -161.88175964]
[190.33787537 -153.65039062]
[196.84355164 -139.66183472]
[194.73104858 -124.37979126]
[184.67446899 -112.68070221]
[169.88282776 -108.29770660]
[165.78854370 -93.86729431]
[171.53588867 -85.45608521]
[171.72218323 -75.05123901]
[166.04565430 -66.06883240]
[156.16874695 -61.58987427]
[151.71311951 -47.26690674]
[147.34757996 -32.91622543]
[143.07228088 -18.53839684]
[138.79699707 -4.16057110]
[142.58584595 10.24407578]
[131.23616028 21.26656151]
[126.96087646 35.64439011]
[122.68558502 50.02221680]
[118.41030121 64.40003967]
[135.20011902 80.83628082]
[139.89244080 103.85866547]
[130.87463379 125.55490875]
[145.63288879 131.25617981]
[147.78385925 145.99465942]
[157.34521484 157.55235291]
[166.90658569 169.11004639]
[176.46794128 180.66775513]
[186.02929688 192.22544861]
[200.78755188 197.92672729]
[202.93852234 212.66519165]
[212.49989319 224.22290039]
[222.06124878 235.78059387]
[239.47232056 241.81111145]
[241.69445801 259.22967529]
[251.40029907 270.66632080]
[261.10614014 282.10296631]
[270.81198120 293.53961182]
[290.08819580 299.49392700]
[292.66262817 318.67263794]
[302.65280151 329.86175537]
[312.64300537 341.05087280]
[322.63317871 352.23999023]
[332.96987915 363.10977173]
[343.64291382 373.64953613]
[354.31594849 384.18927002]
[364.98898315 394.72903442]
[375.66201782 405.26876831]
[386.33505249 415.80853271]
[397.00808716 426.34826660]
[405.62796021 421.61355591]
[415.07421875 418.92089844]
[424.87091064 418.40036011]
[434.52557373 420.07275391]
[443.55416870 423.84878540]
[451.50518799 429.53378296]
[457.98233032 436.83782959]
[462.66424561 445.39041138]
[465.32043457 454.75933838]
[465.82266235 464.47250366]
[464.15103149 474.04168701]
[460.39480591 482.98709106]
[472.07174683 492.40246582]
[483.74868774 501.81784058]
[495.48452759 511.15963745]
[507.27886963 520.42755127]
[519.07318115 529.69543457]
[530.86749268 538.96331787]
[539.95288086 536.61499023]
[548.96942139 538.66473389]
[555.93646240 544.53332520]
[559.38293457 552.81695557]
[558.65710449 561.62182617]
[570.09375000 571.32763672]
[581.53039551 581.03350830]
[592.96704102 590.73931885]
[608.01147461 586.93884277]
[622.40405273 592.73834229]
[630.61041260 605.90783691]
[629.47515869 621.38330078]
[619.43475342 633.21417236]
[604.34991455 636.85125732]
[590.02117920 630.89593506]
[581.95806885 617.63824463]
[583.26116943 602.17596436]
[571.82452393 592.47015381]
[560.38793945 582.76428223]
[548.95129395 573.05847168]
[528.39239502 571.09875488]
[521.59960938 550.75762939]
[509.80529785 541.48974609]
[498.01095581 532.22186279]
[486.21664429 522.95397949]
[479.03381348 521.29663086]
[474.33331299 513.49475098]
[462.65637207 504.07940674]
[450.97943115 494.66403198]
[447.22958374 497.59207153]
[443.18084717 500.09066772]
[438.88226318 502.12954712]
[442.06237793 516.78857422]
[445.24249268 531.44757080]
[459.49807739 537.57604980]
[467.39990234 550.93048096]
[465.90960693 566.37579346]
[455.60018921 577.97302246]
[440.43585205 581.26275635]
[426.24758911 574.98004150]
[418.49105835 561.54064941]
[420.14883423 546.11242676]
[430.58346558 534.62768555]
[427.40335083 519.96868896]
[424.22323608 505.30966187]
[401.13195801 499.87176514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 185]
[3 184]
[4 183]
[5 182]
[6 181]
[7 180]
[8 179]
[14 178]
[15 177]
[16 176]
[17 175]
[21 173]
[22 172]
[23 171]
[24 170]
[27 168]
[28 167]
[29 166]
[31 164]
[32 163]
[33 162]
[34 161]
[35 160]
[37 158]
[43 69]
[44 68]
[45 67]
[46 66]
[49 61]
[50 60]
[51 59]
[52 58]
[81 113]
[82 112]
[83 111]
[84 110]
[85 105]
[86 104]
[87 103]
[89 102]
[90 101]
[91 100]
[93 98]
[118 155]
[119 154]
[120 153]
[121 152]
[123 150]
[124 149]
[125 148]
[127 147]
[128 146]
[130 142]
[131 141]
[197 232]
[198 231]
[199 230]
[200 228]
[201 227]
[202 226]
[203 225]
[208 223]
[209 222]
[210 221]
[211 220]
[235 248]
[236 247]
[237 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
