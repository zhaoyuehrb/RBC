%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGACGUCAGCGCGCCGGGGCGGGGCUGGCGGCAGGAGACGCCGCGUUGAGAGCUUGGGCUCCUCCGUGAGCCGCCGGCGCGCUUCGCUGCCUGGCGGCCUUUCCCCGAGCCGAGCCCGCUUCCCGAGGCCGCCAGUCGUCGCCUGCCCGCGCCUGCGCAGCGUCCCGGGCCGAGAGGGCCACGGCGGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[94.97043610 138.52392578]
[94.00446320 123.55506897]
[93.03849030 108.58620453]
[89.56618500 93.99362946]
[83.68668365 80.19393921]
[77.80718994 66.39424896]
[71.92768860 52.59455490]
[66.04818726 38.79486465]
[54.38893127 33.25865173]
[49.77960587 21.63318062]
[54.18651199 10.35895538]
[48.53008652 -3.53366470]
[42.87366486 -17.42628479]
[37.21724319 -31.31890488]
[33.66980743 -33.87494659]
[31.36038017 -37.10517502]
[30.34875107 -40.53491211]
[30.53351021 -43.71917725]
[31.67589188 -46.29294205]
[26.92587280 -60.52098846]
[22.17585182 -74.74903870]
[17.42583275 -88.97708130]
[12.67581272 -103.20513153]
[7.81133556 -117.39444733]
[2.83271790 -131.54412842]
[-2.14590001 -145.69380188]
[-7.12451792 -159.84347534]
[-19.00358963 -170.29327393]
[-15.92918491 -184.86712646]
[-20.90780258 -199.01681519]
[-25.88642120 -213.16648865]
[-30.86503792 -227.31616211]
[-35.84365463 -241.46583557]
[-40.82227325 -255.61552429]
[-44.24207687 -258.33996582]
[-46.39274216 -261.67800903]
[-47.23748779 -265.15261841]
[-46.89910126 -268.32421875]
[-45.63370514 -270.83978271]
[-49.69077301 -285.28070068]
[-53.74784088 -299.72164917]
[-58.03702927 -314.09533691]
[-62.55721664 -328.39804077]
[-74.09347534 -339.22509766]
[-70.55115509 -353.69235229]
[-75.07134247 -367.99508667]
[-86.60759735 -378.82214355]
[-83.06528473 -393.28939819]
[-87.58547211 -407.59213257]
[-92.10565948 -421.89483643]
[-103.64191437 -432.72189331]
[-100.09959412 -447.18914795]
[-104.61978912 -461.49188232]
[-109.25504303 -475.75772095]
[-114.00505829 -489.98577881]
[-118.70770264 -494.66360474]
[-120.11972809 -500.18579102]
[-118.67089081 -504.74932861]
[-122.96007538 -519.12304688]
[-127.24925995 -533.49670410]
[-131.53845215 -547.87036133]
[-135.82763672 -562.24407959]
[-140.11682129 -576.61773682]
[-144.63700867 -590.92047119]
[-149.38702393 -605.14855957]
[-154.13703918 -619.37658691]
[-165.84623718 -630.01641846]
[-162.53744507 -644.53881836]
[-174.24662781 -655.17864990]
[-170.93783569 -669.70104980]
[-175.68785095 -683.92913818]
[-180.78028870 -698.03820801]
[-186.21215820 -712.02020264]
[-191.64404297 -726.00213623]
[-197.07592773 -739.98406982]
[-202.50779724 -753.96600342]
[-207.93968201 -767.94793701]
[-213.48400879 -781.88568115]
[-219.14042664 -795.77832031]
[-224.79685974 -809.67089844]
[-230.56500244 -823.51751709]
[-236.44450378 -837.31719971]
[-242.32400513 -851.11688232]
[-254.09492493 -863.31860352]
[-245.62857056 -878.00732422]
[-229.17021179 -873.93804932]
[-228.52430725 -856.99639893]
[-222.64480591 -843.19671631]
[-216.76530457 -829.39703369]
[-211.24385071 -824.46911621]
[-210.90423584 -815.32733154]
[-205.24780273 -801.43475342]
[-199.59138489 -787.54211426]
[-194.15003967 -782.52587891]
[-193.95773315 -773.37982178]
[-188.52586365 -759.39788818]
[-183.09397888 -745.41595459]
[-177.66209412 -731.43402100]
[-172.23022461 -717.45208740]
[-166.79833984 -703.47009277]
[-163.72247314 -701.72076416]
[-161.34611511 -698.38793945]
[-160.40727234 -693.81896973]
[-161.45980835 -688.67913818]
[-156.70977783 -674.45111084]
[-145.34034729 -664.82897949]
[-148.30938721 -649.28887939]
[-136.93995667 -639.66674805]
[-139.90899658 -624.12658691]
[-135.15898132 -609.89855957]
[-130.40896606 -595.67053223]
[-126.60070038 -592.76837158]
[-124.58281708 -587.43768311]
[-125.74313354 -580.90692139]
[-121.45394135 -566.53326416]
[-117.16475677 -552.15960693]
[-112.87557220 -537.78588867]
[-108.58638763 -523.41223145]
[-104.29720306 -509.03851318]
[-99.77701569 -494.73577881]
[-95.02699280 -480.50775146]
[-89.91997528 -475.15151978]
[-90.31706238 -466.01205444]
[-85.79687500 -451.70935059]
[-74.58393097 -441.90530396]
[-77.80294037 -426.41503906]
[-73.28274536 -412.11230469]
[-68.76255798 -397.80957031]
[-57.54961395 -388.00555420]
[-60.76861954 -372.51525879]
[-56.24843216 -358.21255493]
[-45.03548813 -348.40850830]
[-48.25449371 -332.91824341]
[-43.73430634 -318.61550903]
[-39.97329330 -315.65243530]
[-38.04154968 -310.28991699]
[-39.30692291 -303.77871704]
[-35.24985504 -289.33776855]
[-31.19278526 -274.89685059]
[-26.67259598 -260.59414673]
[-21.69397926 -246.44445801]
[-16.71536064 -232.29478455]
[-11.73674297 -218.14511108]
[-6.75812531 -203.99542236]
[-1.77950764 -189.84574890]
[9.74346066 -180.40803528]
[7.02515936 -164.82209778]
[12.00377750 -150.67242432]
[16.98239517 -136.52275085]
[21.96101379 -122.37306976]
[27.15365601 -117.09983063]
[26.90385818 -107.95514679]
[31.65387917 -93.72710419]
[36.40390015 -79.49905396]
[41.15391922 -65.27101135]
[45.90393829 -51.04296112]
[51.10986328 -36.97532654]
[56.76628494 -23.08270645]
[62.42270660 -9.19008732]
[68.07913208 4.70253229]
[82.49585724 14.69881439]
[79.84788513 32.91536713]
[85.72737885 46.71505737]
[91.60688019 60.51474762]
[97.48638153 74.31443787]
[103.36587524 88.11413574]
[148.79899597 89.47001648]
[157.22024536 101.88301849]
[165.64149475 114.29601288]
[174.16247559 126.64076996]
[182.78260803 138.91648865]
[191.40274048 151.19221497]
[200.02287292 163.46792603]
[215.51454163 167.63778687]
[221.78091431 182.40641785]
[214.01496887 196.44456482]
[198.17407227 198.98338318]
[186.41001892 188.07528687]
[187.74716187 172.08805847]
[179.12702942 159.81234741]
[170.50688171 147.53662109]
[161.88674927 135.26091003]
[155.46139526 131.58866882]
[153.22850037 122.71726990]
[144.80725098 110.30426788]
[136.38600159 97.89127350]
[122.19604492 102.75597382]
[108.00735474 107.62022400]
[108.97332764 122.58908844]
[109.93930054 137.55795288]
[120.99280548 149.18548584]
[118.65114594 165.05673218]
[104.71063995 172.99661255]
[89.86524963 166.91435242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[3 188]
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[11 160]
[12 159]
[13 158]
[14 157]
[19 156]
[20 155]
[21 154]
[22 153]
[23 152]
[24 150]
[25 149]
[26 148]
[27 147]
[29 145]
[30 144]
[31 143]
[32 142]
[33 141]
[34 140]
[39 139]
[40 138]
[41 137]
[42 134]
[43 133]
[45 131]
[46 130]
[48 128]
[49 127]
[50 126]
[52 124]
[53 123]
[54 121]
[55 120]
[58 119]
[59 118]
[60 117]
[61 116]
[62 115]
[63 114]
[64 111]
[65 110]
[66 109]
[68 107]
[70 105]
[71 104]
[72 100]
[73 99]
[74 98]
[75 97]
[76 96]
[77 95]
[78 93]
[79 92]
[80 91]
[81 89]
[82 88]
[83 87]
[167 186]
[168 185]
[169 184]
[170 182]
[171 181]
[172 180]
[173 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
