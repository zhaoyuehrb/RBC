%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGUCUCCCCCACGGUGCGAAGUGGUACGGCUCGCAGGGGCGGGGCCCAGGUCAUGUGACGCGGCCGCGGCCGCCAUUUUGUUCUGCGGUGCUGGUAUUUAGAGCGCAGCGGCUGACGGGCCGGAUCGCCUUCGCCGCCGCCCGCCCGCAAACCUUCGUGCCCGGCCCGUCCUCGCCCCCGCCUCCGCCACCGCCUCGGCCCGCAGAGCUUGCCCCCUCCCCACCCGCAGAC\
) } def
/len { sequence length } bind def

/coor [
[40.81362152 783.96771240]
[43.24414062 768.52020264]
[55.06940460 758.28802490]
[54.66839600 743.29339600]
[54.26739120 728.29876709]
[45.88056183 740.73504639]
[32.43840408 747.39147949]
[17.46352577 746.52374268]
[4.88018799 738.35925293]
[-2.01405978 725.03747559]
[-1.41253531 710.04949951]
[6.52712774 697.32312012]
[19.72428894 690.19323730]
[34.72054672 690.52838135]
[47.58602905 698.24066162]
[54.94915009 711.30865479]
[56.55031204 696.39434814]
[58.15147400 681.48004150]
[59.75263596 666.56573486]
[51.79992294 650.91430664]
[62.80135727 636.13818359]
[64.20300293 621.20385742]
[57.68882751 607.80926514]
[66.68180084 594.79248047]
[60.16762543 581.39788818]
[69.16059875 568.38110352]
[70.56224060 553.44671631]
[71.96388245 538.51232910]
[73.36552429 523.57800293]
[70.86539459 516.63635254]
[74.88703156 508.45379639]
[76.48819733 493.53948975]
[78.08935547 478.62521362]
[79.69052124 463.71090698]
[81.29167938 448.79660034]
[82.39358521 433.83712769]
[82.99500275 418.84918213]
[75.77422333 405.82192993]
[84.05861664 392.34307861]
[84.66003418 377.35513306]
[85.26145935 362.36721802]
[85.86287689 347.37927246]
[86.46429443 332.39132690]
[87.06571960 317.40338135]
[87.66713715 302.41543579]
[88.16835785 287.42382812]
[88.56936646 272.42919922]
[88.97037506 257.43453979]
[78.56915283 246.83502197]
[78.76222229 231.62260437]
[89.95051575 220.78471375]
[90.35151672 205.79006958]
[90.75252533 190.79544067]
[91.15353394 175.80079651]
[77.81788635 166.21501160]
[72.77888489 150.40913391]
[78.21356201 134.55899048]
[92.16533661 124.98236847]
[92.36585236 109.98370361]
[92.26559448 94.98403931]
[91.86458588 79.98940277]
[91.46357727 64.99476624]
[91.06256866 50.00012207]
[87.70948792 41.52165222]
[90.75778198 34.80265427]
[90.55725861 19.80399513]
[90.35673523 4.80533457]
[90.15621948 -10.19332504]
[89.95569611 -25.19198418]
[86.71624756 -33.71451950]
[89.85409546 -40.39216995]
[89.85409546 -55.39216995]
[89.85409546 -70.39217377]
[89.75382996 -85.39183807]
[89.55330658 -100.39049530]
[76.25655365 -107.94983673]
[68.57952881 -121.06318665]
[68.49756622 -136.15820312]
[75.93254089 -149.18038940]
[88.80072784 -156.68206787]
[88.60021210 -171.68072510]
[88.39968872 -186.67939758]
[88.19916534 -201.67805481]
[87.99864960 -216.67671204]
[77.33741760 -224.89161682]
[73.40632629 -237.56030273]
[77.42494202 -249.99726868]
[87.71501160 -257.73648071]
[87.71501160 -272.73648071]
[87.71501160 -287.73648071]
[87.71501160 -302.73648071]
[84.58978271 -311.30154419]
[87.81661224 -317.93667603]
[88.01713562 -332.93533325]
[85.00668335 -341.54141235]
[88.32192230 -348.13278198]
[88.72293091 -363.12744141]
[89.12393951 -378.12207031]
[74.93697357 -386.62982178]
[67.02597809 -401.05093384]
[67.46939087 -417.39941406]
[76.05130005 -431.21087646]
[90.34627533 -438.76153564]
[90.54679871 -453.76019287]
[87.53635406 -462.36630249]
[90.85159302 -468.95767212]
[91.25259399 -483.95230103]
[91.65360260 -498.94692993]
[79.51795197 -508.43548584]
[75.34519196 -523.07928467]
[80.53399658 -537.20513916]
[92.89773560 -545.46807861]
[93.29874420 -560.46270752]
[93.69974518 -575.45739746]
[94.10075378 -590.45202637]
[94.50176239 -605.44665527]
[86.21338654 -619.59710693]
[94.55791473 -633.71447754]
[110.95120239 -633.27606201]
[118.52924347 -618.73284912]
[109.49639893 -605.04565430]
[109.09539032 -590.05102539]
[108.69438934 -575.05639648]
[108.29338074 -560.06170654]
[107.89237213 -545.06707764]
[119.79679871 -536.15515137]
[124.22317505 -521.77215576]
[119.27369690 -507.37228394]
[106.64823914 -498.54592896]
[106.24723816 -483.55130005]
[105.84622955 -468.55667114]
[105.54545593 -453.55966187]
[105.34494019 -438.56100464]
[117.50783539 -432.36920166]
[125.85925293 -421.49084473]
[128.72608948 -408.01184082]
[125.49378967 -394.54772949]
[116.73706055 -383.73638916]
[104.11857605 -377.72106934]
[103.71756744 -362.72640991]
[103.31656647 -347.73178101]
[103.01579285 -332.73480225]
[102.81526947 -317.73614502]
[102.71501160 -302.73648071]
[102.71501160 -287.73648071]
[102.71501160 -272.73648071]
[102.71501160 -257.73648071]
[115.10641479 -246.35476685]
[115.43036652 -229.19451904]
[102.99730682 -216.87722778]
[103.19783020 -201.87857056]
[103.39834595 -186.87991333]
[103.59886932 -171.88125610]
[103.79939270 -156.88259888]
[116.86352539 -149.72760010]
[124.64398193 -136.90884399]
[124.96559143 -121.81703186]
[117.64187622 -108.50312805]
[104.55197144 -100.59101868]
[104.75248718 -85.59235382]
[107.97931671 -78.95725250]
[104.85409546 -70.39217377]
[104.85409546 -55.39216995]
[104.85409546 -40.39216995]
[104.95435333 -25.39250565]
[105.15487671 -10.39384651]
[105.35540009 4.60481358]
[105.55591583 19.60347366]
[105.75643921 34.60213089]
[106.05721283 49.59911728]
[106.45822144 64.59375763]
[106.85922241 79.58839417]
[107.26023102 94.58303070]
[109.64009857 97.59407043]
[110.68875885 101.63571167]
[109.97698975 106.09341431]
[107.36451721 110.18422699]
[107.16399384 125.18288422]
[118.78216553 132.58218384]
[125.18014526 144.65814209]
[124.78316498 158.21026611]
[117.80158997 169.70605469]
[106.14817047 176.20179749]
[105.74716187 191.19644165]
[105.34616089 206.19108582]
[104.94515228 221.18571472]
[115.53817749 232.60612488]
[114.91790009 247.80709839]
[103.96501160 257.83554077]
[103.56401062 272.83020020]
[103.16300201 287.82482910]
[106.05812836 296.47039795]
[102.65507507 303.01687622]
[102.05365753 318.00482178]
[101.45223236 332.99273682]
[100.85081482 347.98068237]
[100.24939728 362.96862793]
[99.64797211 377.95657349]
[99.04655457 392.94448853]
[106.22431946 407.04379272]
[97.98294067 419.45062256]
[97.38152313 434.43853760]
[109.95489502 426.25866699]
[124.23228455 430.85824585]
[129.66633606 444.83932495]
[122.24266815 457.87347412]
[107.44547272 460.33175659]
[96.20597839 450.39776611]
[94.60481262 465.31207275]
[93.00365448 480.22634888]
[91.40249634 495.14065552]
[89.80133057 510.05496216]
[88.29989624 524.97961426]
[86.89825439 539.91400146]
[85.49661255 554.84838867]
[84.09497070 569.78271484]
[90.50888824 584.24554443]
[81.61617279 596.19409180]
[88.03009033 610.65692139]
[79.13736725 622.60546875]
[77.73572540 637.53985596]
[85.34327698 647.94213867]
[83.87865448 660.34265137]
[74.66693115 668.16693115]
[73.06577301 683.08123779]
[71.46460724 697.99554443]
[69.86344910 712.90979004]
[69.26203156 727.89776611]
[69.66303253 742.89239502]
[70.06404114 757.88702393]
[82.41929626 767.47253418]
[85.67198944 782.76806641]
[78.28629303 796.55157471]
[63.74951172 802.31494141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 230]
[4 229]
[5 228]
[16 227]
[17 226]
[18 225]
[19 224]
[21 221]
[22 220]
[24 218]
[26 216]
[27 215]
[28 214]
[29 213]
[31 212]
[32 211]
[33 210]
[34 209]
[35 208]
[36 202]
[37 201]
[39 199]
[40 198]
[41 197]
[42 196]
[43 195]
[44 194]
[45 193]
[46 191]
[47 190]
[48 189]
[51 186]
[52 185]
[53 184]
[54 183]
[58 178]
[59 177]
[60 173]
[61 172]
[62 171]
[63 170]
[65 169]
[66 168]
[67 167]
[68 166]
[69 165]
[71 164]
[72 163]
[73 162]
[74 160]
[75 159]
[80 154]
[81 153]
[82 152]
[83 151]
[84 150]
[88 147]
[89 146]
[90 145]
[91 144]
[93 143]
[94 142]
[96 141]
[97 140]
[98 139]
[103 133]
[104 132]
[106 131]
[107 130]
[108 129]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
