%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUCAAAGGGCGUCGCCCAAAGCGGGACAGGUCCAGCGGUUGUUCUGUGUGAAGUCGCGCGGCUUCCACCCACGCAGUGUUCUAAGUGAAGGCCAGAAACUCGCUCGCC\
) } def
/len { sequence length } bind def

/coor [
[42.42330933 279.67019653]
[39.36947632 285.57388306]
[35.20390701 290.73873901]
[30.09843445 294.95898438]
[24.26221466 298.06768799]
[17.93316650 299.94323730]
[11.36826515 300.51425171]
[4.83311653 299.76223755]
[-1.40879583 297.72210693]
[-7.10672998 294.48059082]
[-18.29136276 304.47579956]
[-29.47599411 314.47097778]
[-40.66062546 324.46618652]
[-48.44199371 339.52893066]
[-65.07019043 336.22146606]
[-66.49510956 319.32748413]
[-50.65582657 313.28155518]
[-39.47119522 303.28634644]
[-28.28656006 293.29116821]
[-17.10192871 283.29595947]
[-20.00256538 258.51025391]
[-4.45493793 238.71461487]
[20.74188614 235.60629272]
[27.99766922 222.47795105]
[35.25345230 209.34959412]
[42.50923538 196.22123718]
[49.76501846 183.09289551]
[57.02080154 169.96453857]
[55.10205841 150.80943298]
[72.24668884 140.38996887]
[70.79778290 125.56600189]
[83.75651550 116.48957062]
[90.26477051 102.97503662]
[90.66529846 94.79862976]
[97.14977264 89.17663574]
[104.03450012 75.84995270]
[99.46518707 60.95837021]
[106.63712311 47.54129410]
[120.86212158 43.27692032]
[127.74685669 29.95023727]
[127.20671082 14.13825417]
[139.92247009 6.38204527]
[146.80718994 -6.94463968]
[153.69192505 -20.27132416]
[146.48716736 -38.87953186]
[154.95104980 -56.61891174]
[173.37828064 -62.54243469]
[179.11853027 -76.40062714]
[184.85877991 -90.25881958]
[190.59902954 -104.11701202]
[196.33927917 -117.97520447]
[202.07952881 -131.83340454]
[206.83467102 -146.05973816]
[210.58131409 -160.58428955]
[214.32797241 -175.10884094]
[218.07461548 -189.63339233]
[221.82125854 -204.15794373]
[225.56790161 -218.68249512]
[220.65664673 -234.32894897]
[231.94900513 -246.22074890]
[247.82835388 -242.12463379]
[251.95939636 -226.25433350]
[240.09245300 -214.93585205]
[236.34580994 -200.41130066]
[232.59916687 -185.88674927]
[228.85252380 -171.36219788]
[225.10586548 -156.83764648]
[221.35922241 -142.31309509]
[235.67672729 -146.78623962]
[248.25935364 -138.62060547]
[250.00572205 -123.72261047]
[239.65266418 -112.86840057]
[224.68879700 -113.90911865]
[215.93772888 -126.09314728]
[210.19747925 -112.23495483]
[204.45722961 -98.37676239]
[198.71697998 -84.51856995]
[192.97671509 -70.66037750]
[187.23646545 -56.80218124]
[193.71075439 -48.52112579]
[196.10726929 -38.20269012]
[193.91195679 -27.75622749]
[187.46705627 -19.14465904]
[177.91978455 -14.01565742]
[167.01861572 -13.38659573]
[160.13388062 -0.05991153]
[153.24916077 13.26677322]
[154.28173828 28.12554359]
[141.07353210 36.83496475]
[134.18881226 50.16164780]
[138.94255066 64.23067474]
[132.15029907 77.84390259]
[117.36118317 82.73468018]
[110.47645569 96.06136322]
[103.77930450 109.48329163]
[97.27104950 122.99782562]
[98.25444794 138.78843689]
[85.76122284 146.89822388]
[89.99655151 157.11285400]
[87.87278748 167.73919678]
[80.35025024 175.22862244]
[70.14915466 177.22032166]
[62.89337158 190.34867859]
[55.63758850 203.47702026]
[48.38180161 216.60537720]
[41.12601852 229.73373413]
[33.87023544 242.86207581]
[38.35152054 247.86334229]
[41.73640060 253.64985657]
[43.89207840 259.98559570]
[44.73579025 266.61309814]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 20]
[11 19]
[12 18]
[13 17]
[23 107]
[24 106]
[25 105]
[26 104]
[27 103]
[28 102]
[30 98]
[32 96]
[33 95]
[35 94]
[36 93]
[39 90]
[40 89]
[42 87]
[43 86]
[44 85]
[47 79]
[48 78]
[49 77]
[50 76]
[51 75]
[52 74]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
