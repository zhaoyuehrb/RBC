%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCUUCUUUCCACACUGCCCCCUGAGUUCAGGGAAUUUCCCCAGCAUCCCAAAGCUUGAGUUUCCUGCCAGUCGGGAGGGAUGAAUGCAGAUAAAGGGAGUGCAGAAGGCACGAGGAAACCAAAGUGCUCUGUAUCCUCCAGUCUCCGCGCCUCCACCCAGCUCAGGAACCCGCGAACCCUCUCUUGACCACU\
) } def
/len { sequence length } bind def

/coor [
[59.74709320 113.06667328]
[74.05197144 108.55330658]
[89.03844452 107.97840118]
[74.08658600 106.77754974]
[59.13473129 105.57669830]
[44.18288040 104.37584686]
[29.23102379 103.17498779]
[17.26144981 113.14329529]
[2.11524916 111.71246338]
[-7.31423807 100.23986816]
[-22.26609230 99.03901672]
[-38.70376587 107.32592010]
[-52.75493240 96.82135773]
[-67.72411346 95.86030579]
[-75.26562500 109.08478546]
[-87.75019836 117.68842316]
[-102.67118073 120.00884247]
[-117.06086731 115.63871765]
[-128.08070374 105.49610138]
[-133.58123779 91.63213348]
[-148.55041504 90.67108154]
[-163.51959229 89.71002960]
[-178.49600220 88.86897278]
[-193.47865295 88.14796448]
[-208.46131897 87.42695618]
[-223.44398499 86.70595551]
[-238.42665100 85.98494720]
[-252.58277893 93.04997253]
[-264.92343140 84.70985413]
[-281.08703613 93.51934814]
[-295.46768188 83.47054291]
[-310.45996094 82.98976898]
[-325.45227051 82.50899506]
[-340.44454956 82.02822113]
[-355.43685913 81.54744720]
[-370.42913818 81.06668091]
[-385.42144775 80.58590698]
[-400.41372681 80.10513306]
[-415.40603638 79.62435913]
[-430.39831543 79.14358521]
[-436.37051392 86.46876526]
[-444.91998291 90.16304016]
[-454.07263184 89.51149750]
[-461.77777100 84.78723907]
[-466.36761475 77.16156006]
[-481.31945801 75.96070099]
[-496.27133179 74.75984955]
[-506.26510620 86.63013458]
[-521.33551025 90.32650757]
[-535.68762207 84.42763519]
[-543.80273438 71.20175171]
[-542.56048584 55.73447800]
[-532.43853760 43.97330093]
[-517.32891846 40.44063568]
[-503.04165649 46.49485779]
[-495.07046509 59.80799484]
[-480.11862183 61.00885010]
[-465.16674805 62.20970154]
[-447.38305664 51.74864197]
[-429.91754150 64.15129089]
[-414.92526245 64.63206482]
[-399.93295288 65.11283875]
[-384.94067383 65.59361267]
[-369.94836426 66.07438660]
[-354.95608521 66.55516052]
[-339.96377563 67.03593445]
[-324.97149658 67.51670837]
[-309.97918701 67.99748230]
[-294.98690796 68.47824860]
[-285.94476318 60.43119049]
[-273.44271851 60.71665192]
[-264.20242310 69.72718811]
[-251.11795044 62.61059570]
[-237.70564270 71.00228882]
[-222.72297668 71.72328949]
[-207.74031067 72.44429779]
[-192.75765991 73.16530609]
[-177.77499390 73.88630676]
[-170.93424988 71.06411743]
[-162.55854797 74.74084473]
[-147.58935547 75.70189667]
[-132.62017822 76.66295624]
[-125.39192200 63.61619949]
[-113.16555023 54.96604156]
[-98.33516693 52.47191238]
[-83.83341217 56.68133163]
[-72.55155182 66.81082153]
[-66.76306152 80.89112091]
[-51.79388046 81.85217285]
[-42.49847412 74.09906006]
[-30.01198387 74.78508759]
[-21.06523895 84.08715820]
[-6.11338425 85.28801727]
[5.02625799 75.46742249]
[20.20667076 76.47226715]
[30.43187714 88.22313690]
[45.38373184 89.42398834]
[60.33558655 90.62483978]
[75.28743744 91.82569885]
[90.23929596 93.02655029]
[88.91171265 77.84315491]
[100.84258270 62.45225525]
[110.38169098 50.87618637]
[119.92080688 39.30011749]
[129.45991516 27.72405243]
[138.99902344 16.14798355]
[148.53814697 4.57191610]
[158.07725525 -7.00415182]
[159.54646301 -13.47093010]
[163.47656250 -17.59762955]
[168.11236572 -18.79197121]
[178.01760864 -30.05634880]
[187.92285156 -41.32072449]
[197.82809448 -52.58510208]
[196.38479614 -70.01290131]
[207.76370239 -82.84401703]
[224.56428528 -83.46894836]
[234.28770447 -94.89064026]
[239.95112610 -110.87068939]
[256.87445068 -109.85232544]
[260.58071899 -93.30844879]
[245.70939636 -85.16721344]
[235.98597717 -73.74552155]
[238.80430603 -61.16487503]
[233.78353882 -49.07913971]
[222.55133057 -41.99085617]
[209.09246826 -42.67985916]
[199.18722534 -31.41548347]
[189.28198242 -20.15110588]
[179.37675476 -8.88672924]
[169.65332031 2.53496003]
[160.11421204 14.11102772]
[150.57510376 25.68709564]
[141.03598022 37.26316452]
[131.49687195 48.83922958]
[121.95776367 60.41529846]
[112.41864777 71.99136353]
[113.79329681 79.36431122]
[127.71451569 73.77865601]
[141.63574219 68.19299316]
[154.03602600 59.75304031]
[168.74874878 62.67465973]
[176.98336792 75.21224213]
[173.81988525 89.87486267]
[161.14842224 97.90192413]
[146.54008484 94.49758911]
[131.54133606 94.30390167]
[116.54258728 94.11020660]
[117.91723633 101.48315430]
[130.98701477 108.84391785]
[144.05679321 116.20468140]
[157.12657166 123.56544495]
[173.87882996 118.54814911]
[188.78630066 127.02658081]
[192.87319946 143.33447266]
[206.05928040 150.48481750]
[219.24536133 157.63514709]
[232.29454041 149.53488159]
[247.64610291 149.06045532]
[261.17056274 156.33952332]
[269.22988892 169.41403198]
[269.65618896 184.76699829]
[262.33477783 198.26856995]
[249.23506165 206.28688049]
[233.88082886 206.66505432]
[220.40226746 199.30134583]
[212.42504883 186.17657471]
[212.09501648 170.82122803]
[198.90893555 163.67089844]
[185.72285461 156.52055359]
[173.99736023 161.88044739]
[161.13441467 159.46841431]
[151.87590027 149.94548035]
[149.76580811 136.63522339]
[136.69602966 129.27445984]
[123.62625122 121.91369629]
[110.55647278 114.55293274]
[122.66431427 123.40731812]
[132.00340271 135.14533997]
[137.91040039 148.93328857]
[139.96574402 163.79180908]
[138.02343750 178.66552734]
[132.22143555 192.49798584]
[122.97186279 204.30667114]
[110.93168640 213.25285339]
[96.95610809 218.70109558]
[82.03779602 220.26440430]
[67.23636627 217.83174133]
[53.60315704 211.57589722]
[42.10650635 201.94122314]
[33.56300354 189.61204529]
[28.57948303 175.46409607]
[27.50991631 160.50227356]
[30.43027306 145.78930664]
[37.13312531 132.37022400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 100]
[4 99]
[5 98]
[6 97]
[7 96]
[10 93]
[11 92]
[13 89]
[14 88]
[20 82]
[21 81]
[22 80]
[23 78]
[24 77]
[25 76]
[26 75]
[27 74]
[29 72]
[31 69]
[32 68]
[33 67]
[34 66]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[45 58]
[46 57]
[47 56]
[102 137]
[103 136]
[104 135]
[105 134]
[106 133]
[107 132]
[108 131]
[111 130]
[112 129]
[113 128]
[114 127]
[117 123]
[118 122]
[149 177]
[150 176]
[151 175]
[152 174]
[155 170]
[156 169]
[157 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
