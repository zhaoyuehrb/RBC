%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACACACCUGGGGAAUUGCUGGCCUGACUUCUGACCCCUGACUCCUCAUACCCUUCCUCCAGAGCAUGACAUUUGACCACCAACUGAAACCUGACCUCUGACCCCAGACCACUGGCCCUUCCCCCGCCCUGUGGUGACUUCAUAAAGGUUACUAGCUUCUCCCCUGGCCUUGAGACCCACACG\
) } def
/len { sequence length } bind def

/coor [
[118.15825653 578.45507812]
[116.53934479 563.46075439]
[118.70104218 548.53497314]
[124.50746918 534.61608887]
[133.59362793 522.57897949]
[145.38835144 513.18029785]
[159.15022278 507.01083374]
[156.60156250 492.22894287]
[146.81427002 481.00137329]
[152.09426880 466.08721924]
[149.54562378 451.30532837]
[146.99696350 436.52343750]
[144.44830322 421.74154663]
[141.89965820 406.95965576]
[128.47811890 400.55651855]
[121.31588745 387.32144165]
[123.34400177 372.23040771]
[133.99240112 361.09854126]
[131.44374084 346.31665039]
[128.89508057 331.53475952]
[126.34642792 316.75286865]
[123.79777527 301.97097778]
[120.46248627 298.52239990]
[119.27332306 292.93441772]
[121.42346954 286.64157104]
[119.38096619 271.78128052]
[117.33846283 256.92098999]
[115.29596710 242.06069946]
[113.25346375 227.20042419]
[111.21096802 212.34013367]
[98.25765991 198.00260925]
[106.08679199 179.44357300]
[103.53813934 164.66168213]
[100.98947906 149.87977600]
[84.54950714 148.89108276]
[68.89077759 142.48753357]
[55.79203796 131.08670044]
[46.83781052 115.68746948]
[43.22996902 97.78606415]
[28.28459358 99.06504822]
[13.33922100 100.34403229]
[0.20484136 110.16340637]
[-14.75745392 103.45059967]
[-16.15573883 87.11117554]
[-2.55157781 77.95372772]
[12.06023502 85.39865875]
[27.00560951 84.11967468]
[41.95098114 82.84069061]
[45.79301453 76.39950562]
[32.06403732 70.35672760]
[18.33506012 64.31394958]
[3.34158182 63.87164688]
[-6.43195105 52.49280548]
[-4.60643196 37.60430527]
[7.62663698 28.92374992]
[22.28282928 32.11687469]
[29.79614830 45.09939957]
[41.63661575 54.30827713]
[53.47708130 63.51715088]
[57.31911087 57.07596970]
[51.34309387 43.31780243]
[45.36708069 29.55963326]
[39.39106369 15.80146313]
[33.41504669 2.04329324]
[27.20500755 -11.61084175]
[20.76275635 -25.15696335]
[7.84844971 -34.29650879]
[9.36965752 -49.11322784]
[-7.72914267 -59.76049805]
[-5.41484451 -78.94374084]
[-12.31582069 -92.26201630]
[-25.53463173 -100.95532227]
[-24.52017021 -115.81534576]
[-31.42114639 -129.13362122]
[-38.32212067 -142.45190430]
[-53.11695480 -148.65612793]
[-57.35192108 -164.13012695]
[-47.77831268 -177.00357056]
[-31.74018669 -177.40104675]
[-21.54061699 -165.01766968]
[-25.00384331 -149.35287476]
[-18.10286713 -136.03459167]
[-11.20189190 -122.71631622]
[1.52331579 -114.97562408]
[1.00245798 -99.16299438]
[7.90343380 -85.84471130]
[17.90907669 -83.63188171]
[25.18848038 -76.11029053]
[27.15395355 -65.60542297]
[22.91577911 -55.55548096]
[35.36929321 -47.38484573]
[34.30887604 -31.59921455]
[40.75112915 -18.05309296]
[44.89315033 -15.63224602]
[47.54583740 -10.57232285]
[47.17321777 -3.93272305]
[53.14923096 9.82544613]
[59.12524796 23.58361626]
[65.10126495 37.34178543]
[71.07727814 51.09995651]
[80.27539825 47.64458466]
[89.78784180 45.87264633]
[99.31389618 45.78750229]
[108.56129456 47.34000397]
[117.25519562 50.43154144]
[125.14634705 54.91856003]
[132.01820374 60.61841583]
[137.69281006 67.31631470]
[150.37417603 59.30487823]
[163.05554199 51.29344177]
[175.73689270 43.28200531]
[188.41825867 35.27056885]
[196.58821106 18.78035355]
[214.12699890 18.73896217]
[226.66972351 10.51218510]
[239.21246338 2.28540683]
[238.96595764 -13.13998699]
[247.11761475 -26.23785973]
[261.06622314 -32.82872772]
[276.36087036 -30.80946541]
[288.12106323 -20.82441711]
[292.59420776 -6.05977297]
[288.35287476 8.77312279]
[276.75051880 18.94114685]
[261.48937988 21.19972038]
[247.43923950 14.82813835]
[234.89649963 23.05491638]
[222.35377502 31.28169441]
[219.57897949 43.07105637]
[209.17611694 50.02421188]
[196.42968750 47.95192719]
[183.74833679 55.96336365]
[171.06697083 63.97480011]
[158.38560486 71.98623657]
[145.70425415 79.99767303]
[149.72924805 96.00332642]
[148.31210327 112.44635773]
[141.60791016 127.52731323]
[130.35034180 139.59580994]
[115.77136993 147.33113098]
[118.32003021 162.11302185]
[120.86868286 176.89491272]
[130.12675476 182.66133118]
[134.57896423 192.37695312]
[132.96946716 202.71975708]
[126.07125854 210.29762268]
[128.11375427 225.15791321]
[130.15625000 240.01820374]
[132.19876099 254.87849426]
[134.24125671 269.73880005]
[136.28375244 284.59906006]
[138.57966614 299.42233276]
[141.12832642 314.20422363]
[143.67697144 328.98611450]
[146.22563171 343.76800537]
[148.77429199 358.54989624]
[162.53569031 365.47305298]
[169.50038147 379.01361084]
[167.18385315 393.88296509]
[156.68154907 404.41101074]
[159.23019409 419.19290161]
[161.77885437 433.97479248]
[164.32751465 448.75668335]
[166.87615967 463.53857422]
[176.84574890 475.82342529]
[171.38345337 489.68029785]
[173.93211365 504.46218872]
[188.96539307 505.66683960]
[203.22653198 510.57302856]
[215.81906128 518.87237549]
[225.95138550 530.04315186]
[232.98660278 543.38323975]
[236.48245239 558.05395508]
[236.21919250 573.13311768]
[232.21337891 587.67285156]
[224.71681213 600.75921631]
[214.20072937 611.56951904]
[201.32617188 619.42425537]
[186.90248108 623.82965088]
[171.83630371 624.50878906]
[157.07473755 621.41900635]
[143.54568481 614.75451660]
[132.09960938 604.93420410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 167]
[8 166]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[18 156]
[19 155]
[20 154]
[21 153]
[22 152]
[25 151]
[26 150]
[27 149]
[28 148]
[29 147]
[30 146]
[32 142]
[33 141]
[34 140]
[39 48]
[40 47]
[41 46]
[60 100]
[61 99]
[62 98]
[63 97]
[64 96]
[65 93]
[66 92]
[68 90]
[70 86]
[71 85]
[73 83]
[74 82]
[75 81]
[108 135]
[109 134]
[110 133]
[111 132]
[112 131]
[114 128]
[115 127]
[116 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
