%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGGGAAGGAGCAUCUCAGGAAAGGGGUCCCCGGACUCUGGGGCUCUCAGCACCUGCGGUCGCAAACCAACCUCAUGCCCUGACUUUACCAGGCGUCGGGACUCUGACUUAACCGGGGAAUGAGGGACUUGGUCUGGCGGCAGAUCACAAUGAGGACCUAGGGCAUCUGUCUGCUGACGCCCCCUGGCCUGCAGUGACC\
) } def
/len { sequence length } bind def

/coor [
[-175.76249695 138.45204163]
[-190.25138855 142.33432007]
[-204.74028015 146.21661377]
[-219.22917175 150.09889221]
[-233.71804810 153.98118591]
[-248.17662048 157.97491455]
[-262.60400391 162.07986450]
[-277.03140259 166.18479919]
[-291.45877075 170.28974915]
[-299.18545532 183.81513977]
[-313.87536621 187.77261353]
[-326.72213745 180.32304382]
[-341.14950562 184.42797852]
[-354.50839233 199.51957703]
[-373.03890991 194.00755310]
[-387.33303833 198.55484009]
[-401.59173584 203.21206665]
[-415.81414795 207.97892761]
[-430.03656006 212.74580383]
[-440.66247559 224.46757507]
[-455.18884277 221.17599487]
[-469.41122437 225.94287109]
[-483.63363647 230.70973206]
[-497.85604858 235.47660828]
[-502.71218872 251.67611694]
[-516.13262939 261.69134521]
[-532.71197510 261.73547363]
[-545.91809082 251.98912048]
[-560.06542969 256.97445679]
[-574.21276855 261.95977783]
[-588.36004639 266.94509888]
[-598.80426025 278.82910156]
[-613.37951660 275.76159668]
[-627.52685547 280.74691772]
[-641.67419434 285.73223877]
[-655.82147217 290.71759033]
[-669.96881104 295.70291138]
[-684.11614990 300.68823242]
[-697.04534912 311.65505981]
[-711.16278076 302.26705933]
[-706.04974365 286.10247803]
[-689.10144043 286.54089355]
[-674.95410156 281.55557251]
[-660.80682373 276.57025146]
[-646.65948486 271.58493042]
[-632.51220703 266.59960938]
[-618.36486816 261.61428833]
[-608.93261719 250.08685303]
[-593.34539795 252.79777527]
[-579.19805908 247.81245422]
[-565.05078125 242.82713318]
[-550.90344238 237.84179688]
[-548.29437256 224.74534607]
[-539.48303223 214.56753540]
[-526.69097900 210.03794861]
[-513.22509766 212.44104004]
[-502.62292480 221.25419617]
[-488.40051270 216.48733521]
[-474.17810059 211.72045898]
[-459.95568848 206.95358276]
[-450.34704590 195.57276917]
[-434.80343628 198.52339172]
[-420.58102417 193.75651550]
[-406.35861206 188.98965454]
[-401.01257324 183.88046265]
[-391.88034058 184.26071167]
[-377.58621216 179.71342468]
[-373.72314453 170.24615479]
[-365.10409546 164.34664917]
[-354.44128418 164.16416931]
[-345.25445557 170.00059509]
[-330.82708740 165.89566040]
[-323.82623291 152.79895020]
[-309.25326538 148.43043518]
[-295.56372070 155.86236572]
[-281.13632202 151.75741577]
[-266.70895386 147.65248108]
[-252.28157043 143.54753113]
[-246.70526123 138.69068909]
[-237.60034180 139.49229431]
[-223.11145020 135.61000061]
[-208.62255859 131.72772217]
[-194.13368225 127.84543610]
[-179.64479065 123.96315002]
[-177.02044678 112.10395813]
[-169.55709839 102.43003082]
[-158.62361145 96.81620789]
[-146.26850891 96.38333893]
[-134.83618164 101.27501678]
[-126.52208710 110.61862946]
[-111.92051697 107.18437195]
[-97.31894684 103.75011444]
[-82.71737671 100.31585693]
[-68.17041779 96.65715027]
[-53.68153381 92.77486420]
[-39.19264603 88.89257812]
[-24.70375824 85.01029205]
[-10.21487141 81.12800598]
[-0.45559666 69.73693085]
[1.15826952 54.82400513]
[2.77213573 39.91107559]
[4.38600206 24.99814606]
[5.99986839 10.08521748]
[-1.11546648 -4.68989801]
[8.34479713 -18.08524895]
[24.64875221 -16.32084656]
[31.02428627 -1.21175742]
[20.91279602 11.69908428]
[19.29893112 26.61201286]
[17.68506432 41.52494049]
[16.07119751 56.43787003]
[14.45733166 71.35079956]
[19.38068008 77.00859070]
[27.09967041 64.14713287]
[41.71694183 67.51393890]
[43.03187561 82.45619965]
[29.22737503 88.32418060]
[34.15072250 93.98197937]
[49.14360809 94.44390869]
[64.13649750 94.90583038]
[79.12937927 95.36775970]
[94.12226868 95.82968140]
[90.96607971 88.54081726]
[91.81796265 79.60289764]
[97.20394135 70.77141571]
[106.96681976 63.91939926]
[120.25617981 60.79120636]
[134.80313110 57.13249969]
[149.35008240 53.47379684]
[157.48962402 40.19276810]
[172.29443359 36.68954849]
[184.90570068 44.53120041]
[199.45265198 40.87249756]
[213.84799194 36.65658188]
[228.07040405 31.88971138]
[242.29281616 27.12284088]
[256.51522827 22.35596848]
[270.73764038 17.58909798]
[284.96005249 12.82222652]
[299.18246460 8.05535507]
[309.63119507 -4.58409166]
[325.75442505 -1.58849621]
[330.96594238 13.96053028]
[319.90457153 26.06748199]
[303.94934082 22.27776527]
[289.72692871 27.04463577]
[275.50451660 31.81150818]
[261.28210449 36.57838058]
[247.05969238 41.34524918]
[232.83728027 46.11212158]
[218.61486816 50.87899399]
[230.65470886 59.82563019]
[231.32466125 74.81066132]
[220.13125610 84.79602814]
[205.31959534 82.42644501]
[197.80004883 69.44737244]
[203.11135864 55.41944885]
[188.56439209 59.07815552]
[181.16355896 71.95305634]
[166.46299744 75.87073517]
[153.00878906 68.02075195]
[138.46183777 71.67945862]
[123.91488647 75.33815765]
[122.25402069 82.65195465]
[118.93229675 97.27953339]
[117.27143097 104.59332275]
[128.81144714 114.17602539]
[140.35145569 123.75872803]
[155.91134644 126.62235260]
[160.75991821 140.70570374]
[172.29992676 150.28840637]
[187.30279541 146.32688904]
[201.75666809 151.97180176]
[210.10375977 165.05255127]
[209.13441467 180.53932190]
[199.22137451 192.47712708]
[184.17642212 196.27565002]
[169.78462219 190.47427368]
[161.57994080 177.30375671]
[162.71722412 161.82841492]
[151.17721558 152.24571228]
[136.44274902 150.06750488]
[130.76875305 135.29873657]
[119.22874451 125.71603394]
[107.68872833 116.13333130]
[93.66033936 110.82257080]
[78.66745758 110.36064148]
[63.67456818 109.89871979]
[48.68168259 109.43679047]
[33.68879700 108.97486877]
[-6.33258533 95.61688995]
[-20.82147217 99.49917603]
[-35.31035995 103.38146210]
[-49.79924774 107.26374817]
[-64.28813171 111.14603424]
[-69.23204041 115.54928589]
[-74.81883240 116.62845612]
[-79.28311920 114.91742706]
[-93.88468933 118.35168457]
[-108.48625946 121.78594208]
[-123.08782959 125.22019958]
[-129.59808350 142.13786316]
[-144.82456970 151.68093872]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 84]
[2 83]
[3 82]
[4 81]
[5 80]
[6 78]
[7 77]
[8 76]
[9 75]
[12 72]
[13 71]
[15 67]
[16 66]
[17 64]
[18 63]
[19 62]
[21 60]
[22 59]
[23 58]
[24 57]
[28 52]
[29 51]
[30 50]
[31 49]
[33 47]
[34 46]
[35 45]
[36 44]
[37 43]
[38 42]
[90 201]
[91 200]
[92 199]
[93 198]
[94 195]
[95 194]
[96 193]
[97 192]
[98 191]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
[118 190]
[119 189]
[120 188]
[121 187]
[122 186]
[127 163]
[128 162]
[129 161]
[132 158]
[133 157]
[134 151]
[135 150]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
[166 185]
[167 184]
[168 183]
[170 181]
[171 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
