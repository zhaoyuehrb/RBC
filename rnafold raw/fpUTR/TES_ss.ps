%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGCUGCCCGGCCCCCUUUGUUCCCGGGUCCGGGCCGCAGGCCCGCUGCGGCGGACUGGGCGGCGGAAGUUCGACGGCGCCGGGCGAGUGGCUGUUGAGCGGCGCCGCGGGAGUUCCGCAGGUUUCCCGUGUUCGCAGCGGAGCCGGAGGCCAGCUGAACCCGGCCGUGGGAUCCCGGAUAGGAGGAGGAGGGGACCCAUAGGACGCGUUAAC\
) } def
/len { sequence length } bind def

/coor [
[142.50451660 559.40972900]
[152.67098999 548.18823242]
[165.93142700 540.87799072]
[163.32670593 526.10589600]
[160.72198486 511.33377075]
[150.89216614 500.14343262]
[156.11553955 485.20935059]
[146.28572083 474.01898193]
[151.50909424 459.08489990]
[148.90437317 444.31280518]
[146.29965210 429.54067993]
[136.57542419 422.34979248]
[134.28271484 410.06698608]
[141.18624878 399.17477417]
[138.79664612 384.36633301]
[129.13061523 373.03421021]
[134.57063293 358.17767334]
[132.18103027 343.36923218]
[129.79142761 328.56079102]
[127.40183258 313.75234985]
[125.01222992 298.94390869]
[112.82408142 290.45953369]
[110.18973541 275.47573853]
[119.17156982 262.74920654]
[116.78196716 247.94076538]
[114.39236450 233.13232422]
[104.72633362 221.80020142]
[110.16635895 206.94366455]
[107.77675629 192.13522339]
[105.38715363 177.32678223]
[102.99755096 162.51835632]
[100.60794830 147.70991516]
[98.21834564 132.90147400]
[75.35807037 109.37982941]
[86.06507874 85.95656586]
[80.32482910 72.09837341]
[74.58457184 58.24017715]
[68.84432220 44.38198471]
[53.89644623 40.65812302]
[44.12175751 28.98298264]
[43.10809326 13.96844101]
[51.03508377 1.38667595]
[45.29483032 -12.47151661]
[39.55458069 -26.32971001]
[33.71369934 -40.14579391]
[27.77250481 -53.91903305]
[21.83130836 -67.69227600]
[15.89011097 -81.46551514]
[9.94891453 -95.23876190]
[4.00771856 -109.01200104]
[-1.93347812 -122.78524017]
[-7.87467480 -136.55848694]
[-14.11491871 -150.19883728]
[-20.65124130 -163.69982910]
[-27.18756294 -177.20080566]
[-33.72388458 -190.70178223]
[-44.18268585 -193.67146301]
[-51.13891983 -201.73936462]
[-52.48019028 -212.08596802]
[-48.00321198 -221.26614380]
[-54.14409637 -234.95152283]
[-60.28498077 -248.63690186]
[-66.42586517 -262.32226562]
[-81.60133362 -272.75543213]
[-79.13355255 -290.13165283]
[-85.47282410 -303.72628784]
[-91.81209564 -317.32089233]
[-98.15136719 -330.91549683]
[-104.49064636 -344.51013184]
[-110.82991791 -358.10473633]
[-123.67449951 -367.34201050]
[-122.04090118 -382.14675903]
[-128.38017273 -395.74139404]
[-134.71945190 -409.33599854]
[-149.29832458 -414.82180786]
[-155.53359985 -428.69897461]
[-150.21388245 -442.56390381]
[-156.55314636 -456.15853882]
[-162.89242554 -469.75314331]
[-169.23170471 -483.34774780]
[-175.57096863 -496.94238281]
[-181.91024780 -510.53698730]
[-188.24952698 -524.13159180]
[-194.58879089 -537.72625732]
[-209.16767883 -543.21203613]
[-215.40293884 -557.08923340]
[-210.08322144 -570.95416260]
[-216.42250061 -584.54876709]
[-222.76176453 -598.14337158]
[-237.91233826 -602.01562500]
[-246.98724365 -614.75061035]
[-245.70159912 -630.33526611]
[-234.66244507 -641.41094971]
[-219.08213806 -642.74810791]
[-206.31721497 -633.71539307]
[-202.39488220 -618.57769775]
[-209.16716003 -604.48266602]
[-202.82788086 -590.88800049]
[-196.48860168 -577.29339600]
[-182.44801331 -572.45635986]
[-175.82542419 -558.75976562]
[-180.99417114 -544.06549072]
[-174.65490723 -530.47088623]
[-168.31562805 -516.87628174]
[-161.97634888 -503.28164673]
[-155.63708496 -489.68704224]
[-149.29780579 -476.09240723]
[-142.95852661 -462.49780273]
[-136.61926270 -448.90319824]
[-122.57865906 -444.06613159]
[-115.95607758 -430.36956787]
[-121.12483215 -415.67529297]
[-114.78556061 -402.08065796]
[-108.44628143 -388.48605347]
[-96.05513000 -380.22113037]
[-97.23529816 -364.44400024]
[-90.89602661 -350.84939575]
[-84.55675507 -337.25479126]
[-78.21748352 -323.66015625]
[-71.87820435 -310.06555176]
[-65.53893280 -296.47091675]
[-54.28491211 -292.04187012]
[-48.89130783 -280.77099609]
[-52.74048996 -268.46316528]
[-46.59960175 -254.77778625]
[-40.45871735 -241.09240723]
[-34.31783295 -227.40702820]
[-17.85577583 -217.25955200]
[-20.22290421 -197.23811340]
[-13.68658161 -183.73712158]
[-7.15025997 -170.23614502]
[-0.61393774 -156.73516846]
[2.57468939 -155.23849487]
[5.19805908 -152.12503052]
[6.50505304 -147.67665100]
[5.89856720 -142.49967957]
[11.83976364 -128.72644043]
[17.78096008 -114.95319366]
[23.72215652 -101.17995453]
[29.66335297 -87.40671539]
[35.60454941 -73.63346863]
[41.54574585 -59.86022949]
[47.48694229 -46.08699036]
[53.02047729 -41.19210815]
[53.41277313 -32.06996155]
[59.15302277 -18.21176910]
[64.89327240 -4.35357571]
[79.39515686 -1.06215310]
[89.29527283 10.27150249]
[90.63909149 25.43881989]
[82.70251465 38.64173508]
[88.44276428 52.49992752]
[94.18302155 66.35812378]
[99.92327118 80.21631622]
[116.35567474 79.31914520]
[132.09225464 92.53212738]
[147.09066772 92.31397247]
[162.08908081 92.09580994]
[177.08749390 91.87765503]
[190.88381958 83.01235962]
[205.33357239 90.76715851]
[205.57206726 107.16456604]
[191.35398865 115.33634949]
[177.30564880 106.87606812]
[162.30723572 107.09422302]
[147.30882263 107.31238556]
[132.31040955 107.53054047]
[127.48950195 113.27587891]
[138.98002625 122.91786957]
[129.33784485 134.40823364]
[117.84768677 124.76654053]
[113.02677917 130.51187134]
[115.41638184 145.32031250]
[117.80598450 160.12875366]
[120.19558716 174.93717957]
[122.58518982 189.74562073]
[124.97479248 204.55406189]
[134.81175232 216.94538879]
[129.20080566 230.74272156]
[131.59040833 245.55116272]
[133.98001099 260.35958862]
[146.50900269 269.61495972]
[148.72145081 284.66687012]
[139.82066345 296.55432129]
[142.21026611 311.36276245]
[144.59986877 326.17120361]
[146.98947144 340.97964478]
[149.37907410 355.78805542]
[159.21603394 368.17938232]
[153.60508728 381.97674561]
[155.99468994 396.78515625]
[167.95275879 410.79052734]
[161.07176208 426.93594360]
[163.67648315 441.70806885]
[166.28121948 456.48019409]
[176.29733276 468.72714233]
[170.88764954 482.60461426]
[180.90377808 494.85156250]
[175.49409485 508.72906494]
[178.09881592 523.50115967]
[180.70353699 538.27331543]
[195.66452026 540.60729980]
[209.05584717 547.67492676]
[219.42494202 558.70947266]
[225.64701843 572.51397705]
[227.04718018 587.59106445]
[223.47352600 602.30523682]
[215.31370544 615.06048584]
[203.45283508 624.47314453]
[189.17750549 629.52227783]
[174.03617859 629.66009521]
[159.67127991 624.87176514]
[147.64100647 615.67657471]
[139.25032043 603.07202148]
[135.40936279 588.42529297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 201]
[4 200]
[5 199]
[7 197]
[9 195]
[10 194]
[11 193]
[14 191]
[15 190]
[17 188]
[18 187]
[19 186]
[20 185]
[21 184]
[24 181]
[25 180]
[26 179]
[28 177]
[29 176]
[30 175]
[31 174]
[32 173]
[33 172]
[35 154]
[36 153]
[37 152]
[38 151]
[42 147]
[43 146]
[44 145]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[50 138]
[51 137]
[52 136]
[53 132]
[54 131]
[55 130]
[56 129]
[60 127]
[61 126]
[62 125]
[63 124]
[65 121]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
[72 114]
[73 113]
[74 112]
[77 109]
[78 108]
[79 107]
[80 106]
[81 105]
[82 104]
[83 103]
[84 102]
[87 99]
[88 98]
[89 97]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
