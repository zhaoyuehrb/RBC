%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGUGCCGGGGAACCCGCGGUUGGUGGACGCGCGAGCGUCCUUGCUGCUAAGUACGCUAGUGGGGGCGGUGCGCGUGCGCGUGCGCGGCCGCAAAGCGGGGCGGGAGGAAACGAGUGCGUUUUCCUCUUAGGCGGCGCCAUUUUGUGUUCAGAGCCGCUAUAGCUGCCGGCGGUGUGCGACUGAGUCGGUGGCGAAGACGGGAACGCGACG\
) } def
/len { sequence length } bind def

/coor [
[201.45877075 198.62409973]
[193.54129028 188.54216003]
[190.01164246 176.16987610]
[191.42803955 163.33515930]
[178.54968262 155.64437866]
[165.67132568 147.95361328]
[152.79298401 140.26283264]
[139.91462708 132.57205200]
[127.03627014 124.88127899]
[116.13719940 135.35064697]
[101.21243286 140.95863342]
[84.45484924 140.19192505]
[68.60237122 132.52934265]
[56.49136353 118.62404633]
[50.55685806 100.28726196]
[52.36668777 80.26205444]
[37.37036133 80.59388733]
[22.37403107 80.92571259]
[7.37770128 81.25754547]
[-7.61862803 81.58937836]
[-14.60662842 93.46939850]
[-26.45800209 100.29141998]
[-40.02416611 100.36640167]
[-51.76141739 93.78170776]
[-58.65660477 82.35034943]
[-73.65619659 82.46096802]
[-88.65579224 82.57158661]
[-102.39852905 90.41044617]
[-115.18251038 82.76721954]
[-130.18209839 82.87783813]
[-145.18170166 82.98845673]
[-160.18128967 83.09906769]
[-175.18087769 83.20968628]
[-190.18048096 83.32030487]
[-198.73728943 86.51251984]
[-205.40171814 83.32030487]
[-219.25856018 90.95562744]
[-231.92843628 83.12467957]
[-246.92802429 83.01406097]
[-261.92761230 82.90344238]
[-276.92721558 82.79282379]
[-291.92678833 82.68220520]
[-306.92639160 82.57158661]
[-321.92599487 82.46096802]
[-336.92556763 82.35034943]
[-351.92517090 82.23973083]
[-366.92477417 82.12911224]
[-381.92477417 82.12911224]
[-396.92434692 82.23973083]
[-406.74725342 94.40708160]
[-422.10293579 97.36302948]
[-435.74087524 89.71185303]
[-441.22167969 75.06620789]
[-435.95745850 60.34132767]
[-422.43386841 52.48984146]
[-407.03625488 55.21898651]
[-397.03497314 67.24014282]
[-382.03536987 67.12952423]
[-375.37097168 63.93730927]
[-366.81414795 67.12952423]
[-351.81454468 67.24014282]
[-336.81497192 67.35076141]
[-321.81536865 67.46138000]
[-306.81576538 67.57199860]
[-291.81619263 67.68261719]
[-276.81658936 67.79323578]
[-261.81698608 67.90385437]
[-246.81741333 68.01447296]
[-231.81781006 68.12509155]
[-219.03382874 60.48185730]
[-205.29109192 68.32071686]
[-190.29109192 68.32071686]
[-175.29150391 68.21009827]
[-160.29190063 68.09947968]
[-145.29231262 67.98886108]
[-130.29272461 67.87824249]
[-115.29312897 67.76762390]
[-102.62326813 59.93667603]
[-88.76641083 67.57199860]
[-73.76681519 67.46138000]
[-58.76722336 67.35076141]
[-49.64836121 53.69987106]
[-34.03308487 48.11879349]
[-18.00937271 52.99382401]
[-7.95045900 66.59304810]
[7.04586983 66.26121521]
[22.04220009 65.92938995]
[37.03852844 65.59755707]
[52.03485870 65.26572418]
[60.56283188 52.92580032]
[55.57137299 38.78065109]
[50.57991409 24.63549614]
[45.58845520 10.49034405]
[34.61600113 -2.43411493]
[43.99789429 -16.55560493]
[60.16467667 -11.44958115]
[59.73360825 5.49888563]
[64.72506714 19.64403915]
[69.71652222 33.78919220]
[74.70798492 47.93434525]
[82.20716858 47.82372665]
[89.51473236 34.72412872]
[97.20553589 47.60249710]
[104.70471954 47.49188232]
[109.27680969 33.20566177]
[113.84889221 18.91944504]
[118.42098236 4.63322735]
[122.99306488 -9.65299034]
[127.56515503 -23.93920898]
[132.13723755 -38.22542572]
[136.70932007 -52.51164627]
[141.28141785 -66.79785919]
[145.74801636 -81.11740875]
[150.10890198 -95.46950531]
[145.86743164 -111.31065369]
[157.65524292 -122.71150970]
[173.34603882 -117.94385529]
[176.79849243 -101.91224670]
[164.46099854 -91.10861969]
[160.10011292 -76.75652313]
[161.16302490 -69.44386292]
[155.56762695 -62.22577667]
[150.99554443 -47.93955612]
[146.42346191 -33.65333939]
[141.85136414 -19.36712265]
[137.27928162 -5.08090401]
[132.70719910 9.20531368]
[128.13511658 23.49153137]
[123.56302643 37.77775192]
[118.99093628 52.06396866]
[132.92749023 65.27234650]
[140.12504578 81.57809448]
[140.39918518 98.02647400]
[134.72705078 112.00292969]
[147.60540771 119.69370270]
[160.48374939 127.38448334]
[173.36210632 135.07525635]
[186.24046326 142.76603699]
[199.11880493 150.45680237]
[214.26258850 141.53800964]
[231.74844360 141.51867676]
[246.75817871 150.31390381]
[255.20158386 165.42237854]
[254.83088684 182.63702393]
[267.93048096 189.94461060]
[281.03005981 197.25221252]
[294.12963867 204.55979919]
[307.22921753 211.86740112]
[320.32879639 219.17498779]
[333.42837524 226.48257446]
[346.52795410 233.79017639]
[350.86114502 233.57203674]
[354.65704346 234.63624573]
[357.57867432 236.65669250]
[359.42950439 239.23135376]
[360.16598511 241.93461609]
[372.81192017 250.00187683]
[385.45782471 258.06915283]
[398.16290283 266.04293823]
[410.92642212 273.92282104]
[423.58865356 269.33395386]
[436.39508057 272.82421875]
[444.72982788 282.90344238]
[445.72302246 295.74945068]
[458.36892700 303.81674194]
[471.01486206 311.88400269]
[483.66076660 319.95126343]
[496.30670166 328.01852417]
[508.95260620 336.08578491]
[521.59851074 344.15307617]
[534.24444580 352.22033691]
[546.89038086 360.28759766]
[559.65386963 368.16748047]
[572.53222656 375.85824585]
[585.41058350 383.54904175]
[601.25555420 381.03579712]
[613.00201416 391.96286011]
[611.63903809 407.94790649]
[598.21221924 416.72857666]
[583.02148438 411.56912231]
[577.71978760 396.42739868]
[564.84143066 388.73660278]
[551.96307373 381.04583740]
[547.19671631 381.32394409]
[542.20477295 378.61184692]
[538.82305908 372.93350220]
[526.17718506 364.86624146]
[513.53125000 356.79898071]
[500.88534546 348.73171997]
[488.23941040 340.66445923]
[475.59350586 332.59716797]
[462.94760132 324.52990723]
[450.30166626 316.46264648]
[437.65576172 308.39538574]
[421.40368652 312.72341919]
[406.76199341 303.78137207]
[403.04653931 286.68634033]
[390.28302002 278.80645752]
[382.94128418 277.96755981]
[377.39056396 270.71505737]
[364.74465942 262.64779663]
[352.09872437 254.58053589]
[339.22036743 246.88975525]
[326.12078857 239.58216858]
[313.02120972 232.27456665]
[299.92163086 224.96697998]
[286.82205200 217.65937805]
[273.72244263 210.35179138]
[260.62286377 203.04420471]
[247.52328491 195.73660278]
[237.43783569 203.34317017]
[225.17962646 206.58276367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 139]
[5 138]
[6 137]
[7 136]
[8 135]
[9 134]
[16 89]
[17 88]
[18 87]
[19 86]
[20 85]
[25 81]
[26 80]
[27 79]
[29 77]
[30 76]
[31 75]
[32 74]
[33 73]
[34 72]
[36 71]
[38 69]
[39 68]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[48 58]
[49 57]
[90 100]
[91 99]
[92 98]
[93 97]
[104 130]
[105 129]
[106 128]
[107 127]
[108 126]
[109 125]
[110 124]
[111 123]
[112 122]
[113 120]
[114 119]
[144 210]
[145 209]
[146 208]
[147 207]
[148 206]
[149 205]
[150 204]
[151 203]
[156 202]
[157 201]
[158 200]
[159 198]
[160 197]
[164 194]
[165 193]
[166 192]
[167 191]
[168 190]
[169 189]
[170 188]
[171 187]
[172 186]
[173 183]
[174 182]
[175 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
