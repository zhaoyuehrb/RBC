%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGGAAGUGGGGCGGGGCGUCUUUGGGGCUUCUGGCAGAUGGCGGGUUCCUCCGCGAGAGCCGAGAACCGCCUACUCCAGGAGGAAAGCCCGAGGGUUGUGGGUCCUGCUAUAGCCAGGGCCAAGCUCCAGGAAAUCGUGGCCAUUCAGGGGUAGUUUGCAGCCUCAUUUGUAACAUUAUUGUGUUGUCCUGUGCAUUUCCA\
) } def
/len { sequence length } bind def

/coor [
[127.11284637 621.94134521]
[112.91315460 614.47491455]
[110.03896332 598.69140625]
[120.69509888 586.69866943]
[121.15702820 571.70574951]
[121.61895752 556.71289062]
[122.08087921 541.71997070]
[122.54280853 526.72711182]
[123.00473022 511.73422241]
[123.46665955 496.74133301]
[115.41020203 487.71331787]
[115.67574310 475.21524048]
[124.66637421 465.96182251]
[125.35913086 450.97781372]
[126.05187988 435.99383545]
[126.74462891 421.00982666]
[127.43738556 406.02584839]
[128.13014221 391.04183960]
[128.82289124 376.05786133]
[111.85578156 368.23373413]
[99.99246216 354.25363159]
[95.21936035 336.91223145]
[98.14279938 319.51882935]
[107.92839813 305.26635742]
[122.51010132 296.64532471]
[119.98123932 281.86004639]
[117.45238495 267.07473755]
[114.92352295 252.28945923]
[112.39466095 237.50416565]
[109.86580658 222.71887207]
[107.33694458 207.93357849]
[105.12342072 206.20495605]
[103.46324158 203.49293518]
[102.73530579 200.00459290]
[103.23635864 196.08053589]
[105.13696289 192.16242981]
[103.52310181 177.24949646]
[101.90923309 162.33657837]
[100.29536438 147.42364502]
[98.68150330 132.51071167]
[97.06763458 117.59778595]
[86.96219635 106.51265717]
[72.26179504 103.52967834]
[57.56139374 100.54670715]
[42.86098862 97.56373596]
[28.16058540 94.58076477]
[19.12227631 95.94134521]
[13.25756168 91.43700409]
[-1.39516270 88.22801208]
[-16.04788780 85.01901245]
[-25.10607529 86.24025726]
[-30.90073013 81.64613342]
[-45.50230026 78.21187592]
[-60.70737457 82.58409882]
[-71.32512665 72.13840485]
[-85.92669678 68.70414734]
[-101.46421814 73.94985962]
[-113.59548187 62.91516876]
[-109.84088898 46.95161438]
[-94.06283569 42.48113251]
[-82.49243927 54.10257339]
[-67.89086914 57.53683090]
[-53.73019791 52.91896439]
[-42.06804276 63.61030579]
[-27.46647263 67.04456329]
[-12.83889103 70.36628723]
[1.81383359 73.57528687]
[16.46655846 76.78427887]
[31.14355850 79.88035583]
[45.84395981 82.86332703]
[60.54436493 85.84630585]
[75.24476624 88.82927704]
[89.94517517 91.81224823]
[86.37276459 86.55703735]
[83.74805450 80.58791351]
[82.17049408 74.04103088]
[81.72189331 67.06462097]
[83.33575439 52.15169525]
[84.94962311 37.23876572]
[78.74201202 22.68623734]
[87.80374146 10.86530781]
[89.41760254 -4.04762030]
[91.03147125 -18.96054840]
[92.64533997 -33.87347794]
[80.35978699 -42.98459625]
[74.32408142 -56.92974091]
[76.06728363 -71.92399597]
[85.02176666 -83.95201111]
[98.70235443 -89.84329224]
[100.31621552 -104.75622559]
[101.93008423 -119.66915131]
[103.54395294 -134.58207703]
[96.24225616 -142.65344238]
[94.62447357 -153.19438171]
[98.98644257 -162.68466187]
[107.66691589 -168.08851624]
[109.73926544 -182.94467163]
[111.81160736 -197.80084229]
[113.88394928 -212.65699768]
[115.95629883 -227.51315308]
[118.02864075 -242.36930847]
[120.10099030 -257.22546387]
[122.17333221 -272.08160400]
[112.45030975 -284.54107666]
[114.46816254 -300.21603394]
[127.02973175 -309.80679321]
[142.68246460 -307.62332153]
[152.13987732 -294.96105957]
[149.79104614 -279.33227539]
[137.02949524 -270.00927734]
[134.95713806 -255.15312195]
[132.88479614 -240.29695129]
[130.81245422 -225.44079590]
[128.74011230 -210.58464050]
[126.66776276 -195.72848511]
[124.59542084 -180.87232971]
[122.52307129 -166.01617432]
[131.08027649 -148.68017578]
[118.45687866 -132.96821594]
[116.84300995 -118.05529022]
[115.22914886 -103.14235687]
[113.61528015 -88.22943115]
[125.71879578 -79.54781342]
[131.89277649 -65.88259888]
[130.38784790 -50.86256027]
[121.50855255 -38.53150940]
[107.55826569 -32.25960922]
[105.94439697 -17.34668159]
[104.33053589 -2.43375397]
[102.71666718 12.47917461]
[109.03971100 25.96503258]
[99.86254883 38.85263443]
[98.24868774 53.76556015]
[96.63481903 68.67848969]
[102.09892273 73.81596375]
[108.49398804 60.24750137]
[123.37454224 62.13671494]
[126.17611694 76.87276459]
[113.02712250 84.09090424]
[118.49122620 89.22837067]
[133.27651978 86.69950867]
[145.57472229 76.74638367]
[159.42425537 82.22723389]
[174.20954895 79.69837952]
[183.13513184 66.65577698]
[198.68415833 63.82677078]
[211.63166809 72.88975525]
[214.29611206 88.46782684]
[205.09675598 101.31878662]
[189.49137878 103.81838989]
[176.73840332 94.48366547]
[161.95310974 97.01252747]
[150.71244812 106.78477478]
[135.80537415 101.48480225]
[121.02008057 104.01366425]
[111.98056030 115.98392487]
[113.59442902 130.89685059]
[115.20829773 145.80978394]
[116.82215881 160.72270203]
[118.43602753 175.63563538]
[120.04989624 190.54856873]
[122.12223816 205.40472412]
[124.65110016 220.19001770]
[127.17995453 234.97531128]
[129.70881653 249.76060486]
[132.23767090 264.54589844]
[134.76652527 279.33117676]
[137.29539490 294.11648560]
[151.87780762 296.46563721]
[164.81820679 304.19769287]
[174.16645813 316.40863037]
[178.41906738 331.50350952]
[176.75732422 347.40347290]
[169.19363403 361.83175659]
[179.12716675 373.07119751]
[189.06069946 384.31063843]
[198.99423218 395.55004883]
[208.92776489 406.78948975]
[224.64027405 411.48513794]
[228.16622925 427.50073242]
[215.87841797 438.36083984]
[200.41749573 432.89349365]
[197.68832397 416.72302246]
[187.75479126 405.48358154]
[177.82125854 394.24417114]
[167.88772583 383.00473022]
[157.95419312 371.76528931]
[143.80688477 376.75061035]
[143.11413574 391.73458862]
[142.42137146 406.71859741]
[141.72862244 421.70257568]
[141.03587341 436.68658447]
[140.34312439 451.67059326]
[139.65037537 466.65457153]
[148.48927307 482.80575562]
[138.45954895 497.20324707]
[137.99761963 512.19616699]
[137.53569031 527.18902588]
[137.07376099 542.18188477]
[136.61184692 557.17480469]
[136.14991760 572.16766357]
[135.68798828 587.16058350]
[145.58563232 599.78656006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 202]
[5 201]
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[13 194]
[14 193]
[15 192]
[16 191]
[17 190]
[18 189]
[19 188]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[30 163]
[31 162]
[36 161]
[37 160]
[38 159]
[39 158]
[40 157]
[41 156]
[42 73]
[43 72]
[44 71]
[45 70]
[46 69]
[48 68]
[49 67]
[50 66]
[52 65]
[53 64]
[55 62]
[56 61]
[77 134]
[78 133]
[79 132]
[81 130]
[82 129]
[83 128]
[84 127]
[89 122]
[90 121]
[91 120]
[92 119]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[102 111]
[103 110]
[140 155]
[141 154]
[143 152]
[144 151]
[174 187]
[175 186]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
