%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGUCUACAGCAGUUACACACAGGCAGUGGUAUCUGUGAGCAGCUCUGUGGACUCAAAGGUUUUCUCCCUGAGAGGCAUGACCCAGGCCAGCUGAUUCAUCAGAAUCAGG\
) } def
/len { sequence length } bind def

/coor [
[72.52593231 145.61274719]
[59.28903198 134.32148743]
[50.39852905 119.36598206]
[46.80358887 102.34291840]
[31.87454796 100.88563538]
[16.94550514 99.42834473]
[2.01646233 97.97106171]
[-12.91258049 96.51377106]
[-27.84162331 95.05648041]
[-42.77066422 93.59919739]
[-57.69970703 92.14190674]
[-72.62875366 90.68462372]
[-81.61769104 92.98707581]
[-87.95053101 88.97367859]
[-102.83329773 87.10195160]
[-117.71605682 85.23023224]
[-132.59881592 83.35850525]
[-147.25660706 89.31332397]
[-158.91893005 80.04837036]
[-173.57672119 86.00318909]
[-185.23904419 76.73823547]
[-200.12181091 74.86650848]
[-215.00457764 72.99478912]
[-229.88732910 71.12306213]
[-244.77009583 69.25134277]
[-259.65286255 67.37961578]
[-270.17013550 78.78868866]
[-285.39141846 81.80390930]
[-299.46386719 75.26586914]
[-306.97631836 61.68857956]
[-305.04006958 46.29278183]
[-294.39965820 34.99847794]
[-279.14654541 32.14855194]
[-265.14584351 38.83886719]
[-257.78112793 52.49685287]
[-242.89837646 54.36857605]
[-228.01560974 56.24029922]
[-213.13284302 58.11202240]
[-198.25009155 59.98374557]
[-183.36732483 61.85546875]
[-169.77404785 55.76677322]
[-157.04721069 65.16560364]
[-143.45393372 59.07690811]
[-130.72709656 68.47574615]
[-115.84433746 70.34746552]
[-100.96157074 72.21919250]
[-86.07880402 74.09091187]
[-71.17146301 75.75557709]
[-56.24242020 77.21286774]
[-41.31337738 78.67015076]
[-26.38433647 80.12744141]
[-11.45529270 81.58472443]
[3.47374964 83.04201508]
[18.40279198 84.49930573]
[33.33183670 85.95658875]
[48.26087570 87.41387939]
[51.68019867 76.64783478]
[57.33066559 66.76470947]
[64.99186707 58.22479248]
[74.34890747 51.43467331]
[85.00527954 46.72795868]
[96.49959564 44.34901047]
[108.32553864 44.44052505]
[119.95420074 47.03553009]
[130.85769653 52.05426407]
[140.53314209 59.30611420]
[151.35858154 48.92296219]
[162.18402100 38.53981018]
[173.00946045 28.15666008]
[180.25517273 12.82903481]
[196.98959351 15.54846287]
[199.00898743 32.38171387]
[183.39260864 38.98210144]
[172.56716919 49.36525345]
[161.74172974 59.74840546]
[150.91629028 70.13155365]
[156.80070496 83.92915344]
[171.78767395 83.30379486]
[186.77462769 82.67843628]
[200.24023438 74.37252808]
[213.27900696 81.57249451]
[228.26596069 80.94713593]
[243.83924866 74.24571228]
[254.58988953 87.35524750]
[244.96876526 101.31483459]
[228.89132690 95.93409729]
[213.90435791 96.55945587]
[201.51072693 104.82063293]
[187.39997864 97.66539764]
[172.41302490 98.29074860]
[157.42607117 98.91610718]
[154.02037048 114.90979004]
[146.37078857 128.90892029]
[135.31684875 139.85057068]
[143.58526611 152.36589050]
[151.85369873 164.88119507]
[160.12211609 177.39651489]
[168.39054871 189.91183472]
[176.65898132 202.42713928]
[184.92739868 214.94245911]
[199.83119202 221.78416443]
[201.08839417 238.13505554]
[187.40568542 247.17472839]
[172.85868835 239.60395813]
[172.41207886 223.21089172]
[164.14366150 210.69557190]
[155.87522888 198.18025208]
[147.60681152 185.66494751]
[139.33837891 173.14962769]
[131.06996155 160.63430786]
[122.80152893 148.11898804]
[106.07295990 152.90052795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 56]
[5 55]
[6 54]
[7 53]
[8 52]
[9 51]
[10 50]
[11 49]
[12 48]
[14 47]
[15 46]
[16 45]
[17 44]
[19 42]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[66 76]
[67 75]
[68 74]
[69 73]
[77 91]
[78 90]
[79 89]
[81 87]
[82 86]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
