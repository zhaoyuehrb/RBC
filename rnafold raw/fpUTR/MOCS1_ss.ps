%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGAAAUCUUCCCAGUAGAGAUCACCAUCCGCCCCCGACCCCCAAGCUGAAUACUUAAGGGGUGGGUCCUUCCCAUCAAGCUGAUUUCUCAACGAGAGGGACAAUCCCAGCUUCCCCAACAUUGCAGAGCCCAAAC\
) } def
/len { sequence length } bind def

/coor [
[0.87283832 123.43137360]
[2.83768511 108.56062317]
[9.41462231 95.07937622]
[19.92543221 84.37784576]
[33.28623199 77.55956268]
[48.11925507 75.32763672]
[62.89490509 77.91223145]
[76.08951569 85.04682159]
[86.34389496 95.99784088]
[76.67325592 84.53141785]
[67.00261688 73.06500244]
[57.33197784 61.59858704]
[43.64818954 63.61334610]
[30.86508369 58.62263107]
[22.30266953 48.03804779]
[20.12737846 34.70863342]
[24.80471802 22.15443039]
[16.91522217 17.38174057]
[15.31864071 10.10039806]
[6.17601633 -1.79129720]
[-2.96660805 -13.68299294]
[-12.10923195 -25.57468796]
[-21.25185585 -37.46638489]
[-30.39447975 -49.35807800]
[-39.53710556 -61.24977493]
[-48.67972946 -73.14147186]
[-63.22502136 -79.36602020]
[-64.84842682 -94.17189026]
[-75.51478577 -104.71839142]
[-87.50904083 -113.72605133]
[-99.50329590 -122.73371124]
[-111.49754333 -131.74136353]
[-123.49179840 -140.74902344]
[-135.48605347 -149.75668335]
[-147.48030090 -158.76434326]
[-159.47454834 -167.77200317]
[-171.46881104 -176.77966309]
[-183.23399353 -167.34402466]
[-196.97642517 -161.13145447]
[-211.83227539 -158.53248596]
[-226.86767578 -159.71047974]
[-241.13748169 -164.59140015]
[-253.74468994 -172.86842346]
[-263.89678955 -184.02125549]
[-270.95562744 -197.34880066]
[-274.47747803 -212.01329041]
[-274.24093628 -227.09291077]
[-270.26089478 -241.63973999]
[-262.78753662 -254.73933411]
[-252.29061890 -265.56826782]
[-239.43002319 -273.44580078]
[-225.01414490 -277.87677002]
[-209.94920349 -278.58261108]
[-195.18217468 -275.51898193]
[-181.64134216 -268.87847900]
[-170.17788696 -259.07846069]
[-161.51240540 -246.73503113]
[-156.18963623 -232.62408447]
[-154.54414368 -217.63264465]
[-156.67939758 -202.70309448]
[-162.46115112 -188.77391052]
[-150.46688843 -179.76625061]
[-138.47264099 -170.75859070]
[-126.47839355 -161.75093079]
[-114.48413849 -152.74328613]
[-102.48988342 -143.73562622]
[-90.49563599 -134.72796631]
[-78.50138092 -125.72029877]
[-66.50713348 -116.71264648]
[-70.79670715 -131.08621216]
[-68.55398560 -145.91760254]
[-60.20637894 -158.38024902]
[-47.34478378 -166.09901428]
[-32.42036057 -167.60285950]
[-18.27740479 -162.60517883]
[-7.61128473 -152.05844116]
[-2.45474982 -137.97262573]
[-3.79053330 -123.03221893]
[-11.36406136 -110.08456421]
[-23.73196983 -101.59722900]
[-38.53718185 -99.18773651]
[-52.95672989 -103.31451416]
[-39.06537628 -97.94053650]
[-36.78803253 -82.28409576]
[-27.64540863 -70.39240265]
[-18.50278473 -58.50070190]
[-9.36016083 -46.60900879]
[-0.21753660 -34.71731186]
[8.92508793 -22.82561684]
[18.06771088 -10.93392181]
[27.21033669 0.95777410]
[36.48675919 12.74539471]
[52.80766296 11.38987637]
[66.87741089 20.09074783]
[73.07866669 35.60576248]
[68.79839325 51.92794800]
[78.46903229 63.39436340]
[88.13967133 74.86077881]
[97.81031036 86.32720184]
[111.30376434 92.87905884]
[126.29514313 93.38748932]
[141.28652954 93.89591980]
[156.27790833 94.40435791]
[172.31288147 88.89836884]
[182.04261780 102.78247833]
[171.39456177 115.97547913]
[155.76947021 109.39573669]
[140.77809143 108.88730621]
[125.78671265 108.37886810]
[110.79532623 107.87043762]
[104.70433807 121.57882690]
[98.61388397 135.28598022]
[109.03917694 146.07084656]
[119.46446991 156.85571289]
[129.88975525 167.64057922]
[143.34471130 166.32189941]
[154.92012024 172.92088318]
[160.47462463 184.81723022]
[158.17144775 197.54460144]
[168.35034180 208.56231689]
[184.16256714 212.91041565]
[188.04072571 228.84440613]
[175.99531555 239.97276306]
[160.41761780 234.84757996]
[157.33264160 218.74122620]
[147.15373230 207.72351074]
[130.37419128 207.80209351]
[118.46598053 195.50718689]
[119.10489655 178.06587219]
[108.67960358 167.28100586]
[98.25431061 156.49613953]
[87.82901764 145.71127319]
[78.24859619 157.25318909]
[65.50385284 165.16339111]
[50.90902710 168.62622070]
[35.96915054 167.28454590]
[22.22482872 161.27674866]
[11.09338474 151.22235107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 99]
[10 98]
[11 97]
[12 96]
[17 92]
[19 91]
[20 90]
[21 89]
[22 88]
[23 87]
[24 86]
[25 85]
[26 84]
[28 82]
[29 69]
[30 68]
[31 67]
[32 66]
[33 65]
[34 64]
[35 63]
[36 62]
[37 61]
[100 110]
[101 109]
[102 108]
[103 107]
[112 132]
[113 131]
[114 130]
[115 129]
[119 126]
[120 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
