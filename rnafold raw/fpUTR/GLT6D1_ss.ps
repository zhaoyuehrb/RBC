%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUCCUAGAUCAAGAAGACUUCCUCAUCAAGACCUCAUUCUAUUUGCACAGCCCUGCAGUGGAGAGAUUUAUUGCGUUUCUUUCAUGCAAUCAACGCAGACUUUGAUGUGAACACGGGGAGAGACAGUGCACGUGCAGCUGACCCACGGGGAACAGUCAGCCCCGGGCACUUGAAGGAGAACAGAGGCUUCCCUAACUCAAGUCGCUGUCUCCUGCCAGCUGAACAUUCUAGAAGCAACCUCUAAGGAGAGA\
) } def
/len { sequence length } bind def

/coor [
[105.63613892 299.27169800]
[102.27725983 283.58419800]
[112.55902863 271.26898193]
[112.55902863 256.26898193]
[112.55902863 241.26898193]
[112.55902863 226.26898193]
[112.55902863 211.26898193]
[112.55902863 196.26898193]
[112.46662903 181.26925659]
[112.28182983 166.27040100]
[112.09703827 151.27153015]
[105.05462646 148.69192505]
[93.54438019 158.31036377]
[90.96980286 143.53268433]
[83.92738342 140.95306396]
[74.09812927 152.28381348]
[64.26886749 163.61454773]
[54.43961334 174.94529724]
[44.68033981 186.33636475]
[34.99141693 197.78733826]
[36.11710358 213.32344055]
[26.12803650 224.79833984]
[11.30979633 225.77577209]
[1.62087548 237.22674561]
[5.44359255 252.26556396]
[-0.33462662 266.66668701]
[-13.49193954 274.89254761]
[-28.96908951 273.78015137]
[-40.81480026 263.75723267]
[-44.47414780 248.67781067]
[-38.54004288 234.34022522]
[-25.29427147 226.25758362]
[-9.83009911 227.53781128]
[-0.14117783 216.08683777]
[-1.63045740 201.31126404]
[8.03236294 189.56033325]
[23.54044342 188.09841919]
[33.22936630 176.64744568]
[35.14523315 169.53131104]
[43.10887146 165.11602783]
[52.93812943 153.78529358]
[62.76738739 142.45455933]
[72.59664917 131.12380981]
[68.07875824 119.57096100]
[67.63033295 108.30374908]
[70.64111328 98.59646606]
[76.14189911 91.38149261]
[64.17163849 82.34197235]
[52.20138168 73.30245209]
[40.23112106 64.26293182]
[28.26086426 55.22341156]
[22.42212486 59.31701660]
[15.40047073 61.67583466]
[7.72183704 61.96070099]
[0.00778744 59.99433517]
[-7.07478380 55.78759766]
[-12.87088585 49.55007553]
[-16.79673576 41.68325424]
[-31.73274803 40.29923248]
[-46.66876221 38.91520691]
[-61.60477448 37.53118134]
[-76.54078674 36.14715576]
[-91.47679901 34.76313019]
[-106.41281128 33.37910461]
[-121.34882355 31.99507904]
[-136.01261902 39.33709717]
[-149.55206299 30.08423424]
[-148.03894043 13.75504303]
[-133.02981567 7.14759445]
[-119.96479797 17.05906487]
[-105.02878571 18.44309044]
[-90.09277344 19.82711601]
[-75.15676117 21.21114159]
[-60.22074890 22.59516716]
[-45.28473663 23.97919273]
[-30.34872246 25.36321831]
[-15.41271114 26.74724388]
[-7.91271067 13.75686264]
[-16.57931900 1.51390862]
[-25.24592590 -10.72904491]
[-33.91253281 -22.97199821]
[-42.57913971 -35.21495056]
[-51.24574661 -47.45790482]
[-59.91235733 -59.70085907]
[-68.57896423 -71.94381714]
[-77.24556732 -84.18676758]
[-94.15539551 -91.50904846]
[-95.06047058 -109.04660034]
[-103.87724304 -121.18185425]
[-112.84285736 -133.20756531]
[-121.95594025 -145.12191772]
[-131.14224243 -156.97990417]
[-140.40141296 -168.78108215]
[-149.66059875 -180.58226013]
[-158.91976929 -192.38342285]
[-168.17893982 -204.18460083]
[-183.67985535 -203.47666931]
[-196.61791992 -212.04324341]
[-202.01817322 -226.59030151]
[-197.80412292 -241.52420044]
[-185.59613037 -251.10255432]
[-170.08845520 -251.64228821]
[-157.24407959 -242.93586731]
[-152.00195312 -228.33108521]
[-156.37776184 -213.44377136]
[-147.11859131 -201.64260864]
[-137.85942078 -189.84143066]
[-128.60025024 -178.04025269]
[-119.34107208 -166.23907471]
[-112.75823212 -162.92604065]
[-110.04159546 -154.23500061]
[-100.92851257 -142.32066345]
[-96.42311096 -140.81463623]
[-92.80445099 -136.47837830]
[-91.74198914 -129.99864197]
[-82.92520905 -117.86338043]
[-71.04706573 -115.67003632]
[-63.59960938 -105.65653992]
[-65.00261688 -92.85337830]
[-56.33600998 -80.61042023]
[-47.66940308 -68.36746979]
[-39.00279617 -56.12451172]
[-30.33618736 -43.88156128]
[-21.66957855 -31.63860703]
[-13.00297165 -19.39565277]
[-4.33636427 -7.15269899]
[4.33024311 5.09025478]
[34.16325760 15.48232460]
[37.30038452 43.25315475]
[49.27064133 52.29267502]
[61.24090195 61.33219528]
[73.21115875 70.37171173]
[85.18141937 79.41123199]
[121.71339417 74.59771729]
[137.01727295 118.69107819]
[151.54142761 114.94283295]
[162.97038269 104.00256348]
[177.22731018 108.31407928]
[191.75144958 104.56583405]
[206.27558899 100.81758881]
[220.79972839 97.06934357]
[235.32386780 93.32109833]
[249.84800720 89.57285309]
[252.40150452 72.12573242]
[266.79602051 58.21414185]
[289.05776978 55.60469437]
[299.16317749 44.51956177]
[302.61831665 36.09482193]
[309.46206665 33.36108780]
[319.70327759 22.40129280]
[329.94451904 11.44149590]
[340.18576050 0.48169857]
[350.42700195 -10.47809887]
[346.53930664 -25.40758514]
[351.36199951 -40.06177521]
[363.35614014 -49.76456833]
[378.69442749 -51.41984177]
[392.48251343 -44.49940109]
[400.32064819 -31.21153450]
[399.70770264 -15.79635239]
[390.83926392 -3.17278314]
[376.54522705 2.63103867]
[361.38677979 -0.23686559]
[351.14553833 10.72293186]
[340.90432739 21.68272781]
[330.66308594 32.64252472]
[320.42184448 43.60232162]
[310.24832153 54.62499619]
[300.14288330 65.71012878]
[302.72250366 72.75254059]
[316.80734253 67.59330750]
[328.60852051 58.33415604]
[341.06124878 66.69654083]
[336.95623779 81.12390137]
[321.96655273 81.67813873]
[307.88174438 86.83737183]
[310.46136475 93.87978363]
[325.33602905 95.81476593]
[340.21069336 97.74975586]
[355.08535767 99.68474579]
[369.96005249 101.61973572]
[384.83471680 103.55472565]
[393.71969604 101.56188965]
[399.88027954 105.60626984]
[414.72998047 107.72435760]
[429.57968140 109.84245300]
[444.33413696 104.13134766]
[455.84133911 113.58829498]
[470.69104004 115.70638275]
[485.54074097 117.82447815]
[500.39044189 119.94256592]
[515.24017334 122.06066132]
[525.25183105 110.32313538]
[540.02661133 105.88351440]
[554.84985352 110.15846252]
[564.99151611 121.78385925]
[567.21545410 137.05007935]
[560.81201172 151.08573914]
[547.82452393 159.41209412]
[532.39721680 159.37225342]
[519.45288086 150.97891235]
[513.12207031 136.91036987]
[498.27233887 134.79226685]
[483.42263794 132.67417908]
[468.57293701 130.55609131]
[453.72323608 128.43798828]
[440.03094482 134.30059814]
[427.46160889 124.69215393]
[412.61190796 122.57406616]
[397.76217651 120.45597076]
[382.89971924 118.42938995]
[368.02505493 116.49440765]
[353.15039062 114.55941772]
[338.27572632 112.62442780]
[323.40103149 110.68943787]
[308.52636719 108.75445557]
[287.81469727 122.01030731]
[266.10131836 118.81523895]
[253.59625244 104.09699249]
[239.07211304 107.84523773]
[224.54797363 111.59348297]
[210.02383423 115.34172821]
[195.49969482 119.08997345]
[180.97555542 122.83821869]
[170.58546448 133.51039124]
[155.28967285 129.46697998]
[140.76551819 133.21522522]
[155.30865479 136.88906860]
[169.85179138 140.56291199]
[184.84297180 140.04829407]
[198.79371643 145.55981445]
[209.38529968 156.18141174]
[214.85733032 170.14768982]
[214.30029297 185.13734436]
[207.80679321 198.65898132]
[196.45610046 208.46517944]
[182.13478088 212.92608643]
[167.22314453 211.30024719]
[154.19964600 203.85791016]
[145.22888184 191.83604431]
[141.80192566 177.23503113]
[134.44891357 164.16088867]
[127.09590149 151.08674622]
[127.28069305 166.08560181]
[127.46549225 181.08447266]
[130.69296265 189.59901428]
[127.55902863 196.26898193]
[127.55902863 211.26898193]
[127.55902863 226.26898193]
[127.55902863 241.26898193]
[127.55902863 256.26898193]
[127.55902863 271.26898193]
[137.84078979 283.58419800]
[134.48191833 299.27169800]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 252]
[4 251]
[5 250]
[6 249]
[7 248]
[8 247]
[9 245]
[10 244]
[11 243]
[15 43]
[16 42]
[17 41]
[18 40]
[19 38]
[20 37]
[23 34]
[24 33]
[47 133]
[48 132]
[49 131]
[50 130]
[51 129]
[58 77]
[59 76]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[65 70]
[78 127]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[88 116]
[89 115]
[90 112]
[91 111]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[135 227]
[136 226]
[138 224]
[139 223]
[140 222]
[141 221]
[142 220]
[143 219]
[146 169]
[147 168]
[149 167]
[150 166]
[151 165]
[152 164]
[153 163]
[177 216]
[178 215]
[179 214]
[180 213]
[181 212]
[182 211]
[184 210]
[185 209]
[186 208]
[188 206]
[189 205]
[190 204]
[191 203]
[192 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
