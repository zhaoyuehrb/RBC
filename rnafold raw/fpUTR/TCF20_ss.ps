%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCUCCCCCGCCUCGGCUCAGGAGUUGUUUUCCUCCCCCGUGGUCGCCGGGCUGGCAAGGGGUCUGGGGCAAGGGCCAGGGAAGGAUGCGGCUGCAAAGGAGGGCUGUUGGCCUGCUGCUGUGCUGCUGAACAGU\
) } def
/len { sequence length } bind def

/coor [
[165.34791565 192.54696655]
[155.36180115 181.35421753]
[145.37570190 170.16145325]
[135.38960266 158.96870422]
[125.40350342 147.77593994]
[115.41740417 136.58319092]
[107.91788483 136.66856384]
[112.71504211 150.88078308]
[100.68070984 159.83482361]
[88.44620514 151.15628052]
[92.91886139 136.83929443]
[85.41934204 136.92466736]
[75.69061279 148.34182739]
[73.25421143 164.55899048]
[57.89465332 170.30493164]
[45.41252899 159.66873169]
[48.64838028 143.59201050]
[64.27344513 138.61309814]
[74.00217438 127.19593048]
[67.63327026 113.16570282]
[67.75933075 98.86253357]
[73.45408630 86.95159912]
[82.82962036 79.29507446]
[70.23487854 69.71994781]
[72.26105499 54.96380234]
[66.28504181 41.20563126]
[60.30902481 27.44746208]
[54.33300781 13.68929195]
[48.35699463 -0.06887761]
[42.38097763 -13.82704735]
[30.64436150 -19.31043053]
[25.97330093 -30.96132851]
[30.38085175 -42.28413773]
[24.71956253 -56.17477798]
[19.05827522 -70.06541443]
[13.39698792 -83.95605469]
[7.57795858 -97.78134918]
[1.60194206 -111.53952026]
[-4.37407446 -125.29769135]
[-10.81632614 -138.84381104]
[-17.71730232 -152.16209412]
[-30.93611336 -160.85539246]
[-29.92165184 -175.71540833]
[-43.14046097 -184.40872192]
[-42.12599945 -199.26873779]
[-49.02697754 -212.58702087]
[-55.92795181 -225.90530396]
[-62.71338654 -232.15145874]
[-62.83052444 -239.60621643]
[-69.42654419 -253.07814026]
[-76.02256775 -266.55004883]
[-82.61858368 -280.02197266]
[-89.21460724 -293.49386597]
[-95.81063080 -306.96578979]
[-102.40664673 -320.43771362]
[-117.62794495 -324.02188110]
[-126.94280243 -336.58242798]
[-125.95302582 -352.18865967]
[-115.12596893 -363.47177124]
[-99.57382965 -365.10424805]
[-86.63985443 -356.31527710]
[-82.43106842 -341.25469971]
[-88.93473053 -327.03372192]
[-82.33871460 -313.56182861]
[-75.74269104 -300.08990479]
[-69.14667511 -286.61798096]
[-62.55065155 -273.14605713]
[-55.95462799 -259.67416382]
[-49.35860825 -246.20223999]
[-42.60967255 -232.80627441]
[-35.70869827 -219.48799133]
[-28.80772209 -206.16972351]
[-16.08251572 -198.42901611]
[-16.60337257 -182.61639404]
[-3.87816548 -174.87570190]
[-4.39902306 -159.06306458]
[2.50195241 -145.74478149]
[5.82376146 -144.33769226]
[8.60107231 -141.20385742]
[10.00770092 -136.63075256]
[9.38409519 -131.27371216]
[15.36011124 -117.51554108]
[21.33612823 -103.75737000]
[26.93430901 -98.83318329]
[27.28762436 -89.61734009]
[32.94891357 -75.72669983]
[38.61020279 -61.83606339]
[44.27148819 -47.94542694]
[58.68561554 -38.00001526]
[56.13914490 -19.80306435]
[62.11516190 -6.04489374]
[68.09117889 7.71327543]
[74.06719208 21.47144508]
[80.04321289 35.22961426]
[86.01922607 48.98778534]
[98.18652344 57.57883453]
[96.58779144 73.31905365]
[119.64344788 76.70293427]
[134.01737976 98.55123138]
[126.61015320 126.59709167]
[136.59625244 137.78984070]
[146.58236694 148.98260498]
[156.56846619 160.17535400]
[166.55456543 171.36810303]
[176.54066467 182.56086731]
[186.65351868 193.63923645]
[196.89181519 204.60177612]
[207.13011169 215.56431580]
[217.36840820 226.52685547]
[227.60670471 237.48939514]
[237.84500122 248.45193481]
[248.20741272 259.29721069]
[258.69259644 270.02386475]
[269.17779541 280.75051880]
[282.09780884 281.69308472]
[290.61297607 290.91558838]
[290.52822876 303.06570435]
[300.76654053 314.02822876]
[316.56817627 314.31726074]
[327.47695923 325.75289917]
[327.02090454 341.55059814]
[315.47055054 352.33786011]
[299.67855835 351.71481323]
[289.01400757 340.05105591]
[289.80398560 324.26654053]
[279.56570435 313.30398560]
[262.55426025 309.14596558]
[258.45114136 291.23568726]
[247.96595764 280.50906372]
[237.48077393 269.78240967]
[230.49566650 267.17559814]
[226.88246155 258.69021606]
[216.64416504 247.72769165]
[206.40586853 236.76515198]
[196.16757202 225.80261230]
[185.92927551 214.84007263]
[175.69097900 203.87753296]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[4 102]
[5 101]
[6 100]
[12 19]
[13 18]
[23 97]
[25 95]
[26 94]
[27 93]
[28 92]
[29 91]
[30 90]
[33 88]
[34 87]
[35 86]
[36 85]
[37 83]
[38 82]
[39 81]
[40 77]
[41 76]
[43 74]
[45 72]
[46 71]
[47 70]
[49 69]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
[106 137]
[107 136]
[108 135]
[109 134]
[110 133]
[111 132]
[112 130]
[113 129]
[114 128]
[117 126]
[118 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
