%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACGCGCAGGCCGUUGGCGGGCGGGCCUCCCGGCGGAAGAGACGACAGCGGCGGAAACGCGCACAGGCGCAGCUGCGUCCUCUGGCUCCGGGCCCGGCUAGCUUCGCUCCAGAGAUUGCGCGGGCUCAGGGACUAGGCCCGUGGCCACACCCCCCCUUGCGACAAAGACCAAUGGAAGCGGGCGUUGCUGGUCGCUAAGAGAACCCUCGGCGGCAAG\
) } def
/len { sequence length } bind def

/coor [
[74.72502899 124.91001129]
[69.61504364 117.01013947]
[66.84261322 108.20482635]
[66.51799011 99.15621948]
[51.98817825 95.43003845]
[37.45835876 91.70385742]
[22.92854309 87.97767639]
[8.39872551 84.25150299]
[-6.13109159 80.52532196]
[-19.62158012 88.31277466]
[-34.30379868 84.32691956]
[-41.64481354 71.41780853]
[-56.20098114 67.79593658]
[-68.01043701 77.68749237]
[-83.20236206 78.71656036]
[-95.93657684 70.69760132]
[-101.44121552 56.88322830]
[-116.02298737 53.36585617]
[-130.60475159 49.84848785]
[-145.18652344 46.33111572]
[-159.76831055 42.81374359]
[-174.37492371 39.40105057]
[-189.00566101 36.09321594]
[-204.17234802 40.59678650]
[-214.88005066 30.24331474]
[-229.51077271 26.93547630]
[-244.14151001 23.62763786]
[-258.77221680 20.31980133]
[-277.73895264 27.15951729]
[-291.34902954 13.41961193]
[-306.06863403 10.53283787]
[-320.78823853 7.64606428]
[-335.50784302 4.75929022]
[-350.22741699 1.87251663]
[-365.25866699 6.80931425]
[-376.25897217 -3.23273206]
[-389.28067017 5.31557608]
[-404.16729736 2.17829061]
[-412.23657227 -10.28857231]
[-426.95614624 -13.17534637]
[-441.67575073 -16.06212044]
[-456.39535522 -18.94889450]
[-471.13528442 -21.73001671]
[-485.89477539 -24.40534592]
[-500.65426636 -27.08067513]
[-509.65036011 -25.53243828]
[-515.60565186 -29.90169334]
[-530.32519531 -32.78846741]
[-545.04479980 -35.67523956]
[-559.76440430 -38.56201172]
[-574.79565430 -33.62521744]
[-585.79595947 -43.66726303]
[-600.51556396 -46.55403519]
[-615.23516846 -49.44081116]
[-623.61712646 -36.75969315]
[-636.21673584 -28.25566483]
[-651.11260986 -25.22552109]
[-666.03320312 -28.13134003]
[-678.70330811 -36.53000641]
[-687.19073486 -49.14078140]
[-690.20129395 -64.04061127]
[-687.27587891 -78.95738983]
[-678.86053467 -91.61640930]
[-666.23858643 -100.08726501]
[-651.33483887 -103.07820129]
[-636.42187500 -100.13314056]
[-623.77398682 -91.70117188]
[-615.31970215 -79.06810760]
[-612.34838867 -64.16040802]
[-597.62878418 -61.27363205]
[-582.90917969 -58.38685989]
[-568.93078613 -63.53013992]
[-556.87762451 -53.28161240]
[-542.15802002 -50.39483643]
[-527.43847656 -47.50806427]
[-512.71887207 -44.62128830]
[-497.97894287 -41.84016800]
[-483.21945190 -39.16483688]
[-468.45993042 -36.48950958]
[-461.32202148 -38.38834381]
[-453.50857544 -33.66849136]
[-438.78897095 -30.78171730]
[-424.06939697 -27.89494324]
[-409.34979248 -25.00816917]
[-397.16943359 -33.50372314]
[-382.20053101 -30.78581238]
[-373.37219238 -17.95232964]
[-359.39379883 -23.09560776]
[-347.34063721 -12.84708023]
[-332.62106323 -9.96030712]
[-317.90145874 -7.07353306]
[-303.18185425 -4.18675947]
[-288.46224976 -1.29998553]
[-280.53472900 -7.73572206]
[-270.15567017 -8.77042675]
[-260.72470093 -3.82276297]
[-255.46438599 5.68907261]
[-240.83366394 8.99691010]
[-226.20294189 12.30474854]
[-211.57220459 15.61258698]
[-197.45201111 10.87241459]
[-185.69781494 21.46248627]
[-171.06709290 24.77032471]
[-163.85408020 23.18033791]
[-156.25093079 28.23197174]
[-141.66915894 31.74934196]
[-127.08738708 35.26671219]
[-112.50561523 38.78408432]
[-97.92384338 42.30145645]
[-86.72650146 32.51587677]
[-71.73679352 31.18440056]
[-58.68473053 39.02639771]
[-52.68360901 53.21416473]
[-45.44852829 51.72781372]
[-37.91863251 56.88798904]
[-25.27110672 49.10494995]
[-10.48272514 52.67684555]
[-2.40491199 65.99550629]
[12.12490463 69.72167969]
[26.65472221 73.44786072]
[41.18453979 77.17404175]
[55.71435547 80.90022278]
[70.24417114 84.62640381]
[81.41268158 70.86836243]
[98.50652313 64.41127777]
[117.07127380 67.53049469]
[131.96635437 79.92459106]
[138.78767395 98.65040588]
[153.64860535 96.61254120]
[168.50952148 94.57467651]
[181.13058472 85.03424835]
[194.79101562 90.97071838]
[209.65194702 88.93285370]
[224.51286316 86.89498138]
[228.62686157 83.70143890]
[233.10639954 82.51940155]
[237.12545776 83.15196991]
[240.05543518 85.10342407]
[254.99028015 83.70679474]
[269.92510986 82.31017303]
[284.85995483 80.91354370]
[299.79479980 79.51691437]
[314.72964478 78.12028503]
[324.80001831 66.23646545]
[339.96597290 65.03284454]
[351.23330688 74.70664978]
[366.16815186 73.31002045]
[381.10299683 71.91339111]
[384.26184082 59.90248489]
[390.93795776 49.45914459]
[400.47567749 41.58126831]
[411.94674683 37.01614380]
[424.24063110 36.18959427]
[436.17211914 39.16629410]
[446.59555054 45.64497375]
[454.51477051 54.98884964]
[459.17840576 66.28818512]
[474.15948486 65.53537750]
[489.14059448 64.78256989]
[499.55374146 52.89384842]
[515.32885742 51.93383789]
[527.10681152 62.47210693]
[527.89996338 78.25647736]
[517.23779297 89.92237091]
[501.44592285 90.54861450]
[489.89340210 79.76367188]
[474.91229248 80.51647186]
[459.93121338 81.26927948]
[453.66860962 97.82633972]
[440.75152588 110.00773621]
[423.75482178 115.32144928]
[406.09463501 112.65084839]
[391.34173584 102.48896027]
[382.49960327 86.84823608]
[367.56478882 88.24486542]
[352.62994385 89.64148712]
[343.35156250 101.23662567]
[328.22540283 102.86576080]
[316.12625122 93.05512238]
[301.19143677 94.45175171]
[286.25659180 95.84838104]
[271.32174683 97.24501038]
[256.38690186 98.64163971]
[241.45207214 100.03826904]
[226.55073547 101.75591278]
[211.68980408 103.79377747]
[196.82888794 105.83164215]
[185.27078247 115.22630310]
[170.54739380 109.43560028]
[155.68646240 111.47346497]
[140.82554626 113.51132965]
[133.70127869 126.71150970]
[140.15408325 140.25260925]
[146.60690308 153.79370117]
[153.05970764 167.33479309]
[159.51251221 180.87588501]
[165.96533203 194.41697693]
[171.17962646 198.46618652]
[173.25865173 203.74726868]
[172.40277100 208.44035339]
[178.46447754 222.16098022]
[184.52618408 235.88160706]
[198.07775879 245.11671448]
[196.58604431 261.44787598]
[181.58560181 268.07498169]
[168.50759888 258.18066406]
[170.80555725 241.94331360]
[164.74385071 228.22268677]
[158.68214417 214.50205994]
[152.42424011 200.86979675]
[145.97142029 187.32870483]
[139.51861572 173.78761292]
[133.06579590 160.24650574]
[126.61299133 146.70541382]
[120.16017914 133.16432190]
[110.48420715 136.67729187]
[100.39921570 137.47940063]
[90.63755798 135.60638428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 123]
[5 122]
[6 121]
[7 120]
[8 119]
[9 118]
[12 115]
[13 113]
[17 109]
[18 108]
[19 107]
[20 106]
[21 105]
[22 103]
[23 102]
[25 100]
[26 99]
[27 98]
[28 97]
[30 93]
[31 92]
[32 91]
[33 90]
[34 89]
[36 87]
[39 84]
[40 83]
[41 82]
[42 81]
[43 79]
[44 78]
[45 77]
[47 76]
[48 75]
[49 74]
[50 73]
[52 71]
[53 70]
[54 69]
[128 191]
[129 190]
[130 189]
[132 187]
[133 186]
[134 185]
[138 184]
[139 183]
[140 182]
[141 181]
[142 180]
[143 179]
[146 176]
[147 175]
[148 174]
[157 168]
[158 167]
[159 166]
[192 215]
[193 214]
[194 213]
[195 212]
[196 211]
[197 210]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
