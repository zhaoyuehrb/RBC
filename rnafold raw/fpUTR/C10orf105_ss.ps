%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUAGACAAAGCCAGGUCCAGCUGGGGAGUGACGGGGAGGCCACUCUGCUGGCCAGGCUGACCGAGGGCUGCAGGGCACAGCAGAGCCUGGCAGGGCUGGGGUCACAGGCACUGCCCAGGGCUCCUUGGGCCUCCCUUCCACAGCUGAGAAGACCUCUCCACGGAGCUCCGGACGGCUGGGGUCUGGCUCUGAGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[251.10755920 488.43743896]
[237.82162476 495.40051270]
[223.00529480 497.74066162]
[208.22009277 495.21127319]
[195.02427673 488.07894897]
[184.80857849 477.09533691]
[178.64965820 463.41806030]
[177.19664001 448.48861694]
[180.60264587 433.88043213]
[188.50871277 421.13311768]
[200.08158875 411.59011841]
[214.10159302 406.25726318]
[229.09111023 405.69653320]
[243.47035217 409.96704102]
[255.72584534 418.62069702]
[249.15730286 405.13534546]
[242.58876038 391.65002441]
[236.02021790 378.16470337]
[229.45167542 364.67935181]
[222.46485901 351.40591431]
[215.06660461 338.35729980]
[207.66835022 325.30871582]
[200.27009583 312.26013184]
[192.87184143 299.21151733]
[185.47358704 286.16293335]
[172.46556091 278.90756226]
[172.38981628 263.08654785]
[164.99156189 250.03793335]
[157.59330750 236.98934937]
[151.10057068 250.51133728]
[136.51719666 254.02206421]
[124.58199310 244.93630981]
[124.08373260 229.94458008]
[135.38932800 220.08641052]
[150.17268372 222.62042236]
[143.81570435 209.03407288]
[137.45872498 195.44772339]
[131.10176086 181.86137390]
[124.74478149 168.27502441]
[118.38780975 154.68867493]
[112.03083038 141.10232544]
[105.67385864 127.51597595]
[99.31687927 113.92963409]
[86.46434021 114.78630066]
[74.09995270 103.57754517]
[60.88151169 96.48721313]
[47.66306686 89.39688873]
[34.44462585 82.30655670]
[21.22618103 75.21623230]
[8.00773716 68.12590790]
[-5.21070623 61.03557587]
[-18.42914963 53.94524765]
[-31.70260048 46.95843887]
[-45.03024673 40.07556915]
[-58.35789108 33.19270325]
[-73.24883270 37.76409531]
[-86.66690826 30.59403038]
[-90.93326569 16.36962318]
[-104.26091003 9.48675442]
[-120.07282257 10.02910328]
[-127.83080292 -2.68557191]
[-136.89973450 -3.84471107]
[-141.31170654 -9.78158474]
[-154.53015137 -16.87191200]
[-171.34609985 -19.03067398]
[-173.92681885 -35.78705215]
[-158.53970337 -42.90554428]
[-147.43983459 -30.09035492]
[-134.22138977 -23.00002861]
[-120.94793701 -16.01321793]
[-106.08930969 -17.04787445]
[-97.37804413 -3.84089041]
[-84.05039978 3.04197788]
[-69.98203278 -1.71373129]
[-56.36785889 5.07661819]
[-51.47502136 19.86505699]
[-38.14737701 26.74792480]
[-24.81973267 33.63079071]
[-17.42813683 33.90702057]
[-11.33882236 40.72680664]
[1.87962115 47.81713104]
[15.09806442 54.90745926]
[28.31650925 61.99778748]
[41.53495407 69.08811188]
[54.75339508 76.17844391]
[67.97183990 83.26876831]
[81.19028473 90.35910034]
[94.51792908 83.47622681]
[96.38862610 68.59333801]
[98.25931549 53.71044540]
[100.13001251 38.82755280]
[102.00070190 23.94465828]
[103.75503540 9.04760075]
[105.39289093 -5.86271191]
[107.03075409 -20.77302361]
[108.55204010 -35.69568253]
[102.14100647 -50.15974808]
[111.03610992 -62.10656357]
[112.44072723 -77.04064941]
[113.84535217 -91.97474670]
[103.57383728 -103.98605347]
[104.88733673 -119.73566437]
[117.00656891 -129.87960815]
[132.74140930 -128.39967346]
[142.75666809 -116.17387390]
[141.11044312 -100.45555115]
[128.77944946 -90.57012177]
[127.37481689 -75.63603210]
[125.97019958 -60.70194244]
[132.48170471 -47.30606079]
[123.48612976 -34.29105759]
[125.99170685 -27.33160019]
[121.94106293 -19.13516617]
[120.30320740 -4.22485352]
[118.66534424 10.68545914]
[121.06184387 17.68322754]
[116.88359833 25.81535339]
[115.01290131 40.69824600]
[113.14221191 55.58113861]
[111.27151489 70.46403503]
[109.40082550 85.34692383]
[117.85343170 72.95526123]
[131.80827332 67.45411682]
[146.44291687 70.74453735]
[156.70005798 81.68945312]
[159.03509521 96.50659180]
[152.64111328 110.07556152]
[139.72769165 117.70729828]
[124.75735474 116.76449585]
[112.90322876 107.57265472]
[119.26020813 121.15900421]
[125.61717987 134.74534607]
[131.97415161 148.33169556]
[138.33113098 161.91804504]
[144.68811035 175.50439453]
[151.04507446 189.09074402]
[157.40205383 202.67709351]
[163.75903320 216.26344299]
[170.64190674 229.59109497]
[178.04014587 242.63967896]
[185.43840027 255.68827820]
[198.97561646 263.87698364]
[198.52218628 278.76467896]
[205.92044067 291.81326294]
[213.31869507 304.86187744]
[220.71694946 317.91046143]
[228.11520386 330.95904541]
[235.51345825 344.00765991]
[239.34954834 346.08078003]
[242.05030823 348.97790527]
[243.49600220 352.23931885]
[243.72900391 355.41378784]
[242.93701172 358.11080933]
[249.50555420 371.59616089]
[256.07409668 385.08148193]
[262.64263916 398.56680298]
[269.21118164 412.05215454]
[277.50814819 424.54855347]
[287.38729858 435.83581543]
[297.26647949 447.12307739]
[307.14562988 458.41030884]
[322.05679321 463.69885254]
[324.61691284 478.37179565]
[334.49606323 489.65902710]
[344.37524414 500.94628906]
[354.25439453 512.23352051]
[364.13357544 523.52081299]
[374.01272583 534.80804443]
[380.14984131 537.30212402]
[383.58486938 541.84228516]
[384.01754761 546.60595703]
[393.53909302 558.19647217]
[403.06066895 569.78692627]
[412.58221436 581.37744141]
[422.10379028 592.96795654]
[437.74136353 592.94995117]
[449.69876099 603.02740479]
[452.33004761 618.44201660]
[444.39282227 631.91552734]
[429.63482666 637.08605957]
[415.02429199 631.51239014]
[407.45986938 617.82611084]
[410.51327515 602.48950195]
[400.99172974 590.89904785]
[391.47015381 579.30853271]
[381.94860840 567.71801758]
[372.42703247 556.12750244]
[362.72549438 544.68719482]
[352.84631348 533.39996338]
[342.96716309 522.11273193]
[333.08798218 510.82546997]
[323.20883179 499.53820801]
[313.32965088 488.25094604]
[299.12515259 483.76977539]
[295.85839844 468.28948975]
[285.97921753 457.00222778]
[276.10006714 445.71499634]
[266.22088623 434.42773438]
[269.43984985 449.07827759]
[267.79608154 463.98791504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 157]
[16 156]
[17 155]
[18 154]
[19 153]
[20 148]
[21 147]
[22 146]
[23 145]
[24 144]
[25 143]
[27 141]
[28 140]
[29 139]
[35 138]
[36 137]
[37 136]
[38 135]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[45 87]
[46 86]
[47 85]
[48 84]
[49 83]
[50 82]
[51 81]
[52 80]
[53 78]
[54 77]
[55 76]
[58 73]
[59 72]
[61 70]
[63 69]
[64 68]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 115]
[94 114]
[95 113]
[96 111]
[98 109]
[99 108]
[100 107]
[158 198]
[159 197]
[160 196]
[161 195]
[163 193]
[164 192]
[165 191]
[166 190]
[167 189]
[168 188]
[171 187]
[172 186]
[173 185]
[174 184]
[175 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
