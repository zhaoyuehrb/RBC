%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUUUGGGGGCCGGCGGAGGCGGCGCCGUGGCCGGGAGAAAGUGUCUCUCAUUUAGGAGGGUUUGCAGGUCCAGAGUAAAGUCACUGAAGAGUGGAAGCGAGGAAGGAACAGG\
) } def
/len { sequence length } bind def

/coor [
[180.37615967 210.16072083]
[184.24679565 195.66871643]
[193.25842285 183.67745972]
[206.10203552 175.92880249]
[220.91381836 173.54838562]
[207.66114807 166.52224731]
[194.40846252 159.49612427]
[181.15577698 152.47000122]
[166.28686523 153.34443665]
[157.71846008 140.04432678]
[144.46578979 133.01818848]
[131.21310425 125.99206543]
[117.96042633 118.96594238]
[104.70774078 111.93981171]
[89.84506226 109.91481781]
[75.19574738 113.13937378]
[60.54644012 116.36392975]
[48.73220062 126.88696289]
[34.63919449 122.06654358]
[22.82495308 132.58958435]
[8.73194695 127.76915741]
[-5.91736126 130.99371338]
[-20.56666946 134.21827698]
[-34.73570633 143.52819824]
[-47.60417557 132.49014282]
[-40.55983353 117.06893158]
[-23.79122543 119.56896973]
[-9.14191818 116.34440613]
[5.50739050 113.11985016]
[16.27381516 102.82746124]
[31.41463852 107.41723633]
[42.18106079 97.12483978]
[57.32188416 101.71462250]
[71.97119141 98.49006653]
[86.62049866 95.26551056]
[91.02333832 80.92622375]
[80.70784760 70.03629303]
[70.39235687 59.14635849]
[60.07686615 48.25642776]
[49.76137161 37.36649323]
[39.44588089 26.47656250]
[23.51218987 24.60653114]
[15.16244125 10.90758038]
[20.80184937 -4.11162853]
[36.10434341 -8.92964268]
[49.33115768 0.14950565]
[50.33581161 16.16107178]
[60.65130615 27.05100250]
[70.96679688 37.94093704]
[81.28228760 48.83086777]
[91.59777832 59.72079849]
[101.91326904 70.61073303]
[108.57542419 57.17139816]
[121.04385376 48.83243561]
[136.00878906 47.80743408]
[149.49777222 54.36848450]
[157.93013000 66.77394104]
[159.06747437 81.73075867]
[152.60789490 95.26863098]
[140.26609802 103.79389954]
[125.31824493 105.04351807]
[111.73387146 98.68713379]
[124.98654938 105.71326447]
[138.23922729 112.73938751]
[151.49191284 119.76551819]
[164.74459839 126.79164124]
[180.56143188 126.41976166]
[188.18191528 139.21731567]
[201.43458557 146.24345398]
[214.68727112 153.26957703]
[227.93995667 160.29570007]
[242.27923584 164.69853210]
[257.19131470 166.32032776]
[272.10336304 167.94210815]
[281.62707520 158.30549622]
[294.77798462 155.99000549]
[306.66717529 161.62693787]
[313.00686646 172.93321228]
[327.86953735 174.95822144]
[335.86968994 165.95114136]
[347.13098145 162.02442932]
[358.75921631 164.06269836]
[367.82617188 171.43324280]
[372.10690308 182.17582703]
[386.83816528 185.00250244]
[401.56942749 187.82919312]
[416.30068970 190.65586853]
[431.03195190 193.48254395]
[446.33889771 187.59794617]
[458.91671753 198.12083435]
[455.82635498 214.22616577]
[440.24694824 219.34616089]
[428.20526123 208.21380615]
[413.47399902 205.38713074]
[398.74273682 202.56044006]
[384.01150513 199.73376465]
[369.28024292 196.90708923]
[354.90670776 208.08506775]
[336.59420776 205.29293823]
[325.84454346 189.82090759]
[310.98187256 187.79589844]
[298.11218262 198.52825928]
[281.12121582 196.65934753]
[270.48159790 182.85417175]
[255.56951904 181.23239136]
[240.65744019 179.61061096]
[251.58004761 189.89151001]
[257.86276245 203.51235962]
[258.59295654 218.49456787]
[253.66459656 232.66181946]
[243.79354858 243.95617676]
[230.41368103 250.73698425]
[215.46859741 252.01928711]
[201.12921143 247.61679077]
[189.47846985 238.16900635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 71]
[6 70]
[7 69]
[8 68]
[10 66]
[11 65]
[12 64]
[13 63]
[14 62]
[15 35]
[16 34]
[17 33]
[19 31]
[21 29]
[22 28]
[23 27]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[72 106]
[73 105]
[74 104]
[78 101]
[79 100]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
