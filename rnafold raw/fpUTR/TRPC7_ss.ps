%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACGGUUCUGCCUCGGAAGGCGAGUUUUUACCACUGCAACACAAAGAACAGAGGAGCGCGCUUUCACAUCGUUGCAACUUAACUCACUUGACCAGCUCUAUACUUCAGCACCACGGAGAGCGGUACAUCCUUGGCUACCACCCAUGGGGAGCCAGCUUCUGGCGACUCAACACCGGAUUCCGGUCAUCUAGAGGAGGAACAAGCCUGCGUAUUACACCCUCA\
) } def
/len { sequence length } bind def

/coor [
[100.60725403 332.04711914]
[107.16997528 318.49185181]
[116.49359131 306.66461182]
[128.14202881 297.11849976]
[141.57046509 290.30007935]
[137.80738831 275.77975464]
[134.04429626 261.25946045]
[130.28120422 246.73916626]
[126.51811981 232.21885681]
[115.83533478 221.83967590]
[119.86311340 206.53976440]
[116.10002899 192.01945496]
[112.33693695 177.49916077]
[108.57385254 162.97885132]
[72.71091461 157.40342712]
[45.74587631 133.11097717]
[32.10938644 139.35968018]
[18.47289848 145.60836792]
[4.83641052 151.85705566]
[-8.80007744 158.10575867]
[-22.43656540 164.35444641]
[-36.07305527 170.60314941]
[-45.39558029 183.38598633]
[-60.18913269 181.65394592]
[-73.82562256 187.90263367]
[-87.46211243 194.15133667]
[-101.09859467 200.40002441]
[-114.73508453 206.64871216]
[-128.37158203 212.89741516]
[-130.74851990 216.50752258]
[-133.83766174 218.93438721]
[-137.18128967 220.09939575]
[-140.34301758 220.08007812]
[-142.95663452 219.08975220]
[-156.92341614 224.56050110]
[-170.89019775 230.03125000]
[-171.98963928 245.25471497]
[-179.59286499 258.48928833]
[-192.19024658 267.10720825]
[-207.28057861 269.39739990]
[-221.86763000 264.90515137]
[-233.05516052 254.52236938]
[-238.62187195 240.31060791]
[-237.46249390 225.09158325]
[-229.80720520 211.88706970]
[-217.17597961 203.31881714]
[-202.07676697 201.08805847]
[-187.50750732 205.63772583]
[-176.36094666 216.06446838]
[-162.39416504 210.59371948]
[-148.42738342 205.12297058]
[-134.62026978 199.26092529]
[-120.98377991 193.01223755]
[-107.34729004 186.76353455]
[-93.71080780 180.51484680]
[-80.07431793 174.26614380]
[-66.43782806 168.01745605]
[-58.09067535 155.68154907]
[-42.32175064 156.96665955]
[-28.68526077 150.71795654]
[-15.04877281 144.46926880]
[-1.41228426 138.22058105]
[12.22420406 131.97187805]
[25.86069298 125.72318268]
[39.49718094 119.47448730]
[37.46059799 111.34328461]
[36.51174927 103.01479340]
[36.66713715 94.63386536]
[37.92405701 86.34626770]
[40.26065063 78.29615021]
[43.63627625 70.62351990]
[31.24552917 62.16956329]
[18.85478401 53.71560669]
[6.46403694 45.26164627]
[-9.50372887 46.81407547]
[-20.56932259 35.19804382]
[-18.24416924 19.32437897]
[-4.31192636 11.36999798]
[10.53978062 17.43682098]
[14.91799450 32.87089920]
[27.30874062 41.32485962]
[39.69948578 49.77881622]
[52.09023285 58.23277283]
[56.78515244 53.39180374]
[61.96654892 49.07551193]
[67.57609558 45.33248520]
[73.55064392 42.20485687]
[79.82293701 39.72784424]
[86.32236481 37.92932129]
[84.84553528 23.00219917]
[83.26359558 8.08584976]
[81.57662964 -6.81898594]
[79.88966370 -21.72382164]
[75.81815338 -29.89064980]
[78.28543854 -36.85031128]
[76.80860901 -51.77743149]
[75.33177948 -66.70455170]
[73.85495758 -81.63167572]
[72.37812805 -96.55879974]
[57.63726044 -100.02082825]
[44.82054520 -108.08374023]
[35.31824112 -119.87292480]
[30.16108322 -134.10958862]
[29.90848351 -149.24943542]
[34.58784485 -163.65020752]
[43.69157791 -175.74981689]
[56.23218918 -184.23579407]
[70.84935760 -188.18765259]
[85.95751953 -187.17669678]
[99.91786957 -181.31262207]
[111.21607971 -171.23149109]
[118.62660217 -158.02684021]
[121.34561157 -143.13101196]
[119.07816315 -128.15979004]
[112.07021332 -114.73714447]
[101.08193207 -104.31906891]
[87.30524445 -98.03562927]
[88.78207397 -83.10850525]
[90.25890350 -68.18138123]
[91.73573303 -53.25426102]
[93.21256256 -38.32713699]
[94.79450226 -23.41078949]
[96.48146820 -8.50595284]
[98.16843414 6.39888334]
[102.04061890 12.68621731]
[99.77265930 21.52536964]
[101.24948120 36.45249176]
[109.73844147 36.44425583]
[118.24947357 37.57774734]
[126.62807465 39.85828400]
[134.71876526 43.27014923]
[142.36799622 47.77645493]
[152.55581665 36.76699448]
[162.74365234 25.75753975]
[160.59902954 10.26771545]
[168.95655823 -2.94915390]
[183.87007141 -7.65246773]
[198.29786682 -1.62146521]
[205.42756653 12.29619884]
[201.89274597 27.52902985]
[189.36245728 36.88454819]
[173.75309753 35.94536972]
[163.56527710 46.95482635]
[153.37744141 57.96428299]
[161.30033875 70.70114899]
[175.67912292 66.42910767]
[190.05790710 62.15705490]
[204.43670654 57.88500977]
[212.00596619 44.27089310]
[226.64895630 40.14326096]
[239.58128357 47.44328690]
[253.96008301 43.17123795]
[268.33886719 38.89918900]
[282.71765137 34.62714386]
[297.09643555 30.35509491]
[310.55758667 20.04812241]
[324.18820190 30.12995529]
[318.27368164 46.01878357]
[301.36849976 44.73388290]
[286.98971558 49.00593185]
[272.61090088 53.27798080]
[258.23211670 57.55002975]
[243.85333252 61.82207489]
[237.00489807 74.99912262]
[222.48361206 79.53641510]
[208.70875549 72.26380157]
[194.32995605 76.53584290]
[179.95117188 80.80789185]
[165.57238770 85.07994080]
[165.76564026 94.22328949]
[164.71313477 103.14109039]
[162.47972107 111.66750336]
[176.79690552 116.14168549]
[191.11408997 120.61587524]
[205.43127441 125.09005737]
[219.74845886 129.56423950]
[236.67005920 128.51760864]
[242.36015320 144.48818970]
[228.58888245 154.37699890]
[215.27426147 143.88142395]
[200.95709229 139.40724182]
[186.63990784 134.93305969]
[172.32272339 130.45886230]
[158.00553894 125.98468781]
[154.76660156 132.25624084]
[150.85223389 138.12998962]
[146.31071472 143.53349304]
[141.19804382 148.40008545]
[135.57727051 152.66976929]
[129.51773071 156.28987122]
[123.09415436 159.21575928]
[126.85723877 173.73606873]
[130.62033081 188.25636292]
[134.38342285 202.77667236]
[145.33535767 214.19444275]
[141.03842163 228.45576477]
[144.80151367 242.97607422]
[148.56460571 257.49636841]
[152.32768250 272.01669312]
[156.09077454 286.53698730]
[171.14062500 285.97497559]
[185.95936584 288.66183472]
[199.85388184 294.47186279]
[212.17430115 303.13336182]
[222.34437561 314.24118042]
[229.88842773 327.27578735]
[234.45362854 341.62756348]
[235.82644653 356.62518311]
[233.94265747 371.56726074]
[228.89038086 385.75488281]
[220.90592957 398.52447510]
[210.36273193 409.27877808]
[197.75393677 417.51480103]
[183.66925049 422.84735107]
[168.76745605 425.02694702]
[153.74554443 423.95172119]
[139.30610657 419.67193604]
[126.12450409 412.38772583]
[114.81726074 402.43984985]
[105.91324615 390.29354858]
[99.82891083 376.51693726]
[96.84882355 361.75439453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 200]
[6 199]
[7 198]
[8 197]
[9 196]
[11 194]
[12 193]
[13 192]
[14 191]
[16 65]
[17 64]
[18 63]
[19 62]
[20 61]
[21 60]
[22 59]
[24 57]
[25 56]
[26 55]
[27 54]
[28 53]
[29 52]
[34 51]
[35 50]
[36 49]
[71 83]
[72 82]
[73 81]
[74 80]
[89 127]
[90 126]
[91 124]
[92 123]
[93 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
[132 144]
[133 143]
[134 142]
[145 169]
[146 168]
[147 167]
[148 166]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
[172 184]
[173 183]
[174 182]
[175 181]
[176 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
