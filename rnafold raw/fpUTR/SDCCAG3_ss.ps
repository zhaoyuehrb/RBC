%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGGCCCAAGGCGUUCAGGCACGCGCUUUCGGUGCUCGGAGCGGAAGCAGCGGCGAGAGGCUCGGAGGCGCGGGGGCGGCCGAGCGGCGGGCGACGGGGGCGGGCGACGGGGGCGGGCGACGCGGGCCGCGGCACGGGCGGAGCCGGGGCCAUGGAGCCGCCGCUGCCGGGCUAGGCAGGUCGUGCCCCGCCGGGCCGGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[182.01623535 83.13032532]
[178.07783508 83.46707153]
[173.85058594 82.43655396]
[159.61328125 87.15874481]
[149.96893311 98.50934601]
[134.43464661 95.50992584]
[120.19734192 100.23211670]
[105.96003723 104.95430756]
[111.72780609 112.31410217]
[115.78227997 120.98851013]
[117.90742493 130.67001343]
[117.93640900 141.02006531]
[110.70208740 154.16026306]
[115.34225464 169.26802063]
[107.86683655 183.19258118]
[92.71086121 187.67277527]
[78.86610413 180.05055237]
[74.54640961 164.84805298]
[82.31458282 151.08465576]
[97.56189728 146.92593384]
[104.79621887 133.78575134]
[100.64133453 127.54179382]
[88.17668915 108.80992889]
[73.26208496 110.40818787]
[58.34747314 112.00644684]
[43.43286514 113.60470581]
[28.51825523 115.20296478]
[13.60364628 116.80121613]
[-1.31096339 118.39947510]
[-16.22557259 119.99773407]
[-31.14018250 121.59599304]
[-46.05479050 123.19425201]
[-60.95677948 124.90618896]
[-75.84528351 126.73170471]
[-90.28981018 138.14967346]
[-106.16305542 130.66983032]
[-121.02198792 132.72218323]
[-135.88092041 134.77453613]
[-150.73985291 136.82688904]
[-160.27763367 149.14225769]
[-175.37594604 151.01196289]
[-187.05798340 141.84323120]
[-201.91691589 143.89558411]
[-210.08125305 157.23266602]
[-224.92474365 162.15249634]
[-239.43875122 156.33207703]
[-246.77021790 142.51963806]
[-243.45744324 127.23698425]
[-231.06462097 117.70011902]
[-215.44325256 118.41206360]
[-203.96926880 129.03665161]
[-189.11033630 126.98430634]
[-180.35108948 114.99217987]
[-165.31124878 112.69913483]
[-152.79220581 121.96795654]
[-137.93327332 119.91560364]
[-123.07434082 117.86325073]
[-108.21540833 115.81089783]
[-100.66301727 106.35849762]
[-88.29774475 104.52900696]
[-77.67079926 111.84320068]
[-62.78229904 110.01768494]
[-56.52330399 106.08185577]
[-47.65304947 108.27964020]
[-32.73844147 106.68138123]
[-17.82382965 105.08312225]
[-2.90922093 103.48487091]
[12.00538826 101.88661194]
[26.91999817 100.28835297]
[41.83460617 98.69009399]
[56.74921799 97.09183502]
[71.66382599 95.49357605]
[86.57843781 93.89532471]
[101.23784637 90.71700287]
[115.47515106 85.99481201]
[129.71246338 81.27262115]
[140.37513733 69.58425903]
[154.89108276 72.92144012]
[169.12838745 68.19924927]
[183.21505737 63.04506683]
[197.13800049 57.46369553]
[211.06094360 51.88232422]
[224.98388672 46.30095291]
[230.76567078 34.76837540]
[242.48014832 30.40740967]
[253.65492249 35.04540253]
[267.66134644 29.67700195]
[281.66778564 24.30860138]
[295.67422485 18.94020271]
[306.93237305 4.37076044]
[324.14248657 7.79417229]
[338.06542969 2.21280026]
[351.98837280 -3.36857128]
[354.55233765 -6.88392925]
[357.77807617 -9.16846561]
[361.19656372 -10.16532230]
[364.36871338 -9.97605133]
[366.93423462 -8.83711624]
[381.17153931 -13.55930805]
[395.40884399 -18.28150177]
[409.64614868 -23.00369263]
[423.88345337 -27.72588539]
[428.55978394 -32.40859604]
[434.07171631 -33.81287384]
[438.62750244 -32.36779785]
[453.00219727 -36.65361023]
[467.37689209 -40.93942261]
[481.75158691 -45.22523499]
[496.12628174 -49.51105118]
[490.21948242 -64.97698975]
[496.27166748 -79.49735260]
[509.90863037 -85.51838684]
[523.16308594 -80.75886536]
[536.30328369 -87.99318695]
[549.44348145 -95.22750854]
[562.58367920 -102.46183014]
[575.72387695 -109.69615173]
[581.73516846 -116.57914734]
[589.12005615 -116.93886566]
[593.84539795 -131.78166199]
[607.38195801 -138.72549438]
[621.50317383 -134.12911987]
[634.75213623 -141.16221619]
[639.27221680 -153.24519348]
[650.45538330 -158.82952881]
[662.06066895 -155.40861511]
[675.41540527 -162.23884583]
[688.77008057 -169.06907654]
[702.12475586 -175.89930725]
[710.88806152 -189.07182312]
[725.74249268 -187.97854614]
[739.09722900 -194.80877686]
[752.45190430 -201.63900757]
[765.80657959 -208.46923828]
[774.56988525 -221.64175415]
[789.42431641 -220.54847717]
[795.70697021 -235.31019592]
[811.20318604 -239.46302795]
[824.02569580 -229.82125854]
[824.33807373 -213.78125000]
[811.90075684 -203.64750671]
[796.25457764 -207.19378662]
[788.44647217 -194.50981140]
[772.63684082 -195.11454773]
[759.28216553 -188.28431702]
[745.92742920 -181.45408630]
[732.57275391 -174.62385559]
[724.76464844 -161.93988037]
[708.95501709 -162.54460144]
[695.60034180 -155.71437073]
[682.24560547 -148.88414001]
[668.89093018 -142.05390930]
[660.16571045 -126.82965088]
[641.78527832 -127.91323853]
[628.53625488 -120.88014221]
[624.43096924 -106.60841370]
[611.09484863 -99.28711700]
[596.15313721 -103.68988037]
[582.95819092 -96.55596161]
[569.81799316 -89.32164001]
[556.67779541 -82.08731842]
[543.53759766 -74.85299683]
[530.39739990 -67.61867523]
[530.26422119 -56.31258392]
[523.11395264 -45.99293900]
[535.90954590 -38.16521454]
[548.70513916 -30.33749199]
[561.50067139 -22.50976753]
[574.29626465 -14.68204403]
[589.60040283 -18.62639809]
[603.16851807 -10.52195358]
[606.95086670 4.82306337]
[598.70343018 18.30472755]
[583.31927490 21.92460632]
[569.92553711 13.53509045]
[566.46856689 -1.88646936]
[553.67297363 -9.71419334]
[540.87738037 -17.54191780]
[528.08178711 -25.36964035]
[515.28625488 -33.19736481]
[500.41207886 -35.13635635]
[486.03738403 -30.85054398]
[471.66268921 -26.56473160]
[457.28802490 -22.27891731]
[442.91333008 -17.99310493]
[428.60565186 -13.48857880]
[414.36834717 -8.76638699]
[400.13104248 -4.04419422]
[385.89373779 0.67799813]
[371.65643311 5.40019035]
[357.56976318 10.55436993]
[343.64682007 16.13574219]
[329.72387695 21.71711349]
[324.67883301 32.71411514]
[313.12182617 37.47677612]
[301.04263306 32.94664001]
[287.03619385 38.31504059]
[273.02975464 43.68343735]
[259.02331543 49.05183792]
[248.72560120 63.25975800]
[230.56526184 60.22389221]
[216.64231873 65.80526733]
[202.71937561 71.38663483]
[188.79643250 76.96800995]
[187.57176208 79.49374390]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 79]
[4 78]
[6 76]
[7 75]
[8 74]
[12 21]
[13 20]
[23 73]
[24 72]
[25 71]
[26 70]
[27 69]
[28 68]
[29 67]
[30 66]
[31 65]
[32 64]
[33 62]
[34 61]
[36 58]
[37 57]
[38 56]
[39 55]
[42 52]
[43 51]
[80 204]
[81 203]
[82 202]
[83 201]
[86 199]
[87 198]
[88 197]
[89 196]
[91 193]
[92 192]
[93 191]
[98 190]
[99 189]
[100 188]
[101 187]
[102 186]
[105 185]
[106 184]
[107 183]
[108 182]
[109 181]
[113 163]
[114 162]
[115 161]
[116 160]
[117 159]
[119 158]
[122 155]
[123 154]
[126 152]
[127 151]
[128 150]
[129 149]
[131 147]
[132 146]
[133 145]
[134 144]
[136 142]
[165 180]
[166 179]
[167 178]
[168 177]
[169 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
