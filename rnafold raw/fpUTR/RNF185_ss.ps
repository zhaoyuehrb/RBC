%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCUCCGAGAGGGGCGGCUCCGCGUCAUGUGACUGGAGUCCGCGUAGGAGGGGUCGGAGGUCUUACCCAACAGAUUGACGCGGCGUUAGUAUUGGCCGUGUACCCGAAAAACUGAUUGACUGGGCUGGCGUUAACUGUGCGGAGGCAGGAUUUCCCUGGGGAAAGUCUUCACUCAGAGCUUCGCUGACAGCCAAGG\
) } def
/len { sequence length } bind def

/coor [
[53.45141602 157.94898987]
[44.71113205 145.75852966]
[53.60345078 133.67930603]
[46.48515701 131.31713867]
[34.25416565 140.00062561]
[22.02317619 148.68409729]
[9.79218674 157.36758423]
[-2.43880296 166.05107117]
[-14.66979313 174.73455811]
[-26.90078354 183.41804504]
[-24.82306671 193.84046936]
[-26.32993698 204.32194519]
[-31.22409821 213.66918945]
[-38.92408752 220.82656860]
[-48.53324509 224.99542236]
[-58.94410324 225.72303772]
[-68.96599579 222.95175171]
[-77.46125793 217.02256775]
[-90.21088409 224.92491150]
[-102.96051025 232.82725525]
[-115.71013641 240.72959900]
[-128.39761353 248.73133850]
[-141.02217102 256.83200073]
[-153.64674377 264.93264771]
[-166.27130127 273.03329468]
[-178.89585876 281.13391113]
[-184.43417358 288.40829468]
[-191.78164673 289.26074219]
[-204.53126526 297.16308594]
[-217.28089905 305.06542969]
[-224.55154419 319.76473999]
[-240.93199158 320.54763794]
[-249.57144165 306.60879517]
[-241.58235168 292.28723145]
[-225.18324280 292.31579590]
[-212.43360901 284.41345215]
[-199.68399048 276.51110840]
[-186.99650574 268.50936890]
[-174.37194824 260.40872192]
[-161.74737549 252.30807495]
[-149.12281799 244.20742798]
[-136.49826050 236.10678101]
[-132.56324768 229.84358215]
[-123.61248016 227.97998047]
[-110.86285400 220.07763672]
[-98.11322784 212.17529297]
[-85.36360168 204.27294922]
[-85.25293732 184.72167969]
[-73.27825165 169.08432007]
[-54.15415192 163.80355835]
[-35.58426666 171.18704224]
[-23.35327721 162.50357056]
[-11.12228680 153.82008362]
[1.10870337 145.13659668]
[13.33969307 136.45310974]
[25.57068253 127.76963043]
[37.80167389 119.08614349]
[55.91530609 82.07579041]
[85.54187775 73.57960510]
[102.30373383 87.56550598]
[106.46833038 73.15522766]
[110.63292694 58.74494934]
[114.79753113 44.33467102]
[118.96212769 29.92439461]
[123.12673187 15.51411724]
[127.29132843 1.10383916]
[131.45593262 -13.30643845]
[135.62052917 -27.71671677]
[130.78695679 -45.48130035]
[143.89227295 -57.14735413]
[147.71791077 -71.65129852]
[151.43008423 -86.18470001]
[146.04365540 -103.78953552]
[158.77795410 -115.85948944]
[162.26252747 -130.44912720]
[165.74711609 -145.03877258]
[169.23168945 -159.62841797]
[168.18135071 -168.71060181]
[172.88642883 -174.41798401]
[176.59860229 -188.95138550]
[180.31077576 -203.48478699]
[184.02296448 -218.01818848]
[187.73513794 -232.55158997]
[191.44731140 -247.08499146]
[195.15950012 -261.61837769]
[198.75798035 -276.18035889]
[202.24256897 -290.76998901]
[205.72714233 -305.35964966]
[208.40879822 -320.11798096]
[210.27949524 -335.00088501]
[212.15019226 -349.88378906]
[214.02087402 -364.76666260]
[215.89157104 -379.64956665]
[217.76226807 -394.53244019]
[209.10331726 -412.73059082]
[221.42401123 -427.62713623]
[222.82862854 -442.56121826]
[224.23324585 -457.49533081]
[225.63787842 -472.42941284]
[213.90496826 -482.58413696]
[210.41442871 -497.70352173]
[216.50845337 -511.97384644]
[229.84376526 -519.90789795]
[245.29266357 -518.45483398]
[256.91473389 -508.17346191]
[260.24102783 -493.01708984]
[253.99255371 -478.81369019]
[240.57196045 -471.02478027]
[239.16734314 -456.09069824]
[237.76271057 -441.15661621]
[236.35809326 -426.22250366]
[243.56263733 -418.96237183]
[245.62065125 -408.71926880]
[241.61466980 -398.83251953]
[232.64515686 -392.66177368]
[230.77445984 -377.77886963]
[228.90377808 -362.89596558]
[227.03308105 -348.01309204]
[225.16238403 -333.13018799]
[223.29168701 -318.24728394]
[235.12170410 -327.46957397]
[250.11616516 -327.06176758]
[261.42742920 -317.21011353]
[263.88992310 -302.41363525]
[256.37905884 -289.42953491]
[242.32489014 -284.18734741]
[228.14562988 -289.08108521]
[220.31678772 -301.87506104]
[216.83221436 -287.28543091]
[213.34762573 -272.69577026]
[214.85270691 -265.45376587]
[209.69290161 -257.90621948]
[205.98071289 -243.37280273]
[202.26853943 -228.83941650]
[198.55636597 -214.30601501]
[194.84417725 -199.77261353]
[191.13200378 -185.23921204]
[187.41983032 -170.70581055]
[183.82133484 -156.14384460]
[180.33676147 -141.55419922]
[176.85217285 -126.96455383]
[173.36759949 -112.37490845]
[179.43212891 -101.90253448]
[176.64260864 -89.71517181]
[165.96348572 -82.47251892]
[162.25131226 -67.93912506]
[163.64302063 -60.67447281]
[158.36587524 -53.20848465]
[164.10014343 -42.55167770]
[160.93106079 -30.45745468]
[150.03080750 -23.55211639]
[145.86621094 -9.14183903]
[141.70161438 5.26843929]
[137.53700256 19.67871666]
[133.37240601 34.08899307]
[129.20780945 48.49927139]
[125.04320526 62.90954971]
[120.87860870 77.31983185]
[116.71400452 91.73010254]
[121.77080536 105.85203552]
[134.13601685 114.34329224]
[146.50123596 122.83455658]
[158.86643982 131.32582092]
[171.23165894 139.81707764]
[183.66284180 148.21145630]
[196.15925598 156.50842285]
[208.65567017 164.80538940]
[225.04766846 165.28939819]
[232.58523560 179.85363770]
[223.51435852 193.51567078]
[207.16638184 192.22117615]
[200.35870361 177.30180359]
[187.86228943 169.00483704]
[175.36587524 160.70787048]
[168.04864502 159.62619019]
[162.74038696 152.18229675]
[150.37518311 143.69102478]
[138.00996399 135.19976807]
[125.64475250 126.70850372]
[113.27954102 118.21724701]
[107.26750946 122.70115662]
[95.24344635 131.66897583]
[89.23141479 136.15289307]
[93.84436035 150.42596436]
[98.45731354 164.69903564]
[110.06362152 175.45097351]
[106.61530304 189.94091797]
[111.22825623 204.21398926]
[115.84120941 218.48707581]
[126.46554565 231.69918823]
[116.71087646 245.56579590]
[100.68582153 240.03099060]
[101.56813049 223.10002136]
[96.95517731 208.82695007]
[92.34223175 194.55387878]
[81.06587219 184.82284546]
[84.18424225 169.31199646]
[79.57128906 155.03890991]
[74.95833588 140.76583862]
[67.84004211 138.40367126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 57]
[5 56]
[6 55]
[7 54]
[8 53]
[9 52]
[10 51]
[18 47]
[19 46]
[20 45]
[21 44]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[28 37]
[29 36]
[30 35]
[60 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[66 153]
[67 152]
[68 151]
[70 148]
[71 146]
[72 145]
[74 142]
[75 141]
[76 140]
[77 139]
[79 138]
[80 137]
[81 136]
[82 135]
[83 134]
[84 133]
[85 132]
[86 130]
[87 129]
[88 128]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[96 111]
[97 110]
[98 109]
[99 108]
[160 180]
[161 179]
[162 178]
[163 177]
[164 176]
[165 174]
[166 173]
[167 172]
[183 199]
[184 198]
[185 197]
[187 195]
[188 194]
[189 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
