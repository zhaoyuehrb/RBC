%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGAUCUCUUCUCUCAAUGGCAUUGGAGCUGGCUGUGCCUGAGGCAGACCUGGACCGUGGACAUGGGGCAAUGCCUUGAGCGGAAGGGGAAGCCACUGAAUUUUGGGUGUCACCAGGUAAACAGAGCCCUCAGCAUCUGAAUAGAAACUGAACAGGAACAGAAGAGAUUACACUACAUCUGAG\
) } def
/len { sequence length } bind def

/coor [
[48.02519608 282.53414917]
[54.50242996 268.86297607]
[64.88874054 257.86389160]
[78.16658783 250.61448669]
[75.38088989 235.87542725]
[72.59519958 221.13636780]
[69.80950165 206.39730835]
[67.02381134 191.65824890]
[64.23811340 176.91918945]
[61.45241928 162.18011475]
[58.66672516 147.44105530]
[55.88103104 132.70199585]
[53.09533691 117.96293640]
[41.75151443 108.14878082]
[26.76502800 107.51216125]
[11.77854443 106.87554932]
[-3.20794010 106.23892975]
[-18.19442558 105.60231018]
[-26.92418861 108.36946869]
[-33.42935562 104.82550049]
[-48.40286636 103.93448639]
[-63.37638092 103.04347992]
[-78.34989166 102.15247345]
[-93.32341003 101.26146698]
[-108.29692078 100.37046051]
[-123.27043152 99.47944641]
[-132.75314331 111.87609100]
[-147.38623047 116.84213257]
[-162.15631104 112.85828400]
[-172.10389709 101.44083405]
[-186.94789124 103.59847260]
[-201.79190063 105.75611115]
[-216.63591003 107.91375732]
[-229.17961121 117.55564880]
[-242.88748169 111.72953796]
[-255.43119812 121.37142944]
[-269.13906860 115.54531860]
[-283.98306274 117.70295715]
[-298.82708740 119.86059570]
[-313.67108154 122.01824188]
[-328.47576904 130.28004456]
[-340.51306152 118.34101868]
[-332.37286377 103.46911621]
[-315.82873535 107.17423248]
[-300.98471069 105.01658630]
[-286.14071655 102.85894775]
[-271.29669189 100.70130920]
[-259.81472778 91.21374512]
[-245.04513550 96.88552856]
[-233.56317139 87.39796448]
[-218.79354858 93.06974792]
[-203.94955444 90.91210938]
[-189.10554504 88.75446320]
[-174.26153564 86.59682465]
[-174.10037231 85.64775085]
[-173.90403748 84.70532227]
[-186.93666077 77.27897644]
[-199.96928406 69.85263062]
[-213.00192261 62.42628098]
[-229.38880920 63.06013489]
[-237.90107727 49.04323959]
[-229.78202820 34.79497528]
[-213.38383484 34.97273254]
[-205.57556152 49.39365387]
[-192.54293823 56.82000351]
[-179.51031494 64.24635315]
[-166.47769165 71.67269897]
[-150.14761353 64.25638580]
[-132.65788269 69.21611786]
[-122.37942505 84.50593567]
[-107.40591431 85.39694214]
[-92.43239594 86.28794861]
[-77.45888519 87.17896271]
[-62.48537064 88.06996918]
[-47.51185989 88.96097565]
[-32.53834534 89.85198212]
[-17.55780602 90.61582184]
[-2.57132220 91.25244141]
[12.41516209 91.88906097]
[27.40164757 92.52568054]
[42.38813019 93.16230011]
[47.71389771 87.88156128]
[33.24165344 83.93769073]
[29.42112350 69.43239594]
[40.07288742 58.87115479]
[54.54504776 62.81533432]
[58.36543274 77.32008362]
[63.69120026 72.03934479]
[63.18185043 57.04799271]
[54.05033875 43.42641068]
[61.52309418 28.82880783]
[77.91278076 28.27194786]
[86.35910034 42.32868195]
[78.17320251 56.53864288]
[78.68254852 71.52999115]
[95.43886566 68.77053070]
[109.51737213 74.14070129]
[118.33414459 62.00544739]
[127.15092468 49.87019348]
[121.70479584 33.86809921]
[126.81099701 17.92859650]
[140.27189636 8.26349735]
[156.67526245 8.51537418]
[165.28471375 -3.76784658]
[173.89414978 -16.05106735]
[182.50360107 -28.33428764]
[191.11303711 -40.61750793]
[188.12948608 -56.13762665]
[197.06323242 -69.17464447]
[212.61401367 -71.99393463]
[225.55586243 -62.92286301]
[228.21058655 -47.34313202]
[219.00318909 -34.49792099]
[203.39625549 -32.00806808]
[194.78681946 -19.72484589]
[186.17736816 -7.44162560]
[177.56793213 4.84159517]
[168.95849609 17.12481689]
[174.45471191 29.30557823]
[173.19860840 42.71857452]
[165.41213989 53.84455872]
[153.04475403 59.71124268]
[139.28617859 58.68696976]
[130.46940613 70.82222748]
[121.65262604 82.95748138]
[124.26099396 86.93524170]
[126.14640045 91.30233002]
[127.25265503 95.92859650]
[142.13116455 97.83386230]
[160.33427429 89.20794678]
[175.21887207 101.52964020]
[190.15350342 102.92858887]
[205.08811951 104.32752991]
[220.02275085 105.72647858]
[232.12339783 95.91771698]
[247.24929810 97.54919434]
[256.52587891 109.14576721]
[271.46051025 110.54471588]
[286.39514160 111.94365692]
[301.06625366 104.61629486]
[314.59643555 113.88267517]
[313.06701660 130.21034241]
[298.05130005 136.80279541]
[284.99618530 126.87828064]
[270.06155396 125.47933960]
[255.12693787 124.08039093]
[243.85810852 133.75245667]
[228.69233704 132.54647827]
[218.62379456 120.66109467]
[203.68917847 119.26215363]
[188.75454712 117.86321259]
[173.81993103 116.46426392]
[166.54797363 123.68250275]
[156.28567505 125.73755646]
[146.38755798 121.71068573]
[140.22589111 112.71237183]
[125.34738922 110.80710602]
[116.52707672 124.50566864]
[100.59726715 131.55514526]
[82.29962921 128.51692200]
[67.83439636 115.17724609]
[70.62009430 129.91630554]
[73.40578461 144.65536499]
[76.19148254 159.39442444]
[78.97717285 174.13348389]
[81.76287079 188.87254333]
[84.54856110 203.61160278]
[87.33425903 218.35066223]
[90.11994934 233.08973694]
[92.90564728 247.82879639]
[107.91338348 249.73220825]
[121.59753418 256.18194580]
[132.61747742 266.54614258]
[139.89356995 279.80938721]
[142.71298218 294.67227173]
[140.79951477 309.67874146]
[134.34060669 323.35858154]
[123.96903992 334.37155151]
[110.70092010 341.63876343]
[95.83612823 344.44821167]
[80.83095551 342.52468872]
[67.15545654 336.05661011]
[56.14942169 325.67767334]
[48.89110947 312.40469360]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[6 168]
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[12 162]
[13 161]
[14 81]
[15 80]
[16 79]
[17 78]
[18 77]
[20 76]
[21 75]
[22 74]
[23 73]
[24 72]
[25 71]
[26 70]
[30 54]
[31 53]
[32 52]
[33 51]
[35 49]
[37 47]
[38 46]
[39 45]
[40 44]
[56 67]
[57 66]
[58 65]
[59 64]
[88 95]
[89 94]
[97 125]
[98 124]
[99 123]
[103 118]
[104 117]
[105 116]
[106 115]
[107 114]
[128 157]
[129 156]
[131 152]
[132 151]
[133 150]
[134 149]
[137 146]
[138 145]
[139 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
