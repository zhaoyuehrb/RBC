%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGUCACGCAGGACGCCACUGCCCUGUCGCCCCGCCUGUGCAGCCCAGGACCUAGGCGCGGUAGCUGGGGCUGGCUUUUGAGGGGCGCGGGCAGCCUUCUGACUGGGUCGGAGGCCUGCGGGCCCGAAGCCUCUGUCCCUCCUGUUCUUGUCCGGCGCUGCUUAGCCCCUCCGCGUAGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[96.43119812 239.42123413]
[95.66735840 224.44070435]
[94.90351868 209.46015930]
[86.71432495 203.30212402]
[83.20448303 193.44215393]
[85.76570892 183.06773376]
[93.78413391 175.67579651]
[93.52942657 160.67796326]
[93.27471161 145.68013000]
[93.02000427 130.68229675]
[87.55320740 128.89984131]
[82.50205231 126.15234375]
[78.03519440 122.53154755]
[74.30180359 118.15836334]
[71.42655182 113.17881775]
[69.50543976 107.75920105]
[54.50598145 107.88655853]
[39.50652313 108.01392365]
[24.50706291 108.14128113]
[18.59262466 111.17786407]
[12.89266205 110.80980682]
[8.99819851 108.00959778]
[-5.99693537 107.62754822]
[-20.99206924 107.24550629]
[-35.98720169 106.86346436]
[-50.98233795 106.48141479]
[-65.98017120 106.22670746]
[-80.97963715 106.09934235]
[-94.84500122 113.71919250]
[-107.50611877 105.87410736]
[-122.50558472 105.74674988]
[-137.50503540 105.61939240]
[-151.37040710 113.23923492]
[-164.03152466 105.39414978]
[-179.03099060 105.26679230]
[-194.03044128 105.13943481]
[-209.02990723 105.01206970]
[-224.02937317 104.88471222]
[-239.02882385 105.01206970]
[-254.02395630 105.39411926]
[-267.62258911 113.48039246]
[-280.54278564 106.06976318]
[-291.24682617 117.69729614]
[-307.04083252 118.26684570]
[-318.55456543 107.44049072]
[-318.95709229 91.64133453]
[-308.00961304 80.24272156]
[-292.20706177 80.00724792]
[-280.92483521 91.07462311]
[-268.39877319 83.01567841]
[-254.40600586 90.39897919]
[-239.41087341 90.01693726]
[-235.51640320 87.21672058]
[-229.81643677 86.84867096]
[-223.90200806 89.88525391]
[-208.90254211 90.01261139]
[-193.90309143 90.13997650]
[-178.90362549 90.26733398]
[-163.90417480 90.39469147]
[-151.11166382 82.76573181]
[-137.37768555 90.61992645]
[-122.37821960 90.74729156]
[-107.37876129 90.87464905]
[-94.58625031 83.24568939]
[-80.85227203 91.09988403]
[-65.85281372 91.22724915]
[-59.12210464 88.13298798]
[-50.60029221 91.48628235]
[-35.60515976 91.86832428]
[-20.61002541 92.25037384]
[-5.61489105 92.63241577]
[9.38024235 93.01445770]
[24.37970161 93.14182281]
[39.37916183 93.01445770]
[54.37862015 92.88710022]
[69.37808228 92.75974274]
[75.58656311 80.14786530]
[86.66737366 71.49799347]
[100.40905762 68.53643036]
[114.06909943 71.85424042]
[124.92129517 80.78926086]
[138.64169312 74.72702026]
[152.36207581 68.66477966]
[166.08247375 62.60253525]
[179.80287170 56.54029465]
[193.52326965 50.47805405]
[207.24366760 44.41581345]
[212.62831116 32.67894363]
[224.19915771 27.91813087]
[235.53335571 32.18532562]
[249.35472107 26.35693932]
[263.17608643 20.52855492]
[276.99743652 14.70017052]
[290.81878662 8.87178612]
[304.64013672 3.04340100]
[318.46151733 -2.78498387]
[332.23287964 -8.73051167]
[345.95327759 -14.79275322]
[349.29818726 -25.17289162]
[357.64028931 -31.85105896]
[368.06298828 -32.80265427]
[377.08898926 -27.95339966]
[391.00732422 -33.54624557]
[404.92565918 -39.13909149]
[412.54571533 -48.16374969]
[423.04806519 -48.08403397]
[435.95269775 -55.73061371]
[448.85733032 -63.37719727]
[456.78549194 -77.06861115]
[471.67913818 -76.90014648]
[484.58380127 -84.54673004]
[497.48843384 -92.19330597]
[510.39306641 -99.83988953]
[523.29772949 -107.48647308]
[536.20239258 -115.13304901]
[549.10699463 -122.77963257]
[557.03515625 -136.47105408]
[571.92883301 -136.30258179]
[577.73309326 -143.38610840]
[585.11816406 -143.96730042]
[598.15075684 -151.39364624]
[605.95904541 -165.81457520]
[622.35723877 -165.99232483]
[630.47625732 -151.74406433]
[621.96405029 -137.72717285]
[605.57714844 -138.36102295]
[592.54449463 -130.93467712]
[579.57537842 -123.39794159]
[572.57025146 -110.25345612]
[556.75360107 -109.87499237]
[543.84893799 -102.22840881]
[530.94427490 -94.58182526]
[518.03967285 -86.93524933]
[505.13500977 -79.28866577]
[492.23037720 -71.64208221]
[479.32574463 -63.99550247]
[472.32058716 -50.85102463]
[456.50390625 -50.47255325]
[443.59927368 -42.82597351]
[430.69464111 -35.17938995]
[445.46807861 -32.58214188]
[457.17074585 -23.19880295]
[462.91705322 -9.34311962]
[461.29006958 5.56838131]
[452.69094849 17.85882759]
[439.24005127 24.49764442]
[424.25415039 23.84783745]
[411.42840576 16.06963348]
[403.92541504 3.08097982]
[403.59524536 -11.91538620]
[410.51852417 -25.22075844]
[396.60018921 -19.62791061]
[382.68185425 -14.03506374]
[371.92111206 2.01429391]
[352.01550293 -1.07235849]
[338.29513550 4.98988342]
[333.43643188 10.58184910]
[324.28988647 11.03637409]
[310.46853638 16.86475945]
[296.64718628 22.69314384]
[282.82580566 28.52152824]
[269.00445557 34.34991455]
[255.18310547 40.17829895]
[241.36174011 46.00668335]
[231.55111694 60.54549789]
[213.30590820 58.13620758]
[199.58551025 64.19844818]
[185.86511230 70.26068878]
[172.14471436 76.32292938]
[158.42433167 82.38516998]
[144.70393372 88.44741821]
[130.98353577 94.50965881]
[126.51039886 116.95058441]
[108.01783752 130.42758179]
[108.27255249 145.42541504]
[108.52725983 160.42324829]
[108.78197479 175.42109680]
[119.93657684 192.19413757]
[109.88405609 208.69631958]
[110.64789581 223.67686462]
[111.41173553 238.65739441]
[120.77323914 252.12196350]
[113.54943848 266.84436035]
[97.17156982 267.67944336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[7 177]
[8 176]
[9 175]
[10 174]
[16 76]
[17 75]
[18 74]
[19 73]
[22 72]
[23 71]
[24 70]
[25 69]
[26 68]
[27 66]
[28 65]
[30 63]
[31 62]
[32 61]
[34 59]
[35 58]
[36 57]
[37 56]
[38 55]
[39 52]
[40 51]
[42 49]
[81 172]
[82 171]
[83 170]
[84 169]
[85 168]
[86 167]
[87 166]
[90 164]
[91 163]
[92 162]
[93 161]
[94 160]
[95 159]
[96 158]
[97 156]
[98 155]
[102 153]
[103 152]
[104 151]
[106 140]
[107 139]
[108 138]
[110 136]
[111 135]
[112 134]
[113 133]
[114 132]
[115 131]
[116 130]
[118 128]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
