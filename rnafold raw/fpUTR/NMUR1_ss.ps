%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUCGGGGCGCGGGCUGGGGCCGCUGUCAGUCAGUCCACUGGCUCCCGCGCCGCGUCUGUGUCCGUCGCUCGGAGGGUGGAAGCCGGGGUCUCGCGGGCCGCGGGCCGC\
) } def
/len { sequence length } bind def

/coor [
[135.02153015 124.71595001]
[121.44190216 118.34462738]
[107.86227417 111.97330475]
[93.91584015 112.96759033]
[85.76641083 101.60632324]
[72.18678284 95.23500061]
[58.60715485 88.86367798]
[44.61106873 83.46835327]
[30.26856613 79.07601166]
[15.92606640 74.68367004]
[1.58356500 70.29132843]
[-12.75893593 65.89898682]
[-27.10143661 61.50664139]
[-41.44393921 57.11429977]
[-55.84715652 52.92535782]
[-70.30821228 48.94065094]
[-85.66793823 52.73397827]
[-95.88253784 41.89371490]
[-110.34358978 37.90900803]
[-124.80464935 33.92430115]
[-139.26570129 29.93959427]
[-153.72676086 25.95488930]
[-168.18780518 21.97018242]
[-182.89439392 19.01780891]
[-197.77290344 17.11254120]
[-212.65139771 15.20727444]
[-227.52990723 13.30200672]
[-241.05136108 21.93624496]
[-256.18515015 16.61197662]
[-261.32192993 1.41352534]
[-252.52122498 -12.00015831]
[-236.53414917 -13.33924389]
[-225.62464905 -1.57649970]
[-210.74613953 0.32876763]
[-195.86763000 2.23403502]
[-180.98912048 4.13930225]
[-187.19888306 -9.51496315]
[-180.65437317 -23.01197624]
[-166.08789062 -26.59213638]
[-154.03234863 -17.66665268]
[-153.20506287 -2.68948436]
[-164.20310974 7.50912762]
[-149.74205017 11.49383354]
[-135.28099060 15.47853947]
[-120.81993866 19.46324539]
[-106.35888672 23.44795227]
[-91.89782715 27.43265724]
[-77.57245636 23.35431862]
[-66.32350922 34.47959518]
[-51.86245346 38.46430206]
[-44.47007751 37.18852997]
[-37.05159760 42.77180099]
[-22.70909500 47.16414261]
[-8.36659431 51.55648422]
[5.97590637 55.94882584]
[20.31840706 60.34116745]
[34.66090775 64.73350525]
[49.00341034 69.12584686]
[45.19055939 54.61853409]
[53.92193985 42.42169189]
[68.88394928 41.35477448]
[79.25765228 52.18927002]
[77.54190063 67.09082031]
[64.97846985 75.28404999]
[78.55809784 81.65537262]
[92.13772583 88.02669525]
[106.08415985 87.03240967]
[114.23358917 98.39367676]
[127.81321716 104.76499939]
[141.39285278 111.13632202]
[147.37432861 106.97946167]
[154.32270813 104.97463989]
[161.49485779 105.30142212]
[168.13479614 107.89184570]
[173.55340576 112.44112396]
[177.19990540 118.44311523]
[178.71777344 125.24649048]
[177.97935486 132.12538147]
[190.28688049 140.70002747]
[202.59442139 149.27465820]
[214.90196228 157.84930420]
[225.66358948 155.29179382]
[235.81951904 159.08137512]
[242.01660156 167.70393372]
[242.35601807 178.09545898]
[254.15872192 187.35267639]
[265.96145630 196.60987854]
[281.59512329 199.03854370]
[286.83450317 212.98121643]
[298.63720703 222.23843384]
[310.43994141 231.49563599]
[322.24264526 240.75285339]
[334.04534912 250.01005554]
[350.23983765 255.02758789]
[349.90145874 271.97814941]
[333.51965332 276.34539795]
[324.78814697 261.81277466]
[312.98544312 252.55555725]
[301.18273926 243.29835510]
[289.38000488 234.04113770]
[277.57730103 224.78393555]
[262.78781128 223.01741028]
[256.70422363 208.41259766]
[244.90151978 199.15539551]
[233.09880066 189.89817810]
[213.88442993 188.73957825]
[206.32731628 170.15684509]
[194.01979065 161.58219910]
[181.71224976 153.00755310]
[169.40470886 144.43292236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 70]
[2 69]
[3 68]
[5 66]
[6 65]
[7 64]
[8 58]
[9 57]
[10 56]
[11 55]
[12 54]
[13 53]
[14 52]
[15 50]
[16 49]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 36]
[25 35]
[26 34]
[27 33]
[78 110]
[79 109]
[80 108]
[81 107]
[85 105]
[86 104]
[87 103]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
