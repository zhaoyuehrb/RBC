%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGAGAUGAACUUUCUGGAAGCAGACCCAUCUAUGCUUUGACCUGAUCAUGGAAGACCCUGAGCCCUAUAAACUCCUUUGAAUCCCUGUCCCGGGAACAGGGACACCCAAUCAAUGCCUCACACACAGCCUGGGGAAUCCACAGCUGAGCCAGCCCUCCUACAACAUUUCUUGGACAAAGAGUACUGAAAAAUUUGGUGCGGCAUGAAAGG\
) } def
/len { sequence length } bind def

/coor [
[120.26097870 210.99285889]
[119.02104950 226.11988831]
[112.39681244 239.77580261]
[101.28414917 250.11375427]
[87.18595123 255.73561096]
[72.00888824 255.88105774]
[57.80552673 250.53044128]
[46.49676514 240.40739441]
[39.61201096 226.88095093]
[38.08237839 211.78045654]
[42.11473083 197.14814758]
[51.16373062 184.96290588]
[64.00556946 176.87269592]
[78.90350342 173.97164917]
[81.52021790 159.20164490]
[84.13693237 144.43165588]
[86.75363922 129.66165161]
[89.37035370 114.89166260]
[76.56645966 107.07755280]
[70.26631165 121.59026337]
[55.45219040 123.13660431]
[43.51308060 132.21722412]
[31.57397270 141.29783630]
[19.63486481 150.37846375]
[7.69575548 159.45909119]
[-4.24335289 168.53970337]
[-2.22396207 183.76525879]
[-8.10272598 197.95454407]
[-20.29828835 207.29071045]
[-35.53010178 209.26235962]
[-49.70088577 203.33915710]
[-58.99877167 191.11437988]
[-60.92267227 175.87646484]
[-54.95507050 161.72431946]
[-42.70122147 152.46479797]
[-27.45734787 150.58866882]
[-13.32397461 156.60060120]
[-1.38486576 147.51997375]
[10.55424309 138.43936157]
[22.49335098 129.35873413]
[34.43246078 120.27811432]
[46.37157059 111.19749451]
[51.81775665 97.33428955]
[67.48583984 95.13845062]
[75.73128510 94.91187286]
[83.86603546 95.62312317]
[91.80922699 97.25699615]
[81.47728729 86.38266754]
[71.14534760 75.50834656]
[60.81340408 64.63401794]
[54.59645081 62.39873123]
[50.98213196 58.01803970]
[50.34420013 53.28772736]
[40.33441925 42.11614227]
[30.32463646 30.94455910]
[14.78133297 29.92305946]
[4.78913450 18.45089149]
[5.85876799 3.63902259]
[-9.11287308 -1.47571588]
[-11.84349442 -16.11787987]
[-21.85327721 -27.28946304]
[-31.86305809 -38.46104431]
[-41.87284088 -49.63262939]
[-51.88262177 -60.80421066]
[-67.42592621 -61.82571411]
[-77.41812897 -73.29788208]
[-76.34849548 -88.10974884]
[-86.35827637 -99.28133392]
[-96.36805725 -110.45291138]
[-109.54030609 -103.14266968]
[-124.00911713 -98.94731140]
[-139.04876709 -98.07727051]
[-153.90484619 -100.57619476]
[-167.83218384 -106.31873322]
[-180.13220215 -115.01685333]
[-190.18794250 -126.23425293]
[-197.49499512 -139.40826416]
[-201.68684387 -153.87809753]
[-202.55323792 -168.91795349]
[-200.05072021 -183.77342224]
[-194.30479431 -197.69937134]
[-185.60369873 -209.99729919]
[-174.38386536 -220.05030823]
[-161.20808411 -227.35417175]
[-146.73722839 -231.54251099]
[-131.69717407 -232.40525818]
[-116.84230804 -229.89913940]
[-102.91774750 -224.14985657]
[-90.62194061 -215.44577026]
[-80.57164764 -204.22351074]
[-73.27098083 -191.04594421]
[-69.08613586 -176.57408142]
[-68.22703552 -161.53381348]
[-70.73675537 -146.67956543]
[-76.48941803 -132.75639343]
[-85.19647217 -120.46269989]
[-75.18669128 -109.29111481]
[-65.17691040 -98.11952972]
[-50.33691025 -97.56275177]
[-40.02642441 -86.37577820]
[-40.71104050 -70.81399536]
[-30.70125771 -59.64241028]
[-20.69147682 -48.47082901]
[-10.68169403 -37.29924393]
[-0.67191190 -26.12766266]
[13.58376217 -21.81199074]
[17.03034973 -6.37075949]
[31.87034988 -5.81398439]
[42.18083572 5.37299585]
[41.49621964 20.93477821]
[51.50600052 32.10636139]
[61.51578522 43.27794266]
[71.68772888 54.30207443]
[82.01967621 65.17639923]
[92.35161591 76.05072784]
[102.68355560 86.92505646]
[116.35685730 93.09278107]
[131.34684753 93.64060974]
[146.33683777 94.18843842]
[161.32684326 94.73626709]
[176.31683350 95.28409576]
[190.39038086 88.05596924]
[202.82656860 96.25293732]
[217.81657410 96.80076599]
[232.80656433 97.34859467]
[241.49372864 94.53534698]
[248.01112366 98.01553345]
[262.99151611 98.78233337]
[277.35552979 94.46084595]
[289.42602539 85.55564117]
[301.49655151 76.65043640]
[313.56707764 67.74523163]
[318.61288452 60.13464737]
[325.87963867 58.79962540]
[338.07897949 50.07174301]
[350.21423340 41.25496292]
[362.28475952 32.34976196]
[368.34579468 17.11178398]
[384.60968018 15.00986195]
[394.34552002 28.20627403]
[387.53793335 43.12567902]
[371.18997192 44.42027664]
[359.11944580 53.32547760]
[355.60421753 59.82403564]
[346.80685425 62.27108765]
[334.60751343 70.99897003]
[322.47225952 79.81575012]
[310.40176392 88.72095490]
[298.33123779 97.62615967]
[286.26071167 106.53135681]
[287.46102905 113.93468475]
[301.48440552 119.25872803]
[289.86166382 128.74134827]
[291.06195068 136.14466858]
[305.32781982 140.77992249]
[319.59365845 145.41517639]
[333.54849243 138.49417114]
[347.95007324 143.39819336]
[354.46218872 156.74464417]
[368.72802734 161.37989807]
[382.99389648 166.01516724]
[392.89926147 154.51911926]
[406.41497803 147.70964050]
[421.46737671 146.59654236]
[435.76043701 151.31840515]
[447.12588501 161.12611389]
[453.85214233 174.50157166]
[454.94207764 189.39254761]
[469.20794678 194.02780151]
[484.09765625 188.05487061]
[497.97940063 196.09706116]
[500.20428467 211.98509216]
[489.06555176 223.53102112]
[473.10791016 221.87780762]
[464.57269287 208.29365540]
[450.30682373 203.65840149]
[440.67236328 215.06480408]
[427.36880493 221.93215942]
[412.40911865 223.18632507]
[398.07034302 218.60514832]
[386.54696655 208.85705566]
[379.61505127 195.40374756]
[378.35861206 180.28100586]
[364.09277344 175.64575195]
[349.82693481 171.01049805]
[336.71365356 177.98027039]
[322.18002319 173.48268127]
[314.95840454 159.68103027]
[300.69256592 155.04577637]
[286.42669678 150.41052246]
[277.70486450 162.61418152]
[263.86993408 168.41023254]
[249.05398560 166.06752014]
[237.68222046 156.28578186]
[233.15103149 141.98652649]
[236.81381226 127.44059753]
[247.57653809 116.99246979]
[262.22470093 113.76271820]
[247.24432373 112.99591827]
[232.25872803 112.33858490]
[217.26873779 111.79075623]
[202.27874756 111.24292755]
[189.27738953 118.51023865]
[175.76899719 110.27409363]
[160.77900696 109.72626495]
[145.78901672 109.17842865]
[130.79902649 108.63059998]
[115.80902863 108.08277130]
[104.14035034 117.50837708]
[101.52363586 132.27836609]
[98.90692902 147.04837036]
[96.29021454 161.81835938]
[93.67350006 176.58836365]
[106.66803741 184.43095398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 213]
[15 212]
[16 211]
[17 210]
[18 209]
[19 44]
[21 42]
[22 41]
[23 40]
[24 39]
[25 38]
[26 37]
[47 116]
[48 115]
[49 114]
[50 113]
[53 112]
[54 111]
[55 110]
[58 107]
[60 105]
[61 104]
[62 103]
[63 102]
[64 101]
[67 98]
[68 97]
[69 96]
[117 208]
[118 207]
[119 206]
[120 205]
[121 204]
[123 202]
[124 201]
[125 200]
[127 199]
[128 198]
[129 150]
[130 149]
[131 148]
[132 147]
[134 146]
[135 145]
[136 143]
[137 142]
[154 190]
[155 189]
[156 188]
[159 185]
[160 184]
[161 183]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
