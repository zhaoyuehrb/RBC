%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGGGCCCAGCUCCUCCCCCGACUCGGUCUCUCUCCCCUCCCCUCCGCCCGGCAGUUCCUCCCUCCCGCCGCCGCCUCUUCCUCGGUGAGGCGCUCUUCCAGCGGGCAGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[17.21574020 111.10236359]
[2.47547889 113.88169861]
[-12.26478291 116.66102600]
[-27.00504494 119.44035339]
[-39.13262177 129.60069275]
[-53.07314301 124.35559082]
[-67.81340790 127.13492584]
[-82.55366516 129.91426086]
[-82.92314911 144.96224976]
[-86.41205597 159.59886169]
[-92.86553192 173.18486023]
[-101.99929047 185.12745667]
[-113.41215515 194.90608215]
[-126.60367584 202.09518433]
[-140.99607849 206.38262939]
[-155.95957947 207.58335876]
[-170.83990479 205.64730835]
[-184.98695374 200.66151428]
[-197.78314209 192.84619141]
[-208.67041016 182.54505920]
[-217.17454529 170.21012878]
[-222.92584229 156.38194275]
[-237.66609192 159.16127014]
[-252.40635681 161.94061279]
[-266.85089111 170.81706238]
[-279.37911987 159.39425659]
[-271.87088013 144.19351196]
[-255.18568420 147.20034790]
[-240.44543457 144.42102051]
[-225.70516968 141.64167786]
[-225.38446045 126.66860962]
[-221.95614624 112.08377075]
[-215.56770325 98.52523041]
[-206.49618530 86.58667755]
[-195.13615417 76.79143524]
[-181.98260498 69.56948853]
[-167.60929871 65.23865509]
[-152.64381409 63.99056244]
[-137.74008179 65.88219452]
[-123.54988098 70.83327484]
[-110.69425964 78.62968445]
[-99.73641968 88.93271637]
[-91.15699768 101.29380035]
[-85.33300018 115.17399597]
[-70.59273529 112.39466095]
[-55.85247421 109.61533356]
[-44.77922058 99.65378571]
[-29.78437614 104.70009613]
[-15.04411411 101.92076111]
[-0.30385187 99.14143372]
[14.43640995 96.36210632]
[15.86986542 88.95211029]
[19.16003990 82.13500214]
[24.09839821 76.36895752]
[30.36522484 72.04471588]
[37.55030060 69.45913696]
[45.17975616 68.79479218]
[52.74732208 70.10717010]
[59.74791718 73.32017517]
[65.71135712 78.23051453]
[70.23395538 84.52047729]
[73.00579834 91.77848816]
[88.00048065 92.17779541]
[100.38130951 85.68112946]
[112.39882660 92.82752228]
[127.39350891 93.22682953]
[142.38819885 93.62613678]
[157.38687134 93.82580566]
[172.38687134 93.82580566]
[187.38687134 93.82580566]
[202.38687134 93.82580566]
[217.38687134 93.82580566]
[231.18704224 86.08850861]
[243.91430664 93.82580566]
[262.69998169 80.28227234]
[282.21002197 91.36812592]
[297.07733154 89.37724304]
[311.94461060 87.38636017]
[326.81192017 85.39547729]
[341.67919922 83.40459442]
[356.54647827 81.41371155]
[365.04940796 71.60410309]
[377.56228638 70.31323242]
[387.24777222 77.69326019]
[400.17181396 67.59862518]
[415.27255249 73.99387360]
[417.01568604 90.30011749]
[403.60800171 99.74288940]
[388.84219360 92.60827637]
[375.32156372 103.70942688]
[358.53738403 96.28100586]
[343.67007446 98.27188873]
[328.80279541 100.26277161]
[313.93548584 102.25365448]
[299.06820679 104.24453735]
[284.20089722 106.23542023]
[281.31021118 113.08564758]
[276.12170410 118.50690460]
[269.28039551 121.75432587]
[261.66250610 122.35776520]
[254.26309204 120.18920898]
[248.06628418 115.48600006]
[243.91430664 108.82580566]
[231.18704224 116.56311035]
[217.38687134 108.82580566]
[202.38687134 108.82580566]
[187.38687134 108.82580566]
[172.38687134 108.82580566]
[157.38687134 108.82580566]
[150.61146545 112.01319122]
[141.98889160 108.62081909]
[126.99420166 108.22151184]
[111.99951935 107.82220459]
[99.61869049 114.31887054]
[87.60117340 107.17247772]
[72.60649109 106.77317047]
[57.56188965 124.88626862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[6 46]
[7 45]
[8 44]
[22 30]
[23 29]
[24 28]
[62 116]
[63 115]
[65 113]
[66 112]
[67 111]
[68 109]
[69 108]
[70 107]
[71 106]
[72 105]
[74 103]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
[84 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
