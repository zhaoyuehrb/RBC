%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAGACAAGGCCUAGGGGCCUUGGGGCCAGGAGGGUACCCCCGUGAGGGCCUGGGCUCCUGGGUAAACAUUAAUGGGCUCAGUACCCAGCAGGUCAUGUGCGCGAUCAGGGGAUCUUUGACCUGCAACUGCUCCCGCCCCGUGUCUCCUCCCUGCAGGUGCCCCCUCACCACCCACACAGCAGAUCUAGACCUGGGCCUGGGUCUGUCCCUGCCCGAAAUCC\
) } def
/len { sequence length } bind def

/coor [
[201.04704285 194.57438660]
[202.09205627 184.79721069]
[205.34965515 175.72486877]
[192.68473816 167.68746948]
[180.01982117 159.65007019]
[167.35490417 151.61265564]
[154.68998718 143.57525635]
[142.02507019 135.53785706]
[129.36013794 127.50045776]
[114.46829987 127.21366119]
[106.96228027 113.28633881]
[91.97544098 112.65820312]
[78.68238831 119.60764313]
[65.38933563 126.55708313]
[52.09627914 133.50653076]
[38.80322647 140.45596313]
[25.51017189 147.40541077]
[12.21711826 154.35484314]
[-1.07593548 161.30429077]
[-14.36898899 168.25372314]
[-27.66204262 175.20317078]
[-40.95509720 182.15260315]
[-54.24814987 189.10205078]
[-58.09772491 194.45712280]
[-63.29235840 196.73052979]
[-68.01081085 196.05407715]
[-81.49272156 202.62963867]
[-94.97463226 209.20520020]
[-108.45654297 215.78077698]
[-121.93845367 222.35633850]
[-122.92368317 238.86631775]
[-132.05070496 252.54656982]
[-146.74792480 259.71334839]
[-162.95971680 258.49444580]
[-176.26542664 249.31727600]
[-189.65422058 256.08044434]
[-203.04299927 262.84359741]
[-211.56492615 276.85461426]
[-227.95138550 276.20947266]
[-235.34538269 261.57183838]
[-226.14062500 247.99963379]
[-209.80616760 249.45480347]
[-196.41738892 242.69165039]
[-183.02859497 235.92848206]
[-183.16769409 222.27746582]
[-177.38575745 209.83764648]
[-166.75869751 201.05902100]
[-153.32266235 197.69746399]
[-139.68408203 200.46382141]
[-128.51402283 208.87443542]
[-115.03211212 202.29885864]
[-101.55020142 195.72329712]
[-88.06829071 189.14772034]
[-74.58638000 182.57215881]
[-61.19758987 175.80899048]
[-47.90453720 168.85955811]
[-34.61148453 161.91011047]
[-21.31842995 154.96067810]
[-8.02537632 148.01123047]
[5.26767778 141.06179810]
[18.56073189 134.11235046]
[31.85378456 127.16291046]
[45.14683914 120.21347046]
[58.43989182 113.26403046]
[71.73294830 106.31459045]
[85.02600098 99.36515045]
[71.47133636 105.78941345]
[56.49763489 104.90157318]
[43.79710388 96.92057037]
[36.50143433 83.81433868]
[36.40959167 68.81462097]
[43.54422379 55.62003708]
[56.14606857 47.48410034]
[71.10778046 46.41297150]
[84.74008942 52.67076874]
[93.68156433 64.71443939]
[95.72754669 79.57305908]
[94.26380157 64.64464569]
[92.80005646 49.71623611]
[91.33631134 34.78782654]
[77.61548615 23.92839432]
[76.03003693 6.84149218]
[87.07505798 -5.84706402]
[85.40302277 -20.75358200]
[83.73098755 -35.66010284]
[82.05895233 -50.56661987]
[69.60546875 -56.46099091]
[61.75086594 -67.64884186]
[60.45780563 -81.14862061]
[65.95739746 -93.42652893]
[76.71663666 -101.32156372]
[75.25289917 -116.24997711]
[73.78915405 -131.17839050]
[72.32540894 -146.10679626]
[70.86166382 -161.03520203]
[69.39792633 -175.96362305]
[67.93418121 -190.89202881]
[66.47043610 -205.82043457]
[55.40721130 -220.54655457]
[63.28693771 -236.23182678]
[51.21928406 -246.08116150]
[49.73595428 -261.22232056]
[59.20016098 -272.66629028]
[49.97278976 -285.51797485]
[56.24317551 -299.02841187]
[43.73698807 -308.69125366]
[41.80934906 -324.37756348]
[51.60388947 -336.78088379]
[67.30968475 -338.54257202]
[79.60876465 -328.61743164]
[81.20429993 -312.89389038]
[71.14969635 -300.70043945]
[80.25746918 -288.91494751]
[74.10668182 -274.33831787]
[85.87108612 -265.27551270]
[87.77912140 -250.18200684]
[78.19345856 -237.90385437]
[87.44464874 -230.11999512]
[88.96485901 -217.72198486]
[81.39884949 -207.28417969]
[82.86258698 -192.35577393]
[84.32633209 -177.42736816]
[85.79007721 -162.49894714]
[87.25382233 -147.57054138]
[88.71756744 -132.64213562]
[90.18130493 -117.71371460]
[91.64505005 -102.78530884]
[106.06570435 -94.93201447]
[113.03025818 -79.87836456]
[109.61221313 -63.47782898]
[96.96546936 -52.23865509]
[98.63750458 -37.33213425]
[100.30953979 -22.42561722]
[101.98157501 -7.51909781]
[113.07299042 -0.97245121]
[118.45177460 10.94373226]
[115.95164490 23.97448540]
[106.26472473 33.32408142]
[107.72846985 48.25249481]
[109.19221497 63.18090439]
[110.65595245 78.10931396]
[114.99968719 100.62142181]
[130.79740906 101.48310089]
[137.39755249 114.83553314]
[150.06246948 122.87294006]
[162.72738647 130.91033936]
[175.39230347 138.94773865]
[188.05722046 146.98513794]
[200.72213745 155.02255249]
[213.38705444 163.05995178]
[232.69888306 149.48020935]
[257.46191406 148.70176697]
[279.58325195 162.25392151]
[291.13967896 186.77748108]
[306.13641357 187.09161377]
[321.13311768 187.40574646]
[336.12982178 187.71989441]
[345.95639038 179.37539673]
[358.43450928 179.93997192]
[366.90518188 188.56671143]
[381.89602661 189.09020996]
[396.88690186 189.61370850]
[402.83334351 175.64930725]
[413.42556763 164.77874756]
[427.23104858 158.47213745]
[442.38269043 157.58242798]
[456.83142090 162.22993469]
[468.62307739 171.78613281]
[476.16302490 184.95858765]
[478.43148804 199.96588135]
[475.12170410 214.77836609]
[466.68127441 227.39277649]
[454.25170898 236.10313416]
[439.51400757 239.73143005]
[424.46130371 237.78697205]
[411.12939453 230.53271484]
[401.32125854 218.94973755]
[396.36340332 204.60456848]
[381.37252808 204.08106995]
[366.38168335 203.55758667]
[351.34716797 212.61744690]
[335.81567383 202.71659851]
[320.81896973 202.40246582]
[305.82226562 202.08833313]
[290.82556152 201.77418518]
[286.98522949 208.21638489]
[299.99548340 215.68186951]
[313.00573730 223.14736938]
[327.53085327 226.89179993]
[328.74645996 241.84246826]
[315.01702881 247.88423157]
[304.81457520 236.88813782]
[292.05957031 228.99446106]
[279.30459595 221.10078430]
[275.46426392 227.54298401]
[282.87338257 240.58540344]
[290.28253174 253.62783813]
[297.69165039 266.67025757]
[305.10076904 279.71267700]
[317.29998779 283.88058472]
[323.20437622 294.88784790]
[320.13168335 306.58108521]
[327.35800171 319.72567749]
[334.58428955 332.87030029]
[349.52719116 338.70892334]
[354.14126587 354.07412720]
[344.88705444 367.17904663]
[328.86352539 367.97067261]
[318.36260986 355.84179688]
[321.43969727 340.09658813]
[314.21337891 326.95199585]
[306.98709106 313.80740356]
[291.50671387 305.53237915]
[292.05834961 287.12179565]
[284.64923096 274.07937622]
[277.24011230 261.03695679]
[269.83096313 247.99453735]
[262.42184448 234.95211792]
[251.33204651 237.51013184]
[240.14533997 237.38566589]
[229.49053955 234.67645264]
[219.94543457 229.62303162]
[212.00540161 222.59030151]
[206.05786133 214.04263306]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[11 142]
[12 66]
[13 65]
[14 64]
[15 63]
[16 62]
[17 61]
[18 60]
[19 59]
[20 58]
[21 57]
[22 56]
[23 55]
[26 54]
[27 53]
[28 52]
[29 51]
[30 50]
[35 44]
[36 43]
[37 42]
[77 141]
[78 140]
[79 139]
[80 138]
[83 134]
[84 133]
[85 132]
[86 131]
[91 127]
[92 126]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
[100 117]
[103 114]
[105 112]
[154 185]
[155 184]
[156 183]
[157 182]
[160 180]
[161 179]
[162 178]
[195 218]
[196 217]
[197 216]
[198 215]
[199 214]
[202 212]
[203 211]
[204 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
