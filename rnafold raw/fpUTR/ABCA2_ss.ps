%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGGAGCCAGCGCGGAUCGGGUCCCGGACGCCCGAGCGCCCCGCCCCCGCGCGGGCGAUGCCCAGCGGCGCGGCGGGCUGCGGGGCCCGGCGGGGCGCGCAGAGGAGCGGGCCGCGGCGCUGAGGCGGCGGAGCGUGGCCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[81.89137268 335.04391479]
[68.78684998 324.28713989]
[75.49553680 308.71697998]
[76.12788391 293.73031616]
[76.76023865 278.74365234]
[77.39258575 263.75698853]
[78.02493286 248.77032471]
[70.83104706 235.72817993]
[79.14323425 222.26646423]
[79.77558136 207.27980042]
[80.40792847 192.29313660]
[81.04028320 177.30645752]
[78.16036987 170.44453430]
[81.84724426 162.01147461]
[82.79541779 147.04147339]
[83.74358368 132.07147217]
[70.56061554 116.35187531]
[68.72506714 97.25216675]
[77.40281677 81.64104462]
[92.22723389 74.31575775]
[81.90383148 63.43333054]
[71.58042145 52.55090332]
[61.25701523 41.66847229]
[50.93360901 30.78604317]
[40.61020279 19.90361404]
[30.28679657 9.02118397]
[19.96338844 -1.86124599]
[9.63998222 -12.74367523]
[-0.68342435 -23.62610435]
[-15.79445267 -28.31304550]
[-18.94033051 -42.87164307]
[-27.17569733 -46.98116302]
[-29.36367035 -54.09402466]
[-39.45534897 -65.19168091]
[-49.54702759 -76.28934479]
[-59.63870621 -87.38700104]
[-69.73038483 -98.48465729]
[-87.37447357 -103.64352417]
[-90.50616455 -120.88146210]
[-100.82956696 -131.76390076]
[-111.15297699 -142.64633179]
[-121.47637939 -153.52874756]
[-131.79978943 -164.41117859]
[-147.00131226 -149.42771912]
[-175.91836548 -152.19764709]
[-187.92216492 -161.19256592]
[-199.92597961 -170.18748474]
[-211.92979431 -179.18240356]
[-223.93359375 -188.17730713]
[-239.54058838 -185.68780518]
[-252.28752136 -195.03077698]
[-254.61187744 -210.66320801]
[-245.13465881 -223.31065369]
[-229.47853088 -225.46961975]
[-216.93199158 -215.85920715]
[-214.93867493 -200.18112183]
[-202.93487549 -191.18620300]
[-190.93106079 -182.19128418]
[-178.92724609 -173.19636536]
[-166.92344666 -164.20144653]
[-160.92153931 -168.69891357]
[-148.91772461 -177.69383240]
[-142.91581726 -182.19128418]
[-148.17797852 -196.23797607]
[-159.39659119 -208.94935608]
[-150.28759766 -223.24839783]
[-134.02575684 -218.45376587]
[-134.13128662 -201.50015259]
[-128.86912537 -187.45344543]
[-120.91735840 -174.73458862]
[-110.59394836 -163.85215759]
[-100.27054596 -152.96972656]
[-89.94713593 -142.08729553]
[-79.62373352 -131.20486450]
[-67.50201416 -130.55862427]
[-58.81145477 -121.51749420]
[-58.63272476 -108.57633972]
[-48.54104614 -97.47867584]
[-38.44936752 -86.38101959]
[-28.35768890 -75.28336334]
[-18.26601028 -64.18569946]
[-8.05790138 -53.19504929]
[6.31472731 -49.28649139]
[10.19900513 -33.94951248]
[20.52241135 -23.06708145]
[30.84581947 -12.18465233]
[41.16922379 -1.30222309]
[51.49263382 9.58020687]
[61.81604004 20.46263695]
[72.13944244 31.34506607]
[82.46285248 42.22749710]
[92.78626251 53.10992432]
[103.10966492 63.99235535]
[117.46089935 68.35607910]
[132.09480286 65.06233215]
[143.85917664 54.48358154]
[157.97480774 59.23734665]
[172.60871887 55.94359589]
[187.24263000 52.64984512]
[199.00700378 42.07109451]
[213.12263489 46.82485962]
[227.75654602 43.53110886]
[242.39044189 40.23735809]
[250.62622070 26.74856758]
[266.00723267 23.11538696]
[279.40820312 31.49331856]
[282.87857056 46.91188431]
[274.35940552 60.22352219]
[258.90502930 63.53067398]
[245.68418884 54.87126160]
[231.05029297 58.16501236]
[216.41638184 61.45876312]
[205.69871521 71.80192566]
[190.53637695 67.28375244]
[175.90246582 70.57749939]
[161.26856995 73.87125397]
[150.55090332 84.21440887]
[135.38854980 79.69623566]
[120.75464630 82.98999023]
[130.60627747 93.00512695]
[134.94949341 108.44886017]
[146.95330811 117.44377899]
[158.95710754 126.43869781]
[170.96092224 135.43360901]
[182.96473694 144.42852783]
[199.26580811 149.08804321]
[199.30099487 166.04194641]
[183.01937866 170.76905823]
[173.96981812 156.43234253]
[161.96600342 147.43742371]
[149.96218872 138.44250488]
[137.95838928 129.44758606]
[125.95457458 120.45266724]
[119.14432526 123.59441376]
[105.52383423 129.87789917]
[98.71359253 133.01963806]
[97.76541901 147.98963928]
[96.81724548 162.95964050]
[96.02694702 177.93881226]
[95.39459991 192.92547607]
[94.76225281 207.91213989]
[94.12989807 222.89880371]
[101.27855682 237.01289368]
[93.01159668 249.40266418]
[92.37924957 264.38934326]
[91.74690247 279.37600708]
[91.11455536 294.36267090]
[90.48220062 309.34933472]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[9 142]
[10 141]
[11 140]
[12 139]
[14 138]
[15 137]
[16 136]
[20 93]
[21 92]
[22 91]
[23 90]
[24 89]
[25 88]
[26 87]
[27 86]
[28 85]
[29 84]
[31 82]
[33 81]
[34 80]
[35 79]
[36 78]
[37 77]
[39 74]
[40 73]
[41 72]
[42 71]
[43 70]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[63 69]
[64 68]
[94 119]
[95 118]
[97 116]
[98 115]
[99 114]
[101 112]
[102 111]
[103 110]
[121 133]
[122 132]
[123 131]
[124 130]
[125 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
