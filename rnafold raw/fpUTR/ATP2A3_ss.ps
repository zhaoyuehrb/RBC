%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:10:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCUGGCGCGGGCCGGGGCCGCCGCCGCCACUGCCGUCGGGUAAGGUCCCAGCACGGACAUGGCCUCGCGCGGCGCCCGCCCGGGCCCGAGUCCCCCGCGCCCCGCUUUGUAGCCCCCCGGCGGAGAGGCGGCCUCGACGGUGCGGACGGCGCAGACGGCCGGGCGGGCGGC\
) } def
/len { sequence length } bind def

/coor [
[115.08111572 138.92848206]
[103.99058533 128.82896423]
[102.53603363 113.89773560]
[96.98396301 127.83238983]
[91.43189240 141.76704407]
[85.87982178 155.70169067]
[80.32774353 169.63633728]
[74.77567291 183.57098389]
[77.67031860 199.71264648]
[64.96573639 210.08210754]
[49.73131180 204.01214600]
[47.63891220 187.74703979]
[60.84102249 178.01892090]
[66.39309692 164.08427429]
[71.94516754 150.14961243]
[77.49723816 136.21496582]
[83.04930878 122.28031158]
[88.60138702 108.34566498]
[80.98442078 95.42351532]
[66.10405731 93.53277588]
[51.22370148 91.64202881]
[36.34334183 89.75128174]
[21.46298409 87.86053467]
[6.56616306 86.10419464]
[-8.34590626 84.48241425]
[-20.59167671 94.10939789]
[-35.69153214 92.25225067]
[-44.79392624 80.51845551]
[-59.70599365 78.89666748]
[-74.61806488 77.27487946]
[-89.53013611 75.65309906]
[-98.43508148 77.84123993]
[-104.69591522 73.86505127]
[-119.57627106 71.97430420]
[-134.47309875 70.21796417]
[-149.38516235 68.59618378]
[-164.29724121 66.97439575]
[-179.20930481 65.35260773]
[-194.13540649 63.86550903]
[-209.08592224 62.64812851]
[-224.04682922 61.56576157]
[-239.00772095 60.48339462]
[-250.79481506 71.01144409]
[-266.56909180 70.03776550]
[-276.97192383 58.14001846]
[-275.83151245 42.37693024]
[-263.82446289 32.10045624]
[-248.07431030 33.40745163]
[-237.92535400 45.52249527]
[-222.96446228 46.60486221]
[-208.00355530 47.68722916]
[-201.08128357 45.02447891]
[-192.78311157 48.92658997]
[-185.81388855 46.38925171]
[-177.58752441 50.44054031]
[-162.67544556 52.06232452]
[-147.76338196 53.68411255]
[-132.85130310 55.30589676]
[-125.83741760 52.89479446]
[-117.68553162 57.09394455]
[-102.80516815 58.98469162]
[-87.90834808 60.74102783]
[-72.99627686 62.36281204]
[-58.08420944 63.98459625]
[-43.17214203 65.60638428]
[-31.76013565 56.10366058]
[-16.61407471 57.53595352]
[-6.72412109 69.57034302]
[8.18794823 71.19213104]
[15.20184422 68.78102875]
[23.35372925 72.98017883]
[38.23408890 74.87092590]
[53.11444855 76.76166534]
[67.99480438 78.65241241]
[82.87516785 80.54315948]
[115.27102661 84.41925812]
[129.72427368 80.40633392]
[144.17752075 76.39340973]
[158.63076782 72.38048553]
[173.08403015 68.36756134]
[187.53727722 64.35463715]
[201.99052429 60.34171295]
[216.44377136 56.32878494]
[230.89701843 52.31586075]
[245.35026550 48.30293655]
[250.28889465 43.82359695]
[255.90531921 42.70552444]
[260.39804077 44.41615295]
[274.98672485 40.92763901]
[289.57543945 37.43912888]
[303.52902222 22.92200279]
[321.81600952 29.14274979]
[336.26925659 25.12982559]
[347.49645996 13.98261261]
[361.82977295 18.03298187]
[376.28302002 14.02005768]
[390.66146851 9.74684525]
[404.96041870 5.21473885]
[419.25936890 0.68263286]
[433.55831909 -3.84947348]
[447.85726929 -8.38157940]
[462.15621948 -12.91368580]
[476.45516968 -17.44579124]
[490.43936157 -22.87184334]
[504.05300903 -29.17018127]
[517.66662598 -35.46851730]
[531.28027344 -41.76685333]
[544.89392090 -48.06518936]
[558.50750732 -54.36352539]
[572.12115479 -60.66186142]
[575.23486328 -75.74864197]
[586.50341797 -85.98942566]
[601.46441650 -87.61204529]
[614.35772705 -80.20257568]
[627.97131348 -86.50090790]
[641.58496094 -92.79924774]
[650.58410645 -106.50865936]
[666.93859863 -105.29991150]
[673.82446289 -90.41644287]
[664.15802002 -77.16910553]
[647.88330078 -79.18561554]
[634.26965332 -72.88727570]
[620.65606689 -66.58894348]
[617.95629883 -51.96535110]
[607.03405762 -41.61311340]
[591.93383789 -39.65441132]
[578.41949463 -47.04823303]
[564.80584717 -40.74989700]
[551.19226074 -34.45155716]
[537.57861328 -28.15322304]
[523.96496582 -21.85488510]
[510.35134888 -15.55654907]
[496.73770142 -9.25821304]
[510.75756836 -3.92498541]
[518.20166016 9.09751797]
[515.68322754 23.88458633]
[504.34802246 33.70870590]
[489.35311890 34.10029602]
[477.52059937 24.88120651]
[474.23379517 10.24574375]
[480.98727417 -3.14684057]
[466.68832397 1.38526559]
[452.38937378 5.91737175]
[438.09042358 10.44947815]
[423.79147339 14.98158455]
[409.49252319 19.51369095]
[395.19357300 24.04579735]
[392.22586060 27.82779503]
[386.83697510 29.76533699]
[380.29592896 28.47330666]
[365.84268188 32.48623276]
[355.64926147 43.34641266]
[340.28216553 39.58307648]
[325.82891846 43.59600067]
[321.59759521 52.94340515]
[312.72381592 58.51988220]
[302.02627563 58.26759720]
[293.06396484 52.02783203]
[278.47525024 55.51634598]
[263.88653564 59.00485611]
[249.36320496 62.75618744]
[234.90994263 66.76911163]
[220.45669556 70.78203583]
[206.00344849 74.79496002]
[191.55020142 78.80788422]
[177.09695435 82.82080841]
[162.64369202 86.83374023]
[148.19044495 90.84666443]
[133.73719788 94.85958862]
[119.28395081 98.87251282]
[133.96867371 101.93177795]
[142.81106567 114.04837036]
[141.24580383 128.96647644]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[19 75]
[20 74]
[21 73]
[22 72]
[23 71]
[24 69]
[25 68]
[28 65]
[29 64]
[30 63]
[31 62]
[33 61]
[34 60]
[35 58]
[36 57]
[37 56]
[38 55]
[39 53]
[40 51]
[41 50]
[42 49]
[76 170]
[77 169]
[78 168]
[79 167]
[80 166]
[81 165]
[82 164]
[83 163]
[84 162]
[85 161]
[88 160]
[89 159]
[90 158]
[92 154]
[93 153]
[95 151]
[96 150]
[97 147]
[98 146]
[99 145]
[100 144]
[101 143]
[102 142]
[103 141]
[104 133]
[105 132]
[106 131]
[107 130]
[108 129]
[109 128]
[110 127]
[114 123]
[115 122]
[116 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
