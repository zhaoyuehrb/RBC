%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCAAUUUCCGUUAGGUGCUGAAGGCUGUGGCGCGCGGCUGUCCCCAUUCCCACGUGAAGCGCUACGCUAGCAUCGCUCGGCUGGCGGCUCCCAGCUCGCCGCGGAGCAGUCCCGGCAGCAGCGGGGGACCGGAAGUGGCUCGCGGAGGCUCAGAAGCUAGUCCCGGAGCCCGGCGUGUGGCGCCUCGGAGCACGGUGACGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[260.14730835 203.56231689]
[247.80255127 195.04135132]
[235.45779419 186.52038574]
[223.11303711 177.99940491]
[208.24340820 177.13717651]
[201.28137207 162.93009949]
[188.93661499 154.40913391]
[176.59185791 145.88816833]
[164.24710083 137.36718750]
[151.90234375 128.84622192]
[139.55758667 120.32524872]
[127.21282959 111.80427551]
[114.66729736 126.00281525]
[95.97520447 129.77494812]
[78.68545532 121.44715118]
[69.87138367 104.26304626]
[55.11708069 106.96687317]
[40.36278534 109.67070007]
[25.60848618 112.37452698]
[10.85418701 115.07834625]
[-3.90011191 117.78217316]
[-7.87841558 121.16876984]
[-12.31447697 122.55088806]
[-16.36752892 122.09008789]
[-19.38296127 120.25839233]
[-34.24458694 122.29113770]
[-49.10621643 124.32387543]
[-57.18684769 128.58827209]
[-64.20745850 126.27333069]
[-79.09809113 128.08137512]
[-93.98872375 129.88943481]
[-108.87935638 131.69747925]
[-123.76998901 133.50553894]
[-138.66062927 135.31358337]
[-153.55125427 137.12162781]
[-168.39710999 139.26654053]
[-183.19056702 141.74722290]
[-197.98400879 144.22790527]
[-200.71697998 159.13786316]
[-208.38731384 172.21232605]
[-220.06878662 181.87251282]
[-234.35078430 186.95190430]
[-249.50871277 186.83712769]
[-263.71215820 181.54203796]
[-275.24600220 171.70606995]
[-282.71746826 158.51693726]
[-285.22433472 143.56732178]
[-282.46389771 128.66242981]
[-274.76947021 115.60211182]
[-263.07022095 105.96347046]
[-248.77888489 100.91041565]
[-233.62120056 101.05312347]
[-219.42753601 106.37436676]
[-207.91183472 116.23158264]
[-200.46469116 129.43444824]
[-185.67124939 126.95377350]
[-170.87779236 124.47309875]
[-168.54382324 121.82723999]
[-164.81138611 120.18151093]
[-160.16499329 120.18130493]
[-155.35931396 122.23100281]
[-140.46867371 120.42295074]
[-125.57804108 118.61489868]
[-110.68740845 116.80684662]
[-95.79677582 114.99880219]
[-80.90614319 113.19075012]
[-66.01551056 111.38269806]
[-51.13895798 109.46224976]
[-36.27732849 107.42950439]
[-21.41570091 105.39676666]
[-6.60393763 103.02787781]
[8.15036106 100.32405090]
[22.90465927 97.62022400]
[37.65895844 94.91639709]
[52.41325760 92.21257019]
[67.16755676 89.50875092]
[74.73286438 76.55628967]
[69.83982086 62.37679291]
[64.94677734 48.19729614]
[60.05373764 34.01779938]
[48.23801422 23.49642754]
[51.40040970 8.94141102]
[46.50736618 -5.23808622]
[40.74845886 -12.33151054]
[41.64926147 -19.66884422]
[36.97093582 -33.92062378]
[32.29261017 -48.17240524]
[27.61428070 -62.42418671]
[22.82846069 -76.64022827]
[17.93541718 -90.81972504]
[13.04237652 -104.99922943]
[2.16000342 -117.99961853]
[11.63979816 -132.05557251]
[27.77070808 -126.83732605]
[27.22187424 -109.89226532]
[32.11491394 -95.71276855]
[37.00795746 -81.53327179]
[42.16268539 -76.23452759]
[41.86606216 -67.10251617]
[46.54438782 -52.85073471]
[51.22271729 -38.59895325]
[55.90104294 -24.34717178]
[60.68686676 -10.13112831]
[65.57991028 4.04836941]
[77.04564667 13.55552769]
[74.23323059 29.12475777]
[79.12627411 43.30425644]
[84.01931763 57.48375320]
[88.91236115 71.66324615]
[105.01558685 70.37584686]
[119.29919434 77.47401428]
[126.66801453 64.40877533]
[134.03683472 51.34353638]
[141.40565491 38.27829742]
[148.77447510 25.21305656]
[148.16082764 6.81020117]
[163.60420227 -1.52251303]
[170.77485657 -14.69755650]
[169.82139587 -31.06896210]
[183.66954041 -39.85309601]
[198.07350159 -32.01359177]
[198.21572876 -15.61505890]
[183.94989014 -7.52690506]
[176.77925110 5.64813805]
[179.90126038 17.33638573]
[174.03315735 28.37208557]
[161.83972168 32.58187485]
[154.47090149 45.64711761]
[147.10208130 58.71235657]
[139.73326111 71.77759552]
[132.36444092 84.84283447]
[135.73379517 99.45951843]
[148.07855225 107.98049164]
[160.42330933 116.50146484]
[172.76806641 125.02243042]
[185.11282349 133.54341125]
[197.45758057 142.06437683]
[209.80235291 150.58534241]
[225.55494690 152.05706787]
[231.63400269 165.65464783]
[243.97875977 174.17562866]
[256.32351685 182.69659424]
[268.66827393 191.21755981]
[282.69351196 196.53663635]
[297.58416748 198.34469604]
[312.21633911 192.32722473]
[323.91818237 201.54222107]
[332.81686401 199.46972656]
[339.01943970 203.49166870]
[353.88104248 205.52441406]
[368.74267578 207.55715942]
[383.60430908 209.58990479]
[398.46594238 211.62263489]
[416.76318359 203.16615295]
[431.51794434 215.66140747]
[446.43417358 217.24435425]
[458.56735229 207.11708069]
[474.30014038 208.61865234]
[484.29858398 220.85821533]
[482.63076782 236.57424927]
[470.28616333 246.44271851]
[454.58865356 244.60882568]
[444.85122681 232.16059875]
[429.93499756 230.57765198]
[422.59503174 237.69075012]
[412.33578491 239.62898254]
[402.50134277 235.51480103]
[396.43319702 226.48426819]
[381.57156372 224.45152283]
[366.70993042 222.41877747]
[351.84832764 220.38604736]
[336.98669434 218.35330200]
[322.11013794 216.43284607]
[308.54302979 222.57963562]
[295.77609253 213.23532104]
[280.88546753 211.42727661]
[276.44049072 217.46815491]
[288.52212524 226.35827637]
[279.63183594 238.43977356]
[267.55056763 229.54992676]
[263.10562134 235.59080505]
[269.26181030 249.26930237]
[275.41799927 262.94781494]
[281.57418823 276.62631226]
[287.73037720 290.30480957]
[293.88656616 303.98330688]
[300.14587402 317.61489868]
[306.50796509 331.19888306]
[312.87002563 344.78283691]
[328.13186646 347.58572388]
[338.80703735 358.84716797]
[340.79074097 374.23690796]
[333.32019043 387.83731079]
[319.26797485 394.41870117]
[304.03744507 391.45040894]
[293.48507690 380.07382202]
[291.66842651 364.66345215]
[299.28607178 351.14489746]
[292.92401123 337.56094360]
[286.56192017 323.97698975]
[280.87680054 319.25180054]
[280.20806885 310.13949585]
[274.05187988 296.46099854]
[267.89569092 282.78250122]
[261.73950195 269.10400391]
[255.58329773 255.42549133]
[249.42710876 241.74699402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 143]
[2 142]
[3 141]
[4 140]
[6 138]
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[12 132]
[16 76]
[17 75]
[18 74]
[19 73]
[20 72]
[21 71]
[25 70]
[26 69]
[27 68]
[29 67]
[30 66]
[31 65]
[32 64]
[33 63]
[34 62]
[35 61]
[36 57]
[37 56]
[38 55]
[77 109]
[78 108]
[79 107]
[80 106]
[82 104]
[83 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 97]
[90 96]
[91 95]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
[117 124]
[118 123]
[144 176]
[145 175]
[147 173]
[149 172]
[150 171]
[151 170]
[152 169]
[153 168]
[155 164]
[156 163]
[181 207]
[182 206]
[183 205]
[184 204]
[185 203]
[186 202]
[187 200]
[188 199]
[189 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
