%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGACGCGGAAGAUUUACGUAUGGUGCCUCGCUCUGGGAUAGCUUUACGGCUUCUGGGAGCUGCUGCUUCGCUGUGAGAAGUAUCCGCGACGAGCUAUCCGGGAAAGGGCCGAAUGCGAUCAAACCUAAUCCGCGAGACUUGCUAAGGUUCUGUGCUACAAAUUGAUGUUUAGAUAAACUUCAGUGAA\
) } def
/len { sequence length } bind def

/coor [
[76.26243591 84.62053680]
[66.28707123 73.41821289]
[56.31170273 62.21589279]
[46.33633423 51.01356888]
[36.36096573 39.81124878]
[26.02066231 28.94487000]
[15.32673645 18.42631912]
[4.63280964 7.90776682]
[-6.06111717 -2.61078501]
[-16.75504494 -13.12933731]
[-27.44897079 -23.64788818]
[-38.31534958 -33.98818970]
[-49.35120773 -44.14741516]
[-64.74465179 -47.80149841]
[-68.86808014 -62.11396408]
[-79.90393829 -72.27318573]
[-90.93979645 -82.43241119]
[-110.78082275 -85.92854309]
[-115.78643036 -104.59478760]
[-127.15215302 -114.38357544]
[-138.51786804 -124.17236328]
[-149.88359070 -133.96115112]
[-161.24931335 -143.74993896]
[-176.27278137 -140.34379578]
[-190.25772095 -146.36666870]
[-197.92390442 -159.31632996]
[-196.51168823 -174.11982727]
[-207.87741089 -183.90861511]
[-219.24313354 -193.69740295]
[-227.80433655 -196.93473816]
[-230.71412659 -203.74322510]
[-246.27372742 -203.01074219]
[-257.49237061 -213.28675842]
[-258.09478760 -228.12498474]
[-269.29711914 -238.10034180]
[-280.49945068 -248.07571411]
[-295.95120239 -251.47479248]
[-300.31069946 -265.71710205]
[-311.51303101 -275.69247437]
[-322.71536255 -285.66784668]
[-333.91766357 -295.64321899]
[-345.11999512 -305.61859131]
[-356.32232666 -315.59396362]
[-367.52462769 -325.56933594]
[-378.72695923 -335.54470825]
[-389.92929077 -345.52005005]
[-408.77197266 -343.69308472]
[-422.73956299 -355.99417114]
[-423.28912354 -374.27908325]
[-434.81512451 -383.87863159]
[-446.34115601 -393.47814941]
[-458.10168457 -402.78887939]
[-470.08950806 -411.80511475]
[-482.07733154 -420.82131958]
[-494.06515503 -429.83752441]
[-506.05297852 -438.85375977]
[-521.73266602 -440.96520996]
[-527.25335693 -454.79888916]
[-542.93304443 -456.91036987]
[-548.45379639 -470.74404907]
[-560.44158936 -479.76025391]
[-572.42944336 -488.77648926]
[-586.86016846 -483.32147217]
[-601.94451904 -486.55661011]
[-612.86907959 -497.44961548]
[-616.14794922 -512.52453613]
[-610.73474121 -526.97100830]
[-598.35687256 -536.17926025]
[-582.96405029 -537.21093750]
[-569.46801758 -529.73681641]
[-562.17541504 -516.14190674]
[-563.41320801 -500.76431274]
[-551.42541504 -491.74807739]
[-539.43756104 -482.73187256]
[-524.61535645 -481.26528931]
[-518.23718262 -466.78671265]
[-503.41494751 -465.32015991]
[-497.03674316 -450.84158325]
[-485.04891968 -441.82534790]
[-473.06109619 -432.80914307]
[-461.07327271 -423.79293823]
[-449.08547974 -414.77670288]
[-445.54522705 -414.91430664]
[-441.76339722 -413.33267212]
[-438.55392456 -409.93759155]
[-436.74160767 -405.00418091]
[-425.21560669 -395.40463257]
[-413.68957520 -385.80511475]
[-402.80151367 -389.28286743]
[-391.47106934 -387.04159546]
[-382.54345703 -379.52587891]
[-378.31741333 -368.51934814]
[-379.95391846 -356.72238159]
[-368.75158691 -346.74700928]
[-357.54928589 -336.77163696]
[-346.34695435 -326.79629517]
[-335.14462280 -316.82092285]
[-323.94232178 -306.84555054]
[-312.73999023 -296.87017822]
[-301.53765869 -286.89480591]
[-290.33532715 -276.91943359]
[-275.68484497 -274.23388672]
[-270.52407837 -259.27804565]
[-259.32174683 -249.30267334]
[-248.11943054 -239.32730103]
[-233.31092834 -240.44248962]
[-221.80807495 -230.48562622]
[-220.73875427 -214.94554138]
[-209.45434570 -205.06312561]
[-198.08862305 -195.27433777]
[-186.72290039 -185.48554993]
[-172.29238892 -189.07696533]
[-158.34924316 -183.41548157]
[-150.31947327 -170.47808838]
[-151.46054077 -155.11566162]
[-140.09480286 -145.32687378]
[-128.72908020 -135.53808594]
[-117.36336517 -125.74929810]
[-105.99764252 -115.96051025]
[-95.89511871 -117.63419342]
[-86.34255981 -113.37265778]
[-80.60266876 -104.36643982]
[-80.78057861 -93.46826935]
[-69.74472046 -83.30904388]
[-58.70885849 -73.14981842]
[-44.10477066 -70.22238922]
[-39.19198227 -55.18327332]
[-28.15612602 -45.02404785]
[-23.41517067 -44.32492447]
[-19.06862640 -40.62866974]
[-16.93041992 -34.34181595]
[-6.23649216 -23.82326317]
[4.45743465 -13.30471134]
[15.15136147 -2.78615999]
[25.84528732 7.73239183]
[36.53921509 18.25094414]
[39.35766602 18.35315514]
[42.30485916 19.58810616]
[44.94537735 22.01028442]
[46.83227921 25.51435852]
[47.56328583 29.83588028]
[57.53865433 41.03820038]
[67.51402283 52.24052429]
[77.48939514 63.44284439]
[87.46475983 74.64517212]
[105.96842957 68.18083191]
[126.90760040 75.39109802]
[140.36608887 96.10326385]
[154.47088623 101.20766449]
[168.57566833 106.31206512]
[183.65473938 100.83470154]
[197.26298523 109.33147430]
[198.96133423 125.28437805]
[187.44696045 136.45571899]
[171.55270386 134.27578735]
[163.47128296 120.41685486]
[149.36648560 115.31245422]
[135.26168823 110.20806122]
[130.41444397 115.93119049]
[141.86054993 125.62586975]
[132.16567993 137.07180786]
[120.71996307 127.37744904]
[115.87271881 133.10058594]
[123.22907257 146.17283630]
[130.58541870 159.24510193]
[137.94177246 172.31736755]
[145.29812622 185.38963318]
[158.80899048 193.62171936]
[158.30781555 208.50788879]
[165.66416931 221.58015442]
[173.02050781 234.65240479]
[180.37686157 247.72467041]
[194.75570679 255.61016846]
[194.84553528 272.00906372]
[180.55392456 280.05160522]
[166.58288574 271.46429443]
[167.30461121 255.08102417]
[159.94825745 242.00875854]
[152.59190369 228.93649292]
[145.23554993 215.86424255]
[132.25085449 208.56716919]
[132.22586060 192.74598694]
[124.86951447 179.67372131]
[117.51316071 166.60145569]
[110.15680695 153.52919006]
[102.80045319 140.45693970]
[86.08585358 135.46823120]
[74.01531982 124.40143585]
[68.40049744 110.15795135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 145]
[2 144]
[3 143]
[4 142]
[5 141]
[6 136]
[7 135]
[8 134]
[9 133]
[10 132]
[11 131]
[12 128]
[13 127]
[15 125]
[16 124]
[17 123]
[19 119]
[20 118]
[21 117]
[22 116]
[23 115]
[27 111]
[28 110]
[29 109]
[31 108]
[34 105]
[35 104]
[36 103]
[38 101]
[39 100]
[40 99]
[41 98]
[42 97]
[43 96]
[44 95]
[45 94]
[46 93]
[49 88]
[50 87]
[51 86]
[52 82]
[53 81]
[54 80]
[55 79]
[56 78]
[58 76]
[60 74]
[61 73]
[62 72]
[148 158]
[149 157]
[150 156]
[163 186]
[164 185]
[165 184]
[166 183]
[167 182]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
