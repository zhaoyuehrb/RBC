%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCACGCGGCCCCGCGAGGUCUGUGGGAUACAUAGUAGUCCUCAAGGCGGGUCUCACUCUUGGCCGCUGCAACUUGAGGACUACACUUCCAAGGAGGCAGCGCGGCGCGCCGAGAACCACCCGAGGCCGUGAUUGGCUGGUGAGCCGGCCGCACGCGGAGGAUCCUAAGGAGCAGCUCUGUUGCGACAUAGGCCGAGCAGCGAGGCCCAGCUCCCUGAAACAACAGUAACCUACCCCUGUGGGUCAUCAUC\
) } def
/len { sequence length } bind def

/coor [
[29.33114815 887.59082031]
[21.42308044 874.84307861]
[19.21355438 889.67944336]
[17.00402832 904.51580811]
[20.65128136 921.07281494]
[5.75100565 929.16094971]
[-6.14586020 917.08197021]
[2.16765451 902.30627441]
[4.37718010 887.46990967]
[6.58670568 872.63354492]
[8.06270981 857.70635986]
[8.80160904 842.72454834]
[9.54050827 827.74273682]
[10.27940655 812.76098633]
[11.01830578 797.77917480]
[8.21672916 790.96295166]
[11.85971832 782.61767578]
[12.78313160 767.64617920]
[10.06574154 760.79589844]
[13.81126404 752.49621582]
[14.91905212 737.53717041]
[16.02684021 722.57812500]
[8.70703793 715.49761963]
[6.43037081 705.34655762]
[10.17955780 695.40783691]
[18.94785881 689.03149414]
[20.42386246 674.10424805]
[21.89986610 659.17706299]
[23.37586975 644.24987793]
[24.85187531 629.32269287]
[18.40449142 615.89581299]
[27.46218300 602.92395020]
[28.93818665 587.99676514]
[30.41419029 573.06958008]
[23.27105713 565.81085205]
[21.24517632 555.60681152]
[25.23809052 545.76342773]
[34.16082764 539.60504150]
[36.00415039 524.71875000]
[29.88952827 511.13711548]
[39.26406479 498.39236450]
[41.10738754 483.50607300]
[33.92608643 473.79370117]
[35.32128143 461.39254761]
[45.08774185 452.99578857]
[47.11431885 438.13333130]
[49.14089966 423.27084351]
[40.55394363 405.92800903]
[53.21303177 390.21676636]
[54.87282181 375.30886841]
[56.53261185 360.40097046]
[58.10054016 345.48315430]
[59.57654572 330.55593872]
[61.05254745 315.62875366]
[62.52855301 300.70153809]
[64.00455475 285.77432251]
[65.48056030 270.84713745]
[66.95656586 255.91992188]
[60.50918198 242.49307251]
[69.56687164 229.52122498]
[71.04287720 214.59402466]
[72.42690277 199.65800476]
[73.71889496 184.71374512]
[75.01089478 169.76950073]
[76.30288696 154.82524109]
[77.59487915 139.88098145]
[78.88687134 124.93673706]
[80.17887115 109.99247742]
[73.49279022 96.56503296]
[60.78841782 88.59013367]
[48.08404541 80.61524200]
[35.37967300 72.64035034]
[22.67529869 64.66545868]
[5.68159103 68.87278748]
[-8.80427074 59.65753555]
[-12.06405640 43.14581299]
[-24.86571312 35.32804108]
[-37.66736984 27.51026726]
[-50.46902847 19.69249344]
[-59.39641571 17.89919281]
[-63.37940216 11.69872665]
[-76.08377838 3.72383475]
[-88.78814697 -4.25105715]
[-104.13682556 -0.48361152]
[-117.61048889 -8.74412155]
[-121.21544647 -24.13177299]
[-112.81295013 -37.51734543]
[-97.38803864 -40.95941544]
[-84.09205627 -32.41586685]
[-80.81325531 -16.95543098]
[-68.10888672 -8.98053837]
[-55.40451050 -1.00564635]
[-42.65125275 6.89083624]
[-29.84959602 14.70860958]
[-17.04793930 22.52638245]
[-4.24628258 30.34415627]
[7.71496391 25.59671402]
[20.41832352 28.64237022]
[29.18372917 38.58905411]
[30.65019226 51.96108627]
[43.35456467 59.93598175]
[56.05893707 67.91087341]
[68.76331329 75.88576508]
[81.46768188 83.86065674]
[94.97648621 77.34050751]
[96.63627625 62.43262100]
[98.29606628 47.52473450]
[99.86399078 32.60690689]
[101.33999634 17.67970276]
[102.81600189 2.75249982]
[100.55049896 -6.06689215]
[104.40324402 -12.34911442]
[106.06303406 -27.25700188]
[107.72282410 -42.16489029]
[109.38261414 -57.07277679]
[107.22593689 -65.91941071]
[111.15578461 -72.15368652]
[101.71611023 -81.73776245]
[99.54260254 -94.81616211]
[105.20645142 -106.58783722]
[116.44274139 -112.86122894]
[118.46931458 -127.72370148]
[120.49589539 -142.58616638]
[122.52247620 -157.44863892]
[120.56930542 -162.22918701]
[120.62138367 -166.82575989]
[122.27775574 -170.51092529]
[124.90838623 -172.81892395]
[127.48277283 -187.59635925]
[130.05715942 -202.37379456]
[132.63154602 -217.15122986]
[135.20593262 -231.92866516]
[129.06045532 -247.13278198]
[139.36674500 -259.88867188]
[155.52256775 -257.07412720]
[160.90818787 -241.58456421]
[149.98335266 -229.35427856]
[147.40898132 -214.57684326]
[144.83459473 -199.79940796]
[142.26020813 -185.02197266]
[139.68582153 -170.24453735]
[137.38494873 -155.42205811]
[135.35836792 -140.55958557]
[133.33178711 -125.69712067]
[131.30520630 -110.83464813]
[142.04591370 -97.87701416]
[140.03874207 -80.82614136]
[126.04209137 -70.31036377]
[124.29050446 -55.41298676]
[122.63071442 -40.50510025]
[120.97092438 -25.59721184]
[119.31113434 -10.68932438]
[117.74320221 4.22850418]
[116.26719666 19.15570831]
[114.79119873 34.08291245]
[117.25360107 41.02888489]
[113.20394897 49.18452454]
[111.54415894 64.09241486]
[109.88436890 79.00029755]
[123.01112366 86.25897217]
[134.75503540 76.92727661]
[146.49894714 67.59558868]
[155.13833618 53.00801468]
[171.54745483 57.27153015]
[171.99304199 74.21961975]
[155.83064270 79.33950043]
[144.08673096 88.67119598]
[132.34281921 98.00288391]
[135.68585205 104.71661377]
[150.65742493 105.63971710]
[142.37193298 118.14405823]
[145.71496582 124.85778809]
[153.77253723 111.52687073]
[168.55548096 107.93251801]
[181.21481323 115.69634247]
[195.73895264 111.94809723]
[210.26309204 108.19985199]
[224.78723145 104.45160675]
[239.31137085 100.70336151]
[253.13714600 90.89090729]
[266.39349365 101.46000671]
[259.90716553 117.12409973]
[243.05961609 115.22750092]
[228.53547668 118.97574615]
[214.01133728 122.72399139]
[199.48719788 126.47223663]
[184.96305847 130.22047424]
[177.64166260 143.14073181]
[162.96551514 147.14888000]
[149.46321106 139.38192749]
[127.32431030 142.46076965]
[109.16712952 136.63000488]
[97.96625519 124.94367981]
[95.12312317 111.28446960]
[93.83113098 126.22872925]
[92.53913116 141.17298889]
[91.24713898 156.11723328]
[89.95514679 171.06149292]
[88.66315460 186.00575256]
[87.37115479 200.94999695]
[89.74514008 209.74081421]
[85.97007751 216.07002258]
[84.49407959 230.99722290]
[90.83588409 245.49177551]
[81.88376617 257.39593506]
[80.40776825 272.32315063]
[78.93176270 287.25033569]
[77.45575714 302.17755127]
[75.97975159 317.10473633]
[74.50374603 332.03195190]
[73.02774048 346.95916748]
[75.29325104 355.77853394]
[71.44049835 362.06076050]
[69.78070831 376.96865845]
[68.12091827 391.87655640]
[75.37189484 399.93658447]
[76.97277069 410.43765259]
[72.63533783 419.89349365]
[64.00336456 425.29742432]
[61.97678757 440.15991211]
[59.95021057 455.02236938]
[67.30614471 471.91757202]
[55.99369431 485.34939575]
[54.15037155 500.23568726]
[60.13314819 514.88208008]
[50.89045715 526.56207275]
[49.04713440 541.44836426]
[57.71679688 559.66741943]
[45.34139633 574.54553223]
[43.86539078 589.47277832]
[42.38938522 604.39996338]
[48.73119736 618.89453125]
[39.77907944 630.79864502]
[38.30307388 645.72589111]
[36.82707214 660.65307617]
[35.35106659 675.58026123]
[33.87506104 690.50750732]
[42.99096298 708.50738525]
[30.98587799 723.68591309]
[29.87808990 738.64495850]
[28.77030182 753.60400391]
[27.75468254 768.56958008]
[26.83126831 783.54113770]
[26.00009537 798.51806641]
[25.26119614 813.49987793]
[24.52229691 828.48162842]
[23.78339958 843.46343994]
[23.04450035 858.44525146]
[33.29471588 847.49383545]
[48.00601959 844.56506348]
[61.66891479 850.75585938]
[69.16654968 863.74755859]
[67.69099426 878.67480469]
[57.79486465 889.94720459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 10]
[3 9]
[4 8]
[11 248]
[12 247]
[13 246]
[14 245]
[15 244]
[17 243]
[18 242]
[20 241]
[21 240]
[22 239]
[26 237]
[27 236]
[28 235]
[29 234]
[30 233]
[32 231]
[33 230]
[34 229]
[38 227]
[39 226]
[41 224]
[42 223]
[45 221]
[46 220]
[47 219]
[49 215]
[50 214]
[51 213]
[52 211]
[53 210]
[54 209]
[55 208]
[56 207]
[57 206]
[58 205]
[60 203]
[61 202]
[62 200]
[63 199]
[64 198]
[65 197]
[66 196]
[67 195]
[68 194]
[69 104]
[70 103]
[71 102]
[72 101]
[73 100]
[76 96]
[77 95]
[78 94]
[79 93]
[81 92]
[82 91]
[83 90]
[105 159]
[106 158]
[107 157]
[108 155]
[109 154]
[110 153]
[112 152]
[113 151]
[114 150]
[115 149]
[117 148]
[121 145]
[122 144]
[123 143]
[124 142]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
[160 168]
[161 167]
[162 166]
[172 190]
[175 187]
[176 186]
[177 185]
[178 184]
[179 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
