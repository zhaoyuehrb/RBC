%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUAAAAGCGCGGGAGCGAGGCCCGGCGGCUCCAGUUCUGGGGCUUUUGCUUUCGCUCGAUUAGUUGCUGUGAGGCUGCUCCGCGGGCCUCGCCUGGACGCUGACUCCCUGUGACUUAGCCCUGAUCCUCAGGAAGGCAGGCCAUCGAGAGUCCAGAGGCACCCGUGGCCUGGGGGUAGGGUGGGAUAGCA\
) } def
/len { sequence length } bind def

/coor [
[184.55137634 160.48815918]
[177.37713623 159.29182434]
[170.56016541 156.72837830]
[164.35873413 152.89091492]
[159.00852966 147.92088318]
[154.71379089 142.00286865]
[151.63940430 135.35771179]
[149.90467834 128.23429871]
[149.57862854 120.90022278]
[135.07931519 117.05706024]
[120.58000183 113.21389008]
[106.08068848 109.37072754]
[91.55073547 105.64508057]
[76.29467773 109.83595276]
[65.80205536 99.26457214]
[51.24241257 95.65670013]
[42.14533234 96.63019562]
[36.47716522 91.87071991]
[21.97785187 88.02755737]
[7.47853851 84.18438721]
[-7.02077436 80.34122467]
[-21.52008629 76.49805450]
[-36.01940155 72.65489197]
[-50.51871109 68.81172180]
[-65.01802826 64.96855927]
[-79.51734161 61.12538910]
[-94.01664734 57.28222275]
[-108.63280487 53.91058731]
[-123.35047913 51.01401901]
[-138.06816101 48.11745071]
[-152.78582764 45.22088242]
[-167.50349426 42.32431030]
[-182.24414062 39.54700470]
[-197.00679016 36.88913727]
[-211.79046631 34.35089111]
[-226.59422302 31.93242836]
[-241.39797974 29.51396370]
[-256.20172119 27.09549904]
[-273.26043701 34.01207733]
[-286.40716553 22.39664268]
[-301.24813843 20.21821594]
[-316.08911133 18.03978729]
[-330.97860718 16.22246170]
[-345.90786743 14.76731396]
[-360.83709717 13.31216621]
[-375.76635742 11.85701847]
[-384.63455200 24.39699173]
[-398.59130859 30.80825615]
[-413.88235474 29.36621475]
[-426.39447021 20.45877075]
[-432.76196289 6.48197937]
[-431.27197266 -8.80447197]
[-422.32537842 -21.28860283]
[-408.32867432 -27.61224747]
[-393.04696655 -26.07437515]
[-380.59094238 -17.08866692]
[-374.31121826 -3.07223248]
[-359.38195801 -1.61708474]
[-344.45269775 -0.16193697]
[-329.52346802 1.29321086]
[-326.57473755 -0.66443276]
[-322.52731323 -1.28307962]
[-318.02453613 -0.06016434]
[-313.91067505 3.19881439]
[-299.06970215 5.37724304]
[-284.22872925 7.55567169]
[-274.33099365 0.58592439]
[-261.94100952 2.28903031]
[-253.78326416 12.29174900]
[-238.97950745 14.71021271]
[-224.17576599 17.12867737]
[-209.37200928 19.54714012]
[-202.25363159 17.51996040]
[-194.34892273 22.12649155]
[-179.58627319 24.78435707]
[-172.43600464 22.87270927]
[-164.60693359 27.60663986]
[-149.88925171 30.50320816]
[-135.17158508 33.39977646]
[-120.45391083 36.29634476]
[-105.73623657 39.19291306]
[-103.32872009 37.73071289]
[-100.19292450 37.14103317]
[-96.66080475 37.70758057]
[-93.16132355 39.58783340]
[-90.17348480 42.78290939]
[-75.67417145 46.62607574]
[-61.17485809 50.46924210]
[-46.67554474 54.31241226]
[-32.17623138 58.15557861]
[-17.67691994 61.99874496]
[-3.17760754 65.84191132]
[11.32170486 69.68507385]
[25.82101822 73.52824402]
[40.32033157 77.37140656]
[54.85028458 81.09705353]
[69.40992737 84.70492554]
[83.62458038 80.25599670]
[95.15860748 91.08544159]
[103.13059235 89.81261444]
[109.92385101 94.87141418]
[124.42316437 98.71457672]
[138.92248535 102.55774689]
[153.42179871 106.40091705]
[170.22912598 89.61932373]
[193.61564636 86.21591187]
[214.30117798 97.39865875]
[224.16238403 118.61569214]
[239.11325073 119.82890320]
[254.06410217 121.04210663]
[269.01495361 122.25531006]
[258.13980103 111.92424774]
[254.46414185 97.38156891]
[259.12451172 83.12390900]
[270.67993164 73.55977631]
[285.55740356 71.64643097]
[299.15676880 77.97547913]
[307.27310181 90.58996582]
[307.39678955 105.58945465]
[299.48956299 118.33606720]
[285.99624634 124.88853455]
[300.61239624 128.26017761]
[315.22854614 131.63180542]
[329.84469604 135.00344849]
[344.46087646 138.37507629]
[353.54098511 137.25439453]
[359.28549194 141.92146301]
[373.84512329 145.52934265]
[388.40478516 149.13720703]
[402.96441650 152.74508667]
[417.52404785 156.35296631]
[432.08370972 159.96083069]
[446.64334106 163.56871033]
[461.20300293 167.17657471]
[475.76263428 170.78445435]
[491.58825684 160.39002991]
[509.67950439 164.77429199]
[518.67687988 180.70495605]
[533.34570312 183.83947754]
[543.73913574 175.25918579]
[556.98370361 174.25088501]
[568.22186279 180.95942688]
[573.46124268 192.74041748]
[588.07739258 196.11204529]
[602.69354248 199.48368835]
[611.77368164 198.36300659]
[617.51812744 203.03007507]
[632.07781982 206.63793945]
[643.22436523 195.97222900]
[658.37213135 193.04838562]
[672.68750000 198.79940796]
[681.60247803 211.39015198]
[682.27233887 226.80296326]
[674.48327637 240.11967468]
[660.72088623 247.09095764]
[645.37652588 245.49232483]
[633.34667969 235.83387756]
[628.46990967 221.19758606]
[613.91027832 217.58970642]
[599.32189941 214.09983826]
[584.70574951 210.72821045]
[570.08959961 207.35656738]
[556.23052979 216.87229919]
[539.44549561 213.35784912]
[530.21118164 198.50831604]
[515.54235840 195.37379456]
[507.52612305 203.51541138]
[496.45880127 206.80416870]
[485.06295776 204.31011963]
[476.20065308 196.54104614]
[472.15475464 185.34410095]
[457.59512329 181.73622131]
[443.03546143 178.12835693]
[428.47583008 174.52047729]
[413.91619873 170.91259766]
[399.35653687 167.30473328]
[384.79690552 163.69685364]
[370.23724365 160.08897400]
[355.67761230 156.48110962]
[341.08923340 152.99124146]
[326.47308350 149.61959839]
[311.85690308 146.24797058]
[297.24075317 142.87632751]
[282.62460327 139.50469971]
[267.80175781 137.20617676]
[252.85089111 135.99296570]
[237.90003967 134.77975464]
[222.94917297 133.56654358]
[220.31079102 140.27140808]
[216.42134094 146.34829712]
[211.42427063 151.56614685]
[205.50518799 155.72567749]
[198.88505554 158.66705322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 104]
[10 103]
[11 102]
[12 101]
[13 99]
[15 97]
[16 96]
[18 95]
[19 94]
[20 93]
[21 92]
[22 91]
[23 90]
[24 89]
[25 88]
[26 87]
[27 86]
[28 81]
[29 80]
[30 79]
[31 78]
[32 77]
[33 75]
[34 74]
[35 72]
[36 71]
[37 70]
[38 69]
[40 66]
[41 65]
[42 64]
[43 60]
[44 59]
[45 58]
[46 57]
[108 188]
[109 187]
[110 186]
[111 185]
[121 184]
[122 183]
[123 182]
[124 181]
[125 180]
[127 179]
[128 178]
[129 177]
[130 176]
[131 175]
[132 174]
[133 173]
[134 172]
[135 171]
[138 166]
[139 165]
[143 162]
[144 161]
[145 160]
[147 159]
[148 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
