%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAGCUUGGGGGUGCCUUCGUCGCGCAGCCUUGCGUCGGCCCGGCCCGGCCAGGCCAGCGGGCAGAUGCCCCGAGCUGCCGCCGCCGCCGCCGCCGACUCGGCCGGUGGCGGUGUGGGAGGUGGGCGACCAGCCCGGGGCCGCUGAGUGUGACGGACGCAACUGGGGGCGCCGGGGGCUCCGCACGGACC\
) } def
/len { sequence length } bind def

/coor [
[75.41143036 638.44079590]
[75.16600800 623.44281006]
[74.92057800 608.44482422]
[65.18276215 602.46398926]
[59.48873520 592.41766357]
[59.35746002 580.75061035]
[64.93753052 570.36730957]
[74.94135284 563.90844727]
[75.18678284 548.91046143]
[67.65876007 536.05828857]
[75.62081909 522.38659668]
[75.86624146 507.38858032]
[76.11167145 492.39059448]
[73.07271576 485.64035034]
[76.48580933 477.14974976]
[76.97659302 462.15777588]
[77.46738434 447.16583252]
[77.95816803 432.17385864]
[78.44895172 417.18188477]
[78.93974304 402.18991089]
[79.43052673 387.19793701]
[76.86631012 383.15148926]
[76.82784271 377.44830322]
[80.19062805 371.72573853]
[81.17167664 356.75787354]
[82.15272522 341.78997803]
[83.13376617 326.82211304]
[73.15057373 315.82794189]
[73.93227386 300.63439941]
[85.53163910 290.23767090]
[86.51268768 275.26977539]
[87.24870300 260.28784180]
[87.73948669 245.29586792]
[88.23027039 230.30390930]
[88.72106171 215.31193542]
[89.21184540 200.31996155]
[89.70262909 185.32800293]
[90.19342041 170.33602905]
[82.87668610 157.36241150]
[91.06137085 143.82278442]
[83.74463654 130.84918213]
[91.92932892 117.30954742]
[82.10126495 106.66269684]
[82.57534790 92.18093109]
[93.07870483 82.19966125]
[93.56948853 67.20769501]
[86.28786469 53.16175461]
[94.43744659 40.69445419]
[94.92823029 25.70248604]
[95.41901398 10.71051693]
[95.90980530 -4.28145170]
[93.12412262 -10.30606842]
[93.72140503 -15.97801304]
[96.66990662 -19.75364494]
[97.65094757 -34.72152710]
[98.63199615 -49.68941116]
[99.61304474 -64.65729523]
[91.70629120 -74.86110687]
[92.84124756 -87.31716156]
[101.86487579 -95.38839722]
[103.09069061 -110.33822632]
[104.31650543 -125.28805542]
[105.54232025 -140.23788452]
[106.76813507 -155.18771362]
[93.79730225 -166.03178406]
[89.87892914 -182.30734253]
[96.36322021 -197.56080627]
[110.51535034 -205.86460876]
[111.49639130 -220.83248901]
[112.47743988 -235.80036926]
[113.45848846 -250.76826477]
[114.43953705 -265.73614502]
[111.85246277 -271.84866333]
[112.63500977 -277.49804688]
[115.70546722 -281.17517090]
[109.35807800 -295.66729736]
[118.30561066 -307.57489014]
[119.77586365 -322.50265503]
[113.42847443 -336.99478149]
[122.37600708 -348.90237427]
[123.84626770 -363.83013916]
[125.31652069 -378.75790405]
[126.78678131 -393.68566895]
[124.51113129 -402.54910278]
[128.40516663 -408.84497070]
[130.11947632 -423.74667358]
[131.83377075 -438.64840698]
[133.54808044 -453.55010986]
[135.26239014 -468.45184326]
[136.97668457 -483.35354614]
[138.69099426 -498.25527954]
[140.40530396 -513.15698242]
[142.11959839 -528.05871582]
[143.83390808 -542.96044922]
[145.42623901 -557.87567139]
[146.89649963 -572.80340576]
[148.36676025 -587.73120117]
[143.90203857 -604.08673096]
[158.38241577 -612.90460205]
[170.86425781 -601.43115234]
[163.29452515 -586.26092529]
[161.82426453 -571.33319092]
[160.35401917 -556.40539551]
[162.83116150 -549.42938232]
[158.73562622 -541.24609375]
[157.02131653 -526.34442139]
[155.30702209 -511.44268799]
[153.59271240 -496.54095459]
[151.87840271 -481.63925171]
[150.16410828 -466.73751831]
[148.44979858 -451.83581543]
[146.73548889 -436.93411255]
[145.02119446 -422.03237915]
[143.30688477 -407.13067627]
[141.71455383 -392.21542358]
[140.24429321 -377.28765869]
[138.77403259 -362.35989380]
[137.30378723 -347.43209839]
[143.75633240 -334.00772095]
[134.70364380 -321.03240967]
[133.23338318 -306.10464478]
[139.68592834 -292.68026733]
[130.63323975 -279.70492554]
[129.40742493 -264.75509644]
[128.42637634 -249.78721619]
[127.44532776 -234.81932068]
[126.46427917 -219.85144043]
[125.48323059 -204.88356018]
[136.50199890 -197.32933044]
[142.39276123 -185.21800232]
[141.51876831 -171.66993713]
[134.00175476 -160.23487854]
[121.71796417 -153.96189880]
[120.49214935 -139.01206970]
[119.26633453 -124.06224060]
[118.04051971 -109.11241150]
[116.81469727 -94.16258240]
[125.16522217 -78.73548126]
[114.58092499 -63.67625046]
[113.59988403 -48.70836639]
[112.61883545 -33.74048233]
[111.63778687 -18.77259636]
[110.90177155 -3.79066539]
[110.41098785 11.20130348]
[109.92019653 26.19327164]
[109.42941284 41.18524170]
[116.74614716 54.15885544]
[108.56146240 67.69847870]
[108.07067108 82.69045258]
[117.89873505 93.33730316]
[117.42465210 107.81906891]
[106.92129517 117.80033875]
[114.20292664 131.84628296]
[106.05334473 144.31358337]
[113.33496857 158.35951233]
[105.18538666 170.82681274]
[104.69460297 185.81878662]
[104.20381165 200.81076050]
[103.71302795 215.80271912]
[103.22224426 230.79469299]
[102.73145294 245.78666687]
[102.24066925 260.77862549]
[105.02635193 266.80325317]
[104.42906952 272.47518921]
[101.48056793 276.25082397]
[100.49952698 291.21871948]
[110.64260864 303.04052734]
[109.43446350 318.20611572]
[98.10165405 327.80316162]
[97.12060547 342.77102661]
[96.13955688 357.73892212]
[95.15850830 372.70678711]
[94.42249298 387.68872070]
[93.93170929 402.68069458]
[93.44092560 417.67266846]
[92.95013428 432.66464233]
[92.45935059 447.65661621]
[91.96856689 462.64859009]
[91.47777557 477.64053345]
[91.10965729 492.63601685]
[90.86423492 507.63403320]
[90.61880493 522.63201904]
[98.12928009 536.55694580]
[90.18477631 549.15588379]
[89.93934631 564.15386963]
[103.62258911 577.23858643]
[103.41696930 595.85095215]
[89.91857147 608.19934082]
[90.16399384 623.19738770]
[90.40942383 638.19537354]
[92.91506195 657.41442871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[3 188]
[8 185]
[9 184]
[11 182]
[12 181]
[13 180]
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[21 173]
[24 172]
[25 171]
[26 170]
[27 169]
[30 166]
[31 165]
[32 162]
[33 161]
[34 160]
[35 159]
[36 158]
[37 157]
[38 156]
[40 154]
[42 152]
[45 149]
[46 148]
[48 146]
[49 145]
[50 144]
[51 143]
[54 142]
[55 141]
[56 140]
[57 139]
[60 137]
[61 136]
[62 135]
[63 134]
[64 133]
[68 128]
[69 127]
[70 126]
[71 125]
[72 124]
[75 123]
[77 121]
[78 120]
[80 118]
[81 117]
[82 116]
[83 115]
[85 114]
[86 113]
[87 112]
[88 111]
[89 110]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[95 103]
[96 102]
[97 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
