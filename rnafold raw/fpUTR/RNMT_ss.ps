%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGACGUAAGCAGACACGCGUGGCGCGGGCCGCCGUUUCCGCAAACAGAAUCGCGUUUGGCUGUGCUGGAUGUGUGAACCUAUUGGGUACUGUACAACUUCAAGCCUCGAAAUCAGAUAGGCACCACCAACCUCAUUUCCUGUUUCACCUUGAUUUUCUGUGAUACCAAAAUCUCAGCUUCACAAAGUCAUUGAAAGUGUUGGUUCAUGAAGUUUUACCAUCAAUUCAAGUAAUCAUAA\
) } def
/len { sequence length } bind def

/coor [
[85.57711029 240.59341431]
[82.21823120 224.90592957]
[92.50000000 212.59069824]
[92.50000000 197.59069824]
[92.50000000 182.59069824]
[92.50000000 167.59069824]
[75.82141876 163.56216431]
[60.68201065 155.48736572]
[50.71276474 166.69514465]
[51.45375443 182.25434875]
[41.18386459 193.47860718]
[26.34597969 194.08914185]
[16.37673569 205.29690552]
[12.98611069 220.75051880]
[-1.25383520 225.11781311]
[-11.22307873 236.32559204]
[-14.61370468 251.77920532]
[-28.85364914 256.14648438]
[-38.82289505 267.35427856]
[-48.79213715 278.56204224]
[-52.14750290 287.03497314]
[-58.96427917 289.84951782]
[-69.07817841 300.92694092]
[-79.19207001 312.00433350]
[-89.30596924 323.08175659]
[-99.41986847 334.15917969]
[-102.41003418 350.28341675]
[-117.95729828 355.50015259]
[-130.06797791 344.44287109]
[-126.28363800 328.48632812]
[-110.49727631 324.04528809]
[-100.38338470 312.96786499]
[-90.26948547 301.89044189]
[-80.15558624 290.81304932]
[-70.04169464 279.73562622]
[-59.99991226 268.59280396]
[-50.03066635 257.38500977]
[-40.06142426 246.17724609]
[-37.38386536 231.52528381]
[-22.43085289 226.35633850]
[-12.46160793 215.14857483]
[-9.78404999 200.49661255]
[5.16896248 195.32766724]
[15.13820648 184.11988831]
[14.01491928 169.31199646]
[23.96549034 157.80371094]
[39.50499344 156.72589111]
[49.47423553 145.51812744]
[44.26073074 138.96006775]
[39.89316940 131.81071472]
[36.43783569 124.17858124]
[33.94716644 116.17949677]
[32.45896912 107.93485260]
[31.99582672 99.56978607]
[17.09809113 97.82123566]
[2.20035458 96.07267761]
[-12.69738197 94.32411957]
[-27.59511757 92.57556152]
[-42.49285507 90.82700348]
[-57.39059067 89.07844543]
[-72.28833008 87.32989502]
[-87.18606567 85.58133698]
[-102.08380127 83.83277893]
[-118.51977539 87.99152374]
[-127.06591797 73.34912872]
[-115.36156464 61.08354950]
[-100.33524323 68.93504333]
[-85.43750763 70.68360138]
[-70.53977203 72.43215179]
[-55.64203262 74.18070984]
[-40.74429703 75.92926788]
[-25.84656143 77.67782593]
[-10.94882488 79.42638397]
[3.94891143 81.17494202]
[18.84664726 82.92350006]
[33.74438477 84.67205048]
[35.07031631 79.77900696]
[36.75706100 74.99832916]
[38.79525375 70.35659027]
[41.17356491 65.87957764]
[29.10735321 56.96854401]
[17.04113960 48.05751038]
[4.97492695 39.14648056]
[-11.35823822 34.60070419]
[-11.51158524 17.64745140]
[4.73667860 12.80696964]
[13.88595963 27.08026695]
[25.95217323 35.99129868]
[38.01838684 44.90233231]
[50.08459854 53.81336594]
[72.76210785 37.68748474]
[100.00000000 31.99446678]
[127.23789215 37.68748474]
[149.91540527 53.81336594]
[161.98161316 44.90233231]
[174.04782104 35.99129868]
[180.55239868 21.56905174]
[195.38688660 20.23217010]
[207.45309448 11.32113838]
[219.51930237 2.41010523]
[231.58552551 -6.50092745]
[243.65173340 -15.41196060]
[255.71794128 -24.32299232]
[267.78414917 -33.23402405]
[268.44589233 -53.62342072]
[282.57235718 -67.81890869]
[280.24508667 -82.63726807]
[277.91781616 -97.45562744]
[275.59051514 -112.27398682]
[261.07830811 -117.13756561]
[250.49699402 -128.19624329]
[246.27806091 -142.90878296]
[249.39099121 -157.89439392]
[259.12048340 -169.70945740]
[273.23074341 -175.63897705]
[288.47933960 -174.32037354]
[301.36227417 -166.05668640]
[308.91912842 -152.74681091]
[309.41339111 -137.44929504]
[302.73150635 -123.67936707]
[290.40887451 -114.60127258]
[292.73617554 -99.78291321]
[295.06344604 -84.96455383]
[297.39071655 -70.14619446]
[302.58767700 -68.96490479]
[307.45251465 -66.78841400]
[311.79669189 -63.70107269]
[315.45190430 -59.82251740]
[329.40139771 -65.33714294]
[343.35092163 -70.85176849]
[357.30044556 -76.36639404]
[371.24993896 -81.88101959]
[385.19946289 -87.39564514]
[399.11288452 -93.00070190]
[412.98962402 -98.69594574]
[398.37722778 -102.08381653]
[387.35769653 -112.26075745]
[382.82061768 -126.55812836]
[385.95571899 -141.22685242]
[395.94088745 -152.42042542]
[410.15780640 -157.20367432]
[424.87844849 -154.32229614]
[436.24276733 -144.53186035]
[441.27075195 -130.39964294]
[438.64395142 -115.63143921]
[429.05090332 -104.09960938]
[443.54815674 -107.95053864]
[458.04541016 -111.80146027]
[472.54266357 -115.65238953]
[477.43493652 -125.33763123]
[486.65393066 -130.63265991]
[497.04705811 -130.00437927]
[505.20962524 -123.89978790]
[519.80200195 -127.37306213]
[534.39434814 -130.84632874]
[548.98663330 -134.31959534]
[563.57897949 -137.79287720]
[578.17132568 -141.26614380]
[583.20458984 -145.50109863]
[588.78399658 -146.43431091]
[593.18756104 -144.63494873]
[607.86511230 -147.72822571]
[622.54272461 -150.82150269]
[637.22027588 -153.91476440]
[651.89788818 -157.00804138]
[654.00891113 -172.01869202]
[661.12933350 -185.40060425]
[672.39929199 -195.53787231]
[686.45788574 -201.20634460]
[701.60748291 -201.72155762]
[716.01867676 -197.02127075]
[727.95129395 -187.67308044]
[735.96435547 -174.80581665]
[739.09027100 -159.97326660]
[736.95159912 -144.96653748]
[729.80657959 -131.59777832]
[718.51794434 -121.48129272]
[704.44891357 -115.83872986]
[689.29840088 -115.35144806]
[674.89587402 -120.07828522]
[662.98052979 -129.44845581]
[654.99114990 -142.33045959]
[640.31359863 -139.23718262]
[625.63598633 -136.14390564]
[610.95837402 -133.05062866]
[596.28082275 -129.95735168]
[581.64459229 -126.67380524]
[567.05224609 -123.20053101]
[552.45989990 -119.72726440]
[537.86761475 -116.25399017]
[523.27526855 -112.78071594]
[508.68292236 -109.30744934]
[495.61584473 -95.03855133]
[476.39358521 -101.15513611]
[461.89633179 -97.30420685]
[447.39907837 -93.45328522]
[432.90182495 -89.60235596]
[418.68487549 -84.81919861]
[404.80813599 -79.12394714]
[399.82397461 -73.68809509]
[390.71408081 -73.44613647]
[376.76458740 -67.93151093]
[362.81506348 -62.41688156]
[348.86553955 -56.90225601]
[334.91604614 -51.38763046]
[320.96652222 -45.87300491]
[318.16864014 -30.49580193]
[307.26727295 -19.09203529]
[291.74615479 -15.53922558]
[276.69519043 -21.16781235]
[264.62896729 -12.25677967]
[252.56275940 -3.34574723]
[240.49655151 5.56528568]
[228.43034363 14.47631836]
[216.36412048 23.38735008]
[204.29791260 32.29838562]
[198.65640259 46.08325195]
[182.95886230 48.05751038]
[170.89265442 56.96854401]
[158.82643127 65.87957764]
[162.59797668 73.42472839]
[165.40643311 81.37875366]
[167.20857239 89.61927032]
[167.97668457 98.01950836]
[167.69894409 106.45021057]
[166.37962341 114.78167725]
[164.03901672 122.88571167]
[160.71315002 130.63764954]
[156.45318604 137.91821289]
[151.32466125 144.61538696]
[145.40647888 150.62612915]
[138.78970337 155.85795593]
[131.57612610 160.23040771]
[123.87673187 163.67616272]
[115.80998993 166.14224243]
[107.50000000 167.59069824]
[107.50000000 182.59069824]
[107.50000000 197.59069824]
[107.50000000 212.59069824]
[117.78176880 224.90592957]
[114.42288971 240.59341431]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 239]
[4 238]
[5 237]
[6 236]
[8 48]
[9 47]
[12 44]
[13 43]
[15 41]
[16 40]
[18 38]
[19 37]
[20 36]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[54 76]
[55 75]
[56 74]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[63 67]
[80 90]
[81 89]
[82 88]
[83 87]
[94 220]
[95 219]
[96 218]
[98 216]
[99 215]
[100 214]
[101 213]
[102 212]
[103 211]
[104 210]
[106 124]
[107 123]
[108 122]
[109 121]
[128 206]
[129 205]
[130 204]
[131 203]
[132 202]
[133 201]
[134 199]
[135 198]
[146 197]
[147 196]
[148 195]
[149 194]
[153 192]
[154 191]
[155 190]
[156 189]
[157 188]
[158 187]
[161 186]
[162 185]
[163 184]
[164 183]
[165 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
