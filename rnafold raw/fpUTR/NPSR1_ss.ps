%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACGUAGAUCCUCCCUGUCAUCAGGCAGAGCUCUUCAGUGAGGUGGGCUCAGGGAGGGCUCUGUGCCUCCGUUCAGCAGAGCUGCAGCUGCUGCCCAGCUCUCAGGAGGCAAGCUGGACUCCCUCACUCAGCUGCAGGAGCAAGGACAGUGAGGCUCAACCCCGCCUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[162.01266479 342.83218384]
[161.12861633 332.16964722]
[166.38099670 322.59680176]
[161.36332703 308.46093750]
[156.34564209 294.32504272]
[146.17552185 292.55828857]
[137.59954834 286.66903687]
[132.21549988 277.67272949]
[131.06036377 267.17080688]
[134.41123962 257.06567383]
[141.72274780 249.21621704]
[137.47328186 234.83073425]
[133.22381592 220.44525146]
[128.97433472 206.05978394]
[124.46732330 191.75289917]
[119.57672882 177.57255554]
[114.55905151 163.43669128]
[109.54136658 149.30081177]
[104.52368927 135.16493225]
[99.50601196 121.02906799]
[99.05532074 136.02229309]
[88.66700745 146.84278870]
[73.70458984 147.90388489]
[61.89318848 138.65776062]
[59.33106232 123.87819672]
[67.34104156 111.19592285]
[81.78959656 107.15900421]
[66.86265564 105.68037415]
[51.93570709 104.20174408]
[37.00876617 102.72311401]
[22.08182144 101.24448395]
[7.15487766 99.76584625]
[-7.77206612 98.28721619]
[-22.69900894 96.80858612]
[-37.62595367 95.32995605]
[-52.55289841 93.85132599]
[-67.47984314 92.37269592]
[-82.40678406 90.89405823]
[-92.87863922 98.46160126]
[-105.29987335 96.90193176]
[-113.06087494 87.59597015]
[-127.95886993 85.84962463]
[-142.85687256 84.10327911]
[-157.75486755 82.35693359]
[-171.18338013 91.13500214]
[-186.37313843 85.97257996]
[-191.67185974 70.82981873]
[-183.01483154 57.32296371]
[-167.04295349 55.81330872]
[-156.00851440 67.45893860]
[-141.11051941 69.20528412]
[-126.21252441 70.95162964]
[-111.31452942 72.69797516]
[-95.61590576 64.88642120]
[-80.92815399 75.96711731]
[-66.00121307 77.44574738]
[-51.07426453 78.92437744]
[-36.14732361 80.40301514]
[-21.22037888 81.88164520]
[-6.29343462 83.36027527]
[8.63350868 84.83890533]
[23.56045341 86.31753540]
[38.48739624 87.79616547]
[53.41434097 89.27480316]
[68.34128571 90.75343323]
[83.26822662 92.23206329]
[94.73963928 82.56734467]
[95.81583405 67.60600281]
[96.89202118 52.64466095]
[97.96821594 37.68331528]
[99.04441071 22.72197151]
[100.12059784 7.76062822]
[92.35366821 3.19588208]
[86.53289795 -3.62304521]
[83.27565002 -11.92908573]
[82.91301727 -20.79999924]
[85.45636749 -29.26075363]
[90.59923553 -36.39070129]
[97.75393677 -41.42374802]
[106.11862183 -43.83061981]
[108.53160858 -58.63526535]
[110.94459534 -73.43991089]
[113.35757446 -88.24455261]
[115.77056122 -103.04920197]
[118.18354797 -117.85384369]
[120.59652710 -132.65849304]
[113.70145416 -143.58485413]
[116.03797913 -155.88363647]
[125.81289673 -163.04499817]
[128.49125671 -177.80393982]
[122.45297241 -193.05094910]
[132.84880066 -205.73396301]
[148.98440552 -202.80578613]
[154.26086426 -187.27867126]
[143.25019836 -175.12559509]
[140.57183838 -160.36665344]
[147.38226318 -144.20851135]
[135.40116882 -130.24549866]
[132.98818970 -115.44085693]
[130.57521057 -100.63621521]
[128.16221619 -85.83157349]
[125.74923706 -71.02692413]
[123.33625031 -56.22228241]
[120.92327118 -41.41763687]
[134.91963196 -25.46946144]
[132.61256409 -4.09268332]
[115.08193970 8.83682060]
[114.00575256 23.79816437]
[112.92955780 38.75951004]
[111.85337067 53.72085190]
[110.77717590 68.68219757]
[109.70098114 83.64353943]
[113.60545349 85.46982574]
[117.15012360 88.24080658]
[131.71177673 84.64102173]
[146.27342224 81.04122925]
[160.83506775 77.44143677]
[175.39671326 73.84165192]
[189.95835876 70.24185944]
[194.14413452 55.46434784]
[205.16906738 44.77105331]
[220.06748962 41.03841782]
[234.83180237 45.27050018]
[245.49049377 56.32889175]
[249.17640686 71.23893738]
[244.89807129 85.98992157]
[233.80632019 96.61389160]
[218.88479614 100.25305176]
[204.14729309 95.92849731]
[193.55813599 84.80350494]
[178.99649048 88.40329742]
[164.43486023 92.00308228]
[149.87321472 95.60287476]
[135.31156921 99.20266724]
[120.74991608 102.80245209]
[113.64188385 116.01139069]
[118.65956879 130.14726257]
[123.67724609 144.28312683]
[128.69491577 158.41900635]
[133.71260071 172.55488586]
[139.55149841 179.62397766]
[138.69099426 186.98977661]
[143.42111206 191.68615723]
[144.83168030 197.23489380]
[143.35981750 201.81030273]
[147.60928345 216.19578552]
[151.85876465 230.58126831]
[156.10823059 244.96673584]
[174.22972107 253.57138062]
[180.14190674 272.42276001]
[170.48152161 289.30737305]
[175.49919128 303.44323730]
[180.51687622 317.57913208]
[196.43328857 329.91390991]
[192.18637085 348.75799561]
[197.70823669 362.70465088]
[203.23011780 376.65130615]
[208.75198364 390.59796143]
[214.27384949 404.54458618]
[219.79571533 418.49124146]
[234.85821533 422.21960449]
[244.82678223 434.11108398]
[245.86830139 449.59317017]
[237.58227539 462.71267700]
[223.15487671 468.42489624]
[208.13369751 464.53335571]
[198.29472351 452.53442383]
[197.42121887 437.04196167]
[205.84907532 424.01312256]
[200.32719421 410.06646729]
[194.80532837 396.11981201]
[189.28346252 382.17315674]
[183.76159668 368.22653198]
[178.23973083 354.27987671]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 153]
[4 152]
[5 151]
[11 148]
[12 147]
[13 146]
[14 145]
[15 142]
[16 140]
[17 139]
[18 138]
[19 137]
[20 136]
[27 66]
[28 65]
[29 64]
[30 63]
[31 62]
[32 61]
[33 60]
[34 59]
[35 58]
[36 57]
[37 56]
[38 55]
[41 53]
[42 52]
[43 51]
[44 50]
[67 112]
[68 111]
[69 110]
[70 109]
[71 108]
[72 107]
[80 104]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
[89 96]
[90 95]
[114 135]
[115 134]
[116 133]
[117 132]
[118 131]
[119 130]
[155 174]
[156 173]
[157 172]
[158 171]
[159 170]
[160 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
