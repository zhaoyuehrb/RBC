%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCAUUGUGAUGGUCUAGAUAAGUGUACAUGCUUAGGCCUUCUGAAGCAGCAUUUGAAGCUGCAGUCCUGAAAACCAUGCAGGCCGGAAGAGUAGAUAAAGAAAUAUUUAUUUGAG\
) } def
/len { sequence length } bind def

/coor [
[-17.51601219 500.47915649]
[-26.48539925 502.02667236]
[-33.04500961 515.51635742]
[-39.60461807 529.00604248]
[-46.16423035 542.49572754]
[-52.72383881 555.98541260]
[-51.02144623 572.29595947]
[-64.45267487 581.70520020]
[-79.20063019 574.53375244]
[-80.09387207 558.15893555]
[-66.21352386 549.42578125]
[-59.65391159 535.93609619]
[-53.09430313 522.44641113]
[-46.53469086 508.95675659]
[-39.97508240 495.46707153]
[-43.43431854 475.19250488]
[-25.86286163 463.07733154]
[-20.40045166 449.10729980]
[-14.93804359 435.13726807]
[-9.47563553 421.16720581]
[-4.01322651 407.19717407]
[1.44918203 393.22714233]
[6.91159058 379.25708008]
[12.37399960 365.28704834]
[17.83640862 351.31701660]
[23.29881668 337.34695435]
[28.76122475 323.37692261]
[16.68662262 314.53646851]
[7.30466986 302.86276245]
[1.25958657 289.14773560]
[-1.03105891 274.32394409]
[0.59481448 259.40090942]
[6.03234720 245.39653015]
[14.91648006 233.26763916]
[26.64645576 223.84457397]
[40.42644501 217.77433777]
[55.31953430 215.47621155]
[70.31142426 217.11279297]
[75.77383423 203.14276123]
[81.04979706 189.10124207]
[86.13838196 174.99073792]
[91.22695923 160.88023376]
[96.31554413 146.76972961]
[101.40412903 132.65922546]
[106.49271393 118.54871368]
[89.49597168 115.13920593]
[82.80331421 100.36022949]
[90.35197449 87.26805115]
[87.96602631 72.45902252]
[85.58007050 57.64999771]
[83.19412231 42.84097290]
[80.80816650 28.03194618]
[67.29087067 20.16958427]
[62.03851700 5.44047022]
[67.53110504 -9.20075607]
[81.17520142 -16.84095573]
[96.52848053 -13.87266159]
[106.34159851 -1.69740939]
[105.98109436 13.93601799]
[95.61719513 25.64599419]
[98.00314331 40.45502090]
[100.38909912 55.26404572]
[102.77504730 70.07306671]
[105.16100311 84.88209534]
[114.43965149 89.56861877]
[119.65135956 99.81524658]
[124.33858490 91.82231903]
[131.63607788 90.14538574]
[143.43435669 80.88251495]
[155.23263550 71.61964417]
[167.03089905 62.35677719]
[165.47448730 47.00812531]
[172.48362732 33.26492310]
[185.82171631 25.51258087]
[201.23263550 26.22483826]
[213.79879761 35.17441940]
[219.51040649 49.50554276]
[216.54489136 64.64520264]
[205.84854126 75.76238251]
[190.83453369 79.30963898]
[176.29377747 74.15505219]
[164.49549866 83.41792297]
[152.69721985 92.68078613]
[140.89895630 101.94365692]
[129.22502136 111.36276245]
[120.60321808 123.63729858]
[115.51463318 137.74780273]
[110.42604828 151.85830688]
[105.33746338 165.96881104]
[100.24888611 180.07931519]
[95.16030121 194.18981934]
[95.17974091 203.45570374]
[89.74387360 208.60516357]
[84.28146362 222.57521057]
[96.40723419 231.54185486]
[105.79145050 243.33262634]
[111.79911041 257.14001465]
[114.02621460 272.02041626]
[112.32688141 286.95861816]
[106.82291412 300.93701172]
[97.89508820 313.00491333]
[86.15681458 322.34329224]
[72.41199493 328.32028198]
[57.59995270 330.53393555]
[42.73126602 328.83932495]
[37.26885986 342.80935669]
[31.80644989 356.77941895]
[26.34404182 370.74945068]
[20.88163376 384.71948242]
[15.41922474 398.68954468]
[9.95681572 412.65957642]
[4.49440765 426.62963867]
[-0.96800119 440.59967041]
[-6.43040991 454.56970215]
[-11.89281845 468.53976440]
[-6.88004112 476.79428101]
[-6.31547356 486.29605103]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[17 115]
[18 114]
[19 113]
[20 112]
[21 111]
[22 110]
[23 109]
[24 108]
[25 107]
[26 106]
[27 105]
[38 94]
[39 93]
[40 91]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[66 85]
[68 84]
[69 83]
[70 82]
[71 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
