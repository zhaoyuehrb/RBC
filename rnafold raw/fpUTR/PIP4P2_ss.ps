%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGCCAUGCCUCCCAGCGCGCUUCCCUUCCCCCGCCUCCUGGUCCUGCACCCUCCCCUCCCCUCCCCCCGCUUCCUGCCUUGUGACACAUCCCGGGCCCUCCCGGAGGCGGCAGCAGCAGCAGCUGCAGCGGCAGCAGCGGCAGCAGAGGCAGCAGCAGUAGCCACCACUCCGCCGAGGCCGCAACCCCGGCUCGGCCUCCCCAGGCCCCGCCGCUGCCGCAGUC\
) } def
/len { sequence length } bind def

/coor [
[127.94731140 178.62403870]
[113.63703156 183.12023926]
[98.76058960 181.19888306]
[86.06225586 173.21438599]
[77.88447571 160.63964844]
[75.73580933 145.79434204]
[80.01261902 131.41697693]
[89.92350006 120.16153717]
[79.13500214 130.58306885]
[68.34651184 141.00460815]
[70.92926788 157.72615051]
[63.11012650 172.54312134]
[48.14828110 179.70422363]
[32.03034592 176.56388855]
[21.38711166 187.13372803]
[10.74387550 197.70356750]
[0.10063963 208.27340698]
[-4.31357861 227.95024109]
[-23.21741676 232.04742432]
[-33.56404877 242.90777588]
[-43.91067886 253.76812744]
[-38.47401428 268.03015137]
[-39.77236557 283.23794556]
[-47.54794693 296.37200928]
[-60.25690460 304.82452393]
[-75.37587738 306.91726685]
[-89.90296936 302.23471069]
[-100.95381927 291.70657349]
[-106.33428192 277.42324829]
[-104.97605133 262.22067261]
[-97.14881134 249.11737061]
[-84.40666199 240.71496582]
[-69.27957153 238.68177795]
[-54.77103043 243.42149353]
[-44.42440033 232.56114197]
[-34.07776642 221.70079041]
[-35.24338913 211.56332397]
[-30.54333687 202.25941467]
[-21.31127357 196.96369934]
[-10.46920109 197.63017273]
[0.17403513 187.06033325]
[10.81727123 176.49049377]
[21.46050644 165.92065430]
[18.20248795 152.98008728]
[21.79013634 140.01469421]
[31.39011383 130.43679810]
[44.57243347 126.82176208]
[57.92497635 130.21611023]
[68.71347046 119.79457092]
[79.50196075 109.37303925]
[65.03781891 113.34651947]
[50.57367325 117.31999207]
[36.10953140 121.29347229]
[23.57012367 129.52531433]
[8.89486408 132.62962341]
[-5.90388012 130.18070984]
[-18.79680443 122.51438904]
[-28.01594353 110.68191528]
[-32.29710770 96.30583954]
[-31.05323410 81.35749817]
[-24.45489120 67.88671875]
[-13.40688801 57.74070740]
[0.57579756 52.31074524]
[15.57576656 52.34142685]
[29.53612137 57.82854843]
[40.54336548 68.02081299]
[54.15163040 74.33073425]
[67.75989532 80.64064789]
[81.36816406 86.95056915]
[72.45092010 74.88893890]
[63.53367996 62.82731628]
[54.61643982 50.76569366]
[45.69919586 38.70406723]
[36.78195572 26.64244270]
[27.86471367 14.58081818]
[18.94747162 2.51919293]
[-3.00978923 -4.96488762]
[-4.71281576 -27.35145378]
[-14.44269180 -38.76764679]
[-24.17256737 -50.18384171]
[-33.90244293 -61.60003662]
[-48.74274445 -67.08420563]
[-51.10969543 -81.78953552]
[-59.04836655 -86.28410339]
[-60.89390182 -93.43170929]
[-70.46485138 -104.98146057]
[-86.02003479 -110.17456818]
[-89.03470612 -126.29424286]
[-76.40763092 -136.75793457]
[-61.12845993 -130.80151367]
[-58.91510010 -114.55241394]
[-49.34414673 -103.00266266]
[-39.69350052 -91.51940918]
[-25.54914474 -86.85180664]
[-22.48624992 -71.32991791]
[-12.75637341 -59.91371918]
[-3.02649689 -48.49752426]
[6.70337915 -37.08132935]
[13.67167377 -38.29936981]
[20.69824028 -37.02078629]
[26.90794182 -33.35705566]
[31.51095772 -27.71961594]
[33.90314102 -20.77408791]
[33.74501419 -13.36182976]
[31.00909615 -6.39804888]
[39.92633820 5.66357565]
[48.84358215 17.72520065]
[57.76082230 29.78682518]
[66.67806244 41.84844971]
[75.59530640 53.91007614]
[84.51255035 65.97170258]
[93.42979431 78.03332520]
[100.76876068 76.48752594]
[115.44670868 73.39593506]
[122.78567505 71.85013580]
[126.08010864 57.21638107]
[129.37454224 42.58262634]
[132.66897583 27.94887543]
[135.96339417 13.31512165]
[130.56930542 -2.17150927]
[141.48744202 -14.40777206]
[157.48619080 -10.80604935]
[162.10739136 4.92851591]
[150.59715271 16.60955238]
[147.30271912 31.24330521]
[144.00828552 45.87705612]
[140.71386719 60.51081085]
[137.41943359 75.14456177]
[127.66173553 90.10204315]
[113.76589203 98.60585785]
[128.57630920 100.98312378]
[143.38673401 103.36039734]
[158.19715881 105.73766327]
[173.00758362 108.11492920]
[187.81799316 110.49219513]
[202.62841797 112.86946106]
[217.43884277 115.24673462]
[232.29084778 109.79433441]
[243.63102722 119.45092010]
[258.44143677 121.82818604]
[273.25186157 124.20545959]
[288.06228638 126.58272552]
[277.45108032 115.98072052]
[271.46044922 102.22890472]
[270.92300415 87.23854065]
[275.91339111 73.09301758]
[285.73809814 61.75830841]
[299.03161621 54.80974960]
[313.94638062 53.21306229]
[328.40820312 57.18949890]
[342.48376465 52.00504684]
[356.55932617 46.82059479]
[366.83474731 34.79038239]
[381.45190430 37.65191269]
[395.52746582 32.46746063]
[405.59872437 19.52520943]
[421.80331421 22.04375839]
[427.47134399 37.43223953]
[416.77203369 49.86030579]
[400.71191406 46.54302216]
[386.63635254 51.72747421]
[377.36767578 63.38685989]
[361.74377441 60.89616013]
[347.66821289 66.08061218]
[333.59265137 71.26506042]
[333.54074097 78.76488495]
[348.54037476 78.86867523]
[363.54003906 78.97247314]
[378.53967285 79.07652283]
[378.43536377 94.07615662]
[363.43621826 93.97211456]
[348.43658447 93.86831665]
[333.43695068 93.76452637]
[333.38504028 101.26434326]
[347.38751221 106.64308929]
[361.38998413 112.02184296]
[375.39245605 117.40058899]
[391.04934692 115.12635040]
[400.15576172 126.91288757]
[414.15823364 132.29164124]
[428.49392700 125.63860321]
[443.30630493 131.14945984]
[449.80740356 145.55471802]
[444.14022827 160.30798340]
[429.66705322 166.65641785]
[414.97451782 160.83360291]
[408.77947998 146.29409790]
[394.77700806 140.91535950]
[380.12167358 143.57432556]
[370.01370239 131.40306091]
[356.01123047 126.02430725]
[342.00875854 120.64556122]
[328.00628662 115.26680756]
[323.58950806 121.32833099]
[314.75595093 133.45137024]
[310.33917236 139.51289368]
[319.74935913 151.19400024]
[329.15957642 162.87509155]
[338.56976318 174.55619812]
[347.97994995 186.23730469]
[363.46179199 191.64518738]
[366.25308228 207.80503845]
[353.48242188 218.09298706]
[338.28713989 211.92567444]
[336.29885864 195.64750671]
[326.88867188 183.96640015]
[317.47845459 172.28529358]
[308.06826782 160.60418701]
[298.65805054 148.92309570]
[285.68502808 141.39314270]
[270.87460327 139.01588440]
[256.06417847 136.63861084]
[241.25375366 134.26133728]
[227.46109009 139.88377380]
[215.06156921 130.05715942]
[200.25115967 127.67988586]
[185.44073486 125.30261993]
[170.63031006 122.92535400]
[155.81988525 120.54808044]
[141.00946045 118.17081451]
[126.19904327 115.79354858]
[111.38862610 113.41628265]
[125.95891571 116.98090363]
[137.69003296 126.32867432]
[144.41793823 139.73521423]
[144.90153503 154.72741699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 50]
[9 49]
[10 48]
[14 43]
[15 42]
[16 41]
[17 40]
[19 36]
[20 35]
[21 34]
[69 112]
[70 111]
[71 110]
[72 109]
[73 108]
[74 107]
[75 106]
[76 105]
[78 98]
[79 97]
[80 96]
[81 95]
[83 93]
[85 92]
[86 91]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
[130 222]
[131 221]
[132 220]
[133 219]
[134 218]
[135 217]
[136 216]
[137 215]
[139 213]
[140 212]
[141 211]
[142 210]
[150 165]
[151 164]
[152 163]
[154 161]
[155 160]
[174 193]
[175 192]
[176 191]
[177 190]
[179 188]
[180 187]
[196 209]
[197 208]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
