%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCGGCCCCGCCCCCGCCCUCGGAACCGGAAGUAGAGCCUGGUGCCUGGGAGCGGCUGGCGCGGCGGAAUCCAGGGCCGACCCGGGCCGGACCGACCCCAGGCGGCGACGGAAUCAGUCCCCAAUGCCUGGAAAUUCCUCAUUGGAUUACUGUGUUUUAAACAGAAUUUCGUGAACAGCCUUUUAUCUCCAAGCGGAAAGAAAG\
) } def
/len { sequence length } bind def

/coor [
[97.89115143 241.00880432]
[94.06387329 226.50527954]
[90.23658752 212.00177002]
[86.40930176 197.49826050]
[71.82027435 184.81057739]
[77.40118408 165.44221497]
[73.13549805 151.06153870]
[68.86980438 136.68086243]
[55.20391464 130.49673462]
[41.58534622 136.78439331]
[28.01487732 143.17520142]
[14.49329758 149.66879272]
[0.97171748 156.16239929]
[-12.54986286 162.65600586]
[-22.58188057 178.09577942]
[-40.01422119 176.08741760]
[-53.43569946 182.78547668]
[-66.85717010 189.48353577]
[-80.27864838 196.18159485]
[-93.64891052 202.98130798]
[-106.96718597 209.88227844]
[-120.28546906 216.78326416]
[-128.97877502 230.00207520]
[-143.83879089 228.98760986]
[-157.15707397 235.88858032]
[-165.85037231 249.10739136]
[-180.71038818 248.09292603]
[-194.02867126 254.99391174]
[-207.34695435 261.89489746]
[-220.66523743 268.79586792]
[-233.98350525 275.69683838]
[-235.31576538 291.06655884]
[-244.76411438 303.26214600]
[-259.31362915 308.39202881]
[-274.32159424 304.81924438]
[-284.99902344 293.68389893]
[-287.93878174 278.53921509]
[-282.20285034 264.21783447]
[-269.62149048 255.28961182]
[-254.20938110 254.60356140]
[-240.88449097 262.37857056]
[-227.56620789 255.47758484]
[-214.24792480 248.57659912]
[-200.92964172 241.67562866]
[-187.61137390 234.77465820]
[-179.87068176 222.04945374]
[-164.05804443 222.57031250]
[-150.73976135 215.66932678]
[-142.99906921 202.94412231]
[-127.18643951 203.46498108]
[-113.86816406 196.56401062]
[-100.54988861 189.66302490]
[-96.05581665 183.79275513]
[-86.97670746 182.76011658]
[-73.55522919 176.06205750]
[-60.13375854 169.36399841]
[-46.71228409 162.66593933]
[-42.58104324 151.29461670]
[-31.45156097 145.60525513]
[-19.04346466 149.13441467]
[-5.52188444 142.64082336]
[7.99969625 136.14721680]
[21.52127647 129.65361023]
[26.19142914 123.92243195]
[35.29769516 123.16581726]
[48.91626740 116.87816620]
[52.41241455 102.29129028]
[43.12377167 90.51329803]
[33.83512878 78.73530579]
[27.84092712 75.93383789]
[24.64354706 71.23078918]
[24.44982338 66.45597839]
[15.52290726 54.40151215]
[6.59599113 42.34704590]
[-1.02857578 37.31091690]
[-2.37328339 30.04121590]
[-11.11623096 17.85266113]
[-25.44694328 11.14883709]
[-26.57810020 -3.70275378]
[-35.32104874 -15.89130878]
[-44.06399536 -28.07986450]
[-58.20911789 -37.42608643]
[-53.14390945 -53.60570145]
[-36.19440842 -53.21740723]
[-31.87543869 -36.82281113]
[-23.13249207 -24.63425636]
[-14.38954544 -12.44570065]
[-0.68418664 -6.61368418]
[1.07232440 9.10971355]
[9.81527138 21.29826927]
[18.65045738 33.42012787]
[27.57737350 45.47459412]
[36.50429153 57.52906036]
[45.61311722 69.44666290]
[54.90176392 81.22465515]
[64.19040680 93.00264740]
[69.38425446 78.66683960]
[80.17301941 67.41429138]
[94.90888214 61.36192322]
[111.17472839 61.80051041]
[116.94126129 47.95323181]
[122.70779419 34.10595322]
[128.47431946 20.25867653]
[134.24085999 6.41139746]
[140.00738525 -7.43588066]
[145.45721436 -21.41083527]
[150.58752441 -35.50622559]
[148.03677368 -51.12045670]
[159.66043091 -60.43386841]
[164.79074097 -74.52925873]
[169.92103577 -88.62464905]
[161.94607544 -102.07582092]
[164.53414917 -117.49774933]
[176.46324158 -127.60867310]
[192.10081482 -127.63452148]
[204.06326294 -117.56308746]
[206.70230103 -102.14979553]
[198.77185059 -88.67233276]
[184.01643372 -83.49434662]
[178.88612366 -69.39895630]
[173.75582886 -55.30356598]
[176.67352295 -40.69752884]
[164.68290710 -30.37592316]
[159.55261230 -16.28053284]
[160.70558167 -12.94528961]
[160.29847717 -8.88546658]
[158.00813293 -4.84129000]
[153.85466003 -1.66934907]
[148.08813477 12.17792892]
[142.32159424 26.02520752]
[136.55506897 39.87248611]
[130.78854370 53.71976471]
[125.02201080 67.56703949]
[128.87014771 74.00457764]
[140.56948853 64.61706543]
[151.70117188 54.56292343]
[165.25205994 60.99514771]
[164.50018311 75.97628784]
[150.37443542 81.01970673]
[136.56642151 86.87963867]
[140.41456604 93.31716919]
[155.34164429 94.79450226]
[170.26870728 96.27184296]
[185.19578552 97.74917603]
[199.69090271 91.40866089]
[211.59425354 100.36184692]
[226.52133179 101.83917999]
[241.44839478 103.31652069]
[256.37545776 104.79385376]
[271.30255127 106.27119446]
[280.15386963 104.00171661]
[286.44433594 107.88589478]
[301.34725952 109.58959961]
[316.25021362 111.29330444]
[331.15313721 112.99700165]
[342.37506104 102.10653687]
[357.97546387 101.02883911]
[370.58831787 110.27276611]
[374.25820923 125.47362518]
[367.25231934 139.45402527]
[352.87863159 145.61285400]
[337.92395020 141.04209900]
[329.44943237 127.89994049]
[314.54650879 126.19623566]
[299.64358521 124.49253082]
[284.74063110 122.78882599]
[269.82519531 121.19826508]
[254.89813232 119.72092438]
[239.97106934 118.24359131]
[225.04399109 116.76625061]
[210.11691284 115.28891754]
[196.68948364 121.73509979]
[183.71844482 112.67625427]
[168.79138184 111.19891357]
[153.86430359 109.72158051]
[138.93722534 108.24423981]
[130.58534241 124.15279388]
[116.33679199 134.46806335]
[99.35959625 137.30975342]
[83.25048828 132.41517639]
[87.51617432 146.79585266]
[91.78186035 161.17652893]
[101.62992096 165.80368042]
[107.18969727 174.90052795]
[106.83065796 185.33607483]
[100.91281891 193.67097473]
[104.74009705 208.17448425]
[108.56738281 222.67799377]
[112.39466858 237.18151855]
[117.09482574 251.42610168]
[122.65054321 265.35931396]
[128.20626831 279.29251099]
[141.41091919 289.01718140]
[139.32276917 305.28283691]
[124.08993530 311.35678101]
[111.38264465 300.99063110]
[114.27306366 284.84823608]
[108.71734619 270.91503906]
[103.16162872 256.98184204]
[98.14614868 271.11846924]
[85.84608459 279.70382690]
[70.84701538 279.53720093]
[58.74072266 270.68069458]
[54.04056168 256.43609619]
[58.49878693 242.11393738]
[70.45333099 233.05364990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[6 182]
[7 181]
[8 180]
[9 66]
[10 65]
[11 63]
[12 62]
[13 61]
[14 60]
[16 57]
[17 56]
[18 55]
[19 54]
[20 52]
[21 51]
[22 50]
[24 48]
[25 47]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[67 96]
[68 95]
[69 94]
[72 93]
[73 92]
[74 91]
[76 90]
[77 89]
[79 87]
[80 86]
[81 85]
[100 133]
[101 132]
[102 131]
[103 130]
[104 129]
[105 128]
[106 124]
[107 123]
[109 121]
[110 120]
[111 119]
[141 176]
[142 175]
[143 174]
[144 173]
[146 171]
[147 170]
[148 169]
[149 168]
[150 167]
[152 166]
[153 165]
[154 164]
[155 163]
[190 199]
[191 198]
[192 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
