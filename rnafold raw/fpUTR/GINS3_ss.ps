%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUUGAUCGAUUGCUUCUGCCUGGGCGGUACCGCCCGAAUUGACUGCUCCUGUCUGAUGCGUCCCCGGGCGCGGGAAACGAGUUUCAAUCCACUUUCCUGACCCCAACCAUCCUGCCCAGUCUCCGCUUCCCCGUCUUGUACACCCCUAACUCCUGAGGCUCCUCCGAAUCACGCGAGUGGAAGCGGAGAAGCUCAAGUGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[79.80974579 212.44078064]
[86.52655029 198.62846375]
[99.25861359 190.03834534]
[98.13230896 175.08068848]
[97.00600433 160.12304688]
[95.87969971 145.16539001]
[94.75339508 130.20773315]
[93.62709045 115.25007629]
[86.34295654 113.46363068]
[82.77006531 128.03189087]
[79.19694519 142.60011292]
[64.62879181 139.02676392]
[68.20179749 124.45900726]
[71.77468872 109.89073944]
[64.49055481 108.10429382]
[56.57153320 120.84356689]
[56.57862091 137.24270630]
[42.24663162 145.21304321]
[28.31908417 136.55535889]
[29.12344551 120.17594147]
[43.83226013 112.92453766]
[51.75128174 100.18526459]
[48.72824097 85.49304962]
[36.42302704 76.91507721]
[24.11781120 68.33709717]
[11.81259441 59.75912476]
[-0.49262115 51.18114853]
[-12.79783726 42.60317230]
[-25.10305214 34.02519989]
[-37.40826797 25.44722366]
[-57.26481628 36.62792206]
[-80.63092804 34.62044525]
[-99.32000732 19.37833214]
[-106.36459351 -4.38005447]
[-121.35400391 -4.94360447]
[-136.34341431 -5.50715494]
[-151.33282471 -6.07070494]
[-166.32223511 -6.63425541]
[-181.31164551 -7.19780540]
[-188.28887939 2.43022108]
[-198.93872070 7.44273329]
[-210.56556702 6.69887829]
[-220.28764343 0.49895975]
[-225.75129700 -9.51883221]
[-240.71699524 -10.53268814]
[-255.68269348 -11.54654312]
[-264.45779419 -9.00404167]
[-270.86517334 -12.68977833]
[-285.81393433 -13.92846775]
[-300.77160645 -15.05477333]
[-315.73730469 -16.06862831]
[-327.47607422 -5.48671865]
[-343.25463867 -6.38816643]
[-353.71182251 -18.23815918]
[-352.64361572 -34.00630569]
[-340.68371582 -44.33764648]
[-324.92776489 -43.10277557]
[-314.72344971 -31.03432655]
[-299.75775146 -30.02046967]
[-292.87066650 -32.70514297]
[-284.57525635 -28.87723541]
[-269.62649536 -27.63854599]
[-254.66883850 -26.51224136]
[-239.70314026 -25.49838448]
[-224.73744202 -24.48452950]
[-211.69895935 -37.33258820]
[-193.09062195 -36.55838394]
[-180.74809265 -22.18721581]
[-165.75868225 -21.62366486]
[-150.76927185 -21.06011581]
[-135.77986145 -20.49656487]
[-120.79045868 -19.93301392]
[-105.80104828 -19.36946487]
[-97.88201904 -32.10873795]
[-105.02123260 -45.30084229]
[-112.16044617 -58.49295044]
[-119.29965210 -71.68505859]
[-126.43886566 -84.87715912]
[-133.57807922 -98.06926727]
[-140.71728516 -111.26137543]
[-158.34947205 -121.03008270]
[-156.98178101 -140.31690979]
[-164.51429749 -153.28846741]
[-179.95100403 -155.78686523]
[-190.13107300 -167.65699768]
[-190.24780273 -183.29415894]
[-180.24604797 -195.31492615]
[-164.84835815 -198.04348755]
[-151.32504272 -190.19149780]
[-146.06138611 -175.46641541]
[-151.54275513 -160.82098389]
[-144.01022339 -147.84942627]
[-133.93609619 -146.12791443]
[-126.31301117 -138.99508667]
[-123.82375336 -128.63047791]
[-127.52518463 -118.40058899]
[-120.38597107 -105.20848083]
[-113.24675751 -92.01637268]
[-106.10755157 -78.82426453]
[-98.96833801 -65.63216400]
[-91.82912445 -52.44005585]
[-84.68991852 -39.24794769]
[-77.11016083 -42.22244263]
[-69.16725159 -43.68231201]
[-61.15828705 -43.59875107]
[-53.37795639 -42.00021744]
[-46.10770416 -38.97044373]
[-39.60555267 -34.64444733]
[-34.09695435 -29.20270729]
[-29.76699448 -22.86373711]
[-26.75423813 -15.87538147]
[-25.14637947 -8.50515461]
[-24.97787285 -1.03002656]
[-26.22955513 6.27398586]
[-28.83029366 13.14200687]
[-16.52507782 21.71998215]
[-4.21986151 30.29795837]
[8.08535385 38.87593460]
[20.39056969 47.45391083]
[32.69578552 56.03188324]
[45.00100327 64.60986328]
[57.30621719 73.18783569]
[129.57083130 77.36376953]
[144.56703186 77.70195007]
[159.56321716 78.04013062]
[174.55940247 78.37831116]
[189.55558777 78.71649170]
[204.55177307 79.05467224]
[219.54795837 79.39285278]
[234.54414368 79.73103333]
[249.54034424 80.06921387]
[264.53652954 80.40739441]
[279.53271484 80.74557495]
[266.44192505 73.42223358]
[256.20843506 62.45521927]
[249.80734253 48.88959122]
[247.84866333 34.01802444]
[250.51901245 19.25762939]
[257.56393433 6.01493549]
[268.31213379 -4.44815922]
[281.73941040 -11.13462162]
[296.56622314 -13.40729713]
[311.37979126 -11.04962063]
[324.76846313 -4.28625584]
[335.45648193 6.23831272]
[342.42532349 19.52119637]
[345.01098633 34.29666138]
[342.96704102 49.15675354]
[336.48825073 62.68544388]
[326.19201660 73.59358215]
[313.05944824 80.84172058]
[298.34213257 83.73918915]
[312.70236206 88.07322693]
[327.06259155 92.40726471]
[341.42282104 96.74130249]
[355.81521606 100.96729279]
[370.26950073 104.97647095]
[384.75350952 108.87689972]
[399.23751831 112.77733612]
[412.82055664 105.15247345]
[427.45385742 109.31439972]
[434.63928223 122.31075287]
[448.20932007 114.20954132]
[463.51254272 118.15753937]
[471.46984863 131.81246948]
[467.36026001 147.07310486]
[453.62197876 154.88557434]
[438.40563965 150.61489868]
[430.73886108 136.79476929]
[417.99874878 144.42533875]
[403.25433350 140.67607117]
[395.33709717 127.26134491]
[380.85305786 123.36091614]
[366.36904907 119.46047974]
[359.09179688 120.75680542]
[351.69750977 115.39103699]
[344.40158081 116.57783508]
[337.08877563 111.10153198]
[322.72854614 106.76749420]
[308.36831665 102.43345642]
[294.00808716 98.09941864]
[279.19451904 95.74176788]
[264.19833374 95.40357971]
[249.20214844 95.06539917]
[234.20596313 94.72721863]
[219.20977783 94.38903809]
[204.21359253 94.05085754]
[189.21740723 93.71267700]
[174.22122192 93.37449646]
[159.22503662 93.03631592]
[144.22885132 92.69813538]
[129.23265076 92.35995483]
[124.07067871 97.80091095]
[128.33273315 112.18266296]
[113.74672699 108.68281555]
[108.58474731 114.12377167]
[109.71105194 129.08142090]
[110.83735657 144.03907776]
[111.96366119 158.99673462]
[113.08996582 173.95439148]
[114.21627045 188.91204834]
[128.09114075 195.49867249]
[136.80059814 208.14939880]
[138.00184631 223.46124268]
[131.37176514 237.31539917]
[118.69380188 245.98515320]
[103.37827301 247.13841248]
[89.54496765 240.46493530]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 201]
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[15 22]
[16 21]
[23 122]
[24 121]
[25 120]
[26 119]
[27 118]
[28 117]
[29 116]
[30 115]
[34 73]
[35 72]
[36 71]
[37 70]
[38 69]
[39 68]
[44 65]
[45 64]
[46 63]
[48 62]
[49 61]
[50 59]
[51 58]
[74 102]
[75 101]
[76 100]
[77 99]
[78 98]
[79 97]
[80 96]
[82 92]
[83 91]
[123 192]
[124 191]
[125 190]
[126 189]
[127 188]
[128 187]
[129 186]
[130 185]
[131 184]
[132 183]
[133 182]
[152 181]
[153 180]
[154 179]
[155 178]
[156 176]
[157 174]
[158 173]
[159 172]
[162 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
