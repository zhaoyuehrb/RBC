%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGACGUCACGAGAUUUGGAGCUCGCGGGAAAACUUGUCUCUGCGUUGUGGGGAGGACGCGCGCUCGCGCGGGAUUUUCAAGCGUAGGCCCCCGGGAACUCGAGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[50.50366592 251.17832947]
[31.44226456 254.73515320]
[26.04693222 268.73123169]
[20.65160179 282.72732544]
[23.72722816 298.83547974]
[11.13982582 309.34686279]
[-4.16176558 303.44827271]
[-6.43657970 287.20767212]
[6.65551662 277.33200073]
[12.05084801 263.33590698]
[17.44617844 249.33982849]
[9.83490467 241.86920166]
[5.19579935 232.22312927]
[4.10378933 221.53645325]
[6.71476221 211.07641602]
[12.74393559 202.09230042]
[21.49667549 195.66633606]
[31.94844627 192.58328247]
[42.86470795 193.23466492]
[41.89596558 178.37159729]
[55.14146042 169.71899414]
[62.08337402 156.42201233]
[69.02529144 143.12503052]
[75.96720123 129.82804871]
[82.90911865 116.53105927]
[89.85103607 103.23406982]
[95.64027405 89.39627075]
[100.23513794 75.11736298]
[104.83000183 60.83845520]
[109.42485809 46.55954361]
[103.43825531 41.49342728]
[98.96784973 35.07685089]
[96.30472565 27.74761581]
[95.61714935 20.00222778]
[96.93995667 12.36227322]
[100.17296600 5.33929443]
[105.08852386 -0.59946060]
[111.34743500 -5.06212330]
[118.52240753 -7.75805235]
[126.12716675 -8.51674366]
[133.64945984 -7.29857016]
[141.33253479 -20.18151855]
[149.01560974 -33.06446838]
[156.69868469 -45.94741821]
[164.38175964 -58.83036804]
[172.06483459 -71.71331787]
[179.74790955 -84.59626770]
[187.43098450 -97.47920990]
[189.18225098 -106.59731293]
[195.51817322 -110.61364746]
[203.56274414 -123.27400970]
[211.60731506 -135.93438721]
[219.65188599 -148.59474182]
[227.69645691 -161.25511169]
[235.74102783 -173.91548157]
[230.20072937 -188.28945923]
[234.14056396 -202.99766541]
[245.84719849 -212.45381165]
[260.69946289 -213.19451904]
[268.74401855 -225.85488892]
[276.78860474 -238.51524353]
[284.83316040 -251.17561340]
[292.87774658 -263.83599854]
[293.03274536 -280.23440552]
[307.44284058 -288.06265259]
[321.28411865 -279.26773071]
[320.31787109 -262.89706421]
[305.53808594 -255.79141235]
[297.49353027 -243.13104248]
[289.44897461 -230.47067261]
[281.40438843 -217.81031799]
[273.35983276 -205.14994812]
[278.99780273 -191.38945007]
[275.40954590 -176.77479553]
[263.76754761 -166.96064758]
[248.40138245 -165.87091064]
[240.35682678 -153.21054077]
[232.31225586 -140.55017090]
[224.26768494 -127.88980865]
[216.22311401 -115.22944641]
[208.17854309 -102.56907654]
[200.31393433 -89.79614258]
[192.63085938 -76.91319275]
[184.94778442 -64.03024292]
[177.26470947 -51.14729309]
[169.58163452 -38.26434326]
[161.89855957 -25.38139534]
[154.21548462 -12.49844551]
[146.53240967 0.38450354]
[155.21101379 21.73277283]
[145.79452515 43.03463364]
[123.70376587 51.15440369]
[119.10890961 65.43331146]
[114.51404572 79.71222687]
[109.91918945 93.99113464]
[124.07550049 89.03141785]
[137.70364380 95.29828644]
[143.15277100 109.27351379]
[137.36373901 123.11139679]
[123.58650970 129.04333496]
[109.55563354 123.73914337]
[103.14801788 110.17598724]
[96.20610809 123.47296906]
[89.26419067 136.76995850]
[82.32227325 150.06694031]
[75.38036346 163.36392212]
[68.43844604 176.66091919]
[68.91065216 192.47506714]
[56.16169357 200.17657471]
[66.04949951 217.34420776]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 11]
[3 10]
[4 9]
[19 109]
[21 107]
[22 106]
[23 105]
[24 104]
[25 103]
[26 102]
[27 95]
[28 94]
[29 93]
[30 92]
[41 89]
[42 88]
[43 87]
[44 86]
[45 85]
[46 84]
[47 83]
[48 82]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[55 76]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
