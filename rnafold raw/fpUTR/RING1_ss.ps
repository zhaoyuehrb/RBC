%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGCCCGGGCCAUGGCGGCGGCGGUGGCGGGAGCUGCUGUCUGAGCAGCGGUUGCGGACCGAGCGAACUUGGCCCAGGAGCCCGGGCCUAGGGAGAGGCGCGGCGGCGGCGGGAGCGCGAACGGCUGGAGCUGGCCUUCUUCGCCUUCUCCUCGGCUGUGGAGCCCUGGUGGGGGGUCUGCGCCCGGUCACC\
) } def
/len { sequence length } bind def

/coor [
[94.22087860 124.87104034]
[78.98663330 117.04087830]
[71.43025970 100.57962036]
[56.68696976 103.34284973]
[44.54830551 113.48993683]
[30.61351776 108.22961426]
[15.87022972 110.99284363]
[3.73156357 121.13993073]
[-10.20322132 115.87960052]
[-24.94651031 118.64282990]
[-39.68980026 121.40605927]
[-54.43308640 124.16928864]
[-69.17637634 126.93251801]
[-83.91966248 129.69575500]
[-96.05833435 139.84283447]
[-109.99311829 134.58250427]
[-116.71554565 148.44306946]
[-130.15342712 155.60383606]
[-145.05488586 153.50366211]
[-155.73445129 143.15548706]
[-170.47773743 145.91871643]
[-178.39941406 156.10865784]
[-190.74562073 158.10079956]
[-200.80329895 151.36491394]
[-215.58918762 153.89027405]
[-230.37507629 156.41563416]
[-245.16096497 158.94099426]
[-259.04525757 171.02738953]
[-275.25384521 164.31553650]
[-289.99713135 167.07876587]
[-304.74044800 169.84199524]
[-319.48373413 172.60522461]
[-328.41937256 185.36421204]
[-343.41052246 187.95649719]
[-355.51919556 179.35908508]
[-370.26251221 182.12231445]
[-385.00579834 184.88554382]
[-399.74908447 187.64877319]
[-414.49237061 190.41200256]
[-429.23565674 193.17523193]
[-439.44604492 205.54969788]
[-455.48382568 205.13816833]
[-465.04617310 192.25636292]
[-460.79766846 176.78607178]
[-445.99740601 170.59480286]
[-431.99887085 178.43194580]
[-417.25558472 175.66871643]
[-402.51229858 172.90548706]
[-387.76901245 170.14225769]
[-373.02572632 167.37902832]
[-358.28244019 164.61579895]
[-350.10891724 152.21705627]
[-335.19647217 149.20471191]
[-322.24694824 157.86192322]
[-307.50366211 155.09869385]
[-292.76037598 152.33546448]
[-278.01708984 149.57223511]
[-270.92233276 139.76441956]
[-258.65213013 137.34783936]
[-247.68632507 144.15509033]
[-232.90043640 141.62974548]
[-218.11454773 139.10438538]
[-203.32865906 136.57902527]
[-190.45697021 124.65898132]
[-173.24096680 131.17541504]
[-158.49768066 128.41218567]
[-152.29028320 114.89900970]
[-139.16072083 107.54518127]
[-124.04177856 109.35374451]
[-112.75634766 119.83921814]
[-101.67221832 109.88977814]
[-86.68289185 114.95246124]
[-71.93960571 112.18923187]
[-57.19631577 109.42600250]
[-42.45302963 106.66277313]
[-27.70973969 103.89954376]
[-12.96645069 101.13631439]
[-1.88232338 91.18687439]
[13.10700035 96.24954987]
[27.85029030 93.48632812]
[38.93441772 83.53688049]
[53.92374039 88.59956360]
[68.66703033 85.83633423]
[77.67816162 73.84469604]
[76.23045349 58.91471863]
[74.78274536 43.98474503]
[65.74965668 30.99575424]
[72.22248077 17.58114052]
[70.77477264 2.65116549]
[69.32705688 -12.27880955]
[67.87934875 -27.20878410]
[55.51987076 -37.05859375]
[53.82830811 -52.77209854]
[63.80824280 -65.02674866]
[79.53874969 -66.55208588]
[91.68720245 -56.44314575]
[93.04614258 -40.69738770]
[82.80932617 -28.65649223]
[84.25703430 -13.72651768]
[85.70474243 1.20345664]
[87.15245056 16.13343048]
[96.08199310 28.05453110]
[89.71272278 42.53703690]
[91.16043091 57.46701050]
[92.60813904 72.39698792]
[113.41262817 78.27286530]
[122.02970886 95.46489716]
[136.88928223 97.51260376]
[151.61650085 91.73165131]
[163.16838074 101.13395691]
[178.02795410 103.18166351]
[192.88752747 105.22937012]
[207.61474609 99.44841766]
[219.16662598 108.85072327]
[234.02619934 110.89842987]
[242.96835327 108.96831512]
[249.10791016 113.10068512]
[263.93258667 115.38751221]
[278.75723267 117.67433167]
[293.58187866 119.96115875]
[297.37313843 111.29701233]
[306.06182861 104.58233643]
[318.40921021 102.44403076]
[333.26876831 100.39632416]
[348.12835693 98.34861755]
[362.98791504 96.30091858]
[377.84750366 94.25321198]
[392.70706177 92.20550537]
[407.53170776 89.91867828]
[422.31759644 87.39332581]
[437.10351562 84.86797333]
[451.88940430 82.34261322]
[461.02941895 69.72923279]
[476.06039429 67.37879181]
[488.02902222 76.17015076]
[502.81491089 73.64479828]
[517.60076904 71.11943817]
[525.33544922 57.52867889]
[540.01446533 52.13779831]
[554.70678711 57.49221420]
[562.47515869 71.06372833]
[559.65161133 86.44429016]
[547.56939697 96.37166595]
[531.93322754 96.15846252]
[520.12615967 85.90533447]
[505.34024048 88.43068695]
[490.55435181 90.95603943]
[482.18215942 103.22151184]
[467.22314453 105.99320984]
[454.41473389 97.12850952]
[439.62884521 99.65386200]
[424.84295654 102.17921448]
[410.05706787 104.70457458]
[406.60830688 108.02587128]
[401.03228760 109.20747375]
[394.75476074 107.06507874]
[379.89520264 109.11278534]
[365.03561401 111.16049194]
[350.17605591 113.20819092]
[335.31646729 115.25589752]
[320.45690918 117.30360413]
[315.47827148 131.45327759]
[325.78167725 142.35466003]
[336.08505249 153.25605774]
[351.18743896 157.97076416]
[354.30654907 172.53511047]
[364.60995483 183.43650818]
[374.91333008 194.33789062]
[385.21670532 205.23927307]
[401.07730103 209.40750122]
[405.13619995 225.29640198]
[393.21795654 236.56085205]
[377.58306885 231.61294556]
[374.31533813 215.54266357]
[364.01193237 204.64128113]
[353.70855713 193.73988342]
[343.40518188 182.83850098]
[329.03976440 178.90353394]
[325.18365479 163.55943298]
[314.88027954 152.65805054]
[304.57690430 141.75666809]
[291.29504395 134.78581238]
[276.47039795 132.49899292]
[261.64575195 130.21215820]
[246.82109070 127.92533875]
[231.97850037 125.75800323]
[217.11892700 123.71029663]
[203.45455933 129.63771057]
[190.83982849 120.08894348]
[175.98025513 118.04123688]
[161.12068176 115.99353027]
[147.45631409 121.92095184]
[134.84158325 112.37217712]
[119.98200226 110.32447052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 83]
[4 82]
[6 80]
[7 79]
[9 77]
[10 76]
[11 75]
[12 74]
[13 73]
[14 72]
[16 70]
[20 66]
[21 65]
[24 63]
[25 62]
[26 61]
[27 60]
[29 57]
[30 56]
[31 55]
[32 54]
[35 51]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[84 105]
[85 104]
[86 103]
[88 101]
[89 100]
[90 99]
[91 98]
[107 194]
[108 193]
[110 191]
[111 190]
[112 189]
[114 187]
[115 186]
[117 185]
[118 184]
[119 183]
[120 182]
[123 161]
[124 160]
[125 159]
[126 158]
[127 157]
[128 156]
[129 153]
[130 152]
[131 151]
[132 150]
[135 147]
[136 146]
[137 145]
[162 181]
[163 180]
[164 179]
[166 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
