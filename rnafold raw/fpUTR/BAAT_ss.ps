%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCACGGUCCUGCUGAUAUGUGACAUCACCCCCGGAGGCCCAGCUGUAAAUUCCUCUCUUUGUACUCUUUCUCUUUAUUUCUCAGACCAGCCGACACUUAGGGAAAAUAGAACCUACGCUGAAAUUUUGGGGGCAGGUUCUCUUGCUAGGUUUUGAGGUUUUGCUGAAGAUAUUCCUGAAGAAUCAUCCCAGGUGCCACACUAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[-122.00964355 446.50177002]
[-130.79023743 458.66323853]
[-139.57084656 470.82470703]
[-148.35145569 482.98614502]
[-157.13204956 495.14761353]
[-159.61831665 503.93716431]
[-166.13502502 507.42346191]
[-175.09571838 519.45281982]
[-184.05641174 531.48217773]
[-179.59660339 546.22723389]
[-184.61561584 560.60302734]
[-196.99084473 569.16558838]
[-211.85714722 568.80358887]
[-220.81784058 580.83294678]
[-222.85679626 596.52221680]
[-236.66481018 602.10687256]
[-245.62550354 614.13623047]
[-240.87818909 628.90930176]
[-245.75288391 643.64080811]
[-258.37515259 652.66619873]
[-273.89151001 652.51501465]
[-286.33554077 643.24542236]
[-290.92233276 628.42175293]
[-285.88812256 613.74401855]
[-273.16867065 604.85607910]
[-257.65487671 605.17553711]
[-248.69418335 593.14617920]
[-247.29615784 578.31732178]
[-232.84722900 571.87225342]
[-223.88652039 559.84289551]
[-228.48924255 545.70239258]
[-223.82774353 531.39385986]
[-211.49044800 522.46948242]
[-196.08580017 522.52148438]
[-187.12510681 510.49212646]
[-178.16439819 498.46276855]
[-169.29350281 486.36700439]
[-160.51290894 474.20553589]
[-151.73229980 462.04409790]
[-142.95170593 449.88262939]
[-134.17109680 437.72119141]
[-139.49298096 417.15505981]
[-127.71347046 399.13568115]
[-106.17831421 395.66870117]
[-98.32656097 382.88784790]
[-97.50373840 375.54315186]
[-90.26155853 369.97640991]
[-82.22038269 357.31387329]
[-74.17921448 344.65133667]
[-81.28710175 332.98965454]
[-82.68370819 319.33761597]
[-78.03977966 306.35366821]
[-68.20791626 296.59085083]
[-55.06664276 291.99484253]
[-41.16168976 293.51641846]
[-32.93288422 280.97500610]
[-24.70407486 268.43362427]
[-31.63754654 256.66738892]
[-32.83074570 242.99606323]
[-27.99402237 230.08268738]
[-18.01788712 220.46733093]
[-4.80964518 216.06750488]
[9.07111073 217.79592896]
[17.48572922 205.37843323]
[13.30780792 193.18931580]
[16.96785736 180.63200378]
[27.34475136 172.35368347]
[40.78987885 171.55171204]
[49.38844299 159.26087952]
[57.98700714 146.97004700]
[66.58557129 134.67919922]
[75.18413544 122.38836670]
[67.93377686 109.42462158]
[67.01667023 94.59946442]
[72.61392975 80.84094238]
[83.62008667 70.86643219]
[97.86136627 66.64595795]
[112.52502441 69.01306915]
[121.12358856 56.72223282]
[129.72215271 44.43139648]
[138.32072449 32.14055634]
[146.91928101 19.84972000]
[149.27439880 11.02411842]
[155.73849487 7.44119501]
[164.51908875 -4.72026110]
[173.29969788 -16.88171577]
[182.08030701 -29.04317284]
[177.40144348 -43.72017670]
[182.20587158 -58.16908264]
[194.45223999 -66.91496277]
[209.32229614 -66.77432251]
[218.10289001 -78.93577576]
[226.88349915 -91.09723663]
[235.66409302 -103.25868988]
[229.49862671 -120.30992889]
[234.75675964 -137.49804688]
[249.15263367 -147.99613953]
[266.81085205 -147.75325012]
[275.22546387 -160.17074585]
[283.64007568 -172.58824158]
[292.05468750 -185.00573730]
[300.46932983 -197.42323303]
[308.88394165 -209.84072876]
[310.22030640 -225.60539246]
[323.76516724 -231.80102539]
[332.17977905 -244.21852112]
[329.18392944 -253.15898132]
[330.61645508 -262.33938599]
[336.03103638 -269.72021484]
[344.11126709 -273.72076416]
[352.98855591 -273.55706787]
[361.94924927 -285.58645630]
[370.90997314 -297.61584473]
[379.87066650 -309.64520264]
[388.83135986 -321.67459106]
[397.79205322 -333.70397949]
[406.75274658 -345.73333740]
[408.79168701 -361.42260742]
[422.59970093 -367.00726318]
[424.63864136 -382.69653320]
[438.44665527 -388.28115845]
[447.40734863 -400.31054688]
[449.44631958 -415.99981689]
[463.25430298 -421.58444214]
[472.21499634 -433.61383057]
[476.82806396 -449.92813110]
[493.78179932 -450.01159668]
[498.55526733 -433.74349976]
[484.24438477 -424.65313721]
[475.28369141 -412.62374878]
[473.88568115 -397.79492188]
[459.43673706 -391.34985352]
[450.47604370 -379.32046509]
[449.07800293 -364.49160767]
[434.62908936 -358.04656982]
[433.23104858 -343.21771240]
[418.78213501 -336.77264404]
[409.82141113 -324.74328613]
[400.86071777 -312.71389771]
[391.90002441 -300.68450928]
[382.93933105 -288.65515137]
[373.97863770 -276.62576294]
[365.01794434 -264.59637451]
[364.41107178 -243.96640015]
[344.59725952 -235.80389404]
[336.18264771 -223.38639832]
[335.44818115 -208.50991821]
[321.30142212 -201.42610168]
[312.88681030 -189.00860596]
[304.47219849 -176.59111023]
[296.05758667 -164.17361450]
[287.64297485 -151.75611877]
[279.22833252 -139.33862305]
[285.00283813 -128.66011047]
[285.69326782 -116.46765137]
[281.10736084 -105.07157898]
[272.05847168 -96.65747833]
[260.22201538 -92.86706543]
[247.82556152 -94.47808838]
[239.04495239 -82.31662750]
[230.26434326 -70.15517426]
[221.48374939 -57.99372101]
[226.29647827 -43.92333984]
[221.84854126 -29.54697609]
[209.64547729 -20.43989944]
[194.24176025 -20.26256943]
[185.46115112 -8.10111332]
[176.68054199 4.06034231]
[167.89994812 16.22179794]
[159.21012878 28.44828415]
[150.61155701 40.73912048]
[142.01300049 53.02996063]
[133.41442871 65.32080078]
[124.81586456 77.61163330]
[132.06622314 90.57537842]
[132.98333740 105.40053558]
[127.38607025 119.15905762]
[116.37991333 129.13356018]
[102.13863373 133.35404968]
[87.47497559 130.98692322]
[78.87641144 143.27777100]
[70.27784729 155.56860352]
[61.67927933 167.85943604]
[53.08071518 180.15028381]
[56.44047546 197.31802368]
[46.53942490 211.32815552]
[29.90322495 213.79304504]
[21.48860741 226.21054077]
[28.85785675 241.01210022]
[27.76335716 257.41629028]
[18.59832001 270.95211792]
[3.94263387 277.97827148]
[-12.16267490 276.66241455]
[-20.39148331 289.20382690]
[-28.62029076 301.74520874]
[-21.03148270 316.43542480]
[-21.88162804 332.85409546]
[-30.84412003 346.52487183]
[-45.39357376 353.76846313]
[-61.51668930 352.69250488]
[-69.55786133 365.35504150]
[-77.59903717 378.01757812]
[-85.54571533 390.73959351]
[-93.39747620 403.52044678]
[-88.65837860 411.07543945]
[-86.63893127 419.71752930]
[-87.53050232 428.50387573]
[-91.20841217 436.48522949]
[-97.24852753 442.80859375]
[-104.97595215 446.80822754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 41]
[2 40]
[3 39]
[4 38]
[5 37]
[7 36]
[8 35]
[9 34]
[13 30]
[14 29]
[16 27]
[17 26]
[44 204]
[45 203]
[47 202]
[48 201]
[49 200]
[55 195]
[56 194]
[57 193]
[63 188]
[64 187]
[68 184]
[69 183]
[70 182]
[71 181]
[72 180]
[78 174]
[79 173]
[80 172]
[81 171]
[82 170]
[84 169]
[85 168]
[86 167]
[87 166]
[91 162]
[92 161]
[93 160]
[94 159]
[98 153]
[99 152]
[100 151]
[101 150]
[102 149]
[103 148]
[105 146]
[106 145]
[111 143]
[112 142]
[113 141]
[114 140]
[115 139]
[116 138]
[117 137]
[119 135]
[121 133]
[122 132]
[124 130]
[125 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
