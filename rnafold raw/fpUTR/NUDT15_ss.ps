%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCCCAACCUGAUAGCCCUCCGCGACGCAUUACGCACCGCGGACAGCUGGAGAGGCCGAGGCGCUCUCGCUUUGAUUUCGGCGCCUCCGCCCUCGCGGGGAGAGAUUGGCUGCGGCCGCGGGACGGGGUAGUGAGCGCGUCACUUCCUGCCGCUGCCAGGCGCGUCCUCCCGCGCGCU\
) } def
/len { sequence length } bind def

/coor [
[165.52304077 153.79359436]
[166.18879700 168.77882385]
[162.27127075 183.25822449]
[154.14070129 195.86352539]
[142.56538391 205.40356445]
[128.63919067 210.97679138]
[113.67810822 212.05657959]
[99.09593201 208.54087830]
[86.27066040 200.76190186]
[76.41426086 189.45475769]
[70.45813751 175.68797302]
[68.96514130 160.76245117]
[72.07635498 146.08865356]
[79.49877930 133.05195618]
[88.52338409 121.07045746]
[74.85930634 127.25859070]
[61.19523239 133.44673157]
[47.53115845 139.63485718]
[41.88402939 154.15200806]
[27.93856239 160.23301697]
[14.13347721 154.75987244]
[0.46940044 160.94801331]
[-13.19467640 167.13613892]
[-26.85875320 173.32427979]
[-40.52282715 179.51242065]
[-54.18690491 185.70054626]
[-59.83403015 200.21769714]
[-73.77950287 206.29870605]
[-87.58458710 200.82556152]
[-101.24866486 207.01370239]
[-108.22541046 221.46031189]
[-123.90142822 224.87232971]
[-136.25141907 214.63235474]
[-135.80152893 198.59561157]
[-122.89687347 189.06411743]
[-107.43679810 193.34962463]
[-93.77272034 187.16148376]
[-88.78025818 173.17538452]
[-75.01109314 166.70509338]
[-60.37504196 172.03646851]
[-46.71096420 165.84834290]
[-33.04688644 159.66020203]
[-19.38281059 153.47206116]
[-5.71873474 147.28393555]
[7.94534159 141.09579468]
[12.93780231 127.10970306]
[26.70696640 120.63940430]
[41.34302139 125.97078705]
[55.00709915 119.78264618]
[68.67117310 113.59451294]
[82.33525085 107.40637970]
[86.57259369 93.01732635]
[78.44307709 80.41133118]
[70.31356812 67.80534363]
[63.01235580 62.27043533]
[62.15456009 54.90925980]
[54.24506378 42.16407013]
[46.33556366 29.41888237]
[32.48450851 21.77304077]
[32.34764099 6.87906504]
[24.43814278 -5.86612320]
[16.52864456 -18.61131096]
[8.61914444 -31.35649872]
[0.70964551 -44.10168839]
[-7.19985390 -56.84687424]
[-15.10935307 -69.59206390]
[-23.01885223 -82.33724976]
[-38.01327896 -79.84012604]
[-52.82080078 -83.27606201]
[-65.18338013 -92.12112427]
[-73.21582031 -105.02648163]
[-75.69322205 -120.02417755]
[-72.23780060 -134.82717896]
[-63.37649155 -147.17810059]
[-50.46057510 -155.19355774]
[-35.45962906 -157.65122986]
[-20.66119766 -154.17634583]
[-8.32192993 -145.29879761]
[-0.32347494 -132.37234497]
[2.11446095 -117.36817932]
[-1.37988973 -102.57433319]
[-10.27366447 -90.24674988]
[-2.36416507 -77.50156403]
[5.54533434 -64.75637817]
[13.45483398 -52.01118851]
[21.36433220 -39.26599884]
[29.27383232 -26.52081108]
[37.18333054 -13.77562237]
[45.09283066 -1.03043425]
[58.37814331 5.70378590]
[59.08074951 21.50938416]
[66.99024963 34.25457001]
[74.89974976 46.99975967]
[82.91955566 59.67582703]
[91.04907227 72.28181458]
[99.17858124 84.88780975]
[112.19060516 92.35019684]
[127.17649078 93.00087738]
[142.16236877 93.65155792]
[157.15333557 94.17215729]
[172.14825439 94.56264496]
[187.14315796 94.95312500]
[202.13807678 95.34361267]
[217.13299561 95.73410034]
[225.82026672 92.82306671]
[232.38415527 96.26373291]
[247.37004089 96.91441345]
[262.35592651 97.56509399]
[273.95114136 87.16373444]
[289.13970947 88.03709412]
[298.98434448 99.15547943]
[313.97021484 99.80615234]
[328.95611572 100.45683289]
[338.98947144 92.32361603]
[351.47406006 93.18997955]
[359.73959351 102.04527283]
[374.71194458 102.95594788]
[389.68426514 103.86662292]
[403.92871094 96.98143005]
[416.16278076 105.47714996]
[431.13510132 106.38782501]
[446.10742188 107.29850006]
[461.07977295 108.20917511]
[467.19619751 105.58641815]
[472.86181641 106.35130310]
[476.55313110 109.42019653]
[491.48483276 110.84996796]
[506.41653442 112.27973175]
[521.34820557 113.70950317]
[536.27996826 115.13926697]
[545.14825439 112.83790588]
[551.45758057 116.72563171]
[566.36224365 118.41433716]
[581.26690674 120.10304260]
[596.17150879 121.79174805]
[611.07617188 123.48045349]
[624.47064209 114.65050507]
[639.68023682 119.75414276]
[645.03747559 134.87628174]
[636.43280029 148.41653442]
[620.46685791 149.98794556]
[609.38745117 138.38510132]
[594.48284912 136.69639587]
[579.57818604 135.00767517]
[564.67352295 133.31896973]
[549.76892090 131.63026428]
[534.85015869 130.07096863]
[519.91845703 128.64120483]
[504.98675537 127.21144104]
[490.05505371 125.78166962]
[475.12335205 124.35190582]
[460.16909790 123.18150330]
[445.19674683 122.27082825]
[430.22442627 121.36015320]
[415.25210571 120.44947815]
[402.07855225 127.39981079]
[388.77359009 118.83895111]
[373.80126953 117.92827606]
[358.82891846 117.01760101]
[343.58767700 125.69335175]
[328.30541992 115.44271088]
[313.31954956 114.79203796]
[298.33367920 114.14135742]
[287.56237793 124.36460876]
[272.35528564 123.91821289]
[261.70523071 112.55097198]
[246.71936035 111.90029144]
[231.73347473 111.24961853]
[216.74250793 110.72901154]
[201.74758911 110.33853149]
[186.75268555 109.94804382]
[171.75776672 109.55755615]
[156.76284790 109.16707611]
[149.97608948 112.14410400]
[141.51168823 108.63743591]
[126.52581024 107.98675537]
[111.53993225 107.33608246]
[124.37932587 115.09172058]
[138.74488831 119.40804291]
[151.12059021 127.88400269]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 51]
[16 50]
[17 49]
[18 48]
[21 45]
[22 44]
[23 43]
[24 42]
[25 41]
[26 40]
[29 37]
[30 36]
[52 96]
[53 95]
[54 94]
[56 93]
[57 92]
[58 91]
[60 89]
[61 88]
[62 87]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[97 177]
[98 176]
[99 175]
[100 173]
[101 172]
[102 171]
[103 170]
[104 169]
[106 168]
[107 167]
[108 166]
[111 163]
[112 162]
[113 161]
[116 159]
[117 158]
[118 157]
[120 155]
[121 154]
[122 153]
[123 152]
[126 151]
[127 150]
[128 149]
[129 148]
[130 147]
[132 146]
[133 145]
[134 144]
[135 143]
[136 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
