%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUGAGCAUUCUCUCCAAAUGAAGACAUCACAGCCUCAUUCCUAACACAGAAAGUUAUUUAUUUCAAAUACAGUUUCGGUGGGUAAAUAAGGUGGCGCAUUCCUUCUACAGAGGACACACCUAGGAGAGCAAGAUACGUCCCAGUGAAACACAGCUUCGUCACCAACUUCAGUCAACUCUUUGGCAACAUCACAUCAGCCCAUCAACUUAACAGGCUAAAA\
) } def
/len { sequence length } bind def

/coor [
[128.69349670 234.63043213]
[116.20646667 242.94152832]
[101.26117706 244.22145081]
[87.54281616 238.15460205]
[78.43405914 226.23693848]
[76.18082428 211.40834045]
[68.41041565 224.23880005]
[60.64001083 237.06925964]
[67.40614319 252.57664490]
[63.62973022 268.89837646]
[50.99317932 279.64245605]
[34.60835648 280.72271729]
[27.01784897 293.66043091]
[19.42734146 306.59811401]
[26.49223709 320.31274414]
[24.99817467 335.66760254]
[15.42190742 347.76300049]
[0.81918591 352.73934937]
[-14.15031433 349.00869751]
[-24.70988083 337.76153564]
[-27.48999214 322.58673096]
[-21.60352707 308.32653809]
[-8.92883492 299.53134155]
[6.48963737 299.00762939]
[14.08014393 286.06991577]
[21.67065048 273.13220215]
[15.21524334 261.45230103]
[15.37283039 247.99986267]
[22.20915031 236.28744507]
[34.03214645 229.42599487]
[47.80954742 229.29885864]
[55.57995224 216.46839905]
[63.35035706 203.63793945]
[63.41041565 192.86648560]
[72.90180206 185.36770630]
[79.00285339 171.66452026]
[85.10389709 157.96134949]
[91.20494843 144.25816345]
[97.30599976 130.55497742]
[94.16011047 123.74665070]
[82.23627472 132.84732056]
[70.31244659 141.94799805]
[63.10703659 155.10406494]
[49.52910233 161.47898865]
[34.80421066 158.61933899]
[24.59934425 147.62568665]
[22.84191513 132.72898865]
[30.20828438 119.66236877]
[43.86345291 113.45459747]
[58.55115891 116.49423981]
[73.20973969 113.31211090]
[87.86832428 110.12998962]
[84.72243500 103.32165527]
[70.33272552 99.08653259]
[55.94301605 94.85140991]
[41.55330658 90.61628723]
[26.13004875 94.14243317]
[16.10515976 83.12649536]
[1.68623435 78.99193573]
[-12.76120377 74.95813751]
[-27.20864296 70.92433929]
[-41.65608215 66.89054108]
[-56.10351944 62.85674286]
[-70.73005676 69.44795227]
[-84.93639374 61.99412155]
[-87.82464600 46.21319962]
[-77.17919159 34.21095276]
[-61.16631317 35.19448090]
[-52.06972122 48.40930557]
[-37.62228394 52.44309998]
[-23.17484474 56.47689819]
[-8.72740650 60.51069641]
[5.72003174 64.54449463]
[13.00031567 63.31703949]
[20.34028244 68.73678589]
[34.73429108 64.90772247]
[45.78842926 76.22657776]
[60.17813873 80.46170044]
[74.56784821 84.69682312]
[88.95755768 88.93194580]
[103.65118408 85.91577911]
[115.20888519 76.35441589]
[126.76658630 66.79306030]
[138.32427979 57.23169708]
[149.88198853 47.67033768]
[161.43968201 38.10897827]
[172.99737549 28.54761887]
[164.43676758 7.64230633]
[163.80636597 -14.91610336]
[171.17115784 -36.22345734]
[185.56777954 -53.54238892]
[205.13069153 -64.65397644]
[227.33374023 -68.14205170]
[249.31645203 -63.57363129]
[256.54275513 -76.71823120]
[263.76907349 -89.86283112]
[270.99536133 -103.00743103]
[278.22167969 -116.15203094]
[285.44796753 -129.29663086]
[267.64590454 -169.56715393]
[269.31793213 -184.47366333]
[263.16714478 -199.05030823]
[272.27493286 -210.83578491]
[273.94696045 -225.74230957]
[275.61898804 -240.64883423]
[277.29101562 -255.55534363]
[278.96307373 -270.46185303]
[267.34289551 -260.97653198]
[252.34312439 -261.06185913]
[240.83161926 -270.67877197]
[238.07902527 -285.42404175]
[245.34565735 -298.54638672]
[259.30441284 -304.03756714]
[273.56411743 -299.38339233]
[281.59558105 -286.71554565]
[284.71426392 -301.38775635]
[287.83294678 -316.05996704]
[280.33633423 -330.24377441]
[286.88342285 -344.89010620]
[302.45184326 -348.76358032]
[315.09884644 -338.89276123]
[315.12271118 -322.84970093]
[302.50515747 -312.94131470]
[299.38647461 -298.26907349]
[296.26779175 -283.59686279]
[293.86959839 -268.78982544]
[292.19754028 -253.88331604]
[290.52551270 -238.97679138]
[288.85348511 -224.07026672]
[287.18145752 -209.16375732]
[293.45184326 -195.65333557]
[284.22445679 -182.80163574]
[282.55242920 -167.89511108]
[288.77020264 -163.70117188]
[297.15811157 -176.13673401]
[305.54598999 -188.57229614]
[313.93389893 -201.00785828]
[322.32177734 -213.44342041]
[326.45635986 -227.86233521]
[341.44723511 -228.38578796]
[346.57745361 -214.29037476]
[334.75735474 -205.05552673]
[326.36944580 -192.61996460]
[317.98156738 -180.18440247]
[309.59365845 -167.74884033]
[301.20578003 -155.31327820]
[307.42355347 -151.11932373]
[320.61828613 -158.25369263]
[333.81301880 -165.38804626]
[344.87008667 -178.24018860]
[360.28085327 -171.17303467]
[357.75604248 -154.40814209]
[340.94738770 -152.19332886]
[327.75265503 -145.05895996]
[314.55792236 -137.92459106]
[329.37875366 -135.61308289]
[338.82354736 -123.95993805]
[338.01593018 -108.98169708]
[327.37289429 -98.41165924]
[312.38943481 -97.70716095]
[300.80157471 -107.23194122]
[298.59259033 -122.07032776]
[291.36627197 -108.92572784]
[284.13995361 -95.78112793]
[276.91366577 -82.63652802]
[269.68734741 -69.49192810]
[262.46105957 -56.34732819]
[269.55252075 -50.41249084]
[275.69152832 -43.49697495]
[280.74380493 -35.75193024]
[284.59899902 -27.34663963]
[287.17285156 -18.46481133]
[288.40905762 -9.30057430]
[288.28060913 -0.05422641]
[286.79034424 9.07213879]
[300.84954834 14.30071926]
[314.90878296 19.52930069]
[328.96801758 24.75788116]
[343.02725220 29.98646164]
[359.09771729 26.71957779]
[369.75796509 39.18114471]
[364.04168701 54.55176926]
[347.82928467 57.01947021]
[337.79867554 44.04569244]
[323.73944092 38.81711197]
[309.68020630 33.58852768]
[295.62097168 28.35994911]
[281.56173706 23.13136864]
[276.94738770 30.76460266]
[271.29135132 37.66790390]
[264.70751953 43.70008469]
[257.32873535 48.73751068]
[249.30422974 52.67664719]
[240.79644775 55.43618393]
[231.97785950 56.95870209]
[223.02748108 57.21188354]
[214.12718201 56.18918610]
[205.45799255 53.91000366]
[197.19647217 50.41930771]
[189.51107788 45.78676224]
[182.55874634 40.10531616]
[171.00103760 49.66667557]
[159.44334412 59.22803497]
[147.88563538 68.78939819]
[136.32794189 78.35075378]
[124.77024841 87.91211700]
[113.21254730 97.47347260]
[126.41841125 90.35974884]
[141.40861511 90.90193176]
[154.06604004 98.95111847]
[160.91432190 112.29656982]
[160.07252502 127.27293396]
[151.77189636 139.76690674]
[138.29217529 146.34698486]
[123.33563995 145.20593262]
[111.00917816 136.65603638]
[104.90813446 150.35920715]
[98.80708313 164.06239319]
[92.70603180 177.76557922]
[86.60498047 191.46875000]
[100.06862640 184.85586548]
[115.05326843 185.53456116]
[127.86399078 193.33746338]
[135.34193420 206.34054565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 33]
[7 32]
[8 31]
[12 26]
[13 25]
[14 24]
[35 220]
[36 219]
[37 218]
[38 217]
[39 216]
[53 80]
[54 79]
[55 78]
[56 77]
[58 75]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[81 207]
[82 206]
[83 205]
[84 204]
[85 203]
[86 202]
[87 201]
[94 167]
[95 166]
[96 165]
[97 164]
[98 163]
[99 162]
[100 133]
[101 132]
[103 130]
[104 129]
[105 128]
[106 127]
[107 126]
[115 125]
[116 124]
[117 123]
[147 155]
[148 154]
[149 153]
[175 188]
[176 187]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
