%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCUCUUCCGGACGCAAUUUUGAGGAGGUCGGAGCGGAAGGACGUCGUGGAGAUUGCUUGCGCUGGGGUGCCACACUUAGGCUGAGCUGCAGGUUUUCGCACAGUCGCGAGUUAACCUCUGCUUGCUCCAGAGGCCUCGUCCUAAUCCACCUCGGCUGACGGCGCGGGAUCCCUGGCUCCGCGAGCCUCAGCCUCACC\
) } def
/len { sequence length } bind def

/coor [
[229.88548279 508.18576050]
[227.32151794 493.40652466]
[220.02670288 495.14883423]
[215.19123840 509.34805298]
[210.35577393 523.54730225]
[205.63140869 537.78387451]
[201.01846313 552.05694580]
[196.40551758 566.33001709]
[197.28782654 583.26098633]
[181.26277161 588.79577637]
[171.50810242 574.92919922]
[182.13243103 561.71710205]
[186.74539185 547.44403076]
[191.35833740 533.17089844]
[190.42323303 525.83349609]
[196.15653992 518.71185303]
[200.99200439 504.51260376]
[205.82746887 490.31335449]
[195.37948608 501.07623291]
[180.68923950 504.10885620]
[166.83328247 498.36322021]
[158.59983826 485.82485962]
[158.83416748 470.82669067]
[167.45529175 458.55166626]
[181.48399353 453.24169922]
[196.07232666 456.73175049]
[206.17912292 467.81610107]
[201.78981018 453.47268677]
[197.40049744 439.12924194]
[193.01118469 424.78582764]
[188.62187195 410.44238281]
[183.65444946 404.96182251]
[184.27793884 395.84039307]
[180.11334229 381.43011475]
[175.94873047 367.01983643]
[160.89114380 359.53750610]
[155.80009460 343.15863037]
[164.29034424 327.86813354]
[159.90103149 313.52468872]
[155.51171875 299.18127441]
[150.89875793 284.90820312]
[146.06329346 270.70895386]
[141.22782898 256.50970459]
[136.09153748 251.18707275]
[136.42964172 242.05061340]
[125.15328217 232.31958008]
[128.27165222 216.80873108]
[123.65869904 202.53565979]
[118.60622406 197.13339233]
[119.08707428 188.00332642]
[114.69776154 173.65989685]
[110.30844879 159.31646729]
[105.91913605 144.97305298]
[101.52982330 130.62962341]
[85.96893311 127.26982117]
[74.18883514 116.56192780]
[69.36377716 101.39128876]
[72.79391479 85.84574890]
[61.58421326 75.87867737]
[50.37450790 65.91160583]
[39.16480255 55.94453049]
[27.87755013 46.06536484]
[16.51343918 36.27470779]
[7.96187639 33.04051971]
[5.04976940 26.24113464]
[-6.15993500 16.27406311]
[-17.36964035 6.30699110]
[-28.57934380 -3.66008115]
[-39.78904724 -13.62715340]
[-54.91717911 -10.17472363]
[-69.17211914 -16.30468559]
[-77.07254028 -29.65994263]
[-75.58058167 -45.10512543]
[-65.26992798 -56.70124817]
[-50.10523605 -59.98936081]
[-35.91764069 -53.70512390]
[-28.16255569 -40.26494598]
[-29.82197571 -24.83685684]
[-18.61227226 -14.86978531]
[-7.40256739 -4.90271378]
[3.80713701 5.06435871]
[15.01684189 15.03143024]
[26.30409431 24.91059685]
[37.66820526 34.70125198]
[44.79341888 36.68703079]
[49.13187408 44.73482513]
[60.34157944 54.70190048]
[71.55128479 64.66896820]
[82.76098633 74.63603973]
[90.56872559 70.81841278]
[99.13391876 69.34443665]
[102.39004517 54.70211029]
[105.64617920 40.05978775]
[108.67306519 25.36836433]
[111.46996307 10.63142586]
[114.26686096 -4.10551214]
[117.06376648 -18.84245110]
[119.62999725 -33.62130356]
[121.96493530 -48.43845749]
[124.29987335 -63.25561142]
[126.63481140 -78.07276154]
[128.96975708 -92.88992310]
[119.46875000 -105.51950836]
[121.76369476 -121.15628815]
[134.49302673 -130.52322388]
[150.10467529 -128.06309509]
[159.33650208 -115.23543549]
[156.71145630 -99.65068054]
[143.78691101 -90.55497742]
[141.45196533 -75.73782349]
[139.11703491 -60.92067337]
[136.78208923 -46.10351944]
[134.44715881 -31.28636360]
[136.48812866 -26.96042824]
[135.82759094 -21.30565071]
[131.80070496 -16.04554939]
[129.00379944 -1.30861151]
[126.20690155 13.42832661]
[123.41000366 28.16526413]
[125.31478119 32.55287552]
[124.47782135 38.18424606]
[120.28849792 43.31591797]
[117.03237152 57.95824051]
[113.77623749 72.60056305]
[125.78617096 83.39917755]
[130.64439392 98.80197144]
[127.00348663 114.53704071]
[115.87325287 126.24030304]
[120.26256561 140.58374023]
[124.65187836 154.92715454]
[129.04118347 169.27058411]
[133.43049622 183.61401367]
[137.93177795 197.92271423]
[142.54472351 212.19578552]
[154.15103149 222.94772339]
[150.70271301 237.43766785]
[155.42706299 251.67425537]
[160.26252747 265.87347412]
[165.09799194 280.07272339]
[169.82260132 284.71627808]
[171.26945496 290.22259521]
[169.85514832 294.79196167]
[174.24444580 309.13537598]
[178.63375854 323.47882080]
[191.18049622 328.39047241]
[198.49855042 339.47128296]
[198.10171509 352.54983521]
[190.35900879 362.85522461]
[194.52362061 377.26550293]
[198.68821716 391.67578125]
[202.96530151 406.05307007]
[207.35461426 420.39651489]
[211.74392700 434.73992920]
[216.13323975 449.08337402]
[220.52255249 463.42678833]
[259.68753052 477.44946289]
[270.41772461 487.93099976]
[281.14794922 498.41253662]
[291.87814331 508.89407349]
[302.60833740 519.37561035]
[313.33856201 529.85717773]
[321.67132568 533.61932373]
[324.15295410 540.58734131]
[334.71801758 551.23535156]
[345.28308105 561.88330078]
[360.49551392 566.22985840]
[363.96737671 580.71417236]
[374.53247070 591.36212158]
[385.18041992 601.92724609]
[395.91064453 612.40875244]
[406.64083862 622.89031982]
[421.91415405 620.15075684]
[435.86611938 626.94213867]
[443.13186646 640.65301514]
[440.91760254 656.01129150]
[430.07473755 667.11138916]
[414.77258301 669.68511963]
[400.89514160 662.74273682]
[393.77856445 648.95385742]
[396.15930176 633.62048340]
[385.42910767 623.13897705]
[374.69888306 612.65740967]
[367.71166992 610.23034668]
[363.88449097 601.92724609]
[353.31942749 591.27923584]
[338.86267090 587.69427490]
[334.63513184 572.44836426]
[324.07003784 561.80041504]
[313.50497437 551.15246582]
[302.85699463 540.58734131]
[292.12680054 530.10583496]
[281.39660645 519.62426758]
[270.66638184 509.14273071]
[259.93618774 498.66119385]
[249.20597839 488.17965698]
[241.91116333 489.92193604]
[246.30268860 504.26470947]
[256.08178711 515.63879395]
[251.46138000 529.90942383]
[236.87164307 533.39361572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 18]
[4 17]
[5 16]
[6 14]
[7 13]
[8 12]
[27 155]
[28 154]
[29 153]
[30 152]
[31 151]
[33 150]
[34 149]
[35 148]
[38 144]
[39 143]
[40 142]
[41 139]
[42 138]
[43 137]
[45 136]
[47 134]
[48 133]
[50 132]
[51 131]
[52 130]
[53 129]
[54 128]
[58 89]
[59 88]
[60 87]
[61 86]
[62 84]
[63 83]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[91 124]
[92 123]
[93 122]
[94 119]
[95 118]
[96 117]
[97 116]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[156 195]
[157 194]
[158 193]
[159 192]
[160 191]
[161 190]
[163 189]
[164 188]
[165 187]
[167 185]
[168 184]
[169 182]
[170 181]
[171 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
