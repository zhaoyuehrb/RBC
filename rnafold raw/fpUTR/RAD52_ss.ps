%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCGACAUGCACUUGGAUCAUUGCAGUUUCUGGGCCUGCUGUCAUCUCCCCCUUCAGUACUUCCCACAUAUGACUACCAACUGUUAGACGAUGUGCUGCUGCCAGACCAGCCUUUCAUUUCUUGGACAUCCGGCUAUUUACCCAGGAAAAGUCAUCCUUUGACUAUUUUUCAUGACCUUUCUCAUCUGACUCGUGAUCUGCCCAUCUUGUUACUCCCUAGCAGUGUGGUAAGAGGUCAACCAGAAUCAAG\
) } def
/len { sequence length } bind def

/coor [
[46.40668869 391.71463013]
[42.52440262 406.20349121]
[38.64211655 420.69238281]
[34.75983429 435.18127441]
[38.66174316 450.51379395]
[27.89402390 460.80480957]
[37.76352310 472.77865601]
[38.67646790 488.26885986]
[30.28181267 501.31912231]
[15.80747509 506.91134644]
[0.81913126 502.89523315]
[-8.91989326 490.81506348]
[-9.66474628 475.31585693]
[-1.12901473 462.35742188]
[13.40513706 456.92254639]
[9.22553921 442.62637329]
[20.27094460 431.29898071]
[24.15323067 416.81011963]
[28.03551674 402.32122803]
[31.91780281 387.83233643]
[22.09495354 379.93289185]
[15.95878220 368.86874390]
[14.44832516 356.26043701]
[17.82211876 343.97000122]
[25.61476898 333.82586670]
[36.70080185 327.35095215]
[49.45711517 325.53402710]
[45.63523102 311.13809204]
[56.95960236 300.08959961]
[61.20190048 285.70202637]
[65.44419861 271.31442261]
[69.68649292 256.92681885]
[73.92878723 242.53923035]
[78.17108917 228.15162659]
[82.14360809 213.68722534]
[85.84497070 199.15106201]
[89.54633331 184.61491394]
[93.24769592 170.07875061]
[55.75192642 94.61228180]
[41.47456741 90.01261139]
[27.19720650 85.41294098]
[12.91984558 80.81327057]
[3.57378697 86.31197357]
[-7.03754663 85.78520203]
[-15.43884373 79.64633179]
[-19.01079559 70.10723114]
[-33.16904449 65.15304565]
[-47.32729721 60.19886017]
[-56.80249023 67.32680511]
[-68.42113495 68.99114227]
[-79.29231262 64.89422607]
[-86.76702118 56.15756607]
[-89.08348846 45.01771164]
[-103.35041809 51.27011871]
[-117.50359344 45.68959808]
[-123.37638855 32.04973602]
[-137.40672302 26.74411392]
[-151.43705750 21.43849182]
[-165.46740723 16.13287163]
[-179.49774170 10.82725048]
[-193.52807617 5.52162933]
[-209.17289734 7.87752628]
[-218.34068298 -3.86134195]
[-232.37101746 -9.16696262]
[-239.80537415 -1.68079066]
[-249.26641846 2.90152526]
[-259.67355347 4.08470726]
[-269.84738159 1.76011693]
[-278.64343262 -3.78480124]
[-285.08068848 -11.90180206]
[-288.45132446 -21.65753937]
[-288.39810181 -31.94085693]
[-302.14654541 -37.93923569]
[-315.89498901 -43.93761826]
[-329.64340210 -49.93599701]
[-342.95446777 -41.96134186]
[-358.40771484 -43.36728668]
[-370.06106567 -53.61322021]
[-373.43356323 -68.75937653]
[-367.22839355 -82.98173523]
[-353.83160400 -90.81153107]
[-338.39453125 -89.23802948]
[-326.85302734 -78.86627960]
[-323.64501953 -63.68443298]
[-309.89660645 -57.68605042]
[-296.14816284 -51.68767166]
[-282.39971924 -45.68928909]
[-266.19702148 -56.69919586]
[-246.49118042 -55.63609695]
[-231.34596252 -42.75903702]
[-227.06539917 -23.19730186]
[-213.03504944 -17.89167976]
[-198.39378357 -20.62706947]
[-188.22245789 -8.50870895]
[-174.19212341 -3.20308781]
[-160.16177368 2.10253334]
[-146.13143921 7.40815449]
[-132.10110474 12.71377563]
[-118.07076263 18.01939583]
[-104.64215088 11.67842674]
[-90.33781433 16.85921288]
[-83.77787018 30.98737335]
[-67.54994965 22.47466660]
[-49.95999908 28.65871811]
[-42.37310791 46.04060745]
[-28.21485901 50.99479294]
[-14.05661011 55.94898224]
[4.65051460 50.99745560]
[17.51951599 66.53591156]
[31.79687691 71.13558197]
[46.07423782 75.73525238]
[60.35159683 80.33492279]
[66.84678650 76.58492279]
[53.85646057 69.08483124]
[53.85668182 54.08482742]
[66.84722137 46.58510971]
[79.83738708 54.08548737]
[79.83717346 69.08492279]
[86.33235931 65.33492279]
[89.48760986 50.67052841]
[92.64286041 36.00613785]
[95.79810333 21.34174347]
[98.95335388 6.67735147]
[102.10860443 -7.98704100]
[105.26384735 -22.65143394]
[108.41909790 -37.31582642]
[95.57095337 -45.35952377]
[86.25120544 -57.31435776]
[81.58525085 -71.73672485]
[82.13653564 -86.88505554]
[87.83847809 -100.93011475]
[98.00254822 -112.17588806]
[111.40138245 -119.26440430]
[126.41700745 -121.33967590]
[141.23622131 -118.15111542]
[154.06951904 -110.08375549]
[163.36721802 -98.11177063]
[168.00657654 -83.68082428]
[167.42738342 -68.53353882]
[161.69956970 -54.49901199]
[151.51478577 -43.27198792]
[138.10292053 -36.20817947]
[123.08348846 -34.16057587]
[119.92824554 -19.49618530]
[116.77299500 -4.83179283]
[113.61774445 9.83259964]
[110.46250153 24.49699211]
[107.30725098 39.16138458]
[104.15200043 53.82577896]
[100.99674988 68.49017334]
[114.12510681 75.74595642]
[124.86310577 65.27239990]
[135.60110474 54.79884720]
[146.33911133 44.32529831]
[157.07711792 33.85174561]
[158.71406555 17.89242363]
[172.28952026 9.34334946]
[187.38954163 14.76264191]
[192.43069458 29.99308205]
[183.54583740 43.35118103]
[167.55067444 44.58974838]
[156.81266785 55.06330109]
[146.07466125 65.53684998]
[135.33665466 76.01040649]
[124.59865570 86.48395538]
[127.85278320 93.24122620]
[138.69483948 82.87541962]
[151.90359497 89.98377991]
[149.22468567 104.74262238]
[134.36103821 106.75575256]
[137.61517334 113.51302338]
[152.49876404 111.64786530]
[167.38233948 109.78270721]
[182.26593018 107.91755676]
[197.14952087 106.05239868]
[212.03311157 104.18724060]
[216.75308228 96.07899475]
[224.55003357 91.11189270]
[233.61991882 90.28603363]
[241.93128967 93.66007233]
[247.68025208 100.36591339]
[262.62316895 99.05857086]
[272.58871460 86.79220581]
[288.31741333 85.24839020]
[300.47772217 95.34304810]
[301.85516357 111.08719635]
[291.63250732 123.14011383]
[275.87466431 124.35101318]
[263.93051147 114.00149536]
[248.98759460 115.30883026]
[233.13661194 128.54808044]
[213.89826965 119.07083130]
[199.01467896 120.93598938]
[184.13108826 122.80113983]
[169.24749756 124.66629791]
[154.36390686 126.53145599]
[139.48033142 128.39660645]
[135.41754150 142.83662415]
[131.35511780 157.27534485]
[143.08258057 166.62768555]
[158.57945251 165.05137634]
[170.33955383 174.70304871]
[171.74682617 189.48664856]
[183.47428894 198.83900452]
[195.20176697 208.19134521]
[206.92924500 217.54370117]
[222.54277039 220.09869385]
[227.66923523 234.08328247]
[239.39669800 243.43563843]
[251.12417603 252.78797913]
[262.85165405 262.14031982]
[274.57913208 271.49267578]
[286.30657959 280.84503174]
[302.34561157 280.48483276]
[312.51635742 292.89190674]
[309.01669312 308.54858398]
[294.53131104 315.44442749]
[280.17208862 308.28952026]
[276.95425415 292.57247925]
[265.22677612 283.22015381]
[253.49929810 273.86779785]
[241.77183533 264.51544189]
[230.04435730 255.16310120]
[218.31687927 245.81076050]
[203.54217529 243.92469788]
[197.57688904 229.27116394]
[185.84942627 219.91882324]
[174.12194824 210.56646729]
[162.39447021 201.21412659]
[147.66836548 203.13180542]
[135.64181519 193.81425476]
[133.73023987 178.35516357]
[122.00276184 169.00280762]
[107.78385162 173.78010559]
[104.08248901 188.31626892]
[100.38113403 202.85243225]
[96.67977142 217.38858032]
[98.07839966 222.36303711]
[97.50349426 226.92642212]
[95.43690491 230.40058899]
[92.55868530 232.39393616]
[88.31638336 246.78152466]
[84.07408905 261.16912842]
[79.83179474 275.55673218]
[75.58949280 289.94430542]
[71.34719849 304.33190918]
[74.86564636 319.75692749]
[63.84471130 329.77630615]
[76.26140594 342.24417114]
[80.61512756 359.20095825]
[75.79009247 375.93682861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[6 15]
[27 248]
[29 246]
[30 245]
[31 244]
[32 243]
[33 242]
[34 241]
[35 237]
[36 236]
[37 235]
[38 234]
[39 112]
[40 111]
[41 110]
[42 109]
[46 107]
[47 106]
[48 105]
[53 102]
[56 99]
[57 98]
[58 97]
[59 96]
[60 95]
[61 94]
[63 92]
[64 91]
[72 87]
[73 86]
[74 85]
[75 84]
[119 150]
[120 149]
[121 148]
[122 147]
[123 146]
[124 145]
[125 144]
[126 143]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
[171 197]
[172 196]
[173 195]
[174 194]
[175 193]
[176 192]
[181 190]
[182 189]
[199 233]
[200 232]
[203 229]
[204 228]
[205 227]
[206 226]
[208 224]
[209 223]
[210 222]
[211 221]
[212 220]
[213 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
