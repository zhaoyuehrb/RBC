%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUUGUCAGAGUCCUCUUGUUUGGCCUUCUAGGAAGGCUGUGGGACCCAGCUUUCUUCAACCAGUCCAGGUGGAGGCCUCUGCCUUGAACGUUUCCAAGUGAGGUAAAACCCGCAGGCCCAGAGGCCUCUCUACUUCCUGUGUGGGGUUCAGAAACCCUCCUCCCCUCCCAGCCUCAGGUGCCUGCUUCAGAAAAUGAAGUAGUAAGUCUGCUGGCCUCCGCCAUCUUAGUAAAGUAACAGUCCCAUGAAACAAA\
G\
) } def
/len { sequence length } bind def

/coor [
[-13.83874130 712.28051758]
[-15.28360844 727.32720947]
[-21.10091782 741.27893066]
[-30.77340126 752.89508057]
[-43.44098282 761.14270020]
[-57.97727585 765.28851318]
[-73.08972168 764.96380615]
[-87.43453217 760.19744873]
[-99.73616791 751.41333008]
[-108.90078735 739.39245605]
[-114.11347961 725.20373535]
[-114.91072083 710.10888672]
[-111.22163391 695.45001221]
[-103.37425232 682.53063965]
[-92.06634521 672.49957275]
[-78.30342102 666.24871826]
[-63.30925369 664.33392334]
[-60.75470734 649.55303955]
[-58.20015717 634.77215576]
[-55.64561081 619.99127197]
[-53.09106445 605.21038818]
[-50.53651428 590.42950439]
[-63.94709396 583.70965576]
[-74.25799561 594.60394287]
[-84.56889343 605.49822998]
[-94.87979889 616.39251709]
[-105.19069672 627.28680420]
[-115.50159454 638.18109131]
[-125.81250000 649.07537842]
[-132.30885315 664.73529053]
[-149.15516663 662.82794189]
[-151.98585510 646.11193848]
[-136.70677185 638.76446533]
[-126.39588165 627.87017822]
[-116.08497620 616.97589111]
[-105.77407837 606.08160400]
[-95.46317291 595.18731689]
[-85.15227509 584.29302979]
[-74.84137726 573.39874268]
[-66.84426880 560.70837402]
[-61.46589279 546.70574951]
[-56.08752060 532.70312500]
[-50.70914841 518.70056152]
[-45.33077621 504.69793701]
[-39.95240402 490.69531250]
[-34.57403183 476.69271851]
[-43.95077133 463.20230103]
[-43.42300797 446.61523438]
[-33.00075531 433.48754883]
[-16.64395523 429.12634277]
[-11.43714905 415.05902100]
[-6.23034382 400.99172974]
[-1.02353871 386.92440796]
[4.18326664 372.85711670]
[9.30399513 358.75823975]
[14.33845520 344.62832642]
[6.21997166 338.86941528]
[-0.43433371 331.45272827]
[-5.29274893 322.74096680]
[-8.11153507 313.16146851]
[-8.74714947 303.18545532]
[-7.16354990 293.30465698]
[-3.43420148 284.00717163]
[2.26131606 275.75335693]
[9.64595222 268.95294189]
[18.35865784 263.94482422]
[27.97203636 260.98010254]
[38.01331329 260.20947266]
[47.98758316 261.67568970]
[54.21122360 248.02774048]
[60.43486786 234.37979126]
[66.65850830 220.73185730]
[72.88214874 207.08392334]
[79.10579681 193.43597412]
[85.32943726 179.78804016]
[91.55307770 166.14009094]
[97.77672577 152.49215698]
[104.00036621 138.84422302]
[76.12508392 130.50765991]
[61.94772720 105.36656189]
[69.12194824 77.64916229]
[57.79662323 67.81365967]
[46.47130203 57.97815704]
[35.14598083 48.14265442]
[23.82066154 38.30715179]
[12.49534130 28.47164917]
[6.13372421 26.85192108]
[2.12790155 22.87241173]
[1.01717734 18.25462151]
[-10.06432247 8.14520168]
[-25.23531151 11.40414715]
[-39.41079712 5.09263420]
[-47.14001846 -8.36243057]
[-45.45093155 -23.78730011]
[-34.99302292 -35.25079727]
[-19.78757477 -38.34497452]
[-5.68138933 -31.88005638]
[1.90141571 -18.34193611]
[0.04509701 -2.93629789]
[11.12659645 7.17312145]
[22.33084488 17.14632797]
[33.65616608 26.98183060]
[44.98148346 36.81733322]
[56.30680466 46.65283585]
[67.63212585 56.48833847]
[78.95745087 66.32384491]
[86.34788513 65.04656982]
[76.74507141 53.52328491]
[81.92303467 39.44533539]
[96.70386505 36.89051437]
[106.30688477 48.41361618]
[101.12876129 62.49201965]
[108.51919556 61.21474457]
[115.88648224 48.14863968]
[123.25376892 35.08253479]
[130.62104797 22.01642609]
[137.98832703 8.95032024]
[145.35562134 -4.11578608]
[152.64289856 -17.22667694]
[159.84991455 -30.38186264]
[159.69474792 -46.20230865]
[172.59550476 -53.64676285]
[179.80250549 -66.80194855]
[187.00952148 -79.95713043]
[194.21653748 -93.11231995]
[201.42355347 -106.26750946]
[188.39872742 -98.82749176]
[173.44081116 -97.70463562]
[159.45120239 -103.11674500]
[149.14347839 -114.01402283]
[144.51702881 -128.28273010]
[146.46923828 -143.15515137]
[154.62144470 -155.74647522]
[167.39234924 -163.61436462]
[182.30479431 -165.23268127]
[196.46620178 -160.28752136]
[207.12966919 -149.73808289]
[212.22680664 -135.63067627]
[210.76988220 -120.70461273]
[219.82231140 -132.66511536]
[221.98117065 -148.33833313]
[235.83148193 -153.81721497]
[237.99035645 -169.49043274]
[251.84066772 -174.96931458]
[260.89309692 -186.92982483]
[269.94552612 -198.89031982]
[278.99795532 -210.85083008]
[274.65100098 -225.62953186]
[279.77981567 -239.96650696]
[292.22015381 -248.43420410]
[307.08325195 -247.95851135]
[316.13568115 -259.91900635]
[315.36953735 -275.94375610]
[327.51510620 -286.42538452]
[343.25540161 -283.32327271]
[350.51577759 -269.01708984]
[343.72671509 -254.48133850]
[328.09619141 -250.86659241]
[319.04376221 -238.90608215]
[323.53820801 -224.73081970]
[318.76742554 -210.45834351]
[306.36224365 -201.62857056]
[290.95843506 -201.79840088]
[281.90600586 -189.83789062]
[272.85360718 -177.87739563]
[263.80117798 -165.91690063]
[262.28979492 -151.09916687]
[247.79199219 -144.76478577]
[246.28060913 -129.94706726]
[231.78280640 -123.61268616]
[222.73037720 -111.65219116]
[214.57875061 -99.06049347]
[207.37173462 -85.90530396]
[200.16471863 -72.75012207]
[192.95770264 -59.59493256]
[185.75068665 -46.43974686]
[186.42135620 -31.56024742]
[173.00509644 -23.17484856]
[165.79808044 -10.01966190]
[165.34191895 -2.66505194]
[158.42172241 3.25149727]
[151.05444336 16.31760406]
[143.68714905 29.38371086]
[136.31987000 42.44981766]
[128.95259094 55.51592255]
[121.58530426 68.58203125]
[132.94255066 79.91228485]
[138.73844910 95.07972717]
[153.73815918 95.17140961]
[168.73788452 95.26309204]
[181.11572266 85.05678558]
[196.78239441 88.51148224]
[203.71977234 102.97704315]
[196.60609436 117.35671997]
[180.89836121 120.61965942]
[168.64620972 110.26280975]
[153.64648438 110.17112732]
[138.64675903 110.07945251]
[136.18260193 124.87566376]
[150.40243530 129.65020752]
[164.62228394 134.42474365]
[178.84211731 139.19927979]
[193.06195068 143.97383118]
[208.00936890 138.14678955]
[221.81179810 146.32434082]
[223.88121033 162.23336792]
[212.63011169 173.66983032]
[196.68939209 171.86064148]
[188.28741455 158.19366455]
[174.06758118 153.41912842]
[159.84773254 148.64457703]
[145.62789917 143.87004089]
[131.40806580 139.09550476]
[117.64830780 145.06785583]
[111.42466736 158.71580505]
[105.20101929 172.36373901]
[98.97737885 186.01167297]
[92.75373840 199.65962219]
[86.53009033 213.30755615]
[80.30644989 226.95550537]
[74.08280945 240.60343933]
[67.85916138 254.25137329]
[61.63552094 267.89932251]
[75.47350311 282.89486694]
[81.32633972 302.39346313]
[78.04921722 322.43865967]
[66.34554291 338.98184204]
[48.61646652 348.69992065]
[28.46836090 349.66278076]
[23.43390083 363.79269409]
[23.50435257 372.89706421]
[18.25057602 378.06390381]
[13.04376984 392.13122559]
[7.83696461 406.19854736]
[2.63015938 420.26583862]
[-2.57664585 434.33316040]
[5.89322758 445.18661499]
[7.88589144 458.69958496]
[2.98755455 471.33419800]
[-7.42546797 479.83581543]
[-20.57142258 482.07107544]
[-25.94979477 496.07369995]
[-31.32816696 510.07629395]
[-36.70653915 524.07891846]
[-42.08491135 538.08154297]
[-47.46328354 552.08410645]
[-52.84165573 566.08673096]
[-40.27920532 573.98205566]
[-35.75563812 592.98406982]
[-38.31018829 607.76495361]
[-40.86473465 622.54583740]
[-43.41928482 637.32672119]
[-45.97383118 652.10754395]
[-48.52837753 666.88842773]
[-35.04663849 673.72467041]
[-24.18002701 684.23223877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 254]
[18 253]
[19 252]
[20 251]
[21 250]
[22 249]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[40 247]
[41 246]
[42 245]
[43 244]
[44 243]
[45 242]
[46 241]
[50 236]
[51 235]
[52 234]
[53 233]
[54 232]
[55 230]
[56 229]
[69 223]
[70 222]
[71 221]
[72 220]
[73 219]
[74 218]
[75 217]
[76 216]
[77 215]
[78 214]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[86 101]
[89 100]
[90 99]
[113 186]
[114 185]
[115 184]
[116 183]
[117 182]
[118 181]
[119 179]
[120 178]
[122 176]
[123 175]
[124 174]
[125 173]
[126 172]
[139 171]
[140 170]
[142 168]
[144 166]
[145 165]
[146 164]
[147 163]
[151 159]
[152 158]
[188 198]
[189 197]
[190 196]
[199 213]
[200 212]
[201 211]
[202 210]
[203 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
