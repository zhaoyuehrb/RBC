%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGGCGGGGGCGGCCCCAGCGGAUGAAUGAAGCGGCGCGUGGCUGCCGGGGAGGCCAGAGCGUGGAGCGCUGCGCGGCGCGGCGGCCGGGCCCUCGAGACGGGGACGGACACACCAGCCCCUCGGAUACCACUUGGCCACUCCCGCUGAGGCCACUCCCACUGCGUGGCUGAAGCCUCGAGGUCACCAGGCGGAGGCGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[397.35424805 741.46466064]
[396.89682007 726.47161865]
[396.43939209 711.47857666]
[395.98193359 696.48559570]
[395.52450562 681.49255371]
[387.40264893 669.00714111]
[394.71551514 654.97741699]
[390.32022095 640.63586426]
[382.29827881 627.96112061]
[374.27630615 615.28643799]
[366.25436401 602.61169434]
[358.23242188 589.93695068]
[344.88806152 583.32055664]
[344.04565430 567.52178955]
[336.02371216 554.84710693]
[328.00177002 542.17236328]
[319.97982788 529.49761963]
[306.63543701 522.88122559]
[305.79302979 507.08245850]
[297.77108765 494.40774536]
[289.74914551 481.73303223]
[281.72720337 469.05831909]
[273.70526123 456.38360596]
[265.68331909 443.70889282]
[261.32003784 458.06024170]
[248.15388489 465.24719238]
[233.72290039 461.15493774]
[226.28932190 448.12643433]
[230.10911560 433.62094116]
[242.99533081 425.94335938]
[257.56945801 429.48883057]
[250.73924255 416.13412476]
[244.89239502 411.60864258]
[243.90843201 402.52328491]
[231.34501648 394.52267456]
[232.19076538 378.72409058]
[225.56498718 365.26678467]
[218.93920898 351.80947876]
[202.80184937 347.08035278]
[194.92097473 331.84408569]
[200.60569763 315.30209351]
[193.77546692 301.94741821]
[186.94523621 288.59271240]
[180.11500549 275.23800659]
[165.39633179 273.11700439]
[154.62147522 262.61145020]
[152.06889343 247.60018921]
[158.92407227 233.80480957]
[152.09384155 220.45011902]
[145.26361084 207.09541321]
[138.43338013 193.74072266]
[131.60314941 180.38603210]
[124.77291870 167.03132629]
[118.92607117 162.50582886]
[117.94210815 153.42048645]
[111.31632996 139.96318054]
[104.69055176 126.50588226]
[91.80970764 130.43058777]
[76.71062469 127.59506989]
[63.03016663 117.03343964]
[54.69998169 99.71382141]
[54.94943619 78.54935455]
[44.42402267 67.86218262]
[29.22786140 63.45908356]
[25.80986214 48.96195984]
[15.28444481 38.27478790]
[4.75902843 27.58761978]
[-8.11172390 26.70833397]
[-16.65850449 17.58695793]
[-16.69608688 5.48799086]
[-27.05730247 -5.35844755]
[-37.41851807 -16.20488548]
[-47.77973175 -27.05132484]
[-58.14094543 -37.89776230]
[-68.50215912 -48.74420166]
[-78.86337280 -59.59064102]
[-94.17630005 -66.86735535]
[-91.42300415 -83.59624481]
[-74.58569336 -85.58156586]
[-68.01693726 -69.95185852]
[-57.65572357 -59.10541534]
[-47.29450607 -48.25897980]
[-36.93329239 -37.41254044]
[-26.57207870 -26.56610107]
[-16.21086311 -15.71966267]
[-5.84964848 -4.87322378]
[11.23294353 -0.86160511]
[15.44619846 17.06220245]
[25.97161484 27.74937248]
[36.49703217 38.43654251]
[50.94034195 42.07522583]
[55.11119080 57.33676529]
[65.63660431 68.02393341]
[79.24194336 61.70770645]
[77.87132263 46.77045822]
[76.50069427 31.83320999]
[75.13006592 16.89596176]
[73.75944519 1.95871294]
[66.29109955 -13.26167297]
[78.84922028 -24.65157509]
[93.27043152 -15.73726749]
[88.69669342 0.58808696]
[90.06731415 15.52533531]
[91.43794250 30.46258354]
[92.80857086 45.39982986]
[94.17919159 60.33707809]
[101.63649750 61.13620758]
[116.55110931 62.73446655]
[124.00841522 63.53359604]
[128.51293945 49.22592926]
[122.40401459 34.39149094]
[130.31884766 20.43674278]
[146.18585205 18.06657600]
[157.83322144 29.09918022]
[156.32609558 45.07128525]
[142.82060242 53.73045731]
[138.31607056 68.03812408]
[138.31886292 102.60375214]
[118.14785004 119.88009644]
[124.77363586 133.33740234]
[131.39941406 146.79470825]
[138.12760925 160.20109558]
[144.95783997 173.55580139]
[151.78808594 186.91049194]
[158.61831665 200.26518250]
[165.44854736 213.61988831]
[172.27877808 226.97457886]
[187.47659302 229.49099731]
[198.15374756 240.34695435]
[200.36502075 255.23233032]
[193.46969604 268.40777588]
[200.29992676 281.76248169]
[207.13015747 295.11718750]
[213.96040344 308.47186279]
[227.17044067 311.11254883]
[236.31326294 320.73965454]
[238.21258545 333.68319702]
[232.39649963 345.18371582]
[239.02229309 358.64102173]
[245.64807129 372.09832764]
[258.68539429 381.06149292]
[257.36572266 395.89752197]
[264.09393311 409.30389404]
[270.92416382 422.65859985]
[278.35803223 435.68695068]
[286.37997437 448.36166382]
[294.40191650 461.03637695]
[302.42385864 473.71109009]
[310.44580078 486.38580322]
[318.46774292 499.06051636]
[332.38589478 506.58352661]
[332.65454102 521.47570801]
[340.67648315 534.15039062]
[348.69842529 546.82513428]
[356.72036743 559.49987793]
[370.63851929 567.02282715]
[370.90713501 581.91503906]
[378.92907715 594.58972168]
[386.95104980 607.26446533]
[394.97299194 619.93920898]
[402.99493408 632.61389160]
[420.64474487 622.05224609]
[447.20935059 631.09222412]
[458.21252441 641.28680420]
[469.21569824 651.48138428]
[480.21890259 661.67602539]
[495.60052490 665.37951660]
[499.67797852 679.70513916]
[510.68118286 689.89971924]
[521.68438721 700.09436035]
[530.10980225 703.63317871]
[532.77612305 710.52929688]
[543.62255859 720.89050293]
[549.95123291 722.82537842]
[553.77600098 727.03546143]
[554.63568115 731.73693848]
[565.16107178 742.42413330]
[575.68652344 753.11126709]
[591.62945557 756.95239258]
[596.01428223 772.75445557]
[584.33026123 784.26165771]
[568.59686279 779.63635254]
[564.99932861 763.63671875]
[554.47393799 752.94952393]
[543.94848633 742.26239014]
[533.26129150 731.73693848]
[522.41485596 721.37573242]
[511.48974609 711.09753418]
[500.48657227 700.90289307]
[489.48339844 690.70831299]
[474.88876343 687.73400879]
[470.02429199 672.67919922]
[459.02111816 662.48461914]
[448.01791382 652.28997803]
[437.01473999 642.09539795]
[430.18820190 645.20153809]
[409.70852661 654.52001953]
[417.86309814 668.07781982]
[410.51751709 681.03509521]
[410.97494507 696.02813721]
[411.43240356 711.02111816]
[411.88983154 726.01416016]
[412.34729004 741.00720215]
[418.87384033 756.65454102]
[405.64471436 767.25769043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[5 199]
[7 197]
[8 161]
[9 160]
[10 159]
[11 158]
[12 157]
[14 155]
[15 154]
[16 153]
[17 152]
[19 150]
[20 149]
[21 148]
[22 147]
[23 146]
[24 145]
[31 144]
[32 143]
[34 142]
[36 140]
[37 139]
[38 138]
[41 134]
[42 133]
[43 132]
[44 131]
[48 127]
[49 126]
[50 125]
[51 124]
[52 123]
[53 122]
[55 121]
[56 120]
[57 119]
[62 93]
[63 92]
[65 90]
[66 89]
[67 88]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[109 117]
[110 116]
[163 195]
[164 194]
[165 193]
[166 192]
[168 190]
[169 189]
[170 188]
[172 187]
[173 186]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
