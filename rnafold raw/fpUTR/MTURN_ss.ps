%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGAGCCGCGGGCGCGGCGCCGCGCUGUCCCCGGCCGCCGCCCGCCCCACUCCGCACCGCAUGUAAACAGUCCCAGCCGGCCCAGCCCGGCCCCGGAGGAGCCCGCGCAGGCCGAGCCGAGCGCCGCGCUGCCCGCCCGGGAGGAGGGCGCCUAGGAGCGGGAGGGCGGGCGGCGGCGGGAGGCGGGCGCGGGGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[-17.75262070 752.13647461]
[-12.74501801 766.27593994]
[-16.88912201 780.69213867]
[-28.64092445 790.01385498]
[-43.62194824 790.76812744]
[-56.25057983 782.67382812]
[-61.82175446 768.74530029]
[-66.85450745 782.87585449]
[-71.88725281 797.00634766]
[-71.50569153 813.95599365]
[-87.68731689 819.01477051]
[-97.02792358 804.86596680]
[-86.01776886 791.97357178]
[-80.98501587 777.84307861]
[-75.95227051 763.71258545]
[-71.80773926 749.29650879]
[-68.56747437 734.65063477]
[-65.32720947 720.00482178]
[-62.08694077 705.35894775]
[-58.84667206 690.71313477]
[-63.65197372 676.61499023]
[-53.11627197 664.81201172]
[-49.87600327 650.16619873]
[-46.63573837 635.52032471]
[-43.39546967 620.87451172]
[-40.15520096 606.22863770]
[-36.91493607 591.58282471]
[-33.67466736 576.93695068]
[-41.87455750 564.55560303]
[-38.79710007 549.65649414]
[-25.75481987 541.13964844]
[-22.51455307 526.49383545]
[-19.38827133 511.82321167]
[-16.37616539 497.12875366]
[-21.40013695 483.10702515]
[-11.04926682 471.14166260]
[-8.03716087 456.44720459]
[-5.02505445 441.75274658]
[-2.01294851 427.05828857]
[0.99915761 412.36380005]
[4.01126385 397.66934204]
[7.02336979 382.97488403]
[10.03547573 368.28042603]
[13.04758167 353.58596802]
[16.05968857 338.89151001]
[19.07179451 324.19705200]
[22.08390045 309.50256348]
[25.09600639 294.80810547]
[28.10811234 280.11364746]
[21.73186493 272.11755371]
[20.79362869 261.71301270]
[25.84428787 252.31813049]
[35.42707062 247.15309143]
[38.89471817 232.55941772]
[42.36236191 217.96574402]
[45.83000565 203.37205505]
[49.29764938 188.77838135]
[38.99052048 199.67622375]
[25.47543716 206.18334961]
[10.52855396 207.44456482]
[-3.88581467 203.29414368]
[-15.87333488 194.27752686]
[-23.85861015 181.57968140]
[-26.79221725 166.86933899]
[-24.28862381 152.07975769]
[-16.67684937 139.15455627]
[-4.95723104 129.79235840]
[9.33003902 125.22356415]
[24.30733299 126.04859161]
[38.00633621 132.15901184]
[48.62673187 142.75180054]
[54.77278900 156.43486023]
[55.63708115 171.40765381]
[62.38451004 158.01092529]
[69.13193512 144.61419678]
[67.94672394 129.76683044]
[81.06472778 120.92214203]
[87.81215668 107.52541351]
[87.20706940 93.55668640]
[98.79111481 85.72715759]
[105.53854370 72.33043671]
[104.83595276 56.52483368]
[117.47134399 48.63837433]
[124.21876526 35.24164963]
[130.86181641 21.79286003]
[125.90943909 7.02425241]
[132.73248291 -6.57356739]
[146.84262085 -11.20388222]
[153.38088989 -24.70392227]
[159.91914368 -38.20396042]
[166.45741272 -51.70400238]
[172.99568176 -65.20404053]
[168.83540344 -75.26383209]
[170.86070251 -85.73622131]
[178.16481018 -93.20517731]
[188.16011047 -95.37034607]
[195.11505127 -108.66051483]
[202.07000732 -121.95068359]
[203.27804565 -131.01235962]
[209.23786926 -135.39221191]
[209.02717590 -151.21202087]
[221.90171814 -158.70170593]
[229.06251526 -171.88211060]
[236.22331238 -185.06251526]
[243.28140259 -198.29820251]
[242.82469177 -214.11280823]
[255.58120728 -221.80181885]
[262.53616333 -235.09197998]
[269.49111938 -248.38215637]
[276.44607544 -261.67233276]
[275.25296021 -280.04443359]
[290.42248535 -288.86172485]
[297.16989136 -302.25845337]
[303.91732788 -315.65515137]
[305.64215088 -332.52114868]
[322.32647705 -335.53271484]
[329.83901978 -320.33407593]
[317.31405640 -308.90774536]
[310.56661987 -295.51101685]
[303.81918335 -282.11428833]
[307.31192017 -270.52819824]
[301.79425049 -259.30969238]
[289.73623657 -254.71737671]
[282.78128052 -241.42720032]
[275.82632446 -228.13702393]
[268.87136841 -214.84686279]
[269.82553101 -199.98284912]
[256.57156372 -191.34324646]
[256.25531006 -183.95388794]
[249.40371704 -177.90171814]
[242.24290466 -164.72131348]
[235.08210754 -151.54090881]
[235.80500793 -136.66384888]
[222.41827393 -128.23141479]
[215.36018372 -114.99573517]
[208.40522766 -101.70556641]
[201.45027161 -88.41539001]
[203.67022705 -69.21130371]
[186.49572754 -58.66577530]
[179.95745850 -45.16573715]
[173.41918945 -31.66569519]
[166.88092041 -18.16565514]
[160.34265137 -4.66561604]
[165.45816040 9.27595043]
[159.01972961 23.06005096]
[144.36184692 28.33112717]
[144.27555847 35.72674179]
[137.61549377 41.98907471]
[130.86807251 55.38579941]
[132.05328369 70.23317719]
[118.93527222 79.07785797]
[112.18784332 92.47458649]
[112.79293060 106.44331360]
[101.20888519 114.27284241]
[94.46145630 127.66956329]
[95.16404724 143.47515869]
[82.52865601 151.36161804]
[75.78123474 164.75834656]
[69.03380585 178.15507507]
[63.89133072 192.24603271]
[60.42368317 206.83970642]
[56.95603943 221.43338013]
[53.48839569 236.02705383]
[50.02074814 250.62074280]
[56.66232681 269.64865112]
[42.80257416 283.12576294]
[39.79047012 297.82022095]
[36.77836227 312.51467896]
[33.76625443 327.20913696]
[30.75415039 341.90359497]
[27.74204445 356.59808350]
[24.72993851 371.29254150]
[21.71783257 385.98699951]
[18.70572662 400.68145752]
[15.69361973 415.37591553]
[12.68151379 430.07037354]
[9.66940784 444.76483154]
[6.65730143 459.45928955]
[3.64519525 474.15377808]
[8.45372105 489.22653198]
[-1.68170309 500.14086914]
[-4.69380903 514.83532715]
[-3.35106301 523.87805176]
[-7.86871099 529.73406982]
[-11.10897827 544.37994385]
[-2.87660551 557.60363770]
[-6.37133312 572.41040039]
[-19.02882767 580.17724609]
[-22.26909447 594.82305908]
[-25.50936127 609.46893311]
[-28.74962807 624.11474609]
[-31.98989677 638.76062012]
[-35.23016357 653.40643311]
[-38.47043228 668.05230713]
[-33.89689636 683.19799805]
[-44.20083237 693.95336914]
[-47.44109726 708.59924316]
[-50.68136597 723.24505615]
[-53.92163467 737.89093018]
[-57.16189957 752.53674316]
[-45.04542542 743.69421387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 15]
[8 14]
[9 13]
[16 200]
[17 199]
[18 198]
[19 197]
[20 196]
[22 194]
[23 193]
[24 192]
[25 191]
[26 190]
[27 189]
[28 188]
[31 185]
[32 184]
[33 182]
[34 181]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
[47 168]
[48 167]
[49 166]
[53 164]
[54 163]
[55 162]
[56 161]
[57 160]
[73 159]
[74 158]
[75 157]
[77 155]
[78 154]
[80 152]
[81 151]
[83 149]
[84 148]
[85 146]
[88 143]
[89 142]
[90 141]
[91 140]
[92 139]
[96 137]
[97 136]
[98 135]
[100 134]
[102 132]
[103 131]
[104 130]
[105 128]
[107 126]
[108 125]
[109 124]
[110 123]
[112 120]
[113 119]
[114 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
