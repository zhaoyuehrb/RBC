%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCCCAAGAUGGCGAUGGAGGGGCGGGUGAGGCGGCAGCGGCCCUGGCCCCCGCGCCGGCCCCAGCUCGGGCCCGGGCCCCCGAGGCCGCGCCCCCGCCCGCGGCGCCGCGCCUCCCCGGGCCACUGACGCCCGGCGCGCUCUCCCCCCGCGGCGGCGGCCGAAGCACGGGGAGGCGGCGGCGGCGGCGGCGGCCCGAGCCCAGCCCC\
) } def
/len { sequence length } bind def

/coor [
[53.62644577 319.23965454]
[37.08171844 327.07467651]
[32.89470673 341.47845459]
[28.70769501 355.88226318]
[24.52068329 370.28604126]
[20.33367157 384.68981934]
[28.16407585 398.41790771]
[23.91325760 413.63980103]
[10.10315228 421.32461548]
[-5.07294989 416.91311646]
[-12.61133671 403.02252197]
[-8.03961658 387.89392090]
[5.92988968 380.50280762]
[10.11690044 366.09902954]
[14.30391216 351.69525146]
[18.49092293 337.29144287]
[22.67793465 322.88766479]
[15.14656067 314.31768799]
[12.66167259 303.05975342]
[15.95355892 291.88580322]
[24.31537628 283.60443115]
[35.75123596 280.35516357]
[40.36524582 266.08242798]
[44.97925568 251.80970764]
[49.59326553 237.53697205]
[54.20727539 223.26423645]
[58.71490097 208.95755005]
[63.11590195 194.61770630]
[67.51689911 180.27786255]
[71.91790009 165.93801880]
[64.73429871 152.94064331]
[68.99326324 138.33531189]
[82.67479706 130.88861084]
[87.07579803 116.54876709]
[81.06253052 109.07023621]
[79.00463867 99.69724274]
[65.07284546 94.13801575]
[51.14104462 88.57878876]
[42.01072311 88.30485535]
[37.04420853 82.83169556]
[23.19672394 77.06565857]
[9.34923840 71.29962158]
[-4.49824762 65.53359222]
[-18.34573364 59.76755905]
[-32.19321823 54.00152588]
[-46.08324432 48.33873749]
[-61.76821899 50.41048813]
[-70.72158051 38.50726700]
[-84.65338135 32.94804382]
[-99.03135681 38.94065475]
[-113.08099365 33.10434341]
[-118.70542145 19.36020470]
[-132.63722229 13.80097866]
[-146.56901550 8.24175262]
[-160.50082397 2.68252707]
[-164.77313232 3.45793176]
[-168.67732239 2.89055395]
[-171.83642578 1.26101065]
[-174.00340271 -1.05649340]
[-175.08030701 -3.64462709]
[-188.65650940 -10.02323246]
[-202.23271179 -16.40183640]
[-215.80892944 -22.78044319]
[-229.38513184 -29.15904808]
[-244.16497803 -23.56159019]
[-258.53939819 -30.13060379]
[-263.98028564 -44.96880722]
[-257.25964355 -59.27296066]
[-242.36474609 -64.55666351]
[-228.13244629 -57.68518448]
[-223.00653076 -42.73525620]
[-209.43031311 -36.35664749]
[-195.85411072 -29.97804451]
[-182.27790833 -23.59943962]
[-168.70169067 -17.22083473]
[-154.94158936 -11.24927139]
[-141.00979614 -5.69004536]
[-127.07799530 -0.13081963]
[-113.14619446 5.42840624]
[-99.60478210 -0.66795635]
[-85.39676666 4.77142525]
[-79.09415436 19.01624298]
[-65.16235352 24.57546997]
[-50.47387314 22.10608673]
[-40.52402115 34.40694046]
[-33.14651489 33.96627426]
[-26.42718506 40.15403748]
[-12.57969952 45.92007446]
[1.26778591 51.68610764]
[15.11527157 57.45214081]
[28.96275711 63.21817398]
[42.81024170 68.98420715]
[56.70027161 74.64699554]
[70.63206482 80.20622253]
[84.56386566 85.76544189]
[100.15631866 79.00303650]
[115.64635468 85.99684143]
[129.65937805 80.64566040]
[143.67239380 75.29447174]
[157.68542480 69.94328308]
[171.69844055 64.59210205]
[178.21244812 50.44269562]
[192.49986267 45.21545410]
[205.94902039 51.51275253]
[219.96203613 46.16156769]
[230.09393311 34.01021576]
[244.74401855 36.69801331]
[258.75704956 31.34682846]
[272.77008057 25.99564362]
[286.78308105 20.64445686]
[300.79611206 15.29327106]
[314.80914307 9.94208527]
[328.78192139 4.48672819]
[342.71374512 -1.07249749]
[356.64553833 -6.63172340]
[370.57733154 -12.19094944]
[384.50912476 -17.75017548]
[398.44091797 -23.30940056]
[412.37271118 -28.86862755]
[426.30453491 -34.42785263]
[440.23632812 -39.98707962]
[450.18618774 -52.28792953]
[464.87466431 -49.81855011]
[478.80645752 -55.37777328]
[479.07019043 -70.55032349]
[485.10650635 -84.42857361]
[495.96701050 -94.91013336]
[509.97509766 -100.42017365]
[524.98480225 -100.14804077]
[538.70941162 -94.16632843]
[549.06994629 -83.41510773]
[563.00170898 -88.97433472]
[576.93353271 -94.53356171]
[590.86529541 -100.09278870]
[597.67602539 -106.17982483]
[605.04614258 -105.62937164]
[615.17803955 -117.78071594]
[629.82812500 -115.09291840]
[643.84118652 -120.44410706]
[657.85418701 -125.79529572]
[671.86718750 -131.14648438]
[674.92840576 -146.26708984]
[685.69482422 -157.31640625]
[700.73095703 -160.76866150]
[715.23883057 -155.52223206]
[724.58905029 -143.25123596]
[725.79797363 -127.87131500]
[718.47979736 -114.29013824]
[704.96984863 -106.84140778]
[689.57897949 -107.90199280]
[677.21838379 -117.13345337]
[663.20538330 -111.78227234]
[649.19232178 -106.43108368]
[635.17932129 -101.07989502]
[626.04974365 -89.31130219]
[610.39733887 -91.61634827]
[596.42456055 -86.16098785]
[582.49273682 -80.60176086]
[568.56097412 -75.04253387]
[554.62915039 -69.48331451]
[554.51641846 -54.55292130]
[548.68017578 -40.76582718]
[537.98114014 -30.23511124]
[524.02789307 -24.58768082]
[508.93490601 -24.71298027]
[495.00241089 -30.62305641]
[484.36569214 -41.44597626]
[470.43386841 -35.88674927]
[461.48052979 -23.98353195]
[445.79553223 -26.05528069]
[431.86373901 -20.49605370]
[417.93194580 -14.93682861]
[404.00015259 -9.37760258]
[390.06835938 -3.81837678]
[376.13656616 1.74084914]
[362.20474243 7.30007505]
[348.27294922 12.85930061]
[334.34115601 18.41852760]
[329.29370117 23.81714249]
[320.16030884 23.95510864]
[306.14730835 29.30629349]
[292.13427734 34.65747833]
[278.12124634 40.00866699]
[264.10821533 45.35985184]
[250.09519958 50.71103668]
[240.96562195 62.47963715]
[225.31323242 60.17459106]
[211.30020142 65.52577972]
[205.47177124 79.18465424]
[191.33679199 84.81113434]
[177.04963684 78.60512543]
[163.03660583 83.95630646]
[149.02359009 89.30749512]
[135.01055908 94.65868378]
[120.99754333 100.00986481]
[115.33647919 114.34187317]
[101.41564178 120.94976807]
[97.01464844 135.28961182]
[104.16326904 149.12922668]
[99.49575806 163.60917664]
[86.25774384 170.33900452]
[81.85674286 184.67886353]
[77.45574951 199.01870728]
[73.05474854 213.35855103]
[73.52857971 222.48068237]
[68.48001099 227.87825012]
[63.86599731 242.15098572]
[59.25198746 256.42370605]
[54.63798141 270.69644165]
[50.02397156 284.96917725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[4 15]
[5 14]
[6 13]
[22 210]
[23 209]
[24 208]
[25 207]
[26 206]
[27 204]
[28 203]
[29 202]
[30 201]
[33 198]
[34 197]
[36 95]
[37 94]
[38 93]
[40 92]
[41 91]
[42 90]
[43 89]
[44 88]
[45 87]
[46 85]
[48 83]
[49 82]
[52 79]
[53 78]
[54 77]
[55 76]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[97 195]
[98 194]
[99 193]
[100 192]
[101 191]
[104 188]
[105 187]
[107 185]
[108 184]
[109 183]
[110 182]
[111 181]
[112 180]
[113 178]
[114 177]
[115 176]
[116 175]
[117 174]
[118 173]
[119 172]
[120 171]
[121 170]
[123 168]
[124 167]
[131 160]
[132 159]
[133 158]
[134 157]
[136 156]
[138 154]
[139 153]
[140 152]
[141 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
