%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGUGUGUGUGUGUGUGGAUGUGUGUGGGGUGUGGGUGUCCCUUACGCCCUUCCUCCUCUCCCUCCUCCUCCUGCUCCCCCCUCCUUUCCUUCUCCUCCUCCCCCCUCUCCUCUCCCUCCUCCUGGUCCUCAUCGCCCCUCUCCUCCUCUUCCUCCCCUCUCUCUUCCUCUCCCUGAAUUUUCUCCUCUCCUCUCAGGUCAGUCC\
) } def
/len { sequence length } bind def

/coor [
[210.97602844 235.84295654]
[214.37260437 213.57202148]
[222.93122864 192.72564697]
[210.45918274 184.39208984]
[197.98713684 176.05854797]
[185.51509094 167.72499084]
[173.04304504 159.39143372]
[165.73332214 158.28884888]
[160.44686890 150.83663940]
[148.10211182 142.31567383]
[135.75735474 133.79470825]
[120.88773346 132.93246460]
[113.92570496 118.72539520]
[105.08779907 123.65522766]
[94.63625336 124.47560883]
[84.45360565 120.73607635]
[76.49947357 112.83473206]
[72.43497467 101.99614716]
[73.28243256 90.08653259]
[58.77418137 93.89582825]
[44.26593018 97.70511627]
[32.88308334 108.69335175]
[18.60814476 104.44183350]
[11.10044479 109.64914703]
[3.85198617 108.19733429]
[-7.69552088 119.01239777]
[-21.90461922 114.54576111]
[-33.45212555 125.36083221]
[-47.66122437 120.89419556]
[-62.22534943 124.48393250]
[-76.78947449 128.07366943]
[-91.35360718 131.66340637]
[-97.28419495 145.88079834]
[-110.29716492 153.78750610]
[-125.29329681 152.53047180]
[-136.53909302 142.80062866]
[-151.10321045 146.39036560]
[-165.66734314 149.98008728]
[-180.23147583 153.56982422]
[-194.79559326 157.15956116]
[-209.35972595 160.74929810]
[-218.85650635 173.67951965]
[-234.89198303 174.17250061]
[-245.16511536 161.85006714]
[-241.79522705 146.16493225]
[-227.36741638 139.14939880]
[-212.94946289 146.18516541]
[-198.38533020 142.59542847]
[-183.82121277 139.00570679]
[-169.25708008 135.41596985]
[-154.69294739 131.82623291]
[-140.12882996 128.23649597]
[-134.69285583 114.39495850]
[-121.99861145 106.31286621]
[-106.80177307 107.26647949]
[-94.94334412 117.09927368]
[-80.37921143 113.50953674]
[-65.81508636 109.91980743]
[-51.25095749 106.33007050]
[-40.74517441 95.77176666]
[-25.49435425 99.98163605]
[-14.98857021 89.42333221]
[0.26225126 93.63320160]
[14.79885387 89.93358612]
[25.14397430 79.21781158]
[40.45663834 83.19686890]
[54.96488953 79.38758087]
[69.47313690 75.57828522]
[54.91468048 71.96562958]
[40.35622025 68.35297394]
[25.79776382 64.74031067]
[11.13198853 67.88912964]
[-3.80460811 69.26683807]
[-18.79891968 68.85377502]
[-33.63701630 66.65585327]
[-48.10719681 62.70441055]
[-62.00300980 57.05583191]
[-75.12619781 49.79071426]
[-87.28952026 41.01270294]
[-98.31945038 30.84703827]
[-108.05860901 19.43876457]
[-116.36804962 6.95064163]
[-123.12921906 -6.43915415]
[-128.24565125 -20.53958511]
[-131.64433289 -35.14947510]
[-133.27679443 -50.06037903]
[-133.11975098 -65.05955505]
[-131.17541504 -79.93300629]
[-127.47154999 -94.46852875]
[-122.06098938 -108.45873260]
[-115.02092743 -121.70401764]
[-106.45181274 -134.01541138]
[-96.47590637 -145.21725464]
[-85.23553467 -155.14971924]
[-72.89106750 -163.67111206]
[-59.61863327 -170.65985107]
[-45.60758972 -176.01622009]
[-31.05784225 -179.66380310]
[-16.17697525 -181.55055237]
[-1.17730165 -181.64953613]
[13.72717190 -179.95936584]
[28.32379723 -176.50415039]
[42.40431976 -171.33319092]
[55.76784134 -164.52023315]
[68.22370911 -156.16252136]
[79.59420013 -146.37927246]
[89.71709442 -135.31008911]
[98.44795227 -123.11286926]
[105.66222382 -109.96166229]
[111.25697327 -96.04409027]
[115.15237427 -81.55872345]
[117.29284668 -66.71222687]
[117.64786530 -51.71643066]
[116.21234894 -36.78527832]
[113.00679016 -22.13179970]
[108.07691956 -7.96506548]
[101.49307251 5.51280403]
[93.34409332 18.11644554]
[91.55948639 33.00990677]
[89.77487946 47.90336990]
[87.99027252 62.79682922]
[96.69672394 50.58217239]
[97.72356415 34.21520615]
[112.52954865 27.16432953]
[125.88354492 36.68288040]
[124.04811096 52.97899246]
[108.91137695 59.28862000]
[100.20493317 71.50327301]
[115.57382965 78.21787262]
[123.65062714 91.72515106]
[122.44667053 106.38063812]
[138.19927979 107.85235596]
[144.27833557 121.44994354]
[156.62309265 129.97091675]
[168.96784973 138.49188232]
[181.37660217 146.91938782]
[193.84864807 155.25294495]
[206.32069397 163.58650208]
[218.79273987 171.92004395]
[231.26478577 180.25360107]
[237.21839905 173.42356873]
[243.79612732 167.19346619]
[250.93777466 161.62010193]
[258.57806396 156.75419617]
[266.64715576 152.64007568]
[275.07131958 149.31513977]
[283.77359009 146.80961609]
[292.67443848 145.14620972]
[301.69262695 144.33998108]
[310.74575806 144.39811707]
[319.75125122 145.31994629]
[328.62683105 147.09687805]
[337.29153442 149.71257019]
[345.66629028 153.14295959]
[353.67471313 157.35659790]
[361.24374390 162.31489563]
[368.30435181 167.97242737]
[374.79220581 174.27745056]
[380.64816284 181.17227173]
[385.81890869 188.59384155]
[390.25729370 196.47431946]
[393.92300415 204.74168396]
[396.78268433 213.32040405]
[398.81036377 222.13209534]
[399.98770142 231.09628296]
[400.30410767 240.13111877]
[399.75680542 249.15408325]
[398.35098267 258.08282471]
[396.09963989 266.83584595]
[393.02343750 275.33331299]
[389.15063477 283.49761963]
[384.51672363 291.25436401]
[379.16412354 298.53277588]
[373.14187622 305.26651001]
[366.50503540 311.39419556]
[375.21145630 323.60885620]
[383.91790771 335.82351685]
[392.62435913 348.03817749]
[401.33081055 360.25283813]
[415.93255615 356.18292236]
[431.04550171 357.35562134]
[444.84463501 363.62939453]
[455.66363525 374.24658203]
[462.19610596 387.92514038]
[463.65316772 403.01330566]
[459.85888672 417.68911743]
[451.27148438 430.18038940]
[438.92785645 438.97872925]
[424.31863403 443.02172852]
[409.20788574 441.82116699]
[395.42034912 435.52200317]
[384.62091064 424.88488770]
[378.11367798 411.19433594]
[376.68441772 396.10348511]
[380.50570679 381.43469238]
[389.11614990 368.95928955]
[380.40969849 356.74462891]
[371.70324707 344.52996826]
[362.99682617 332.31530762]
[354.29037476 320.10064697]
[333.79019165 329.30261230]
[311.69122314 333.40817261]
[289.24111938 332.18249512]
[267.70812988 325.69177246]
[248.30947876 314.29971313]
[232.14237976 298.64721680]
[220.12216187 279.61621094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 140]
[4 139]
[5 138]
[6 137]
[7 136]
[9 135]
[10 134]
[11 133]
[13 131]
[19 68]
[20 67]
[21 66]
[23 64]
[25 63]
[27 61]
[29 59]
[30 58]
[31 57]
[32 56]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[121 128]
[122 127]
[175 200]
[176 199]
[177 198]
[178 197]
[179 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
