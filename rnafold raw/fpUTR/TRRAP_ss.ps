%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCCGGGGCCUGGUGCUCGGUCGGCGGGUGCUGCCGCUUUAAGCGGGGGCGGGACUGCGCGCGGCCGAGCGGUUGCGACGAGGGCUCGGCUGGGGGUCGCCGGGGUCGCGGGCCGGGCCUGCAGGAGCCGGGCCGCCGAGGUCGGGGCUGGUUGAACUCAUGGACCUGAUACUUUUCUCUUGAGAAGCAAACCAGCCCAAAAGAAAA\
) } def
/len { sequence length } bind def

/coor [
[279.55175781 256.68804932]
[267.41650391 247.87126160]
[255.21562195 239.14549255]
[240.63056946 241.94041443]
[228.06831360 233.35877991]
[225.23562622 218.04168701]
[212.96983337 209.40742493]
[200.70404053 200.77317810]
[188.37402344 192.23089600]
[175.98043823 183.78109741]
[163.58685303 175.33129883]
[151.19326782 166.88150024]
[138.79968262 158.43170166]
[126.40610504 149.98190308]
[114.01252747 141.53210449]
[101.61894226 133.08229065]
[86.86000061 130.40394592]
[72.28765106 133.96014404]
[57.71530151 137.51635742]
[43.14294815 141.07255554]
[28.57059860 144.62876892]
[13.99824810 148.18496704]
[-0.57410246 151.74118042]
[-15.14645290 155.29737854]
[-29.71880341 158.85359192]
[-44.26414490 162.51869202]
[-58.78166580 166.29249573]
[-73.29918671 170.06629944]
[-87.78807831 173.94857788]
[-102.24752045 177.93913269]
[-116.70696259 181.92968750]
[-127.95140839 193.05950928]
[-142.27842712 188.98696899]
[-156.73786926 192.97752380]
[-171.19731140 196.96807861]
[-185.65676880 200.95861816]
[-200.11621094 204.94917297]
[-211.36065674 216.07899475]
[-225.68768311 212.00645447]
[-240.14712524 215.99700928]
[-247.72769165 229.86460876]
[-262.91714478 234.22996521]
[-276.70382690 226.50318909]
[-280.90835571 211.26844788]
[-273.03625488 197.56422424]
[-257.75790405 193.52101135]
[-244.13766479 201.53756714]
[-229.67822266 197.54701233]
[-219.46801758 186.70262146]
[-204.10675049 190.48973083]
[-189.64730835 186.49917603]
[-175.18786621 182.50863647]
[-160.72842407 178.51808167]
[-146.26898193 174.52752686]
[-136.05877686 163.68313599]
[-120.69751740 167.47024536]
[-106.23807526 163.47969055]
[-91.77862549 159.48913574]
[-86.16671753 154.67906189]
[-77.07299042 155.54878235]
[-62.55546951 151.77497864]
[-48.03794861 148.00117493]
[-42.35470963 143.27558899]
[-33.27500916 144.28123474]
[-18.70265961 140.72503662]
[-4.13030815 137.16882324]
[10.44204235 133.61262512]
[25.01439285 130.05641174]
[39.58674240 126.50021362]
[54.15909576 122.94400787]
[68.73144531 119.38780212]
[83.30379486 115.83159637]
[78.77002716 103.55339813]
[81.75886536 91.69718170]
[90.28921509 84.18498230]
[88.27571869 69.32073975]
[86.26221466 54.45649338]
[84.24871826 39.59224701]
[73.22054291 49.75981522]
[58.37268066 47.62888336]
[50.64919281 34.77011871]
[55.74292374 20.66147232]
[69.89937592 15.70215225]
[82.68350983 23.54667091]
[81.78645325 8.57351875]
[80.88938904 -6.39963341]
[79.99232483 -21.37278557]
[79.09526062 -36.34593582]
[78.19820404 -51.31908798]
[77.30113983 -66.29224396]
[76.40407562 -81.26539612]
[75.50701141 -96.23854828]
[74.60995483 -111.21170044]
[66.06119537 -124.52444458]
[73.02349854 -137.69166565]
[64.47473907 -151.00440979]
[71.43704987 -164.17163086]
[70.53998566 -179.14477539]
[69.64292145 -194.11793518]
[68.74586487 -209.09107971]
[57.74599457 -220.76936340]
[60.16068649 -236.62965393]
[74.13759613 -244.50529480]
[88.95483398 -238.35475159]
[93.24588013 -222.89622498]
[83.71901703 -209.98814392]
[84.61607361 -195.01498413]
[85.51313782 -180.04183960]
[86.41020203 -165.06867981]
[94.89479828 -152.82691956]
[87.99665070 -138.58872986]
[96.48124695 -126.34695435]
[89.58310699 -112.10875702]
[90.48016357 -97.13560486]
[91.37722778 -82.16245270]
[92.27429199 -67.18930054]
[93.17135620 -52.21615219]
[94.06841278 -37.24300003]
[94.96547699 -22.26984787]
[95.86254120 -7.29669571]
[96.75960541 7.67645597]
[97.65666199 22.64960861]
[99.11296082 37.57874680]
[101.12646484 52.44299316]
[103.13996124 67.30724335]
[105.15345764 82.17148590]
[117.71193695 90.62114716]
[120.46324921 106.67787933]
[110.06874847 120.68871307]
[122.46232605 129.13851929]
[134.85591125 137.58831787]
[147.24949646 146.03811646]
[159.64306641 154.48791504]
[172.03665161 162.93771362]
[184.43023682 171.38752747]
[196.82382202 179.83732605]
[205.67791748 182.08616638]
[209.33830261 188.50738525]
[221.60409546 197.14163208]
[233.86988831 205.77589417]
[249.24475098 203.27561951]
[261.56100464 212.20671082]
[263.84988403 226.87969971]
[272.66934204 229.26075745]
[276.23327637 235.73600769]
[288.36853027 244.55278015]
[301.12872314 252.43803406]
[314.44250488 259.34768677]
[327.75628662 266.25732422]
[341.07009888 273.16696167]
[354.38388062 280.07659912]
[367.69766235 286.98623657]
[381.01144409 293.89587402]
[394.32522583 300.80548096]
[407.63900757 307.71511841]
[423.60580444 299.12466431]
[441.37722778 301.81417847]
[453.86654663 314.52032471]
[456.20809937 332.02368164]
[469.72262573 338.53192139]
[483.23715210 345.04019165]
[496.75167847 351.54843140]
[505.84207153 352.45254517]
[510.41860962 358.25646973]
[523.83428955 364.96618652]
[537.24993896 371.67587280]
[542.46191406 371.36175537]
[546.83551025 372.92266846]
[549.79687500 375.72503662]
[551.10681152 378.99945068]
[564.20794678 386.30426025]
[579.34039307 381.74536133]
[593.22460938 389.29550171]
[597.62322998 404.47534180]
[589.92675781 418.27893066]
[574.70123291 422.51684570]
[560.97979736 414.67483521]
[556.90307617 399.40539551]
[543.80194092 392.10055542]
[530.54022217 385.09152222]
[517.12457275 378.38183594]
[503.70892334 371.67214966]
[490.24343872 365.06298828]
[476.72891235 358.55471802]
[463.21435547 352.04647827]
[449.69982910 345.53820801]
[439.97979736 352.81265259]
[428.01843262 355.27841187]
[416.07357788 352.40744019]
[406.42660522 344.68490601]
[400.94683838 333.52862549]
[400.72937012 321.02893066]
[387.41558838 314.11929321]
[374.10180664 307.20965576]
[360.78802490 300.30001831]
[347.47424316 293.39038086]
[334.16046143 286.48074341]
[320.84664917 279.57110596]
[307.53286743 272.66146851]
[294.21908569 265.75183105]
[300.88595581 279.18881226]
[300.04034424 294.16497803]
[291.90328979 306.76608276]
[278.60147095 313.69873047]
[263.61148071 313.15100098]
[250.85108948 305.26605225]
[243.65539551 292.10467529]
[243.90502930 277.10675049]
[251.53477478 264.19213867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 146]
[2 145]
[3 143]
[6 140]
[7 139]
[8 138]
[9 136]
[10 135]
[11 134]
[12 133]
[13 132]
[14 131]
[15 130]
[16 129]
[17 72]
[18 71]
[19 70]
[20 69]
[21 68]
[22 67]
[23 66]
[24 65]
[25 64]
[26 62]
[27 61]
[28 60]
[29 58]
[30 57]
[31 56]
[33 54]
[34 53]
[35 52]
[36 51]
[37 50]
[39 48]
[40 47]
[75 126]
[76 125]
[77 124]
[78 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[95 111]
[97 109]
[98 108]
[99 107]
[100 106]
[147 200]
[148 199]
[149 198]
[150 197]
[151 196]
[152 195]
[153 194]
[154 193]
[155 192]
[159 186]
[160 185]
[161 184]
[162 183]
[164 182]
[165 181]
[166 180]
[170 179]
[171 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
