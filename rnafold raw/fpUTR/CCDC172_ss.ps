%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAAGGCCCGACCUGAAGCACUGGCUCCAGCCUUAGGGAAGGUUUUGGCCGUGGGUUUUGUUGGCACGUACCAUUUUGCUGAAAGACAGAGCACCUUGAGGACGUUAUCCCUAAAAUGAGAGAGGACUGGGAUUGAAAGGCUGACUACAGAAAUGGCUGCUGCCCAGACGCCCUCAAAAGCCAAGGAUCCUCAGAGUUGGUUAUAAAAUAUUUAAGGGCGAGAAAAGGAUCGCAGGAGCCAGGCCCUGAG\
) } def
/len { sequence length } bind def

/coor [
[84.03749847 267.77783203]
[80.67861938 252.09034729]
[90.96038818 239.77513123]
[90.96038818 224.77513123]
[83.22308350 212.04785156]
[90.96038818 198.24768066]
[90.96038818 183.24768066]
[90.96038818 168.24768066]
[90.96038818 153.24768066]
[79.65201569 143.39268494]
[64.79283905 145.44323730]
[52.17993927 154.99444580]
[38.51443481 149.06964111]
[23.65525436 151.12019348]
[8.79607487 153.17074585]
[-3.81682444 162.72193909]
[-17.48233032 156.79714966]
[-32.34151077 158.84770203]
[-47.20068741 160.89825439]
[-61.05888367 166.63850403]
[-73.01586914 175.69557190]
[-84.97285461 184.75263977]
[-89.90700531 192.40757751]
[-97.13583374 193.84696960]
[-109.20479584 202.75427246]
[-121.27376556 211.66157532]
[-133.34272766 220.56887817]
[-135.83100891 235.94569397]
[-148.19755554 244.80703735]
[-162.84164429 242.34007263]
[-174.91061401 251.24737549]
[-186.97958374 260.15469360]
[-199.04855347 269.06198120]
[-211.11752319 277.96929932]
[-223.18647766 286.87658691]
[-229.24485779 302.11563110]
[-245.50837708 304.22036743]
[-255.24652100 291.02566528]
[-248.44152832 276.10507202]
[-232.09378052 274.80761719]
[-220.02482605 265.90032959]
[-207.95585632 256.99301147]
[-195.88688660 248.08572388]
[-183.81791687 239.17842102]
[-171.74894714 230.27111816]
[-169.78988647 215.55046082]
[-157.67712402 206.34526062]
[-142.25003052 208.49992371]
[-130.18106079 199.59262085]
[-118.11209869 190.68531799]
[-106.04313660 181.77801514]
[-94.02992249 172.79565430]
[-82.07293701 163.73858643]
[-70.11595154 154.68151855]
[-71.46432495 147.30372620]
[-75.50945282 125.17033386]
[-89.89704895 120.92803192]
[-104.28464508 116.68573761]
[-118.67224121 112.44344330]
[-133.05982971 108.20114136]
[-147.44743347 103.95884705]
[-161.83502197 99.71655273]
[-176.22262573 95.47425079]
[-190.71150208 91.59196472]
[-205.29267883 88.07210541]
[-219.87385559 84.55224609]
[-234.45503235 81.03238678]
[-244.98298645 92.21529388]
[-259.69653320 96.62062836]
[-274.63781738 93.06336212]
[-285.78765869 82.50039673]
[-290.14685059 67.77310944]
[-286.54278564 52.84306335]
[-275.94491577 41.72637177]
[-261.20404053 37.41336823]
[-246.28535461 41.06422424]
[-235.20193481 51.69688416]
[-230.93516541 66.45121002]
[-216.35398865 69.97107697]
[-201.77282715 73.49093628]
[-187.19165039 77.01079559]
[-184.74711609 75.69068909]
[-181.63911438 75.24633026]
[-178.19393921 75.93271637]
[-174.82327271 77.88380432]
[-171.98033142 81.08665466]
[-157.59272766 85.32895660]
[-143.20513916 89.57125092]
[-128.81753540 93.81354523]
[-114.42993927 98.05584717]
[-100.04234314 102.29814148]
[-85.65474701 106.54043579]
[-71.26715088 110.78273773]
[-55.93730164 120.37583160]
[-48.59879303 133.58981323]
[-49.25124359 146.03907776]
[-34.39206314 143.98852539]
[-19.53288269 141.93797302]
[-7.98281240 132.53344727]
[6.74552107 138.31156921]
[21.60470009 136.26101685]
[36.46388245 134.21046448]
[48.01395035 124.80593109]
[62.74228668 130.58406067]
[77.60146332 128.53350830]
[63.56033707 110.43591309]
[62.82768631 86.53926849]
[76.85836029 65.95643616]
[74.99320984 51.07284927]
[73.12805176 36.18925858]
[71.26289368 21.30567169]
[69.39774323 6.42208433]
[54.57169724 3.34520459]
[41.54930496 -4.38111448]
[31.74313354 -15.91878033]
[26.21688461 -30.01627159]
[25.57000160 -45.14440155]
[29.87265587 -59.66217804]
[38.65812683 -71.99482727]
[50.97343445 -80.80458832]
[65.48270416 -85.13585663]
[80.61207581 -84.51879883]
[94.72043610 -79.02034760]
[106.27740479 -69.23693848]
[114.02938080 -56.22979736]
[117.13548279 -41.40985107]
[115.25878143 -26.38464928]
[108.60284424 -12.78401375]
[97.88966370 -2.08324122]
[84.28132629 4.55692863]
[86.14648438 19.44051743]
[88.01164246 34.32410431]
[89.87679291 49.20769119]
[91.74195099 64.09127808]
[99.10236359 65.53152466]
[101.98285675 50.81069565]
[100.17340088 35.92023468]
[113.77593231 29.59795761]
[123.99216461 40.58105850]
[116.70368195 53.69118500]
[113.82319641 68.41201782]
[121.18360901 69.85225677]
[128.52108765 56.76939011]
[135.85855103 43.68651962]
[135.11318970 27.30432129]
[149.07182312 18.69685364]
[163.37501526 26.71874237]
[163.30886841 43.11775589]
[148.94142151 51.02399445]
[141.60395813 64.10686493]
[134.26647949 77.18973541]
[139.11051941 91.89299774]
[138.10406494 106.87610626]
[131.74052429 119.96427917]
[121.26578522 129.38743591]
[135.84695435 132.90730286]
[150.42813110 136.42716980]
[165.00930786 139.94702148]
[179.59046936 143.46688843]
[194.82093811 139.18394470]
[205.37722778 149.69174194]
[219.95838928 153.21160889]
[234.53956604 156.73147583]
[249.12074280 160.25132751]
[263.76516724 163.49792480]
[278.46777344 166.47012329]
[292.03479004 152.92993164]
[310.87661743 150.35470581]
[327.31677246 159.60987854]
[334.76803589 176.77821350]
[349.57147217 179.19857788]
[364.37490845 181.61894226]
[379.17834473 184.03930664]
[393.98181152 186.45968628]
[408.78524780 188.88005066]
[423.65304565 183.47090149]
[434.96505737 193.16046143]
[449.76849365 195.58082581]
[464.57196045 198.00119019]
[479.47763062 199.68064880]
[494.44848633 200.61505127]
[509.41937256 201.54943848]
[524.39025879 202.48382568]
[539.36108398 203.41822815]
[554.33197021 204.35261536]
[561.75317383 191.01513672]
[574.23132324 182.22543335]
[589.28881836 179.72872925]
[603.93609619 184.02072144]
[615.26483154 194.24925232]
[621.02569580 208.38342285]
[620.07489014 223.61689758]
[612.60125732 236.92506409]
[600.08856201 245.66554260]
[585.02136230 248.10295105]
[570.39111328 243.75329590]
[559.10278320 233.48023987]
[553.39758301 219.32348633]
[538.42669678 218.38909912]
[523.45587158 217.45469666]
[508.48498535 216.52030945]
[493.51409912 215.58592224]
[478.54324341 214.65151978]
[489.35055542 225.05355835]
[492.07467651 239.80412292]
[485.69561768 253.38011169]
[472.60189819 260.69821167]
[457.69625854 259.01831055]
[446.55987549 248.96937561]
[443.36257935 234.31410217]
[449.30154419 220.53988647]
[462.15158081 212.80462646]
[447.34814453 210.38426208]
[432.54470825 207.96389771]
[418.73574829 213.54615784]
[406.36486816 203.68348694]
[391.56143188 201.26312256]
[376.75799561 198.84275818]
[361.95455933 196.42237854]
[347.15112305 194.00201416]
[332.34768677 191.58164978]
[326.07348633 200.75199890]
[316.79476929 206.95742798]
[305.82315063 209.27490234]
[294.72662354 207.33427429]
[285.10565186 201.37673950]
[278.36221313 192.22560120]
[275.49557495 181.17269897]
[260.79299927 178.20051575]
[257.68572998 179.81376648]
[253.64852905 180.01750183]
[249.34532166 178.39344788]
[245.60087585 174.83250427]
[231.01971436 171.31263733]
[216.43853760 167.79278564]
[201.85736084 164.27291870]
[187.66984558 168.80763245]
[176.07061768 158.04806519]
[161.48944092 154.52819824]
[146.90826416 151.00833130]
[132.32710266 147.48847961]
[117.74592590 143.96861267]
[105.96038818 153.24768066]
[105.96038818 168.24768066]
[105.96038818 183.24768066]
[105.96038818 198.24768066]
[113.69768524 212.04785156]
[105.96038818 224.77513123]
[105.96038818 239.77513123]
[116.24215698 252.09034729]
[112.88327026 267.77783203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 249]
[4 248]
[6 246]
[7 245]
[8 244]
[9 243]
[10 105]
[11 104]
[13 102]
[14 101]
[15 100]
[17 98]
[18 97]
[19 96]
[20 54]
[21 53]
[22 52]
[24 51]
[25 50]
[26 49]
[27 48]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[56 93]
[57 92]
[58 91]
[59 90]
[60 89]
[61 88]
[62 87]
[63 86]
[64 81]
[65 80]
[66 79]
[67 78]
[108 134]
[109 133]
[110 132]
[111 131]
[112 130]
[142 151]
[143 150]
[144 149]
[155 242]
[156 241]
[157 240]
[158 239]
[159 238]
[161 236]
[162 235]
[163 234]
[164 233]
[165 229]
[166 228]
[170 221]
[171 220]
[172 219]
[173 218]
[174 217]
[175 216]
[177 214]
[178 213]
[179 212]
[180 203]
[181 202]
[182 201]
[183 200]
[184 199]
[185 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
