%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCAGGCCCGCUGGGGCAGGUGUCCCGUGGAAAUCGACGGAGGGGCUGCCGUGGGCGGCCGUGACAGUCACAGAGAGGGGAAGAGAAAACAGGGACGGUGACACACACAGAGAGAAGGAAGAGCAGACAGAGGCACAGCAGGAGACCCCCCCAAGCCCGAGGAGGACAGCCUGGGGAUGCAGAGCGC\
) } def
/len { sequence length } bind def

/coor [
[227.61564636 413.51397705]
[227.61564636 398.51397705]
[227.61564636 383.51397705]
[227.61564636 368.51397705]
[215.47723389 359.92349243]
[210.66792297 345.66394043]
[215.23066711 331.13690186]
[227.61564636 321.97619629]
[227.61564636 306.97619629]
[223.21690369 292.63565063]
[214.80616760 280.21554565]
[206.29306030 267.86535645]
[197.67811584 255.58598328]
[189.06318665 243.30661011]
[180.44825745 231.02723694]
[168.58131409 228.62416077]
[161.30561829 218.44891357]
[162.97172546 205.64694214]
[154.56100464 193.22680664]
[139.69346619 192.91999817]
[127.71577454 183.80961609]
[123.34824371 169.22270203]
[128.46656799 154.69311523]
[120.05583954 142.27297974]
[111.64511871 129.85284424]
[103.23439026 117.43271637]
[88.78917694 113.39096069]
[75.15408325 119.64268494]
[61.51898193 125.89440918]
[47.88388443 132.14613342]
[38.56420517 144.93106079]
[23.77026367 143.20230103]
[14.72430992 156.88084412]
[-1.62599862 155.61614990]
[-8.46086597 140.70921326]
[1.25083351 127.49502563]
[17.51853561 129.56719971]
[25.86294174 117.22944641]
[41.63215637 118.51103973]
[55.26725388 112.25931549]
[68.90235138 106.00758362]
[82.53745270 99.75585938]
[81.73293304 92.29913330]
[68.01286316 86.23615265]
[80.12390137 77.38568115]
[79.31938934 69.92895508]
[64.66458130 66.72946167]
[50.00978088 63.52996826]
[35.35498047 60.33047485]
[20.70017815 57.13097763]
[6.04537535 53.93148422]
[-8.60942745 50.73199081]
[-25.37373352 53.26070404]
[-32.44444656 37.85157013]
[-19.59487534 26.79151344]
[-5.40993309 36.07718658]
[9.24486923 39.27668381]
[23.89967155 42.47617722]
[38.55447388 45.67567062]
[53.20927811 48.87516403]
[67.86408234 52.07466125]
[82.51888275 55.27415466]
[92.76899719 44.32266235]
[88.60794830 29.91135597]
[84.44690704 15.50005150]
[70.00679016 10.13449860]
[61.59326935 -2.55668139]
[62.25819016 -17.59070587]
[71.53719330 -29.21129990]
[67.37614441 -43.62260437]
[63.21510315 -58.03390884]
[59.05405807 -72.44521332]
[54.89301682 -86.85652161]
[39.79158401 -87.93917084]
[25.99763107 -94.11160278]
[15.16811085 -104.61120605]
[8.59664440 -118.15689850]
[7.05899811 -133.10537720]
[10.72155666 -147.65049744]
[19.12355614 -160.04144287]
[31.23495483 -168.79353333]
[16.30642128 -172.40386963]
[5.19416809 -183.00639343]
[0.88733417 -197.74906921]
[4.54443741 -212.66621399]
[15.18173504 -223.74517822]
[29.93784714 -228.00578308]
[44.84345245 -224.30194092]
[55.88902283 -213.62995911]
[60.10334778 -198.86056519]
[56.35280228 -183.96664429]
[45.64625931 -172.95458984]
[60.55880737 -172.00523376]
[74.27246094 -165.99984741]
[85.12434387 -155.64555359]
[91.79135895 -142.17810059]
[93.45156097 -127.21435547]
[89.88538361 -112.55820465]
[81.50447845 -99.98313141]
[69.30432129 -91.01756287]
[73.46536255 -76.60625458]
[77.62640381 -62.19495392]
[81.78745270 -47.78364944]
[85.94849396 -33.37234116]
[99.99355316 -28.48621368]
[108.56975555 -16.12042236]
[108.21591949 -0.89780223]
[98.85821533 11.33900833]
[103.01925659 25.75031281]
[107.18029785 40.16161728]
[116.79676819 28.64972878]
[129.16365051 20.16090775]
[143.36285400 15.32535648]
[158.34024048 14.50206184]
[172.98391724 17.75214386]
[186.20672607 24.83432007]
[197.02703857 35.22281647]
[204.64155579 48.14640045]
[208.48500061 62.64564514]
[208.27201843 77.64413452]
[204.01843262 92.02839661]
[196.04000854 104.73056030]
[184.92909241 114.80762482]
[171.51051331 121.51148987]
[156.78047180 124.34445953]
[141.83248901 123.09622192]
[127.77631378 117.85943604]
[115.65452576 109.02198792]
[124.06524658 121.44212341]
[132.47598267 133.86225891]
[140.88670349 146.28239441]
[156.27812195 146.92309570]
[168.20164490 156.39320374]
[172.21502686 170.89688110]
[166.98114014 184.81608582]
[175.39186096 197.23622131]
[192.13502502 204.88098145]
[192.72763062 222.41230774]
[201.34255981 234.69168091]
[209.95748901 246.97105408]
[218.57241821 259.25042725]
[226.07693481 264.49035645]
[227.22630310 271.80480957]
[235.63702393 284.22494507]
[232.13012695 269.64065552]
[237.42533875 255.60636902]
[249.69216919 246.97360229]
[264.69012451 246.72656250]
[277.23461914 254.95066833]
[282.98916626 268.80294800]
[279.96365356 283.49630737]
[291.16598511 293.47167969]
[302.36828613 303.44705200]
[313.57061768 313.42239380]
[324.77294922 323.39776611]
[340.22470093 326.79684448]
[344.58419800 341.03918457]
[355.78652954 351.01455688]
[367.23278809 360.70904541]
[378.91595459 370.11666870]
[394.95648193 369.83227539]
[405.06851196 382.28723145]
[401.49493408 397.92721558]
[386.97711182 404.75454712]
[372.65185547 397.53189087]
[369.50830078 381.79983521]
[357.82513428 372.39218140]
[354.28228760 372.41265869]
[350.55484009 370.70684814]
[347.45935059 367.20751953]
[345.81115723 362.21685791]
[334.60882568 352.24148560]
[319.95834351 349.55593872]
[314.79757690 334.60009766]
[303.59524536 324.62472534]
[292.39291382 314.64935303]
[281.19061279 304.67398071]
[269.98828125 294.69860840]
[263.14511108 297.76800537]
[249.45880127 303.90679932]
[242.61564636 306.97619629]
[242.61564636 321.97619629]
[255.00062561 331.13690186]
[259.56338501 345.66394043]
[254.75405884 359.92349243]
[242.61564636 368.51397705]
[242.61564636 383.51397705]
[242.61564636 398.51397705]
[242.61564636 413.51397705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[8 182]
[9 181]
[10 144]
[11 143]
[12 141]
[13 140]
[14 139]
[15 138]
[18 136]
[19 135]
[23 131]
[24 130]
[25 129]
[26 128]
[27 42]
[28 41]
[29 40]
[30 39]
[32 37]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[63 110]
[64 109]
[65 108]
[69 104]
[70 103]
[71 102]
[72 101]
[73 100]
[81 92]
[151 178]
[152 177]
[153 176]
[154 175]
[155 174]
[157 172]
[158 171]
[159 167]
[160 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
