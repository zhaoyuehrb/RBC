%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUCGGGAACGGGAACAGGAGGCCGUUGGAAAACUUUGGGCAAGAUGGCCCGGCGGUGAUUUCCGCGGCGGUCUCUCCUGCGCCCGGCCUCUGCGGCGCAGGCCCAGCCCCCGAGCCUCGCACGUUCGGCAGCCCCGGCCUGGCCCCGGCCCCUCCUGCCC\
) } def
/len { sequence length } bind def

/coor [
[89.89399719 221.70729065]
[77.53886414 212.31951904]
[73.09360504 197.45280457]
[78.26749420 182.82369995]
[91.07107544 174.05741882]
[91.36016083 159.06019592]
[91.64925385 144.06298828]
[91.93833923 129.06576538]
[92.22742462 114.06855774]
[83.87789154 105.82884979]
[83.03315735 93.37604523]
[91.10405731 82.88983154]
[76.85618591 78.19962311]
[62.60831070 73.50941467]
[48.62689972 80.37657928]
[34.24434280 75.41707611]
[27.78371239 62.04561615]
[13.53583813 57.35540771]
[-0.71203613 52.66519547]
[-14.95991039 47.97498322]
[-29.20778465 43.28477478]
[-43.45565796 38.59456253]
[-57.91290283 34.59604645]
[-72.54595184 31.29851151]
[-87.17900848 28.00097466]
[-101.81206512 24.70343781]
[-116.44511414 21.40590286]
[-125.55408478 22.57345009]
[-131.32711792 17.90123558]
[-145.89390564 14.32229900]
[-160.46067810 10.74336052]
[-175.02746582 7.16442299]
[-189.59425354 3.58548546]
[-204.22731018 0.28794903]
[-218.92118835 -2.72696114]
[-233.61508179 -5.74187136]
[-248.33734131 -8.61504173]
[-263.08660889 -11.34620571]
[-277.83587646 -14.07736969]
[-292.58511353 -16.80853462]
[-307.33438110 -19.53969765]
[-322.08364868 -22.27086258]
[-334.96331787 -13.11171818]
[-350.53295898 -15.82486439]
[-359.55541992 -28.80064011]
[-356.67782593 -44.34074783]
[-343.60739136 -53.22551727]
[-328.09857178 -50.18376923]
[-319.35247803 -37.02012253]
[-304.60321045 -34.28895950]
[-289.85397339 -31.55779648]
[-275.10470581 -28.82663155]
[-260.35543823 -26.09546852]
[-245.60617065 -23.36430359]
[-238.42211914 -25.24758148]
[-230.60017395 -20.43575859]
[-215.90628052 -17.42084885]
[-201.21238708 -14.40593815]
[-196.76744080 -16.26876259]
[-191.10203552 -15.32503510]
[-186.01531982 -10.98129845]
[-171.44853210 -7.40236139]
[-156.88174438 -3.82342339]
[-142.31495667 -0.24448572]
[-127.74817657 3.33445191]
[-113.14758301 6.77284861]
[-98.51452637 10.07038498]
[-83.88146973 13.36792183]
[-69.24842072 16.66545868]
[-54.61536407 19.96299362]
[-60.04554749 5.98039293]
[-52.67077637 -7.08149004]
[-37.89314270 -9.65471077]
[-26.53738403 0.14563580]
[-26.92169952 15.14071178]
[-38.76544952 24.34668732]
[-24.51757431 29.03689957]
[-10.26969910 33.72711182]
[3.97817492 38.41732025]
[18.22604942 43.10753250]
[32.47392273 47.79774475]
[45.61396027 40.87857056]
[60.13014603 45.43214417]
[67.29852295 59.26153946]
[81.54639435 63.95174789]
[95.79426575 68.64196014]
[110.71006775 70.22905731]
[125.62586975 68.64196014]
[140.54167175 67.05487061]
[155.45747375 65.46777344]
[161.83035278 56.57897568]
[171.84725952 52.76875305]
[182.08692932 55.07848358]
[189.19342041 62.50205612]
[197.59150696 58.78606033]
[204.45697021 61.61852264]
[219.43955994 60.89604568]
[234.42214966 60.17356491]
[242.89028931 56.62010956]
[249.69989014 59.58435822]
[264.69363403 59.15076447]
[279.68734741 58.71717072]
[294.68109131 58.28357315]
[309.67480469 57.84997940]
[324.66854858 57.41638565]
[336.41519165 44.48446274]
[353.54260254 44.03388214]
[365.47372437 55.85591888]
[380.45629883 55.13343811]
[391.05178833 43.71530151]
[406.25653076 43.19603729]
[417.07669067 53.36755753]
[432.05929565 52.64507675]
[447.04187012 51.92259979]
[462.02447510 51.20011902]
[477.00704956 50.47764206]
[491.98965454 49.75516129]
[501.30798340 37.19718170]
[516.53027344 33.61722183]
[530.46899414 40.70562744]
[536.54278564 55.11546707]
[531.88366699 70.04286194]
[518.69165039 78.43954468]
[503.19552612 76.34086609]
[492.71212769 64.73775482]
[477.72955322 65.46022797]
[462.74694824 66.18270874]
[447.76437378 66.90518951]
[432.78176880 67.62767029]
[417.79916382 68.35015106]
[408.00790405 79.51557922]
[392.82373047 80.46170807]
[381.17880249 70.11602783]
[366.19619751 70.83850861]
[358.93319702 81.51535797]
[346.65847778 86.11415863]
[333.79089355 82.73936462]
[325.10214233 72.41011810]
[310.10839844 72.84371185]
[295.11468506 73.27730560]
[280.12094116 73.71089935]
[265.12722778 74.14449310]
[250.13348389 74.57809448]
[235.14462280 75.15615845]
[220.16203308 75.87863159]
[205.17944336 76.60111237]
[190.20451355 77.46794128]
[175.03330994 89.41133881]
[157.04457092 80.38357544]
[142.12876892 81.97066498]
[127.21296692 83.55776215]
[112.29716492 85.14485931]
[117.78285217 96.06036377]
[115.48645782 107.35305786]
[107.22463226 114.35764313]
[106.93554688 129.35485840]
[106.64646149 144.35206604]
[106.35737610 159.34928894]
[106.06829071 174.34649658]
[118.52453613 183.59970093]
[123.13081360 198.41731262]
[118.11592102 213.10168457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 159]
[6 158]
[7 157]
[8 156]
[9 155]
[12 86]
[13 85]
[14 84]
[17 81]
[18 80]
[19 79]
[20 78]
[21 77]
[22 76]
[23 70]
[24 69]
[25 68]
[26 67]
[27 66]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[34 58]
[35 57]
[36 56]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[87 152]
[88 151]
[89 150]
[90 149]
[94 147]
[96 146]
[97 145]
[98 144]
[100 143]
[101 142]
[102 141]
[103 140]
[104 139]
[105 138]
[108 134]
[109 133]
[112 130]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
