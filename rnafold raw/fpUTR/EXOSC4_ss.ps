%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCGGACCUCCGGAAACCGUAGAUUCCGGGCGGUCGGAGCCGCCGGGAGCUGUAGUUCUCCCGCGGCUCAGAGAAGUAGGCAGAGAGCGGACCUGGCGGCCGGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[-18.74551964 253.54763794]
[-27.80634689 241.59349060]
[-31.42382431 227.03623962]
[-29.01262093 212.23130798]
[-20.96108055 199.57235718]
[-31.56259537 211.31622314]
[-46.09576035 208.05487061]
[-60.30821991 212.85133362]
[-74.52067566 217.64779663]
[-88.73313904 222.44424438]
[-102.87629700 227.44134521]
[-116.94733429 232.63807678]
[-131.01835632 237.83480835]
[-145.08940125 243.03155518]
[-159.16043091 248.22828674]
[-173.23146057 253.42501831]
[-187.30249023 258.62176514]
[-191.37939453 273.59368896]
[-203.49899292 283.28359985]
[-219.00108337 283.96557617]
[-231.92477417 275.37731934]
[-237.30064392 260.82122803]
[-233.06156921 245.89442444]
[-220.83755493 236.33653259]
[-205.32899475 235.82278442]
[-192.49922180 244.55072021]
[-178.42819214 239.35398865]
[-164.35716248 234.15725708]
[-150.28613281 228.96051025]
[-136.21510315 223.76377869]
[-122.14406586 218.56704712]
[-108.07303619 213.37031555]
[-102.81200409 208.02276611]
[-93.52959442 208.23179626]
[-79.31713867 203.43533325]
[-65.10467529 198.63887024]
[-50.89221954 193.84240723]
[-41.30727386 182.44161987]
[-25.75753975 185.35989380]
[-20.21913147 178.51620483]
[-10.42215824 177.07556152]
[1.38055694 167.81835938]
[13.18327236 158.56114197]
[24.98598862 149.30393982]
[36.78870392 140.04672241]
[48.59141922 130.78952026]
[60.39413452 121.53231049]
[72.19684601 112.27510071]
[83.99956512 103.01789856]
[86.12794495 91.47428894]
[95.46569061 84.36153412]
[107.15993500 85.37615204]
[119.21988678 76.45664978]
[131.27984619 67.53715515]
[143.33979797 58.61765671]
[146.05694580 45.91113281]
[156.40814209 38.74273682]
[168.46157837 40.55011368]
[180.76911926 31.97546959]
[193.07666016 23.40082741]
[205.38420105 14.82618523]
[217.56916809 6.07823944]
[229.62911987 -2.84125829]
[236.12356567 -17.26806641]
[250.95710754 -18.61535645]
[263.01705933 -27.53485489]
[265.48980713 -42.91416931]
[277.84738159 -51.78800964]
[292.49395752 -49.33585358]
[304.55392456 -58.25535202]
[313.69317627 -72.53506470]
[329.94485474 -67.70598602]
[329.80340576 -50.75262833]
[313.47341919 -46.19539642]
[301.41345215 -37.27589798]
[299.46926880 -22.55327034]
[287.36584473 -13.33583355]
[271.93655396 -15.47489738]
[259.87661743 -6.55539942]
[254.24478149 7.23342562]
[238.54861450 9.21869850]
[226.48866272 18.13819695]
[222.93031311 24.74220657]
[213.95884705 27.13372421]
[201.65130615 35.70836639]
[189.34376526 44.28300858]
[177.03622437 52.85765076]
[170.53652954 69.09093475]
[152.25930786 70.67761230]
[140.19934082 79.59711456]
[128.13938904 88.51660919]
[116.07942963 97.43610382]
[109.86643219 112.95280457]
[93.25677490 114.82061005]
[81.45405579 124.07781982]
[69.65134430 133.33502197]
[57.84862900 142.59223938]
[46.04590988 151.84944153]
[34.24319458 161.10665894]
[22.44048119 170.36386108]
[10.63776493 179.62106323]
[-1.16495001 188.87828064]
[13.83364773 189.08337402]
[27.53800011 195.18179321]
[37.73066330 206.18678284]
[42.76240158 220.31765747]
[41.81904984 235.28796387]
[35.05325317 248.67541504]
[23.55975151 258.31384277]
[9.19826508 262.64370728]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 39]
[7 37]
[8 36]
[9 35]
[10 34]
[11 32]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[41 102]
[42 101]
[43 100]
[44 99]
[45 98]
[46 97]
[47 96]
[48 95]
[49 94]
[52 92]
[53 91]
[54 90]
[55 89]
[58 87]
[59 86]
[60 85]
[61 84]
[62 82]
[63 81]
[65 79]
[66 78]
[69 75]
[70 74]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
