%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCACAUGGACUGGGGUGCAAUGGGACAGCUGCUGCCAGCGAGAGGGACCAGGGCACCACUCUCUAGGGAGCCCACACUGCAAGUCAGGCCACAAGGACCUCUGACCCUGAGGGCCG\
) } def
/len { sequence length } bind def

/coor [
[239.91152954 168.85165405]
[226.14993286 162.88352966]
[212.38833618 156.91542053]
[198.67283630 162.60932922]
[184.63160706 156.75285339]
[178.75228882 142.32815552]
[163.99731445 144.36280823]
[154.41496277 131.77355957]
[140.65336609 125.80544281]
[126.89176941 119.83732605]
[113.13017273 113.86920929]
[99.61573029 119.09472656]
[86.32246399 113.32971191]
[80.90171051 99.89238739]
[65.16240692 101.50016022]
[56.56437683 89.33779144]
[42.80278015 83.36967468]
[29.04118347 77.40155792]
[15.27958584 71.43343353]
[1.51798904 65.46531677]
[-13.03064919 71.03082275]
[-26.90184784 64.78226471]
[-32.11804962 50.87806320]
[-45.87964630 44.90994263]
[-59.64124298 38.94182587]
[-74.18988037 44.50733185]
[-88.06108093 38.25877380]
[-93.27728271 24.35457039]
[-107.82592010 29.92008018]
[-121.69712067 23.67151833]
[-126.91332245 9.76731777]
[-140.67492676 3.79919815]
[-154.51409912 -1.98675394]
[-168.42843628 -7.58953047]
[-182.34277344 -13.19230747]
[-199.29393005 -13.49979305]
[-203.69100952 -29.87361526]
[-189.17431641 -38.63158035]
[-176.74000549 -27.10664940]
[-162.82565308 -21.50387192]
[-148.91131592 -15.90109539]
[-141.43760681 -16.32688713]
[-134.70680237 -9.96239853]
[-120.94520569 -3.99427938]
[-107.22970581 -9.68819332]
[-93.18846893 -3.83171058]
[-87.30916595 10.59297371]
[-73.59366608 4.89906025]
[-59.55242920 10.75554276]
[-53.67312622 25.18022728]
[-39.91152954 31.14834595]
[-26.14993095 37.11646652]
[-12.43443108 31.42255211]
[1.60680294 37.27903366]
[7.48610830 51.70372009]
[21.24770546 57.67183685]
[35.00930405 63.63995743]
[48.77090073 69.60807800]
[62.53249741 75.57619476]
[77.28747559 73.54154968]
[86.86982727 86.13079071]
[100.38426971 80.90527344]
[113.67753601 86.67028809]
[119.09828949 100.10761261]
[132.85989380 106.07572937]
[146.62149048 112.04384613]
[160.38308716 118.01197052]
[176.12239075 116.40419769]
[184.72041321 128.56655884]
[199.26905823 123.00105286]
[213.14024353 129.24961853]
[218.35646057 143.15382385]
[232.11805725 149.12193298]
[245.87965393 155.09005737]
[238.35743713 142.11251831]
[236.19326782 127.26947021]
[239.69673157 112.68434906]
[248.36665344 100.44373322]
[260.96267700 92.29878235]
[275.68280029 89.41471863]
[290.42114258 92.20413971]
[303.06924438 100.26799011]
[311.81762695 112.45264435]
[315.41476440 127.01494598]
[313.34600830 141.87161255]
[305.90731812 154.89720154]
[294.16293335 164.22828674]
[279.79296875 168.52992249]
[264.85153198 167.18624878]
[276.06909180 177.14448547]
[287.28662109 187.10272217]
[298.50418091 197.06095886]
[313.57705688 193.88064575]
[327.47006226 200.11268616]
[334.94104004 213.17593384]
[333.30685425 227.95657349]
[344.52441406 237.91481018]
[355.74197388 247.87304688]
[370.56741333 243.60568237]
[385.33987427 248.05285645]
[395.34558105 259.79550171]
[397.39169312 275.08657837]
[390.82534790 289.04675293]
[377.74182129 297.22140503]
[362.31600952 297.00198364]
[349.47024536 288.45858765]
[343.30358887 274.31729126]
[345.78375244 259.09060669]
[334.56619263 249.13237000]
[323.34863281 239.17413330]
[308.86584473 242.54859924]
[295.00921631 236.67852783]
[287.17449951 223.62208557]
[288.54595947 208.27851868]
[277.32839966 198.32028198]
[266.11083984 188.36204529]
[254.89328003 178.40380859]
[249.10903931 178.24661255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 74]
[2 73]
[3 72]
[6 69]
[8 67]
[9 66]
[10 65]
[11 64]
[14 61]
[16 59]
[17 58]
[18 57]
[19 56]
[20 55]
[23 52]
[24 51]
[25 50]
[28 47]
[31 44]
[32 43]
[33 41]
[34 40]
[35 39]
[89 117]
[90 116]
[91 115]
[92 114]
[96 110]
[97 109]
[98 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
