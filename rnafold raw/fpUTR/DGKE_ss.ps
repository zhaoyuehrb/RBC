%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCAGCUCGCGGCCCCGCGCGCCGGAUCGGCGUGCGUGCGGCUGGAGCCUUAAGCGUUUCCCCCGCCCGGCUUCAUCCCUGCUGGCGGCCCAGCGUCGUUCUCCUCCUGCGCGAGGCGGCCAAGGCCUGCUGGCCCGGAGCCGCGCCUCCACCCGCGCGAGGUAUCGUCCUUGGAGAAG\
) } def
/len { sequence length } bind def

/coor [
[96.60385895 178.93748474]
[95.82315826 163.95780945]
[95.04244995 148.97813416]
[94.26174164 133.99847412]
[93.48104095 119.01879883]
[79.98268127 112.47705078]
[67.74120331 121.14574432]
[55.49972534 129.81443787]
[43.25824738 138.48312378]
[38.04526901 146.01756287]
[30.72823143 147.19386292]
[18.33814240 155.64878845]
[5.94805336 164.10371399]
[-6.44203520 172.55862427]
[-18.83212280 181.01354980]
[-31.14837074 189.57568359]
[-43.31415939 198.35028076]
[-55.40333939 207.23013306]
[-67.49252319 216.10997009]
[-79.58170319 224.98982239]
[-91.67088318 233.86967468]
[-103.76006317 242.74952698]
[-115.84924316 251.62936401]
[-127.93842316 260.50921631]
[-140.02760315 269.38906860]
[-149.21371460 283.63870239]
[-165.44941711 278.75625610]
[-165.25230408 261.80346680]
[-148.90745544 257.29989624]
[-136.81826782 248.42002869]
[-124.72909546 239.54019165]
[-112.63991547 230.66033936]
[-100.55072784 221.78048706]
[-88.46154785 212.90065002]
[-76.37236786 204.02079773]
[-64.28318787 195.14094543]
[-52.19400787 186.26109314]
[-48.65493393 179.74974060]
[-39.81706238 177.33419800]
[-36.16550827 170.88525391]
[-27.28704643 168.62345886]
[-14.89695644 160.16854858]
[-2.50686836 151.71362305]
[9.88322067 143.25869751]
[22.27330971 134.80377197]
[34.58955765 126.24164581]
[46.83103561 117.57295990]
[59.07251358 108.90426636]
[71.31399536 100.23557281]
[56.89781952 104.37972260]
[44.11487961 96.53137970]
[41.28756714 81.80024719]
[50.25661850 69.77709198]
[65.18268585 68.28964996]
[76.34790802 78.30592346]
[69.11247253 65.16634369]
[61.87704849 52.02676010]
[54.64161682 38.88718033]
[47.40618896 25.74760246]
[33.62494659 25.04842758]
[22.08410645 17.68349075]
[15.74631310 5.67053461]
[16.17545700 -7.79659128]
[23.15214729 -19.19684410]
[16.14585686 -32.46002197]
[9.13956833 -45.72320175]
[2.13327956 -58.98638153]
[-4.87300920 -72.24955750]
[-11.66700268 -78.39646912]
[-11.88353539 -85.80429077]
[-18.65857315 -99.18707275]
[-25.43361092 -112.56985474]
[-40.79009247 -114.04704285]
[-52.89600754 -123.61001587]
[-57.88840103 -138.20726013]
[-54.17422485 -153.18084717]
[-42.93865204 -163.75276184]
[-27.76691818 -166.54956055]
[-13.50026608 -160.67877197]
[-4.69113255 -148.01374817]
[-4.15048027 -132.59585571]
[-12.05082989 -119.34489441]
[-5.27579165 -105.96211243]
[1.49924648 -92.57933044]
[8.39016914 -79.25585175]
[15.39645863 -65.99266815]
[22.40274811 -52.72949219]
[29.40903664 -39.46631241]
[36.41532516 -26.20313454]
[52.71972656 -24.40342140]
[64.86695099 -13.13436031]
[67.94389343 3.31583118]
[60.54576874 18.51217270]
[67.78119659 31.65175247]
[75.01662445 44.79133224]
[82.25205231 57.93091202]
[89.48748779 71.07049561]
[121.72502136 86.26719666]
[136.65672302 84.83743286]
[142.76513672 72.46412659]
[154.10377502 64.79152679]
[167.64521790 63.73886108]
[179.83728027 69.47480011]
[187.53483582 80.40127563]
[202.48910522 79.23087311]
[217.44337463 78.06047821]
[232.39764404 76.89007568]
[238.09219360 73.44599152]
[243.80914307 73.41934967]
[247.88969421 75.94779205]
[262.87557983 75.29711151]
[277.86145020 74.64643860]
[292.84732056 73.99575806]
[307.79089355 72.69562531]
[322.66397095 70.74848938]
[337.53704834 68.80135345]
[352.41012573 66.85421753]
[367.28323364 64.90708160]
[382.12026978 62.70209885]
[396.91680908 60.23993683]
[411.71334839 57.77777481]
[426.48797607 55.18729782]
[435.46221924 42.45540619]
[450.46112061 39.90850067]
[462.54373169 48.54251099]
[477.29531860 45.82391357]
[492.04690552 43.10531235]
[506.79849243 40.38671494]
[518.92150879 29.34294510]
[534.46295166 34.57702637]
[537.43511963 50.70458603]
[524.78051758 61.13497162]
[509.51708984 55.13829803]
[494.76550293 57.85689926]
[480.01391602 60.57549667]
[465.26232910 63.29409409]
[457.05133057 75.66805267]
[442.12985229 78.63524628]
[429.20657349 69.93888092]
[423.18209839 74.25493622]
[414.17553711 72.57431793]
[399.37896729 75.03648376]
[384.58242798 77.49864197]
[381.11291504 80.81621552]
[375.51400757 81.97229004]
[369.23034668 79.78016663]
[354.35726929 81.72730255]
[339.48419189 83.67443848]
[324.61111450 85.62157440]
[309.73800659 87.56871033]
[319.74429321 98.74343109]
[317.42218018 113.56259918]
[304.47735596 121.14095306]
[290.41830444 115.91188812]
[285.57196045 101.71636200]
[293.49801636 88.98163605]
[278.51211548 89.63231659]
[263.52624512 90.28299713]
[248.54037476 90.93367004]
[233.56803894 91.84434509]
[218.61376953 93.01474762]
[203.65950012 94.18514252]
[188.70523071 95.35553741]
[180.58569336 109.60845947]
[165.42269897 116.28903961]
[149.10153198 112.58826447]
[138.08648682 99.76913452]
[123.15478516 101.19890594]
[137.10568237 106.71002197]
[140.69268799 121.27482605]
[130.89666748 132.63430786]
[115.96279144 131.22735596]
[108.46070862 118.23809052]
[109.24140930 133.21775818]
[110.02211761 148.19743347]
[110.80282593 163.17710876]
[111.58353424 178.15676880]
[120.96018219 191.61077881]
[113.75296783 206.34129333]
[97.37604523 207.19482422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[4 174]
[5 173]
[6 49]
[7 48]
[8 47]
[9 46]
[11 45]
[12 44]
[13 43]
[14 42]
[15 41]
[16 39]
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[25 29]
[55 97]
[56 96]
[57 95]
[58 94]
[59 93]
[64 89]
[65 88]
[66 87]
[67 86]
[68 85]
[70 84]
[71 83]
[72 82]
[98 168]
[99 167]
[104 163]
[105 162]
[106 161]
[107 160]
[110 159]
[111 158]
[112 157]
[113 156]
[114 150]
[115 149]
[116 148]
[117 147]
[118 146]
[119 143]
[120 142]
[121 141]
[122 139]
[125 136]
[126 135]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
