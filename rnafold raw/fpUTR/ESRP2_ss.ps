%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAGCCGCCCCGCCCCGCGGGGCGCCACGGGCGGGUCUUGGCAGCGCCCACUGAGCCAGCCGGGCCGCAGGUGCCGCCCCCGAUACACGGUGUCCCGCCCAAGCUGAUCCGCGUCUGCGGUCGGUCGGUGCGUGCGUGCGCCUCGUCGGUCCGCGUGUCUGGCCGAGAGCCCCCUUCCUCUGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[79.89955139 120.91429901]
[72.40188599 120.72731781]
[65.01010895 133.77958679]
[64.94220734 149.60064697]
[51.93777466 156.86245728]
[44.54599380 169.91473389]
[43.03498459 178.94296265]
[36.92132950 183.12103271]
[29.31362724 196.04862976]
[21.70592308 208.97622681]
[14.09821796 221.90383911]
[6.49051428 234.83143616]
[-1.11718953 247.75903320]
[-8.72489357 260.68664551]
[-11.54721165 277.40402222]
[-28.39256668 279.31982422]
[-34.89676666 263.66314697]
[-21.65249252 253.07893372]
[-14.04478931 240.15133667]
[-6.43708563 227.22372437]
[1.17061853 214.29612732]
[8.77832222 201.36853027]
[16.38602638 188.44093323]
[23.99373055 175.51333618]
[31.49373055 162.52294922]
[38.88550949 149.47068787]
[38.42470169 134.58320618]
[51.95783997 126.38780212]
[59.34961700 113.33554077]
[50.29255295 101.37854767]
[35.72613144 104.95897675]
[21.15971375 108.53939819]
[6.59329414 112.11981964]
[-7.97312498 115.70024109]
[-20.95029068 128.75216675]
[-37.59869385 123.22811890]
[-52.10358810 127.05016327]
[-63.36027145 138.97572327]
[-79.25182343 134.92718506]
[-83.43036652 119.06932068]
[-71.59738922 107.71535492]
[-55.92563248 112.54527283]
[-41.42073441 108.72322845]
[-35.05105591 98.42560577]
[-22.98339081 95.13040924]
[-11.55354786 101.13381958]
[3.01287103 97.55339813]
[17.57929039 93.97297668]
[32.14570999 90.39255524]
[46.71212769 86.81213379]
[61.83129501 75.53479767]
[77.68762207 72.03247070]
[91.10836792 75.33538055]
[99.69009399 83.34352112]
[102.15785217 93.23551178]
[108.66610718 79.72097778]
[107.68270874 63.93036270]
[120.17593384 55.82057571]
[126.68418884 42.30604172]
[121.69902039 27.54847527]
[128.49183655 13.93552876]
[142.59164429 9.27387619]
[149.09989929 -4.24065685]
[155.60815430 -17.75518990]
[162.11640930 -31.26972389]
[168.62466431 -44.78425598]
[175.13291931 -58.29878998]
[181.64117432 -71.81332397]
[188.03689575 -85.38147736]
[194.20619202 -99.05406952]
[200.26165771 -112.77745819]
[206.31712341 -126.50084686]
[212.37257385 -140.22422791]
[218.42803955 -153.94761658]
[224.48350525 -167.67100525]
[230.42469788 -181.44424438]
[236.25122070 -195.26638794]
[242.07774353 -209.08853149]
[236.80496216 -216.26800537]
[234.59375000 -224.80204773]
[235.69357300 -233.45648193]
[239.88006592 -241.00555420]
[246.49659729 -246.40554810]
[243.76919556 -261.15548706]
[241.04179382 -275.90545654]
[238.31439209 -290.65542603]
[235.58699036 -305.40536499]
[226.76145935 -319.88110352]
[238.22830200 -332.36898804]
[253.40251160 -324.80728149]
[250.33694458 -308.13278198]
[253.06434631 -293.38281250]
[255.79174805 -278.63287354]
[258.51916504 -263.88290405]
[261.24655151 -249.13294983]
[263.28100586 -248.71385193]
[265.26815796 -248.10891724]
[274.71765137 -259.75827026]
[284.16714478 -271.40759277]
[293.51947021 -283.13507080]
[302.77404785 -294.93988037]
[302.00283813 -307.82736206]
[309.96969604 -317.47183228]
[321.97579956 -319.04257202]
[331.42529297 -330.69189453]
[340.87478638 -342.34124756]
[350.32427979 -353.99057007]
[359.77377319 -365.63992310]
[362.75775146 -374.29373169]
[369.47842407 -377.40264893]
[379.12023926 -388.89331055]
[388.76205444 -400.38397217]
[398.40386963 -411.87463379]
[400.71713257 -428.10983276]
[416.03265381 -433.97216797]
[428.59512329 -423.43099976]
[425.48135376 -407.33016968]
[409.89453125 -402.23284912]
[400.25271606 -390.74215698]
[390.61090088 -379.25149536]
[380.96908569 -367.76083374]
[371.42312622 -356.19042969]
[361.97363281 -344.54107666]
[352.52413940 -332.89175415]
[343.07464600 -321.24240112]
[333.62515259 -309.59307861]
[331.81307983 -292.14599609]
[314.57882690 -285.68530273]
[305.32427979 -273.88052368]
[303.66857910 -266.66305542]
[295.81646729 -261.95809937]
[286.36697388 -250.30877686]
[276.91748047 -238.65943909]
[277.43881226 -214.84471130]
[255.89988708 -203.26200867]
[250.07336426 -189.43986511]
[244.24684143 -175.61772156]
[244.54634094 -168.21885681]
[238.20689392 -161.61555481]
[232.15142822 -147.89216614]
[226.09596252 -134.16877747]
[220.04051208 -120.44538116]
[213.98504639 -106.72199249]
[207.92958069 -92.99860382]
[208.10606384 -85.59577942]
[201.65773010 -79.09875488]
[201.71113586 -71.69401550]
[195.15571594 -65.30506897]
[188.64746094 -51.79053116]
[182.13920593 -38.27600098]
[175.63095093 -24.76146698]
[169.12268066 -11.24693394]
[162.61442566 2.26759911]
[156.10617065 15.78213215]
[161.25263977 29.71229935]
[154.84486389 43.51066971]
[140.19871521 48.81430054]
[133.69046021 62.32883072]
[135.13937378 77.15279388]
[122.18064117 86.22923279]
[115.67238617 99.74376678]
[115.79705048 114.74324799]
[122.52903748 128.14773560]
[129.26101685 141.55223083]
[135.99301147 154.95671082]
[142.72500610 168.36120605]
[149.56816101 181.70928955]
[156.52201843 195.00003052]
[163.47587585 208.29077148]
[170.42973328 221.58151245]
[185.80015564 223.70988464]
[196.96069336 234.49050903]
[199.61990356 249.77803040]
[192.75526428 263.69406128]
[179.00636292 270.88763428]
[163.65994263 268.59265137]
[152.61700439 257.69158936]
[150.12379456 242.37612915]
[157.13899231 228.53536987]
[150.18513489 215.24462891]
[143.23127747 201.95388794]
[136.27742004 188.66314697]
[130.37962341 184.18553162]
[129.32051086 175.09320068]
[122.58852386 161.68870544]
[115.85653687 148.28421021]
[109.12454987 134.87973022]
[102.39255524 121.47523499]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 29]
[3 28]
[5 26]
[6 25]
[8 24]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[14 18]
[30 50]
[31 49]
[32 48]
[33 47]
[34 46]
[36 43]
[37 42]
[55 161]
[56 160]
[58 158]
[59 157]
[62 154]
[63 153]
[64 152]
[65 151]
[66 150]
[67 149]
[68 148]
[69 146]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[76 137]
[77 136]
[78 135]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[97 133]
[98 132]
[99 131]
[100 129]
[101 128]
[104 126]
[105 125]
[106 124]
[107 123]
[108 122]
[110 121]
[111 120]
[112 119]
[113 118]
[162 188]
[163 187]
[164 186]
[165 185]
[166 184]
[167 182]
[168 181]
[169 180]
[170 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
