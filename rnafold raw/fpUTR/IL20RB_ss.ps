%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUUACAUUUUCUCUGGAACUCUCCUAGGCCACUCCCUGCUGAUGCAACAUCUGGGUUUGGGCAGAAAGGAGGGUGCUUCGGAGCCCGCCCUUUCUGAGCUUCCUGGGCCGGCUCUAGAACAAUUCAGGCUUCGCUGCGACUCAGACCUCAGCUCCAACAUAUGCAUUCUGAAGAAAGAUGGCUGAGAUGGACAGAAUGCUUUAUUUUGGAAAGAAACAAUGUUCUAGGUCAAACUGAGUCUACCAA\
) } def
/len { sequence length } bind def

/coor [
[128.28976440 181.41831970]
[130.19787598 196.42546082]
[127.37313080 211.28735352]
[120.09228516 224.54798889]
[109.06864166 234.90823364]
[95.38217926 241.35307312]
[80.37376404 243.25111389]
[65.51376343 240.41641235]
[52.25800323 233.12669373]
[41.90515900 222.09609985]
[35.46949005 208.40533447]
[33.58150101 193.39564514]
[36.42615509 178.53755188]
[43.72476196 165.28668213]
[54.76227951 154.94122314]
[68.45736694 148.51472473]
[83.46831512 146.63679504]
[86.27902985 131.90249634]
[89.08975220 117.16818237]
[78.04875946 104.38378143]
[79.98428345 85.99684143]
[65.83942413 90.98913574]
[51.69456482 95.98143005]
[37.54970551 100.97372437]
[23.40484810 105.96601868]
[9.25999069 110.95831299]
[-4.88486719 115.95060730]
[-19.02972603 120.94289398]
[-31.99149323 138.02783203]
[-52.09173203 133.28561401]
[-62.07451630 145.55975342]
[-76.75632477 143.05101013]
[-90.70297241 148.57289124]
[-104.64962006 154.09475708]
[-110.99038696 168.32263184]
[-125.21292877 173.72390747]
[-138.73796082 167.59127808]
[-152.68460083 173.11314392]
[-166.63125610 178.63502502]
[-180.35987854 184.67861938]
[-193.85095215 191.23535156]
[-207.34202576 197.79208374]
[-216.07812500 211.67057800]
[-232.45274353 210.77384949]
[-239.62106323 196.02436829]
[-230.20895386 182.59513855]
[-213.89877319 184.30101013]
[-200.40768433 177.74427795]
[-186.91661072 171.18753052]
[-200.76719666 165.42897034]
[-206.59671021 151.60807800]
[-201.05409241 137.66966248]
[-187.32546997 131.62608337]
[-173.30259705 136.95140076]
[-167.04637146 150.58444214]
[-172.15312195 164.68836975]
[-158.20648193 159.16650391]
[-144.25982666 153.64463806]
[-138.59858704 139.91561890]
[-124.53335571 134.11698914]
[-110.17148590 140.14810181]
[-96.22483826 134.62623596]
[-82.27819061 129.10437012]
[-73.29296875 117.22518921]
[-57.61360168 119.33896637]
[-55.47516632 110.76695251]
[-49.55244827 104.02762604]
[-41.07048798 100.70555878]
[-31.87304497 101.65803528]
[-24.02201843 106.79804230]
[-9.87716007 101.80574799]
[4.26769781 96.81345367]
[18.41255569 91.82115936]
[32.55741501 86.82886505]
[46.70227051 81.83657074]
[60.84712982 76.84427643]
[74.99198914 71.85198975]
[81.03558350 58.12336731]
[75.16497803 44.31989288]
[60.78225327 38.33867645]
[55.02526093 24.25635910]
[60.81607056 10.58148670]
[54.94546509 -3.22199082]
[49.07485962 -17.02546883]
[43.20425415 -30.82894707]
[37.33364868 -44.63242340]
[31.46304512 -58.43590164]
[25.59243965 -72.23937988]
[9.50438499 -71.98703766]
[-5.41097736 -77.91842651]
[-16.87693405 -89.09627533]
[-23.15556526 -103.78495789]
[-23.31111908 -119.71994019]
[-17.34936714 -134.45687866]
[-6.21216536 -145.74658203]
[-12.25576210 -159.47520447]
[-18.29935837 -173.20382690]
[-24.34295464 -186.93243408]
[-30.47269058 -200.62281799]
[-36.68832397 -214.27439880]
[-42.90395737 -227.92599487]
[-49.11959076 -241.57757568]
[-55.33522797 -255.22917175]
[-70.61745453 -257.34033203]
[-82.31741333 -267.39590454]
[-86.70169830 -282.18716431]
[-82.37128448 -296.99432373]
[-70.70800018 -307.09240723]
[-55.43355942 -309.25918579]
[-41.42197800 -302.80325317]
[-33.14429474 -289.78466797]
[-33.24189758 -274.35760498]
[-41.68363571 -261.44479370]
[-35.46800232 -247.79321289]
[-29.25236893 -234.14161682]
[-23.03673553 -220.49003601]
[-16.82110214 -206.83843994]
[-11.20343018 -202.06544495]
[-10.61433792 -192.97602844]
[-4.57074118 -179.24742126]
[1.47285557 -165.51879883]
[7.51645231 -151.79017639]
[21.51160812 -152.63385010]
[34.98397827 -148.64521790]
[46.31217194 -140.28306580]
[54.12562943 -128.53382874]
[57.47040176 -114.79517365]
[55.92560577 -100.70984650]
[49.65626144 -87.96916199]
[39.39591980 -78.10998535]
[45.26652145 -64.30650330]
[51.13712692 -50.50302887]
[57.00773239 -36.69955063]
[62.87833786 -22.89607430]
[68.74893951 -9.09259605]
[74.61954498 4.71088171]
[88.48649597 10.02532864]
[94.63675690 23.94038963]
[88.96846008 38.44928741]
[94.83906555 52.25276566]
[106.86256409 61.22134018]
[121.76673889 62.91418457]
[136.67091370 64.60703278]
[151.57507324 66.29987335]
[166.47924805 67.99272156]
[181.38340759 69.68556976]
[196.32542419 71.00333405]
[211.29582214 71.94519043]
[226.26622009 72.88705444]
[241.23661804 73.82891083]
[256.20703125 74.77076721]
[254.48544312 60.87491989]
[261.05450439 49.10514069]
[272.83505249 43.71339417]
[285.01123047 46.22586060]
[292.99221802 55.06592178]
[307.94958496 53.93601990]
[322.90698242 52.80611801]
[337.86434937 51.67621613]
[352.82174683 50.54631424]
[365.99987793 41.79147339]
[379.27380371 48.54808426]
[394.23120117 47.41818237]
[409.18859863 46.28828049]
[424.16769409 35.55800247]
[439.67059326 43.80447388]
[454.61260986 42.48670578]
[469.55462646 41.16893768]
[484.49661255 39.85116959]
[499.43862915 38.53340149]
[514.38061523 37.21563339]
[529.32263184 35.89786530]
[544.26464844 34.58009720]
[547.03289795 19.73963737]
[553.70343018 6.19687796]
[563.78131104 -5.04321527]
[576.51855469 -13.14655399]
[590.97009277 -17.51181602]
[606.06353760 -17.81506920]
[620.67871094 -14.03381252]
[633.73126221 -6.44863892]
[644.25244141 4.37758207]
[651.46160889 17.64147186]
[654.82373047 32.35876083]
[654.08935547 47.43733215]
[649.31298828 61.75825119]
[640.84899902 74.25881195]
[629.32556152 84.01139069]
[615.59771729 90.29228210]
[600.68426514 92.63540649]
[585.69177246 90.86687469]
[571.73278809 85.11793518]
[559.84326172 75.81520081]
[550.90533447 63.64897919]
[545.58239746 49.52210236]
[530.64038086 50.83987045]
[515.69842529 52.15763855]
[500.75637817 53.47540665]
[485.81439209 54.79317474]
[470.87237549 56.11094284]
[455.93038940 57.42871094]
[440.98837280 58.74647903]
[432.99545288 67.80491638]
[420.57546997 69.03854370]
[410.31848145 61.24566269]
[395.36111450 62.37556458]
[380.40371704 63.50547028]
[368.29544067 72.17948914]
[353.95162964 65.50369263]
[338.99426270 66.63359833]
[324.03686523 67.76349640]
[309.07949829 68.89340210]
[294.12210083 70.02330780]
[289.80108643 79.84897614]
[280.02856445 86.53375244]
[289.87734985 97.84752655]
[299.72613525 109.16129303]
[309.57492065 120.47506714]
[325.35678101 121.31633759]
[335.85910034 133.12637329]
[334.85104370 148.89846802]
[322.93063354 159.27534485]
[307.17004395 158.10057068]
[296.91979980 146.07112122]
[298.26113892 130.32385254]
[288.41235352 119.01008606]
[278.56356812 107.69631195]
[268.71478271 96.38253784]
[255.26516724 89.74116516]
[240.29476929 88.79930878]
[225.32435608 87.85745239]
[210.35395813 86.91559601]
[195.38356018 85.97373962]
[193.20410156 87.69829559]
[190.21873474 88.67463684]
[186.70504761 88.59467316]
[183.04589844 87.25493622]
[179.69056702 84.58973694]
[164.78639221 82.89688873]
[149.88223267 81.20404816]
[134.97805786 79.51119995]
[120.07389069 77.81835175]
[105.16972351 76.12551117]
[120.82458496 90.08211517]
[119.36401367 109.80223083]
[103.82405853 119.97890472]
[101.01334381 134.71321106]
[98.20262146 149.44752502]
[111.46813202 156.71946716]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 248]
[18 247]
[19 246]
[21 77]
[22 76]
[23 75]
[24 74]
[25 73]
[26 72]
[27 71]
[28 70]
[30 65]
[32 63]
[33 62]
[34 61]
[37 58]
[38 57]
[39 56]
[40 49]
[41 48]
[42 47]
[78 140]
[79 139]
[82 136]
[83 135]
[84 134]
[85 133]
[86 132]
[87 131]
[88 130]
[95 122]
[96 121]
[97 120]
[98 119]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[141 243]
[142 242]
[143 241]
[144 240]
[145 239]
[146 238]
[147 233]
[148 232]
[149 231]
[150 230]
[151 229]
[156 213]
[157 212]
[158 211]
[159 210]
[160 209]
[162 207]
[163 206]
[164 205]
[166 202]
[167 201]
[168 200]
[169 199]
[170 198]
[171 197]
[172 196]
[173 195]
[215 228]
[216 227]
[217 226]
[218 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
