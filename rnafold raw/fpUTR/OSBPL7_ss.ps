%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCAGCUGCUGCCACUGCUCAGCGCGGUGAGGAGGGAGCCGGUGACUCGGAGACGGUGACUCAGAGGCAGAGCGGCGCAAGGGCCAAGGAGUACUGGCGUCCAUGGACCCUGGGGACCCCGUCAGGAGCAGGUGACAUCCUUCCCCUUCCACCCUGCUCCCUGCUCUACAUCCCCAGCAGGGAGUGGCCUCUCCCUUCUCC\
) } def
/len { sequence length } bind def

/coor [
[50.62348175 252.06434631]
[47.18922424 266.66592407]
[43.75496292 281.26748657]
[40.32070541 295.86904907]
[36.88644791 310.47064209]
[42.13216400 326.00814819]
[31.09747124 338.13940430]
[15.13391781 334.38482666]
[10.66343689 318.60678101]
[22.28487778 307.03637695]
[25.71913528 292.43478394]
[29.15339279 277.83322144]
[32.58765030 263.23165894]
[36.02191162 248.63008118]
[22.64634132 241.84082031]
[12.88706684 253.23188782]
[3.12779188 264.62295532]
[-6.63148260 276.01403809]
[-16.39075661 287.40512085]
[-26.15003204 298.79617310]
[-26.35451698 314.83795166]
[-39.11183929 324.56573486]
[-54.63567352 320.51727295]
[-61.01745987 305.79815674]
[-53.36164093 291.69964600]
[-37.54110718 289.03692627]
[-27.78182983 277.64584351]
[-18.02255630 266.25476074]
[-8.26328182 254.86369324]
[1.49599278 243.47262573]
[11.25526714 232.08154297]
[19.44421577 219.51408386]
[25.92272568 205.98526001]
[32.40123367 192.45645142]
[38.87974167 178.92762756]
[45.35824966 165.39880371]
[51.83675766 151.86999512]
[58.31526566 138.34117126]
[64.79377747 124.81235504]
[58.41962814 111.23405457]
[43.87267685 107.57534790]
[29.32572174 103.91664124]
[14.77876759 100.25793457]
[-0.49183092 104.39549255]
[-10.94746685 93.78752899]
[-26.81805801 104.12552643]
[-44.89670944 99.66239166]
[-53.82122421 83.68361664]
[-68.47395325 80.47461700]
[-83.12667847 77.26562500]
[-98.26261139 81.87148285]
[-109.03996277 71.59052277]
[-123.69268799 68.38153076]
[-138.34541321 65.17253113]
[-150.61572266 74.86652374]
[-166.24490356 74.35366821]
[-177.85331726 63.87613297]
[-179.95982361 48.38108444]
[-171.56980896 35.18480682]
[-156.64477539 30.51818466]
[-142.23187256 36.58465195]
[-135.13641357 50.51980972]
[-120.48369598 53.72880554]
[-105.83097076 56.93780136]
[-91.74308777 52.10241699]
[-79.91767883 62.61289978]
[-65.26495361 65.82189178]
[-50.61222839 69.03089142]
[-42.56284714 60.93630600]
[-31.49023247 57.70151520]
[-20.11510658 60.24195862]
[-11.29106236 68.03894806]
[-7.28876066 79.24057007]
[6.94134235 74.84131622]
[18.43747330 85.71098328]
[32.98442841 89.36968994]
[47.53137970 93.02838898]
[62.07833481 96.68709564]
[65.41524506 79.63050079]
[76.39772797 65.00672150]
[93.45897675 56.20537949]
[113.55927277 55.67575836]
[111.48693085 40.81960297]
[109.41458130 25.96344566]
[107.34223938 11.10728931]
[105.15556335 -3.73247004]
[102.85469055 -18.55495262]
[100.55381775 -33.37743378]
[90.79125214 -45.82744980]
[96.48472595 -59.59093857]
[94.18385315 -74.41342163]
[91.88297272 -89.23590088]
[89.46804047 -104.04022980]
[86.93917847 -118.82552338]
[76.05206299 -131.08940125]
[81.48537445 -146.56231689]
[97.64978790 -149.32705688]
[107.91674042 -136.53950500]
[101.72447205 -121.35437775]
[104.25332642 -106.56908417]
[108.48201752 -100.50260162]
[106.70545959 -91.53678131]
[109.00633240 -76.71429443]
[111.30720520 -61.89181519]
[120.90519714 -50.50199890]
[115.37629700 -35.67831039]
[117.67716980 -20.85582733]
[119.97804260 -6.03334475]
[124.11280823 0.09753785]
[122.19839478 9.03494358]
[124.27073669 23.89109993]
[126.34308624 38.74725723]
[128.41543579 53.60341263]
[142.36038208 59.12957764]
[154.04658508 49.72571945]
[165.73278809 40.32186127]
[177.41900635 30.91800499]
[189.10520935 21.51414871]
[186.40022278 5.20502424]
[192.25399780 -10.15539837]
[204.98097229 -20.40995789]
[221.04936218 -22.83454323]
[236.06100464 -16.86123848]
[247.60101318 -26.44394112]
[259.14102173 -36.02664185]
[270.68103027 -45.60934448]
[269.54373169 -61.08468628]
[277.74844360 -74.25521088]
[292.14022827 -80.05658722]
[307.18518066 -76.25805664]
[317.09820557 -64.32024384]
[318.06756592 -48.83347702]
[309.72048950 -35.75273514]
[295.26660156 -30.10782433]
[280.26373291 -34.06933594]
[268.72372437 -24.48663330]
[257.18371582 -14.90393066]
[245.64370728 -5.32122898]
[248.82872009 7.96237707]
[245.96472168 21.38654900]
[237.55508423 32.31860733]
[225.19641113 38.58954620]
[211.27561951 38.92424774]
[198.50906372 33.20035553]
[186.82286072 42.60421371]
[175.13665771 52.00807190]
[163.45043945 61.41193008]
[151.76423645 70.81578827]
[152.05291748 78.31022644]
[166.81697083 75.66023254]
[181.41200256 72.19824219]
[190.21148682 84.34604645]
[182.37236023 97.13464355]
[167.55442810 94.80554962]
[152.63026428 93.29911041]
[152.91894531 100.79355621]
[165.29391479 109.27059937]
[177.66886902 117.74765015]
[190.04383850 126.22469330]
[202.41879272 134.70173645]
[214.79376221 143.17878723]
[227.16871643 151.65583801]
[239.54368591 160.13287354]
[251.91864014 168.60992432]
[264.29360962 177.08697510]
[276.66857910 185.56401062]
[289.04351807 194.04106140]
[302.86120605 187.33526611]
[318.17938232 188.45272827]
[330.87756348 197.09283447]
[337.54000854 210.93145752]
[336.37457275 226.24606323]
[327.69470215 238.91711426]
[313.83526611 245.53614807]
[298.52438354 244.32269287]
[285.88058472 235.60313416]
[279.30502319 221.72302246]
[280.56649780 206.41603088]
[268.19152832 197.93898010]
[255.81655884 189.46192932]
[243.44158936 180.98489380]
[231.06663513 172.50784302]
[218.69166565 164.03079224]
[206.31671143 155.55374146]
[193.94174194 147.07670593]
[181.56678772 138.59965515]
[169.19181824 130.12260437]
[156.81686401 121.64556122]
[144.44189453 113.16851807]
[135.14935303 127.60683441]
[121.65637207 137.19181824]
[106.16650391 140.91835022]
[91.01593018 138.69396973]
[78.32259369 131.29086304]
[71.84408569 144.81968689]
[65.36557770 158.34849548]
[58.88706970 171.87731934]
[52.40856171 185.40612793]
[45.93004990 198.93495178]
[39.45154190 212.46377563]
[32.97303391 225.99258423]
[39.49719238 228.40435791]
[45.37430573 233.80352783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[32 201]
[33 200]
[34 199]
[35 198]
[36 197]
[37 196]
[38 195]
[39 194]
[40 78]
[41 77]
[42 76]
[43 75]
[45 73]
[48 68]
[49 67]
[50 66]
[52 64]
[53 63]
[54 62]
[82 113]
[83 112]
[84 111]
[85 110]
[86 108]
[87 107]
[88 106]
[90 104]
[91 103]
[92 102]
[93 100]
[94 99]
[114 148]
[115 147]
[116 146]
[117 145]
[118 144]
[123 138]
[124 137]
[125 136]
[126 135]
[156 189]
[157 188]
[158 187]
[159 186]
[160 185]
[161 184]
[162 183]
[163 182]
[164 181]
[165 180]
[166 179]
[167 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
