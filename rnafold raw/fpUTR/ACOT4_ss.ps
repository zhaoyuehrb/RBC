%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGGCGCCACACCUUGCGCGCCCCGGGGCCCAAGGAGACGACCCUGAAGAGGAGCCUGGCUACUUUUGCCUCAGACGAGUCCGGAGCGCCGGGUUAACCGGUCUGAAGUCCCAGGGGCUUUCUGGGACUGCUCAGCCACCGGCAGCUUCCGGCACCAGGGGACGCCGGACGCCGUCCGGACAUUCGGCGCGCUUGCCACGAUCUUGGACGGGUCUCGGGCCUCGACCUUUGAAUUCCCCGCUCCGGCUCCAAG\
) } def
/len { sequence length } bind def

/coor [
[139.56962585 353.38558960]
[140.12390137 338.39584351]
[132.62901306 338.11871338]
[127.73094177 352.29644775]
[122.83285522 366.47421265]
[117.93477631 380.65197754]
[113.03669739 394.82974243]
[108.13861847 409.00747681]
[103.32796478 423.21514893]
[98.60491943 437.45217896]
[104.48601532 452.37838745]
[96.35846710 466.21032715]
[80.45703888 468.33731079]
[68.97993469 457.12768555]
[70.73141479 441.18051147]
[84.36789703 432.72912598]
[89.09093475 418.49209595]
[88.21656799 411.17462158]
[93.96086121 404.10940552]
[98.85894012 389.93164062]
[103.75701904 375.75390625]
[108.65509796 361.57614136]
[113.55318451 347.39837646]
[118.45126343 333.22061157]
[120.47784424 318.35815430]
[119.55442810 303.38659668]
[118.63101196 288.41503906]
[117.70760345 273.44351196]
[116.78418732 258.47195435]
[115.86077118 243.50039673]
[114.93736267 228.52885437]
[114.01394653 213.55729675]
[111.65485382 210.97239685]
[110.41642761 207.12657166]
[110.87329865 202.55245972]
[113.34345245 198.01739502]
[112.97389221 183.02194214]
[112.60432434 168.02650452]
[112.23476410 153.03105164]
[111.86520386 138.03561401]
[99.36045074 140.24647522]
[86.66446686 138.41072083]
[75.06661224 132.63296509]
[65.77019501 123.42225647]
[51.81675339 128.92694092]
[37.86331558 134.43161011]
[28.09037971 147.60058594]
[11.83247185 145.45292664]
[5.81433249 130.19795227]
[16.22690773 117.52868652]
[32.35863113 120.47817993]
[46.31207275 114.97349548]
[60.26551056 109.46881104]
[59.52661133 94.48702240]
[45.09922791 90.38208008]
[30.67184258 86.27713776]
[16.24445915 82.17218781]
[1.81707418 78.06724548]
[-12.61031055 73.96230316]
[-27.03769493 69.85735321]
[-41.46508026 65.75241089]
[-53.07414627 71.33085632]
[-64.99361420 67.63478851]
[-71.01004028 57.16083145]
[-85.38575745 52.87845612]
[-99.76147461 48.59608459]
[-114.13719177 44.31370926]
[-129.57196045 47.78915787]
[-139.56059265 36.74034882]
[-154.99536133 40.21579742]
[-164.98400879 29.16698456]
[-179.35972595 24.88461113]
[-193.73544312 20.60223770]
[-209.55316162 24.93023872]
[-221.01828003 13.20492077]
[-216.33647156 -2.51171398]
[-200.32395935 -6.05173969]
[-189.45306396 6.22651911]
[-175.07734680 10.50889301]
[-160.70162964 14.79126644]
[-146.29512024 11.00951195]
[-135.27822876 22.36462784]
[-120.87171173 18.58287430]
[-109.85482025 29.93799019]
[-95.47910309 34.22036362]
[-81.10338593 38.50273895]
[-66.72766876 42.78511047]
[-49.88624191 37.81004715]
[-37.36013412 51.32502365]
[-22.93275070 55.42996979]
[-8.50536537 59.53491592]
[5.92201900 63.63985825]
[20.34940338 67.74480438]
[34.77678680 71.84974670]
[49.20417404 75.95469666]
[63.63155746 80.05963898]
[68.35264587 71.25644684]
[75.22644806 63.60303116]
[83.96448517 57.62893677]
[81.57234955 42.82090759]
[79.18021393 28.01288033]
[76.78807068 13.20485306]
[74.39593506 -1.60317445]
[71.82154846 -16.38060760]
[69.06530762 -31.12520409]
[66.30906677 -45.86980057]
[63.55282211 -60.61439896]
[60.61514282 -75.32392120]
[57.49646759 -89.99613190]
[54.37779236 -104.66835022]
[51.25911713 -119.34056091]
[48.14044189 -134.01277161]
[45.02176666 -148.68498230]
[41.90309143 -163.35720825]
[38.78441238 -178.02941895]
[35.66573715 -192.70162964]
[23.04817200 -202.61004639]
[23.07204056 -218.65307617]
[35.71903610 -228.52389526]
[51.28746414 -224.65045166]
[57.83456039 -210.00411987]
[50.33795166 -195.82031250]
[53.45662689 -181.14808655]
[56.57530212 -166.47587585]
[59.69397736 -151.80366516]
[62.81265259 -137.13145447]
[65.93132782 -122.45923615]
[69.05000305 -107.78702545]
[72.16867828 -93.11480713]
[75.28735352 -78.44259644]
[78.71057892 -75.14893341]
[80.11834717 -69.67936707]
[78.29741669 -63.37063980]
[81.05366516 -48.62604523]
[83.80990601 -33.88144684]
[86.56614685 -19.13685036]
[89.90718842 -15.75984764]
[91.17977142 -10.25725937]
[89.20396423 -3.99531126]
[91.59609985 10.81271648]
[93.98823547 25.62074471]
[96.38037872 40.42877197]
[98.77251434 55.23679733]
[105.90543365 57.55442810]
[105.90546417 42.55442810]
[120.17132568 37.91921616]
[128.98803711 50.05451584]
[120.17128754 62.18968201]
[127.30420685 64.50730896]
[137.94342041 53.93342590]
[148.58264160 43.35954285]
[159.22186279 32.78565979]
[169.86108398 22.21177673]
[180.50030518 11.63789272]
[184.92205811 -6.25081921]
[202.06776428 -10.04681396]
[212.57591248 -20.75096512]
[219.35717773 -36.28965378]
[236.16584778 -34.07493973]
[238.69079590 -17.31006432]
[223.28005981 -10.24282074]
[212.77192688 0.46133187]
[212.57531738 12.53868484]
[203.93295288 21.54114342]
[191.07418823 22.27711296]
[180.43496704 32.85099411]
[169.79574585 43.42487717]
[159.15652466 53.99876022]
[148.51730347 64.57264709]
[137.87809753 75.14653015]
[141.73852539 87.80455017]
[141.66044617 100.50557709]
[137.96179199 112.09927368]
[152.95468140 112.56120300]
[167.94757080 113.02312469]
[182.94046021 113.48505402]
[197.93333435 113.94697571]
[212.92622375 114.40890503]
[227.91911316 114.87083435]
[242.91200256 115.33275604]
[249.80043030 105.68438721]
[260.37686157 100.59938812]
[271.97531128 101.23164368]
[281.73312378 107.30965424]
[287.29760742 117.23217010]
[302.27456665 118.06333923]
[317.25152588 118.89451599]
[328.97122192 108.63360596]
[344.14813232 109.68988037]
[353.85812378 120.92606354]
[368.83508301 121.75723267]
[383.21755981 113.87837982]
[397.08966064 122.62461853]
[396.18096924 138.99856567]
[381.42623901 146.15611267]
[368.00390625 136.73419189]
[353.02694702 135.90301514]
[342.13327026 145.99575806]
[326.93267822 145.36618042]
[316.42034912 133.87147522]
[301.44338989 133.04029846]
[286.46643066 132.20912170]
[273.55639648 145.21623230]
[254.91949463 144.61729431]
[242.45007324 130.32563782]
[227.45718384 129.86372375]
[212.46429443 129.40179443]
[197.47142029 128.93986511]
[182.47853088 128.47793579]
[167.48564148 128.01600647]
[152.49275208 127.55408478]
[137.49986267 127.09216309]
[126.86064911 137.66604614]
[127.23020935 152.66149902]
[127.59977722 167.65693665]
[127.96933746 182.65238953]
[128.33889771 197.64782715]
[128.98548889 212.63389587]
[129.90890503 227.60543823]
[130.83232117 242.57699585]
[131.75573730 257.54855347]
[132.67915344 272.52008057]
[133.60256958 287.49163818]
[134.52597046 302.46319580]
[135.44938660 317.43475342]
[141.81675720 303.85327148]
[143.63401794 288.96374512]
[150.28906250 275.52090454]
[161.02775574 265.04803467]
[174.63316345 258.73199463]
[189.56355286 257.28845215]
[204.12696838 260.88104248]
[216.67311096 269.10263062]
[225.78022766 281.02151489]
[230.41632080 295.28710938]
[230.05599976 310.28277588]
[224.74011230 324.30923462]
[215.07104492 335.77697754]
[202.14451599 343.38650513]
[187.42919922 346.27536011]
[177.10931396 335.38961792]
[180.94694519 349.89038086]
[192.88461304 361.13424683]
[188.85316467 377.03012085]
[172.99980164 381.22573853]
[161.63311768 369.40496826]
[166.44616699 353.72802734]
[162.60853577 339.22723389]
[155.11364746 338.95010376]
[154.55938721 353.93988037]
[154.00511169 368.92962646]
[153.45083618 383.91937256]
[145.47596741 396.62377930]
[138.46107483 383.36511230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 24]
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[9 17]
[10 16]
[25 225]
[26 224]
[27 223]
[28 222]
[29 221]
[30 220]
[31 219]
[32 218]
[36 217]
[37 216]
[38 215]
[39 214]
[40 213]
[44 53]
[45 52]
[46 51]
[54 96]
[55 95]
[56 94]
[57 93]
[58 92]
[59 91]
[60 90]
[61 89]
[64 87]
[65 86]
[66 85]
[67 84]
[69 82]
[71 80]
[72 79]
[73 78]
[99 143]
[100 142]
[101 141]
[102 140]
[103 139]
[104 136]
[105 135]
[106 134]
[107 133]
[108 130]
[109 129]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
[149 170]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[156 162]
[157 161]
[173 212]
[174 211]
[175 210]
[176 209]
[177 208]
[178 207]
[179 206]
[180 205]
[185 202]
[186 201]
[187 200]
[190 197]
[191 196]
[241 248]
[242 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
