%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCGCCUGAACCCCCAGCCUGUGGUUCUCUCCUAGGCCUCAGCCUUUCCUGCCUUUGACUGAAACAGCAGUAUCUUCUAAGCCCUGGGGGCUUCCCCGGGCCCCAGCCCCGACCUAGAACCCGCCCGCUGCCUGCCACGCUGCCACUGCCGCUUCCUCUAUAAAGGGACCUGAGCGUCCGGGCCCAGGGGCUCCGCACAGCAGGUUCUCCCC\
) } def
/len { sequence length } bind def

/coor [
[250.79510498 133.60968018]
[247.38182068 124.53331757]
[232.51255798 122.55723572]
[217.64329529 120.58114624]
[202.77401733 118.60506439]
[185.48599243 127.26889038]
[169.70170593 114.72780609]
[154.78083801 113.18908691]
[139.85997009 111.65036011]
[137.48782349 122.19160461]
[132.26892090 132.21905518]
[124.32938385 140.95448303]
[114.00895691 147.65571594]
[101.84952545 151.67512512]
[88.56761932 152.51431274]
[75.01233673 149.87055969]
[62.11109543 143.67131042]
[50.80668259 134.09335327]
[39.81804276 144.30361938]
[28.82939720 154.51390076]
[17.84075546 164.72418213]
[6.85211182 174.93444824]
[2.69682050 183.06640625]
[-4.37359142 185.21249390]
[-15.51093483 195.26036072]
[-16.07221603 211.05467224]
[-27.69415283 221.76477051]
[-43.48165512 221.03652954]
[-54.06827927 209.30201721]
[-53.17316437 193.52310181]
[-41.32737350 183.06112671]
[-25.55879974 184.12301636]
[-14.42145538 174.07514954]
[-3.35816360 163.94580078]
[7.63047981 153.73553467]
[18.61912346 143.52525330]
[29.60776520 133.31498718]
[40.59640884 123.10470581]
[38.58446121 115.87960815]
[24.13426018 119.90350342]
[9.68406200 123.92740631]
[-4.76613617 127.95130157]
[-17.26574135 136.24345398]
[-29.01452446 126.91790009]
[-23.77578735 112.86244965]
[-8.79003525 113.50110626]
[5.66016388 109.47720337]
[20.11036301 105.45330811]
[34.56056213 101.42941284]
[32.54861069 94.20430756]
[17.86430168 91.14309692]
[3.17999077 88.08188629]
[-11.50431919 85.02066803]
[-24.62650681 93.41387939]
[-39.47487640 90.10018921]
[-47.39565277 77.53846741]
[-62.07996368 74.47724915]
[-75.16176605 83.34527588]
[-90.66667175 80.28368378]
[-99.39589691 67.10884857]
[-96.17054749 51.63717651]
[-82.90415955 43.04773331]
[-67.46745300 46.43648148]
[-59.01874924 59.79293823]
[-44.33443832 62.85415268]
[-32.05414200 54.50371170]
[-17.11855316 57.39903259]
[-8.44310570 70.33635712]
[6.24120426 73.39757538]
[20.92551422 76.45878601]
[35.60982513 79.51999664]
[40.25519180 73.63182831]
[28.47884560 64.34109497]
[16.70250130 55.05036163]
[4.92615604 45.75963211]
[-6.85004520 36.46871567]
[2.44105053 24.69265938]
[14.21688843 33.98328781]
[25.99323273 43.27401733]
[37.76957703 52.56475067]
[49.54592133 61.85548019]
[54.19128799 55.96730804]
[47.79663086 42.39865494]
[41.40197372 28.83000374]
[35.00731277 15.26135063]
[28.51956749 8.83450603]
[28.62001419 1.44625092]
[22.42523003 -12.21481228]
[16.23044586 -25.87587547]
[10.03566170 -39.53693771]
[-3.60502744 -48.63988495]
[-2.27212405 -64.98477173]
[12.66319561 -71.75738525]
[25.83675385 -61.99063873]
[23.69672585 -45.73172379]
[29.89151001 -32.07065964]
[36.08629227 -18.40959549]
[42.28107834 -4.74853277]
[48.57596588 8.86669159]
[54.97062683 22.43534470]
[61.36528397 36.00399780]
[67.75994110 49.57265091]
[106.33200836 46.62998962]
[134.33833313 66.98383331]
[141.39869690 96.72949219]
[156.31956482 98.26821899]
[171.24043274 99.80693817]
[179.26707458 92.47077179]
[189.78923035 90.79634857]
[199.29640198 95.09790802]
[204.75010681 103.73579407]
[219.61936951 105.71188354]
[234.48864746 107.68796539]
[249.35791016 109.66405487]
[265.19583130 95.82852936]
[285.80099487 98.15357971]
[297.81188965 114.69465637]
[312.77151489 115.79469299]
[327.73110962 116.89472961]
[342.69073486 117.99476624]
[357.65032959 119.09480286]
[372.60992432 120.19483948]
[386.94036865 113.49042511]
[399.06594849 122.14025116]
[414.02557373 123.24028778]
[424.28088379 115.42024994]
[436.71679688 116.64306641]
[444.72125244 125.71061707]
[453.54260254 123.34862518]
[459.87222290 127.16075897]
[474.79309082 128.69949341]
[489.71395874 130.23820496]
[503.08419800 118.95574951]
[520.14160156 120.79868317]
[530.38177490 134.14077759]
[545.32366943 135.46029663]
[560.26550293 136.77981567]
[555.44305420 121.17955017]
[560.69036865 102.43470764]
[577.05346680 85.92666626]
[590.80401611 79.93309021]
[600.36303711 67.32613373]
[615.12176514 69.33348083]
[628.87231445 63.33990479]
[638.17449951 49.83431244]
[654.49804688 51.40701294]
[661.05072021 66.44014740]
[651.09161377 79.46891022]
[634.86590576 77.09043121]
[621.11535645 83.08400726]
[612.53985596 95.26226044]
[596.79760742 93.68362427]
[583.04705811 99.67720032]
[585.89239502 114.40486145]
[600.88592529 114.84520721]
[615.87945557 115.28555298]
[630.87298584 115.72590637]
[645.86651611 116.16625214]
[657.19171143 105.14282990]
[672.99322510 105.43974304]
[683.89624023 116.88083649]
[683.43231201 132.67831421]
[671.87658691 143.45980835]
[656.08489990 142.82885742]
[645.42614746 131.15979004]
[630.43261719 130.71943665]
[615.43908691 130.27909851]
[600.44555664 129.83874512]
[585.45202637 129.39839172]
[581.11096191 143.75648499]
[593.83685303 151.69697571]
[606.56274414 159.63746643]
[619.28863525 167.57795715]
[635.09246826 168.31901550]
[641.79437256 181.62068176]
[654.52026367 189.56115723]
[669.85870361 185.75219727]
[683.35467529 193.97622681]
[687.00122070 209.35406494]
[678.63500977 222.76232910]
[663.21948242 226.24612427]
[649.90039062 217.73857117]
[646.57977295 202.28706360]
[633.85388184 194.34658813]
[618.96026611 194.17347717]
[611.34814453 180.30386353]
[598.62225342 172.36337280]
[585.89636230 164.42288208]
[573.17047119 156.48239136]
[558.94598389 151.72166443]
[544.00415039 150.40214539]
[529.06225586 149.08262634]
[520.44085693 158.65686035]
[507.68893433 161.56135559]
[495.41156006 156.51748657]
[488.17523193 145.15907288]
[473.25436401 143.62036133]
[458.33349609 142.08163452]
[443.40173340 140.65246582]
[427.91159058 148.90213013]
[412.92553711 138.19990540]
[397.96591187 137.09986877]
[384.70550537 143.88296509]
[371.50988770 135.15444946]
[356.55029297 134.05441284]
[341.59066772 132.95437622]
[326.63107300 131.85433960]
[311.67147827 130.75430298]
[296.71185303 129.65426636]
[291.85726929 137.64480591]
[284.38055420 143.35449219]
[275.28253174 145.96603394]
[265.80050659 145.08042908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 114]
[3 113]
[4 112]
[5 111]
[7 107]
[8 106]
[9 105]
[18 38]
[19 37]
[20 36]
[21 35]
[22 34]
[24 33]
[25 32]
[50 71]
[51 70]
[52 69]
[53 68]
[56 65]
[57 64]
[82 102]
[83 101]
[84 100]
[85 99]
[87 98]
[88 97]
[89 96]
[90 95]
[117 209]
[118 208]
[119 207]
[120 206]
[121 205]
[122 204]
[124 202]
[125 201]
[128 199]
[130 198]
[131 197]
[132 196]
[135 192]
[136 191]
[137 190]
[140 153]
[141 152]
[143 150]
[144 149]
[154 169]
[155 168]
[156 167]
[157 166]
[158 165]
[170 189]
[171 188]
[172 187]
[173 186]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
