%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCGCAAGUUUGUGCACACGGUCGACUGAGCCAUUGGAAACCCAGCUCACGAACCGCAGCCAGGGAAACGGGAGUUUGCCCAGUUGUCCUUGCGGAGGGGUGUGCGGAAACGCCCGCGAUGGGAACUUUCUGCAGAUCAUGUAAUUUUUUCUGCAGGAUGAAUUAAGAGAAGAGACACUUGCUCAUCAGGC\
) } def
/len { sequence length } bind def

/coor [
[320.34902954 232.82449341]
[320.73071289 217.82936096]
[329.75375366 205.84666443]
[344.05795288 201.33653259]
[330.36798096 195.20590210]
[316.67800903 189.07528687]
[303.87667847 196.64257812]
[288.89688110 195.20388794]
[277.50338745 185.10229492]
[274.20458984 170.05490112]
[260.51461792 163.92428589]
[246.82463074 157.79365540]
[233.13464355 151.66304016]
[218.35661316 153.52285767]
[208.92398071 140.82106018]
[195.23399353 134.69042969]
[181.54402161 128.55981445]
[167.85404968 122.42918396]
[154.16407776 116.29856110]
[140.47409058 110.16793823]
[126.78411865 104.03731537]
[85.29203796 123.80928040]
[70.92477417 128.11994934]
[56.55751801 132.43061829]
[42.22563171 136.85746765]
[27.93005753 141.40022278]
[23.18332291 146.03540039]
[17.63996315 147.36671448]
[13.09749889 145.85049438]
[-1.33768046 149.92793274]
[-15.77285957 154.00538635]
[-30.20803833 158.08283997]
[-44.64321899 162.16029358]
[-48.30159760 165.92343140]
[-52.60863876 167.71778870]
[-56.70207977 167.62721252]
[-59.87898636 166.06690979]
[-74.49514771 169.43855286]
[-89.11130524 172.81018066]
[-100.73141479 184.38192749]
[-116.49015808 179.84384155]
[-120.17628479 163.86434937]
[-107.99783325 152.88175964]
[-92.48294067 158.19403076]
[-77.86678314 154.82238770]
[-63.25062180 151.45075989]
[-48.72066879 147.72511292]
[-34.28548813 143.64765930]
[-19.85031128 139.57020569]
[-5.41513157 135.49276733]
[9.02004719 131.41531372]
[23.38730812 127.10464478]
[37.68288040 122.56188965]
[43.11322784 117.53277588]
[52.24685287 118.06335449]
[66.61411285 113.75268555]
[80.98136902 109.44201660]
[84.82453918 94.94270325]
[74.47868347 84.08161926]
[64.13282776 73.22052765]
[53.78696823 62.35943985]
[43.44111252 51.49835205]
[27.87388229 50.95139313]
[17.53643417 39.78932190]
[18.15381050 24.95172119]
[7.80795336 14.09063244]
[-7.31272030 9.43490601]
[-10.48865509 -5.11716270]
[-20.83451271 -15.97825146]
[-31.18036842 -26.83934021]
[-41.52622604 -37.70042801]
[-57.40295410 -41.80671310]
[-61.52383423 -57.67965698]
[-49.64966202 -68.99053955]
[-33.99556351 -64.10369110]
[-30.66513634 -48.04628754]
[-20.31928062 -37.18519592]
[-9.97342300 -26.32410812]
[0.37243327 -15.46301937]
[14.75310230 -11.58415127]
[18.66904259 3.74477577]
[29.01489830 14.60586452]
[43.86497498 14.70976353]
[54.51186752 25.57707024]
[54.30220032 41.15249252]
[64.64805603 52.01358414]
[74.99391174 62.87467194]
[85.33976746 73.73576355]
[95.68562317 84.59684753]
[109.47308350 78.68871307]
[108.74465179 63.70640945]
[108.01621246 48.72410965]
[107.28778076 33.74180603]
[97.95812988 20.25515938]
[105.21670532 5.54988194]
[121.59650421 4.75350285]
[130.24739075 18.68526840]
[122.27008820 33.01337051]
[122.99851990 47.99567413]
[123.72695160 62.97797775]
[124.45538330 77.96028137]
[132.91473389 90.34734344]
[146.60472107 96.47796631]
[160.29469299 102.60858917]
[173.98466492 108.73921204]
[187.67465210 114.86983490]
[201.36462402 121.00045776]
[215.05459595 127.13108063]
[230.81182861 125.70975494]
[239.26527405 137.97306824]
[252.95524597 144.10368347]
[266.64523315 150.23431396]
[280.33520508 156.36492920]
[293.75769043 148.80564880]
[308.88085938 150.57870483]
[319.92944336 160.79598999]
[322.80862427 175.38529968]
[336.49859619 181.51593018]
[350.18856812 187.64654541]
[364.24667358 192.87817383]
[378.61392212 197.18882751]
[392.98120117 201.49949646]
[407.34844971 205.81016541]
[421.71569824 210.12083435]
[436.08297729 214.43150330]
[440.21139526 212.60485840]
[444.40020752 212.10501099]
[448.25976562 212.81384277]
[451.47198486 214.50772095]
[453.81658936 216.88801575]
[468.81463623 216.64512634]
[483.81265259 216.40222168]
[498.81069946 216.15933228]
[513.80871582 215.91642761]
[528.80676270 215.67353821]
[543.80480957 215.43063354]
[558.80285645 215.18774414]
[573.80084229 214.94485474]
[579.73010254 200.91757202]
[590.85650635 190.51940918]
[605.25250244 185.55186462]
[620.42376709 186.87562561]
[633.74182129 194.26132202]
[642.89929199 206.42936707]
[646.30950928 221.27154541]
[643.38171387 236.21636963]
[634.62304688 248.67454529]
[621.55114746 256.48764038]
[606.43066406 258.30197144]
[591.88140869 253.80322266]
[580.42407227 243.77079773]
[574.04376221 229.94288635]
[559.04571533 230.18577576]
[544.04766846 230.42868042]
[529.04968262 230.67156982]
[514.05163574 230.91445923]
[499.05358887 231.15736389]
[484.05557251 231.40025330]
[469.05752563 231.64315796]
[454.05947876 231.88604736]
[467.59100342 238.35894775]
[479.13537598 247.93637085]
[487.99557495 260.03997803]
[493.63650513 273.93887329]
[495.71759033 288.79382324]
[494.11315918 303.70776367]
[488.92007446 317.78015137]
[480.45193481 330.16119385]
[469.22006226 340.10330200]
[455.90274048 347.00607300]
[441.30407715 350.45275879]
[426.30566406 350.23516846]
[411.81314087 346.36645508]
[398.70166016 339.08023071]
[387.76293945 328.81646729]
[379.65753174 316.19497681]
[374.87487793 301.97787476]
[373.70376587 287.02365112]
[376.21490479 272.23535156]
[382.25668335 258.50592041]
[391.46423340 246.66444397]
[403.28161621 237.42596436]
[416.99520874 231.34832764]
[431.77230835 228.79876709]
[417.40505981 224.48809814]
[403.03778076 220.17742920]
[388.67053223 215.86676025]
[374.30325317 211.55609131]
[359.93600464 207.24542236]
[367.81210327 220.01129150]
[366.80526733 234.97746277]
[357.29025269 246.57334900]
[342.80868530 250.48281860]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 119]
[5 118]
[6 117]
[10 113]
[11 112]
[12 111]
[13 110]
[15 108]
[16 107]
[17 106]
[18 105]
[19 104]
[20 103]
[21 102]
[22 57]
[23 56]
[24 55]
[25 53]
[26 52]
[29 51]
[30 50]
[31 49]
[32 48]
[33 47]
[37 46]
[38 45]
[39 44]
[58 89]
[59 88]
[60 87]
[61 86]
[62 85]
[65 82]
[66 81]
[68 79]
[69 78]
[70 77]
[71 76]
[90 101]
[91 100]
[92 99]
[93 98]
[120 189]
[121 188]
[122 187]
[123 186]
[124 185]
[125 184]
[130 160]
[131 159]
[132 158]
[133 157]
[134 156]
[135 155]
[136 154]
[137 153]
[138 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
