%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAAAAACAGACCGACAGGCCUCUAGGCGGGAAGCGCGGAGUGCGCCGGCGCGUAGUCGGGGACGCCGGGCCGAGGCUUUGCUAGGGAACACUGUUAUCGCCCCGCCCCCUCGGAGCUUUUUCUCCAGUUAACUGUCGGAGUAGCGGGGGCUCCGGCGCCGGGCGAC\
) } def
/len { sequence length } bind def

/coor [
[309.17175293 190.67694092]
[295.39443970 184.74517822]
[281.61712646 178.81340027]
[267.83984375 172.88163757]
[254.02098083 181.70927429]
[237.49691772 180.56336975]
[224.77642822 169.69728088]
[220.98782349 153.23188782]
[207.10325623 147.55570984]
[193.21868896 141.87954712]
[179.33413696 136.20338440]
[165.44956970 130.52722168]
[144.43127441 135.63491821]
[130.78204346 117.88765717]
[116.51619720 113.25240326]
[102.00699615 121.08039093]
[86.28130341 116.13097382]
[78.87088776 101.40412903]
[64.52182007 97.03327942]
[50.17275620 92.66243744]
[35.78391647 88.42435455]
[21.35653114 84.31941223]
[6.92914677 80.21446991]
[-7.49823761 76.10951996]
[-21.92562294 72.00457764]
[-28.48213959 73.25633240]
[-33.86303711 71.27959442]
[-36.80500031 67.47219849]
[-51.07084656 62.83694077]
[-65.33669281 58.20168686]
[-83.23323059 62.45932770]
[-94.48154449 49.01104736]
[-108.83061218 44.64020157]
[-121.20263672 53.81838989]
[-136.42880249 53.95010757]
[-148.66815186 45.19441605]
[-153.34886169 31.07956696]
[-168.80473328 34.45987320]
[-178.72512817 23.34974098]
[-194.18101501 26.73004913]
[-204.10140991 15.61991596]
[-218.45046997 11.24907017]
[-233.90634155 14.62937641]
[-243.82673645 3.51924467]
[-258.17581177 -0.85160166]
[-272.52487183 -5.22244787]
[-286.87393188 -9.59329414]
[-301.22299194 -13.96413994]
[-317.06707764 -9.73365784]
[-328.45977783 -21.52937698]
[-323.68121338 -37.21687317]
[-307.64721680 -40.65819550]
[-296.85217285 -28.31320572]
[-282.50308228 -23.94235992]
[-268.15402222 -19.57151413]
[-253.80496216 -15.20066833]
[-239.45588684 -10.82982159]
[-225.02635193 -14.52276039]
[-214.07962036 -3.09999657]
[-199.73056030 1.27084970]
[-185.30102539 -2.42208934]
[-174.35427856 9.00067520]
[-159.92475891 5.30773592]
[-148.97801208 16.73050117]
[-137.22328186 7.62202215]
[-122.18115997 7.17649889]
[-109.61407471 15.77427483]
[-104.45976257 30.29113388]
[-90.11069489 34.66197968]
[-79.26693726 29.24583435]
[-67.25928497 32.79943085]
[-60.70143890 43.93583679]
[-46.43559265 48.57109070]
[-32.16974258 53.20634842]
[-17.82067680 57.57719421]
[-3.39329290 61.68213654]
[11.03409195 65.78708649]
[25.46147728 69.89202881]
[39.88886261 73.99697113]
[47.21165848 72.79830170]
[54.54360199 78.31336975]
[68.89266968 82.68421173]
[83.24173737 87.05506134]
[93.65964508 79.79576874]
[106.35729218 79.80109406]
[116.76911163 87.06911469]
[121.15145111 98.98655701]
[135.41729736 103.62181091]
[142.09172058 98.46412659]
[150.17579651 96.41077423]
[158.31642151 97.72813416]
[165.18154907 102.12472534]
[169.67805481 108.81153870]
[171.12573242 116.64265442]
[185.01029968 122.31881714]
[198.89486694 127.99498749]
[212.77943420 133.67115784]
[226.66398621 139.34732056]
[237.83100891 131.22940063]
[251.44416809 129.71157837]
[263.92587280 135.08486938]
[272.04907227 145.84333801]
[273.77160645 159.10432434]
[287.54891968 165.03610229]
[301.32620239 170.96786499]
[315.10351562 176.89964294]
[329.09060669 182.31826782]
[343.26834106 187.21633911]
[357.44610596 192.11442566]
[371.62387085 197.01249695]
[388.29232788 188.07284546]
[405.91351318 194.01486206]
[413.50033569 210.64364624]
[427.84939575 215.01449585]
[442.19845581 219.38534546]
[456.54751587 223.75617981]
[470.89660645 228.12702942]
[485.24566650 232.49787903]
[499.59472656 236.86872864]
[495.16577148 222.53749084]
[503.45138550 210.03355408]
[518.37548828 208.52647400]
[528.99371338 219.12144470]
[527.51940918 234.04881287]
[515.03192139 242.36209106]
[528.91650391 248.03826904]
[542.80108643 253.71443176]
[556.68566895 259.39059448]
[565.85333252 259.74697876]
[570.77276611 265.30206299]
[584.55004883 271.23382568]
[598.32739258 277.16561890]
[612.10467529 283.09738159]
[621.26422119 283.62310791]
[626.08013916 289.26815796]
[639.74548340 295.45349121]
[655.20471191 291.16482544]
[668.11132812 300.69369507]
[668.56445312 316.73034668]
[656.21655273 326.97283936]
[640.53985596 323.56402588]
[633.56018066 309.11883545]
[619.89483643 302.93350220]
[606.17291260 296.87469482]
[592.39562988 290.94290161]
[578.61828613 285.01113892]
[564.84100342 279.07937622]
[551.00946045 273.27514648]
[537.12487793 267.59899902]
[523.24035645 261.92282104]
[509.35577393 256.24667358]
[495.22387695 251.21778870]
[480.87481689 246.84693909]
[466.52575684 242.47610474]
[452.17669678 238.10525513]
[437.82760620 233.73440552]
[423.47854614 229.36355591]
[409.12948608 224.99272156]
[400.42510986 232.43890381]
[389.08636475 234.76509094]
[377.92395020 231.27601624]
[369.76245117 222.73274231]
[366.72579956 211.19026184]
[352.54803467 206.29217529]
[338.37026978 201.39410400]
[324.19250488 196.49601746]
[321.59030151 197.63494873]
[318.37164307 197.79096985]
[314.91641235 196.72082520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 106]
[2 105]
[3 104]
[4 103]
[8 98]
[9 97]
[10 96]
[11 95]
[12 94]
[14 88]
[15 87]
[18 83]
[19 82]
[20 81]
[21 79]
[22 78]
[23 77]
[24 76]
[25 75]
[28 74]
[29 73]
[30 72]
[32 69]
[33 68]
[37 64]
[39 62]
[41 60]
[42 59]
[44 57]
[45 56]
[46 55]
[47 54]
[48 53]
[107 166]
[108 165]
[109 164]
[110 163]
[113 158]
[114 157]
[115 156]
[116 155]
[117 154]
[118 153]
[119 152]
[125 151]
[126 150]
[127 149]
[128 148]
[130 147]
[131 146]
[132 145]
[133 144]
[135 143]
[136 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
