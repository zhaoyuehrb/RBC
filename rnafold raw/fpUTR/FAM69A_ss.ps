%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGCAAAGAGGAUCCUAUUGUGCAGCUUUACACUUUGCAAGUUGAUAUGCAAAGAGUAACUUAUUUUUAAUAUAUCUUAACCCUUCUCCAGUCAUUUCUCCUUUAACAAUUGUUAGCGUCUCCUCAGUUUCCAGAAUAUCUAUUCGGUGAAACAUUUGGUUCGCUGAACAAGAGGAACAUAAAGCCCUGGCUCGCUUCUCAUAUGUGCGG\
) } def
/len { sequence length } bind def

/coor [
[84.17652893 394.62652588]
[73.22813416 383.22879028]
[73.62938690 367.42959595]
[85.14222717 356.60232544]
[85.36450195 341.60397339]
[85.58677673 326.60562134]
[71.02806091 313.66024780]
[70.67948914 293.87619019]
[85.21485138 280.00424194]
[84.77035522 265.01080322]
[84.32585144 250.01739502]
[83.88135529 235.02398682]
[83.43685150 220.03057861]
[73.21730042 231.01058960]
[58.34671783 232.97671509]
[45.62475204 225.02992249]
[40.86859512 210.80392456]
[46.25302887 196.80364990]
[59.31599045 189.43078613]
[74.08436584 192.05662537]
[83.80481720 203.47938538]
[84.91521454 188.52053833]
[86.02561188 173.56169128]
[83.38610840 166.65907288]
[87.26490784 158.38995361]
[88.59684753 143.44920349]
[89.92877960 128.50845337]
[91.26071930 113.56770325]
[79.82581329 103.85983276]
[65.29927826 107.59879303]
[50.77274323 111.33775330]
[36.24620819 115.07671356]
[24.81026077 126.00967407]
[10.55608845 121.68904877]
[-3.97044539 125.42800903]
[-18.49697876 129.16696167]
[-33.02351379 132.90592957]
[-47.55004501 136.64488220]
[-62.07658005 140.38385010]
[-76.60311127 144.12280273]
[-82.18132782 158.60255432]
[-95.22344971 167.00985718]
[-110.71452332 166.11192322]
[-122.69790649 156.25402832]
[-126.56575775 141.22674561]
[-120.83079529 126.80835724]
[-107.69824219 118.54303741]
[-92.21781921 119.60896301]
[-80.34207153 129.59626770]
[-65.81553650 125.85731506]
[-51.28900528 122.11835480]
[-36.76247406 118.37939453]
[-22.23593903 114.64043427]
[-7.70940495 110.90147400]
[6.81712866 107.16251373]
[17.21404076 96.49698639]
[32.50724792 100.55017853]
[47.03378296 96.81121826]
[61.56031799 93.07225800]
[76.08685303 89.33329773]
[61.54606628 85.65015411]
[46.58784485 84.53136444]
[31.96574402 81.18560791]
[18.00939560 75.68830109]
[5.03343344 68.16338348]
[-6.66961527 58.78049088]
[-16.83591652 47.75115204]
[-25.23628616 35.32401276]
[-31.68134308 21.77922630]
[-36.02579117 7.42214584]
[-38.17169189 -7.42356443]
[-38.07066727 -22.42322350]
[-35.72499466 -37.23868179]
[-31.18755531 -51.53594208]
[-24.56063843 -64.99269104]
[-15.99364281 -77.30554962]
[-5.67970181 -88.19695282]
[6.14866924 -97.42135620]
[19.22481346 -104.77081299]
[33.25394058 -110.07962799]
[47.91978455 -113.22812653]
[62.89171600 -114.14533234]
[77.83220673 -112.81056213]
[92.40444946 -109.25391388]
[106.27992249 -103.55555725]
[119.14582062 -95.84396362]
[130.71209717 -86.29298401]
[140.71800232 -75.11792755]
[148.93795776 -62.57072449]
[155.18667603 -48.93424225]
[159.32325745 -34.51589584]
[161.25445557 -19.64073563]
[160.93675232 -4.64410019]
[158.37728882 10.13592529]
[153.63377380 24.36614227]
[146.81314087 37.72574615]
[138.06915283 49.91355896]
[127.59894562 60.65481949]
[115.63894653 69.70712280]
[108.93642426 83.12637329]
[121.25196838 74.56323242]
[133.56752014 66.00009918]
[145.88305664 57.43696213]
[158.19860840 48.87382507]
[143.66401672 45.16630554]
[135.89042664 32.33777618]
[139.33134460 17.73777771]
[152.01548767 9.73073387]
[166.67601013 12.90392876]
[174.91381836 25.43941879]
[172.00994873 40.15475082]
[185.03721619 32.71900940]
[198.06448364 25.28326797]
[211.09175110 17.84752655]
[224.06356812 10.31546497]
[236.97923279 2.68749833]
[249.89488220 -4.94046831]
[262.81054688 -12.56843567]
[275.72619629 -20.19640160]
[277.55953979 -33.53960419]
[286.61074829 -43.24908447]
[299.41177368 -45.93313217]
[311.24340820 -40.83117676]
[324.27069092 -48.26691818]
[325.89309692 -65.10367584]
[337.12002563 -77.53221893]
[353.37979126 -80.78701782]
[368.22512817 -73.77952576]
[381.14080811 -81.40748596]
[394.05645752 -89.03545380]
[406.97210693 -96.66342163]
[419.88775635 -104.29138947]
[432.74655151 -112.01484680]
[440.49084473 -125.81108856]
[455.38540649 -125.84186554]
[468.18661499 -133.66038513]
[480.98782349 -141.47889709]
[493.78903198 -149.29740906]
[501.15597534 -163.94869995]
[517.54119873 -164.62413025]
[526.08898926 -150.62887573]
[518.00610352 -136.36006165]
[501.60754395 -136.49621582]
[488.80633545 -128.67768860]
[476.00512695 -120.85917664]
[463.20391846 -113.04065704]
[456.37524414 -99.80364990]
[440.56506348 -99.21363831]
[436.49554443 -93.04499054]
[427.51571655 -91.37573242]
[414.60006714 -83.74777222]
[401.68441772 -76.11980438]
[388.76876831 -68.49183655]
[375.85311890 -60.86386871]
[375.82760620 -47.51358032]
[369.15539551 -35.82536697]
[357.48632812 -28.90507507]
[343.81362915 -28.65217781]
[331.70642090 -35.23965073]
[318.67916870 -27.80390930]
[314.94314575 -11.40596581]
[300.21310425 -2.61088681]
[283.35415649 -7.28074789]
[270.43850708 0.34721893]
[257.52285767 7.97518587]
[244.60719299 15.60315228]
[231.69154358 23.23111916]
[227.53105164 29.33879089]
[218.52749634 30.87479591]
[205.50022888 38.31053543]
[192.47296143 45.74627686]
[179.44569397 53.18201828]
[166.76174927 61.18936920]
[154.44619751 69.75251007]
[142.13066101 78.31564331]
[129.81510925 86.87878418]
[117.49955750 95.44191742]
[130.66101074 88.24633789]
[145.62689209 87.23538208]
[159.63648987 92.59555817]
[170.10542297 103.33805847]
[175.10249329 117.48123169]
[173.70590210 132.41607666]
[166.17327881 145.38755798]
[153.89414978 154.00285339]
[139.13366699 156.67266846]
[124.61466980 152.90451050]
[113.01550293 143.39350891]
[106.47584534 129.89414978]
[106.20146942 114.89964294]
[104.86952972 129.84039307]
[103.53759003 144.78114319]
[102.20565796 159.72189331]
[100.98445129 174.67208862]
[99.87405396 189.63093567]
[98.76366425 204.58978271]
[98.43026733 219.58607483]
[98.87476349 234.57948303]
[99.31926727 249.57290649]
[99.76376343 264.56631470]
[100.20826721 279.55972290]
[109.55065918 284.70898438]
[115.86496735 293.20654297]
[118.06585693 303.47940063]
[115.82178497 313.66024780]
[109.60305023 321.92675781]
[100.58512878 326.82791138]
[100.36286163 341.82626343]
[100.14058685 356.82461548]
[111.32752228 367.98828125]
[111.26042175 383.79244995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 209]
[5 208]
[6 207]
[9 201]
[10 200]
[11 199]
[12 198]
[13 197]
[21 196]
[22 195]
[23 194]
[25 193]
[26 192]
[27 191]
[28 190]
[29 60]
[30 59]
[31 58]
[32 57]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[100 177]
[101 176]
[102 175]
[103 174]
[104 173]
[111 172]
[112 171]
[113 170]
[114 169]
[115 167]
[116 166]
[117 165]
[118 164]
[119 163]
[123 160]
[124 159]
[128 154]
[129 153]
[130 152]
[131 151]
[132 150]
[133 148]
[135 146]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
