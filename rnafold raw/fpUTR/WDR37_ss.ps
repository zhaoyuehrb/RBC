%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCGCGUCAGUGCGGAGACAGCGGUGUCCUGCGCGUCUUCGGGUCAGUACGGGGGGCCGCGUCGUAGGGACUCACUGGCGGUGCGCGACCUGGGCUGGCUCCGGGGGUGGCGGGCGCAGCUGCUGUGACAGCUUAUUGCAGGAGUGACCAGGACACUACCUCCUAGAAGUA\
) } def
/len { sequence length } bind def

/coor [
[242.69644165 447.80123901]
[255.85688782 454.99984741]
[250.30482483 441.06521606]
[244.75274658 427.13055420]
[239.20068359 413.19589233]
[233.64860535 399.26126099]
[228.09652710 385.32659912]
[216.19790649 376.36712646]
[218.27770996 360.68322754]
[212.72564697 346.74856567]
[200.82702637 337.78909302]
[202.90681458 322.10519409]
[197.35475159 308.17053223]
[191.17956543 294.50061035]
[184.39384460 281.12322998]
[169.51377869 280.45324707]
[156.88291931 272.37130737]
[149.94746399 258.96362305]
[150.65895081 243.78500366]
[158.92633057 230.91653442]
[152.14060974 217.53915405]
[145.35490417 204.16178894]
[138.56918335 190.78442383]
[131.78346252 177.40704346]
[124.99775696 164.02967834]
[118.21203613 150.65229797]
[111.30583191 137.33673096]
[104.27970886 124.08405304]
[97.25358582 110.83137512]
[90.10810089 97.64266205]
[82.84385681 84.51898956]
[75.57961273 71.39532471]
[68.31536102 58.27165222]
[61.05111694 45.14798355]
[54.13287735 39.12933731]
[53.77662659 31.72114754]
[46.75049973 18.46846771]
[39.72437286 5.21578693]
[32.69824600 -8.03689384]
[25.67211914 -21.28957367]
[18.64599228 -34.54225540]
[11.61986637 -47.79493713]
[4.59373999 -61.04761505]
[-2.43238664 -74.30030060]
[-9.57786465 -87.48900604]
[-16.84211159 -100.61267853]
[-24.10635948 -113.73635101]
[-31.37060738 -126.86001587]
[-38.63485336 -139.98368835]
[-45.89910126 -153.10736084]
[-59.35174561 -161.43423462]
[-58.74589539 -176.31651306]
[-66.01013947 -189.44018555]
[-73.27439117 -202.56385803]
[-80.53863525 -215.68753052]
[-95.46199036 -220.15197754]
[-102.64202118 -233.56472778]
[-98.29388428 -247.76435852]
[-105.55812836 -260.88803101]
[-112.47636414 -266.90667725]
[-112.83261871 -274.31484985]
[-119.85874176 -287.56753540]
[-126.88487244 -300.82022095]
[-133.91099548 -314.07290649]
[-140.93711853 -327.32559204]
[-147.96325684 -340.57824707]
[-154.98937988 -353.83093262]
[-168.28948975 -362.39935303]
[-167.41505432 -377.26824951]
[-174.44117737 -390.52093506]
[-189.62098694 -394.91967773]
[-197.17106628 -408.80389404]
[-192.61209106 -423.93637085]
[-178.64880371 -431.33923340]
[-163.56539917 -426.62051392]
[-156.31057739 -412.57974243]
[-161.18850708 -397.54705811]
[-154.16236877 -384.29437256]
[-141.36482239 -376.67388916]
[-141.73669434 -360.85705566]
[-134.71057129 -347.60437012]
[-127.68444061 -334.35171509]
[-120.65831757 -321.09902954]
[-113.63218689 -307.84634399]
[-106.60606384 -294.59365845]
[-99.57994080 -281.34097290]
[-92.43445587 -268.15228271]
[-85.17021179 -255.02859497]
[-70.82871246 -251.17410278]
[-63.27478409 -237.96832275]
[-67.41497040 -222.95178223]
[-60.15071869 -209.82810974]
[-52.88647461 -196.70443726]
[-45.62222672 -183.58076477]
[-32.68917084 -176.19258118]
[-32.77543259 -160.37161255]
[-25.51118469 -147.24794006]
[-18.24693680 -134.12426758]
[-10.98268986 -121.00059509]
[-3.71844220 -107.87693024]
[3.54580498 -94.75325775]
[9.55697060 -90.40882874]
[10.82029438 -81.32642365]
[17.84642029 -68.07374573]
[24.87254715 -54.82106400]
[31.89867401 -41.56838226]
[38.92480087 -28.31570053]
[45.95092773 -15.06302071]
[52.97705460 -1.81033969]
[60.00318146 11.44234085]
[67.02930450 24.69502258]
[74.17478180 37.88373566]
[81.43903351 51.00740433]
[88.70327759 64.13107300]
[95.96752930 77.25474548]
[103.23177338 90.37841034]
[109.60227966 95.36596680]
[110.50626373 103.80524445]
[117.53238678 117.05792999]
[124.55851746 130.31060791]
[131.36695862 136.45317078]
[131.58941650 143.86659241]
[138.37512207 157.24395752]
[145.16084290 170.62133789]
[151.94656372 183.99870300]
[158.73226929 197.37606812]
[165.51799011 210.75344849]
[172.30369568 224.13081360]
[187.57070923 225.06140137]
[200.23844910 233.45336914]
[206.96015930 246.96946716]
[206.02029419 261.93518066]
[197.77122498 274.33752441]
[204.55693054 287.71490479]
[211.80323792 274.58129883]
[226.55717468 271.87551880]
[237.99240112 281.58303833]
[237.71778870 296.58053589]
[225.93486023 305.86291504]
[211.28939819 302.61846924]
[216.84147644 316.55313110]
[229.13720703 326.50930786]
[226.66029358 341.19650269]
[232.21235657 355.13116455]
[244.50810242 365.08731079]
[242.03118896 379.77453613]
[247.58325195 393.70916748]
[253.13533020 407.64382935]
[258.68740845 421.57849121]
[264.23947144 435.51312256]
[269.79153442 449.44778442]
[276.45620728 462.88586426]
[284.18951416 475.73873901]
[291.92282104 488.59158325]
[299.65612793 501.44442749]
[315.12982178 503.70251465]
[325.49325562 515.41290283]
[325.85308838 531.04638672]
[316.03948975 543.22119141]
[300.68606567 546.18884277]
[287.04229736 538.54809570]
[281.55032349 523.90661621]
[286.80328369 509.17776489]
[279.06997681 496.32489014]
[271.33666992 483.47204590]
[263.60336304 470.61917114]
[261.37002563 485.45199585]
[251.56919861 496.80731201]
[237.22213745 501.18475342]
[222.75152588 497.23486328]
[212.61816406 486.17523193]
[209.94580078 471.41522217]
[215.55822754 457.50476074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[9 144]
[10 143]
[12 141]
[13 140]
[14 134]
[15 133]
[20 128]
[21 127]
[22 126]
[23 125]
[24 124]
[25 123]
[26 122]
[27 120]
[28 119]
[29 118]
[30 116]
[31 115]
[32 114]
[33 113]
[34 112]
[36 111]
[37 110]
[38 109]
[39 108]
[40 107]
[41 106]
[42 105]
[43 104]
[44 103]
[45 101]
[46 100]
[47 99]
[48 98]
[49 97]
[50 96]
[52 94]
[53 93]
[54 92]
[55 91]
[58 88]
[59 87]
[61 86]
[62 85]
[63 84]
[64 83]
[65 82]
[66 81]
[67 80]
[69 78]
[70 77]
[152 166]
[153 165]
[154 164]
[155 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
