%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCUCUGGUAGCCCUGGGGACGCUGUAUCUGUGGGCUCUUGAAUCGCGUCACAAAUCAGCGACCGAACUCUGGCGGUGGUGGUUAAGACGGCGAAGGCGGCAGCGGCGGCGACAGCUCUGGGGUUUGCGUCUCGGGGUGUGUCGGCCGCCGCUGCUGCUUGGGCCUGGU\
) } def
/len { sequence length } bind def

/coor [
[98.67483521 188.00646973]
[97.85332489 173.02897644]
[97.03180695 158.05149841]
[96.21028900 143.07400513]
[95.38877106 128.09652710]
[81.74946594 121.85396576]
[69.87702179 131.02157593]
[63.68306732 145.57992554]
[48.88064194 147.23445129]
[37.00819397 156.40205383]
[32.10499954 164.15370178]
[24.83415222 165.62631226]
[12.79624653 174.57554626]
[0.75834227 183.52479553]
[-11.27956200 192.47402954]
[-23.31746674 201.42326355]
[-28.36141968 209.08406067]
[-35.65795135 210.42362976]
[-42.37947464 224.74604797]
[-57.23244858 225.85885620]
[-69.43179321 234.58674622]
[-81.63114166 243.31463623]
[-82.65543365 258.91864014]
[-93.50742340 270.17776489]
[-109.06313324 271.77584839]
[-121.97763824 262.95828247]
[-126.15309906 247.88844299]
[-119.61799622 233.68188477]
[-105.45799255 227.04649353]
[-90.35902405 231.11528015]
[-78.15968323 222.38740540]
[-65.96033478 213.65951538]
[-60.11138916 199.96138000]
[-44.38583374 198.22428894]
[-32.26670456 189.38536072]
[-20.22879982 180.43612671]
[-8.19089508 171.48687744]
[3.84700942 162.53764343]
[15.88491440 153.58840942]
[27.84058952 144.52960205]
[39.71303558 135.36199951]
[45.05779266 121.45938110]
[60.70941544 119.14912415]
[72.58186340 109.98152161]
[76.94578552 85.56024933]
[97.41773224 74.90501404]
[89.60363007 62.10111618]
[81.78952789 49.29722214]
[73.97541809 36.49332428]
[66.04470825 23.76132393]
[57.99805832 11.10227966]
[49.95140457 -1.55676329]
[36.53337860 -2.95902109]
[26.52678299 -11.71453571]
[23.44711876 -24.44889450]
[28.20357704 -36.44712448]
[20.38947296 -49.25101852]
[12.57536793 -62.05491638]
[4.76126242 -74.85881042]
[-3.05284262 -87.66271210]
[-10.22171021 -93.38429260]
[-10.89027309 -100.77259064]
[-24.54001617 -108.77227783]
[-24.29361916 -123.66484833]
[-31.87257004 -136.60932922]
[-39.45151901 -149.55380249]
[-47.03047180 -162.49827576]
[-62.48480988 -163.89221191]
[-74.14612579 -174.12907410]
[-77.53039551 -189.27259827]
[-71.33631134 -203.49978638]
[-57.94561386 -211.33999634]
[-42.50730515 -209.77850342]
[-30.95772934 -199.41574097]
[-27.73793221 -184.23638916]
[-34.08599472 -170.07723999]
[-26.50704193 -157.13275146]
[-18.92809105 -144.18827820]
[-11.34914112 -131.24380493]
[1.75850403 -124.16998291]
[2.05420470 -108.35153961]
[9.75105381 -95.47681427]
[17.56515884 -82.67292023]
[25.37926292 -69.86901855]
[33.19337082 -57.06512451]
[41.00747299 -44.26123047]
[57.49331665 -41.02138519]
[66.73198700 -26.58621216]
[62.61044693 -9.60341644]
[70.65710449 3.05562735]
[78.70375061 15.71467113]
[84.96878052 19.68749237]
[86.77931976 28.67921829]
[94.59342194 41.48311615]
[102.40752411 54.28701019]
[110.22163391 67.09091187]
[123.23478699 74.55133057]
[138.23228455 74.82528687]
[153.22978210 75.09925079]
[168.22727966 75.37321472]
[183.22477722 75.64717102]
[198.22227478 75.92113495]
[213.21977234 76.19509125]
[228.21726990 76.46905518]
[243.21476746 76.74301910]
[258.21228027 77.01697540]
[273.20977783 77.29093933]
[288.20727539 77.56489563]
[303.20477295 77.83885956]
[318.20227051 78.11282349]
[333.19976807 78.38677979]
[348.19726562 78.66074371]
[363.19662476 78.79772949]
[378.19662476 78.79772949]
[393.19662476 78.79772949]
[408.19662476 78.79772949]
[423.19601440 78.66074371]
[438.19351196 78.38677979]
[453.19100952 78.11282349]
[468.18850708 77.83885956]
[483.18600464 77.56489563]
[498.18350220 77.29093933]
[513.18096924 77.01697540]
[528.17846680 76.74301910]
[543.17596436 76.46905518]
[553.96350098 64.91896820]
[569.76123047 64.46326447]
[581.19665527 75.37231445]
[581.48529053 91.17396545]
[570.45593262 102.49338531]
[554.65209961 102.61495209]
[543.44995117 91.46655273]
[528.45245361 91.74051666]
[513.45495605 92.01447296]
[498.45745850 92.28843689]
[483.45996094 92.56239319]
[468.46246338 92.83635712]
[453.46496582 93.11032104]
[438.46746826 93.38427734]
[423.46997070 93.65824127]
[416.81509399 96.93641663]
[408.19662476 93.79772949]
[393.19662476 93.79772949]
[378.19662476 93.79772949]
[363.19662476 93.79772949]
[356.48300171 96.95381165]
[347.92327881 93.65824127]
[332.92578125 93.38427734]
[317.92828369 93.11032104]
[302.93078613 92.83635712]
[287.93328857 92.56239319]
[272.93579102 92.28843689]
[257.93829346 92.01447296]
[242.94081116 91.74051666]
[227.94331360 91.46655273]
[212.94581604 91.19258881]
[197.94831848 90.91863251]
[182.95082092 90.64466858]
[167.95332336 90.37071228]
[152.95582581 90.09674835]
[137.95832825 89.82278442]
[122.96082306 89.54882812]
[125.15799713 110.34785461]
[110.36625671 127.27500153]
[111.18777466 142.25248718]
[112.00929260 157.22998047]
[112.83081055 172.20745850]
[113.65232849 187.18495178]
[123.06559753 200.61335754]
[115.89854431 215.36346436]
[99.52400970 216.26161194]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 165]
[5 164]
[6 44]
[7 43]
[9 41]
[10 40]
[12 39]
[13 38]
[14 37]
[15 36]
[16 35]
[18 34]
[20 32]
[21 31]
[22 30]
[46 96]
[47 95]
[48 94]
[49 93]
[50 91]
[51 90]
[52 89]
[56 86]
[57 85]
[58 84]
[59 83]
[60 82]
[62 81]
[64 79]
[65 78]
[66 77]
[67 76]
[97 162]
[98 161]
[99 160]
[100 159]
[101 158]
[102 157]
[103 156]
[104 155]
[105 154]
[106 153]
[107 152]
[108 151]
[109 150]
[110 149]
[111 148]
[112 147]
[113 145]
[114 144]
[115 143]
[116 142]
[117 140]
[118 139]
[119 138]
[120 137]
[121 136]
[122 135]
[123 134]
[124 133]
[125 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
