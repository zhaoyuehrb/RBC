%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGCAACAGGGUUGCAGGUGUAAAAUAACGGGAAGGCGGGAUGCGUGGCUAAAUUGCUCUGCGUGCACAAAGAGUAGGAGAGCCCAGAGUUCCAGAAUGCCCCUAAUUCCGAACACCACAGGGUGAGUCUGGAGCAAGUCACCUGGGAGGGCUUACAGGUGCCAUA\
) } def
/len { sequence length } bind def

/coor [
[118.60083008 445.98461914]
[117.76473999 431.00793457]
[116.92865753 416.03125000]
[116.09256744 401.05456543]
[107.65789032 388.77835083]
[114.61396027 374.56835938]
[102.01558685 366.66778564]
[96.41893768 352.69848633]
[100.16487122 337.93972778]
[112.01998901 328.10293579]
[111.18389893 313.12625122]
[110.34781647 298.14956665]
[98.58621979 282.83145142]
[107.84371948 264.95431519]
[106.45153046 250.01904297]
[97.56637573 238.06483459]
[103.98944092 223.60610962]
[102.59725189 208.67085266]
[101.20506287 193.73559570]
[99.81286621 178.80033875]
[98.42067719 163.86509705]
[97.02848816 148.92984009]
[86.36958313 147.08683777]
[76.37438965 142.95101929]
[67.52961731 136.72373962]
[60.26594925 128.70826721]
[54.93707657 119.29486847]
[40.40694427 123.01981354]
[32.32799911 136.33778381]
[17.53931427 139.90843201]
[4.89244938 132.12431335]
[-9.63768387 135.84925842]
[-17.47108269 149.57563782]
[-32.73796082 153.66194153]
[-46.38075256 145.68386841]
[-50.30542755 130.37463379]
[-42.18354797 116.81695557]
[-26.83368111 113.05435944]
[-13.36263084 121.31912231]
[1.16750288 117.59417725]
[8.50961018 104.68569183]
[23.19216919 100.70108032]
[36.68199539 108.48967743]
[51.21212769 104.76473236]
[51.86791992 90.71227264]
[56.48775101 77.42472839]
[64.69113922 65.99642181]
[56.97074890 61.03745270]
[55.55038452 53.75349045]
[46.68854904 41.65109634]
[37.82671356 29.54870605]
[28.96487999 17.44631386]
[13.56031227 17.37212563]
[1.29655433 8.34695911]
[-3.24754882 -5.99929905]
[1.47086620 -20.10158730]
[-7.39096880 -32.20397949]
[-16.25280380 -44.30636978]
[-25.11463928 -56.40876389]
[-33.97647476 -68.51115417]
[-42.83831024 -80.61354828]
[-51.70014191 -92.71593475]
[-66.95993042 -90.97397614]
[-81.03987122 -97.11000061]
[-90.15253448 -109.47344971]
[-91.84665680 -124.73862457]
[-85.66653442 -138.79927063]
[-73.27457428 -147.87312317]
[-58.00416565 -149.51939392]
[-43.96296692 -143.29522705]
[-34.92798996 -130.87489319]
[-33.32959747 -115.59939575]
[-39.59775162 -101.57777405]
[-30.73591614 -89.47537994]
[-21.87408257 -77.37298584]
[-13.01224709 -65.27059937]
[-4.15041208 -53.16820526]
[4.71142292 -41.06581497]
[13.57325745 -28.96342278]
[28.44202805 -29.20362091]
[40.74668503 -20.53993797]
[45.64775085 -6.12352562]
[41.06727219 8.58447933]
[49.92910385 20.68687057]
[58.79093933 32.78926086]
[67.65277863 44.89165497]
[76.62671661 56.91115570]
[93.30641937 51.43916321]
[110.84450531 52.19460678]
[126.99189758 59.08060837]
[139.67784119 71.21411133]
[153.02391052 64.36701202]
[166.36996460 57.51991653]
[179.71601868 50.67281723]
[193.06207275 43.82571793]
[206.40814209 36.97862244]
[219.75419617 30.13152313]
[233.10025024 23.28442383]
[241.84690857 10.10085201]
[256.70269775 11.17535686]
[261.63519287 -3.59990525]
[275.26751709 -10.35371685]
[289.32308960 -5.56029320]
[302.66912842 -12.40739155]
[316.01519775 -19.25448990]
[329.36126709 -26.10158730]
[327.74996948 -41.19358063]
[331.70312500 -55.84748459]
[340.68609619 -68.08148193]
[353.48400879 -76.24102783]
[368.36602783 -79.22261047]
[383.31948853 -76.62299347]
[396.32208252 -68.79374695]
[405.61529541 -56.79372025]
[409.94232178 -42.24581909]
[408.71792603 -27.11752510]
[402.10772705 -13.45481586]
[391.00567627 -3.10546017]
[376.91326904 2.53087592]
[361.73635864 2.69192457]
[347.52749634 -2.64409518]
[336.20834351 -12.75553036]
[322.86230469 -5.90843201]
[309.51623535 0.93866622]
[296.17016602 7.78576422]
[291.86569214 21.99867821]
[278.42843628 29.13273048]
[263.54980469 24.52141380]
[255.75775146 37.21523666]
[239.94734192 36.63048172]
[226.60128784 43.47758102]
[213.25523376 50.32467651]
[199.90917969 57.17177582]
[186.56312561 64.01887512]
[173.21705627 70.86597443]
[159.87100220 77.71307373]
[146.52494812 84.56016541]
[149.01820374 100.41712189]
[146.25544739 116.22935486]
[138.53291321 130.30137634]
[126.67864990 141.12431335]
[111.96373749 147.53764343]
[113.35593414 162.47290039]
[114.74812317 177.40815735]
[116.14031219 192.34341431]
[117.53250885 207.27865601]
[118.92469788 222.21391296]
[127.90943146 235.23640442]
[121.38677979 248.62686157]
[122.77897644 263.56210327]
[131.57667542 270.04431152]
[135.25723267 280.09967041]
[132.82482910 290.30142212]
[125.32449341 297.31347656]
[126.16058350 312.29016113]
[126.99666595 327.26684570]
[139.87300110 335.72299194]
[145.23837280 349.97311401]
[141.23135376 364.47854614]
[129.59063721 373.73226929]
[138.08511353 387.07974243]
[131.06924438 400.21847534]
[131.90533447 415.19515991]
[132.74142456 430.17184448]
[133.57749939 445.14852905]
[143.00384521 458.56777954]
[135.85113525 473.32482910]
[119.47748566 474.23892212]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[3 163]
[4 162]
[6 160]
[10 156]
[11 155]
[12 154]
[14 150]
[15 149]
[17 147]
[18 146]
[19 145]
[20 144]
[21 143]
[22 142]
[27 44]
[28 43]
[31 40]
[32 39]
[47 87]
[49 86]
[50 85]
[51 84]
[52 83]
[56 79]
[57 78]
[58 77]
[59 76]
[60 75]
[61 74]
[62 73]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
[96 132]
[97 131]
[98 130]
[100 128]
[103 125]
[104 124]
[105 123]
[106 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
