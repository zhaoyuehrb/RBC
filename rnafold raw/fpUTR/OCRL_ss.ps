%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUCUCUCUUGGGUCAGAUUCUCAGCUCCCAGCUCCCCGCUCCCGGCUCCCGGCGCCCGGCGCCCGGCGCGGAGCUGUUCCUCAAACGACACGCAGCCGAGGUGGGUGGGUGUGGGGACGCGGGAGCCAGUGUCGUCGGAUCGGCCCGCAGUCCGCUGUCCUGCUGAGCCCGGAGGCCGCCUGG\
) } def
/len { sequence length } bind def

/coor [
[84.71319580 356.60140991]
[95.49279022 345.04388428]
[94.73305511 330.06314087]
[83.54330444 320.29968262]
[82.55941772 305.11788940]
[92.87610626 293.44726562]
[92.11637115 278.46652222]
[91.35662842 263.48577881]
[90.59689331 248.50502014]
[89.83715820 233.52427673]
[81.46515656 221.20523071]
[88.49356079 207.03088379]
[87.73382568 192.05014038]
[79.36183167 179.73107910]
[86.39022827 165.55673218]
[85.63049316 150.57598877]
[84.87075806 135.59524536]
[84.11102295 120.61449432]
[70.73721313 127.40724182]
[55.94880295 124.89669037]
[45.56600571 114.07090759]
[43.67513657 99.19056702]
[51.02038574 86.11206055]
[64.71090698 79.98265076]
[79.35857391 83.21466827]
[89.19824982 94.53537750]
[81.47991943 81.67352295]
[73.76158905 68.81166077]
[66.04325867 55.94980621]
[58.32492828 43.08795166]
[50.60659790 30.22609329]
[43.49158478 24.46208000]
[42.86863708 17.08118248]
[35.36863708 4.09080124]
[27.75919914 -8.83577919]
[20.04086685 -21.69763565]
[12.32253647 -34.55949402]
[4.60420561 -47.42134857]
[-3.11412549 -60.28320694]
[-10.83245659 -73.14506531]
[-18.55078697 -86.00691986]
[-32.28614426 -93.85871124]
[-32.20062637 -108.75306702]
[-39.91895676 -121.61492157]
[-47.63729095 -134.47677612]
[-55.35562134 -147.33863831]
[-69.09097290 -155.19042969]
[-69.00546265 -170.08477783]
[-76.72379303 -182.94664001]
[-90.45914459 -190.79843140]
[-90.37363434 -205.69279480]
[-98.09196472 -218.55464172]
[-109.30668640 -228.51606750]
[-122.98918152 -234.66337585]
[-136.67167664 -240.81066895]
[-150.35417175 -246.95797729]
[-164.03666687 -253.10528564]
[-180.96249390 -254.08122253]
[-184.71025085 -270.61575317]
[-169.85937500 -278.79425049]
[-157.88935852 -266.78778076]
[-144.20686340 -260.64047241]
[-130.52436829 -254.49316406]
[-116.84188080 -248.34587097]
[-103.15938568 -242.19856262]
[-92.11450195 -252.34796143]
[-97.08576202 -266.50024414]
[-102.05702972 -280.65249634]
[-107.02828979 -294.80474854]
[-112.11889648 -308.91452026]
[-117.32846832 -322.98080444]
[-122.53804779 -337.04708862]
[-133.92216492 -343.14080811]
[-137.96487427 -354.98101807]
[-133.01187134 -366.03207397]
[-144.88549805 -376.48803711]
[-141.80352783 -391.06030273]
[-146.77479553 -405.21255493]
[-151.74604797 -419.36483765]
[-156.71731567 -433.51708984]
[-170.49948120 -441.72875977]
[-172.52954102 -457.64285278]
[-161.25019836 -469.05145264]
[-145.31401062 -467.20285034]
[-136.94584656 -453.51513672]
[-142.56504822 -438.48834229]
[-137.59379578 -424.33609009]
[-132.62252808 -410.18383789]
[-127.65126038 -396.03155518]
[-116.13320160 -386.58786011]
[-118.85960388 -371.00332642]
[-104.94864655 -360.32037354]
[-108.47177124 -342.25668335]
[-103.26219177 -328.19039917]
[-98.05261230 -314.12411499]
[-92.76962280 -308.93222046]
[-92.87602997 -299.77603149]
[-87.90476227 -285.62374878]
[-82.93350220 -271.47149658]
[-77.96223450 -257.31924438]
[-75.74202728 -237.95715332]
[-85.23010254 -226.27297974]
[-77.51177216 -213.41111755]
[-64.32848358 -206.47929382]
[-63.86193466 -190.66497803]
[-56.14360428 -177.80311584]
[-42.96031189 -170.87129211]
[-42.49376297 -155.05697632]
[-34.77543259 -142.19511414]
[-27.05710030 -129.33325195]
[-19.33876991 -116.47139740]
[-6.15548038 -109.53958130]
[-5.68893051 -93.72525024]
[2.02940059 -80.86339569]
[9.74773121 -68.00154114]
[17.46606255 -55.13968277]
[25.18439293 -42.27782440]
[32.90272522 -29.41596603]
[40.62105560 -16.55410957]
[46.77220154 -12.42747021]
[48.35901642 -3.40919900]
[55.85901642 9.58118248]
[63.46845245 22.50776291]
[71.18678284 35.36961746]
[78.90511322 48.23147583]
[86.62344360 61.09333420]
[94.34177399 73.95519257]
[102.06011200 86.81704712]
[114.15053558 95.69520569]
[128.73312378 99.20919800]
[143.31570435 102.72319794]
[152.41415405 101.69102478]
[158.11389160 106.42164612]
[173.41288757 102.39039612]
[183.79449463 113.07081604]
[198.31565857 116.83060455]
[213.61465454 112.79935455]
[223.99626160 123.47978210]
[238.51742554 127.23956299]
[253.03857422 130.99935913]
[267.55972290 134.75914001]
[282.08090210 138.51893616]
[297.37991333 134.48767090]
[307.76150513 145.16810608]
[322.26074219 138.30139160]
[336.60552979 145.48516846]
[339.79177856 161.20863342]
[329.37527466 173.41009521]
[313.34664917 172.72964478]
[304.00170898 159.68925476]
[289.74136353 163.98944092]
[278.32110596 153.04008484]
[263.79995728 149.28030396]
[249.27879333 145.52050781]
[234.75762939 141.76072693]
[220.23648071 138.00093079]
[205.97612000 142.30111694]
[194.55586243 131.35176086]
[180.03471375 127.59197998]
[165.77435303 131.89215088]
[154.35409546 120.94280243]
[139.80171204 117.30578613]
[125.21912384 113.79178619]
[110.63653564 110.27778625]
[99.09176636 119.85475922]
[99.85150146 134.83551025]
[100.61124420 149.81625366]
[101.37097931 164.79699707]
[109.79731750 178.18757629]
[102.71456909 191.29039001]
[103.47431183 206.27114868]
[111.90065002 219.66171265]
[104.81790161 232.76454163]
[105.57763672 247.74528503]
[106.33737946 262.72604370]
[107.09711456 277.70678711]
[107.85684967 292.68753052]
[119.30130768 303.25457764]
[119.85838318 318.45800781]
[109.71379852 329.30340576]
[110.47354126 344.28414917]
[122.36708069 354.69180298]
[123.33438873 370.46646118]
[112.80157471 382.24929810]
[97.01757050 383.04977417]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 181]
[3 180]
[6 177]
[7 176]
[8 175]
[9 174]
[10 173]
[12 171]
[13 170]
[15 168]
[16 167]
[17 166]
[18 165]
[26 128]
[27 127]
[28 126]
[29 125]
[30 124]
[31 123]
[33 122]
[34 121]
[35 119]
[36 118]
[37 117]
[38 116]
[39 115]
[40 114]
[41 113]
[43 111]
[44 110]
[45 109]
[46 108]
[48 106]
[49 105]
[51 103]
[52 102]
[53 65]
[54 64]
[55 63]
[56 62]
[57 61]
[66 100]
[67 99]
[68 98]
[69 97]
[70 95]
[71 94]
[72 93]
[75 91]
[77 89]
[78 88]
[79 87]
[80 86]
[129 164]
[130 163]
[131 162]
[133 161]
[135 159]
[136 158]
[138 156]
[139 155]
[140 154]
[141 153]
[142 152]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
