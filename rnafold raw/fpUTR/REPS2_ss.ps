%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGGAGGAAGCGGCCGCGCGGCAGCUGCGGGGCGUGGGGGUGGUGGUGGCGGCGGCGGUGGUGGCGGCGGCGGCGGCGGCGGCAGCUGAGGCCGAGGAGGCGGUGGCUGUGGCGGACGCAGCAGCACCCCAGCUAGGGACAGGGCUCCGCCGCGCCCCCUUGCUGGCCCC\
) } def
/len { sequence length } bind def

/coor [
[63.03693771 388.86981201]
[49.87196732 378.18710327]
[56.49275208 362.57937622]
[57.04058075 347.58938599]
[57.58841324 332.59939575]
[54.67962646 325.77496338]
[58.28562164 317.34133911]
[48.18585587 306.45416260]
[48.80562973 291.25317383]
[60.29356766 280.73342896]
[61.11508560 265.75595093]
[61.93660355 250.77845764]
[62.75812149 235.80096436]
[49.35590744 229.06445312]
[37.82620239 238.65954590]
[26.29649353 248.25463867]
[20.63837242 263.02947998]
[5.90624952 265.22354126]
[-5.62345743 274.81863403]
[-17.15316391 284.41372681]
[-28.68287086 294.00881958]
[-40.21257782 303.60391235]
[-48.51960373 318.38327026]
[-65.02099609 314.49221802]
[-65.85005951 297.55856323]
[-49.80767441 292.07418823]
[-38.27796555 282.47909546]
[-26.74826050 272.88400269]
[-15.21855259 263.28890991]
[-3.68884563 253.69381714]
[1.14459324 239.60527039]
[16.70139885 236.72492981]
[28.23110580 227.12983704]
[39.76081085 217.53474426]
[42.73797989 199.40606689]
[55.12543106 188.17031860]
[70.17598724 187.22900391]
[76.78983307 173.76582336]
[83.40367889 160.30265808]
[90.01752472 146.83947754]
[96.63137054 133.37629700]
[103.24521637 119.91313171]
[87.42362976 113.10959625]
[83.95883179 98.06518555]
[71.60211182 89.56156158]
[55.84745407 88.11198425]
[49.74930191 74.52294922]
[37.39258575 66.01933289]
[21.63792610 64.56974792]
[15.53977585 50.98071289]
[3.18305779 42.47709274]
[-12.57160091 41.02750778]
[-18.66975212 27.43847656]
[-31.02647018 18.93485832]
[-46.78112793 17.48527336]
[-52.87928009 3.89624023]
[-65.23600006 -4.60737801]
[-81.61768341 -5.36389685]
[-88.91201782 -20.05146790]
[-79.61521149 -33.56077576]
[-63.29102325 -31.99460602]
[-56.73237991 -16.96409607]
[-44.37565994 -8.46047783]
[-29.50483704 -7.61912918]
[-22.52285194 6.57813978]
[-10.16613293 15.08175850]
[4.70469046 15.92310619]
[11.68667603 30.12037468]
[24.04339409 38.62399292]
[38.91421890 39.46534348]
[45.89620209 53.66261292]
[58.25292206 62.16622925]
[73.12374878 63.00757980]
[80.10572815 77.20484924]
[92.46244812 85.70846558]
[110.33605957 85.06037140]
[120.01836395 102.51578522]
[133.23100281 95.41464996]
[146.44364929 88.31351471]
[159.65629578 81.21237946]
[172.86892700 74.11124420]
[186.08157349 67.01010132]
[199.29420471 59.90896988]
[205.39982605 53.06422043]
[212.81364441 52.80130005]
[226.15377808 45.94266510]
[239.49391174 39.08403015]
[252.83404541 32.22539520]
[253.46223450 15.72026253]
[262.26867676 1.85764945]
[276.77587891 -5.63868904]
[292.99057007 -4.81161928]
[306.50274658 4.01933527]
[319.71539307 -3.08180070]
[328.20825195 -16.43027115]
[343.08190918 -15.64013290]
[356.29452515 -22.74126816]
[360.94348145 -37.60817719]
[374.44415283 -44.62152100]
[388.58880615 -40.09783554]
[401.80145264 -47.19897079]
[407.90707397 -54.04372025]
[415.32089233 -54.30664062]
[428.66104126 -61.16527557]
[442.00115967 -68.02391052]
[455.34130859 -74.88254547]
[468.55392456 -81.98368073]
[481.63467407 -89.32495117]
[494.71542358 -96.66621399]
[507.79617310 -104.00748444]
[520.87689209 -111.34875488]
[533.95764160 -118.69001770]
[539.66503906 -133.68351746]
[554.98919678 -138.43214417]
[568.17474365 -129.29316711]
[569.10687256 -113.27720642]
[557.07049561 -102.67035675]
[541.29888916 -105.60927582]
[528.21813965 -98.26801300]
[515.13745117 -90.92674255]
[502.05670166 -83.58547211]
[488.97595215 -76.24420929]
[475.89520264 -68.90293884]
[473.75692749 -64.59497833]
[468.87078857 -61.60276413]
[462.19992065 -61.54241180]
[448.85980225 -54.68377686]
[435.51965332 -47.82514191]
[422.17953491 -40.96650696]
[408.90258789 -33.98633194]
[395.68994141 -26.88519478]
[391.65811157 -12.59254265]
[378.35977173 -5.20276260]
[363.39566040 -9.52862835]
[350.18304443 -2.42749238]
[342.63522339 10.41305828]
[326.81652832 10.13084030]
[313.60388184 17.23197556]
[314.08605957 30.90027237]
[308.59851074 43.50019455]
[298.16250610 52.54375458]
[284.78244019 56.21840286]
[271.06091309 53.75010300]
[259.69268799 45.56552887]
[246.35255432 52.42416382]
[233.01242065 59.28279877]
[219.67228699 66.14143372]
[206.39533997 73.12161255]
[193.18270874 80.22274780]
[179.97006226 87.32388306]
[166.75743103 94.42501831]
[153.54478455 101.52615356]
[140.33213806 108.62728882]
[127.11950684 115.72842407]
[116.70838928 126.52697754]
[110.09454346 139.99014282]
[103.48069763 153.45332336]
[96.86685181 166.91650391]
[90.25300598 180.37966919]
[83.63916016 193.84284973]
[92.81007385 214.79553223]
[77.73560333 236.62248230]
[76.91409302 251.59997559]
[76.09257507 266.57745361]
[75.27105713 281.55493164]
[85.53952026 293.26803589]
[84.49302673 308.44561768]
[73.26310730 318.16287231]
[72.57840729 333.14721680]
[72.03057098 348.13720703]
[71.48274231 363.12719727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 171]
[4 170]
[5 169]
[7 168]
[10 165]
[11 164]
[12 163]
[13 162]
[14 34]
[15 33]
[16 32]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[37 160]
[38 159]
[39 158]
[40 157]
[41 156]
[42 155]
[44 75]
[45 74]
[47 72]
[48 71]
[50 69]
[51 68]
[53 66]
[54 65]
[56 63]
[57 62]
[77 154]
[78 153]
[79 152]
[80 151]
[81 150]
[82 149]
[83 148]
[85 147]
[86 146]
[87 145]
[88 144]
[93 138]
[94 137]
[96 135]
[97 134]
[100 131]
[101 130]
[103 129]
[104 128]
[105 127]
[106 126]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[112 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
