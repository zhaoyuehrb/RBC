%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCAUCUCUCCAUCUCUGCGCUGCUGCCGGCUGCGCCAUCCAGCACCCAGACUCCAGCACCGGCCGAGGACCCCCACUCCGGCUGCAGGGACCCUGUCCCAGCGAGACCGCAGGC\
) } def
/len { sequence length } bind def

/coor [
[91.12133026 220.91159058]
[89.20360565 235.93161011]
[82.51055908 249.51402283]
[71.76820374 260.18551636]
[58.14178848 266.78848267]
[43.10940170 268.60675049]
[28.30164337 265.44302368]
[15.32475376 257.64053345]
[5.58636522 246.04559326]
[0.14282621 231.91596985]
[-0.41538888 216.78430176]
[3.97227073 202.29199219]
[12.82986450 190.01103210]
[25.19658852 181.27359009]
[39.73099136 177.02743530]
[54.85648727 177.73315430]
[60.36337280 163.78057861]
[65.87026215 149.82800293]
[71.37714386 135.87544250]
[76.88403320 121.92286682]
[72.32545471 107.63233185]
[59.75637436 99.44586945]
[47.18729401 91.25939941]
[34.61821747 83.07292938]
[19.34348106 86.12583160]
[6.71326685 77.64453888]
[3.89692402 63.06359863]
[-8.78092670 55.04661179]
[-24.58982086 54.42256165]
[-31.38998222 41.17088318]
[-44.17432022 33.32481766]
[-59.98321533 32.70077133]
[-66.78337860 19.44908714]
[-79.56771088 11.60302544]
[-92.35205078 3.75696325]
[-106.63995361 9.80969238]
[-121.74917603 6.27544546]
[-131.86991882 -5.48678732]
[-133.11056519 -20.95418739]
[-124.99402618 -34.17922211]
[-110.64131165 -40.07659912]
[-95.57131195 -36.37865448]
[-85.57875824 -24.50732231]
[-84.50598907 -9.02737522]
[-71.72164917 -1.18131292]
[-58.93731308 6.66474915]
[-44.04283905 6.72759581]
[-36.32825851 20.54048157]
[-23.54392052 28.38654327]
[-8.64944744 28.44939041]
[-0.93486506 42.26227570]
[6.50885391 43.08987045]
[12.08339214 50.49452209]
[26.55821609 47.17563248]
[39.42166901 55.29882050]
[42.80468369 70.50385284]
[55.37376404 78.69032288]
[67.94284058 86.87678528]
[80.51192474 95.06325531]
[83.22782135 86.16892242]
[90.04941559 78.84838867]
[100.04412842 74.98891449]
[111.42829132 75.92814636]
[122.52140045 65.83147430]
[133.61451721 55.73479462]
[144.70762634 45.63811493]
[155.80073547 35.54143906]
[166.75729370 25.29674530]
[177.57533264 14.90587902]
[175.32371521 -0.44696546]
[182.55609131 -14.17548561]
[196.49148560 -21.00078583]
[211.77142334 -18.29839706]
[222.52047729 -7.10744381]
[224.60542297 8.26892376]
[217.22453308 21.91817856]
[203.21592712 28.59190369]
[187.96620178 25.72391701]
[177.14816284 36.11478043]
[174.46907043 43.10880661]
[165.89741516 46.63455200]
[154.80430603 56.73122787]
[143.71118164 66.82790375]
[132.61807251 76.92458344]
[121.52496338 87.02125549]
[124.12969208 101.79337311]
[138.00706482 107.48708344]
[153.71134949 105.56712341]
[162.54916382 117.55638123]
[176.42654419 123.25008392]
[190.30392456 128.94378662]
[204.18132019 134.63749695]
[218.05870056 140.33120728]
[235.00747681 140.74960327]
[239.29731750 157.15184021]
[224.72363281 165.81463623]
[212.36499023 154.20858765]
[198.48760986 148.51487732]
[184.61022949 142.82116699]
[170.73284912 137.12747192]
[156.85546875 131.43376160]
[142.14378357 133.76097107]
[132.31336975 121.36446381]
[118.43598175 115.67075348]
[111.53614044 118.61050415]
[123.52783203 127.62156677]
[121.71997070 142.51222229]
[107.92038727 148.39198303]
[95.92852020 139.38113403]
[97.73645020 124.49000549]
[90.83660126 127.42975616]
[85.32971191 141.38232422]
[79.82283020 155.33489990]
[74.31594086 169.28746033]
[68.80905914 183.24003601]
[80.33927155 193.05496216]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 115]
[17 114]
[18 113]
[19 112]
[20 111]
[21 59]
[22 58]
[23 57]
[24 56]
[27 53]
[28 51]
[30 49]
[31 48]
[33 46]
[34 45]
[35 44]
[63 85]
[64 84]
[65 83]
[66 82]
[67 81]
[68 79]
[69 78]
[86 104]
[87 103]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
