%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGGGGCCGCAUCACCCUGCCGGCCCGGCGCGGGUCGGGGGUGGGUGCGGUAGGGGUCCCGGGGCGGCCGAGCGCAGAGGACGGACGGGAAGGAGGGCAGGGGGCGCGGGAGCCGGCGAAGCGGAGCGGGCAUCGGACCGAGCCCCCCAAAGAGGCCCCGCCCCGGCCCUGGCCCCGGCCGGGCCGG\
) } def
/len { sequence length } bind def

/coor [
[-30.56203842 522.03466797]
[-34.02851105 530.54095459]
[-40.92224503 536.40093994]
[-49.60732651 538.39044189]
[-55.40481186 552.22479248]
[-61.20230103 566.05914307]
[-66.99978638 579.89349365]
[-58.16915894 592.54351807]
[-57.60232544 607.96051025]
[-65.48015594 621.22485352]
[-79.28887177 628.10400391]
[-94.62216187 626.40289307]
[-106.58721924 616.66424561]
[-111.36605072 601.99566650]
[-107.43373871 587.07788086]
[-96.04506683 576.67108154]
[-80.83413696 574.09600830]
[-75.03664398 560.26165771]
[-69.23915863 546.42730713]
[-63.44167328 532.59295654]
[-67.85301971 512.44073486]
[-50.64471054 499.68963623]
[-45.54031372 485.58486938]
[-40.43591690 471.48007202]
[-35.33152008 457.37527466]
[-30.22712135 443.27047729]
[-25.12272453 429.16567993]
[-20.01832581 415.06091309]
[-14.91392803 400.95611572]
[-9.80953121 386.85131836]
[-4.70513344 372.74652100]
[-11.23752785 359.40997314]
[-6.26187134 345.03302002]
[7.77101469 338.27166748]
[12.87541199 324.16687012]
[17.97981071 310.06207275]
[23.08420753 295.95727539]
[28.18860435 281.85247803]
[33.29300308 267.74771118]
[38.39739990 253.64291382]
[43.50179672 239.53811646]
[48.60619736 225.43333435]
[45.66166687 210.83267212]
[57.63330460 200.48905945]
[62.73770142 186.38426208]
[67.84210205 172.27947998]
[72.94649506 158.17468262]
[72.26510620 150.80189514]
[78.25365448 143.88006592]
[83.59056091 129.86160278]
[88.92746735 115.84313202]
[79.31712341 127.36013031]
[64.66777802 130.58453369]
[51.10994720 124.16696167]
[44.31735992 110.79307556]
[47.13260651 96.05963135]
[58.37754822 86.13233185]
[73.34636688 85.16559601]
[85.77560425 93.56498718]
[76.75939178 81.57717133]
[67.74317169 69.58934784]
[58.72695541 57.60152817]
[49.71073914 45.61370850]
[36.23527527 45.27230835]
[25.57589149 37.34318542]
[21.49549294 24.90500450]
[25.27266693 12.57490063]
[16.45588875 0.43964601]
[2.08474326 -6.17705679]
[0.86344802 -21.02150726]
[-7.95333099 -33.15676117]
[-23.34932137 -32.17339325]
[-36.82178497 -39.68979263]
[-44.07170868 -53.30750656]
[-42.78566360 -68.68117523]
[-33.37402725 -80.90511322]
[-18.84001732 -86.07870483]
[-3.82138133 -82.55107880]
[6.88948679 -71.44789124]
[9.87478828 -56.31211853]
[4.18192434 -41.97354126]
[12.99870300 -29.83828545]
[26.73921394 -24.08957863]
[28.59114265 -8.37713242]
[37.40792084 3.75812221]
[54.10848618 5.67059755]
[64.46947479 19.33363152]
[61.69855881 36.59749222]
[70.71477509 48.58531189]
[79.73099518 60.57313156]
[88.74720764 72.56095123]
[97.76342773 84.54876709]
[96.20735168 69.62969971]
[107.46841431 59.72068405]
[122.06832123 63.16200638]
[127.71853638 77.05715179]
[119.66327667 89.71080780]
[133.08421326 83.01167297]
[146.50515747 76.31254578]
[159.92610168 69.61341095]
[171.11941528 48.55170441]
[194.17320251 50.42092896]
[206.86462402 42.42545319]
[219.55606079 34.42997742]
[232.24748230 26.43450165]
[244.93891907 18.43902588]
[257.63034058 10.44355011]
[265.18237305 -3.45887232]
[280.07507324 -3.69641900]
[292.76651001 -11.69189453]
[305.45794678 -19.68737030]
[317.94717407 -27.99512863]
[330.22656250 -36.61005783]
[342.43429565 -45.32621002]
[354.56954956 -54.14299011]
[366.70480347 -62.95977020]
[373.32150269 -77.33091736]
[388.16595459 -78.55220795]
[400.30120850 -87.36898804]
[400.16653442 -102.88547516]
[409.20535278 -115.49815369]
[423.94201660 -120.35719299]
[438.70999146 -115.59417725]
[447.83071899 -103.04060364]
[447.79702759 -87.52355957]
[438.62194824 -75.00968170]
[423.83343506 -70.31079865]
[409.11798096 -75.23373413]
[396.98272705 -66.41695404]
[391.23400879 -52.67644501]
[375.52157593 -50.82451248]
[363.38632202 -42.00773621]
[351.25106812 -33.19095612]
[347.68121338 -26.70415688]
[338.84149170 -24.33068657]
[326.56210327 -15.71575642]
[325.59896851 -12.30627918]
[322.92611694 -9.19829559]
[318.70541382 -7.19502735]
[313.45343018 -6.99594212]
[300.76199341 0.99953389]
[288.07055664 8.99500942]
[281.42630005 22.32554245]
[265.62582397 23.13497925]
[252.93438721 31.13045502]
[240.24296570 39.12593079]
[227.55152893 47.12140656]
[214.86010742 55.11688232]
[202.16867065 63.11235809]
[202.55467224 69.63978577]
[200.88237000 76.01454163]
[197.28599548 81.59873199]
[192.09387207 85.82337189]
[185.79870605 88.24626923]
[179.01087952 88.59819031]
[172.39923096 86.81239319]
[166.62522888 83.03435516]
[153.20428467 89.73348236]
[139.78334045 96.43261719]
[126.36240387 103.13175201]
[102.94593048 121.18003845]
[97.60902405 135.19850159]
[92.27211761 149.21697998]
[87.05128479 163.27908325]
[81.94689178 177.38388062]
[76.84249115 191.48866272]
[71.73809814 205.59346008]
[74.31752014 221.20297241]
[62.71098709 230.53771973]
[57.60659027 244.64251709]
[52.50218964 258.74731445]
[47.39779282 272.85211182]
[42.29339600 286.95687866]
[37.18899918 301.06167603]
[32.08460236 315.16647339]
[26.98020363 329.27127075]
[21.87580490 343.37606812]
[28.33163834 357.55209351]
[22.95412636 371.78363037]
[9.39965725 377.85092163]
[4.29525995 391.95571899]
[-0.80913764 406.06051636]
[-5.91353512 420.16531372]
[-11.01793289 434.27008057]
[-16.12232971 448.37487793]
[-21.22672844 462.47967529]
[-26.33112526 476.58447266]
[-31.43552399 490.68923950]
[-36.53992081 504.79403687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 20]
[5 19]
[6 18]
[7 17]
[22 189]
[23 188]
[24 187]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[30 181]
[31 180]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[39 172]
[40 171]
[41 170]
[42 169]
[44 167]
[45 166]
[46 165]
[47 164]
[49 163]
[50 162]
[51 161]
[59 92]
[60 91]
[61 90]
[62 89]
[63 88]
[67 85]
[68 84]
[70 82]
[71 81]
[97 160]
[98 159]
[99 158]
[100 157]
[102 149]
[103 148]
[104 147]
[105 146]
[106 145]
[107 144]
[109 142]
[110 141]
[111 140]
[112 136]
[113 135]
[114 133]
[115 132]
[116 131]
[118 129]
[119 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
