%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGCUGGAGCCGAGCGCCGCCGCCGAAGCUUCCGUCUCGCUCGCUCGCGCAGCGGCGGCAGCAGAGGUCGCGCACAGAUGCGGGUUAGACUGGCGGGGGGAGGAGGCGGAGGAGGGAAGGAAGCUGCAUGCAUGAGACCCACAGACUCUUGCAAGCUGGAUGCCCUCUGUGGAUGAAAG\
) } def
/len { sequence length } bind def

/coor [
[107.39841461 147.99728394]
[105.59905243 133.10559082]
[100.03868866 147.03694153]
[102.10915375 162.72207642]
[90.20520020 171.67446899]
[84.64483643 185.60581970]
[79.08447266 199.53715515]
[81.15493774 215.22230530]
[69.25098419 224.17468262]
[68.99513245 241.12670898]
[52.63478470 245.57363892]
[43.83264160 231.08369446]
[55.31964111 218.61431885]
[52.85145950 203.92564392]
[65.15312958 193.97679138]
[70.71349335 180.04544067]
[76.27385712 166.11410522]
[73.80567932 151.42541504]
[86.10734558 141.47657776]
[91.66770935 127.54522705]
[78.24246979 111.00691986]
[81.15803528 93.32736969]
[69.93037415 83.38053131]
[58.70271301 73.43369293]
[47.47505188 63.48685074]
[36.24739075 53.54001236]
[20.63151550 58.93727493]
[4.51543808 55.74870300]
[-7.72805119 44.93581772]
[-12.82553959 29.51565742]
[-9.47786140 13.71943569]
[-20.87553978 3.96787453]
[-32.27321625 -5.78368664]
[-43.67089462 -15.53524780]
[-55.06856918 -25.28680992]
[-66.46624756 -35.03837204]
[-77.86392212 -44.78993225]
[-89.26160431 -54.54149246]
[-104.27384186 -51.08624268]
[-118.27840424 -57.06333923]
[-125.98689270 -69.98786163]
[-124.62311554 -84.79589844]
[-136.02079773 -94.54746246]
[-151.53683472 -97.63986206]
[-156.17753601 -111.79306030]
[-167.57522583 -121.54462433]
[-178.97290039 -131.29618835]
[-190.37057495 -141.04774475]
[-201.76824951 -150.79930115]
[-213.16592407 -160.55087280]
[-224.56361389 -170.30242920]
[-236.04502869 -179.95526123]
[-256.04064941 -182.37483215]
[-262.05633545 -200.73559570]
[-273.94348145 -209.88412476]
[-285.83065796 -219.03265381]
[-294.56451416 -221.79724121]
[-297.84222412 -228.44311523]
[-309.56967163 -237.79547119]
[-321.29714966 -247.14781189]
[-333.02462769 -256.50015259]
[-348.31527710 -253.22450256]
[-362.10989380 -260.58947754]
[-367.89505005 -275.11758423]
[-362.93920898 -289.94909668]
[-349.58233643 -298.08102417]
[-334.13116455 -295.67370605]
[-323.88122559 -283.86383057]
[-323.67227173 -268.22763062]
[-311.94482422 -258.87527466]
[-300.21734619 -249.52293396]
[-288.48986816 -240.17059326]
[-276.68212891 -230.91981506]
[-264.79495239 -221.77128601]
[-252.90780640 -212.62275696]
[-242.90293884 -214.85060120]
[-233.12324524 -211.11233521]
[-226.89906311 -202.42156982]
[-226.49163818 -191.51956177]
[-219.31373596 -189.67871094]
[-214.81204224 -181.70010376]
[-203.41436768 -171.94854736]
[-192.01669312 -162.19699097]
[-180.61901855 -152.44541931]
[-169.22134399 -142.69386292]
[-157.82365417 -132.94230652]
[-146.42597961 -123.19074249]
[-131.72517395 -120.79583740]
[-126.26923370 -105.94513702]
[-114.87155151 -96.19358063]
[-100.45286560 -99.83216858]
[-86.49127197 -94.21631622]
[-78.41923523 -81.30525208]
[-79.51004028 -65.93917084]
[-68.11236572 -56.18761063]
[-56.71468735 -46.43604660]
[-45.31700897 -36.68448639]
[-33.91933060 -26.93292618]
[-22.52165413 -17.18136406]
[-11.12397766 -7.42980289]
[0.27369997 2.32175851]
[12.83731365 -3.06810355]
[26.56317520 -2.51078773]
[38.76553345 3.94180417]
[47.03211975 15.07865810]
[49.70095062 28.75654030]
[46.19422913 42.31235123]
[57.42189026 52.25918961]
[68.64955139 62.20602798]
[79.87721252 72.15287018]
[91.10487366 82.09970856]
[115.40994263 81.10354614]
[127.82081604 107.35995483]
[142.59790039 109.93634033]
[157.37498474 112.51272583]
[172.15206909 115.08911133]
[186.92915344 117.66549683]
[201.70623779 120.24188232]
[210.63546753 107.91182709]
[223.97828674 100.71070862]
[239.06280518 100.01970673]
[252.89463806 105.92235565]
[262.75134277 117.19864655]
[266.71823120 131.57673645]
[281.49533081 134.15312195]
[296.27239990 136.72950745]
[311.04949951 139.30589294]
[315.99822998 137.48916626]
[320.67630005 137.74424744]
[324.33465576 139.61613464]
[326.51635742 142.41714478]
[341.14025879 145.75495911]
[355.76419067 149.09277344]
[370.38809204 152.43058777]
[385.56399536 147.95809937]
[396.25045776 158.33349609]
[410.87435913 161.67131042]
[425.49829102 165.00912476]
[436.44555664 154.13896179]
[451.53662109 150.93528748]
[465.95596313 156.42039490]
[475.10241699 168.84400940]
[476.05737305 184.24179077]
[468.51614380 197.70036316]
[454.88507080 204.92515564]
[439.51379395 203.61074829]
[427.30725098 194.17657471]
[422.16046143 179.63304138]
[407.53656006 176.29522705]
[392.91262817 172.95741272]
[378.78274536 177.66864014]
[367.05029297 167.05450439]
[352.42636108 163.71669006]
[337.80245972 160.37887573]
[323.17852783 157.04106140]
[308.47311401 154.08297729]
[293.69601440 151.50659180]
[278.91891479 148.93020630]
[264.14184570 146.35382080]
[255.54328918 158.54110718]
[242.45210266 165.81643677]
[227.43884277 166.68994141]
[213.47819519 160.93490601]
[203.35957336 149.64329529]
[199.12985229 135.01896667]
[184.35276794 132.44258118]
[169.57568359 129.86619568]
[154.79859924 127.28981018]
[140.02151489 124.71342468]
[125.24443054 122.13703918]
[136.97735596 131.48254395]
[151.60656738 134.79705811]
[163.44813538 144.00451660]
[170.26541138 157.36584473]
[170.77073669 172.35733032]
[164.86868286 186.14738464]
[153.67402649 196.13136292]
[139.30122375 200.42347717]
[124.46498108 198.21302795]
[111.96759033 189.91754150]
[104.16954803 177.10385132]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 20]
[3 19]
[5 17]
[6 16]
[7 15]
[9 13]
[22 111]
[23 110]
[24 109]
[25 108]
[26 107]
[31 101]
[32 100]
[33 99]
[34 98]
[35 97]
[36 96]
[37 95]
[38 94]
[42 90]
[43 89]
[45 87]
[46 86]
[47 85]
[48 84]
[49 83]
[50 82]
[51 81]
[52 79]
[54 75]
[55 74]
[56 73]
[58 72]
[59 71]
[60 70]
[61 69]
[113 170]
[114 169]
[115 168]
[116 167]
[117 166]
[118 165]
[124 159]
[125 158]
[126 157]
[127 156]
[131 155]
[132 154]
[133 153]
[134 152]
[136 150]
[137 149]
[138 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
