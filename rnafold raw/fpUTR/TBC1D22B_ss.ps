%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUGGUCGGCCCGUCCACGGCUUGCGCAGCUCACCAAUGGCAGCGGUGCUGGGUGGAGGGGUGCCCACAUCCAAGAUGGCGUCCCCAGGAGCUGGGAGCGGGUGACCGGCGGCGGGGAAGCGGCCUGGGUUGGCCCUCAGAUUGCGGGGUCUGGGGGCAUCUCGCCGGGCAAACCCUUGGCCCGCCUACAAGGACUUCCCCCGGCCAGAGCA\
) } def
/len { sequence length } bind def

/coor [
[344.88842773 199.70695496]
[335.66070557 187.88116455]
[332.39489746 173.24099731]
[335.72186279 158.61459351]
[344.99890137 146.82745361]
[358.43438721 140.15644836]
[343.52435303 138.51588440]
[328.61434937 136.87532043]
[313.70431519 135.23474121]
[298.79431152 133.59417725]
[291.80395508 135.98645020]
[283.67901611 131.81915283]
[268.79455566 129.96090698]
[253.91009521 128.10266113]
[239.02565002 126.24440765]
[224.12802124 124.49494934]
[209.21800232 122.85438538]
[194.30798340 121.21381378]
[187.31762695 123.60608673]
[179.19267273 119.43879700]
[164.30822754 117.58054352]
[149.42376709 115.72229004]
[134.53932190 113.86404419]
[119.65486908 112.00579071]
[104.77041626 110.14753723]
[89.88596344 112.00579071]
[75.91524506 117.46646881]
[65.87874603 129.69673157]
[51.20808029 127.12365723]
[37.23735809 132.58433533]
[23.26664162 138.04501343]
[9.29592228 143.50569153]
[4.87851620 148.41828918]
[-0.54266602 150.11079407]
[-5.16365004 148.91525269]
[-19.28796387 153.96537781]
[-33.41227722 159.01550293]
[-36.79629517 174.06713867]
[-47.79668045 184.88357544]
[-62.90324783 188.01330566]
[-77.29554749 182.45764160]
[-86.38104248 169.98939514]
[-87.26059723 154.58712769]
[-79.65354156 141.16564941]
[-65.98725891 134.00769043]
[-50.62261200 135.39735413]
[-38.46240234 144.89118958]
[-24.33808708 139.84106445]
[-10.21377277 134.79093933]
[3.83524346 129.53497314]
[17.80596161 124.07429504]
[31.77668190 118.61361694]
[45.74739838 113.15293884]
[54.78461456 101.31326294]
[70.45456696 103.49575043]
[84.42528534 98.03507233]
[85.24556732 90.58006287]
[73.15321350 81.70453644]
[86.88613892 75.67005157]
[87.70642090 68.21504211]
[75.25725555 59.84734726]
[62.80809021 51.47965622]
[50.35892487 43.11196518]
[37.84895706 34.83544540]
[25.27885437 26.65054893]
[12.70875359 18.46565247]
[0.13865244 10.28075409]
[-15.13570118 13.33556366]
[-27.76697540 4.85584736]
[-30.58513832 -9.72474098]
[-45.99430084 -6.21286201]
[-59.32883453 -14.69612122]
[-62.67760468 -30.14155197]
[-54.05383682 -43.38565063]
[-38.57386398 -46.57093430]
[-25.42168045 -37.80762482]
[-22.40023994 -22.29484177]
[-7.92583036 -25.61553955]
[4.93863678 -17.49395561]
[8.32355022 -2.28934765]
[20.89365196 5.89555025]
[33.46375275 14.08044815]
[46.03385544 22.26534653]
[53.35213852 23.28064156]
[58.72661591 30.66279793]
[71.17578125 39.03049088]
[83.62494659 47.39818192]
[96.07411194 55.76587677]
[108.23925018 68.74672699]
[111.49256897 83.34640503]
[106.62866211 95.26308441]
[121.51311493 97.12133789]
[136.39756775 98.97959137]
[151.28201294 100.83783722]
[166.16647339 102.69609070]
[181.05091858 104.55434418]
[195.94854736 106.30380249]
[210.85856628 107.94436646]
[225.76858521 109.58493805]
[234.63792419 107.41331482]
[240.88389587 111.35995483]
[255.76835632 113.21820831]
[270.65280151 115.07645416]
[285.53726196 116.93470764]
[300.43487549 118.68416595]
[315.34490967 120.32472992]
[330.25491333 121.96530151]
[345.16491699 123.60586548]
[360.07495117 125.24643707]
[375.07135010 125.57518005]
[390.03890991 124.58957672]
[405.00650024 123.60397339]
[418.26846313 114.97663116]
[431.47662354 121.86093903]
[439.83114624 118.17537689]
[446.66983032 120.97190857]
[461.65020752 120.20511627]
[476.63058472 119.43831635]
[491.61099243 118.67151642]
[506.59136963 117.90471649]
[521.57177734 117.13791656]
[536.55212402 116.37111664]
[544.01690674 99.76219177]
[563.30621338 91.48616028]
[585.79650879 99.22038269]
[599.76721191 93.75970459]
[613.73797607 88.29902649]
[627.70867920 82.83834839]
[641.67938232 77.37767029]
[655.65008545 71.91699219]
[669.58056641 66.35438538]
[673.39630127 49.87455368]
[686.15698242 39.02493286]
[702.70422363 37.93127441]
[716.50238037 46.82698059]
[730.30761719 40.96040726]
[744.11279297 35.09383774]
[757.91796875 29.22726631]
[771.72314453 23.36069489]
[785.52838135 17.49412537]
[799.33355713 11.62755394]
[813.13873291 5.76098347]
[826.94396973 -0.10558756]
[840.74914551 -5.97215843]
[854.55432129 -11.83872890]
[863.98065186 -25.25799942]
[880.28900146 -23.53490067]
[886.70275879 -8.44200802]
[876.62402344 4.49440432]
[860.42089844 1.96646357]
[846.61572266 7.83303452]
[832.81048584 13.69960499]
[819.00531006 19.56617546]
[805.20013428 25.43274689]
[791.39495850 31.29931831]
[777.58972168 37.16588974]
[763.78454590 43.03245926]
[749.97937012 48.89902878]
[736.17419434 54.76560211]
[722.36895752 60.63217163]
[720.59167480 73.86238861]
[712.44433594 84.57313538]
[699.96954346 89.90260315]
[686.38299561 88.36069489]
[675.24481201 80.24382782]
[670.23974609 85.67866516]
[661.11077881 85.88771057]
[647.14007568 91.34838867]
[633.16937256 96.80906677]
[619.19860840 102.26974487]
[605.22790527 107.73042297]
[591.25720215 113.19110107]
[589.94885254 120.57610321]
[604.71881104 123.19306183]
[602.10156250 137.96296692]
[587.33209229 135.34609985]
[586.02374268 142.73109436]
[597.26818848 152.65899658]
[608.51257324 162.58688354]
[619.75701904 172.51478577]
[631.00140381 182.44267273]
[645.81524658 178.13528442]
[660.59973145 182.54254150]
[670.63708496 194.25811768]
[672.72448730 209.54359436]
[666.19586182 223.52146912]
[653.13446045 231.73141479]
[637.70812988 231.55369568]
[624.83935547 223.04499817]
[618.63452148 208.92044067]
[621.07354736 193.68710327]
[609.82910156 183.75920105]
[598.58471680 173.83129883]
[587.34027100 163.90341187]
[576.09588623 153.97550964]
[549.04418945 150.45947266]
[537.31896973 131.35150146]
[522.33856201 132.11830139]
[507.35815430 132.88510132]
[492.37777710 133.65190125]
[477.39739990 134.41870117]
[462.41699219 135.18550110]
[447.43661499 135.95230103]
[432.46221924 136.82852173]
[420.27084351 145.38537598]
[405.99212646 138.57156372]
[391.02453613 139.55715942]
[376.05694580 140.54277039]
[389.18679810 147.79580688]
[397.93856812 159.97802734]
[400.62158203 174.73612976]
[396.71755981 189.21917725]
[386.98065186 200.62937927]
[373.29183960 206.76255798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 109]
[7 108]
[8 107]
[9 106]
[10 105]
[12 104]
[13 103]
[14 102]
[15 101]
[16 99]
[17 98]
[18 97]
[20 96]
[21 95]
[22 94]
[23 93]
[24 92]
[25 91]
[26 56]
[27 55]
[29 53]
[30 52]
[31 51]
[32 50]
[35 49]
[36 48]
[37 47]
[60 88]
[61 87]
[62 86]
[63 85]
[64 83]
[65 82]
[66 81]
[67 80]
[70 77]
[110 208]
[111 207]
[112 206]
[114 204]
[116 203]
[117 202]
[118 201]
[119 200]
[120 199]
[121 198]
[122 197]
[125 172]
[126 171]
[127 170]
[128 169]
[129 168]
[130 167]
[131 165]
[135 160]
[136 159]
[137 158]
[138 157]
[139 156]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[145 150]
[177 195]
[178 194]
[179 193]
[180 192]
[181 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
