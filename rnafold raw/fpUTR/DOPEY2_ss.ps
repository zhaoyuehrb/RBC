%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCCGCGCGGUGGGGAAGAGCCGCUGCCGCUGGUUCUCCGGCUCUUCCUCGGCGGUUCUGGCUCCCGGCCGCGCCGCAGCCCUGCCCAGUCUCUCUCCCCCAGCCCGGAGGGCUCCUCCGCGCCGCACGUGAGCGCGCCCGCCAACAGGGCCACUGCCGCGAUACUUUUCUGCUGUGAGAAUGUAAG\
) } def
/len { sequence length } bind def

/coor [
[174.29997253 208.38906860]
[167.10592651 200.32429504]
[162.14872742 190.70043945]
[159.75154114 180.12481689]
[160.07563782 169.26736450]
[163.10961914 158.81826782]
[150.64624023 150.47177124]
[138.18284607 142.12525940]
[125.71947479 133.77874756]
[113.25609589 125.43225098]
[100.79271698 117.08573914]
[85.80566406 116.46258545]
[72.69241333 123.74563599]
[59.57917023 131.02868652]
[46.46592331 138.31172180]
[33.35267639 145.59477234]
[20.23942757 152.87782288]
[7.12618065 160.16085815]
[-5.98706627 167.44390869]
[-19.10031319 174.72695923]
[-32.21356201 182.00999451]
[-45.32680893 189.29304504]
[-58.44005585 196.57608032]
[-71.55329895 203.85913086]
[-76.04578400 222.24862671]
[-92.26556396 231.37565613]
[-109.70769501 225.86322021]
[-122.57162476 233.57809448]
[-135.43554688 241.29298401]
[-145.90931702 254.62475586]
[-161.61952209 248.25090027]
[-159.84378052 231.39021301]
[-143.15043640 228.42904663]
[-130.28649902 220.71417236]
[-117.42257690 212.99928284]
[-117.11440277 201.57232666]
[-111.26039124 191.61447144]
[-101.21918488 185.66561890]
[-89.43353271 185.30773926]
[-78.83634949 190.74588013]
[-65.72309875 183.46284485]
[-52.60985184 176.17979431]
[-39.49660492 168.89674377]
[-26.38335800 161.61370850]
[-13.27011204 154.33065796]
[-0.15686455 147.04760742]
[12.95638275 139.76457214]
[26.06962967 132.48152161]
[39.18287659 125.19847870]
[52.29612350 117.91543579]
[65.40937042 110.63238525]
[78.52262115 103.34934235]
[79.27030945 88.36798859]
[66.94738007 79.81547546]
[54.62445068 71.26296234]
[42.30152512 62.71045303]
[29.97859764 54.15793991]
[17.15774727 55.67717361]
[7.06635618 48.28456116]
[4.80019903 36.39009857]
[-7.37887144 27.63394356]
[-19.55794144 18.87778854]
[-31.73701096 10.12163353]
[-43.91608047 1.36547852]
[-60.30598831 -2.97126198]
[-60.67590714 -19.92117310]
[-44.49080658 -24.96883774]
[-35.15992737 -10.81359196]
[-22.98085594 -2.05743647]
[-10.80178642 6.69871855]
[1.37728381 15.45487404]
[13.55635357 24.21102905]
[31.07928085 25.00558281]
[38.53110886 41.83501053]
[50.85403824 50.38752365]
[63.17696381 58.94003677]
[75.49989319 67.49254608]
[87.82281494 76.04505920]
[101.39097595 69.64934540]
[102.63620758 54.70112610]
[103.88143158 39.75289917]
[105.12666321 24.80467606]
[106.37189484 9.85645199]
[107.61711884 -5.09177208]
[105.20774078 -13.92280674]
[109.00930023 -20.27742004]
[110.50282288 -35.20288086]
[100.77090454 -47.36542892]
[102.49816132 -62.48069382]
[114.15327454 -71.68363190]
[115.64678955 -86.60909271]
[102.59612274 -94.52381897]
[94.27914429 -107.32188416]
[92.34719086 -122.46224213]
[97.18386841 -136.93875122]
[107.82883453 -147.87709045]
[122.16854095 -153.10545349]
[137.35580444 -151.58573914]
[150.37521362 -143.61968994]
[158.64172363 -130.78897095]
[160.51403809 -115.64112091]
[155.62039185 -101.18376923]
[144.93243408 -90.28742981]
[130.57225037 -85.11557770]
[129.07873535 -70.19011688]
[138.67921448 -58.86023331]
[137.37719727 -43.70241928]
[125.42828369 -33.70936203]
[123.93476868 -18.78390121]
[122.56534576 -3.84654307]
[121.32011414 11.10168076]
[120.07488251 26.04990578]
[118.82965851 40.99813080]
[117.58442688 55.94635391]
[116.33919525 70.89457703]
[121.50169373 82.70538330]
[120.86454010 93.64853668]
[115.96601105 101.38252258]
[109.13922119 104.62236023]
[121.60260010 112.96886444]
[134.06597900 121.31537628]
[146.52935791 129.66188049]
[158.99273682 138.00839233]
[171.45611572 146.35488892]
[188.21661377 135.67449951]
[207.92652893 133.64843750]
[226.39628601 140.65287781]
[239.72433472 155.15022278]
[245.12126160 174.02629089]
[260.00485229 175.89144897]
[274.88842773 177.75660706]
[289.77203369 179.62174988]
[298.69552612 177.58132935]
[304.88671875 181.64360046]
[319.73727417 183.75588989]
[334.58779907 185.86816406]
[352.91323853 177.49909973]
[367.62023926 190.03576660]
[382.53277588 191.65327454]
[397.44531250 193.27078247]
[412.35784912 194.88829041]
[423.51663208 183.93313599]
[439.11053467 182.76525879]
[451.77661133 191.93611145]
[455.53433228 207.11549377]
[448.60937500 221.13616943]
[434.27154541 227.37799072]
[419.29071045 222.89378357]
[410.74032593 209.80082703]
[395.82781982 208.18331909]
[380.91528320 206.56581116]
[366.00274658 204.94830322]
[358.62976074 212.05641174]
[348.34375000 213.96286011]
[338.50817871 209.79806519]
[332.47549438 200.71870422]
[317.62496948 198.60641479]
[302.77444458 196.49414062]
[287.90686035 194.50534058]
[273.02328491 192.64018250]
[258.13970947 190.77503967]
[243.25610352 188.90988159]
[237.38391113 200.80859375]
[228.13182068 210.31970215]
[234.86380005 223.72418213]
[241.59579468 237.12867737]
[248.43894958 250.47674561]
[255.39280701 263.76748657]
[262.34667969 277.05822754]
[269.30053711 290.34896851]
[276.25439453 303.63970947]
[291.41003418 308.12106323]
[298.88439941 322.04620361]
[294.24307251 337.15359497]
[280.23968506 344.48031616]
[265.18218994 339.67953491]
[258.00393677 325.59948730]
[262.96365356 310.59359741]
[256.00979614 297.30282593]
[249.05592346 284.01208496]
[242.10206604 270.72134399]
[235.14820862 257.43060303]
[229.25041199 252.95300293]
[228.19129944 243.86065674]
[221.45932007 230.45617676]
[214.72732544 217.05168152]
[204.14581299 218.85266113]
[193.43182373 217.94880676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 124]
[7 123]
[8 122]
[9 121]
[10 120]
[11 119]
[12 52]
[13 51]
[14 50]
[15 49]
[16 48]
[17 47]
[18 46]
[19 45]
[20 44]
[21 43]
[22 42]
[23 41]
[24 40]
[27 35]
[28 34]
[29 33]
[53 78]
[54 77]
[55 76]
[56 75]
[57 74]
[60 72]
[61 71]
[62 70]
[63 69]
[64 68]
[79 115]
[80 114]
[81 113]
[82 112]
[83 111]
[84 110]
[86 109]
[87 108]
[90 105]
[91 104]
[129 162]
[130 161]
[131 160]
[132 159]
[134 158]
[135 157]
[136 156]
[138 152]
[139 151]
[140 150]
[141 149]
[164 186]
[165 185]
[166 184]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
