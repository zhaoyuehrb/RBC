%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCGCCUGGCGGGGCCGCUGGGCCGAGGGGGCCGCCGGCGGGGCUGGCGGGCGGGGGGCUUCCUGCGGGCCCGGGGGGAGCCGGCGGCCGGCGCGGGCGCGGCGGGCCGGGCAGGGGCGAGGGGCGCCGGGUCUUGCCCCAGAAGCUGCGGGCACAUCCACGCCUGAA\
) } def
/len { sequence length } bind def

/coor [
[191.98623657 217.78932190]
[187.89480591 207.99171448]
[187.31401062 197.35163879]
[190.33638000 187.09335327]
[178.93475342 177.34640503]
[164.23298645 174.95744324]
[158.77104187 160.10894775]
[147.36943054 150.36198425]
[135.96781921 140.61502075]
[124.56620789 130.86807251]
[109.86443329 128.47909546]
[104.40249634 113.63060760]
[90.69233704 110.88774109]
[85.85054779 97.77100372]
[74.44893646 88.02404785]
[58.93164062 84.93791199]
[54.28522110 70.78659058]
[42.88360977 61.03963089]
[31.48199463 51.29267120]
[20.08038139 41.54571152]
[8.67876625 31.79875374]
[-2.72284722 22.05179596]
[-18.24013901 18.96566391]
[-22.88655853 4.81433630]
[-34.28817368 -4.93262243]
[-45.68978882 -14.67958069]
[-60.70063400 -11.21826649]
[-74.70760345 -17.18971062]
[-82.42131042 -30.11111450]
[-81.06351471 -44.91970825]
[-99.22620392 -47.84379196]
[-104.46304321 -64.57621765]
[-116.04179382 -74.11207581]
[-127.62054443 -83.64792633]
[-139.19929504 -93.18378448]
[-150.77804565 -102.71964264]
[-162.35679626 -112.25550079]
[-173.93554688 -121.79135132]
[-185.51429749 -131.32720947]
[-197.09304810 -140.86306763]
[-208.67179871 -150.39892578]
[-232.47285461 -151.97901917]
[-240.30906677 -173.74787903]
[-252.86656189 -181.95210266]
[-265.42407227 -190.15632629]
[-277.98156738 -198.36054993]
[-290.53906250 -206.56477356]
[-306.32400513 -207.63534546]
[-312.74694824 -221.07389832]
[-325.30444336 -229.27812195]
[-337.86193848 -237.48234558]
[-350.41943359 -245.68656921]
[-362.97692871 -253.89079285]
[-378.76187134 -254.96136475]
[-385.18481445 -268.39993286]
[-397.74230957 -276.60415649]
[-414.13745117 -276.96679688]
[-421.78262329 -291.47482300]
[-412.81314087 -305.20364380]
[-396.45602417 -304.03021240]
[-389.53808594 -289.16165161]
[-376.98059082 -280.95742798]
[-362.09384155 -280.47366333]
[-354.77270508 -266.44830322]
[-342.21520996 -258.24407959]
[-329.65771484 -250.03984070]
[-317.10021973 -241.83561707]
[-304.54272461 -233.63140869]
[-289.65597534 -233.14765930]
[-282.33483887 -219.12226868]
[-269.77734375 -210.91804504]
[-257.21984863 -202.71382141]
[-244.66233826 -194.50959778]
[-232.10484314 -186.30537415]
[-226.28126526 -189.40576172]
[-219.73010254 -190.54316711]
[-213.09991455 -189.57225037]
[-207.05735779 -186.55802917]
[-202.22015381 -181.77259827]
[-199.09390259 -175.67076111]
[-198.01945496 -168.84704590]
[-199.13594055 -161.97767639]
[-187.55718994 -152.44181824]
[-175.97843933 -142.90596008]
[-164.39968872 -133.37010193]
[-152.82093811 -123.83424377]
[-141.24218750 -114.29839325]
[-129.66343689 -104.76253510]
[-118.08468628 -95.22667694]
[-106.50593567 -85.69081879]
[-94.92718506 -76.15496826]
[-82.83646393 -77.00240326]
[-73.10735321 -69.11967468]
[-71.31655121 -56.32131958]
[-56.89933395 -59.96573639]
[-42.93547058 -54.35551834]
[-34.85822678 -41.44771194]
[-35.94282913 -26.08119392]
[-24.54121399 -16.33423615]
[-13.13960075 -6.58727789]
[1.56217170 -4.19831228]
[7.02411127 10.65018177]
[18.42572594 20.39714050]
[29.82733917 30.14409828]
[41.22895432 39.89105606]
[52.63056564 49.63801575]
[64.03218079 59.38497543]
[78.73395538 61.77394104]
[84.19589233 76.62243652]
[95.59750366 86.36939240]
[109.30766296 89.11225891]
[114.14945221 102.22899628]
[129.66674805 105.31512451]
[134.31315613 119.46645355]
[145.71478271 129.21340942]
[157.11639404 138.96037292]
[168.51800537 148.70732117]
[184.03529358 151.79345703]
[188.68171692 165.94479370]
[200.08332825 175.69174194]
[219.19703674 169.98352051]
[237.76573181 176.87011719]
[248.38038635 193.41990662]
[246.91648865 212.88293457]
[259.00296021 221.76646423]
[271.08944702 230.64999390]
[283.17590332 239.53352356]
[295.26239014 248.41705322]
[308.13238525 247.24748230]
[318.02285767 254.92678833]
[319.94995117 266.89297485]
[331.87118530 275.99707031]
[343.79241943 285.10113525]
[355.71365356 294.20520020]
[368.60296631 293.27224731]
[378.35070801 301.13195801]
[380.05764771 313.13153076]
[391.80960083 322.45306396]
[403.56158447 331.77459717]
[415.31356812 341.09616089]
[427.06555176 350.41769409]
[438.90264893 359.63085938]
[450.82388306 368.73495483]
[462.74511719 377.83901978]
[479.00302124 382.64706421]
[478.88351440 399.60058594]
[462.55944824 404.17895508]
[453.64105225 389.76025391]
[441.71981812 380.65618896]
[429.79858398 371.55212402]
[422.54650879 369.98547363]
[417.74401855 362.16964722]
[405.99203491 352.84811401]
[394.24005127 343.52658081]
[382.48806763 334.20504761]
[370.73608398 324.88351440]
[353.27752686 323.27206421]
[346.60958862 306.12643433]
[334.68835449 297.02236938]
[322.76712036 287.91830444]
[310.84588623 278.81423950]
[293.36065674 277.52377319]
[286.37887573 260.50354004]
[274.29238892 251.62001038]
[262.20590210 242.73648071]
[250.11943054 233.85295105]
[238.03295898 224.96942139]
[229.03767395 230.24043274]
[218.75979614 232.20632935]
[208.37843323 230.61544800]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 120]
[5 119]
[7 117]
[8 116]
[9 115]
[10 114]
[12 112]
[14 110]
[15 109]
[17 107]
[18 106]
[19 105]
[20 104]
[21 103]
[22 102]
[24 100]
[25 99]
[26 98]
[30 94]
[32 91]
[33 90]
[34 89]
[35 88]
[36 87]
[37 86]
[38 85]
[39 84]
[40 83]
[41 82]
[43 74]
[44 73]
[45 72]
[46 71]
[47 70]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[55 62]
[56 61]
[124 167]
[125 166]
[126 165]
[127 164]
[128 163]
[131 161]
[132 160]
[133 159]
[134 158]
[137 156]
[138 155]
[139 154]
[140 153]
[141 152]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
