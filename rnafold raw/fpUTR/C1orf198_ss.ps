%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGUGUUCAGAACUAUCCAGGCAAAGACCCUGGAUAACAGCUGAAAUGCUGGUUUUUGUUUUUGUUUUUUUAUUUUACGAGUGGACACAAUUCUCACCUGAGUCCUUGGCCACGUGGCGCUAUGGCGGUCACUACCGGGAAUUAACCACGGCCACCCUCUCAGAGCGCCGGGCGCGGACUCAGGGACACGCCGGCUACCACCUGAGCCGGCCCC\
) } def
/len { sequence length } bind def

/coor [
[237.04669189 60.50407791]
[232.18524170 54.82015228]
[228.53230286 48.26914215]
[213.81788635 51.18218613]
[199.10346985 54.09522629]
[184.38905334 57.00827026]
[169.67462158 59.92131042]
[154.96020508 62.83435440]
[140.24578857 65.74739838]
[125.53136444 68.66043854]
[110.81694031 71.57347870]
[126.34389496 78.29236603]
[137.30207825 93.54964447]
[139.10145569 114.12944031]
[129.39015198 134.46704102]
[109.16477203 148.15226746]
[98.59663391 158.79718018]
[88.02848816 169.44210815]
[77.46034241 180.08702087]
[66.89220428 190.73194885]
[56.32405853 201.37686157]
[45.75591278 212.02178955]
[35.18777084 222.66671753]
[36.78713989 238.22229004]
[27.97064781 251.13752747]
[12.90117645 255.31425476]
[-1.30593300 248.78033447]
[-7.94251728 234.62089539]
[-3.87498450 219.52159119]
[8.97610092 210.61184692]
[24.54285049 212.09857178]
[35.11099243 201.45364380]
[45.67913818 190.80873108]
[56.24728012 180.16380310]
[66.81542206 169.51887512]
[77.38356781 158.87396240]
[87.95171356 148.22903442]
[98.51985168 137.58412170]
[94.88008881 131.02651978]
[83.96079254 111.35372162]
[69.33687592 114.69153595]
[54.71295547 118.02935028]
[40.08903885 121.36716461]
[31.89392471 134.88069153]
[16.52392387 138.56019592]
[3.09778762 130.22265625]
[-0.41899750 114.81462097]
[8.06001568 101.47737885]
[23.50437737 98.12369537]
[36.75122452 106.74324036]
[51.37514114 103.40542603]
[65.99906158 100.06761932]
[80.62297821 96.72980499]
[81.81232452 89.32470703]
[67.00212860 86.94602203]
[52.19193268 84.56733704]
[37.37154388 86.88165283]
[30.59077072 73.50177002]
[41.22043228 62.91828156]
[54.57061768 69.75714111]
[69.38081360 72.13582611]
[84.19100952 74.51451111]
[85.38034821 67.10941315]
[72.53715515 59.36006927]
[59.69395828 51.61072540]
[46.85076141 43.86138535]
[34.00756454 36.11204147]
[20.94917107 44.09558487]
[5.67564774 45.08454895]
[-8.30326271 38.85168076]
[-17.77530861 26.82924461]
[-20.56388283 11.77991199]
[-16.02819061 -2.83809376]
[-5.21050262 -13.66566086]
[9.40335655 -18.21469307]
[24.45522881 -15.43985748]
[36.48630524 -5.97879028]
[42.73192978 7.99442530]
[41.75690842 23.26884460]
[54.60010529 31.01818848]
[67.44329834 38.76753235]
[80.28649902 46.51687241]
[93.12969208 54.26621628]
[107.90390015 56.85905838]
[122.61831665 53.94601440]
[137.33274841 51.03297424]
[152.04716492 48.11993027]
[166.76158142 45.20689011]
[181.47599792 42.29384613]
[196.19042969 39.38080597]
[210.90484619 36.46776581]
[225.61926270 33.55472183]
[232.11579895 12.84931183]
[248.85844421 -0.78629595]
[270.23550415 -2.93513584]
[289.16592407 6.99509811]
[301.53906250 -1.48458266]
[306.84573364 -8.91379738]
[314.15332031 -9.99593925]
[326.64791870 -18.29560661]
[339.14254761 -26.59527397]
[351.63717651 -34.89493942]
[364.13177490 -43.19460678]
[376.62640381 -51.49427414]
[389.12103271 -59.79394150]
[401.61563110 -68.09361267]
[414.11026001 -76.39328003]
[415.23547363 -89.81251526]
[423.75842285 -99.98596191]
[436.39694214 -103.34468079]
[448.48092651 -98.87932587]
[461.09439087 -106.99724579]
[473.70785522 -115.11515808]
[476.09143066 -119.74897003]
[479.65625000 -122.71163177]
[483.56912231 -123.83301544]
[487.04995728 -123.29783630]
[500.00399780 -130.86044312]
[512.95800781 -138.42303467]
[525.91204834 -145.98564148]
[538.86608887 -153.54824829]
[551.82012939 -161.11083984]
[564.77416992 -168.67344666]
[572.79107666 -182.31307983]
[587.68334961 -182.04788208]
[600.63739014 -189.61047363]
[613.59143066 -197.17308044]
[622.79132080 -215.11303711]
[642.11523438 -214.35543823]
[654.84484863 -222.28990173]
[667.57452393 -230.22434998]
[667.31842041 -240.88226318]
[671.47540283 -250.61164856]
[679.23461914 -257.68515015]
[689.15234375 -260.87722778]
[699.42041016 -259.67630005]
[708.19573975 -254.36531067]
[721.25787354 -261.73959351]
[734.32006836 -269.11386108]
[747.32849121 -276.58248901]
[760.28253174 -284.14511108]
[764.05633545 -299.49221802]
[777.61999512 -307.60415649]
[792.92633057 -303.66830444]
[800.89440918 -290.01968384]
[796.79693604 -274.75579834]
[783.06481934 -266.93243408]
[767.84515381 -271.19107056]
[754.89111328 -263.62844849]
[750.70129395 -257.54425049]
[741.69433594 -256.05169678]
[728.63214111 -248.67742920]
[715.57000732 -241.30314636]
[711.73229980 -222.19993591]
[694.81787109 -211.92559814]
[675.50903320 -217.49468994]
[662.77935791 -209.56022644]
[650.04968262 -201.62577820]
[648.64605713 -191.50991821]
[641.76330566 -183.67025757]
[631.49096680 -180.85255432]
[621.15399170 -184.21903992]
[608.19995117 -176.65644836]
[595.24591064 -169.09384155]
[588.15557861 -155.99513245]
[572.33679199 -155.71940613]
[559.38275146 -148.15679932]
[546.42871094 -140.59420776]
[533.47467041 -133.03160095]
[520.52062988 -125.46900177]
[507.56658936 -117.90640259]
[494.61254883 -110.34380341]
[481.82577515 -102.50169373]
[469.21231079 -94.38378143]
[456.59884644 -86.26586151]
[453.73864746 -69.69100189]
[439.49401855 -60.12664413]
[422.40994263 -63.89865875]
[409.91531372 -55.59899139]
[397.42068481 -47.29932404]
[384.92605591 -38.99965668]
[372.43145752 -30.69998932]
[359.93682861 -22.40032196]
[347.44219971 -14.10065365]
[334.94760132 -5.80098677]
[322.45297241 2.49868059]
[310.01876831 10.88857460]
[297.64559937 19.36825562]
[300.46261597 31.44878006]
[299.13763428 43.78243637]
[293.81900024 54.98897171]
[285.10183716 63.81427765]
[291.21612549 77.51156616]
[297.33038330 91.20884705]
[303.44467163 104.90613556]
[309.55892944 118.60342407]
[315.67321777 132.30070496]
[321.78747559 145.99800110]
[336.99588013 149.07765198]
[347.46472168 160.53117371]
[349.16854858 175.95442200]
[341.45214844 189.41685486]
[327.28271484 195.74189758]
[312.10861206 192.49743652]
[301.76461792 180.93103027]
[300.22824097 165.49020386]
[308.09017944 152.11227417]
[301.97592163 138.41497803]
[295.86163330 124.71769714]
[289.74737549 111.02040863]
[283.63308716 97.32312012]
[277.51882935 83.62583160]
[271.40457153 69.92855072]
[264.09506226 70.89331818]
[256.71780396 70.39338684]
[249.56422424 68.44007874]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 92]
[4 91]
[5 90]
[6 89]
[7 88]
[8 87]
[9 86]
[10 85]
[11 84]
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[40 53]
[41 52]
[42 51]
[43 50]
[63 83]
[64 82]
[65 81]
[66 80]
[67 79]
[96 188]
[97 187]
[99 186]
[100 185]
[101 184]
[102 183]
[103 182]
[104 181]
[105 180]
[106 179]
[107 178]
[111 175]
[112 174]
[113 173]
[117 172]
[118 171]
[119 170]
[120 169]
[121 168]
[122 167]
[123 166]
[125 164]
[126 163]
[127 162]
[129 158]
[130 157]
[131 156]
[137 153]
[138 152]
[139 151]
[140 149]
[141 148]
[192 213]
[193 212]
[194 211]
[195 210]
[196 209]
[197 208]
[198 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
