%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUAUUUGACAGGAGCGAGGGCGGACGCAAAGAACGCGGAGGACCUCUGGGUGCCUGCAGGGGAGCUGCUCCAGCCGGGCCGCCGGGAGCGGUGGGGAGAGCAUCGCGGAGCCGCCCCUCCACGCGCCCGCCCAGCCGCGCUCGCCCACUGGGCUCUCCCGGCUGCAGUGCCAGGGCGCAGGACGCGGCCGAUCUCCCGCUCCCGCCACCUCCGCCACC\
) } def
/len { sequence length } bind def

/coor [
[102.28601837 369.33276367]
[112.21355438 356.73025513]
[111.78714752 341.73629761]
[111.36074829 326.74237061]
[96.33349609 317.45486450]
[89.83760071 300.85778809]
[94.65247345 283.53405762]
[109.03047943 272.47735596]
[108.17801666 257.50158691]
[99.72991943 245.23460388]
[106.67044067 231.01702881]
[98.22234344 218.75004578]
[105.16286469 204.53245544]
[104.31040192 189.55670166]
[103.45793915 174.58093262]
[102.60548401 159.60517883]
[101.75302124 144.62942505]
[100.90055847 129.65367126]
[80.64590454 115.70699310]
[80.38326263 95.24813843]
[68.16088104 86.55255127]
[55.93849182 77.85696411]
[43.71610641 69.16136932]
[31.49371910 60.46578217]
[19.27133369 51.77019119]
[3.54123878 50.07470322]
[-2.34391093 36.39207458]
[-14.56629753 27.69648552]
[-26.78868294 19.00089645]
[-34.64139557 24.79152107]
[-43.63531494 28.51866531]
[-53.24011230 29.97360229]
[-62.89206696 29.08126068]
[-72.02718353 25.90403557]
[-80.11411285 20.63753128]
[-86.68508148 13.59855938]
[-91.36294556 5.20608521]
[-106.04542542 8.27607727]
[-120.72790527 11.34606934]
[-135.41038513 14.41606045]
[-143.16307068 19.23228073]
[-150.32331848 17.42377281]
[-162.39440918 27.65116119]
[-176.36378479 22.48339272]
[-191.08842468 25.34436417]
[-205.81304932 28.20533562]
[-217.82881165 39.36569977]
[-233.42008972 34.28199387]
[-236.54791260 18.18389702]
[-223.99465942 7.63175344]
[-208.67402649 13.48070240]
[-193.94938660 10.61973095]
[-179.22476196 7.75875854]
[-168.20687866 -2.26399374]
[-153.18429565 2.69914007]
[-138.48037720 -0.26641685]
[-123.79788971 -3.33640862]
[-109.11541748 -6.40640068]
[-94.43293762 -9.47639179]
[-91.33669281 -25.48501015]
[-82.06275940 -38.89607620]
[-90.13973236 -51.53579712]
[-98.21670532 -64.17552185]
[-106.29367065 -76.81523895]
[-113.54605865 -82.35628510]
[-114.39413452 -89.69253540]
[-122.29061890 -102.44579315]
[-136.13386536 -110.10577393]
[-136.25552368 -124.99988556]
[-144.15200806 -137.75314331]
[-152.04847717 -150.50639343]
[-159.94496155 -163.25965881]
[-167.84144592 -176.01290894]
[-176.73643494 -165.80809021]
[-192.21868896 -161.21493530]
[-211.03979492 -165.31272888]
[-222.05281067 -175.49668884]
[-233.06584167 -185.68066406]
[-244.07887268 -195.86462402]
[-260.18380737 -198.95703125]
[-265.30181885 -214.53707886]
[-254.16792297 -226.57736206]
[-238.23573303 -222.69186401]
[-233.89491272 -206.87765503]
[-222.88188171 -196.69369507]
[-211.86885071 -186.50971985]
[-200.85581970 -176.32574463]
[-194.56481934 -180.40905762]
[-181.98283386 -188.57565308]
[-175.69183350 -192.65896606]
[-180.50921631 -206.86433411]
[-185.32659912 -221.06971741]
[-190.14399719 -235.27510071]
[-194.96138000 -249.48048401]
[-199.77876282 -263.68585205]
[-214.41607666 -269.18884277]
[-222.04658508 -282.83834839]
[-219.06739807 -298.18951416]
[-206.88517761 -307.99398804]
[-191.25201416 -307.62240601]
[-179.54939270 -297.25018311]
[-177.30294800 -281.77478027]
[-185.57337952 -268.50323486]
[-180.75599670 -254.29786682]
[-175.93861389 -240.09248352]
[-171.12123108 -225.88710022]
[-166.30383301 -211.68173218]
[-161.48645020 -197.47634888]
[-155.08819580 -183.90939331]
[-147.19171143 -171.15614319]
[-139.29522705 -158.40287781]
[-131.39874268 -145.64962769]
[-123.50225830 -132.89636230]
[-110.22383118 -126.14858246]
[-109.53736115 -110.34227753]
[-101.64087677 -97.58901978]
[-93.65395355 -84.89221191]
[-85.57698059 -72.25248718]
[-77.50000763 -59.61276627]
[-69.42304230 -46.97304535]
[-50.88171387 -49.73036575]
[-33.07635880 -43.66057205]
[-19.98806000 -30.05660057]
[-14.57260418 -11.90305042]
[-18.09309387 6.77850914]
[-5.87070799 15.47409916]
[6.35167837 24.16968918]
[21.20754623 25.24321175]
[27.96692276 39.54780579]
[40.18930817 48.24339676]
[52.41169357 56.93898392]
[64.63407898 65.63457489]
[76.85646820 74.33016205]
[89.07885742 83.02574921]
[110.77884674 77.52541351]
[129.50492859 96.89991760]
[144.45910645 95.72834015]
[159.41328430 94.55677032]
[174.36746216 93.38520050]
[189.32162476 92.21362305]
[204.27580261 91.04205322]
[219.22128296 89.76422119]
[234.15728760 88.38019562]
[249.07212830 86.78399658]
[263.96276855 84.97595215]
[278.85339355 83.16790009]
[293.74401855 81.35984802]
[308.63464355 79.55179596]
[311.72775269 69.19499207]
[320.15722656 60.88485718]
[332.52877808 57.34436798]
[346.09945679 60.35978699]
[360.58374023 56.46034241]
[375.06802368 52.56089401]
[386.26086426 40.57538605]
[402.17379761 44.53901291]
[406.43698120 60.37433624]
[394.66479492 71.79132843]
[378.96746826 67.04517365]
[364.48318481 70.94461823]
[349.99890137 74.84406281]
[351.59509277 89.75889587]
[366.57653809 90.50489807]
[381.55798340 91.25089264]
[393.10559082 80.46070099]
[408.89776611 81.07977295]
[419.56524658 92.74081421]
[418.77926636 108.52554321]
[407.00607300 119.06916046]
[391.23052979 118.11632538]
[380.81198120 106.23233032]
[365.83053589 105.48633575]
[350.84912109 104.74033356]
[325.74020386 109.76574707]
[310.44271851 94.44242859]
[295.55206299 96.25048065]
[280.66143799 98.05853271]
[265.77081299 99.86658478]
[250.88017273 101.67462921]
[247.28573608 104.80915833]
[241.68612671 105.72370911]
[235.54132080 103.31620789]
[220.60530090 104.70023346]
[214.23977661 108.44454193]
[205.44738770 105.99623108]
[190.49320984 107.16780090]
[175.53903198 108.33937836]
[160.58485413 109.51094818]
[145.63067627 110.68251801]
[130.67649841 111.85409546]
[144.36169434 117.99535370]
[158.88520813 121.74604034]
[167.83621216 133.78263855]
[167.24801636 148.77110291]
[157.38131714 160.06924438]
[142.60855103 162.67027283]
[129.47631836 155.42152405]
[123.80418396 141.53497314]
[115.87631226 128.80120850]
[116.72877502 143.77696228]
[117.58123779 158.75271606]
[118.43370056 173.72848511]
[119.28616333 188.70423889]
[120.13862610 203.67999268]
[128.64768982 217.01814270]
[121.64619446 230.16456604]
[130.15527344 243.50271606]
[123.15377045 256.64913940]
[124.00623322 271.62487793]
[135.31304932 276.93652344]
[143.24487305 286.49404907]
[146.34526062 298.44650269]
[144.08580017 310.51263428]
[136.95509338 320.41632080]
[126.35468292 326.31597900]
[126.78108978 341.30990601]
[127.20748901 356.30383301]
[137.83518982 368.32180786]
[134.92361450 384.09844971]
[120.70626831 391.53128052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 217]
[3 216]
[4 215]
[8 209]
[9 208]
[11 206]
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[20 134]
[21 133]
[22 132]
[23 131]
[24 130]
[25 129]
[27 127]
[28 126]
[29 125]
[37 59]
[38 58]
[39 57]
[40 56]
[42 55]
[44 53]
[45 52]
[46 51]
[61 120]
[62 119]
[63 118]
[64 117]
[66 116]
[67 115]
[69 113]
[70 112]
[71 111]
[72 110]
[73 109]
[76 87]
[77 86]
[78 85]
[79 84]
[90 108]
[91 107]
[92 106]
[93 105]
[94 104]
[95 103]
[136 190]
[137 189]
[138 188]
[139 187]
[140 186]
[141 185]
[142 183]
[143 182]
[144 179]
[145 178]
[146 177]
[147 176]
[148 175]
[152 161]
[153 160]
[154 159]
[162 173]
[163 172]
[164 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
