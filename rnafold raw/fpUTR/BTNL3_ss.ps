%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUACUCCUCAUUCAUACAGCCAUGUUUAGGGAGGCUCUAGGGAGAAAUGCACAGUUUGACAUCGUUCAUGAAGAGCCUCUCCACGGCUCCUGCGCCUGAGACAGCUGGCCUGACCUCCAAAUCAUCCAUCCACCCCUGCUGUCAUCUGUUUUCAUAGUGUGAGAUCAACCCACAGGAAUAUCC\
) } def
/len { sequence length } bind def

/coor [
[38.71436310 220.55181885]
[31.40906143 233.65267944]
[21.41053009 244.83433533]
[9.20478344 253.55326843]
[-4.61488295 259.38565063]
[-19.37672043 262.04800415]
[-34.36318588 261.41091919]
[-48.84581375 257.50534058]
[-62.12062836 250.52113342]
[-73.54237366 240.79777527]
[-82.55585480 228.80789185]
[-88.72294617 215.13430786]
[-91.74387360 200.44165039]
[-91.47179413 185.44412231]
[-87.91994476 170.87071228]
[-81.26096344 157.42980957]
[-71.81852722 145.77474976]
[-60.05162811 136.47206116]
[-46.53222275 129.97392273]
[-31.92174530 126.59671783]
[-46.40512466 122.69393158]
[-60.88850403 118.79114532]
[-76.22651672 122.67135620]
[-86.50230408 111.88908386]
[-100.98568726 107.98629761]
[-105.18741608 109.27201080]
[-109.17486572 109.15180206]
[-112.52878571 107.86869812]
[-114.95336914 105.77777863]
[-116.30223083 103.29566193]
[-130.48730469 98.41883087]
[-144.67239380 93.54199219]
[-158.85746765 88.66516113]
[-173.04255676 83.78833008]
[-187.22763062 78.91149902]
[-201.41271973 74.03466797]
[-215.59779358 69.15783691]
[-229.78288269 64.28100586]
[-243.96795654 59.40417480]
[-257.67388916 69.29735565]
[-274.40991211 69.08242798]
[-287.59301758 59.04172897]
[-292.15545654 43.28361511]
[-306.42129517 38.64835739]
[-320.68716431 34.01310349]
[-334.64199829 40.93411636]
[-349.04354858 36.03008270]
[-355.55569458 22.68363190]
[-369.82153320 18.04837799]
[-384.08737183 13.41312218]
[-398.39205933 8.89916134]
[-412.73455811 4.50681973]
[-427.52072144 10.73172665]
[-441.53701782 2.92641997]
[-444.03137207 -12.92153740]
[-433.09030151 -24.65494919]
[-417.10690308 -23.27294540]
[-408.34222412 -9.83568096]
[-393.99972534 -5.44333935]
[-386.66662598 -6.49336576]
[-379.45211792 -0.85272533]
[-365.18627930 3.78252959]
[-350.92044067 8.41778469]
[-337.80715942 1.44801021]
[-323.27352905 5.94559526]
[-316.05191040 19.74725533]
[-301.78604126 24.38251114]
[-287.52020264 29.01776505]
[-277.48278809 20.19565010]
[-264.28991699 17.46907616]
[-251.37155151 21.65628815]
[-242.14057922 31.76367569]
[-239.09112549 45.21909332]
[-224.90605164 50.09592438]
[-210.72096252 54.97275543]
[-196.53588867 59.84959030]
[-182.35079956 64.72641754]
[-168.16572571 69.60324860]
[-153.98063660 74.48008728]
[-139.79556274 79.35691833]
[-125.61048126 84.23374939]
[-111.42539978 89.11058044]
[-97.08290100 93.50292206]
[-82.59951782 97.40570831]
[-68.29745483 93.24634552]
[-56.98571777 104.30776978]
[-42.50233841 108.21055603]
[-28.01895905 112.11333466]
[-13.03247547 112.74995422]
[1.72970641 110.08950806]
[16.49188805 107.42905426]
[31.25407028 104.76860809]
[46.01625061 102.10816193]
[57.16942596 92.23617554]
[72.12311554 97.40316772]
[77.66253662 80.59441376]
[92.79640198 69.66205597]
[112.43772888 69.67842865]
[129.13185120 81.77061462]
[142.03649902 74.12403107]
[154.87574768 66.36815643]
[167.64868164 58.50354767]
[180.42161560 50.63893890]
[193.19456482 42.77433014]
[205.96749878 34.90972137]
[218.74043274 27.04511261]
[226.43495178 13.22104454]
[241.32933044 13.13658047]
[254.10226440 5.27197075]
[257.87036133 -9.84223747]
[270.93594360 -17.63611412]
[285.32180786 -13.95067501]
[298.09475708 -21.81528473]
[294.51425171 -36.51342010]
[295.65298462 -51.59846115]
[301.39941406 -65.59252930]
[311.19052124 -77.12462616]
[324.06710815 -85.06495667]
[338.76763916 -88.63560486]
[353.85192871 -87.48676300]
[367.84213257 -81.73097229]
[379.36767578 -71.93212891]
[387.29934692 -59.05023193]
[390.86016846 -44.34730911]
[389.70120239 -29.26380920]
[383.93603516 -15.27745533]
[374.12948608 -3.75849009]
[361.24227905 4.16457605]
[346.53695679 7.71552229]
[331.45425415 6.54646206]
[317.47177124 0.77192897]
[305.95938110 -9.04234791]
[293.18643188 -1.17773831]
[290.00067139 13.32697105]
[277.15914917 21.48475838]
[261.96685791 18.04490852]
[249.19393921 25.90951729]
[242.41300964 39.17105484]
[226.60504150 39.81805038]
[213.83210754 47.68265915]
[201.05917358 55.54726791]
[188.28622437 63.41187668]
[175.51329041 71.27648926]
[162.74035645 79.14109802]
[158.68379211 85.33957672]
[149.68307495 87.02867889]
[136.77842712 94.67525482]
[135.88742065 109.64877319]
[147.79418945 118.77176666]
[163.45436096 121.02328491]
[168.85124207 134.90576172]
[180.75799561 144.02876282]
[192.66476440 153.15176392]
[204.57151794 162.27474976]
[216.47827148 171.39775085]
[228.38502502 180.52075195]
[244.63526917 185.35462952]
[244.48881531 202.30793762]
[228.15750122 206.86035156]
[219.26203918 192.42750549]
[207.35527039 183.30451965]
[195.44851685 174.18151855]
[183.54176331 165.05851746]
[171.63499451 155.93551636]
[159.72824097 146.81251526]
[144.91970825 145.21353149]
[138.67118835 130.67852783]
[126.76442719 121.55552673]
[112.43772888 130.32156372]
[96.44505310 130.97813416]
[82.86102295 124.12042236]
[74.78356171 112.16534424]
[62.57450104 122.22761536]
[48.67670059 116.87033844]
[33.91452026 119.53079224]
[19.15233803 122.19123840]
[4.39015579 124.85169220]
[-10.37202644 127.51213837]
[3.90333867 132.11799622]
[16.82247734 139.74006653]
[27.75741577 150.00782776]
[36.17662430 162.42221069]
[41.67086792 176.37977600]
[43.97307587 191.20204163]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 88]
[21 87]
[22 86]
[24 84]
[25 83]
[30 82]
[31 81]
[32 80]
[33 79]
[34 78]
[35 77]
[36 76]
[37 75]
[38 74]
[39 73]
[43 68]
[44 67]
[45 66]
[48 63]
[49 62]
[50 61]
[51 59]
[52 58]
[89 178]
[90 177]
[91 176]
[92 175]
[93 174]
[95 172]
[99 147]
[100 146]
[101 144]
[102 143]
[103 142]
[104 141]
[105 140]
[106 139]
[108 137]
[109 136]
[112 133]
[113 132]
[148 168]
[149 167]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
[156 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
