%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCAGCCUGGGAGAUGUAGUCUUCGGACCGUCUCCACUAGAGGCUGCACAGCCCGCCCGGACCAACGCCUCCGCGCCUGCCGCCGUCUGGCCGGCGCCCUCCCGUUUCCUUCCUCCAGGGGGAAAAAAUGUCUUUCGGGCCGCUUUCCAGGAAGCAGCAGGAUGCGCCGCUCCACUGUCGGUAGCAACAAGCUGCGCAAACC\
) } def
/len { sequence length } bind def

/coor [
[69.77288818 158.79551697]
[72.60725403 144.06573486]
[82.29219818 132.61273193]
[86.89973450 118.33791351]
[76.01252747 128.65628052]
[65.12532043 138.97465515]
[54.23811340 149.29301453]
[43.35090637 159.61138916]
[32.46369934 169.92974854]
[21.57649422 180.24812317]
[10.92933464 190.81401062]
[0.61096537 201.70121765]
[-9.62367916 212.66717529]
[-19.85832405 223.63311768]
[-30.09296799 234.59907532]
[-40.32761383 245.56501770]
[-50.56225586 256.53097534]
[-60.79690170 267.49691772]
[-62.65853882 273.84887695]
[-66.82505798 277.72253418]
[-71.51718140 278.63598633]
[-82.08306885 289.28314209]
[-92.64895630 299.93029785]
[-96.30718994 315.91622925]
[-112.05798340 320.48178101]
[-123.69827271 308.93035889]
[-119.25352478 293.14501953]
[-103.29611206 289.36441040]
[-92.73022461 278.71725464]
[-82.16433716 268.07009888]
[-71.76284790 257.26226807]
[-61.52820587 246.29632568]
[-51.29356384 235.33036804]
[-41.05891800 224.36442566]
[-30.82427406 213.39846802]
[-20.58962822 202.43252563]
[-10.35498428 191.46656799]
[-8.08824444 184.42834473]
[0.12151037 180.41252136]
[0.41822734 176.89457703]
[2.43656158 173.34617615]
[6.17194462 170.57624817]
[11.25812531 169.36091614]
[22.14533234 159.04255676]
[33.03253937 148.72418213]
[43.91974640 138.40580750]
[54.80694962 128.08744812]
[65.69416046 117.76907349]
[76.58136749 107.45070648]
[79.29005432 96.78371429]
[85.84793854 89.97837067]
[93.51049805 87.90724945]
[91.90447235 72.99347687]
[90.29844666 58.07970047]
[80.76010895 49.39273834]
[79.73181915 36.93470764]
[87.22130585 27.43173981]
[85.84401703 12.49510574]
[84.46672058 -2.44152975]
[83.08942413 -17.37816429]
[81.71213531 -32.31480026]
[80.33483887 -47.25143433]
[78.95755005 -62.18806839]
[57.86109543 -70.45835114]
[45.12277985 -90.09667206]
[46.23931885 -114.22704315]
[61.66183472 -133.78166199]
[54.80082321 -147.12057495]
[47.93981171 -160.45947266]
[32.71942902 -160.14112854]
[18.92638016 -166.43707275]
[9.27419281 -178.04978943]
[5.63612890 -192.64176941]
[8.68180847 -207.30577087]
[17.75469398 -219.14419556]
[10.89368153 -232.48310852]
[4.03267002 -245.82202148]
[-2.82834196 -259.16091919]
[-9.68935394 -272.49984741]
[-22.88204002 -281.23272705]
[-21.82302856 -296.08966064]
[-28.68404007 -309.42855835]
[-35.54505157 -322.76745605]
[-42.40606308 -336.10638428]
[-57.18223190 -342.35491943]
[-61.37078094 -357.84155273]
[-51.75861740 -370.68624878]
[-35.71936798 -371.03564453]
[-25.55697441 -358.62173462]
[-29.06715393 -342.96737671]
[-22.20614243 -329.62847900]
[-15.34512997 -316.28958130]
[-8.48411751 -302.95065308]
[4.21782303 -295.17184448]
[3.64955616 -279.36083984]
[10.51056767 -266.02194214]
[17.37158012 -252.68302917]
[24.23259163 -239.34411621]
[31.09360313 -226.00520325]
[46.00063324 -226.50111389]
[59.70103836 -220.45063782]
[69.45577240 -209.00483704]
[73.28928375 -194.39921570]
[70.38939667 -179.51708984]
[61.27872086 -167.32049561]
[68.13973236 -153.98158264]
[75.00074768 -140.64266968]
[89.99898529 -140.87252808]
[96.44800568 -154.41543579]
[102.89702606 -167.95832825]
[109.34604645 -181.50123596]
[115.79506683 -195.04412842]
[122.24408722 -208.58703613]
[128.69309998 -222.12992859]
[124.70484924 -237.66934204]
[134.48204041 -250.38885498]
[150.52447510 -250.53114319]
[160.52574158 -237.98706055]
[156.81375122 -222.37934875]
[142.23600769 -215.68090820]
[135.78698730 -202.13801575]
[129.33796692 -188.59510803]
[122.88894653 -175.05221558]
[116.43992615 -161.50930786]
[109.99090576 -147.96641541]
[103.54188538 -134.42350769]
[110.96222687 -128.38970947]
[116.71697998 -120.89398193]
[120.53587341 -112.37461090]
[122.25983429 -103.31491089]
[121.84698486 -94.21587372]
[119.37219238 -85.56851196]
[115.02014923 -77.82733154]
[109.07270050 -71.38647461]
[101.89105988 -66.55971527]
[93.89418030 -63.56536102]
[95.27147675 -48.62872696]
[96.64876556 -33.69209290]
[98.02606201 -18.75545692]
[99.40335846 -3.81882286]
[100.78064728 11.11781216]
[102.15794373 26.05444717]
[113.04868317 39.81262970]
[105.21221924 56.47367477]
[106.81824493 71.38745117]
[108.42427063 86.30122375]
[111.37359619 71.59403229]
[121.52216339 60.54837036]
[135.92752075 56.36677933]
[150.41302490 60.26165771]
[160.77880859 71.10373688]
[164.01943970 85.74949646]
[159.19532776 99.95259857]
[147.70518494 109.59503937]
[132.88041687 111.88111877]
[119.02119446 106.14952850]
[130.52006531 115.78155518]
[142.01893616 125.41358948]
[153.51780701 135.04560852]
[165.01667786 144.67764282]
[180.54701233 143.47494507]
[192.07128906 153.40699768]
[193.12217712 168.22019958]
[208.66966248 171.15043640]
[213.45788574 185.25440979]
[224.95675659 194.88644409]
[236.45562744 204.51846313]
[248.02796936 214.06210327]
[259.67309570 223.51678467]
[271.31820679 232.97146606]
[282.96334839 242.42616272]
[294.68057251 251.79133606]
[310.34185791 249.67007446]
[322.86520386 259.31066895]
[324.82077026 274.99349976]
[315.04833984 287.41424561]
[299.34570312 289.20388794]
[287.02896118 279.30065918]
[285.40545654 263.57998657]
[278.20135498 261.91381836]
[273.50866699 254.07128906]
[261.86352539 244.61659241]
[250.21839905 235.16191101]
[238.57327271 225.70722961]
[231.39558411 223.93086243]
[226.82359314 216.01733398]
[215.32472229 206.38531494]
[203.82585144 196.75328064]
[189.10084534 194.51199341]
[183.49014282 179.71907043]
[168.72213745 181.28160095]
[156.92343140 171.67715454]
[155.38464355 156.17651367]
[143.88577271 146.54447937]
[132.38690186 136.91246033]
[120.88803864 127.28042603]
[109.38916779 117.64839935]
[114.86253357 131.61415100]
[125.23142242 142.45326233]
[128.96231079 156.98187256]
[125.09884644 171.47578430]
[114.63136292 182.21971130]
[100.24305725 186.45957947]
[85.62214661 183.10859680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 49]
[5 48]
[6 47]
[7 46]
[8 45]
[9 44]
[10 43]
[11 39]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[18 31]
[21 30]
[22 29]
[23 28]
[52 146]
[53 145]
[54 144]
[57 142]
[58 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[67 107]
[68 106]
[69 105]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[81 93]
[82 92]
[83 91]
[84 90]
[108 126]
[109 125]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
[156 197]
[157 196]
[158 195]
[159 194]
[160 193]
[163 190]
[165 188]
[166 187]
[167 186]
[168 184]
[169 183]
[170 182]
[171 181]
[172 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
