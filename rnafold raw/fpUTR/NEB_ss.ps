%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAUCACGCUGGCUUUUGCCUGGGGUUCUCAGGAGGGGAGAGUUGGGAGAGGCUUUGCUGCUGAGGAAAUUUAUUUGGUAGAUUGAAGGUUUGAACGAGAGCUACAGAAACGAAAGAAAAAGUCUGUAUAAGCCAAUGGUGUUCGGGAAGAAAAUAACCCCAUUGCCUUGAGUUUGUAGGUGCCACUACUACUCUGGAAAA\
) } def
/len { sequence length } bind def

/coor [
[107.13466644 218.35417175]
[120.06422424 210.52359009]
[116.40551758 195.97663879]
[112.74681091 181.42968750]
[109.08810425 166.88273621]
[105.42939758 152.33576965]
[101.77069092 137.78881836]
[94.48516083 137.42614746]
[87.40468597 135.67195129]
[86.96170044 151.48695374]
[73.78875732 158.43841553]
[73.34577942 174.25341797]
[60.17283249 181.20487976]
[52.47367859 194.07823181]
[44.77452469 206.95156860]
[45.06314468 223.34817505]
[30.87009811 231.56336975]
[16.79597282 223.14607239]
[17.31902122 206.75526428]
[31.90117836 199.25242615]
[39.60033035 186.37907410]
[47.29948425 173.50572205]
[47.19177246 158.61151123]
[60.91541290 150.73925781]
[60.80769730 135.84504700]
[74.53133392 127.97280121]
[51.61495209 108.04830170]
[47.18281937 70.96985626]
[32.22726440 72.12371826]
[17.27171135 73.27757263]
[2.31615567 74.43142700]
[-12.63939857 75.58528137]
[-27.59495354 76.73914337]
[-42.55050659 77.89299774]
[-55.71460724 86.66893005]
[-68.99935150 79.93358612]
[-83.95490265 81.08744812]
[-97.11900330 89.86338043]
[-110.40374756 83.12803650]
[-125.35930634 84.28189087]
[-140.31486511 85.43574524]
[-155.27041626 86.58960724]
[-165.53250122 98.30828094]
[-180.71600342 99.26540375]
[-191.82472229 89.40985870]
[-206.78027344 90.56371307]
[-219.99636841 100.27281189]
[-234.90196228 93.43502045]
[-236.16345215 77.08446503]
[-222.48312378 68.04119873]
[-207.93412781 75.60815430]
[-192.97857666 74.45429993]
[-183.51307678 63.01140213]
[-168.36245728 61.62817764]
[-156.42427063 71.63404846]
[-141.46871948 70.48019409]
[-126.51316071 69.32633972]
[-111.55760193 68.17247772]
[-99.46322632 59.47907639]
[-85.10876465 66.13188934]
[-70.15320587 64.97803497]
[-58.05883026 56.28462982]
[-43.70436478 62.93744278]
[-28.74880981 61.78358841]
[-13.79325485 60.62973022]
[1.16229939 59.47587585]
[16.11785316 58.32201767]
[31.07340813 57.16816330]
[46.02896500 56.01430511]
[51.55512619 42.06935883]
[41.44969177 30.98422623]
[31.34425735 19.89909172]
[21.23882294 8.81395817]
[11.13338852 -2.27117562]
[1.02795374 -13.35630989]
[-9.07748127 -24.44144249]
[-24.21653366 -32.07331085]
[-21.07382965 -48.73343658]
[-4.19480276 -50.32553101]
[2.00765276 -34.54687881]
[12.11308765 -23.46174431]
[22.21852303 -12.37661076]
[32.32395554 -1.29147661]
[42.42938995 9.79365730]
[52.53482437 20.87879181]
[62.64026260 31.96392441]
[69.42941284 28.77685165]
[70.69808197 13.83059883]
[83.00771332 22.40270615]
[89.79685974 19.21563339]
[87.72451782 4.35947657]
[85.65217590 -10.49668026]
[83.57982635 -25.35283661]
[81.50748444 -40.20899200]
[68.74593353 -49.53199768]
[66.39710236 -65.16076660]
[75.85450745 -77.82303619]
[91.50724030 -80.00650024]
[104.06880951 -70.41574860]
[106.08666229 -54.74080658]
[96.36363983 -42.28133774]
[98.43598175 -27.42518234]
[100.50833130 -12.56902504]
[102.58067322 2.28713131]
[104.65302277 17.14328766]
[119.43830872 19.67214584]
[126.33036804 6.34925032]
[133.22242737 -6.97364521]
[140.11448669 -20.29654121]
[147.00654602 -33.61943817]
[137.17898560 -45.21632004]
[132.54220581 -59.69281006]
[133.80328369 -74.84134674]
[140.76989746 -88.35188293]
[152.37969971 -98.16417694]
[166.86227417 -102.78190613]
[182.00914001 -101.50090790]
[195.51049805 -94.51652527]
[205.30751038 -82.89382935]
[209.90617371 -68.40518951]
[208.60525513 -53.26002502]
[201.60311890 -39.76786041]
[189.96754456 -29.98615074]
[175.47286987 -25.40653801]
[160.32943726 -26.72738075]
[153.43737793 -13.40448475]
[146.54531860 -0.08158883]
[139.65325928 13.24130726]
[132.76121521 26.56420326]
[140.26121521 39.55458450]
[155.24520874 40.24733734]
[170.22920227 40.94008636]
[185.21319580 41.63283920]
[200.19718933 42.32559204]
[215.18118286 43.01834488]
[230.17005920 43.59569931]
[245.16294861 44.05762482]
[260.15582275 44.51955032]
[268.83538818 41.65466690]
[275.37554932 45.10579681]
[290.35952759 45.79854965]
[305.34353638 46.49130249]
[320.32754517 47.18405533]
[330.05044556 35.23536682]
[344.77270508 31.34839058]
[358.79492188 36.81112671]
[366.81567383 49.33332825]
[381.79965210 50.02608109]
[396.78366089 50.71883392]
[405.00152588 37.74338913]
[418.61358643 30.62948227]
[433.95822144 31.29071426]
[446.90783691 39.54921722]
[453.97906494 53.18349838]
[453.26971436 68.52600098]
[444.97067261 81.44967651]
[431.31430054 88.47811127]
[415.97409058 87.72069550]
[403.07650757 79.38117218]
[396.09091187 65.70282745]
[381.10690308 65.01007843]
[366.12292480 64.31732178]
[356.98098755 76.04605103]
[342.51452637 80.19167328]
[328.21371460 74.96288300]
[319.63476562 62.16804886]
[304.65078735 61.47529602]
[289.66677856 60.78254318]
[274.68280029 60.08979416]
[259.69390869 59.51243591]
[244.70101929 59.05051041]
[229.70814514 58.58858490]
[222.92189026 61.52639771]
[214.48843384 58.00233841]
[199.50444031 57.30958557]
[184.52044678 56.61683273]
[169.53643799 55.92408371]
[154.55244446 55.23133087]
[139.56845093 54.53857803]
[148.60281372 106.60719299]
[116.31764984 134.13011169]
[119.97634888 148.67706299]
[123.63505554 163.22402954]
[127.29376221 177.77098083]
[130.95246887 192.31793213]
[134.61117554 206.86488342]
[149.70686340 207.64683533]
[163.90084839 212.84515381]
[175.93098450 221.99758911]
[184.72756958 234.29032898]
[189.50843811 248.63029480]
[189.84844971 263.74240112]
[185.71737671 278.28289795]
[177.48255920 290.95883179]
[165.87623596 300.64306641]
[151.93041992 306.47451782]
[136.88517761 307.93460083]
[122.07830811 304.89355469]
[108.82643127 297.62173462]
[98.30789948 286.76577759]
[91.45801544 273.29098511]
[88.88586426 258.39547729]
[90.82015228 243.40382385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[9 26]
[11 24]
[13 22]
[14 21]
[15 20]
[28 69]
[29 68]
[30 67]
[31 66]
[32 65]
[33 64]
[34 63]
[36 61]
[37 60]
[39 58]
[40 57]
[41 56]
[42 55]
[45 52]
[46 51]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[106 129]
[107 128]
[108 127]
[109 126]
[110 125]
[130 179]
[131 178]
[132 177]
[133 176]
[134 175]
[135 174]
[136 172]
[137 171]
[138 170]
[140 169]
[141 168]
[142 167]
[143 166]
[147 162]
[148 161]
[149 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
