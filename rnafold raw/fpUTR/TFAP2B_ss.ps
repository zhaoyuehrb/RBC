%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUCUUUGCUGAGGCUUACUUGUCCAGCCUAUUGUUUGAGACAACAGAUAUAAGUUGCGAUGGGAGAGGAGCGUCGGAUUUGGUGUGUAUCCCCCAUUUCCAAUUAUAGAUGGAUCAUUACAGACAGCGGAGUCCUGAGAAGCCAGACAUCUGCUCCUCACAUGA\
) } def
/len { sequence length } bind def

/coor [
[44.95648193 201.34458923]
[35.70802307 189.53501892]
[30.07197571 175.63412476]
[28.48477936 160.71833801]
[31.06933784 145.94267273]
[37.62551498 132.45132446]
[47.64562225 121.28900146]
[60.35373688 113.32007599]
[74.76579285 109.16162872]
[89.76094055 109.13501740]
[74.81465912 107.86672211]
[59.86837006 106.59843445]
[44.92208481 105.33014679]
[30.51712227 111.87290192]
[18.48963547 103.08718109]
[3.54335093 101.81889343]
[-11.40293407 100.55060577]
[-26.34922028 99.28231049]
[-45.09833527 109.60169983]
[-61.60168076 97.24623108]
[-76.59571075 96.82302094]
[-91.58973694 96.39981079]
[-106.58377075 95.97659302]
[-121.57779694 95.55338287]
[-136.57182312 95.13017273]
[-151.56916809 94.84800720]
[-166.56851196 94.70692444]
[-181.56784058 94.56583405]
[-196.56718445 94.42474365]
[-210.43951416 102.03190613]
[-223.09344482 94.17523193]
[-238.09278870 94.03414917]
[-253.09211731 93.89305878]
[-261.74569702 96.95199585]
[-268.37158203 93.60559082]
[-283.36563110 93.18238068]
[-298.35964966 92.75916290]
[-313.35366821 92.33595276]
[-328.34771729 91.91274261]
[-339.66027832 102.94909668]
[-355.46212769 102.67024231]
[-366.37823486 91.24161530]
[-365.93234253 75.44361877]
[-354.38894653 64.64892578]
[-338.59655762 65.26183319]
[-327.92449951 76.91870880]
[-312.93048096 77.34192657]
[-297.93643188 77.76513672]
[-282.94241333 78.18834686]
[-267.94839478 78.61155701]
[-252.95103455 78.89372253]
[-237.95170593 79.03481293]
[-222.95236206 79.17589569]
[-210.15287781 71.55864716]
[-196.42608643 79.42540741]
[-181.42675781 79.56649780]
[-166.42741394 79.70758820]
[-151.42808533 79.84867096]
[-144.68099976 76.75386810]
[-136.14860535 80.13614655]
[-121.15458679 80.55935669]
[-106.16055298 80.98256683]
[-91.16652679 81.40577698]
[-76.17250061 81.82899475]
[-61.17847061 82.25220490]
[-55.75604248 75.12767029]
[-47.52795792 71.26108551]
[-38.30664062 71.64510345]
[-30.18929100 76.32006073]
[-25.08093071 84.33602905]
[-10.13464451 85.60431671]
[4.81164026 86.87260437]
[19.75792503 88.14089966]
[33.09383011 81.50743103]
[46.19037628 90.38386536]
[61.13666153 91.65215302]
[76.08294678 92.92044067]
[91.02922821 94.18872833]
[91.16158295 90.88108063]
[92.39180756 87.41030121]
[94.78150177 84.11443329]
[98.29387665 81.34636688]
[102.79129791 79.44644165]
[108.04019165 78.71497345]
[118.89324951 68.36069489]
[123.53724670 53.23641205]
[138.08685303 50.04918671]
[148.93991089 39.69490814]
[159.79296875 29.34062958]
[170.64602661 18.98635101]
[166.57621765 2.98144460]
[171.09503174 -12.80504227]
[182.88183594 -24.10257149]
[198.66333008 -27.90451050]
[214.12223816 -23.26789474]
[224.77859497 -33.82449722]
[235.43496704 -44.38109970]
[246.09133911 -54.93769836]
[256.74771118 -65.49430084]
[267.40405273 -76.05090332]
[264.91574097 -91.36716461]
[271.93536377 -105.20568085]
[285.76376343 -112.24525452]
[301.08358765 -109.77903748]
[312.00408936 -98.75532532]
[314.32611084 -83.41297150]
[307.15676880 -69.65142059]
[293.25283813 -62.76226807]
[277.96066284 -65.39453888]
[267.30429077 -54.83793640]
[256.64794922 -44.28133392]
[245.99156189 -33.72473145]
[235.33520508 -23.16812897]
[224.67883301 -12.61152744]
[229.01789856 0.36208081]
[227.32664490 14.00387764]
[219.87937927 25.63671875]
[208.08561707 32.95288849]
[194.22360229 34.47182846]
[181.00030518 29.83941078]
[170.14724731 40.19369125]
[159.29418945 50.54796982]
[148.44113159 60.90224838]
[144.57341003 75.28591919]
[129.24752808 79.21375275]
[118.39447021 89.56803131]
[119.52212524 104.52558136]
[131.80490112 113.13565063]
[144.08769226 121.74571991]
[156.37046814 130.35578918]
[168.65325928 138.96585083]
[180.93603516 147.57591248]
[193.29927063 156.07006836]
[205.74183655 164.44757080]
[218.18440247 172.82505798]
[227.09220886 175.03698730]
[230.78021240 181.47900391]
[243.06298828 190.08906555]
[258.58325195 187.10630798]
[271.61981201 196.04071045]
[274.43832397 211.59164429]
[265.36657715 224.53302002]
[249.78672791 227.18695068]
[236.94198608 217.97891235]
[234.45292664 202.37185669]
[222.17013550 193.76177979]
[209.80691528 185.26762390]
[197.36434937 176.89013672]
[184.92176819 168.51264954]
[177.58561707 167.38050842]
[172.32597351 159.85870361]
[160.04318237 151.24862671]
[147.76040649 142.63856506]
[135.47763062 134.02850342]
[123.19483948 125.41843414]
[110.91205597 116.80836487]
[122.40532684 126.44707489]
[130.79748535 138.87976074]
[135.43867493 153.14367676]
[135.96949768 168.13429260]
[132.34884644 182.69076538]
[124.85710144 195.68589783]
[114.07437897 206.11341858]
[100.83567047 213.16583252]
[86.16612244 216.29702759]
[71.20169830 215.26455688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 78]
[11 77]
[12 76]
[13 75]
[15 73]
[16 72]
[17 71]
[18 70]
[20 65]
[21 64]
[22 63]
[23 62]
[24 61]
[25 60]
[26 58]
[27 57]
[28 56]
[29 55]
[31 53]
[32 52]
[33 51]
[35 50]
[36 49]
[37 48]
[38 47]
[39 46]
[84 126]
[85 125]
[87 123]
[88 122]
[89 121]
[90 120]
[95 114]
[96 113]
[97 112]
[98 111]
[99 110]
[100 109]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[132 151]
[133 149]
[134 148]
[135 147]
[137 146]
[138 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
