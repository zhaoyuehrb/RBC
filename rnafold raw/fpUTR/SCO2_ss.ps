%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAGGCCCAGGGCGCUGCCCGGGUGGCCGCGGCGCUGGACGACGGCUCGGCCCUUGGCCGCUUCGAGCGGAUGCUGGCGGCGCAGGGCGUGGAUCCCGGUCUGGCCCGAGCCCUGUGCUCGGGAAGUCCCGCAGAACGCCGGCAGCUGCUGCCUCGCGCCCGGGAGCAGGAGGAGCUGCUGGCGCCCGCAGAUGGAGCAUCAGAUCC\
) } def
/len { sequence length } bind def

/coor [
[159.30825806 537.37438965]
[158.18133545 522.21527100]
[162.94607544 507.78042603]
[172.87588501 496.27099609]
[186.45655823 489.44210815]
[185.32485962 474.48486328]
[184.08021545 459.53656006]
[182.72273254 444.59811401]
[181.36524963 429.65966797]
[179.44480896 414.78311157]
[176.96412659 399.98968506]
[174.48344421 385.19622803]
[172.00276184 370.40277100]
[169.52209473 355.60931396]
[167.04141235 340.81585693]
[164.56072998 326.02239990]
[164.30123901 306.89645386]
[174.84994507 296.24826050]
[169.10969543 282.39007568]
[163.36944580 268.53189087]
[157.62919617 254.67369080]
[151.88894653 240.81549072]
[146.14869690 226.95730591]
[140.40844727 213.09910583]
[134.66818237 199.24092102]
[130.67488098 196.61740112]
[128.28852844 191.45640564]
[128.97084045 184.87643433]
[123.65177155 170.85118103]
[111.90411377 161.69467163]
[114.24501038 146.04759216]
[108.92593384 132.02235413]
[103.60686493 117.99710846]
[89.92836761 111.84091949]
[75.90312195 117.15998840]
[61.87788010 122.47906494]
[47.85263443 127.79814148]
[39.98366547 141.77879333]
[24.12452698 144.20104980]
[12.44099522 133.20675659]
[13.89567471 117.22978210]
[27.37265968 108.52631378]
[42.53356171 113.77289581]
[56.55880356 108.45381927]
[70.58404541 103.13475037]
[84.60929108 97.81567383]
[83.48081207 90.40106201]
[80.09535980 68.15721130]
[65.12272644 67.25153351]
[50.15008926 66.34585571]
[35.17745590 65.44017792]
[20.20482445 64.53450012]
[4.02952051 69.61346436]
[-5.32872677 55.47629929]
[5.66533566 42.57021713]
[21.11050224 49.56187057]
[36.08313370 50.46754456]
[51.05576706 51.37322235]
[66.02840424 52.27890015]
[81.00103760 53.18457794]
[67.01864624 47.75385666]
[61.59740448 33.76778793]
[68.26683807 20.33206367]
[82.68478394 16.19407845]
[95.46436310 24.04788208]
[98.28547668 38.77978897]
[100.09352875 23.88915634]
[101.90158081 8.99852371]
[103.70963287 -5.89210939]
[105.51768494 -20.78274345]
[99.50022125 -35.41492462]
[108.71520996 -47.11677170]
[110.52326202 -62.00740433]
[112.33131409 -76.89804077]
[114.13935852 -91.78867340]
[115.94741058 -106.67930603]
[117.75546265 -121.56993866]
[119.56351471 -136.46057129]
[121.37155914 -151.35119629]
[88.86678314 -184.60853577]
[86.60981750 -199.43777466]
[84.35285187 -214.26699829]
[82.09588623 -229.09623718]
[79.83891296 -243.92546082]
[77.58194733 -258.75469971]
[75.32498169 -273.58392334]
[73.06801605 -288.41314697]
[70.81104279 -303.24240112]
[61.08539581 -315.72125244]
[66.81961060 -329.46783447]
[64.56263733 -344.29705811]
[62.30567169 -359.12628174]
[53.18452454 -365.05737305]
[48.92226791 -374.82852173]
[50.70533371 -385.11587524]
[57.70677185 -392.56243896]
[55.89872360 -407.45306396]
[44.20748520 -418.43917847]
[45.65095901 -434.41717529]
[59.12183380 -443.13009644]
[74.28641510 -437.89413452]
[79.51172638 -422.72589111]
[70.78936005 -409.26113892]
[72.59740448 -394.37048340]
[85.31407928 -379.80612183]
[77.13490295 -361.38327026]
[79.39186859 -346.55401611]
[81.64884186 -331.72479248]
[91.21305847 -320.30661011]
[85.64027405 -305.49935913]
[87.89724731 -290.67013550]
[90.15421295 -275.84088135]
[92.41117859 -261.01165771]
[94.66814423 -246.18243408]
[96.92511749 -231.35319519]
[99.18208313 -216.52397156]
[101.43904877 -201.69473267]
[103.69601440 -186.86550903]
[118.23326874 -183.16572571]
[132.76922607 -179.46626282]
[141.84062195 -191.41238403]
[150.91200256 -203.35850525]
[159.98339844 -215.30462646]
[161.50410461 -231.63311768]
[176.51629639 -238.23359680]
[189.57670593 -228.31605530]
[187.24992371 -212.08280945]
[171.92951965 -206.23324585]
[162.85812378 -194.28712463]
[153.78674316 -182.34100342]
[144.71534729 -170.39486694]
[159.60673523 -172.19665527]
[170.98083496 -162.41760254]
[171.43247986 -147.42440796]
[160.66761780 -136.97845459]
[145.69477844 -137.88063049]
[136.26219177 -149.54315186]
[134.45414734 -134.65252686]
[132.64610291 -119.76188660]
[130.83804321 -104.87125397]
[129.02999878 -89.98062134]
[127.22194672 -75.08998871]
[125.41389465 -60.19935608]
[123.60584259 -45.30872345]
[129.75262451 -31.74161720]
[120.40831757 -18.97469330]
[118.60026550 -4.08405924]
[116.79221344 10.80657387]
[114.98416138 25.69720650]
[113.17611694 40.58784103]
[117.63211060 112.67803955]
[122.95117950 126.70327759]
[128.27024841 140.72853088]
[140.39836121 150.88822937]
[137.67701721 165.53211975]
[142.99609375 179.55735779]
[148.52638245 193.50067139]
[154.26663208 207.35885620]
[160.00688171 221.21705627]
[165.74713135 235.07524109]
[171.48738098 248.93344116]
[177.22764587 262.79162598]
[182.96789551 276.64981079]
[188.70814514 290.50802612]
[198.73948669 301.66024780]
[211.91453552 308.83090210]
[225.08956909 316.00155640]
[238.26461792 323.17221069]
[251.43966675 330.34283447]
[266.52478027 325.62963867]
[280.48538208 333.03756714]
[285.03884888 348.17169189]
[277.48370361 362.05316162]
[262.30227661 366.44638062]
[248.50146484 358.74490356]
[244.26901245 343.51788330]
[231.09396362 336.34722900]
[217.91893005 329.17657471]
[204.74388123 322.00595093]
[191.56883240 314.83529663]
[179.35418701 323.54171753]
[181.83485413 338.33517456]
[184.31553650 353.12863159]
[186.79621887 367.92208862]
[189.27690125 382.71554565]
[191.75758362 397.50900269]
[194.23825073 412.30242920]
[204.94696045 401.79895020]
[219.85375977 403.46841431]
[227.97363281 416.08062744]
[223.32292175 430.34143066]
[209.32881165 435.74185181]
[196.30371094 428.30218506]
[197.66119385 443.24063110]
[199.01867676 458.17907715]
[202.91267395 466.44458008]
[200.28210449 473.35314941]
[201.41380310 488.31039429]
[215.86738586 493.01812744]
[227.41590881 502.90243530]
[234.29833984 516.45605469]
[235.46514893 531.61212158]
[230.73840332 546.05950928]
[220.83889771 557.59503174]
[207.27624512 564.45965576]
[192.11863708 565.60650635]
[177.67750549 560.86077881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 198]
[6 197]
[7 195]
[8 194]
[9 193]
[10 187]
[11 186]
[12 185]
[13 184]
[14 183]
[15 182]
[16 181]
[18 164]
[19 163]
[20 162]
[21 161]
[22 160]
[23 159]
[24 158]
[25 157]
[28 156]
[29 155]
[31 153]
[32 152]
[33 151]
[34 46]
[35 45]
[36 44]
[37 43]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[72 144]
[73 143]
[74 142]
[75 141]
[76 140]
[77 139]
[78 138]
[79 137]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
[88 110]
[90 108]
[91 107]
[92 106]
[96 104]
[97 103]
[120 131]
[121 130]
[122 129]
[123 128]
[165 180]
[166 179]
[167 178]
[168 177]
[169 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
