%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUUUCUGUUCACUUUUUUUCACAAAAUCAUCCAGGCUCUUCCUACUCUCCUCUCUUACCACCUCUCUCUUCUUUUUUUUUUUUUUUUAGUUAUUUCACAGAUGCCACUGGGGUAGGUAAACUGACCCAACUCUGCAGCACUCAGAAGACGAAGCAAAGCCUUCUACUUGAGCAGUUUUUCCAUCACUGAUAUGUGCAGGAA\
) } def
/len { sequence length } bind def

/coor [
[170.00856018 545.77209473]
[162.03366089 539.04895020]
[156.73291016 530.02117920]
[154.73315430 519.70605469]
[156.28756714 509.27581787]
[161.24397278 499.92443848]
[169.05928040 492.73098755]
[164.29240417 478.50857544]
[159.52552795 464.28616333]
[154.75866699 450.06375122]
[149.99179077 435.84133911]
[145.22491455 421.61892700]
[140.45805359 407.39651489]
[132.09169006 408.47866821]
[123.65332794 408.36706543]
[115.31252289 407.06304932]
[107.23696136 404.59204102]
[99.58913422 401.00277710]
[92.52304840 396.36666870]
[86.18112946 390.77609253]
[80.69136047 384.34274292]
[76.16467285 377.19528198]
[72.69273376 369.47683716]
[70.34608459 361.34216309]
[69.17267609 352.95443726]
[69.19695282 344.48202515]
[70.41927338 336.09512329]
[72.81592560 327.96240234]
[76.33959198 320.24743652]
[80.92025757 313.10562134]
[86.46662140 306.68084717]
[92.86790466 301.10281372]
[99.99607849 296.48416138]
[107.70838928 292.91842651]
[115.85027313 290.47802734]
[114.46624756 275.54202271]
[113.08222198 260.60601807]
[111.69819641 245.66999817]
[110.31417084 230.73399353]
[108.58552551 215.83392334]
[106.51317596 200.97776794]
[104.44083405 186.12161255]
[102.36849213 171.26545715]
[88.82128143 170.42309570]
[75.67913818 167.02888489]
[63.41828918 161.20582581]
[52.48300171 153.16493225]
[43.26953506 143.19757080]
[36.11174011 131.66490173]
[31.26898956 118.98482513]
[28.91676140 105.61682129]
[29.14029121 92.04529572]
[31.93148232 78.76200867]
[37.18918991 66.24829102]
[44.72289658 54.95760345]
[54.25961685 45.29906082]
[65.45377350 37.62265015]
[59.60698700 23.80906677]
[53.76019669 9.99548435]
[47.91341019 -3.81809878]
[42.06661987 -17.63168144]
[36.11364365 -31.39983559]
[30.05482864 -45.12174225]
[23.99601364 -58.84365082]
[17.93719864 -72.56555939]
[11.87838364 -86.28746796]
[-2.56315017 -82.14550018]
[-17.43418121 -80.00864410]
[-32.45767212 -79.91669464]
[-47.35374832 -81.87137604]
[-61.84489822 -85.83625793]
[-75.66116333 -91.73749542]
[-88.54515076 -99.46514130]
[-100.25685120 -108.87523651]
[-110.57807159 -119.79247284]
[-119.31654358 -132.01347351]
[-126.30946350 -145.31057739]
[-131.42655945 -159.43605042]
[-134.57252502 -174.12675476]
[-135.68872070 -189.10900879]
[-134.75436401 -204.10369873]
[-131.78686523 -218.83148193]
[-126.84150696 -233.01800537]
[-120.01042175 -246.39895630]
[-111.42086029 -258.72506714]
[-101.23284149 -269.76672363]
[-89.63616943 -279.31820679]
[-76.84687805 -287.20159912]
[-63.10322189 -293.27001953]
[-48.66123962 -297.41040039]
[-33.78997421 -299.54565430]
[-18.76647377 -299.63598633]
[-3.87061286 -297.67968750]
[10.62010765 -293.71322632]
[24.43573380 -287.81051636]
[37.31888962 -280.08148193]
[49.02956772 -270.67010498]
[59.34960938 -259.75173950]
[68.08675385 -247.52980042]
[75.07823944 -234.23194885]
[80.19380951 -220.10591125]
[83.33817291 -205.41487122]
[84.45275116 -190.43249512]
[83.51676941 -175.43791199]
[80.54768372 -160.71044922]
[75.60079193 -146.52447510]
[68.76824951 -133.14425659]
[60.17735672 -120.81906128]
[49.98814392 -109.77851105]
[38.39043808 -100.22827911]
[25.60029221 -92.34628296]
[31.65910721 -78.62437439]
[37.71792221 -64.90246582]
[43.77673721 -51.18055725]
[49.83555222 -37.45864868]
[55.41621399 -32.60682678]
[55.88020325 -23.47846985]
[61.72699356 -9.66488647]
[67.57378387 4.14869595]
[73.42057037 17.96227837]
[79.26735687 31.77586174]
[87.11613464 29.86882591]
[95.13023376 28.86167717]
[103.20682526 28.76733971]
[111.24225616 29.58702469]
[119.13343811 31.31021118]
[126.77911377 33.91479111]
[134.08116150 37.36734390]
[140.94590759 41.62356567]
[147.28526306 46.62884521]
[153.01786804 52.31895828]
[158.07017517 58.62088776]
[162.37734985 65.45377350]
[176.19093323 59.60698700]
[190.00451660 53.76019669]
[203.81809998 47.91341019]
[208.23216248 32.91173935]
[221.28495789 24.30020142]
[236.81335449 26.14489746]
[247.48532104 37.57482147]
[248.26187134 53.19311142]
[238.77636719 65.62528992]
[223.50753784 69.00125885]
[209.66488647 61.72699356]
[195.85130310 67.57378387]
[182.03771973 73.42057037]
[168.22413635 79.26735687]
[171.27410889 102.09223938]
[166.89050293 124.69890594]
[155.53051758 144.72959900]
[138.37896729 160.09518433]
[117.22464752 169.19311523]
[119.29698944 184.04927063]
[121.36933899 198.90542603]
[123.44168091 213.76158142]
[126.65982056 217.88552856]
[127.85128784 222.38203430]
[127.21421814 226.41534424]
[125.25018311 229.34996033]
[126.63420868 244.28598022]
[128.01823425 259.22198486]
[129.40226746 274.15798950]
[130.78628540 289.09402466]
[152.84443665 294.16137695]
[171.43066406 307.03158569]
[183.90621948 325.85458374]
[188.50837708 347.93664551]
[184.59951782 370.12612915]
[172.75541687 389.26315308]
[154.68045044 402.62963867]
[159.44732666 416.85205078]
[164.21420288 431.07446289]
[168.98107910 445.29687500]
[173.74794006 459.51928711]
[178.51481628 473.74169922]
[183.28169250 487.96411133]
[202.63868713 492.94229126]
[214.97639465 508.48303223]
[215.42820740 528.17639160]
[203.98492432 544.03277588]
[209.61830139 557.93475342]
[215.25167847 571.83673096]
[220.88504028 585.73870850]
[235.16323853 591.96533203]
[240.67823792 606.14416504]
[234.65411377 619.71789551]
[240.28749084 633.61987305]
[245.92086792 647.52185059]
[260.57098389 653.45056152]
[266.66094971 668.03436279]
[260.57769775 682.62097168]
[245.93028259 688.55645752]
[231.40879822 682.31927490]
[225.62855530 667.60998535]
[232.01889038 653.15521240]
[226.38551331 639.25323486]
[220.75213623 625.35125732]
[206.97822571 619.80010986]
[201.06713867 605.78179932]
[206.98306274 591.37207031]
[201.34968567 577.47009277]
[195.71630859 563.56811523]
[190.08294678 549.66613770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 176]
[8 175]
[9 174]
[10 173]
[11 172]
[12 171]
[13 170]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[40 155]
[41 154]
[42 153]
[43 152]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 115]
[63 114]
[64 113]
[65 112]
[66 111]
[133 147]
[134 146]
[135 145]
[136 144]
[180 203]
[181 202]
[182 201]
[183 200]
[186 197]
[187 196]
[188 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
