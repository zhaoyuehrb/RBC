%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAGACCUAAAUCAGCUUUCCUCCCUGCUAACAUCCUAGUGGCAACUCUUACUCCUACCCGCACUAUGGGAUUUUAAGAUCAAAGGAAUUAGACCUAGGGCAAAAACUGAGACAGCAGGGAGGCACUGUAACAACUGGAAAGUUUUCCAAAUUGGUAAACUUGCAGUAUUCUUUCUGUACAGAAGUAAAAGAUCCCCUAUGUCCCU\
) } def
/len { sequence length } bind def

/coor [
[88.56085968 343.60971069]
[76.16669464 334.27352905]
[71.65947723 319.42547607]
[76.77232361 304.77493286]
[89.53924561 295.95532227]
[89.76579285 280.95703125]
[89.99234772 265.95874023]
[75.69111633 261.57101440]
[63.19311523 253.32290649]
[53.51591110 241.87574768]
[47.45030594 228.15171814]
[45.49568176 213.25958252]
[47.81892395 198.40513611]
[54.24019623 184.79354858]
[64.24683380 173.53155518]
[77.03426361 165.53756714]
[91.57069397 161.46665955]
[91.79724121 146.46838379]
[92.02378845 131.47009277]
[92.25033569 116.47180176]
[85.48088837 103.08618927]
[73.26622772 94.37974548]
[61.05157471 85.67330170]
[48.83691788 76.96685791]
[36.62226105 68.26041412]
[24.40760612 59.55396652]
[12.19295025 50.84751892]
[-0.02170498 42.14107513]
[-12.23636055 33.43463135]
[-24.45101547 24.72818565]
[-42.99994278 28.57299614]
[-58.20943832 17.82503510]
[-60.69180298 -0.31033561]
[-73.16384888 -8.64388943]
[-86.05879974 -16.30679512]
[-99.34064484 -23.27764130]
[-112.62248230 -30.24848938]
[-125.90431976 -37.21933746]
[-139.18615723 -44.19018555]
[-152.46800232 -51.16103363]
[-161.52333069 -52.37873077]
[-165.89662170 -58.33877945]
[-164.23269653 -43.43135452]
[-174.74018860 -32.72656250]
[-189.67597961 -34.11291504]
[-198.03369141 -46.56879425]
[-193.65437317 -60.91527939]
[-179.76516724 -66.58024597]
[-192.36164856 -74.72447968]
[-204.95812988 -82.86871338]
[-219.37539673 -77.44203186]
[-234.05203247 -81.49782562]
[-243.41549683 -93.27872467]
[-244.03897095 -108.13636017]
[-256.63546753 -116.28059387]
[-269.23193359 -124.42482758]
[-281.82843018 -132.56906128]
[-293.30499268 -133.51126099]
[-299.34719849 -141.76362610]
[-313.20541382 -147.50387573]
[-327.06359863 -153.24412537]
[-340.92178345 -158.98437500]
[-356.23422241 -154.19808960]
[-369.44219971 -163.30464172]
[-370.41366577 -179.31825256]
[-358.40341187 -189.95466614]
[-342.62466431 -187.05451965]
[-335.18154907 -172.84257507]
[-321.32333374 -167.10232544]
[-307.46514893 -161.36207581]
[-293.60696411 -155.62181091]
[-301.80853271 -168.18103027]
[-304.39788818 -182.95585632]
[-300.95599365 -197.55563354]
[-292.03976440 -209.61802673]
[-279.09194946 -217.19126892]
[-264.20758057 -219.04998779]
[-249.79498291 -214.89340210]
[-238.18623352 -205.39408875]
[-231.25968933 -192.08908081]
[-230.13610840 -177.13122559]
[-234.99729919 -162.94078064]
[-245.05668640 -151.81382751]
[-258.68661499 -145.55081177]
[-273.68420410 -145.16554260]
[-261.08770752 -137.02131653]
[-248.49122620 -128.87707520]
[-235.89474487 -120.73284149]
[-222.09017944 -126.26206207]
[-207.50430298 -122.55855560]
[-197.78233337 -110.83946991]
[-196.81390381 -95.46519470]
[-184.21742249 -87.32096100]
[-171.62092590 -79.17672729]
[-158.72598267 -71.51382446]
[-145.49716187 -64.44287109]
[-132.21531677 -57.47202682]
[-118.93347168 -50.50117874]
[-105.65163422 -43.53033066]
[-92.36979675 -36.55948257]
[-79.08795166 -29.58863449]
[-83.61733246 -43.88845062]
[-78.01329041 -57.80228043]
[-64.83712769 -64.97087097]
[-50.11095428 -62.11785507]
[-40.56529999 -50.54718018]
[-40.56296539 -35.54718018]
[-50.10501862 -23.97353745]
[-64.83029175 -21.11593246]
[-52.35824966 -12.78238010]
[-41.91419601 -17.38134193]
[-30.42822075 -16.35589409]
[-20.76515388 -9.84563160]
[-15.39110851 0.62747854]
[-15.74457169 12.51352882]
[-3.52991557 21.21997452]
[8.68474007 29.92642021]
[20.89939499 38.63286591]
[33.11405182 47.33930969]
[45.32870865 56.04575348]
[57.54336166 64.75219727]
[69.75801849 73.45864105]
[81.97267151 82.16509247]
[94.18733215 90.87153625]
[99.30958557 83.88529205]
[109.92535400 80.99918365]
[122.58488464 85.67559052]
[137.57803345 85.22254944]
[152.57119751 84.76950073]
[167.56434631 84.31645966]
[182.55751038 83.86341095]
[191.04304504 80.47557831]
[197.78015137 83.51847076]
[212.77844238 83.29192352]
[227.73568726 82.16021729]
[242.59732056 80.12747192]
[257.45895386 78.09473419]
[272.32058716 76.06198883]
[280.72937012 66.27961731]
[293.15112305 64.89360809]
[302.86492920 72.10498810]
[317.75555420 70.29693604]
[332.64620972 68.48889160]
[347.53683472 66.68083954]
[362.42745972 64.87278748]
[377.31811523 63.06473923]
[390.08502197 53.72042465]
[403.65213013 59.86720657]
[418.54275513 58.05915833]
[433.43341064 56.25110626]
[448.42822266 48.33965683]
[460.18148804 60.55838776]
[451.69390869 75.23480225]
[435.24145508 71.14173889]
[420.35079956 72.94979095]
[405.46017456 74.75784302]
[393.75833130 83.97283173]
[379.12615967 77.95536804]
[364.23550415 79.76342010]
[349.34487915 81.57147217]
[334.45425415 83.37952423]
[319.56362915 85.18756866]
[304.67297363 86.99562073]
[291.23352051 98.27891541]
[274.35330200 90.92362213]
[259.49169922 92.95635986]
[244.63006592 94.98909760]
[229.76843262 97.02184296]
[242.28263855 105.29194641]
[247.65519714 119.29678345]
[243.88296509 133.81471252]
[232.37239075 143.43276978]
[217.41517639 144.56488037]
[204.58805847 136.78895569]
[198.67358398 123.00422668]
[201.87693787 108.35026550]
[213.00498962 98.29021454]
[198.00669861 98.51676178]
[183.01055908 98.85656738]
[168.01739502 99.30961609]
[153.02424622 99.76265717]
[138.03108215 100.21570587]
[123.03792572 100.66874695]
[137.48529053 104.70280457]
[144.25129700 118.09015656]
[138.93090820 132.11489868]
[124.98799133 137.64616394]
[111.50013733 131.08279419]
[107.24862671 116.69834900]
[107.02207947 131.69664001]
[106.79553223 146.69493103]
[106.56898499 161.69320679]
[120.97582245 166.20130920]
[133.51597595 174.57786560]
[143.17790222 186.13694763]
[149.18513489 199.93627930]
[151.05867004 214.85411072]
[148.65515137 229.68040466]
[142.17781067 243.21498108]
[132.15927124 254.36463928]
[119.41786194 262.23150635]
[104.99063110 266.18530273]
[104.76408386 281.18359375]
[104.53753662 296.18188477]
[117.03224945 305.38305664]
[121.70027924 320.18133545]
[116.74665833 334.88647461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[17 192]
[18 191]
[19 190]
[20 189]
[21 124]
[22 123]
[23 122]
[24 121]
[25 120]
[26 119]
[27 118]
[28 117]
[29 116]
[30 115]
[33 110]
[34 109]
[35 101]
[36 100]
[37 99]
[38 98]
[39 97]
[40 96]
[42 95]
[48 94]
[49 93]
[50 92]
[54 88]
[55 87]
[56 86]
[57 85]
[59 71]
[60 70]
[61 69]
[62 68]
[127 183]
[128 182]
[129 181]
[130 180]
[131 179]
[133 178]
[134 177]
[135 168]
[136 167]
[137 166]
[138 165]
[141 163]
[142 162]
[143 161]
[144 160]
[145 159]
[146 158]
[148 156]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
