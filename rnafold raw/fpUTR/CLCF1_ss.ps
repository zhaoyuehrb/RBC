%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUCAGAAAAAAAAAAAAAAAGUUUGCAGAAUGUCCCACACCGAAAAAAAAAAAAAAUCCGAAACCGAGCGAAAAAAACCUGCGAGUGGGCCUGGCGGAUGGGAUUAUUAAAGCUUCGCCGGAGCCGCGGCUCGCCCUCCCACUCCGCCAGCCUCCGGGAGAGGAGCCGCACCCGGCCGGCCCGGCCCCAGCCCC\
) } def
/len { sequence length } bind def

/coor [
[-85.36187744 166.22189331]
[-76.99831390 178.67382812]
[-71.67195892 192.69630432]
[-69.65956879 207.56071472]
[-71.06571198 222.49465942]
[-75.81732941 236.72216797]
[-83.66751099 249.50398254]
[-94.20835876 260.17593384]
[-106.89216614 268.18350220]
[-121.05986786 273.11059570]
[-135.97529602 274.70120239]
[-150.86343384 272.87268066]
[-164.95066833 267.72006226]
[-177.50503540 259.51101685]
[-187.87417603 248.67218018]
[-195.51931763 235.76667786]
[-200.04319763 221.46513367]
[-201.21076965 206.51063538]
[-198.96134949 191.68025208]
[-193.41183472 177.74459839]
[-184.85055542 165.42774963]
[-173.72239685 155.36972046]
[-160.60556030 148.09313965]
[-146.18272400 143.97627258]
[-160.88568115 141.00593567]
[-175.58865356 138.03559875]
[-190.29161072 135.06527710]
[-204.99458313 132.09494019]
[-219.69754028 129.12461853]
[-234.40049744 126.15428162]
[-239.12625122 140.40997314]
[-245.53590393 153.99208069]
[-253.53599548 166.70254517]
[-263.00988770 178.35598755]
[-273.81939697 188.78248596]
[-285.80688477 197.83000183]
[-298.79754639 205.36656189]
[-312.60195923 211.28230286]
[-327.01876831 215.49092102]
[-341.83779907 217.93104553]
[-356.84289551 218.56710815]
[-371.81524658 217.38983154]
[-386.53649902 214.41636658]
[-400.79202271 209.69009399]
[-414.37390137 203.27993774]
[-427.08404541 195.27935791]
[-438.73715210 185.80503845]
[-449.16323853 174.99514771]
[-458.21029663 163.00730896]
[-465.74639893 150.01635742]
[-471.66159058 136.21174622]
[-475.86968994 121.79475403]
[-478.30926514 106.97565460]
[-478.94476318 91.97053528]
[-477.76690674 76.99822998]
[-474.79290771 62.27706528]
[-470.06610107 48.02172852]
[-463.65542603 34.44009781]
[-455.65438843 21.73023987]
[-446.17962646 10.07749557]
[-435.36935425 -0.34819895]
[-423.38116455 -9.39480877]
[-410.38995361 -16.93040657]
[-396.58511353 -22.84510231]
[-382.16796875 -27.05264091]
[-367.34875488 -29.49166489]
[-352.34362793 -30.12660599]
[-337.37136841 -28.94820595]
[-322.65029907 -25.97364807]
[-308.39514160 -21.24630928]
[-294.81375122 -14.83512974]
[-282.10418701 -6.83360291]
[-270.45181274 2.64158583]
[-260.02651978 13.45226002]
[-250.98036194 25.44076729]
[-243.44523621 38.43228149]
[-237.53106689 52.23734665]
[-233.32406616 66.65464783]
[-230.88558960 81.47393036]
[-230.25120544 96.47909546]
[-231.43017578 111.45131683]
[-216.72720337 114.42164612]
[-202.02424622 117.39198303]
[-187.32128906 120.36231232]
[-172.61831665 123.33264160]
[-157.91535950 126.30297089]
[-143.21238708 129.27330017]
[-135.34230042 126.21459198]
[-126.41893005 129.40721130]
[-111.67047119 126.67172241]
[-96.92201233 123.93622589]
[-82.17355347 121.20072937]
[-76.16325378 116.88484192]
[-67.16821289 118.54117584]
[-52.37800980 116.04122162]
[-37.58780289 113.54125977]
[-31.50944138 109.32176208]
[-22.54196358 111.12132263]
[-7.71377134 108.85753632]
[3.70001578 99.28807068]
[18.50983047 104.85403442]
[33.33802032 102.59024811]
[48.16621399 100.32645416]
[62.99440384 98.06266785]
[64.06172180 90.96629333]
[66.47683716 84.20870972]
[70.14915466 78.04335022]
[74.94097137 72.70141602]
[80.67256927 68.38326263]
[87.12900543 65.25083160]
[94.06813812 63.42158508]
[101.22972870 62.96413803]
[108.34519958 63.89563751]
[115.14771271 66.18115234]
[121.38213348 69.73497772]
[126.81466675 74.42382050]
[131.24157715 80.07183838]
[134.49682617 86.46723175]
[136.45835876 93.37013245]
[151.45407104 93.72891235]
[166.44978333 94.08768463]
[181.44549561 94.44646454]
[196.44119263 94.80523682]
[205.10684204 91.87935638]
[211.67265320 95.29119873]
[221.66819763 87.12744141]
[234.14646912 87.94074249]
[242.44700623 96.74998474]
[257.42364502 97.58677673]
[272.40029907 98.42356873]
[287.37692261 99.26036072]
[302.35357666 100.09715271]
[317.33023071 100.93394470]
[332.30685425 101.77073669]
[341.06140137 99.12268066]
[347.51507568 102.74216461]
[361.83450317 96.01426697]
[373.97424316 104.64420319]
[388.93563843 105.71971130]
[403.89703369 106.79522705]
[418.85842896 107.87073517]
[433.81982422 108.94624329]
[440.27676392 95.21044922]
[451.26235962 84.73755646]
[465.29083252 78.94393158]
[480.46499634 78.61312866]
[494.73263550 83.78987885]
[506.16418457 93.77406311]
[513.21362305 107.21540833]
[514.92755127 122.29608917]
[511.07421875 136.97656250]
[502.17471313 149.27140808]
[489.43264771 157.51785278]
[474.57125854 160.60063171]
[459.60043335 158.10284424]
[446.54486084 150.36225891]
[437.17019653 138.42575073]
[432.74429321 123.90763855]
[417.78289795 122.83213043]
[402.82150269 121.75661469]
[387.86010742 120.68110657]
[372.89874268 119.60559845]
[359.64944458 126.41043091]
[346.43954468 117.70355988]
[331.47006226 116.74738312]
[316.49343872 115.91059113]
[301.51678467 115.07379913]
[286.54013062 114.23700714]
[271.56350708 113.40021515]
[256.58685303 112.56342316]
[241.61021423 111.72663116]
[226.40266418 120.47445679]
[211.07479858 110.27928162]
[196.08242798 109.80094910]
[181.08671570 109.44216919]
[166.09100342 109.08339691]
[151.09529114 108.72461700]
[136.09957886 108.36583710]
[123.96939850 128.26013184]
[102.36216736 136.98091125]
[79.82097626 131.08012390]
[65.25819397 112.89086151]
[50.43000031 115.15464783]
[35.60181046 117.41843414]
[20.77361870 119.68222809]
[8.29922009 129.41362000]
[-5.44998264 123.68572998]
[-20.27817345 125.94951630]
[-35.08784485 128.33146667]
[-49.87805176 130.83142090]
[-64.66825867 133.33139038]
[-79.43805695 135.94918823]
[-94.18651581 138.68469238]
[-108.93498230 141.42018127]
[-123.68344116 144.15567017]
[-109.32706451 148.50245667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 87]
[25 86]
[26 85]
[27 84]
[28 83]
[29 82]
[30 81]
[89 195]
[90 194]
[91 193]
[92 192]
[94 191]
[95 190]
[96 189]
[98 188]
[99 187]
[101 185]
[102 184]
[103 183]
[104 182]
[119 178]
[120 177]
[121 176]
[122 175]
[123 174]
[125 173]
[128 171]
[129 170]
[130 169]
[131 168]
[132 167]
[133 166]
[134 165]
[136 164]
[138 162]
[139 161]
[140 160]
[141 159]
[142 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
