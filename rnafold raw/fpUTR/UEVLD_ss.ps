%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUUCCGGGCGCAGCCGCGGCUGAGCCCGGGGCGUUGAAUGCGGGUGGAAUUUCCAGUCUGGGAAGGGGCGGGGCCUUGGACCGCCGGGAAGUUUGGUCCUCAGCGGCUUCCGUCCUGCAGCAAGUCCGGAAGAAGGUCCGGGGGCUGGAGUCCUGGGACCUAGCUCGGGACCGGCCUGGAG\
) } def
/len { sequence length } bind def

/coor [
[154.77296448 131.23701477]
[140.95161438 125.40863037]
[127.13025665 119.58024597]
[113.30889893 113.75186157]
[105.05998230 120.68583679]
[93.31058502 122.47982025]
[81.30234528 117.50395203]
[72.07858276 129.33282471]
[62.85481262 141.16168213]
[53.63104630 152.99055481]
[44.40727997 164.81942749]
[35.18351364 176.64830017]
[32.79911041 192.28878784]
[18.87131691 197.56759644]
[9.64754963 209.39646912]
[0.42378280 221.22534180]
[-8.79998398 233.05421448]
[-10.52985764 249.36186218]
[-25.62541389 255.76937866]
[-38.55763626 245.68525696]
[-36.02296448 229.48316956]
[-20.62885284 223.83044434]
[-11.40508556 212.00157166]
[-2.18131900 200.17269897]
[7.04244757 188.34384155]
[8.76710606 173.54942322]
[23.35464478 167.42453003]
[32.57841110 155.59565735]
[41.80217743 143.76678467]
[51.02594376 131.93792725]
[60.24971008 120.10905457]
[69.47348022 108.28018188]
[69.09143066 93.28504944]
[54.21092606 87.91094208]
[51.73513031 73.22354126]
[41.92097473 61.87972260]
[32.10681534 50.53590012]
[22.29265785 39.19207764]
[12.47850132 27.84825325]
[2.66434312 16.50443077]
[-1.53679669 15.21678925]
[-4.77312231 12.88432789]
[-6.83337498 9.94315147]
[-7.67130041 6.85309792]
[-7.39892387 4.04131031]
[-16.42049789 -7.94247913]
[-25.44207001 -19.92626953]
[-34.46364594 -31.91005898]
[-48.94507217 -38.28177261]
[-50.41826248 -53.10334396]
[-59.43983841 -65.08713531]
[-68.46141052 -77.07092285]
[-77.48298645 -89.05471802]
[-86.50455475 -101.03850555]
[-95.52613068 -113.02229309]
[-104.54770660 -125.00608063]
[-113.56927490 -136.98986816]
[-127.30847168 -135.73211670]
[-139.77369690 -141.38795471]
[-147.74797058 -152.38011169]
[-149.23165894 -165.76983643]
[-143.94306946 -178.04217529]
[-152.75984192 -190.17742920]
[-161.57662964 -202.31268311]
[-176.98080444 -202.44415283]
[-189.21092224 -211.51484680]
[-193.70166016 -225.87789917]
[-188.93084717 -239.96255493]
[-197.74761963 -252.09780884]
[-206.56440735 -264.23306274]
[-215.38117981 -276.36831665]
[-224.19796753 -288.50357056]
[-238.39956665 -297.76373291]
[-233.43266296 -313.97381592]
[-216.48112488 -313.68841553]
[-212.06271362 -297.32034302]
[-203.24592590 -285.18508911]
[-194.42915344 -273.04983521]
[-185.61236572 -260.91458130]
[-176.79559326 -248.77932739]
[-161.92604065 -248.96424866]
[-149.65367126 -240.25486755]
[-144.80624390 -225.82034302]
[-149.44136047 -211.12947083]
[-140.62458801 -198.99421692]
[-131.80781555 -186.85896301]
[-115.41107941 -187.38934326]
[-101.78800201 -177.95420837]
[-96.41187286 -162.10371399]
[-101.58548737 -146.01144409]
[-92.56391144 -134.02764893]
[-83.54234314 -122.04386902]
[-74.52076721 -110.06007385]
[-65.49919128 -98.07628632]
[-56.47761917 -86.09249878]
[-47.45604706 -74.10871124]
[-38.43447495 -62.12491989]
[-24.59832764 -56.61036301]
[-22.47985458 -40.93163300]
[-13.45828152 -28.94784164]
[-4.43670797 -16.96405220]
[4.58486557 -4.98026323]
[14.00816536 6.69027328]
[23.82232285 18.03409576]
[33.63648224 29.37791824]
[43.45063782 40.72174072]
[53.26479721 52.06556320]
[63.07895279 63.40938568]
[77.25749207 67.97210693]
[80.43525696 83.47089386]
[107.64979553 78.97347260]
[119.13728333 99.93050385]
[132.95863342 105.75888824]
[146.77999878 111.58727264]
[160.60134888 117.41565704]
[172.83621216 113.28567505]
[184.23625183 118.44210052]
[188.90339661 129.61756897]
[202.62377930 135.67980957]
[218.37373352 134.17988586]
[226.88824463 146.40086365]
[240.60864258 152.46310425]
[254.32904053 158.52534485]
[268.10040283 164.47087097]
[282.59191895 158.75825500]
[296.52572632 164.86595154]
[301.88250732 178.71658325]
[315.70388794 184.54498291]
[329.52523804 190.37336731]
[343.34658813 196.20175171]
[359.06878662 194.43458557]
[367.78961182 206.50921631]
[381.61096191 212.33760071]
[394.86416626 204.48527527]
[410.02261353 205.92564392]
[421.29299927 215.89773560]
[424.49200439 230.42028809]
[438.31335449 236.24867249]
[452.13470459 242.07705688]
[465.95608521 247.90544128]
[479.77743530 253.73382568]
[493.59878540 259.56219482]
[509.32098389 257.79504395]
[518.04180908 269.86968994]
[531.86315918 275.69805908]
[545.68450928 281.52645874]
[559.50585938 287.35482788]
[573.32720947 293.18322754]
[589.52331543 290.61050415]
[599.63781738 303.51901245]
[593.26574707 318.62957764]
[576.96221924 320.39773560]
[567.49884033 307.00457764]
[553.67749023 301.17620850]
[539.85614014 295.34780884]
[526.03479004 289.51943970]
[512.21343994 283.69104004]
[497.47982788 285.87509155]
[487.77041626 273.38357544]
[473.94903564 267.55517578]
[460.12768555 261.72680664]
[446.30633545 255.89840698]
[432.48498535 250.07002258]
[418.66360474 244.24163818]
[406.03161621 252.08834839]
[391.02383423 250.97909546]
[379.41119385 241.13024902]
[375.78259277 226.15896606]
[361.96124268 220.33058167]
[347.22763062 222.51461792]
[337.51821899 210.02310181]
[323.69683838 204.19471741]
[309.87548828 198.36633301]
[296.05413818 192.53794861]
[282.39703369 198.37052917]
[268.29718018 192.65661621]
[262.27203369 178.29223633]
[254.87016296 178.59094238]
[248.26679993 172.24574280]
[234.54640198 166.18350220]
[220.82600403 160.12126160]
[206.05743408 162.05479431]
[196.56153870 149.40020752]
[182.84115601 143.33796692]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 115]
[2 114]
[3 113]
[4 112]
[7 32]
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[14 25]
[15 24]
[16 23]
[17 22]
[33 110]
[35 108]
[36 107]
[37 106]
[38 105]
[39 104]
[40 103]
[45 102]
[46 101]
[47 100]
[48 99]
[50 97]
[51 96]
[52 95]
[53 94]
[54 93]
[55 92]
[56 91]
[57 90]
[62 86]
[63 85]
[64 84]
[68 80]
[69 79]
[70 78]
[71 77]
[72 76]
[118 184]
[119 183]
[121 181]
[122 180]
[123 179]
[124 177]
[127 174]
[128 173]
[129 172]
[130 171]
[132 169]
[133 168]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[142 159]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
