%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCUCUGCAGCCAUCUGCUUUCAUCAGGGCUGCAGCCCCCAGGCAGCAGUACUGGGAGCCCCUCUCAUCUCCGAGAAUAAACUCUGAAGCCAGCGACCCUGCGGACCUGAAUCAUCAGGGAGCCUGUCAGAGGAGGGGCAGUGACUCUGCGGGACAAGCAAGCAGGCUAUAUAAGUUUCAGAAGGCUGGGCUCCACUCAGAUCUUUUCCAGCAGCUGCUGCCUGCCAGAGAGGCGCCUUCAGAGACCCAGCGC\
UUACACAAUACCCACC\
) } def
/len { sequence length } bind def

/coor [
[178.17744446 392.54782104]
[174.57476807 377.98687744]
[170.97209167 363.42596436]
[167.36941528 348.86502075]
[163.76673889 334.30410767]
[160.16407776 319.74316406]
[156.56140137 305.18222046]
[152.95872498 290.62130737]
[149.35604858 276.06036377]
[131.97352600 267.19802856]
[126.68673706 248.09793091]
[137.36381531 231.03855896]
[133.25888062 216.61117554]
[129.15393066 202.18379211]
[115.91495514 190.64085388]
[120.60346985 172.81619263]
[116.33216095 158.43717957]
[112.06085968 144.05816650]
[107.78955841 129.67915344]
[100.53038025 127.79385376]
[97.38513947 142.46040344]
[94.23989105 157.12693787]
[94.02738190 172.12542725]
[79.93407440 177.26144409]
[70.12123108 165.91648865]
[77.23393250 152.71026611]
[81.62297821 138.36676025]
[86.01203156 124.02324677]
[78.75285339 122.13794708]
[68.02445984 132.62133789]
[57.29606247 143.10472107]
[46.56766129 153.58811951]
[42.66399002 169.51586914]
[26.84483528 173.83865356]
[15.38358974 162.10954285]
[20.07060051 146.39445496]
[36.08427048 142.85972595]
[46.81266785 132.37632751]
[57.54106522 121.89293671]
[68.26946259 111.40954590]
[75.58104706 90.04695892]
[91.70079803 82.88681030]
[91.00804901 67.90280914]
[90.31529236 52.91881943]
[89.62254333 37.93482208]
[88.92979431 22.95082855]
[88.23703766 7.96683407]
[87.54428864 -7.01716042]
[86.85153198 -22.00115585]
[86.15878296 -36.98514938]
[85.46603394 -51.96914291]
[84.77327728 -66.95314026]
[74.48598480 -82.24600983]
[83.19481659 -97.49941254]
[82.32904816 -112.47440338]
[81.46327972 -127.44940186]
[75.80921936 -165.17523193]
[72.54383850 -179.81549072]
[69.27845001 -194.45574951]
[66.01306915 -209.09600830]
[62.74768066 -223.73628235]
[59.48229599 -238.37654114]
[56.21691132 -253.01679993]
[30.89909744 -260.23745728]
[17.63862801 -286.97238159]
[2.68762684 -288.18380737]
[-12.26337433 -289.39523315]
[-27.21437645 -290.60665894]
[-39.09188461 -280.18069458]
[-54.85715866 -281.29046631]
[-65.15695190 -293.27752686]
[-63.88056564 -309.03021240]
[-51.78527069 -319.20266724]
[-36.04698181 -317.75982666]
[-26.00295067 -305.55764771]
[-11.05194855 -304.34622192]
[3.89905310 -303.13479614]
[18.85005379 -301.92337036]
[24.27443504 -307.10275269]
[9.87911701 -311.31878662]
[6.33274174 -325.89352417]
[17.18172836 -336.25207520]
[31.57695580 -332.03573608]
[35.12319946 -317.46154785]
[40.54758072 -322.64093018]
[40.02793503 -337.63192749]
[39.50828934 -352.62292480]
[38.98864365 -367.61392212]
[38.46899796 -382.60491943]
[37.94935608 -397.59591675]
[37.42971039 -412.58691406]
[36.91006470 -427.57791138]
[20.60300636 -432.35211182]
[6.79433060 -442.21353149]
[-2.98643351 -456.05108643]
[-7.66208649 -472.31439209]
[-6.72637796 -489.18737793]
[-0.29877198 -504.79113770]
[10.89055443 -517.39312744]
[25.58362961 -525.59942627]
[22.65727425 -540.31121826]
[19.73092079 -555.02301025]
[16.80456543 -569.73474121]
[13.87821007 -584.44653320]
[10.95185566 -599.15832520]
[8.02550125 -613.87011719]
[5.09914589 -628.58184814]
[0.00503879 -642.69036865]
[-7.14218998 -655.87817383]
[-14.28941917 -669.06591797]
[-21.43664742 -682.25366211]
[-28.58387756 -695.44146729]
[-42.83530807 -703.55493164]
[-42.66394806 -719.95318604]
[-28.24607468 -727.76708984]
[-14.41356277 -718.95837402]
[-15.39611340 -702.58868408]
[-8.24888420 -689.40087891]
[-1.10165524 -676.21313477]
[6.04557371 -663.02539062]
[13.19280243 -649.83764648]
[20.38230896 -651.97326660]
[34.76131821 -656.24456787]
[41.95082474 -658.38024902]
[40.73939896 -673.33123779]
[39.52797318 -688.28222656]
[38.31654739 -703.23321533]
[29.48999405 -716.36346436]
[36.17414474 -729.67401123]
[34.96271515 -744.62500000]
[25.20280457 -757.80364990]
[31.98316193 -772.73547363]
[48.32874298 -774.05987549]
[57.42461014 -760.41448975]
[49.91371918 -745.83642578]
[51.12514496 -730.88543701]
[59.86504745 -718.82464600]
[53.26754761 -704.44464111]
[54.47897339 -689.49365234]
[55.69039917 -674.54266357]
[56.90182877 -659.59167480]
[67.93631744 -649.43096924]
[71.55261230 -634.87341309]
[66.55551910 -620.73022461]
[54.59656906 -611.67572021]
[39.62818146 -610.70245361]
[26.59737396 -618.13195801]
[19.81092453 -631.50823975]
[22.73727989 -616.79644775]
[25.66363525 -602.08465576]
[28.58999062 -587.37292480]
[31.51634407 -572.66113281]
[34.44269943 -557.94934082]
[37.36905289 -543.23754883]
[40.29541016 -528.52575684]
[47.29040527 -528.36810303]
[54.19612122 -527.24291992]
[60.87939072 -525.17199707]
[67.21134186 -522.19519043]
[76.38851166 -534.06024170]
[85.56568146 -545.92529297]
[83.31478882 -561.56848145]
[92.85132599 -574.17126465]
[108.51742554 -576.25665283]
[121.01867676 -566.58740234]
[122.93830872 -550.90014648]
[113.13743591 -538.50183105]
[97.43074036 -536.74816895]
[88.25357056 -524.88311768]
[79.07640076 -513.01806641]
[87.97634888 -500.40399170]
[92.65033722 -485.66537476]
[92.64627838 -470.17910767]
[87.94987488 -455.39666748]
[78.98728943 -442.70797729]
[66.58655548 -433.31079102]
[51.90106201 -428.09756470]
[52.42070770 -413.10656738]
[52.94034958 -398.11557007]
[53.45999527 -383.12457275]
[53.97964096 -368.13357544]
[54.49928665 -353.14257812]
[55.01892853 -338.15158081]
[55.53857422 -323.16058350]
[72.37612915 -318.48651123]
[84.94002533 -307.32507324]
[91.05414581 -292.39099121]
[90.00965118 -276.95733643]
[82.60284424 -264.14291382]
[70.85717010 -256.28219604]
[74.12255859 -241.64192200]
[77.38793945 -227.00166321]
[80.65332794 -212.36140442]
[83.91870880 -197.72114563]
[87.18409729 -183.08087158]
[90.44948578 -168.44061279]
[93.32972717 -183.16149902]
[106.14080048 -190.96383667]
[120.54198456 -186.76789856]
[127.15732574 -173.30545044]
[121.67987823 -159.34129333]
[107.67620087 -153.96684265]
[122.66019440 -153.27409363]
[135.43711853 -162.97612000]
[150.95275879 -158.89631653]
[157.30482483 -144.16435242]
[149.62055969 -130.08132935]
[133.79467773 -127.45053101]
[121.96744537 -138.29008484]
[106.98344421 -138.98284912]
[96.43827820 -128.31517029]
[97.30403900 -113.34017181]
[98.16980743 -98.36518097]
[106.97888947 -90.10844421]
[107.84286499 -77.66442108]
[99.75727081 -67.64588928]
[100.45002747 -52.66189575]
[101.14277649 -37.67790222]
[101.83553314 -22.69390678]
[102.52828217 -7.70991230]
[103.22103119 7.27408218]
[103.91378784 22.25807762]
[104.60653687 37.24207306]
[105.29928589 52.22606659]
[105.99204254 67.21006012]
[106.68479156 82.19405365]
[125.94748688 95.30147552]
[122.16857147 125.40785980]
[126.43987274 139.78686523]
[130.71118164 154.16587830]
[134.98248291 168.54489136]
[145.91203308 175.34875488]
[149.18669128 187.38523865]
[143.58131409 198.07884216]
[147.68626404 212.50624084]
[151.79119873 226.93362427]
[162.05099487 229.61819458]
[170.22071838 236.25320435]
[174.88079834 245.59999084]
[175.25714111 255.95669556]
[171.34893799 265.46801758]
[163.91699219 272.45770264]
[167.51965332 287.01861572]
[171.12232971 301.57955933]
[174.72500610 316.14050293]
[178.32768250 330.70141602]
[181.93034363 345.26235962]
[185.53302002 359.82327271]
[189.13569641 374.38421631]
[192.73837280 388.94515991]
[207.82426453 389.22491455]
[222.32344055 393.40057373]
[235.24732971 401.18746948]
[245.71475220 412.05462646]
[253.01202393 425.26116943]
[256.64160156 439.90658569]
[256.35601807 454.99237061]
[252.17474365 469.48992920]
[244.38287354 482.41082764]
[233.51165771 492.87405396]
[220.30232239 500.16619873]
[205.65548706 503.79013062]
[190.56982422 503.49871826]
[176.07386780 499.31185913]
[163.15600586 491.51501465]
[152.69697571 480.63973999]
[145.40989685 467.42758179]
[141.79162598 452.77935791]
[142.08886719 437.69381714]
[146.28132629 423.19946289]
[154.08317566 410.28460693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 250]
[2 249]
[3 248]
[4 247]
[5 246]
[6 245]
[7 244]
[8 243]
[9 242]
[12 236]
[13 235]
[14 234]
[16 231]
[17 230]
[18 229]
[19 228]
[29 40]
[30 39]
[31 38]
[32 37]
[42 226]
[43 225]
[44 224]
[45 223]
[46 222]
[47 221]
[48 220]
[49 219]
[50 218]
[51 217]
[52 216]
[54 213]
[55 212]
[56 211]
[57 196]
[58 195]
[59 194]
[60 193]
[61 192]
[62 191]
[63 190]
[65 78]
[66 77]
[67 76]
[68 75]
[85 184]
[86 183]
[87 182]
[88 181]
[89 180]
[90 179]
[91 178]
[92 177]
[100 155]
[101 154]
[102 153]
[103 152]
[104 151]
[105 150]
[106 149]
[107 148]
[108 121]
[109 120]
[110 119]
[111 118]
[112 117]
[124 141]
[125 140]
[126 139]
[127 138]
[129 136]
[130 135]
[159 170]
[160 169]
[161 168]
[202 210]
[203 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
