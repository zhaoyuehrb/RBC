%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUACGCCAUCAAGGGCCCCCAGUCCCGGGUGCCGCGGGGACAGUGUAGGGUCAUUAGCUGUUGAGCCGCCCCGGGCGGGCCCAAGCCUUUGGAUCUCAGGUGACCGGCACAGGCGGCCGCGGGGUCCGGAACUGCUUGUUCCGGCAGUGGAAGAGACGCGCCGGCGUUGGCCGCUGCUGCUAGCAGCUUGAACCCCAGGGUCGGGACCG\
) } def
/len { sequence length } bind def

/coor [
[174.60496521 215.70126343]
[179.27850342 209.82543945]
[174.28704834 195.68029785]
[169.29559326 181.53514099]
[164.30412292 167.38998413]
[159.31266785 153.24484253]
[154.12335205 147.98405457]
[154.35357666 138.85409546]
[149.57128906 124.63686371]
[137.04603577 138.72157288]
[120.98988342 147.38058472]
[103.53878021 149.92938232]
[86.86408234 146.46644592]
[72.90294647 137.81396484]
[63.13338852 125.37138367]
[58.42013931 110.90515900]
[43.46946335 112.12064362]
[28.51879311 113.33612061]
[13.56812000 114.55159760]
[-1.38255239 115.76708221]
[-16.33322525 116.98255920]
[-20.62399864 119.94981384]
[-25.16939354 120.88230133]
[-29.15206528 120.02355957]
[-31.96963501 117.90613556]
[-40.42857361 121.34933472]
[-47.18424988 118.35507202]
[-62.18058014 118.68690491]
[-77.17691040 119.01873779]
[-92.17324066 119.35057068]
[-107.16956329 119.68239594]
[-122.16589355 120.01422882]
[-130.67469788 123.33229828]
[-137.38548279 120.23872375]
[-152.38507080 120.34934235]
[-166.12780762 128.18820190]
[-178.91178894 120.54496765]
[-193.91139221 120.65558624]
[-202.19697571 131.27345276]
[-214.89945984 135.12487793]
[-227.31700134 131.01838684]
[-234.98699951 120.66571808]
[-249.98658752 120.55509949]
[-264.98617554 120.44448090]
[-279.98577881 120.33386230]
[-294.98538208 120.22324371]
[-309.98495483 120.11262512]
[-321.19812012 130.92477417]
[-336.40826416 130.59892273]
[-346.64691162 119.84224701]
[-357.72698975 131.11198425]
[-373.53121948 131.16252136]
[-384.68316650 119.96389771]
[-384.56661987 104.16003418]
[-373.25070190 93.12709808]
[-357.44897461 93.41072845]
[-346.53628540 104.84265900]
[-336.14010620 94.23816681]
[-320.92681885 94.13667297]
[-309.87432861 105.11302948]
[-294.87475586 105.22364807]
[-279.87515259 105.33426666]
[-264.87557983 105.44488525]
[-249.87597656 105.55550385]
[-234.87638855 105.66612244]
[-223.41152954 93.36087799]
[-206.25648499 93.15150452]
[-194.02200317 105.65599823]
[-179.02241516 105.54537964]
[-166.35253906 97.71443176]
[-152.49568176 105.34974670]
[-137.49609375 105.23912811]
[-122.49772644 105.01789856]
[-107.50139618 104.68606567]
[-92.50506592 104.35424042]
[-77.50874329 104.02240753]
[-62.51240921 103.69057465]
[-47.51608276 103.35874176]
[-32.52260590 102.91632843]
[-17.54870415 102.03189087]
[-2.59803224 100.81640625]
[12.35264015 99.60092926]
[27.30331230 98.38544464]
[42.25398636 97.16996765]
[57.20465851 95.95449066]
[58.07081223 85.51543427]
[61.52000046 75.28200531]
[67.49602509 65.90029907]
[75.77997589 57.99911499]
[85.99582672 52.14885712]
[97.62654877 48.82229233]
[110.03983307 48.35976791]
[122.52249146 50.94138336]
[134.32135010 56.56807327]
[136.74432373 41.76506042]
[139.16728210 26.96204376]
[141.59025574 12.15902996]
[144.01321411 -2.64398479]
[146.43618774 -17.44699860]
[148.85914612 -32.25001526]
[141.95129395 -49.32013321]
[153.58857727 -62.45646667]
[155.79295349 -77.29360199]
[157.99732971 -92.13074493]
[148.85717773 -104.74404144]
[151.30407715 -119.75960541]
[163.38525391 -128.39562988]
[165.58964539 -143.23275757]
[155.97779846 -155.77819824]
[158.13496399 -171.43458557]
[170.78132629 -180.91325378]
[186.41401672 -178.59066772]
[195.75845337 -165.84480286]
[193.27073669 -150.23753357]
[180.42677307 -141.02838135]
[178.22239685 -126.19124603]
[187.27104187 -114.41594696]
[185.24684143 -99.33757019]
[172.83447266 -89.92636871]
[170.63009644 -75.08922577]
[168.42572021 -60.25209045]
[175.37474060 -50.35186005]
[173.66070557 -37.97359467]
[163.66215515 -29.82704735]
[161.23919678 -15.02403355]
[158.81622314 -0.22101924]
[156.39326477 14.58199501]
[153.97030640 29.38500977]
[151.54733276 44.18802261]
[149.12437439 58.99103928]
[161.94564819 66.77658081]
[173.96279907 57.79949188]
[185.97996521 48.82240677]
[197.99711609 39.84532166]
[210.01426697 30.86823845]
[213.72717285 15.26074505]
[228.30529785 8.56316090]
[242.56556702 15.91329956]
[245.56869507 31.67276382]
[235.01097107 43.75224304]
[218.99134827 42.88539124]
[206.97419739 51.86247635]
[194.95704651 60.83956146]
[182.93989563 69.81664276]
[170.92274475 78.79373169]
[174.85842896 93.26820374]
[189.76673889 94.92411041]
[204.67506409 96.58002472]
[219.58337402 98.23593140]
[234.49169922 99.89184570]
[249.40000916 101.54775238]
[264.30834961 103.20366669]
[279.21664429 104.85957336]
[286.87524414 95.76896667]
[297.85842896 91.54662323]
[309.39682007 93.13328552]
[318.64038086 100.02030182]
[323.36233521 110.40435791]
[338.21533203 112.49925232]
[353.06832886 114.59415436]
[367.92132568 116.68905640]
[382.77432251 118.78395081]
[397.77163696 112.14975739]
[410.85430908 122.03791809]
[408.56399536 138.27635193]
[393.25677490 144.16033936]
[380.67941284 133.63694763]
[365.82641602 131.54203796]
[350.97341919 129.44714355]
[336.12042236 127.35224915]
[321.26745605 125.25734711]
[307.32977295 137.12736511]
[288.82467651 135.00216675]
[277.56072998 119.76789093]
[262.65243530 118.11198425]
[247.74411011 116.45606995]
[232.83578491 114.80016327]
[217.92747498 113.14424896]
[203.01914978 111.48834229]
[188.11082458 109.83243561]
[173.20251465 108.17652130]
[163.78851318 119.85456848]
[168.57081604 134.07179260]
[173.45782471 148.25337219]
[178.44927979 162.39852905]
[183.44073486 176.54368591]
[188.43220520 190.68882751]
[193.42366028 204.83398438]
[212.24082947 218.39694214]
[207.37773132 240.31513977]
[213.39782715 254.05407715]
[219.41792297 267.79302979]
[225.43803406 281.53195190]
[231.45812988 295.27090454]
[237.76763916 301.87387085]
[237.46403503 309.25714111]
[243.28085327 323.08337402]
[256.66607666 332.55795288]
[254.88426208 348.86001587]
[239.76837158 355.21939087]
[226.86833191 345.09411621]
[229.45462036 328.90017700]
[223.63780212 315.07394409]
[217.71919250 301.29098511]
[211.69909668 287.55206299]
[205.67898560 273.81311035]
[199.65888977 260.07418823]
[193.63879395 246.33523560]
[186.59022522 245.48701477]
[180.21163940 242.21797180]
[175.31486511 236.89117432]
[172.54125977 230.13471985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[3 187]
[4 186]
[5 185]
[6 184]
[8 183]
[9 182]
[16 85]
[17 84]
[18 83]
[19 82]
[20 81]
[21 80]
[25 79]
[27 78]
[28 77]
[29 76]
[30 75]
[31 74]
[32 73]
[34 72]
[35 71]
[37 69]
[38 68]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[50 57]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
[102 121]
[103 120]
[104 119]
[107 116]
[108 115]
[131 145]
[132 144]
[133 143]
[134 142]
[135 141]
[146 181]
[147 180]
[148 179]
[149 178]
[150 177]
[151 176]
[152 175]
[153 174]
[158 171]
[159 170]
[160 169]
[161 168]
[162 167]
[190 208]
[191 207]
[192 206]
[193 205]
[194 204]
[196 203]
[197 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
