%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGUGACCCGGAGGCCCUCGCCGCCCGCGGCGCCCCGAGCGCUUUGUGAGCAGAUGCGGAGCCGAGUGGAGGGCGCGAGCCAGAUGCGGGGCGACAGCUGACUUGCUGAGAGGAGGCGGGGAGGCGCGGAGCGCGCGUGUGGUCCUUGCGCCGCUGACUUCUCCACUGGUUCCUGGGCACCGAAAGAUAAACCUCUCAUA\
) } def
/len { sequence length } bind def

/coor [
[104.13179779 230.49694824]
[114.16108704 219.34288025]
[128.99484253 217.11585999]
[141.85763550 224.83351135]
[138.18127441 210.29100037]
[134.50491333 195.74850464]
[130.82855225 181.20599365]
[126.13838959 175.48799133]
[127.20967865 166.41000366]
[123.75880432 151.81234741]
[120.30793762 137.21469116]
[105.56584930 134.44502258]
[97.05223083 146.79486084]
[95.58988953 162.54833984]
[81.99592590 168.63548279]
[73.48229980 180.98530579]
[64.96868134 193.33512878]
[64.19889832 209.71620178]
[49.50542068 216.99864197]
[36.00364685 207.69090271]
[37.58303452 191.36798096]
[52.61885071 184.82151794]
[61.13247299 172.47167969]
[69.64609528 160.12185669]
[70.49948883 145.25172424]
[84.70240021 138.28123474]
[93.21602631 125.93140411]
[83.95470428 114.13191986]
[69.93579865 119.46768188]
[55.91690063 124.80345154]
[41.98225021 130.35551453]
[28.13518715 136.12257385]
[14.28812408 141.88961792]
[0.44106138 147.65666199]
[-13.40600109 153.42372131]
[-20.82161713 167.65003967]
[-36.59471893 170.58070374]
[-48.62553787 159.96754456]
[-47.68505478 143.95208740]
[-34.49472809 134.82000732]
[-19.17304993 139.57666016]
[-5.32598782 133.80960083]
[8.52107525 128.04255676]
[22.36813736 122.27550507]
[36.21519852 116.50846100]
[38.83215714 112.50643158]
[43.99382782 110.10936737]
[50.58113480 110.78454590]
[64.60003662 105.44878387]
[78.61893463 100.11301422]
[77.80804443 92.65698242]
[75.37536621 70.28887939]
[60.53718948 68.09150696]
[45.49443817 74.62203217]
[32.48033142 64.64379883]
[34.88266373 48.42156982]
[50.23012161 42.64337158]
[62.73455811 53.25332642]
[77.57273865 55.45069504]
[90.98493195 48.73408127]
[98.11339569 35.53616333]
[105.24185944 22.33824539]
[112.37032318 9.14032936]
[119.49878693 -4.05758810]
[126.62725067 -17.25550461]
[127.95368958 -26.29974556]
[133.96951294 -30.60125542]
[141.30137634 -43.68727493]
[148.63322449 -56.77330017]
[155.96507263 -69.85932159]
[163.29692078 -82.94534302]
[170.62876892 -96.03136444]
[177.96061707 -109.11738586]
[184.46887207 -122.63191986]
[190.12860107 -136.52319336]
[195.78833008 -150.41445923]
[201.44807434 -164.30574036]
[207.10780334 -178.19700623]
[212.76753235 -192.08828735]
[218.42726135 -205.97955322]
[224.08699036 -219.87083435]
[229.53106689 -233.84802246]
[234.75819397 -247.90779114]
[239.98533630 -261.96755981]
[237.54203796 -277.59896851]
[249.22949219 -286.83221436]
[254.45661926 -300.89196777]
[259.68374634 -314.95175171]
[264.91088867 -329.01150513]
[270.13800049 -343.07128906]
[265.48623657 -355.10589600]
[270.13415527 -366.71121216]
[281.08218384 -371.86526489]
[286.52627563 -385.84246826]
[280.41522217 -400.17053223]
[286.13540649 -414.26782227]
[299.83267212 -420.00546265]
[296.61740112 -438.13375854]
[310.72076416 -448.57241821]
[315.94790649 -462.63220215]
[321.17504883 -476.69195557]
[314.84298706 -490.92373657]
[320.34432983 -505.10787964]
[333.95117188 -511.05679321]
[339.17828369 -525.11657715]
[344.40542603 -539.17633057]
[349.63256836 -553.23608398]
[354.85968018 -567.29589844]
[360.08682251 -581.35565186]
[352.20455933 -594.86132812]
[354.89865112 -610.26513672]
[366.89700317 -620.29376221]
[382.53436279 -620.21203613]
[394.42727661 -610.05859375]
[396.96023560 -594.62750244]
[388.93725586 -581.20489502]
[374.14657593 -576.12854004]
[368.91946411 -562.06872559]
[363.69232178 -548.00897217]
[358.46517944 -533.94921875]
[353.23806763 -519.88940430]
[348.01092529 -505.82965088]
[354.42684937 -492.43670654]
[349.32608032 -478.10363770]
[335.23480225 -471.46484375]
[330.00765991 -457.40505981]
[324.78054810 -443.34530640]
[329.53100586 -432.21618652]
[325.28625488 -420.45742798]
[313.80987549 -414.56140137]
[320.01776123 -401.07073975]
[314.69580078 -386.81832886]
[300.50344849 -380.39837646]
[295.05938721 -366.42120361]
[298.65292358 -349.24685669]
[284.19778442 -337.84414673]
[278.97064209 -323.78439331]
[273.74353027 -309.72460938]
[268.51638794 -295.66485596]
[263.28924561 -281.60507202]
[266.10641479 -266.97930908]
[254.04510498 -256.74041748]
[248.81796265 -242.68066406]
[243.59083557 -228.62089539]
[244.73257446 -223.97749329]
[242.96496582 -218.56785583]
[237.97825623 -214.21110535]
[232.31852722 -200.31982422]
[226.65879822 -186.42855835]
[220.99906921 -172.53727722]
[215.33934021 -158.64601135]
[209.67961121 -144.75473022]
[204.01988220 -130.86346436]
[198.36015320 -116.97219086]
[211.78935242 -123.65473175]
[226.60108948 -121.28563690]
[237.27593994 -110.74772644]
[239.83605957 -95.96781158]
[233.32743835 -82.45344543]
[220.17546082 -75.24059296]
[205.28102112 -77.01702881]
[194.19435120 -87.12078094]
[191.04664612 -101.78553772]
[183.71479797 -88.69951630]
[176.38293457 -75.61349487]
[169.05108643 -62.52746964]
[161.71923828 -49.44144821]
[154.38739014 -36.35542679]
[147.05554199 -23.26940346]
[139.82516479 -10.12704182]
[132.69670105 3.07087541]
[125.56824493 16.26879311]
[118.43978119 29.46670914]
[111.31131744 42.66462708]
[104.18285370 55.86254120]
[143.57284546 83.90832520]
[134.90559387 133.76382446]
[138.35646057 148.36146545]
[141.80732727 162.95912170]
[145.37104797 177.52963257]
[149.04740906 192.07214355]
[152.72377014 206.61463928]
[156.40013123 221.15715027]
[160.85841370 235.47929382]
[166.08554077 249.53906250]
[178.14688110 259.77795410]
[175.32971191 274.40371704]
[180.55683899 288.46347046]
[195.02853394 294.81527710]
[200.69226074 309.56985474]
[194.18780518 323.97360229]
[179.37416077 329.48101807]
[165.03999329 322.82464600]
[159.68951416 307.95358276]
[166.49707031 293.69061279]
[161.26994324 279.63082886]
[149.58248901 270.39758301]
[152.02577209 254.76618958]
[146.79864502 240.70642090]
[140.58911133 254.36077881]
[127.11228943 260.94677734]
[112.52410889 257.45605469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 183]
[5 182]
[6 181]
[7 180]
[9 179]
[10 178]
[11 177]
[12 27]
[13 26]
[15 24]
[16 23]
[17 22]
[28 50]
[29 49]
[30 48]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[52 59]
[53 58]
[60 175]
[61 174]
[62 173]
[63 172]
[64 171]
[65 170]
[67 169]
[68 168]
[69 167]
[70 166]
[71 165]
[72 164]
[73 163]
[74 154]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[82 144]
[83 143]
[84 142]
[86 140]
[87 139]
[88 138]
[89 137]
[90 136]
[93 134]
[94 133]
[97 130]
[99 127]
[100 126]
[101 125]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[184 199]
[185 198]
[187 196]
[188 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
