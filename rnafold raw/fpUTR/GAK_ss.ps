%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGAGGCCGCGGCGGAGGGGACGGGGCUAGGCCGGGUCGCCGCCUGACGCGACGCGUCCUCACGGGCGCCUACGUCACGGCGUCGAGGCGGAAGAUGGUGCACCUCCGGGCCGGCGGUUGCUGAGCUGACCCGGACGGCGAGGGAGCGGGAGCCCGAGCCCGACCACUCCGGCUGCCGCGGGGUGCGGCGCAGCCACCGCC\
) } def
/len { sequence length } bind def

/coor [
[114.02990723 136.24040222]
[103.53125000 146.95387268]
[88.61553192 148.54176331]
[76.09667969 140.27870178]
[71.69364166 125.93947601]
[77.41786957 112.07465363]
[90.65545654 105.01791382]
[76.29299164 100.69128418]
[61.93053436 96.36465454]
[47.56807327 92.03802490]
[43.36744690 93.18631744]
[39.41813660 92.95779419]
[36.12295151 91.60127258]
[33.76216507 89.47103119]
[32.46970367 86.97756195]
[18.40083504 81.77497101]
[4.33196688 76.57238007]
[-9.73690128 71.36978912]
[-23.80576897 66.16719818]
[-37.87463760 60.96460724]
[-51.98314667 55.87050247]
[-67.57037354 58.58141708]
[-77.00262451 47.05397797]
[-91.14994049 42.06865692]
[-106.73716736 44.77957153]
[-116.16941833 33.25213242]
[-126.35504150 44.50063705]
[-140.03439331 50.97506332]
[-155.10964966 51.71696854]
[-169.28202820 46.64439392]
[-180.40240479 36.55963898]
[-186.79710388 23.02253151]
[-187.51983643 8.10921669]
[-201.66714478 3.12389493]
[-215.81446838 -1.86142695]
[-229.93557739 4.71367168]
[-244.21194458 -0.54368770]
[-250.39328003 -14.04653072]
[-265.98049927 -11.33561516]
[-275.41275024 -22.86305428]
[-289.56005859 -27.84837723]
[-303.70739746 -32.83369827]
[-317.85470581 -37.81901932]
[-332.00201416 -42.80434036]
[-338.56915283 -41.96565628]
[-343.78814697 -44.23263550]
[-346.50418091 -48.16716385]
[-360.49127197 -53.58579254]
[-374.47836304 -59.00441742]
[-388.46545410 -64.42304230]
[-402.45251465 -69.84166718]
[-413.45040894 -61.52755737]
[-427.01287842 -59.74892807]
[-439.58212280 -64.86446381]
[-447.91403198 -75.43834686]
[-449.91543579 -88.64133453]
[-463.81741333 -94.27470398]
[-477.71942139 -99.90808105]
[-491.62139893 -105.54145813]
[-505.52337646 -111.17482758]
[-519.42535400 -116.80820465]
[-535.58361816 -114.00789642]
[-545.87872314 -126.77283478]
[-539.71984863 -141.97154236]
[-523.44281006 -143.96888733]
[-513.79199219 -130.71018982]
[-499.88998413 -125.07681274]
[-485.98800659 -119.44343567]
[-472.08602905 -113.81005859]
[-458.18405151 -108.17668915]
[-444.28207397 -102.54331207]
[-430.63989258 -111.66935730]
[-414.08029175 -110.85958862]
[-401.13671875 -100.23524475]
[-397.03390503 -83.82875061]
[-383.04681396 -78.41012573]
[-369.05972290 -72.99150085]
[-355.07266235 -67.57287598]
[-341.08557129 -62.15424728]
[-327.01669312 -56.95166016]
[-312.86938477 -51.96633530]
[-298.72207642 -46.98101425]
[-284.57473755 -41.99569321]
[-270.42742920 -37.01037216]
[-255.85211182 -40.07786942]
[-245.40795898 -28.19384766]
[-232.12695312 -34.83842850]
[-217.70854187 -29.98413658]
[-210.82914734 -16.00874329]
[-196.68182373 -11.02342129]
[-182.53450012 -6.03809929]
[-172.62193298 -17.20367622]
[-159.15321350 -23.74118614]
[-144.16717529 -24.62639809]
[-129.94563293 -19.69333649]
[-118.66590881 -9.66429996]
[-112.06755829 3.95571661]
[-111.18409729 19.10481453]
[-96.60878754 16.03731537]
[-86.16461945 27.92133904]
[-72.01730347 32.90666199]
[-57.44198990 29.83916092]
[-46.99782562 41.72318268]
[-39.64031601 40.98088837]
[-32.67204666 46.89574051]
[-18.60317993 52.09833145]
[-4.53431082 57.30091858]
[9.53455734 62.50350952]
[23.60342598 67.70610046]
[37.67229462 72.90869141]
[51.89470291 77.67556000]
[66.25716400 82.00218964]
[80.61962128 86.32882690]
[94.98208618 90.65545654]
[109.55677795 94.20204163]
[124.30137634 96.95828247]
[139.04597473 99.71452332]
[153.79057312 102.47077179]
[168.53517151 105.22701263]
[183.27975464 107.98325348]
[198.26667786 102.91347504]
[209.35552979 112.85765839]
[224.10012817 115.61390686]
[238.84471130 118.37014771]
[253.58930969 121.12638855]
[268.57623291 116.05660248]
[279.66506958 126.00079346]
[294.40966797 128.75703430]
[309.15426636 131.51327515]
[323.89886475 134.26951599]
[338.66424561 136.91215515]
[353.44955444 139.44100952]
[368.23483276 141.96986389]
[383.02014160 144.49873352]
[397.92721558 139.19876099]
[409.16787720 148.97100830]
[418.15997314 147.33273315]
[424.16064453 151.65432739]
[438.90521240 154.41056824]
[453.64981079 157.16680908]
[468.39440918 159.92306519]
[483.15979004 162.56568909]
[495.97027588 153.70401001]
[510.92864990 156.47926331]
[519.29797363 168.74671936]
[534.08325195 171.27557373]
[548.86853027 173.80442810]
[563.65380859 176.33328247]
[578.51000977 178.40563965]
[593.42291260 180.01950073]
[608.33581543 181.63336182]
[623.24877930 183.24723816]
[633.56701660 171.65785217]
[648.73382568 168.37963867]
[662.91735840 174.67314148]
[670.66363525 188.11839294]
[668.99414062 203.54539490]
[658.55078125 215.02215576]
[643.34930420 218.13563538]
[629.23492432 211.68864441]
[621.63488770 198.16015625]
[606.72198486 196.54629517]
[591.80902100 194.93243408]
[576.89611816 193.31855774]
[574.62774658 194.97453308]
[571.56488037 195.82914734]
[568.01049805 195.57466125]
[564.37335205 194.01887512]
[561.12500000 191.11857605]
[546.33966064 188.58972168]
[531.55438232 186.06086731]
[516.76910400 183.53201294]
[504.79840088 192.32052612]
[489.76800537 189.96652222]
[480.63095093 177.35098267]
[473.50387573 179.32305908]
[465.63818359 174.66764832]
[450.89358521 171.91140747]
[436.14898682 169.15516663]
[421.40438843 166.39892578]
[406.63900757 163.75630188]
[392.78945923 169.23715210]
[380.49127197 159.28402710]
[365.70596313 156.75515747]
[350.92068481 154.22630310]
[336.13540649 151.69744873]
[329.00833130 153.66952515]
[321.14263916 149.01411438]
[306.39804077 146.25787354]
[291.65344238 143.50163269]
[276.90884399 140.74539185]
[262.97653198 146.01231384]
[250.83306885 135.87098694]
[236.08847046 133.11474609]
[221.34387207 130.35850525]
[206.59928894 127.60225677]
[192.66699219 132.86918640]
[180.52351379 122.72785187]
[165.77891541 119.97161102]
[151.03433228 117.21537018]
[136.28973389 114.45912170]
[121.54513550 111.70288086]
[106.80053711 108.94664001]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 114]
[8 113]
[9 112]
[10 111]
[15 110]
[16 109]
[17 108]
[18 107]
[19 106]
[20 105]
[21 103]
[23 101]
[24 100]
[26 98]
[33 91]
[34 90]
[35 89]
[38 86]
[40 84]
[41 83]
[42 82]
[43 81]
[44 80]
[47 79]
[48 78]
[49 77]
[50 76]
[51 75]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[115 203]
[116 202]
[117 201]
[118 200]
[119 199]
[120 198]
[122 196]
[123 195]
[124 194]
[125 193]
[127 191]
[128 190]
[129 189]
[130 188]
[131 186]
[132 185]
[133 184]
[134 183]
[136 181]
[138 180]
[139 179]
[140 178]
[141 177]
[142 175]
[145 172]
[146 171]
[147 170]
[148 169]
[149 164]
[150 163]
[151 162]
[152 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
