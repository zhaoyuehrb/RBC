%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGCCGGCGCGGCCGCCAGCGCGGUGUAGGGGGCAGGCGCGGAUCCCGCCACCGCCGCGCGCUCGGCCCGCCGACUCCCGGCGCCGCCGCCGCCACUGCCGUCGCCGCCGCCGCCUGCCGGGACUGGAGCGCGCCGUCCGCCGCGGACAAGACCCUGGCCUCAGGCCGGAGCAGCCCCAUC\
) } def
/len { sequence length } bind def

/coor [
[100.32474518 133.62931824]
[93.72076416 133.03948975]
[87.36083984 131.16549683]
[81.49216461 128.08018494]
[76.34284210 123.90346527]
[72.11301422 118.79768372]
[68.96707916 112.96128082]
[54.18518829 115.50993347]
[39.40329742 118.05858612]
[24.62140465 120.60724640]
[9.83951187 123.15589905]
[1.89191687 127.70788574]
[-5.21634293 125.61962891]
[-20.03959465 127.91554260]
[-34.86284637 130.21145630]
[-49.68609619 132.50737000]
[-64.50934601 134.80328369]
[-71.66645813 148.44447327]
[-85.32393646 155.17697144]
[-100.15157318 152.60691833]
[-110.49877167 141.92639160]
[-125.32202148 144.22230530]
[-140.14527893 146.51821899]
[-154.96852112 148.81413269]
[-169.79177856 151.11004639]
[-184.61503601 153.40596008]
[-199.43827820 155.70187378]
[-214.26153564 157.99778748]
[-223.59594727 170.46800232]
[-238.66152954 172.58522034]
[-250.49246216 163.60943604]
[-265.31570435 165.90534973]
[-280.11883545 168.32772827]
[-294.90072632 170.87638855]
[-309.68261719 173.42503357]
[-317.63021851 177.97702026]
[-324.73846436 175.88876343]
[-331.71020508 189.75148010]
[-345.51416016 196.83882141]
[-360.84240723 194.42558289]
[-371.80099487 183.43971252]
[-374.17602539 168.10546875]
[-367.05432129 154.31921387]
[-353.17431641 147.38201904]
[-337.87310791 149.96139526]
[-327.03439331 161.06552124]
[-312.23126221 158.64314270]
[-297.44937134 156.09448242]
[-282.66748047 153.54583740]
[-276.59561157 149.30079651]
[-267.61163330 151.08210754]
[-252.78837585 148.78619385]
[-244.22709656 136.65193176]
[-229.22691345 134.11239624]
[-216.55744934 143.17453003]
[-201.73419189 140.87861633]
[-186.91093445 138.58270264]
[-172.08769226 136.28678894]
[-157.26443481 133.99087524]
[-142.44119263 131.69496155]
[-127.61793518 129.39904785]
[-112.79468536 127.10314178]
[-106.16331482 113.79288483]
[-92.80791473 106.85766602]
[-77.75367737 109.14313507]
[-66.80525970 119.98003387]
[-51.98200989 117.68412018]
[-37.15876007 115.38820648]
[-22.33550644 113.09229279]
[-7.51225567 110.79637909]
[7.29085588 108.37400818]
[22.07274818 105.82535553]
[36.85464096 103.27669525]
[51.63653564 100.72804260]
[66.41842651 98.17938232]
[72.10861969 81.20883942]
[85.69933319 69.56108093]
[103.34085846 66.53546143]
[108.12201691 52.31784821]
[112.90316772 38.10023117]
[117.68431854 23.88261604]
[122.46547699 9.66500187]
[127.24662781 -4.55261326]
[132.02778625 -18.77022743]
[136.56549072 -33.06739807]
[140.85845947 -47.43996048]
[137.39437866 -62.87727356]
[148.45054626 -72.85778046]
[152.74349976 -87.23033905]
[149.27941895 -102.66765594]
[160.33558655 -112.64815521]
[164.62855530 -127.02072144]
[161.16447449 -142.45803833]
[172.22064209 -152.43853760]
[176.51359558 -166.81109619]
[173.04951477 -182.24841309]
[184.10568237 -192.22891235]
[188.39863586 -206.60148621]
[184.08229065 -222.42239380]
[195.81605530 -233.87886047]
[211.52923584 -229.18547058]
[215.05746460 -213.17036438]
[202.77119446 -202.30851746]
[198.47824097 -187.93595886]
[202.24938965 -173.52665710]
[190.88615417 -162.51814270]
[186.59320068 -148.14558411]
[190.36433411 -133.73628235]
[179.00111389 -122.72776031]
[174.70814514 -108.35520172]
[178.47929382 -93.94590759]
[167.11605835 -82.93737793]
[162.82310486 -68.56481934]
[166.59425354 -54.15552521]
[155.23101807 -43.14699936]
[150.93806458 -28.77443886]
[152.39111328 -24.20218658]
[150.97039795 -18.66855240]
[146.24539185 -13.98907471]
[141.46424866 0.22854006]
[136.68309021 14.44615459]
[131.90193176 28.66377068]
[127.12078094 42.88138580]
[122.33963013 57.09899902]
[117.55847931 71.31661224]
[131.59176636 88.46759033]
[131.90811157 110.62586212]
[144.72441101 118.41962433]
[157.54069519 126.21337891]
[173.35200500 126.77282715]
[180.20625305 139.99661255]
[193.02255249 147.79037476]
[205.90490723 155.47444153]
[218.85240173 163.04824829]
[234.67095947 163.33767700]
[241.74996948 176.44250488]
[254.69746399 184.01631165]
[267.64495850 191.59011841]
[283.46350098 191.87954712]
[290.54254150 204.98437500]
[303.49002075 212.55819702]
[316.68853760 219.68554688]
[330.12268066 226.35812378]
[343.55685425 233.03071594]
[356.99099731 239.70330811]
[372.79244995 238.91255188]
[380.74926758 251.50375366]
[394.18341064 258.17633057]
[409.08160400 252.90188599]
[423.30963135 259.78222656]
[428.42626953 274.73532104]
[421.39590454 288.88980103]
[406.38952637 293.84808350]
[392.31015015 286.66845703]
[387.51083374 271.61050415]
[374.07669067 264.93789673]
[359.23614502 266.20593262]
[350.31842041 253.13746643]
[336.88424683 246.46487427]
[323.45010376 239.79228210]
[310.01596069 233.11970520]
[307.30093384 233.90357971]
[304.10836792 233.64614868]
[300.83816528 232.15875244]
[297.95141602 229.40255737]
[295.91619873 225.50567627]
[282.96871948 217.93186951]
[268.07626343 218.18417358]
[260.07113647 204.53761292]
[247.12365723 196.96380615]
[234.17616272 189.38998413]
[219.28369141 189.64230347]
[211.27857971 175.99574280]
[198.33110046 168.42192078]
[190.95234680 167.75688171]
[185.22879028 160.60665894]
[172.41250610 152.81291199]
[157.51789856 152.81091309]
[149.74693298 139.02967834]
[136.93064880 131.23591614]
[124.11435699 123.44215393]
[119.04665375 127.71753693]
[113.23865509 130.91560364]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 75]
[8 74]
[9 73]
[10 72]
[11 71]
[13 70]
[14 69]
[15 68]
[16 67]
[17 66]
[21 62]
[22 61]
[23 60]
[24 59]
[25 58]
[26 57]
[27 56]
[28 55]
[31 52]
[32 51]
[33 49]
[34 48]
[35 47]
[37 46]
[78 125]
[79 124]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[85 116]
[86 115]
[88 113]
[89 112]
[91 110]
[92 109]
[94 107]
[95 106]
[97 104]
[98 103]
[127 181]
[128 180]
[129 179]
[131 177]
[132 176]
[133 174]
[134 173]
[136 171]
[137 170]
[138 169]
[140 167]
[141 166]
[142 161]
[143 160]
[144 159]
[145 158]
[147 156]
[148 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
