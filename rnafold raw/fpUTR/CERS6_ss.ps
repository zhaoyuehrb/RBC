%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCAGAGGGAGGAGAGAACCGGGGCUCGCCGCGAGCCUUCGAGAGCAGCGGCCGCGGAGGAGGCGGCGGCGGCGGGCGGGAGCAGCGGCGGCGGCGGCACAGGCUCGGGGCCAGCCGGGCGCGCAUCCCCGGGCGCCCUGCGCGGUGGAGAGCUUGGCGGGCUGCGGGUGCCGCAGGACAGGAGUGGACAAAGCAAG\
) } def
/len { sequence length } bind def

/coor [
[78.25916290 170.76908875]
[77.55608368 155.78558350]
[62.93965149 152.41511536]
[55.74624252 165.57774353]
[48.55282974 178.74038696]
[41.35942078 191.90301514]
[46.61314774 204.31040955]
[43.80017090 217.28826904]
[34.16715622 226.14329529]
[21.38486099 227.80566406]
[13.98660851 240.85426331]
[21.83883286 254.05419922]
[22.02304649 269.41198730]
[14.48969841 282.79644775]
[1.26522005 290.60726929]
[-14.09306908 290.74334717]
[-27.45386696 283.16809082]
[-35.22318649 269.91918945]
[-35.31111908 254.56054688]
[-27.69401169 241.22355652]
[-14.42082787 233.49580383]
[0.93801248 233.45600891]
[8.33626556 220.40740967]
[3.16694975 204.40759277]
[11.32604122 189.32066345]
[28.19679070 184.70959473]
[35.39020157 171.54696655]
[42.58361053 158.38433838]
[49.77702332 145.22171021]
[44.50012970 131.18054199]
[30.41815186 126.01353455]
[16.33617401 120.84653473]
[2.25419784 115.67953491]
[-11.82777977 110.51252747]
[-25.90975761 105.34552765]
[-37.92549133 110.04887390]
[-49.55121994 105.44934082]
[-54.75106049 94.52181244]
[-68.75055695 89.13534546]
[-84.40870667 91.40096283]
[-93.50862885 79.60941315]
[-107.50812531 74.22295380]
[-121.50762939 68.83648682]
[-135.50712585 63.45002747]
[-148.50422668 71.71934509]
[-163.70079041 70.76113892]
[-175.28221130 61.15204239]
[-178.94085693 46.73843002]
[-192.94035339 41.35196686]
[-208.59849548 43.61758423]
[-217.69841003 31.82603073]
[-231.69792175 26.43956947]
[-247.35606384 28.70518494]
[-256.45599365 16.91363144]
[-270.45547485 11.52717018]
[-284.45498657 6.14070892]
[-298.45449829 0.75424773]
[-312.45397949 -4.63221359]
[-326.04833984 3.09615421]
[-341.42050171 0.22731413]
[-351.31225586 -11.88415527]
[-351.05294800 -27.51958847]
[-340.76507568 -39.29641342]
[-325.30624390 -41.65397263]
[-311.97561646 -33.47909546]
[-307.06753540 -18.63171577]
[-293.06802368 -13.24525356]
[-279.06851196 -7.85879230]
[-265.06903076 -2.47233081]
[-251.06951904 2.91413069]
[-236.41271973 0.26323819]
[-226.31146240 12.44006729]
[-212.31195068 17.82652855]
[-197.65515137 15.17563629]
[-187.55389404 27.35246658]
[-173.55438232 32.73892593]
[-161.17799377 24.49497032]
[-146.14254761 25.12700462]
[-134.22294617 34.60203934]
[-130.12066650 49.45052719]
[-116.12117004 54.83698654]
[-102.12166595 60.22344971]
[-88.12216187 65.60990906]
[-73.46535492 62.95901871]
[-63.36409760 75.13584900]
[-49.36459732 80.52230835]
[-32.20607376 76.85742950]
[-20.74275398 91.26354980]
[-6.66077662 96.43054962]
[7.42120028 101.59755707]
[21.50317764 106.76455688]
[35.58515549 111.93155670]
[49.66713333 117.09856415]
[55.88222885 82.96412659]
[79.90972137 63.76990509]
[106.70502472 65.07546997]
[122.99553680 81.20832062]
[136.63114929 74.95771790]
[150.26676941 68.70710754]
[163.90237427 62.45650101]
[177.53797913 56.20589447]
[179.93283081 52.56196594]
[183.05114746 50.11991501]
[186.42463684 48.95959091]
[189.60737610 48.99999237]
[192.22644043 50.02062988]
[206.22593689 44.63416672]
[220.22544861 39.24770737]
[234.22494507 33.86124420]
[248.22444153 28.47478294]
[258.32571411 16.29795456]
[272.98251343 18.94884682]
[286.98202515 13.56238556]
[300.98150635 8.17592430]
[314.98101807 2.78946280]
[325.08227539 -9.38736629]
[339.73907471 -6.73647404]
[353.73858643 -12.12293530]
[367.73809814 -17.50939751]
[381.73757935 -22.89585876]
[395.73709106 -28.28232002]
[409.73660278 -33.66878128]
[423.73608398 -39.05524063]
[425.50283813 -49.59107208]
[431.44189453 -58.37361526]
[440.42391968 -63.85277176]
[450.79025269 -65.09531403]
[460.65881348 -61.94324875]
[468.26593018 -55.03036499]
[482.50253296 -59.75471878]
[496.73910522 -64.47907257]
[510.93835449 -69.31453705]
[525.09936523 -74.26081848]
[539.26037598 -79.20709991]
[549.73730469 -91.06227112]
[564.30407715 -87.95458221]
[578.46508789 -92.90086365]
[586.70104980 -106.66851807]
[602.61871338 -108.67049408]
[614.00738525 -97.37104034]
[612.13067627 -81.43813324]
[598.42822266 -73.09413910]
[583.41137695 -78.73984528]
[569.25036621 -73.79356384]
[559.78631592 -62.29218674]
[544.20666504 -65.04608917]
[530.04565430 -60.09980392]
[515.88464355 -55.15352249]
[510.60229492 -49.97579575]
[501.46347046 -50.24248123]
[487.22686768 -45.51812744]
[472.99029541 -40.79377365]
[465.56713867 -22.78971100]
[447.01477051 -15.93176651]
[429.12255859 -25.05574036]
[415.12304688 -19.66927910]
[401.12353516 -14.28281879]
[387.12405396 -8.89635658]
[373.12454224 -3.50989556]
[359.12503052 1.87656569]
[345.12554932 7.26302719]
[336.02563477 19.05458069]
[320.36749268 16.78896332]
[306.36798096 22.17542458]
[292.36846924 27.56188583]
[278.36898804 32.94834900]
[269.26904297 44.73990250]
[253.61090088 42.47428513]
[239.61140442 47.86074448]
[225.61190796 53.24720764]
[211.61241150 58.63367081]
[197.61289978 64.02013397]
[183.78858948 69.84150696]
[170.15298462 76.09211731]
[156.51736450 82.34272003]
[142.88175964 88.59333038]
[129.24613953 94.84393311]
[139.03137207 113.88493347]
[134.76025391 140.21794128]
[149.58648682 144.99505615]
[156.48301697 158.55575562]
[151.83740234 172.66085815]
[158.82420349 185.93431091]
[172.97622681 194.21998596]
[172.60604858 210.61495972]
[158.09449768 218.25347900]
[144.36981201 209.27767944]
[145.55075073 192.92111206]
[138.56394958 179.64765930]
[124.30663300 175.49259949]
[117.03192902 162.13096619]
[121.48680878 147.20475769]
[114.25000763 149.17419434]
[110.42466736 163.67820740]
[99.77639771 153.11305237]
[92.53959656 155.08248901]
[93.24268341 170.06600952]
[102.54949951 183.56842041]
[95.26605988 198.26139832]
[78.88493347 199.03005981]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 29]
[4 28]
[5 27]
[6 26]
[10 23]
[11 22]
[30 93]
[31 92]
[32 91]
[33 90]
[34 89]
[35 88]
[38 86]
[39 85]
[41 83]
[42 82]
[43 81]
[44 80]
[48 76]
[49 75]
[51 73]
[52 72]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[97 177]
[98 176]
[99 175]
[100 174]
[101 173]
[106 172]
[107 171]
[108 170]
[109 169]
[110 168]
[112 166]
[113 165]
[114 164]
[115 163]
[117 161]
[118 160]
[119 159]
[120 158]
[121 157]
[122 156]
[123 155]
[129 152]
[130 151]
[131 150]
[132 148]
[133 147]
[134 146]
[136 144]
[137 143]
[179 192]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
