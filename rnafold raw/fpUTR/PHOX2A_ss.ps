%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGCGUUGCACCCGGGCUGAGUGCGGCCGCGACGGGGCGGGCGGACUCUCGGGCGCUCAGAGCUGGCCUCGGGUCCUCGGAGCCUGGCGCUCGAACCUCCCUUCCGACCUCCACCCGGACCCCGACCCCGACCCGGCCUGGCCCGGCCCCCGCCCCCGCCCCCCGGGCCG\
) } def
/len { sequence length } bind def

/coor [
[80.52909088 136.84419250]
[87.78401947 123.71546173]
[80.41994476 122.29405212]
[71.08281708 134.03364563]
[61.74568558 145.77323914]
[52.40856171 157.51283264]
[43.07143402 169.25242615]
[33.84128189 181.07630920]
[24.71886635 192.98352051]
[15.59645176 204.89073181]
[6.47403765 216.79792786]
[-2.64837694 228.70513916]
[-11.77079105 240.61235046]
[-14.02154255 256.27264404]
[-27.90374756 261.67019653]
[-27.23157692 277.69915771]
[-39.43842697 288.10937500]
[-55.16024399 284.91500854]
[-62.33659744 270.56649780]
[-55.46240234 256.07080078]
[-39.81095505 252.54777527]
[-38.21269989 237.73916626]
[-23.67799759 231.48992920]
[-14.55558300 219.58271790]
[-5.43316841 207.67552185]
[3.68924618 195.76831055]
[12.81166077 183.86109924]
[21.93407440 171.95390320]
[23.51154327 164.70596313]
[31.33183861 159.91529846]
[40.66896820 148.17570496]
[50.00609589 136.43611145]
[59.34321976 124.69651794]
[68.68035126 112.95692444]
[77.92242432 85.75202942]
[99.39701080 81.35189819]
[104.97960663 67.42945099]
[110.56220245 53.50699997]
[116.14480591 39.58455276]
[121.72740173 25.66210365]
[127.31000519 11.73965454]
[132.89260864 -2.18279481]
[138.47520447 -16.10524368]
[138.76937866 -25.27153969]
[144.28764343 -30.22832108]
[150.12213135 -44.04710388]
[149.41218567 -48.41323853]
[150.08229065 -52.37114334]
[151.82913208 -55.53214264]
[154.25331116 -57.64844513]
[156.91442871 -58.63241577]
[163.73641968 -71.99132538]
[170.55841064 -85.35023499]
[177.38040161 -98.70914459]
[184.20237732 -112.06805420]
[191.02436829 -125.42696381]
[190.74671936 -130.71105957]
[192.38127136 -135.11891174]
[195.26535034 -138.06404114]
[198.59896851 -139.31240845]
[206.13824463 -152.28002930]
[213.67752075 -165.24765015]
[215.29557800 -174.27479553]
[221.47328186 -178.38050842]
[229.24679565 -191.20909119]
[237.02029419 -204.03767395]
[244.79380798 -216.86625671]
[252.56732178 -229.69483948]
[250.25784302 -242.40829468]
[257.02532959 -252.94192505]
[268.77081299 -255.92724609]
[276.77597046 -268.61254883]
[284.78115845 -281.29785156]
[292.78634644 -293.98318481]
[300.79150391 -306.66848755]
[297.77371216 -317.16525269]
[300.98458862 -327.37417603]
[309.12591553 -333.97640991]
[319.33990479 -334.96673584]
[327.80041504 -347.35299683]
[336.26092529 -359.73928833]
[344.72143555 -372.12554932]
[346.11611938 -387.88516235]
[359.68383789 -394.03060913]
[368.03155518 -406.49319458]
[376.26574707 -419.03106689]
[384.15542603 -431.78851318]
[391.69470215 -444.75613403]
[399.23397827 -457.72378540]
[399.48123169 -473.54302979]
[412.56716919 -480.65695190]
[412.81445312 -496.47622681]
[425.90036011 -503.59014893]
[433.43963623 -516.55780029]
[440.97894287 -529.52539062]
[432.78390503 -542.45214844]
[431.54647827 -557.70751953]
[437.55099487 -571.78601074]
[449.41769409 -581.45251465]
[464.41964722 -584.48565674]
[479.10952759 -580.18847656]
[490.11172485 -569.54846191]
[494.89801025 -555.01055908]
[492.36853027 -539.91552734]
[483.10452271 -527.73205566]
[469.23480225 -521.25982666]
[453.94656372 -521.98614502]
[446.40725708 -509.01849365]
[438.86798096 -496.05087280]
[439.15997314 -481.15911865]
[425.53479004 -473.11767578]
[425.82678223 -458.22595215]
[412.20159912 -450.18447876]
[404.66232300 -437.21685791]
[397.12304688 -424.24923706]
[397.68746948 -420.73458862]
[396.55493164 -416.77111816]
[393.53305054 -413.16986084]
[388.80358887 -410.79684448]
[380.56939697 -398.25900269]
[379.52209473 -390.91567993]
[372.07009888 -385.57009888]
[371.28057861 -370.69644165]
[357.10772705 -363.66503906]
[348.64721680 -351.27874756]
[340.18667603 -338.89248657]
[331.72616577 -326.50622559]
[331.71691895 -307.19079590]
[313.47683716 -298.66329956]
[305.47164917 -285.97799683]
[297.46646118 -273.29269409]
[289.46130371 -260.60736084]
[281.45611572 -247.92205811]
[281.72833252 -230.39041138]
[265.39590454 -221.92132568]
[257.62240601 -209.09274292]
[249.84887695 -196.26416016]
[242.07537842 -183.43557739]
[234.30186462 -170.60699463]
[226.64514160 -157.70837402]
[219.10586548 -144.74075317]
[211.56658936 -131.77311707]
[204.38328552 -118.60497284]
[197.56129456 -105.24606323]
[190.73930359 -91.88715363]
[183.91731262 -78.52824402]
[177.09532166 -65.16933441]
[170.27333069 -51.81042862]
[163.94091797 -38.21261215]
[158.10643005 -24.39383125]
[152.39764404 -10.52264500]
[146.81504822 3.39980435]
[141.23245239 17.32225418]
[135.64985657 31.24470329]
[130.06726074 45.16715240]
[124.48465729 59.08959961]
[118.90205383 73.01204681]
[113.31945801 86.93450165]
[126.27590179 99.97157288]
[124.24752808 123.68247986]
[128.54473877 138.05377197]
[132.84196472 152.42506409]
[137.13917542 166.79634094]
[147.46969604 180.23944092]
[137.41174316 193.88764954]
[121.51258850 188.00097656]
[122.76789093 171.09356689]
[118.47067261 156.72227478]
[114.17345428 142.35098267]
[109.87624359 127.97969818]
[102.51216888 126.55828857]
[104.35970306 141.44407654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 34]
[4 33]
[5 32]
[6 31]
[7 30]
[8 28]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[15 21]
[36 158]
[37 157]
[38 156]
[39 155]
[40 154]
[41 153]
[42 152]
[43 151]
[45 150]
[46 149]
[51 148]
[52 147]
[53 146]
[54 145]
[55 144]
[56 143]
[60 142]
[61 141]
[62 140]
[64 139]
[65 138]
[66 137]
[67 136]
[68 135]
[71 133]
[72 132]
[73 131]
[74 130]
[75 129]
[79 127]
[80 126]
[81 125]
[82 124]
[84 122]
[85 120]
[86 119]
[87 115]
[88 114]
[89 113]
[91 111]
[93 109]
[94 108]
[95 107]
[160 170]
[161 169]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
