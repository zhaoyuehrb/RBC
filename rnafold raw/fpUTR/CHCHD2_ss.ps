%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUUGACCGCGAAGGACGAGGCGUCCCCGUGACGUCCUGCUCUUCCAAUGAACUUCAGGCCUGCGGAGACGACGGAGAACGGAAGUUCUCUGCCUGUGUGCUGGUUGGUUGCGCGUUGAGGCCAGCCCCGCCUCCCAUCUUCCGGUCUCCUCAGAAGUCGCUUAGCUCUUCGGUGGUUGUCCCACGUCCGGAGGCCUAGCCGUCGCUUACCUAGG\
) } def
/len { sequence length } bind def

/coor [
[314.54953003 388.55374146]
[312.18167114 373.74179077]
[309.81378174 358.92987061]
[307.44592285 344.11795044]
[280.62603760 334.76162720]
[266.88644409 311.19995117]
[271.55386353 285.47473145]
[259.86502075 276.07415771]
[248.17614746 266.67361450]
[236.48727417 257.27307129]
[224.79841614 247.87249756]
[217.61991882 246.13101196]
[213.01011658 238.25129700]
[201.45793152 228.68327332]
[189.90574646 219.11524963]
[178.35356140 209.54722595]
[166.80137634 199.97920227]
[150.13726807 202.26504517]
[136.71318054 191.57897949]
[135.14323425 174.15365601]
[123.45436859 164.75309753]
[111.76550293 155.35253906]
[100.07663727 145.95198059]
[88.38777161 136.55143738]
[73.86225891 132.80851746]
[59.08599091 135.38958740]
[44.30972290 137.97065735]
[32.04674911 147.96716309]
[18.17794609 142.53526306]
[3.40167785 145.11633301]
[-11.37458992 147.69738770]
[-26.15085793 150.27845764]
[-31.87515640 159.51956177]
[-41.54001999 163.99525452]
[-51.85603714 162.44813538]
[-59.45582962 155.62715149]
[-72.00178528 165.26611328]
[-85.70829773 159.43679810]
[-100.55281067 161.59097290]
[-115.39731598 163.74513245]
[-130.24183655 165.89930725]
[-137.52896118 179.47149658]
[-151.25013733 186.07319641]
[-166.05253601 183.36157227]
[-176.29721069 172.58267212]
[-191.14172363 174.73684692]
[-205.98623657 176.89102173]
[-218.52149963 187.46452332]
[-233.85208130 181.64169312]
[-236.20718384 165.41253662]
[-223.16409302 155.47222900]
[-208.14041138 162.04650879]
[-193.29589844 159.89233398]
[-178.45138550 157.73815918]
[-171.69314575 144.49186707]
[-158.27207947 137.68458557]
[-143.24037170 140.11378479]
[-132.39599609 151.05479431]
[-117.55149078 148.90061951]
[-102.70697784 146.74645996]
[-87.86246490 144.59228516]
[-76.37828827 135.10740662]
[-61.61000061 140.78263855]
[-47.33691406 127.73341370]
[-28.73192406 135.50219727]
[-13.95565605 132.92112732]
[0.82061195 130.34005737]
[15.59687996 127.75899506]
[26.80295372 117.94710541]
[41.72865677 123.19438934]
[56.50492477 120.61331940]
[71.28118896 118.03225708]
[73.82376099 110.97637939]
[78.90889740 96.86463928]
[81.45146179 89.80876160]
[71.71796417 78.39566040]
[61.98446655 66.98255157]
[52.25096512 55.56944656]
[42.51746750 44.15633774]
[32.78396606 32.74323273]
[23.05046654 21.33012772]
[13.31696701 9.91702080]
[-2.31017208 4.94464159]
[-5.55273867 -11.13073730]
[6.92494202 -21.77214241]
[22.28690147 -16.03260994]
[24.73007393 0.18352161]
[34.46357346 11.59662724]
[44.19707108 23.00973320]
[53.93057251 34.42284012]
[63.66407013 45.83594513]
[73.39756775 57.24905014]
[83.13107300 68.66215515]
[92.86457062 80.07526398]
[106.20010376 73.20768738]
[102.56195068 58.65557861]
[88.12122345 52.97710800]
[79.80455780 39.87700653]
[80.80987549 24.39253044]
[90.75061798 12.47777939]
[105.80435944 8.71421623]
[120.18264008 14.54900932]
[128.35670471 27.73855972]
[127.18347168 43.21121597]
[117.11405945 55.01742935]
[120.75221252 69.56954193]
[128.25045776 69.73165131]
[143.24694824 70.05587006]
[150.74520874 70.21797943]
[155.00888062 55.83670807]
[159.27256775 41.45543671]
[163.53625488 27.07416534]
[167.79994202 12.69289207]
[167.23869324 3.58107543]
[172.23007202 -1.86408329]
[176.70056152 -16.18242073]
[169.14262390 -30.06237984]
[173.69305420 -45.19741058]
[187.65214539 -52.60816956]
[202.73822021 -47.89798355]
[210.00097656 -33.86132050]
[205.13156128 -18.82588768]
[191.01889038 -11.71193790]
[186.54841614 2.60639930]
[182.18121338 16.95657730]
[177.91752625 31.33784866]
[173.65383911 45.71912003]
[169.39015198 60.10039520]
[165.12648010 74.48166656]
[152.42866516 116.46036530]
[122.19462585 133.22506714]
[97.78833008 124.86256409]
[109.47719574 134.26312256]
[121.16606140 143.66368103]
[132.85491943 153.06422424]
[144.54379272 162.46478271]
[157.67477417 159.48019409]
[169.94865417 164.52796936]
[176.97152710 175.55889893]
[176.36940002 188.42701721]
[187.92158508 197.99504089]
[199.47377014 207.56306458]
[211.02595520 217.13108826]
[222.57814026 226.69911194]
[234.19897461 236.18363953]
[245.88783264 245.58419800]
[257.57669067 254.98474121]
[269.26556396 264.38531494]
[280.95443726 273.78585815]
[287.18414307 269.20666504]
[294.29870605 265.98464966]
[302.00296021 264.28906250]
[309.96984863 264.22512817]
[317.85418701 265.82806396]
[325.30770874 269.06011963]
[331.99444580 273.81103516]
[337.60571289 279.90124512]
[341.87448120 287.08883667]
[344.58782959 295.07882690]
[345.59747314 303.53543091]
[344.82745361 312.09603882]
[342.27877808 320.38681030]
[355.19650269 328.01126099]
[368.11425781 335.63571167]
[383.23956299 331.91244507]
[396.23135376 339.82876587]
[399.68771362 354.27136230]
[412.60543823 361.89581299]
[421.58129883 363.56134033]
[425.65325928 369.72436523]
[438.45974731 377.53417969]
[451.26626587 385.34399414]
[464.07278442 393.15380859]
[476.87930298 400.96362305]
[489.68582153 408.77343750]
[502.65814209 416.30462646]
[515.79022217 423.55364990]
[528.92230225 430.80267334]
[544.67279053 427.75283813]
[556.78350830 438.27471924]
[555.96417236 454.29681396]
[542.84326172 463.52838135]
[527.48608398 458.88772583]
[521.67327881 443.93475342]
[508.54119873 436.68572998]
[495.40911865 429.43670654]
[491.94277954 430.05499268]
[488.00497437 429.02828979]
[484.37057495 426.15335083]
[481.87600708 421.57995605]
[469.06948853 413.77014160]
[456.26296997 405.96032715]
[443.45645142 398.15051270]
[430.64993286 390.34069824]
[417.84344482 382.53088379]
[404.98098755 374.81356812]
[392.06326294 367.18908691]
[377.74877930 371.14282227]
[364.53976440 363.59457397]
[360.48977661 348.55343628]
[347.57205200 340.92898560]
[334.65432739 333.30453491]
[322.25784302 341.75009155]
[324.62573242 356.56201172]
[326.99359131 371.37393188]
[329.36145020 386.18585205]
[344.00067139 390.50506592]
[355.31039429 400.75460815]
[361.04501343 414.89947510]
[360.06591797 430.13116455]
[352.56753540 443.42541504]
[340.03866577 452.14263916]
[324.96691895 454.55203247]
[310.34478760 450.17523193]
[299.07556152 439.88119507]
[293.39669800 425.71386719]
[294.43572998 410.48617554]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[7 149]
[8 148]
[9 147]
[10 146]
[11 145]
[13 144]
[14 143]
[15 142]
[16 141]
[17 140]
[20 136]
[21 135]
[22 134]
[23 133]
[24 132]
[25 72]
[26 71]
[27 70]
[29 68]
[30 67]
[31 66]
[32 65]
[36 63]
[38 61]
[39 60]
[40 59]
[41 58]
[45 54]
[46 53]
[47 52]
[75 94]
[76 93]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[95 106]
[96 105]
[109 129]
[110 128]
[111 127]
[112 126]
[113 125]
[115 124]
[116 123]
[162 202]
[163 201]
[164 200]
[167 197]
[168 196]
[170 195]
[171 194]
[172 193]
[173 192]
[174 191]
[175 190]
[176 186]
[177 185]
[178 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
