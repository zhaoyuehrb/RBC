%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCGGAGACAGUGGGCGGGGGCGGGCGGGGGCGCUGUGAGGCCCGGAGGGGGUGUGUGCGGGGGGCCGGAGGCGGCGGCUGUCAGAGUCGGCUCAGCCUGCGCCGGGGAACAUCGGCCGCCUCCAGCUCCCGGCGCGGCCCGGCCCGGCCCGGCUCGGCCGCCUCAGCAGACGCCGCCUGCCCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[235.54324341 542.18981934]
[239.94653320 536.05810547]
[234.26243591 522.17681885]
[228.57833862 508.29550171]
[222.89422607 494.41418457]
[217.21012878 480.53286743]
[211.52603149 466.65151978]
[205.84193420 452.77020264]
[198.77592468 451.74526978]
[192.44725037 448.29492188]
[187.66822815 442.80810547]
[185.07083130 435.93829346]
[185.02342224 428.52581787]
[187.57929993 421.49520874]
[192.46409607 415.73977661]
[187.92134094 401.44421387]
[183.37858582 387.14862061]
[178.83584595 372.85305786]
[174.29309082 358.55749512]
[163.06469727 348.77114868]
[166.25924683 333.27581787]
[161.71650696 318.98025513]
[157.17375183 304.68466187]
[145.94535828 294.89834595]
[149.13990784 279.40301514]
[144.59716797 265.10742188]
[140.05441284 250.81185913]
[135.51165771 236.51628113]
[130.96890259 222.22071838]
[119.74050903 212.43437195]
[122.93506622 196.93904114]
[118.39231873 182.64347839]
[113.84956360 168.34790039]
[102.62117004 158.56156921]
[105.81572723 143.06622314]
[101.27297974 128.77066040]
[96.73022461 114.47508240]
[92.00550079 128.71154785]
[77.66335297 133.10502625]
[65.77536011 123.95758820]
[66.34749603 108.96849823]
[78.89827728 100.75387573]
[64.73864746 107.81188202]
[52.40213013 99.46564484]
[37.41982651 98.73721313]
[22.43752480 98.00877380]
[7.45522261 97.28034210]
[-5.34477854 106.95192719]
[-20.85064888 102.83518982]
[-27.16761208 88.08813477]
[-19.44983482 74.02344513]
[-3.61773396 71.43035126]
[8.18365574 82.29804230]
[23.16595840 83.02647400]
[38.14826202 83.75490570]
[53.13056183 84.48333740]
[66.21855927 77.37323761]
[79.62670898 85.77157593]
[84.89142609 87.95572662]
[89.78031158 90.73580170]
[94.23992920 94.07188416]
[95.21087646 79.10334015]
[88.38308716 64.83127594]
[96.92799377 52.63152695]
[97.89894104 37.66298294]
[98.86988831 22.69444275]
[99.84083557 7.72589970]
[100.81178284 -7.24264240]
[101.78273010 -22.21118546]
[94.95494080 -36.48324966]
[103.49984741 -48.68299484]
[104.47079468 -63.65153885]
[105.44174194 -78.62007904]
[106.41268921 -93.58862305]
[107.38363647 -108.55716705]
[108.35458374 -123.52571106]
[109.32553101 -138.49424744]
[110.29647827 -153.46279907]
[111.26742554 -168.43133545]
[104.43963623 -182.70339966]
[112.98454285 -194.90315247]
[106.15675354 -209.17521667]
[114.70166016 -221.37495422]
[115.67260742 -236.34350586]
[116.64355469 -251.31204224]
[106.04524994 -257.97167969]
[99.32788086 -268.44781494]
[97.71710968 -280.71502686]
[101.45829010 -292.43258667]
[109.78142548 -301.39086914]
[121.05870056 -305.92816162]
[122.51384735 -320.85742188]
[123.96899414 -335.78668213]
[125.42414856 -350.71594238]
[126.87929535 -365.64517212]
[120.51724243 -380.13085938]
[129.45271301 -392.04751587]
[130.90786743 -406.97674561]
[126.42659760 -423.32772827]
[140.89804077 -432.16027832]
[153.39149475 -420.69949341]
[145.83711243 -405.52160645]
[144.38197327 -390.59234619]
[150.84809875 -377.17453003]
[141.80854797 -364.19003296]
[140.35339355 -349.26077271]
[138.89825439 -334.33154297]
[137.44309998 -319.40228271]
[135.98794556 -304.47302246]
[149.72685242 -293.39520264]
[154.11473083 -276.13858032]
[147.21530151 -259.55361938]
[131.61209106 -250.34109497]
[130.64114380 -235.37255859]
[129.67019653 -220.40400696]
[136.56744385 -207.20259094]
[127.95308685 -193.93220520]
[134.85032654 -180.73078918]
[126.23596954 -167.46038818]
[125.26502228 -152.49185181]
[124.29407501 -137.52330017]
[123.32312775 -122.55476379]
[122.35218048 -107.58621979]
[121.38123322 -92.61767578]
[120.41028595 -77.64913177]
[119.43933868 -62.68059158]
[118.46839142 -47.71204758]
[125.36563110 -34.51063538]
[116.75127411 -21.24023819]
[115.78032684 -6.27169514]
[114.80937958 8.69684696]
[113.83843231 23.66539001]
[112.86748505 38.63393021]
[111.89653778 53.60247421]
[118.79377747 66.80388641]
[110.17942047 80.07428741]
[109.20847321 95.04283142]
[111.02580261 109.93233490]
[115.56855011 124.22790527]
[120.11129761 138.52348328]
[131.66462708 149.33232117]
[128.14514160 163.80514526]
[132.68789673 178.10072327]
[137.23063660 192.39628601]
[148.78396606 203.20513916]
[145.26448059 217.67796326]
[149.80723572 231.97354126]
[154.34997559 246.26910400]
[158.89273071 260.56466675]
[163.43548584 274.86026001]
[174.98881531 285.66909790]
[171.46932983 300.14190674]
[176.01206970 314.43750000]
[180.55482483 328.73306274]
[192.10815430 339.54193115]
[188.58866882 354.01473999]
[193.13140869 368.31030273]
[197.67416382 382.60589600]
[202.21691895 396.90145874]
[206.75967407 411.19702148]
[225.16726685 425.30523682]
[219.72325134 447.08612061]
[225.40734863 460.96743774]
[231.09144592 474.84875488]
[236.77555847 488.73007202]
[242.45965576 502.61138916]
[248.14375305 516.49273682]
[253.82785034 530.37402344]
[273.31622314 542.94720459]
[269.65167236 565.09704590]
[276.43988037 578.47314453]
[283.22808838 591.84924316]
[290.01629639 605.22534180]
[302.01986694 609.97070312]
[307.39529419 621.26300049]
[303.75036621 632.80670166]
[310.32110596 646.29101562]
[324.95855713 652.85791016]
[328.81097412 668.43151855]
[318.92306519 681.06518555]
[302.88000488 681.06738281]
[292.98864746 668.43640137]
[296.83682251 652.86169434]
[290.26611328 639.37744141]
[275.21466064 630.36584473]
[276.64019775 612.01354980]
[269.85198975 598.63745117]
[263.06378174 585.26135254]
[256.27557373 571.88525391]
[249.14982605 571.43511963]
[242.56282043 568.50793457]
[237.35566711 563.42565918]
[234.21115112 556.78845215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[15 160]
[16 159]
[17 158]
[18 157]
[19 156]
[21 154]
[22 153]
[23 152]
[25 150]
[26 149]
[27 148]
[28 147]
[29 146]
[31 144]
[32 143]
[33 142]
[35 140]
[36 139]
[37 138]
[42 58]
[44 56]
[45 55]
[46 54]
[47 53]
[61 137]
[62 136]
[64 134]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[71 127]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[79 119]
[81 117]
[83 115]
[84 114]
[85 113]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[97 103]
[98 102]
[170 189]
[171 188]
[172 187]
[173 186]
[176 184]
[177 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
