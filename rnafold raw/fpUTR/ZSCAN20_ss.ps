%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAUUCCCCGCACGAGCCCGGGAGCACUUCCGCCCUGUUGUGAAGUGGGUGUCUCGAGCCUUGGGGAGCAGUCCCUUUUCUAGGAGCCUCUUGAAGGACUCACCGUAGAUGCAGGAAGACAUUGGAUGAGGUCAGCAUAGCUGAAGUGAGGUGUCUGGGUUAGACA\
) } def
/len { sequence length } bind def

/coor [
[45.69142914 382.35156250]
[35.36739731 383.86083984]
[31.48511124 398.34973145]
[40.60206985 411.05462646]
[39.36795807 426.64346313]
[28.36548424 437.75558472]
[12.78968048 439.14422607]
[-0.00503444 430.15371704]
[-3.97738791 415.02911377]
[2.74824405 400.91174316]
[16.99622345 394.46743774]
[20.87850952 379.97854614]
[7.57062244 365.70639038]
[5.50284386 346.15832520]
[15.67737961 329.17211914]
[34.15304565 321.66253662]
[36.94171906 306.92404175]
[39.73039246 292.18554688]
[42.51906967 277.44705200]
[45.30774307 262.70855713]
[48.09641647 247.97006226]
[50.88508987 233.23155212]
[48.95790482 228.82037354]
[49.81084061 223.14860535]
[54.06344986 217.99864197]
[57.40126419 203.37472534]
[60.73907471 188.75080872]
[64.07688904 174.12689209]
[67.41470337 159.50296021]
[70.75251770 144.87904358]
[74.09033203 130.25512695]
[64.73798370 118.52765656]
[49.73798370 118.52765656]
[34.73798370 118.52765656]
[19.73798561 118.52765656]
[4.73798561 118.52765656]
[-2.31830144 132.10954285]
[-14.88477039 140.84695435]
[-30.07373810 142.73211670]
[-44.39489365 137.33181763]
[-54.55733490 125.88702393]
[-58.22581100 111.02765656]
[-54.55733490 96.16828918]
[-44.39489365 84.72349548]
[-30.07373810 79.32320404]
[-14.88477039 81.20836639]
[-2.31830144 89.94577789]
[4.73798561 103.52765656]
[19.73798561 103.52765656]
[34.73798370 103.52765656]
[49.73798370 103.52765656]
[64.73798370 103.52765656]
[65.39634705 88.88190460]
[72.02854156 75.39428711]
[83.78908539 65.45268250]
[98.90045929 60.94596100]
[114.91908264 62.91075134]
[112.40648651 48.12268448]
[109.89389801 33.33462143]
[107.24314880 18.57069397]
[104.45447540 3.83219624]
[101.66579437 -10.90630054]
[98.87712097 -25.64479828]
[88.70909882 -37.76593018]
[93.94536591 -51.70977402]
[91.15669250 -66.44827271]
[88.36801910 -81.18676758]
[85.57933807 -95.92527008]
[82.79066467 -110.66376495]
[78.73359680 -115.96913910]
[78.09333038 -121.66883087]
[80.18410492 -126.00486755]
[77.94847107 -140.83732605]
[68.24078369 -153.33018494]
[73.99476624 -167.06848145]
[71.75913239 -181.90095520]
[69.52349854 -196.73341370]
[57.52107620 -207.37866211]
[58.50434494 -223.39155579]
[71.71901703 -232.48837280]
[87.02793121 -227.69079590]
[92.68740082 -212.67913818]
[84.35595703 -198.96903992]
[86.59159088 -184.13658142]
[88.82722473 -169.30412292]
[98.37500763 -157.87219238]
[92.78093719 -143.07296753]
[95.01657104 -128.24050903]
[97.52916718 -113.45243835]
[100.31784058 -98.71394348]
[103.10651398 -83.97544098]
[105.89518738 -69.23694611]
[108.68386078 -54.49845123]
[118.65242004 -43.43151093]
[113.61562347 -28.43347168]
[116.40429688 -13.69497490]
[119.19297028 1.04352224]
[121.98164368 15.78201962]
[126.33304596 21.79471016]
[124.68196106 30.82202721]
[127.19455719 45.61009216]
[129.70715332 60.39815903]
[142.48207092 68.25953674]
[156.81565857 63.83821106]
[171.14926147 59.41688156]
[174.57122803 47.97972107]
[183.01681519 39.71311951]
[194.29304504 36.60085678]
[205.54956055 39.30900574]
[213.99905396 47.04737854]
[228.48793030 43.16509247]
[239.81532288 32.11968613]
[254.11148071 36.29928207]
[268.60037231 32.41699982]
[283.08926392 28.53471184]
[289.53356934 14.28673267]
[303.65090942 7.56110048]
[318.77554321 11.53345394]
[327.76605225 24.32816887]
[326.37741089 39.90397263]
[315.26525879 50.90644836]
[299.67645264 52.14056015]
[286.97152710 43.02360153]
[272.48263550 46.90588379]
[257.99377441 50.78816986]
[247.70272827 61.55588913]
[232.37022400 57.65398026]
[217.88133240 61.53626633]
[209.73783875 77.89766693]
[191.92842102 83.24283600]
[175.57058716 73.75047302]
[161.23698425 78.17180634]
[146.90339661 82.59313202]
[145.50294495 97.52761078]
[158.76467896 104.53664398]
[172.02641296 111.54566956]
[185.28813171 118.55470276]
[202.11701965 120.61016846]
[204.80058289 137.35038757]
[189.45745850 144.56321716]
[178.27911377 131.81643677]
[165.01737976 124.80740356]
[151.75564575 117.79837036]
[138.49391174 110.78934479]
[132.29829407 121.98288727]
[123.06054688 130.40596008]
[111.87932587 135.30899048]
[100.00788879 136.34590149]
[88.71424866 133.59294128]
[85.37643433 148.21685791]
[82.03862000 162.84077454]
[78.70080566 177.46470642]
[75.36299896 192.08862305]
[72.02518463 206.71253967]
[68.68737030 221.33645630]
[65.62358856 236.02023315]
[62.83491516 250.75872803]
[60.04623795 265.49722290]
[57.25756454 280.23571777]
[54.46889114 294.97421265]
[51.68021774 309.71270752]
[48.89154434 324.45120239]
[57.67694473 330.56304932]
[63.88817978 339.23132324]
[66.82987976 349.44152832]
[66.18749237 360.00921631]
[62.06072235 369.71731567]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[16 162]
[17 161]
[18 160]
[19 159]
[20 158]
[21 157]
[22 156]
[25 155]
[26 154]
[27 153]
[28 152]
[29 151]
[30 150]
[31 149]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[57 102]
[58 101]
[59 100]
[60 98]
[61 97]
[62 96]
[63 95]
[65 93]
[66 92]
[67 91]
[68 90]
[69 89]
[72 88]
[73 87]
[75 85]
[76 84]
[77 83]
[103 133]
[104 132]
[105 131]
[110 128]
[111 127]
[113 125]
[114 124]
[115 123]
[134 144]
[135 143]
[136 142]
[137 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
