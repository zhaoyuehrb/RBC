%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCCAGCUGUCCCUCCCGCAGUUGGCCCUGUGGUGUUCCGAAGCCGGUUACGUACGGCCUGAGGGCCAGGCGAACCUCAGGCUCUUUGUCCUACUAAAAAGCGCAGCACA\
) } def
/len { sequence length } bind def

/coor [
[22.13960075 192.01095581]
[10.48678780 201.45616150]
[8.69805908 216.92996216]
[-3.25410247 226.34274292]
[-17.99497414 224.54209900]
[-29.64778709 233.98730469]
[-41.30060196 243.43251038]
[-52.95341492 252.87771606]
[-64.60623169 262.32293701]
[-76.25904083 271.76812744]
[-87.91185760 281.21334839]
[-99.56467438 290.65853882]
[-99.64942169 306.29589844]
[-109.80519867 318.18682861]
[-125.23677063 320.71679688]
[-138.65780640 312.69122314]
[-143.73130798 297.89956665]
[-138.06173706 283.32595825]
[-124.32606506 275.85162354]
[-109.00988007 279.00573730]
[-97.35706329 269.56051636]
[-85.70425415 260.11532593]
[-74.05143738 250.67010498]
[-62.39862061 241.22489929]
[-50.74580765 231.77969360]
[-39.09299469 222.33448792]
[-27.44017982 212.88928223]
[-26.15038109 198.09495544]
[-14.46732140 188.35017395]
[1.04158115 189.80334473]
[12.69439507 180.35813904]
[24.08014679 170.59266663]
[35.19003677 160.51445007]
[46.29992676 150.43623352]
[50.52795792 136.15432739]
[65.94772339 132.61296082]
[77.05761719 122.53474426]
[88.16750336 112.45653534]
[76.89142609 122.34844971]
[61.90953064 123.08526611]
[49.71723938 114.34752655]
[45.60052490 99.92350006]
[51.34419632 86.06671906]
[64.45807648 78.78481293]
[79.25743103 81.23529816]
[75.94866943 66.60477448]
[72.63990021 51.97425842]
[69.33113098 37.34373856]
[55.02225494 31.34077263]
[47.00339127 18.05629349]
[48.35795212 2.59845376]
[58.56509018 -9.08888912]
[73.69994354 -12.51171494]
[87.94286346 -6.35387659]
[95.81714630 7.01681137]
[94.29497528 22.45904541]
[83.96165466 34.03497314]
[87.27041626 48.66549301]
[90.57918549 63.29600906]
[93.88795471 77.92652893]
[108.19196320 82.44264221]
[119.30185699 72.36442566]
[130.41174316 62.28621674]
[141.52163696 52.20800400]
[152.63153076 42.12979126]
[163.74140930 32.05158234]
[164.66741943 16.50229645]
[176.07800293 6.43982220]
[190.89616394 7.41845798]
[195.38798523 -8.35352993]
[211.35659790 -12.08652592]
[222.37487793 0.05965551]
[217.10813904 15.59006500]
[200.97438049 18.52834702]
[200.50875854 33.37148666]
[189.38531494 43.75049210]
[173.81962585 43.16147232]
[162.70973206 53.23968124]
[151.59983826 63.31789398]
[140.48995972 73.39610291]
[129.38006592 83.47431946]
[118.27017975 93.55252838]
[120.14189911 108.43529510]
[133.40130615 115.44870758]
[146.66072083 122.46212769]
[162.47718811 122.07508850]
[170.10993958 134.86532593]
[183.36935425 141.87875366]
[196.62875366 148.89216614]
[209.88816833 155.90559387]
[224.91616821 151.01325989]
[238.96388245 158.25460815]
[243.69705200 173.33349609]
[236.30758667 187.30386353]
[221.17950439 191.87734985]
[207.28804016 184.34059143]
[202.87475586 169.16499329]
[189.61534119 162.15158081]
[176.35592651 155.13816833]
[163.09652710 148.12474060]
[148.22845459 149.01342773]
[139.64730835 135.72154236]
[126.38789368 128.70811462]
[113.12847900 121.69470215]
[98.24571991 123.56642914]
[87.13582611 133.64463806]
[76.02593994 143.72285461]
[71.00325775 158.72561646]
[56.37813950 161.54612732]
[45.26824951 171.62434387]
[34.15835953 181.70254517]
[31.69653702 188.08547974]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[5 27]
[6 26]
[7 25]
[8 24]
[9 23]
[10 22]
[11 21]
[12 20]
[32 111]
[33 110]
[34 109]
[36 107]
[37 106]
[38 105]
[45 60]
[46 59]
[47 58]
[48 57]
[61 82]
[62 81]
[63 80]
[64 79]
[65 78]
[66 77]
[69 74]
[83 104]
[84 103]
[85 102]
[87 100]
[88 99]
[89 98]
[90 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
