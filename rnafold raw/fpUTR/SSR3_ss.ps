%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCGCUGACGGGUCGUUAGCGGAUACGGCGGCCGCAGGGGCGGAGUCAAGGGCCUUUGCCCGCCUUGGCGGCCGGCUCUACGUUCCCUGUUCUCGCCUGCAGCUCCGCC\
) } def
/len { sequence length } bind def

/coor [
[93.15037537 378.57382202]
[92.72968292 363.57971191]
[84.63847351 351.07446289]
[91.98568726 337.06271362]
[83.89447784 324.55746460]
[91.24169159 310.54571533]
[90.82099915 295.55160522]
[90.40029907 280.55749512]
[89.97960663 265.56341553]
[86.59780121 258.86962891]
[89.76334381 250.14419556]
[89.76334381 235.14419556]
[89.76334381 220.14419556]
[89.76334381 205.14419556]
[86.57059479 198.35820007]
[89.97960663 189.72497559]
[90.40029907 174.73086548]
[80.01300049 164.11769104]
[80.22605133 148.90554810]
[91.42855835 138.08235168]
[91.84925842 123.08825684]
[92.26995087 108.09415436]
[92.48031616 93.09562683]
[92.48031616 78.09562683]
[81.58576202 66.96250153]
[81.79944611 51.75037003]
[92.48031616 41.43268967]
[92.48031616 26.43268967]
[92.48031616 11.43268967]
[91.63925934 -3.54371238]
[89.95979309 -18.44939613]
[88.07144165 -33.33005905]
[85.97459412 -48.18277740]
[83.87773895 -63.03549194]
[81.78088379 -77.88820648]
[79.68402863 -92.74092865]
[77.58717346 -107.59364319]
[67.99671173 -120.17671204]
[73.87889099 -133.86061096]
[71.78203583 -148.71333313]
[69.68518066 -163.56605530]
[67.58832550 -178.41876221]
[65.49147034 -193.27148438]
[63.39461517 -208.12420654]
[61.29776001 -222.97691345]
[56.94356537 -231.17417908]
[59.35644531 -238.27496338]
[57.67697906 -253.18064880]
[48.44319916 -266.02774048]
[54.70684814 -279.54129028]
[53.02738190 -294.44699097]
[51.34791183 -309.35266113]
[43.56616974 -324.41522217]
[55.88588333 -336.06259155]
[70.48849487 -327.44863892]
[66.25359344 -311.03213501]
[67.93305969 -296.12643433]
[69.61253357 -281.22076416]
[78.72618103 -269.43981934]
[72.58266449 -254.86012268]
[74.26213074 -239.95443726]
[76.15047455 -225.07377625]
[78.24732971 -210.22105408]
[80.34418488 -195.36834717]
[82.44104004 -180.51562500]
[84.53789520 -165.66290283]
[86.63475037 -150.81019592]
[88.73160553 -135.95747375]
[98.17208099 -124.43676758]
[92.43988800 -109.69049835]
[94.53674316 -94.83778381]
[96.63359833 -79.98506165]
[98.73045349 -65.13234711]
[100.82730865 -50.27963257]
[102.92416382 -35.42691422]
[107.03417206 -29.15387154]
[104.86547852 -20.12886238]
[106.54494476 -5.22317934]
[108.81064606 -3.34757662]
[110.41271973 -0.39711073]
[110.91235352 3.35777116]
[109.98574829 7.48371458]
[107.48031616 11.43268967]
[107.48031616 26.43268967]
[107.48031616 41.43268967]
[118.16118622 51.75037003]
[118.37487030 66.96250153]
[107.48031616 78.09562683]
[107.48031616 93.09562683]
[110.66706085 100.63609314]
[107.26404572 108.51484680]
[106.84335327 123.50894928]
[106.42266083 138.50305176]
[117.00068665 149.93734741]
[116.36044312 165.13749695]
[105.39440155 175.15156555]
[104.97370911 190.14566040]
[104.76334381 205.14419556]
[104.76334381 220.14419556]
[104.76334381 235.14419556]
[104.76334381 250.14419556]
[104.97370911 265.14270020]
[105.39440155 280.13681030]
[105.81509399 295.13092041]
[106.23578644 310.12500000]
[114.35708618 323.70275879]
[106.97978210 336.64202881]
[115.10108185 350.21975708]
[107.72377777 363.15902710]
[108.14447784 378.15313721]
[110.87455750 397.34158325]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 110]
[2 109]
[4 107]
[6 105]
[7 104]
[8 103]
[9 102]
[11 101]
[12 100]
[13 99]
[14 98]
[16 97]
[17 96]
[20 93]
[21 92]
[22 91]
[23 89]
[24 88]
[27 85]
[28 84]
[29 83]
[30 78]
[31 77]
[32 75]
[33 74]
[34 73]
[35 72]
[36 71]
[37 70]
[39 68]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[47 61]
[48 60]
[50 58]
[51 57]
[52 56]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
