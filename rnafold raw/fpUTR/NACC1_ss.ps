%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUGAAUGGCCGCCGCGGCUGCCGCUGCUGCUGAGGCGGAGGCCGCGGAGGCCGCGGAGGCGGAGGCCGAGGCCCCGGCGCAGCGGGGCGCGCCCCGGGCCCAGGCCCGGCCCCAGCCGCCGCUGCGGAGCCCGCCGGGACCCCCCGGAGCGCGGCCACGGCGCAGCCGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[-87.87352753 311.12319946]
[-87.93119049 326.12307739]
[-95.37850952 339.14373779]
[-108.27836609 346.79840088]
[-123.27541351 347.09600830]
[-136.46879578 339.95913696]
[-144.42680359 327.24420166]
[-145.07951355 312.25839233]
[-138.25531006 298.89767456]
[-151.78639221 305.37142944]
[-165.31747437 311.84521484]
[-178.84855652 318.31896973]
[-187.95800781 331.25454712]
[-202.77822876 329.76782227]
[-216.30931091 336.24160767]
[-229.84040833 342.71536255]
[-243.37149048 349.18914795]
[-256.90258789 355.66290283]
[-270.43365479 362.13668823]
[-283.96475220 368.61047363]
[-297.49581909 375.08422852]
[-306.60528564 388.01977539]
[-321.42550659 386.53308105]
[-334.95657349 393.00686646]
[-348.48767090 399.48062134]
[-362.01876831 405.95440674]
[-375.54983521 412.42816162]
[-384.65930176 425.36370850]
[-399.47952271 423.87701416]
[-408.30065918 437.70159912]
[-424.66946411 436.70434570]
[-431.74710083 421.91113281]
[-422.25268555 408.53994751]
[-405.95327759 410.34591675]
[-397.81167603 397.87341309]
[-382.02362061 398.89709473]
[-368.49252319 392.42330933]
[-354.96145630 385.94955444]
[-341.43035889 379.47576904]
[-327.89926147 373.00198364]
[-319.75765991 360.52947998]
[-303.96960449 361.55316162]
[-290.43850708 355.07937622]
[-276.90744019 348.60559082]
[-263.37634277 342.13183594]
[-249.84526062 335.65805054]
[-236.31417847 329.18429565]
[-222.78309631 322.71051025]
[-209.25199890 316.23675537]
[-201.11038208 303.76425171]
[-185.32232666 304.78790283]
[-171.79124451 298.31411743]
[-158.26016235 291.84036255]
[-144.72908020 285.36657715]
[-131.82885742 277.71252441]
[-119.66220856 268.93911743]
[-107.49555969 260.16574097]
[-95.32890320 251.39233398]
[-89.53118134 237.67242432]
[-73.81222534 235.87660217]
[-61.64556885 227.10319519]
[-49.47891617 218.32980347]
[-50.66818619 205.01420593]
[-45.07027817 192.75485229]
[-34.05328369 184.80587769]
[-20.43882561 183.33525085]
[-7.77972126 188.83457947]
[4.54159021 180.27973938]
[16.86290169 171.72489929]
[29.18421364 163.17005920]
[35.22590256 149.55583191]
[50.97440720 148.04086304]
[63.29571915 139.48602295]
[75.61702728 130.93118286]
[87.93833923 122.37634277]
[78.57301331 111.88419342]
[76.46378326 98.50066376]
[81.73400116 86.58014679]
[92.19347382 79.70171356]
[104.19659424 79.59754181]
[112.30620575 66.97874451]
[120.41581726 54.35993958]
[128.52543640 41.74113846]
[136.63504028 29.12233353]
[144.74465942 16.50353050]
[152.85426331 3.88472772]
[160.96388245 -8.73407555]
[168.96054077 -21.42475319]
[176.84362793 -34.18629456]
[184.72671509 -46.94783401]
[176.59770203 -59.81952667]
[174.87046814 -74.88284302]
[179.83436584 -89.14397430]
[190.45428467 -99.79190826]
[204.58587646 -104.75251007]
[219.40847778 -103.09241486]
[227.29156494 -115.85395813]
[235.17465210 -128.61549377]
[243.05773926 -141.37704468]
[250.94082642 -154.13858032]
[258.82391357 -166.90011597]
[258.77059937 -183.29917908]
[273.08007812 -191.30987549]
[287.03195190 -182.69148254]
[286.27377319 -166.30986023]
[271.58544922 -159.01702881]
[263.70236206 -146.25549316]
[255.81927490 -133.49395752]
[247.93618774 -120.73240662]
[240.05310059 -107.97087097]
[232.17001343 -95.20932770]
[240.28936768 -82.69766998]
[242.17901611 -67.84039307]
[237.41102600 -53.57760239]
[226.88029480 -42.75522232]
[212.63714600 -37.55716324]
[197.48826599 -39.06474686]
[189.60517883 -26.30320740]
[181.72209167 -13.54166603]
[180.87919617 -6.17467308]
[173.58268738 -0.62446308]
[165.47306824 11.99433994]
[157.36346436 24.61314201]
[149.25384521 37.23194504]
[141.14424133 49.85074997]
[133.03462219 62.46955109]
[124.92501068 75.08835602]
[116.81539917 87.70716095]
[122.14291382 96.89342499]
[122.42114258 108.24759674]
[116.88431549 119.00273895]
[130.84275818 124.49472046]
[146.51756287 122.34736633]
[155.52821350 134.20727539]
[171.20301819 132.05990601]
[180.21366882 143.91981506]
[194.17210388 149.41180420]
[208.13055420 154.90377808]
[222.08898926 160.39576721]
[236.04743958 165.88775635]
[252.17646790 162.92358398]
[262.60058594 175.58337402]
[256.59631348 190.84381104]
[240.34037781 193.00625610]
[230.55545044 179.84619141]
[216.59701538 174.35421753]
[202.63856506 168.86222839]
[188.68013000 163.37023926]
[174.72167969 157.87826538]
[160.04528809 160.41844177]
[150.03622437 148.16571045]
[135.35983276 150.70590210]
[125.35077667 138.45317078]
[111.39233398 132.96118164]
[96.49317932 134.69764709]
[84.17186737 143.25248718]
[71.85055542 151.80732727]
[59.52924728 160.36216736]
[52.60625458 174.58830261]
[37.73905182 175.49137878]
[25.41774178 184.04621887]
[13.09642982 192.60104370]
[0.77511829 201.15588379]
[0.64969248 218.05436707]
[-9.41378593 231.42289734]
[-25.29996872 236.12322998]
[-40.70551682 230.49645996]
[-52.87216949 239.26985168]
[-65.03882599 248.04325867]
[-71.70678711 262.39068604]
[-86.55550385 263.55899048]
[-98.72216034 272.33236694]
[-110.88880920 281.10577393]
[-123.05546570 289.87918091]
[-108.06114960 290.29208374]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 54]
[10 53]
[11 52]
[12 51]
[14 49]
[15 48]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[29 34]
[55 174]
[56 173]
[57 172]
[58 171]
[60 169]
[61 168]
[62 167]
[67 163]
[68 162]
[69 161]
[70 160]
[72 158]
[73 157]
[74 156]
[75 155]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[88 119]
[89 118]
[90 117]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[131 154]
[132 153]
[134 151]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
