%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGAUCCUUUUGUCUUUUGCAAAGAAGGCAGCUGGGCAGCUGAUAGGAACAACAUUCAGCUCCGAGGCUGAAAGGGAAACAUCAGCCGCCCGGGGGGAGUUAAA\
) } def
/len { sequence length } bind def

/coor [
[95.52923584 248.44447327]
[83.21450806 239.48527527]
[75.61411285 226.28852844]
[74.04485321 211.14068604]
[78.77862549 196.66618347]
[88.99526978 185.37281799]
[102.92468262 179.21722412]
[102.92468262 164.21722412]
[102.92468262 149.21722412]
[102.92468262 134.21722412]
[102.92468262 119.21723175]
[91.08045959 110.01318359]
[76.54516602 113.71793365]
[62.00986862 117.42268372]
[47.47457123 121.12743378]
[32.93927765 124.83217621]
[18.40398026 128.53692627]
[3.86868382 132.24166870]
[-10.66661263 135.94642639]
[-25.20190811 139.65116882]
[-36.55456161 151.48541260]
[-52.41288757 147.30862427]
[-56.46319962 131.41752625]
[-44.53888702 120.15952301]
[-28.90665627 125.11587524]
[-14.37136078 121.41112518]
[0.16393565 117.70638275]
[14.69923210 114.00163269]
[29.23452759 110.29688263]
[43.76982498 106.59213257]
[58.30512238 102.88739014]
[72.84041595 99.18264008]
[87.37571716 95.47789001]
[99.86302948 87.16723633]
[108.89221191 75.18917847]
[117.92138672 63.21111679]
[126.95056915 51.23305893]
[135.97975159 39.25499725]
[145.00892639 27.27693748]
[147.13734436 11.59955311]
[160.97698975 6.09378290]
[170.00617981 -5.88427687]
[179.03535461 -17.86233711]
[188.06452942 -29.84039688]
[197.09371948 -41.81845856]
[206.12289429 -53.79651642]
[208.85310364 -62.68322372]
[215.59716797 -65.98847961]
[208.98178101 -78.57185364]
[207.69572449 -92.68621826]
[211.90205383 -106.17488861]
[220.92707825 -116.98961639]
[233.36813354 -123.50158691]
[247.31140137 -124.74670410]
[260.62637329 -120.56818390]
[263.67120361 -136.09364319]
[277.81011963 -140.77769470]
[287.52670288 -152.20521545]
[297.24328613 -163.63272095]
[306.95986938 -175.06024170]
[316.67642212 -186.48776245]
[326.39300537 -197.91526794]
[336.10958862 -209.34278870]
[338.52874756 -225.56251526]
[353.88217163 -231.32479858]
[366.37561035 -220.70188904]
[363.15686035 -204.62173462]
[347.53710938 -199.62620544]
[337.82052612 -188.19868469]
[328.10394287 -176.77117920]
[318.38735962 -165.34365845]
[308.67077637 -153.91615295]
[298.95422363 -142.48863220]
[289.23764038 -131.06112671]
[286.88778687 -116.35304260]
[272.05389404 -110.85160828]
[278.79806519 -96.44546509]
[278.62170410 -80.48195648]
[271.50952148 -66.12464905]
[258.82577515 -56.24057770]
[243.05270386 -52.82778931]
[227.30499268 -56.61156082]
[218.10095215 -44.76733780]
[209.07177734 -32.78927612]
[200.04258728 -20.81121826]
[191.01341248 -8.83315754]
[181.98423767 3.14490247]
[172.95506287 15.12296200]
[171.47245789 29.94359589]
[156.98698425 36.30611801]
[147.95780945 48.28417587]
[138.92863464 60.26223755]
[129.89944458 72.24029541]
[120.87026978 84.21836090]
[111.84108734 96.19641876]
[117.92468262 119.21723175]
[117.92468262 134.21722412]
[117.92468262 149.21722412]
[117.92468262 164.21722412]
[117.92468262 179.21722412]
[131.85409546 185.37281799]
[142.07073975 196.66618347]
[146.80451965 211.14068604]
[145.23526001 226.28852844]
[137.63485718 239.48527527]
[125.32013702 248.44447327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 100]
[8 99]
[9 98]
[10 97]
[11 96]
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[34 95]
[35 94]
[36 93]
[37 92]
[38 91]
[39 90]
[41 88]
[42 87]
[43 86]
[44 85]
[45 84]
[46 83]
[48 82]
[55 76]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
