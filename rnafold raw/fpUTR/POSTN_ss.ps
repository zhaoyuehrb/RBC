%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUCUCAGGUUGAUGCAGUGUUCCCUCCCACAACUCUGACAUGUAUAUAAAUUCUGAGCUCUCCAAAGCCCACUGCCAGUUCUCUUCGGGGACUAACUGCAACGGAGAGACUCAAG\
) } def
/len { sequence length } bind def

/coor [
[131.05328369 156.90638733]
[114.42553711 163.20242310]
[96.71271515 164.74438477]
[79.24716187 161.41630554]
[63.34263611 153.46849060]
[50.19546127 141.49879456]
[40.79457474 126.40756989]
[26.48057556 130.89192200]
[12.16657639 135.37628174]
[-2.14742279 139.86062622]
[-16.40098381 144.53352356]
[-30.59162331 149.39416504]
[-44.78226089 154.25479126]
[-58.97290039 159.11543274]
[-66.18614197 164.92744446]
[-73.60274506 163.91169739]
[-87.91674042 168.39604187]
[-99.98519897 182.22660828]
[-116.93260193 177.88320923]
[-131.12324524 182.74383545]
[-137.84832764 197.04589844]
[-152.74488831 202.32493591]
[-166.97503662 195.44902039]
[-172.09629822 180.49748230]
[-165.07029724 166.34082031]
[-150.06546021 161.37792969]
[-135.98387146 168.55320740]
[-121.79323578 163.69256592]
[-116.13698578 152.91096497]
[-104.25354004 148.78991699]
[-92.40109253 154.08204651]
[-78.08709717 149.59770203]
[-63.83353424 144.92478943]
[-49.64289474 140.06416321]
[-35.45225906 135.20352173]
[-21.26161766 130.34289551]
[-15.88594055 125.13330078]
[-6.63177490 125.54663086]
[7.68222427 121.06227875]
[21.99622345 116.57792664]
[36.31022263 112.09357452]
[35.17276001 99.73374176]
[36.41171265 87.38367462]
[39.98166656 75.49609375]
[45.75175476 64.50676727]
[53.51045609 54.81853867]
[62.97336197 46.78656006]
[73.79357910 40.70526505]
[85.57446289 36.79758072]
[97.88414764 35.20674896]
[110.27140045 35.99109268]
[122.28212738 39.12185287]
[133.47604370 44.48426819]
[143.44281006 51.88175964]
[151.81704712 61.04315948]
[158.29180908 71.63262177]
[162.62971497 83.26197052]
[177.47186279 81.09162140]
[192.31402588 78.92127228]
[207.15617371 76.75092316]
[221.96839905 74.38484955]
[236.74807739 71.82347107]
[251.52777100 69.26209259]
[266.30746460 66.70071411]
[281.08715820 64.13933563]
[295.86685181 61.57795334]
[302.77816772 47.81060410]
[316.31271362 40.83425140]
[331.18405151 43.13798523]
[341.72113037 53.63122177]
[356.50082397 51.06984329]
[358.77127075 39.75881577]
[364.41882324 29.72986221]
[372.87408447 21.96031761]
[383.29495239 17.20141411]
[394.65042114 15.90565681]
[405.82284546 18.18384743]
[415.71762085 23.79581833]
[423.37066650 32.17564011]
[428.04223633 42.48863983]
[443.00955200 41.49935913]
[457.97689819 40.51008224]
[472.94424438 39.52080154]
[487.91159058 38.53152466]
[502.87893677 37.54224396]
[517.84625244 36.55296326]
[533.25213623 29.47516823]
[544.31811523 42.31964874]
[535.03894043 56.50886154]
[518.83557129 51.52030563]
[503.86822510 52.50958633]
[488.90087891 53.49886322]
[473.93353271 54.48814392]
[458.96618652 55.47742462]
[443.99884033 56.46670151]
[429.03149414 57.45598221]
[421.77487183 74.73339081]
[406.77947998 86.10482788]
[388.02627563 88.45098114]
[370.54434204 81.06198883]
[359.06222534 65.84953308]
[344.28253174 68.41091156]
[337.89093018 81.83795929]
[324.66204834 89.01157379]
[309.56924438 86.99645233]
[298.42822266 76.35764313]
[283.64855957 78.91902924]
[268.86886597 81.48040771]
[254.08915710 84.04178619]
[239.30946350 86.60316467]
[224.52976990 89.16454315]
[218.39964294 93.46096802]
[209.32652283 91.59307861]
[194.48437500 93.76342773]
[179.64221191 95.93377686]
[164.80006409 98.10412598]
[162.87799072 115.77974701]
[156.22625732 132.26841736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 41]
[8 40]
[9 39]
[10 38]
[11 36]
[12 35]
[13 34]
[14 33]
[16 32]
[17 31]
[19 28]
[20 27]
[57 116]
[58 115]
[59 114]
[60 113]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[66 106]
[70 102]
[71 101]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
