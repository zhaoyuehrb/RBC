%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACCGCUGUGCGGCUUCUGUUUGGUUGGCCAGUUCGUCCCAAUUUCCGACUCACAGGGCUGCGGAGCAGCAACUCUCACGAUAUUUGCUGCGACCCGCAGGCGCUAUCCGCUGCCGGGUUCUGGCGCGCCCUUUCAGUUCUGCUUGCUGUCGGCACCGCUGCGUUACCCGGAACCGCCGGGCCGAACAGC\
) } def
/len { sequence length } bind def

/coor [
[64.68054962 339.84863281]
[55.64163971 352.60922241]
[40.50207138 356.52423096]
[26.41028786 349.74517822]
[20.01999664 335.47290039]
[24.34849930 320.44631958]
[37.35200882 311.76052856]
[38.81467056 296.83203125]
[40.27733612 281.90350342]
[41.73999786 266.97497559]
[43.20266342 252.04647827]
[36.74328232 238.62538147]
[45.78937912 225.64544678]
[47.25204086 210.71693420]
[48.71470261 195.78840637]
[50.17736816 180.85989380]
[51.64002991 165.93138123]
[53.10269547 151.00285339]
[41.39700317 141.62326050]
[27.14632034 146.30494690]
[12.89563847 150.98661804]
[-1.35504389 155.66828918]
[-7.86586809 166.81404114]
[-19.84336472 170.41490173]
[-30.70113373 165.06088257]
[-45.02613068 169.50997925]
[-59.35112762 173.95907593]
[-73.67612457 178.40817261]
[-88.00112152 182.85726929]
[-102.32611847 187.30636597]
[-109.01750183 198.34466553]
[-121.05202484 201.75009155]
[-131.82121277 196.22004700]
[-146.21672058 200.43537903]
[-160.61224365 204.65072632]
[-175.00775146 208.86605835]
[-182.37136841 222.85008240]
[-197.49095154 227.45155334]
[-211.39634705 219.94050598]
[-215.83770752 204.77311707]
[-208.18006897 190.94792175]
[-192.96655273 186.66716003]
[-179.22309875 194.47055054]
[-164.82757568 190.25520325]
[-150.43206787 186.03987122]
[-136.03654480 181.82452393]
[-124.62810516 168.49830627]
[-106.77521515 172.98136902]
[-92.45021820 168.53227234]
[-78.12522125 164.08317566]
[-63.80022430 159.63407898]
[-49.47522736 155.18498230]
[-35.15023041 150.73588562]
[-23.96021461 137.22573853]
[-6.03671694 141.41760254]
[8.21396446 136.73593140]
[22.46464729 132.05426025]
[36.71532822 127.37258911]
[63.20381927 128.57783508]
[73.41493225 117.58997345]
[83.62603760 106.60211182]
[85.57384491 91.72911072]
[78.53656769 78.48235321]
[71.49928284 65.23558807]
[64.46199799 51.98883057]
[57.42471695 38.74206924]
[39.86940384 28.85399055]
[41.35160065 9.58351994]
[33.88687134 -3.42716026]
[26.42214012 -16.43784142]
[18.95741081 -29.44852066]
[11.49267960 -42.45920181]
[4.02794981 -55.46988297]
[-3.43678045 -68.48056030]
[-21.30464363 -77.79198456]
[-20.45047951 -97.10048676]
[-28.33474731 -109.86129761]
[-43.02373886 -117.15277100]
[-43.78344727 -133.53431702]
[-29.83235359 -142.15399170]
[-15.52214241 -134.14463806]
[-15.57393551 -117.74556732]
[-7.68966818 -104.98475647]
[2.44389224 -103.53460693]
[10.26515293 -96.59433746]
[13.02417278 -86.28067780]
[9.57390022 -75.94528961]
[17.03862953 -62.93461227]
[24.50336075 -49.92393112]
[31.96809006 -36.91324997]
[39.43281937 -23.90257072]
[46.89755249 -10.89189053]
[54.36228180 2.11878991]
[64.44326782 3.89801073]
[72.03448486 11.08918381]
[74.45633698 21.48718071]
[70.67147827 31.70478821]
[77.70876312 44.95154953]
[84.74604034 58.19831085]
[91.78332520 71.44506836]
[98.82061005 84.69183350]
[113.81266022 84.20358276]
[119.97312927 70.52701569]
[126.13360596 56.85044479]
[132.18257141 43.12419128]
[138.11961365 29.34915924]
[133.55189514 13.97009563]
[142.84564209 0.89316934]
[158.87145996 0.14987840]
[169.33573914 12.31041241]
[166.21115112 28.04624939]
[151.89463806 35.28620148]
[145.95759583 49.06123352]
[146.19764709 56.45943451]
[139.81018066 63.01091766]
[133.64970398 76.68749237]
[127.48922729 90.36405945]
[118.89862823 93.58939362]
[110.24644470 96.63954163]
[125.16255951 98.22366333]
[140.07867432 99.80777740]
[154.99479675 101.39189148]
[169.91091919 102.97600555]
[184.82702637 104.56011963]
[199.74314880 106.14423370]
[214.65927124 107.72834778]
[232.68019104 98.71671295]
[247.81861877 110.73237610]
[262.77838135 111.83013153]
[277.73815918 112.92789459]
[292.69793701 114.02565765]
[283.82250977 101.93321991]
[285.94818115 87.08460236]
[297.85980225 77.96794891]
[312.74813843 79.79475403]
[322.10235596 91.52074432]
[320.57513428 106.44279480]
[309.03979492 116.03068542]
[323.82125854 118.58195496]
[338.60269165 121.13323212]
[351.42660522 112.29099274]
[366.38073730 115.08890533]
[374.73144531 127.36903381]
[389.51287842 129.92030334]
[404.29431152 132.47157288]
[419.07574463 135.02284241]
[430.90078735 124.79043579]
[446.53729248 124.60463715]
[458.60214233 134.55317688]
[461.39868164 149.93865967]
[453.60650635 163.49653625]
[438.90481567 168.82519531]
[424.23532104 163.40858459]
[416.52447510 149.80429077]
[401.74304199 147.25302124]
[386.96160889 144.70175171]
[372.18017578 142.15048218]
[360.19616699 150.92083740]
[345.16934204 148.54405212]
[336.05142212 135.91467285]
[321.26998901 133.36340332]
[306.48852539 130.81213379]
[291.60018921 128.98542786]
[276.64041138 127.88767242]
[261.68063354 126.78990936]
[246.72085571 125.69215393]
[239.60327148 133.04959106]
[229.39492798 135.31436157]
[219.42306519 131.50045776]
[213.07514954 122.64446259]
[198.15904236 121.06034851]
[183.24291992 119.47623444]
[168.32679749 117.89212036]
[153.41067505 116.30800629]
[138.49456787 114.72389221]
[123.57844543 113.13977814]
[108.66233063 111.55566406]
[94.61390686 116.81321716]
[84.40279388 127.80108643]
[74.19168854 138.78895569]
[68.03121185 152.46553040]
[66.56855011 167.39404297]
[65.10588837 182.32255554]
[63.64322281 197.25106812]
[62.18055725 212.17959595]
[60.71789551 227.10810852]
[67.07265472 241.59698486]
[58.13117981 253.50914001]
[56.66851425 268.43765259]
[55.20585251 283.36618042]
[53.74318695 298.29467773]
[52.28052521 313.22320557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 192]
[8 191]
[9 190]
[10 189]
[11 188]
[13 186]
[14 185]
[15 184]
[16 183]
[17 182]
[18 181]
[19 58]
[20 57]
[21 56]
[22 55]
[25 53]
[26 52]
[27 51]
[28 50]
[29 49]
[30 48]
[33 46]
[34 45]
[35 44]
[36 43]
[59 180]
[60 179]
[61 178]
[62 101]
[63 100]
[64 99]
[65 98]
[66 97]
[68 93]
[69 92]
[70 91]
[71 90]
[72 89]
[73 88]
[74 87]
[76 83]
[77 82]
[102 117]
[103 116]
[104 115]
[105 113]
[106 112]
[119 177]
[120 176]
[121 175]
[122 174]
[123 173]
[124 172]
[125 171]
[126 170]
[128 166]
[129 165]
[130 164]
[131 163]
[138 162]
[139 161]
[140 160]
[143 157]
[144 156]
[145 155]
[146 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
