%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCACUUCCGGCGCGCAGCGGGCGGCCAUGUUGGAGCAGCGGAGGCGGCGCAGAGGCGCGUCUUGGGUCCCCGCGGCGGCGCCGGUGCCAAGCGCUGGUUUGCGGAUACCCAGGCAGAUCUGCAGUGCCUAAUGCC\
) } def
/len { sequence length } bind def

/coor [
[90.27488708 219.80682373]
[88.24699402 204.94453430]
[84.19185638 198.68971252]
[86.34514618 189.72387695]
[84.65364838 174.81956482]
[82.96215057 159.91523743]
[81.27065277 145.01091003]
[79.57914734 130.10659790]
[79.65665436 120.87369537]
[82.18540955 112.76474762]
[86.74723053 106.32366180]
[92.81477356 101.97835541]
[77.97634888 99.78263855]
[63.13792801 97.58692169]
[48.29950333 95.39120483]
[33.46107864 93.19548798]
[18.62265396 90.99977112]
[3.78423095 88.80405426]
[-8.82372761 97.95156860]
[-23.84072113 95.51342010]
[-32.48378372 83.43728638]
[-47.34607315 81.40939331]
[-61.99909210 87.37593842]
[-73.66882324 78.12031555]
[-88.55308533 76.26049805]
[-103.20610046 82.22704315]
[-114.87583160 72.97142029]
[-129.76008606 71.11160278]
[-144.64434814 69.25179291]
[-161.38885498 76.81918335]
[-174.99018860 65.78699493]
[-189.91267395 64.26403046]
[-204.83515930 62.74106979]
[-219.75764465 61.21810532]
[-234.68013000 59.69514084]
[-251.05130005 64.10207367]
[-259.81799316 49.59065247]
[-248.30055237 37.14939499]
[-233.15716553 44.77265549]
[-218.23468018 46.29561996]
[-203.31219482 47.81858444]
[-188.38970947 49.34154892]
[-173.46722412 50.86451340]
[-163.84368896 43.44879150]
[-151.35012817 44.65074921]
[-142.78453064 54.36753464]
[-127.90027618 56.22734833]
[-113.01602173 58.08716583]
[-99.42761993 51.98759460]
[-86.69326782 61.37624359]
[-71.80901337 63.23605728]
[-58.22061539 57.13648605]
[-45.48625946 66.52513885]
[-38.39935303 64.21369171]
[-30.28806877 68.59886169]
[-18.51804733 59.54335785]
[-3.43849659 61.55874634]
[5.97994804 73.96562958]
[20.81837273 76.16134644]
[35.65679550 78.35706329]
[50.49522018 80.55278015]
[65.33364105 82.74849701]
[80.17206573 84.94421387]
[95.01049042 87.13993073]
[109.54930115 83.44899750]
[121.54355621 74.44133759]
[133.53781128 65.43368530]
[145.53205872 56.42602158]
[157.52630615 47.41836548]
[169.52056885 38.41070557]
[171.88050842 23.01367760]
[184.17269897 14.04949379]
[198.83686829 16.39422226]
[210.83111572 7.38656330]
[222.82536316 -1.62109566]
[234.81962585 -10.62875462]
[246.81387329 -19.63641357]
[258.80813599 -28.64407158]
[260.42248535 -32.88292313]
[263.06903076 -36.02674103]
[266.25881958 -37.88182068]
[269.49105835 -38.43984985]
[272.31680298 -37.86479187]
[285.07531738 -45.75279617]
[297.83383179 -53.64080048]
[310.59231567 -61.52880096]
[323.35083008 -69.41680145]
[336.10934448 -77.30480957]
[348.86782837 -85.19281006]
[361.62634277 -93.08081055]
[371.91900635 -106.55290222]
[387.71389771 -100.39192200]
[386.16613770 -83.50876617]
[369.51434326 -80.32231140]
[356.75582886 -72.43431091]
[343.99734497 -64.54630280]
[331.23883057 -56.65830231]
[318.48031616 -48.77029800]
[305.72183228 -40.88229370]
[292.96331787 -32.99429321]
[280.20480347 -25.10628891]
[267.81579590 -16.64982033]
[255.82153320 -7.64216137]
[243.82728577 1.36549759]
[231.83302307 10.37315655]
[219.83877563 19.38081551]
[207.84452820 28.38847351]
[206.00831604 43.12495804]
[193.97274780 52.43086624]
[178.52822876 50.40495682]
[166.53396606 59.41261673]
[154.53971863 68.42027283]
[142.54547119 77.42793274]
[130.55120850 86.43559265]
[118.55696106 95.44325256]
[117.87915039 110.42793274]
[129.01118469 120.48167419]
[140.14321899 130.53541565]
[156.28341675 133.43820190]
[161.58430481 148.95698547]
[150.59278870 161.12738037]
[134.61598206 157.42951965]
[130.08947754 141.66744995]
[118.95744324 131.61370850]
[107.82540894 121.55996704]
[94.48347473 128.41510010]
[96.17497253 143.31941223]
[97.86647034 158.22373962]
[99.55796814 173.12806702]
[101.24946594 188.03237915]
[103.10928345 202.91664124]
[105.13717651 217.77893066]
[118.46080780 225.96519470]
[123.35620117 240.81677246]
[117.51190186 255.32118225]
[103.68740845 262.62991333]
[88.41023254 259.29199219]
[78.89377594 246.88346863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 132]
[2 131]
[4 130]
[5 129]
[6 128]
[7 127]
[8 126]
[12 64]
[13 63]
[14 62]
[15 61]
[16 60]
[17 59]
[18 58]
[21 55]
[22 53]
[24 51]
[25 50]
[27 48]
[28 47]
[29 46]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
[70 110]
[73 107]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[83 101]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[90 94]
[116 125]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
