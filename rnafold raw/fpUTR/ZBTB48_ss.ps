%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCACGCUUUGACGUCACGUCCGGCGCGGAGACGGUGGAGUCUCCGCACUGUCGGCGGGGUACGCAUAGCCGGGCACUAGGUUCGUGGGCUGUGGAGGCGACGGAGCAGGGGGCCAGUGGGGCCAGCUCAGGGAGGACCUGCCUGGGAGCUUUCUCUUGCAUACCCUCGCUUAGGCUGGCCGGGGUGUCACUUCUGCCUCCCUGCCCUCCAGACC\
) } def
/len { sequence length } bind def

/coor [
[364.03417969 53.97198105]
[359.44335938 54.62046432]
[354.40896606 53.27007294]
[339.92007446 57.15235901]
[325.43118286 61.03464127]
[310.94229126 64.91693115]
[309.42565918 67.27021790]
[306.88723755 69.16572571]
[303.49627686 70.21189880]
[299.56033325 70.08547211]
[295.49758911 68.57738495]
[280.80749512 71.61064911]
[266.11737061 74.64391327]
[255.21765137 84.79504395]
[240.13796997 80.00823212]
[234.17953491 93.63302612]
[221.18711853 101.22650909]
[206.03753662 99.69564819]
[194.56163025 89.41899109]
[179.87152100 92.45225525]
[165.18141174 95.48551941]
[150.49130249 98.51878357]
[135.80119324 101.55204773]
[121.11107635 104.58530426]
[106.42096710 107.61856842]
[92.36325836 112.85124207]
[79.26517487 120.16151428]
[66.16709137 127.47179413]
[53.06900024 134.78207397]
[39.97091675 142.09234619]
[26.87282944 149.40261841]
[13.77474308 156.71289062]
[0.67665684 164.02317810]
[-3.39371920 179.29431152]
[-17.11191177 187.14202881]
[-32.33915710 182.91043091]
[-40.04140472 169.11003113]
[-35.64904785 153.92837524]
[-21.76799011 146.37246704]
[-6.63361931 150.92507935]
[6.46446705 143.61480713]
[19.56255341 136.30453491]
[32.66064072 128.99426270]
[45.75872803 121.68398285]
[58.85681152 114.37371063]
[71.95489502 107.06343079]
[85.05298615 99.75315857]
[83.80436707 92.35781860]
[69.01370239 94.85504913]
[55.71854019 101.80046082]
[45.00476837 91.30212402]
[51.67870712 77.86863708]
[66.51647186 80.06438446]
[81.30714417 77.56715393]
[80.05852509 70.17182159]
[65.28640747 67.56710052]
[50.51429367 64.96237183]
[36.60075378 72.94942474]
[21.73485374 66.91746521]
[17.32043648 51.49370193]
[26.74386978 38.50992584]
[42.77629852 37.92617416]
[53.11901855 50.19025803]
[67.89113617 52.79497910]
[82.66325378 55.39970398]
[93.73229218 62.67379379]
[101.05815887 72.17388916]
[104.28278351 82.67791748]
[103.38770294 92.92845917]
[118.07781219 89.89519501]
[132.76792908 86.86193848]
[147.45803833 83.82867432]
[162.14814758 80.79541016]
[176.83825684 77.76214600]
[191.52836609 74.72888184]
[197.99534607 60.74731445]
[211.29959106 53.34120560]
[226.23707581 55.16762924]
[237.10470581 65.31812286]
[249.05516052 54.95003128]
[263.08410645 59.95380783]
[277.77423096 56.92054367]
[292.46432495 53.88727951]
[307.05999756 50.42803955]
[321.54888916 46.54575729]
[336.03778076 42.66347122]
[350.52667236 38.78118515]
[364.92739868 34.58374786]
[379.23315430 30.07316208]
[386.47329712 24.51007462]
[393.77987671 25.60264015]
[404.78121948 14.23245239]
[419.19290161 17.99448204]
[433.56274414 13.69243431]
[447.93258667 9.39038563]
[462.30242920 5.08833694]
[476.67227173 0.78628868]
[491.04211426 -3.51575971]
[477.78445435 -10.53250980]
[472.02517700 -24.38280678]
[476.39877319 -38.73103714]
[488.90460205 -47.01380920]
[503.82205200 -45.44229126]
[514.32739258 -34.73534775]
[515.61505127 -19.79071999]
[507.09500122 -7.44387674]
[521.82769775 -10.26316833]
[536.56036377 -13.08245945]
[551.29302979 -15.90175056]
[566.02569580 -18.72104263]
[580.75836182 -21.54033279]
[595.47015381 -24.46668816]
[610.16021729 -27.49995232]
[624.85034180 -30.53321457]
[639.29339600 -44.59946442]
[657.36541748 -37.71663284]
[671.96112061 -41.17587280]
[686.55676270 -44.63510895]
[701.15246582 -48.09434891]
[715.74810791 -51.55358505]
[730.17901611 -55.64618683]
[744.41766357 -60.36435699]
[758.65631104 -65.08252716]
[772.89489746 -69.80069733]
[787.13354492 -74.51887512]
[801.37219238 -79.23704529]
[815.61083984 -83.95521545]
[829.84948730 -88.67338562]
[841.77099609 -102.70989227]
[858.80639648 -98.48886108]
[872.97491455 -103.41361237]
[883.46984863 -115.25285339]
[898.03186035 -112.12303162]
[912.20037842 -117.04779053]
[926.36889648 -121.97254944]
[940.53741455 -126.89730072]
[945.12414551 -141.60336304]
[957.34783936 -150.68266296]
[972.39593506 -150.82160950]
[984.49548340 -142.17645264]
[998.66400146 -147.10121155]
[1012.83251953 -152.02597046]
[1019.77166748 -165.97181702]
[1034.21069336 -170.76437378]
[1047.46313477 -164.06304932]
[1061.63171387 -168.98780823]
[1075.80017090 -173.91256714]
[1089.96862793 -178.83732605]
[1100.27624512 -191.59219360]
[1116.43176270 -188.77610779]
[1121.81591797 -173.28601074]
[1110.88989258 -161.05677795]
[1094.89343262 -164.66880798]
[1080.72497559 -159.74404907]
[1066.55639648 -154.81929016]
[1052.38793945 -149.89453125]
[1046.14892578 -136.41825867]
[1031.85009766 -131.22201538]
[1017.75726318 -137.85746765]
[1003.58874512 -132.93270874]
[989.42028809 -128.00794983]
[985.29119873 -113.72197723]
[973.40106201 -104.49761200]
[958.18127441 -104.03796387]
[945.46215820 -112.72879028]
[931.29364014 -107.80403137]
[917.12512207 -102.87927246]
[902.95666504 -97.95452118]
[893.47515869 -86.46753693]
[877.89965820 -89.24510193]
[863.73114014 -84.32034302]
[858.18121338 -73.57474518]
[846.42053223 -69.35459137]
[834.56762695 -74.43474579]
[820.32904053 -69.71657562]
[806.09039307 -64.99840546]
[791.85174561 -60.28023148]
[777.61309814 -55.56206131]
[763.37445068 -50.84389114]
[749.13580322 -46.12571716]
[734.89715576 -41.40754700]
[747.79339600 -33.74674225]
[751.62573242 -19.24457550]
[744.19781494 -6.21285248]
[729.76684570 -2.12060595]
[716.60382080 -9.31327438]
[712.25299072 -23.66843414]
[719.20733643 -36.95791245]
[704.61169434 -33.49867630]
[690.01599121 -30.03943634]
[675.42034912 -26.58019829]
[660.82464600 -23.12096024]
[656.26696777 -13.98059559]
[647.24194336 -8.74607849]
[636.60650635 -9.35340405]
[627.88360596 -15.84310627]
[613.19348145 -12.80984211]
[598.50341797 -9.77657890]
[592.59063721 -5.34719419]
[583.57763672 -6.80766201]
[568.84497070 -3.98837066]
[554.11230469 -1.16907942]
[539.37963867 1.65021181]
[524.64697266 4.46950340]
[509.91427612 7.28879452]
[495.34414673 10.85408306]
[480.97430420 15.15613174]
[466.60446167 19.45817947]
[452.23461914 23.76022911]
[437.86477661 28.06227684]
[423.49493408 32.36432648]
[413.52142334 43.42679977]
[398.08193970 39.97248077]
[383.74374390 44.37891769]
[369.43798828 48.88950348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 87]
[4 86]
[5 85]
[6 84]
[11 83]
[12 82]
[13 81]
[15 79]
[19 75]
[20 74]
[21 73]
[22 72]
[23 71]
[24 70]
[25 69]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[55 65]
[56 64]
[57 63]
[88 215]
[89 214]
[91 213]
[93 211]
[94 210]
[95 209]
[96 208]
[97 207]
[98 206]
[106 205]
[107 204]
[108 203]
[109 202]
[110 201]
[111 200]
[112 198]
[113 197]
[114 196]
[116 192]
[117 191]
[118 190]
[119 189]
[120 188]
[121 181]
[122 180]
[123 179]
[124 178]
[125 177]
[126 176]
[127 175]
[128 174]
[130 171]
[131 170]
[133 168]
[134 167]
[135 166]
[136 165]
[140 161]
[141 160]
[142 159]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
