%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGCGGCGGCGGCCAAACUCCGCGGCGUCCCCAGGGCGCCAGCUUCGCCCUCGCCGCCGCGGCCGCGCUGCUCUUCGGCUCCGACAUGGAAGAUGGACCUUCUAAUAAUGCGAGCUGCUUCCGAAGGCUGACCGAGUGCUUCCUGAGCCCCAAAGCUAAUGGUAUAGAUAUAGAAGUCAUCCACAGAGAUGUUACAGUUGAAGAGAUGGGGGUAGAGAAGACUUUGAAGGAAAAGAAUGUAGA\
) } def
/len { sequence length } bind def

/coor [
[66.24864197 140.57572937]
[72.00621033 126.72471619]
[77.76377869 112.87371063]
[70.49514008 111.02523804]
[58.80186844 120.42031860]
[47.10859680 129.81539917]
[41.19682312 144.49058533]
[26.42909431 146.43054199]
[14.73582458 155.82562256]
[3.04255462 165.22070312]
[-8.65071487 174.61576843]
[-20.34398460 184.01084900]
[-32.03725433 193.40592957]
[-43.73052597 202.80099487]
[-55.42379379 212.19607544]
[-49.74455643 226.97123718]
[-48.91383362 242.75901794]
[-53.00105286 258.01101685]
[-61.59391022 271.23516846]
[-73.83992767 281.14160156]
[-88.53101349 286.76849365]
[-104.22264862 287.57546997]
[-119.37589264 283.49542236]
[-132.50834656 274.93994141]
[-144.08067322 284.48355103]
[-155.59184265 294.10089111]
[-167.04136658 303.79153442]
[-178.49087524 313.48217773]
[-189.94039917 323.17282104]
[-201.38990784 332.86346436]
[-212.83943176 342.55410767]
[-224.28895569 352.24475098]
[-232.47279358 367.09268188]
[-249.00596619 363.33898926]
[-249.97581482 346.41281128]
[-233.97959900 340.79522705]
[-222.53007507 331.10458374]
[-211.08055115 321.41394043]
[-199.63104248 311.72329712]
[-188.18151855 302.03265381]
[-176.73199463 292.34201050]
[-165.28248596 282.65136719]
[-162.21450806 275.94674683]
[-153.62431335 272.91122437]
[-142.05197144 263.36758423]
[-147.60189819 250.25051880]
[-149.23455811 236.08552551]
[-146.80888367 222.01844788]
[-140.51242065 209.18975830]
[-130.84693909 198.64204407]
[-118.58837891 191.23536682]
[-104.72460938 187.57707214]
[-90.37582397 187.97201538]
[-76.70401764 192.39718628]
[-64.81887054 200.50280762]
[-53.12559891 191.10772705]
[-41.43233109 181.71266174]
[-29.73905945 172.31758118]
[-18.04578972 162.92250061]
[-6.35252094 153.52743530]
[5.34074879 144.13235474]
[17.03401756 134.73727417]
[22.10941124 120.73407745]
[37.71352386 118.12212372]
[49.40679169 108.72705078]
[61.10006332 99.33197021]
[80.91106415 80.02864838]
[100.45773315 83.65840912]
[99.44553375 67.86961365]
[111.92394257 59.73704529]
[118.40753174 46.21066284]
[124.89112091 32.68427658]
[131.28820801 19.11676979]
[137.59852600 5.50869083]
[143.90885925 -8.09938812]
[150.21917725 -21.70746613]
[156.52949524 -35.31554413]
[162.83982849 -48.92362595]
[169.15014648 -62.53170395]
[175.46047974 -76.13978577]
[181.77079773 -89.74786377]
[188.08113098 -103.35594177]
[182.88110352 -118.03917694]
[189.47451782 -131.74981689]
[203.50479126 -136.61674500]
[209.81510925 -150.22482300]
[216.12544250 -163.83291626]
[222.43576050 -177.44099426]
[228.74609375 -191.04907227]
[220.03057861 -203.61836243]
[218.78491211 -218.76251221]
[225.24382019 -232.40614319]
[237.58216858 -240.92794800]
[252.42941284 -242.12164307]
[253.19616699 -251.20007324]
[258.90820312 -255.86241150]
[265.39178467 -269.38879395]
[271.87536621 -282.91519165]
[278.35894775 -296.44155884]
[275.93157959 -316.46844482]
[292.38861084 -326.64523315]
[298.52462769 -340.33276367]
[304.66067505 -354.02032471]
[310.79669189 -367.70788574]
[316.93270874 -381.39544678]
[323.06875610 -395.08297729]
[329.11724854 -408.80944824]
[335.07800293 -422.57424927]
[332.55059814 -440.82492065]
[347.06216431 -450.71057129]
[352.84661865 -464.55038452]
[358.63110352 -478.39016724]
[364.41555786 -492.22998047]
[362.59851074 -507.94647217]
[374.64538574 -516.70556641]
[380.16366577 -530.65362549]
[385.41378784 -544.70483398]
[390.66390991 -558.75604248]
[395.46282959 -572.96771240]
[399.80563354 -587.32525635]
[404.14846802 -601.68286133]
[408.49127197 -616.04040527]
[401.28659058 -629.85095215]
[405.89532471 -644.34967041]
[419.10595703 -651.13311768]
[423.44876099 -665.49072266]
[427.79156494 -679.84826660]
[432.13436890 -694.20587158]
[436.38543701 -708.59088135]
[440.54452515 -723.00274658]
[444.70364380 -737.41461182]
[438.23968506 -752.09783936]
[445.81661987 -766.23889160]
[461.62200928 -768.98999023]
[473.53137207 -758.24072266]
[472.40881348 -742.23699951]
[459.11550903 -733.25549316]
[454.95639038 -718.84362793]
[450.79730225 -704.43176270]
[451.95965576 -697.15075684]
[446.49197388 -689.86303711]
[442.14913940 -675.50549316]
[437.80633545 -661.14788818]
[433.46353149 -646.79034424]
[440.69976807 -633.82220459]
[436.50006104 -619.19970703]
[422.84884644 -611.69757080]
[418.50604248 -597.34002686]
[414.16320801 -582.98242188]
[409.82040405 -568.62487793]
[424.03201294 -573.42382812]
[436.71527100 -565.41540527]
[438.49218750 -550.52105713]
[428.04888916 -539.75360107]
[413.10717773 -541.07452393]
[404.71511841 -553.50592041]
[399.46499634 -539.45471191]
[394.21487427 -525.40350342]
[395.32104492 -522.07849121]
[394.88577271 -518.05541992]
[392.59957886 -514.05816650]
[388.48516846 -510.92114258]
[390.71597290 -496.19451904]
[378.25537109 -486.44549561]
[372.47088623 -472.60571289]
[366.68643188 -458.76589966]
[360.90194702 -444.92611694]
[365.20242310 -433.63534546]
[360.51492310 -422.06637573]
[348.84280396 -416.61349487]
[342.88204956 -402.84872437]
[343.10763550 -395.47894287]
[336.75631714 -388.94696045]
[330.62026978 -375.25939941]
[324.48425293 -361.57183838]
[318.34820557 -347.88430786]
[312.21218872 -334.19674683]
[306.07617188 -320.50918579]
[310.54895020 -311.35330200]
[309.22821045 -301.02816772]
[302.30957031 -292.95980835]
[291.88534546 -289.95797729]
[285.40176392 -276.43161011]
[278.91815186 -262.90521240]
[272.43457031 -249.37882996]
[266.03747559 -235.81132507]
[274.71829224 -223.70721436]
[276.18469238 -208.78388977]
[269.94320679 -195.03942871]
[257.57891846 -186.20648193]
[242.35417175 -184.73873901]
[236.04383850 -171.13066101]
[229.73352051 -157.52258301]
[223.42320251 -143.91450500]
[217.11286926 -130.30642700]
[222.46208191 -116.45285797]
[216.25637817 -102.56243134]
[201.68920898 -97.04561615]
[195.37887573 -83.43753815]
[189.06855774 -69.82946014]
[182.75822449 -56.22137833]
[176.44790649 -42.61330032]
[170.13758850 -29.00522232]
[163.82725525 -15.39714336]
[157.51693726 -1.78906405]
[151.20660400 11.81901455]
[144.89628601 25.42709351]
[144.93356323 32.80023193]
[138.41749573 39.16786575]
[131.93391418 52.69425201]
[125.45032501 66.22063446]
[126.92627716 81.04193115]
[113.98412323 90.14199829]
[123.15799713 78.27439880]
[136.90937805 72.28276062]
[151.84744263 73.64450836]
[164.28875732 82.02384949]
[171.16557312 95.35462189]
[170.78219604 110.34972382]
[163.23315430 123.31166840]
[150.37988281 131.04429626]
[135.39175415 131.64091492]
[121.96452332 124.95439911]
[113.40950012 112.63465881]
[119.19396973 126.47444916]
[124.97843170 140.31425476]
[130.76290894 154.15403748]
[145.47673035 159.92282104]
[151.72518921 174.43943787]
[145.80116272 189.09146118]
[131.21928406 195.18608093]
[116.63072968 189.10748291]
[110.69061279 174.46199036]
[116.92310333 159.93850708]
[111.13864136 146.09870911]
[105.35417175 132.25892639]
[99.56970215 118.41912079]
[92.30106354 116.57065582]
[90.74225616 131.48944092]
[89.18345642 146.40821838]
[94.49923706 160.43470764]
[89.14355469 174.44601440]
[75.82710266 181.35052490]
[61.28981018 177.65362549]
[52.88950729 165.22644043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 66]
[5 65]
[6 64]
[8 62]
[9 61]
[10 60]
[11 59]
[12 58]
[13 57]
[14 56]
[15 55]
[24 45]
[25 44]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[68 213]
[70 211]
[71 210]
[72 209]
[73 207]
[74 206]
[75 205]
[76 204]
[77 203]
[78 202]
[79 201]
[80 200]
[81 199]
[82 198]
[85 195]
[86 194]
[87 193]
[88 192]
[89 191]
[94 186]
[96 185]
[97 184]
[98 183]
[99 182]
[101 178]
[102 177]
[103 176]
[104 175]
[105 174]
[106 173]
[107 171]
[108 170]
[110 167]
[111 166]
[112 165]
[113 164]
[115 162]
[116 158]
[117 157]
[118 156]
[119 150]
[120 149]
[121 148]
[122 147]
[125 144]
[126 143]
[127 142]
[128 141]
[129 139]
[130 138]
[131 137]
[224 237]
[225 236]
[226 235]
[227 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
