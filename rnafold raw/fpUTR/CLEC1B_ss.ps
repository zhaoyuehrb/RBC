%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCAUGUAUCUCUGAGCAGCUAUGAAGAAGCUUCCUGGAAAACAAUAAGCAAAGGAAAACAAAUGUGUCCCAUCUCACAUGGUUCUACCCUACUAAAGACAGGAAGAUCAUAAACUGACAGAUACUGAAAUUGUAAAGUUGGAAACUACAUUUUGCAAAGUCAUUGAACUCUGAGCUCAGUUGCAGUACUCGGGAAGCC\
) } def
/len { sequence length } bind def

/coor [
[104.09265900 378.52658081]
[115.54430389 367.87792969]
[114.60712433 352.90725708]
[113.66994476 337.93655396]
[102.36531067 328.30633545]
[101.20161438 313.13729858]
[111.37930298 301.34524536]
[110.44212341 286.37454224]
[109.50494385 271.40383911]
[108.56776428 256.43316650]
[93.05233002 244.66366577]
[91.15281677 224.97578430]
[104.53834534 210.00225830]
[102.90048218 195.09194946]
[101.26262665 180.18164062]
[99.62477112 165.27131653]
[97.98690796 150.36100769]
[96.34905243 135.45069885]
[81.32783508 130.35508728]
[70.00556183 119.24616241]
[64.62516022 104.32458496]
[66.25249481 88.54630280]
[53.38092041 80.84419250]
[40.50934219 73.14208221]
[27.63776779 65.43996429]
[14.76619244 57.73785400]
[7.17124701 61.24530029]
[-1.09774256 61.45828247]
[-8.68865681 58.41633987]
[-14.38961983 52.68520355]
[-17.32238960 45.25318146]
[-17.07718468 37.36122894]
[-29.44239616 28.86996841]
[-41.80760956 20.37870598]
[-54.17282104 11.88744259]
[-66.53803253 3.39617991]
[-78.90324402 -5.09508276]
[-91.26845551 -13.58634472]
[-101.07370758 -3.81085968]
[-112.43840027 4.09129620]
[-125.00948334 9.87622452]
[-138.39671326 13.36577606]
[-152.18475342 14.45303345]
[-165.94607544 13.10558987]
[-179.25419617 9.36651325]
[-191.69691467 3.35296750]
[-202.88909912 -4.74745464]
[-212.48452759 -14.68258572]
[-220.18669128 -26.14353180]
[-225.75788879 -38.77427673]
[-229.02662659 -52.18274307]
[-229.89282227 -65.95295715]
[-228.33093262 -79.65795898]
[-224.39065552 -92.87304688]
[-218.19540405 -105.18892670]
[-230.14901733 -114.25044250]
[-242.10264587 -123.31195831]
[-254.05625916 -132.37347412]
[-263.94223022 -128.32466125]
[-274.53598022 -128.74583435]
[-283.92507935 -133.49382019]
[-290.44241333 -141.65032959]
[-292.96221924 -151.69894409]
[-291.09405518 -161.80667114]
[-302.60980225 -171.41851807]
[-314.12554932 -181.03036499]
[-325.64129639 -190.64221191]
[-337.15704346 -200.25405884]
[-352.16986084 -196.33050537]
[-366.60943604 -202.01193237]
[-374.92340088 -215.11373901]
[-373.91491699 -230.59800720]
[-363.97174072 -242.51072693]
[-348.91720581 -246.27119446]
[-334.54013062 -240.43345642]
[-326.36877441 -227.24223328]
[-327.54519653 -211.76980591]
[-316.02944946 -202.15795898]
[-304.51370239 -192.54611206]
[-292.99795532 -182.93426514]
[-281.48220825 -173.32241821]
[-262.26852417 -176.49786377]
[-246.66561890 -164.34175110]
[-244.99473572 -144.32708740]
[-233.04112244 -135.26557922]
[-221.08750916 -126.20405579]
[-209.13389587 -117.14253998]
[-196.99171448 -127.88041687]
[-182.89422607 -135.89086914]
[-167.44444275 -140.82872009]
[-151.30372620 -142.48033142]
[-135.16351318 -140.77275085]
[-119.71565247 -135.77697754]
[-105.62276459 -127.70499420]
[-93.48982239 -116.90081787]
[-83.83818054 -103.82577515]
[-77.08319092 -89.03884888]
[-73.51627350 -73.17276764]
[-73.29242706 -56.90692139]
[-76.42340088 -40.93828964]
[-82.77719116 -25.95155716]
[-70.41197968 -17.46029472]
[-58.04676819 -8.96903133]
[-45.68155670 -0.47776920]
[-33.31634521 8.01349354]
[-20.95113373 16.50475502]
[-8.58592224 24.99601936]
[13.04994011 24.53752899]
[22.46830559 44.86627960]
[35.33988190 52.56838989]
[48.21145630 60.27050400]
[61.08303070 67.97261810]
[73.95460510 75.67472839]
[82.13473511 69.16310883]
[91.85252380 65.30561829]
[102.27156830 64.43427277]
[112.49509430 66.62405396]
[121.64317322 71.68650055]
[128.92842102 79.18588257]
[133.72381592 88.47673798]
[148.62086487 86.72241211]
[163.51792908 84.96807861]
[178.41499329 83.21374512]
[193.26683044 81.11067200]
[208.06527710 78.66001892]
[220.41592407 68.77204132]
[234.23629761 74.32603455]
[249.03474426 71.87537384]
[263.83319092 69.42471313]
[273.03680420 56.85763931]
[288.07946777 54.58312988]
[300.00354004 63.43481445]
[314.80197144 60.98415756]
[329.60043335 58.53349686]
[344.39889526 56.08283615]
[359.19735718 53.63217545]
[373.99578857 51.18151474]
[388.79425049 48.73085403]
[403.59271240 46.28019333]
[418.39117432 43.82953262]
[433.17001343 41.26329803]
[447.92837524 38.58164978]
[462.68670654 35.90000153]
[477.18972778 27.11940575]
[489.64199829 38.62492371]
[482.03326416 53.77561188]
[465.36834717 50.65834808]
[450.61001587 53.33999634]
[435.85165405 56.02164459]
[429.82772827 60.31399155]
[420.84182739 58.62798691]
[406.04336548 61.07864761]
[391.24490356 63.52930832]
[376.44647217 65.97996521]
[361.64801025 68.43062592]
[346.84954834 70.88128662]
[332.05108643 73.33194733]
[317.25265503 75.78260803]
[302.45419312 78.23326874]
[294.02014160 90.45630646]
[279.04733276 93.15243530]
[266.28387451 84.22316742]
[251.48541260 86.67382812]
[236.68695068 89.12448883]
[225.39479065 98.83717346]
[210.51594543 93.45847321]
[195.71748352 95.90913391]
[193.37640381 98.55592346]
[189.63363647 100.19649506]
[184.97787476 100.18289948]
[180.16931152 98.11080933]
[165.27226257 99.86513519]
[150.37519836 101.61946869]
[135.47814941 103.37379456]
[127.88785553 122.18893433]
[111.25936127 133.81283569]
[112.89722443 148.72314453]
[114.53507996 163.63346863]
[116.17293549 178.54377747]
[117.81079865 193.45408630]
[119.44865417 208.36439514]
[129.18547058 212.75981140]
[136.16285706 220.74237061]
[139.17001343 230.82479858]
[137.72760010 241.16520691]
[132.16287231 249.90350342]
[123.53845978 255.49597168]
[124.47563934 270.46667480]
[125.41281891 285.43737793]
[126.34999847 300.40805054]
[137.91883850 310.83874512]
[138.65602112 326.03451538]
[128.64064026 336.99935913]
[129.57781982 351.97006226]
[130.51499939 366.94076538]
[143.20526123 376.07812500]
[147.00306702 391.24752808]
[140.11520386 405.28643799]
[125.79389954 411.56613159]
[110.80125427 407.12152100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 195]
[3 194]
[4 193]
[7 190]
[8 189]
[9 188]
[10 187]
[13 181]
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[22 113]
[23 112]
[24 111]
[25 110]
[26 109]
[32 107]
[33 106]
[34 105]
[35 104]
[36 103]
[37 102]
[38 101]
[55 87]
[56 86]
[57 85]
[58 84]
[64 81]
[65 80]
[66 79]
[67 78]
[68 77]
[120 174]
[121 173]
[122 172]
[123 171]
[124 167]
[125 166]
[127 164]
[128 163]
[129 162]
[132 159]
[133 158]
[134 157]
[135 156]
[136 155]
[137 154]
[138 153]
[139 152]
[140 151]
[141 149]
[142 148]
[143 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
