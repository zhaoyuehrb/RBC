%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCAGCACAGAGGUAGGAAGGACAGCAGAGCUGACAGUCACAGCAGCCCUGACAAGAGAGUUCCUGGAGCCCAAGCUCUUCUCCACAGAGGACAAGCAGGCAGCAGAGACC\
) } def
/len { sequence length } bind def

/coor [
[88.91490173 113.77580261]
[83.17672729 105.44330597]
[68.29396057 103.57158661]
[53.41119766 101.69985962]
[44.08881760 113.82588196]
[30.04129982 119.61933899]
[15.07946301 117.61688995]
[3.20822215 108.45558167]
[-2.44540739 94.67508698]
[-17.32817078 92.80335999]
[-32.21093369 90.93163300]
[-41.26040268 92.98332977]
[-47.47923279 88.79543304]
[-62.30421448 86.51071930]
[-77.12919617 84.22601318]
[-92.99597168 97.80882263]
[-113.47862244 95.60659027]
[-125.74993134 79.41682434]
[-140.73689270 78.79146576]
[-152.31452942 89.21240234]
[-167.50453186 88.36470795]
[-177.36795044 77.26296997]
[-191.47869873 84.41820526]
[-203.87232971 76.15702820]
[-218.85929871 75.53166962]
[-233.84625244 74.90631104]
[-248.83320618 74.28096008]
[-264.91064453 79.66169739]
[-274.53179932 65.70211029]
[-263.78112793 52.59257507]
[-248.20785522 59.29399872]
[-233.22090149 59.91935349]
[-218.23393250 60.54471207]
[-203.24697876 61.17007065]
[-190.20820618 53.97010040]
[-176.74259949 62.27601242]
[-165.98860168 52.03457260]
[-150.78077698 52.45528030]
[-140.11154175 63.80450439]
[-125.12458038 64.42986298]
[-120.35709381 56.01865768]
[-112.75740814 49.94762421]
[-103.38883972 47.12191391]
[-93.58309174 47.98865891]
[-84.75102234 52.46686554]
[-78.17961121 59.95279312]
[-74.84448242 69.40103149]
[-60.01950073 71.68573761]
[-45.19451904 73.97045135]
[-30.33921051 76.04887390]
[-15.45644760 77.92059326]
[-0.57368386 79.79232025]
[8.31611061 67.84087372]
[22.08612633 61.90431976]
[37.07786942 63.66897202]
[49.25340271 72.76035309]
[55.28292084 86.81710052]
[70.16568756 88.68881989]
[85.04844666 90.56054688]
[101.71784973 82.40167236]
[116.49476624 93.63015747]
[131.45854187 94.67187500]
[146.42233276 95.71360016]
[160.72653198 88.95338440]
[172.88572693 97.55589294]
[187.84950256 98.59761810]
[202.81329346 99.63933563]
[214.67614746 89.54426575]
[229.83671570 90.81388855]
[239.38771057 102.18551636]
[254.35148621 103.22724152]
[269.31527710 104.26896667]
[277.23306274 96.55470276]
[287.88687134 94.59178162]
[297.62756348 98.80224609]
[303.25695801 107.53553009]
[318.13973999 109.40725708]
[333.02249146 111.27898407]
[349.73889160 103.71382904]
[363.35281372 114.69149017]
[378.28186035 116.14878082]
[393.21090698 117.60606384]
[408.13995361 119.06335449]
[423.06900024 120.52063751]
[437.76861572 113.25065613]
[451.26251221 122.56983185]
[449.66928101 138.89140320]
[434.62792969 145.42514038]
[421.61169434 135.44967651]
[406.68264771 133.99240112]
[391.75360107 132.53511047]
[376.82458496 131.07781982]
[361.89553833 129.62052917]
[352.27053833 137.09236145]
[339.73886108 135.90806580]
[331.15075684 126.16174316]
[316.26800537 124.29002380]
[301.38525391 122.41829681]
[284.30364990 131.29983521]
[268.27355957 119.23274994]
[253.30976868 118.19102478]
[238.34597778 117.14929962]
[227.31144714 127.08783722]
[212.12120056 126.24454498]
[201.77156067 114.60311890]
[186.80778503 113.56140137]
[171.84399414 112.51967621]
[158.61010742 119.35440063]
[145.38059998 110.67738342]
[130.41682434 109.63565826]
[115.45304108 108.59394073]
[108.21179962 115.65945435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 59]
[3 58]
[4 57]
[9 52]
[10 51]
[11 50]
[13 49]
[14 48]
[15 47]
[18 40]
[19 39]
[22 36]
[24 34]
[25 33]
[26 32]
[27 31]
[61 111]
[62 110]
[63 109]
[65 107]
[66 106]
[67 105]
[70 102]
[71 101]
[72 100]
[76 98]
[77 97]
[78 96]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
