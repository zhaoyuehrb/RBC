%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUUCGGCGGUCCCGCGGGUCUGUCUCUUGCUUCAACAGUGUUUGGACGGAACAGAUCCGGGGACUCUCUUCCAGCCUCCGACCGCCCUCCGAUUUCCUCUCCGCUUGCAACCUCCGGGACCAUCUUCUCGGCCAUCUCCUGCUUCUGGGACCUGCCAGCACCGUUUUUGUGGUUAGCUCCUUCUUGCCAACCAACC\
) } def
/len { sequence length } bind def

/coor [
[27.05050087 120.34509277]
[12.27386189 122.92402649]
[0.00945032 132.91876221]
[-13.85857105 127.48487091]
[-28.63521004 130.06381226]
[-43.41184998 132.64274597]
[-58.26695251 146.26086426]
[-76.12346649 138.85600281]
[-90.81181335 141.89781189]
[-105.50015259 144.93962097]
[-119.96851349 148.89770508]
[-134.15979004 153.75646973]
[-148.35107422 158.61523438]
[-162.54235840 163.47399902]
[-176.73364258 168.33276367]
[-190.92491150 173.19151306]
[-198.03793335 178.93696594]
[-205.37742615 178.01324463]
[-219.64328003 182.64849854]
[-233.90911865 187.28375244]
[-248.17497253 191.91900635]
[-262.44082642 196.55426025]
[-276.70666504 201.18951416]
[-290.97250366 205.82476807]
[-305.23837280 210.46002197]
[-319.50421143 215.09527588]
[-326.70657349 220.72830200]
[-334.03067017 219.68939209]
[-348.36755371 224.10000610]
[-362.70446777 228.51060486]
[-367.23556519 238.41127014]
[-376.28399658 244.06315613]
[-386.72961426 243.80236816]
[-395.12399292 237.95678711]
[-409.59234619 241.91488647]
[-424.06072998 245.87297058]
[-438.52908325 249.83106995]
[-452.99743652 253.78916931]
[-460.60913086 267.63970947]
[-475.80831909 271.97097778]
[-489.57763672 264.21328735]
[-493.74795532 248.96914673]
[-485.84512329 235.28263855]
[-470.55773926 231.27371216]
[-456.95553589 239.32080078]
[-442.48718262 235.36271667]
[-428.01879883 231.40461731]
[-413.55044556 227.44651794]
[-399.08209229 223.48841858]
[-386.53353882 208.78395081]
[-367.11505127 214.17370605]
[-352.77816772 209.76310730]
[-338.44128418 205.35249329]
[-324.13946533 200.82943726]
[-309.87362671 196.19418335]
[-295.60775757 191.55891418]
[-281.34191895 186.92366028]
[-267.07608032 182.28840637]
[-252.81022644 177.65315247]
[-238.54437256 173.01789856]
[-224.27853394 168.38264465]
[-210.01268005 163.74739075]
[-195.78367615 159.00024414]
[-181.59239197 154.14147949]
[-167.40112305 149.28271484]
[-153.20983887 144.42395020]
[-139.01855469 139.56518555]
[-124.82727814 134.70643616]
[-138.67970276 128.95228577]
[-146.60772705 116.21861267]
[-145.65817261 101.24870300]
[-136.18472290 89.61883545]
[-121.71625519 85.66113281]
[-107.64225769 90.84983826]
[-99.20529175 103.25215912]
[-99.54812622 118.24824524]
[-108.54196167 130.25126648]
[-93.85362244 127.20946503]
[-79.16527557 124.16765594]
[-74.33966827 115.14823914]
[-65.15095520 110.17366028]
[-54.52283096 111.10163116]
[-45.99078751 117.86610413]
[-31.21414757 115.28716278]
[-16.43750763 112.70822906]
[-5.23002052 102.89795685]
[9.69492531 108.14739227]
[24.47156525 105.56845093]
[24.46057129 94.58272552]
[26.03906250 83.71099091]
[29.17382622 73.18199921]
[33.79889679 63.21730804]
[39.81696320 54.02659607]
[47.10138321 45.80324173]
[55.49888992 38.72028732]
[64.83277893 32.92676926]
[74.90664673 28.54459000]
[85.50852203 25.66596222]
[96.41532898 24.35145569]
[107.39756012 24.62873077]
[118.22413635 26.49195290]
[128.66725159 29.90191841]
[138.50714111 34.78687286]
[147.53677368 41.04402542]
[155.56616211 48.54172134]
[162.42631531 57.12219238]
[175.57092285 49.89588547]
[188.71551514 42.66958237]
[197.08123779 29.24104881]
[211.96170044 29.88988686]
[225.10629272 22.66358185]
[238.25090027 15.43727684]
[235.67465210 2.88858891]
[238.89012146 -10.50248909]
[248.06535339 -22.03210449]
[262.10894775 -29.05027199]
[278.76727295 -29.53953171]
[289.53918457 -39.97822189]
[300.31106567 -50.41691589]
[311.08297729 -60.85560608]
[321.85485840 -71.29429626]
[332.62673950 -81.73299408]
[332.62435913 -97.53727722]
[343.85693359 -108.65506744]
[359.66033936 -108.49036407]
[370.65875244 -97.14088440]
[370.32699585 -81.34008026]
[358.86184692 -70.46228027]
[343.06546021 -70.96109772]
[332.29354858 -60.52240372]
[321.52166748 -50.08371353]
[310.74975586 -39.64501953]
[299.97787476 -29.20632935]
[289.20596313 -18.76763725]
[292.39932251 -11.98143387]
[303.33386230 -22.24962234]
[316.47845459 -15.02327442]
[313.66766357 -0.28897971]
[298.78601074 1.59097195]
[301.97933960 8.37717533]
[316.88876343 6.73116016]
[331.79818726 5.08514547]
[346.70758057 3.43913078]
[356.39227295 -9.05017185]
[372.08190918 -10.95043087]
[384.46810913 -1.13425672]
[386.20239258 14.57458973]
[376.25579834 26.85632706]
[360.52951050 28.42441940]
[348.35360718 18.34854507]
[333.44418335 19.99456024]
[318.53479004 21.64057541]
[303.62536621 23.28658867]
[284.57659912 40.03932953]
[261.71835327 40.90834427]
[245.47720337 28.58187675]
[232.33261108 35.80818176]
[219.18800354 43.03448868]
[211.76248169 55.94614410]
[195.94183350 55.81418228]
[182.79722595 63.04048538]
[169.65263367 70.26679230]
[172.84092712 79.26953888]
[174.87080383 88.60197449]
[175.70997620 98.11567688]
[175.34512329 107.65933990]
[173.78201294 117.08119965]
[171.04551697 126.23141479]
[167.17915344 134.96444702]
[162.24443054 143.14143372]
[156.31979370 150.63233948]
[149.49948120 157.31799316]
[141.89196777 163.09211731]
[148.91091919 176.34860229]
[155.92987061 189.60508728]
[162.94880676 202.86157227]
[169.96775818 216.11805725]
[183.26322937 224.69366455]
[182.38073730 239.56210327]
[189.39968872 252.81858826]
[204.78034973 254.87155151]
[215.99362183 265.59732056]
[218.72776794 280.87161255]
[211.93144226 294.82116699]
[198.21798706 302.08206177]
[182.86050415 299.86236572]
[171.76423645 289.01556396]
[169.19595337 273.71252441]
[176.14320374 259.83752441]
[169.12425232 246.58103943]
[156.33082581 238.95362854]
[156.71127319 223.13700867]
[149.69232178 209.88052368]
[142.67338562 196.62403870]
[135.65443420 183.36755371]
[128.63548279 170.11106873]
[103.81832123 175.63711548]
[78.57080841 172.63842773]
[55.73848343 161.45298767]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 88]
[2 87]
[4 85]
[5 84]
[6 83]
[8 79]
[9 78]
[10 77]
[11 68]
[12 67]
[13 66]
[14 65]
[15 64]
[16 63]
[18 62]
[19 61]
[20 60]
[21 59]
[22 58]
[23 57]
[24 56]
[25 55]
[26 54]
[28 53]
[29 52]
[30 51]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[106 162]
[107 161]
[108 160]
[110 158]
[111 157]
[112 156]
[117 134]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[140 153]
[141 152]
[142 151]
[143 150]
[173 196]
[174 195]
[175 194]
[176 193]
[177 192]
[179 190]
[180 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
