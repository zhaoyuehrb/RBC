%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUGCCACUGCCACCGCCGCCGCCGCUGCAUCCCGCCCGGUCCGAGUCCGCCCGCCACGCCCGCCGAGCCGCUGCCGCCGCCAGUCUCUCAGCCACUCCACCCACGAG\
) } def
/len { sequence length } bind def

/coor [
[189.93469238 323.33175659]
[183.75616455 309.66333008]
[177.57765198 295.99490356]
[171.39913940 282.32647705]
[159.10630798 273.91601562]
[160.47244263 258.15390015]
[146.48986816 253.15159607]
[140.02925110 239.37788391]
[145.37094116 224.74559021]
[139.19241333 211.07716370]
[133.01390076 197.40873718]
[126.83538055 183.74031067]
[114.54254913 175.32984924]
[115.90869141 159.56773376]
[105.89728546 156.76223755]
[98.99954224 148.68922424]
[97.73883820 137.92286682]
[102.78675079 128.08050537]
[97.39141846 114.08441162]
[86.63471985 105.15216064]
[88.61249542 91.31092072]
[83.21716309 77.31483459]
[71.03393555 67.22129059]
[73.67554474 52.56280899]
[68.28021240 38.56672287]
[56.09698486 28.47318268]
[58.73859024 13.81469727]
[53.34325790 -0.18138804]
[47.94792557 -14.17747307]
[33.63008118 -14.12389374]
[20.19033623 -18.97349548]
[9.25171852 -28.11875343]
[2.12770009 -40.43471527]
[-0.33550465 -54.41736603]
[2.14058757 -68.36727142]
[9.23541069 -80.59614563]
[20.07068825 -89.63115692]
[15.07359028 -103.77431488]
[1.09247518 -110.64208221]
[-3.77381706 -125.05644226]
[2.85970640 -138.34297180]
[-2.13739061 -152.48612976]
[-7.13448763 -166.62930298]
[-23.04203606 -178.85133362]
[-19.05475998 -197.68312073]
[-24.84400368 -211.52091980]
[-38.21032715 -221.02215576]
[-36.39601517 -237.32063293]
[-21.26747322 -243.64987183]
[-8.38765240 -233.49890137]
[-11.00620461 -217.31016541]
[-5.21696091 -203.47236633]
[4.71104336 -200.38467407]
[11.37756824 -192.11968994]
[12.33309078 -181.32196045]
[7.00867414 -171.62638855]
[12.00577068 -157.48323059]
[17.00286865 -143.34007263]
[30.51085281 -137.16998291]
[35.78009415 -122.89799500]
[29.21675301 -108.77141571]
[34.21384811 -94.62825012]
[49.98262024 -94.05034637]
[64.36962128 -87.47663879]
[75.18051147 -75.87755585]
[80.75408936 -60.99245453]
[80.21755219 -45.06877899]
[73.62300873 -30.52276611]
[61.94401169 -19.57280350]
[67.33934021 -5.57671881]
[72.73467255 8.41936588]
[84.53199005 17.51181221]
[82.27629852 33.17139053]
[87.67163086 47.16747665]
[99.46894836 56.25992203]
[97.21324921 71.91950226]
[102.60858154 85.91558838]
[113.36528015 94.84783936]
[111.38750458 108.68907928]
[116.78283691 122.68516541]
[133.02987671 134.45213318]
[129.57711792 153.38922119]
[142.31187439 162.77732849]
[140.50381470 177.56178284]
[146.68232727 191.23020935]
[152.86083984 204.89863586]
[159.03936768 218.56706238]
[173.55253601 224.22441101]
[179.62371826 238.17414856]
[174.14086914 251.97538757]
[186.87562561 261.36349487]
[185.06756592 276.14794922]
[191.24607849 289.81637573]
[197.42460632 303.48480225]
[203.60311890 317.15322876]
[215.45199585 322.48638916]
[220.27871704 334.11547852]
[215.97250366 345.51760864]
[221.76174927 359.35540771]
[227.55099487 373.19320679]
[242.53416443 377.66967773]
[251.09129333 390.75817871]
[249.18197632 406.27877808]
[237.70773315 416.90307617]
[222.08634949 417.61462402]
[209.69377136 408.07745361]
[206.38137817 392.79470825]
[213.71319580 378.98245239]
[207.92395020 365.14465332]
[202.13470459 351.30685425]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 95]
[2 94]
[3 93]
[4 92]
[6 90]
[9 87]
[10 86]
[11 85]
[12 84]
[14 82]
[18 80]
[19 79]
[21 77]
[22 76]
[24 74]
[25 73]
[27 71]
[28 70]
[29 69]
[37 62]
[38 61]
[41 58]
[42 57]
[43 56]
[45 52]
[46 51]
[98 110]
[99 109]
[100 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
