%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAGCGUGACGCACUUCCGGCCUCCUAACCGUUCUCGCUAGCGGUGCGCUUCUGGCCUGUUUUGAGUCCGCGCUCAAAGGUCUCUGAGGAUCCCCGGGUGGAAACUCCUCCCGGGAGUAAAACCACACAACCACUGAGAAGACCGCUCCGGCAUCCUAGAGAGUACGCGUGUGAGCCUGGGUGCAAGGCCAAAGUAGUGACGCACUUCCGUUCACGCACCGCUUUCUGUUUUUCCUGAGCCUUUGCCUGCUAAG\
AGGGAGACCAGGUC\
) } def
/len { sequence length } bind def

/coor [
[47.13290787 209.86894226]
[36.48672485 217.43171692]
[23.62227058 217.49206543]
[14.66489124 229.52391052]
[5.70751286 241.55575562]
[-3.24986601 253.58760071]
[-12.20724487 265.61944580]
[-21.16462326 277.65130615]
[-19.07409096 293.08721924]
[-28.32954597 305.16162109]
[-43.05821228 307.05947876]
[-52.01559067 319.09133911]
[-60.97296906 331.12319946]
[-51.74327469 347.39468384]
[-50.60338593 366.01541138]
[-57.74009705 383.19644165]
[-71.66064453 395.46154785]
[-89.50469971 400.35061646]
[-107.63204956 396.91299438]
[-116.01994324 409.34857178]
[-124.40783691 421.78414917]
[-118.97433472 436.31881714]
[-123.15424347 451.26229858]
[-135.34030151 460.86853027]
[-150.84671021 461.44372559]
[-163.71095276 452.76669312]
[-168.98645020 438.17391968]
[-164.64468384 423.27664185]
[-152.35513306 413.80316162]
[-136.84339905 413.39624023]
[-128.45550537 400.96069336]
[-120.06761169 388.52511597]
[-127.09777832 379.42111206]
[-131.32160950 368.70162964]
[-132.39497375 357.21078491]
[-130.22232056 345.85675049]
[-124.96503448 335.53979492]
[-117.02952576 327.08099365]
[-107.03580475 321.15689087]
[-95.76908112 318.24536133]
[-84.11805725 318.58712769]
[-73.00482178 322.16580200]
[-64.04743958 310.13397217]
[-55.09006119 298.10211182]
[-57.49614334 283.44787598]
[-48.58348846 271.11828613]
[-33.19647217 268.69390869]
[-24.23909378 256.66207886]
[-15.28171444 244.63021851]
[-6.32433510 232.59837341]
[2.63304377 220.56652832]
[11.59042263 208.53468323]
[8.45164394 191.99610901]
[18.45659828 178.03973389]
[35.79724121 175.60775757]
[44.61402130 163.47250366]
[53.43079758 151.33724976]
[62.24757767 139.20199585]
[71.06435394 127.06673431]
[79.88113403 114.93148041]
[71.27019501 101.63520050]
[71.87447357 83.71828461]
[56.91101074 82.67193604]
[41.94755173 81.62559509]
[26.98408890 80.57924652]
[12.02062893 79.53289795]
[-2.94283175 78.48654938]
[-17.90629196 77.44020081]
[-32.40052795 85.11152649]
[-46.14549255 76.16680908]
[-45.00154495 59.80760956]
[-30.14548111 52.86286926]
[-16.85994530 62.47674179]
[-1.89648461 63.52309036]
[13.06697655 64.56943512]
[28.03043747 65.61578369]
[42.99389648 66.66213226]
[57.95735931 67.70848083]
[72.92082214 68.75482178]
[80.86960602 56.03410339]
[73.36960602 43.04372406]
[65.86960602 30.05334091]
[58.36960983 17.06296158]
[50.86960983 4.07257938]
[43.29415894 -8.87394905]
[35.64352036 -21.77618599]
[21.94961357 -29.70003891]
[22.11339569 -44.59374619]
[14.46275616 -57.49598312]
[-5.48809290 -55.96695328]
[-23.51231384 -64.48368835]
[-34.91378021 -80.74584198]
[-36.76223373 -100.44583893]
[-28.64606667 -118.40969849]
[-38.28787994 -129.90036011]
[-47.92969513 -141.39103699]
[-57.57151031 -152.88169861]
[-67.21332550 -164.37236023]
[-76.85514069 -175.86303711]
[-91.65283203 -181.46113586]
[-93.90664673 -196.18423462]
[-103.54846191 -207.67489624]
[-113.19027710 -219.16555786]
[-128.00323486 -227.41253662]
[-124.17920685 -243.92958069]
[-107.24904633 -244.82737732]
[-101.69960785 -228.80737305]
[-92.05780029 -217.31671143]
[-82.41598511 -205.82604980]
[-68.30793762 -201.04983521]
[-65.36447144 -185.50483704]
[-55.72265625 -174.01417542]
[-46.08084106 -162.52351379]
[-36.43902969 -151.03283691]
[-26.79721451 -139.54217529]
[-17.15539932 -128.05151367]
[-16.91440773 -128.18257141]
[-16.67248726 -128.31188965]
[-20.97453499 -142.68173218]
[-35.00269318 -149.96090698]
[-39.69523621 -165.05249023]
[-32.26815796 -179.00289917]
[-17.12781334 -183.53561401]
[-3.25670218 -175.96145630]
[1.11569262 -160.77404785]
[-6.60469294 -146.98377991]
[-2.30264425 -132.61393738]
[9.68848515 -131.95515442]
[20.91834450 -127.62017059]
[30.28586578 -120.01533508]
[36.86682510 -109.86847687]
[40.00500488 -98.15929413]
[39.37761307 -86.02478027]
[35.02837753 -74.64880371]
[27.36499405 -65.14662170]
[35.01563263 -52.24438477]
[48.16231537 -45.24338531]
[48.54575729 -29.42682457]
[56.19639587 -16.52458763]
[62.28927612 -12.38888741]
[63.85998917 -3.42742038]
[71.35998535 9.56296062]
[78.85998535 22.55334091]
[86.35998535 35.54372406]
[93.85998535 48.53410339]
[107.56317139 54.63515472]
[122.23538208 51.51647949]
[136.90759277 48.39780426]
[151.57981873 45.27912903]
[163.46974182 34.84169006]
[177.52757263 39.76376343]
[192.19978333 36.64508438]
[195.88822937 21.87495422]
[205.58425903 10.21846390]
[219.32357788 3.95335293]
[234.35881042 4.27353716]
[247.70896912 11.06196022]
[256.75039673 22.92443085]
[271.42260742 19.80575562]
[286.09481812 16.68708038]
[300.76702881 13.56840420]
[315.43923950 10.44972897]
[330.11145020 7.33105373]
[344.78369141 4.21237850]
[359.45590210 1.09370291]
[367.10473633 -9.26286411]
[379.36352539 -11.57322598]
[389.57943726 -5.13720512]
[401.59002686 -15.43559456]
[415.58963013 -10.35028839]
[430.29711914 -13.29803753]
[445.00463867 -16.24578667]
[459.71215820 -19.19353676]
[474.41964722 -22.14128494]
[489.12716675 -25.08903503]
[503.83465576 -28.03678322]
[518.54217529 -30.98453331]
[527.31726074 -43.85449219]
[542.27471924 -46.63441467]
[554.49023438 -38.18940735]
[569.19769287 -41.13715744]
[583.90521240 -44.08490753]
[598.61273193 -47.03265762]
[613.32025146 -49.98040390]
[628.02777100 -52.92815399]
[634.57598877 -66.87186432]
[647.92309570 -74.20044708]
[662.84967041 -72.28714752]
[673.65808105 -62.07360458]
[688.36560059 -65.02135468]
[695.70788574 -78.82804108]
[710.22644043 -84.63707733]
[725.06610107 -79.70560455]
[733.21997070 -66.36212158]
[730.83801270 -50.90701294]
[719.04504395 -40.63769913]
[703.40917969 -40.40304565]
[691.31329346 -50.31384659]
[676.60583496 -47.36609650]
[670.56823730 -33.77619553]
[657.53186035 -26.25842667]
[642.39141846 -27.87740135]
[630.97546387 -38.22064590]
[616.26800537 -35.27289963]
[601.56048584 -32.32514954]
[586.85296631 -29.37739944]
[572.14544678 -26.42965126]
[557.43792725 -23.48190117]
[549.42041016 -10.98170471]
[534.54693604 -7.78275442]
[521.48992920 -16.27702522]
[506.78240967 -13.32927608]
[492.07492065 -10.38152695]
[477.36740112 -7.43377781]
[462.65988159 -4.48602867]
[447.95239258 -1.53827941]
[433.24487305 1.40946984]
[418.53738403 4.35721874]
[407.57879639 14.44476604]
[392.52719116 9.57030201]
[379.97119141 21.85211372]
[362.57455444 15.76591682]
[347.90234375 18.88459206]
[333.23013306 22.00326729]
[318.55792236 25.12194252]
[303.88571167 28.24061775]
[289.21350098 31.35929298]
[274.54129028 34.47797012]
[259.86907959 37.59664536]
[256.43423462 52.11102676]
[246.99934387 63.74255753]
[233.39419556 70.15044403]
[218.29446411 70.01525879]
[204.69557190 63.31026077]
[195.31845093 51.31729889]
[180.64624023 54.43597412]
[169.80577087 64.65034485]
[154.69848633 59.95133972]
[140.02627563 63.07001495]
[125.35405731 66.18869019]
[110.68184662 69.30736542]
[128.26834106 94.61707306]
[116.35506439 118.97972107]
[122.29625702 132.75296021]
[128.23745728 146.52619934]
[140.80793762 156.13314819]
[138.74444580 170.88412476]
[144.68563843 184.65736389]
[150.62683105 198.43061829]
[165.40519714 204.03199768]
[171.81803894 218.47674561]
[166.06071472 233.19506836]
[151.54896545 239.45483398]
[136.89234924 233.54222107]
[130.78636169 218.96510315]
[136.85359192 204.37181091]
[130.91239929 190.59857178]
[124.97119904 176.82531738]
[112.82566833 168.20352173]
[114.46421814 152.46739197]
[108.52301788 138.69415283]
[102.58182526 124.92091370]
[97.23619843 124.90139008]
[92.01638794 123.74826050]
[83.19960785 135.88351440]
[74.38283539 148.01876831]
[65.56605530 160.15402222]
[56.74927521 172.28927612]
[47.93249512 184.42453003]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 52]
[4 51]
[5 50]
[6 49]
[7 48]
[8 47]
[11 44]
[12 43]
[13 42]
[19 32]
[20 31]
[21 30]
[55 269]
[56 268]
[57 267]
[58 266]
[59 265]
[60 264]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[68 73]
[80 145]
[81 144]
[82 143]
[83 142]
[84 141]
[85 139]
[86 138]
[88 136]
[89 135]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
[101 109]
[102 108]
[103 107]
[118 127]
[119 126]
[146 241]
[147 240]
[148 239]
[149 238]
[151 236]
[152 235]
[158 229]
[159 228]
[160 227]
[161 226]
[162 225]
[163 224]
[164 223]
[165 222]
[168 220]
[170 218]
[171 217]
[172 216]
[173 215]
[174 214]
[175 213]
[176 212]
[177 211]
[180 208]
[181 207]
[182 206]
[183 205]
[184 204]
[185 203]
[189 199]
[190 198]
[243 262]
[244 261]
[245 260]
[247 258]
[248 257]
[249 256]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
