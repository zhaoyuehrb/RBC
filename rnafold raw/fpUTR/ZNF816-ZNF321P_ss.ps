%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCCGCUUCUGUCCUGCGCCGAUUGGCACAGACCCGGAAGCGGAUGGCGUGGACUGAAAGUUGCACGGCGGCGUGUGCGUUUCCUAGUUGUCUGGUGCUGCUAUAUAGGGGACGUGGGGUCCCCACAGACCUGCAGGUUCCGGCCCCUCUUUUCUCAACCCAGAGCAAAUUGAAACGUCCGGGUGAGAGUCCGAUUUCCAAAGACUC\
) } def
/len { sequence length } bind def

/coor [
[-22.74443626 353.74475098]
[-16.69809532 337.90560913]
[-16.69809532 322.90560913]
[-16.69809532 307.90560913]
[-16.69809532 292.90560913]
[-30.58812332 287.24282837]
[-41.07562256 297.96719360]
[-51.56312561 308.69158936]
[-62.05062485 319.41595459]
[-72.53812408 330.14035034]
[-83.02562714 340.86471558]
[-93.51313019 351.58908081]
[-104.00063324 362.31347656]
[-114.48812866 373.03784180]
[-113.97250366 390.52365112]
[-126.02539825 402.73196411]
[-142.84086609 402.45135498]
[-153.16754150 413.33068848]
[-163.49420166 424.21002197]
[-167.38307190 439.54583740]
[-181.75688171 443.45010376]
[-192.08354187 454.32943726]
[-202.41021729 465.20877075]
[-205.71229553 481.27203369]
[-221.35774231 486.18649292]
[-233.25186157 474.89657593]
[-229.15899658 459.01638794]
[-213.28955078 454.88208008]
[-202.96287537 444.00274658]
[-192.63621521 433.12341309]
[-189.48596191 418.56576538]
[-174.37353516 413.88336182]
[-164.04687500 403.00402832]
[-153.72019958 392.12469482]
[-155.85479736 379.41748047]
[-150.19627380 367.62496948]
[-138.60847473 361.14938354]
[-125.21250916 362.55035400]
[-114.72501373 351.82598877]
[-104.23751068 341.10159302]
[-93.75000763 330.37722778]
[-83.26250458 319.65283203]
[-72.77500916 308.92846680]
[-62.28750610 298.20407104]
[-51.80000305 287.47970581]
[-41.31250381 276.75531006]
[-32.87678528 250.00691223]
[-9.23028469 246.08113098]
[-0.81566644 233.66363525]
[7.59895229 221.24613953]
[3.06880355 203.50935364]
[13.11422443 187.82489014]
[31.74823189 184.40611267]
[39.78940582 171.74359131]
[47.83057785 159.08106995]
[55.87174988 146.41854858]
[63.91292191 133.75601196]
[71.95409393 121.09349060]
[63.14732742 133.23600769]
[48.75051498 137.44692993]
[34.78849411 131.96405029]
[27.10414696 119.08185577]
[28.91324234 104.19135284]
[39.45870972 93.52396393]
[54.32743454 91.54382324]
[67.29792786 99.08053589]
[54.81813812 90.75859070]
[42.33834457 82.43665314]
[29.85855103 74.11470795]
[17.37875557 65.79276276]
[0.98775393 65.27597046]
[-6.52066183 50.69667816]
[2.57752395 37.05281448]
[18.92287827 38.38001251]
[25.70070076 53.31296921]
[38.18049240 61.63491440]
[50.66028595 69.95685577]
[63.14007950 78.27880096]
[75.61987305 86.60074615]
[88.09967041 78.27880096]
[85.21439362 63.55891037]
[82.32912445 48.83901596]
[79.44384766 34.11912537]
[76.55857849 19.39923477]
[73.67330933 4.67934322]
[70.78803253 -10.04054832]
[67.90276337 -24.76043892]
[65.01748657 -39.48033142]
[62.13221359 -54.20022202]
[49.29963303 -63.02986526]
[46.58324814 -77.99903107]
[55.08004379 -90.17852020]
[52.19477081 -104.89841461]
[41.94747162 -116.95259857]
[47.09217834 -130.93048096]
[33.31678772 -138.33134460]
[27.56945419 -152.87445068]
[32.56388855 -167.69300842]
[45.94187164 -175.79014587]
[61.38673401 -173.34263611]
[71.60588074 -161.50611877]
[71.77413940 -145.86943054]
[61.81206894 -133.81576538]
[71.85299683 -122.81443787]
[66.91466522 -107.78368378]
[69.79993439 -93.06379700]
[82.26597595 -84.99326324]
[85.40174103 -70.10630798]
[76.85210419 -57.08549500]
[79.73738098 -42.36560440]
[82.62265015 -27.64571190]
[85.50792694 -12.92582035]
[88.39319611 1.79407084]
[91.27847290 16.51396179]
[94.16374207 31.23385429]
[97.04901123 45.95374680]
[99.93428802 60.67363739]
[102.81955719 75.39352417]
[116.98569489 80.32511902]
[128.38815308 70.57915497]
[139.79061890 60.83319092]
[151.19308472 51.08722305]
[162.59555054 41.34125900]
[173.99800110 31.59529305]
[171.92431641 22.11742020]
[173.43594360 12.59244251]
[178.28361511 4.32219744]
[185.76501465 -1.57854772]
[194.82630920 -4.33230257]
[204.21046448 -3.60111761]
[212.63162231 0.47252655]
[224.59396362 -8.57747364]
[236.55630493 -17.62747383]
[248.51863098 -26.67747307]
[254.39561462 -41.98737717]
[270.63299561 -44.28511429]
[280.52716064 -31.20697403]
[273.89981079 -16.20662308]
[257.56863403 -14.71513653]
[245.60629272 -5.66513681]
[233.64396667 3.38486338]
[221.68162537 12.43486309]
[220.58668518 32.84546661]
[204.55696106 45.99623871]
[183.74397278 42.99775696]
[172.34150696 52.74372101]
[160.93904114 62.48968506]
[149.53659058 72.23564911]
[138.13412476 81.98162079]
[126.73165894 91.72758484]
[127.67830658 99.16760254]
[139.61820984 90.08802795]
[153.45126343 95.88861084]
[155.34423828 110.76868439]
[143.40412903 119.84799957]
[129.57159424 114.04763794]
[130.51824951 121.48765564]
[143.99798584 128.06768799]
[157.47770691 134.64770508]
[170.95744324 141.22773743]
[180.04211426 142.17999268]
[184.58778381 148.00738525]
[197.96806335 154.78738403]
[211.34832764 161.56738281]
[227.15559387 160.90322876]
[235.01129150 173.55776978]
[248.39157104 180.33775330]
[260.17855835 170.69477844]
[274.87036133 166.68594360]
[289.92153931 169.00579834]
[302.72439575 177.25242615]
[311.06076050 189.99703979]
[313.48626709 205.03155518]
[309.58074951 219.75115967]
[300.02081299 231.60559082]
[286.46276855 238.54098511]
[271.25567627 239.35575867]
[257.03421021 233.90875244]
[246.26235962 223.14367676]
[240.80638123 208.92564392]
[241.61158752 193.71803284]
[228.23130798 186.93803406]
[213.38108826 188.08712769]
[204.56834412 174.94764709]
[191.18806458 168.16766357]
[177.80780029 161.38766479]
[164.37742615 154.70747375]
[150.89768982 148.12744141]
[137.41795349 141.54740906]
[123.93821716 134.96739197]
[84.61662292 129.13465881]
[76.57544708 141.79719543]
[68.53427887 154.45971680]
[60.49310303 167.12223816]
[52.45193100 179.78475952]
[44.41075516 192.44729614]
[49.20960617 203.32421875]
[48.17269516 215.04708862]
[41.67284775 224.71383667]
[31.42081070 229.98748779]
[20.01644707 229.66076660]
[11.60182858 242.07826233]
[3.18721032 254.49575806]
[9.66094208 265.86883545]
[8.43898582 280.40533447]
[-1.69809592 292.90560913]
[-1.69809592 307.90560913]
[-1.69809592 322.90560913]
[-1.69809592 337.90560913]
[4.34824371 353.74475098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[6 46]
[7 45]
[8 44]
[9 43]
[10 42]
[11 41]
[12 40]
[13 39]
[14 38]
[17 34]
[18 33]
[19 32]
[21 30]
[22 29]
[23 28]
[48 203]
[49 202]
[50 201]
[53 196]
[54 195]
[55 194]
[56 193]
[57 192]
[58 191]
[66 79]
[67 78]
[68 77]
[69 76]
[70 75]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
[88 110]
[89 109]
[92 106]
[93 105]
[95 103]
[119 150]
[120 149]
[121 148]
[122 147]
[123 146]
[124 145]
[131 142]
[132 141]
[133 140]
[134 139]
[157 190]
[158 189]
[159 188]
[160 187]
[162 186]
[163 185]
[164 184]
[166 182]
[167 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
