%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCUGUCCUGAGCCGACACCUGCACAGUGGCGAGACCAAGGACCCAGAGAGAAAGGUGAGAGUGCAGCCGGGGAGGCUGAGGAUCGGCGGAGCUGGAAGAGUGAGGGUGAAGGCAAGAAGUAGAGCACAGAAGCAAAGAUUUUAAGAGGAAAGAAGACAUCUGAACCCAACACCACCCUAAACCACAGGCUGCAGGGUUGGC\
) } def
/len { sequence length } bind def

/coor [
[45.05456543 439.56347656]
[42.75368881 454.38595581]
[51.02472687 468.13259888]
[45.29926300 483.11920166]
[29.96938705 487.84936523]
[16.79486656 478.69448853]
[15.88206482 462.67742920]
[27.93120766 452.08508301]
[30.23208237 437.26260376]
[23.47924805 429.58462524]
[22.04007721 419.23953247]
[26.62954330 409.61325073]
[35.94901657 403.99105835]
[38.70526123 389.24645996]
[41.46150208 374.50186157]
[44.21774673 359.75726318]
[46.97398758 345.01266479]
[49.73023224 330.26806641]
[47.86814117 323.11148071]
[52.64411926 315.31838989]
[55.62709045 300.61798096]
[58.61006546 285.91760254]
[61.59303665 271.21719360]
[64.57601166 256.51678467]
[67.55898285 241.81637573]
[70.42868042 227.09344482]
[63.71125412 210.88357544]
[75.80079651 196.99725342]
[78.32965088 182.21195984]
[80.85851288 167.42666626]
[83.38736725 152.64138794]
[76.97251129 150.16801453]
[70.91487122 146.91641235]
[65.30841064 142.93702698]
[60.24010086 138.29158020]
[55.78856277 133.05212402]
[52.02285767 127.29996490]
[49.00139236 121.12431335]
[46.77104568 114.62097168]
[45.36640930 107.89081573]
[44.80927277 101.03826141]
[45.10828018 94.16960144]
[46.25879288 87.39138031]
[48.24296570 80.80875397]
[51.03001785 74.52382660]
[38.78706360 65.85721588]
[26.54411125 57.19061279]
[14.30115795 48.52400589]
[4.10783720 54.90891647]
[-7.60817480 57.47296906]
[-19.46797371 55.93830109]
[-30.08378983 50.50804138]
[-38.22136307 41.83978271]
[-42.94345474 30.96602058]
[-43.71773529 19.17120552]
[-40.47671509 7.84002161]
[-56.11741257 5.45691967]
[-61.39738083 -8.47043419]
[-73.22702026 -17.69321632]
[-85.05665588 -26.91599846]
[-97.73354340 -20.99618912]
[-111.65783691 -21.11647987]
[-124.11162567 -27.19635773]
[-132.68861389 -37.99761963]
[-135.75898743 -51.37609482]
[-132.77891541 -64.70717621]
[-144.46511841 -74.11103058]
[-156.15133667 -83.51488495]
[-167.83753967 -92.91874695]
[-179.52374268 -102.32260132]
[-195.56417847 -102.03298187]
[-205.68023682 -114.48468781]
[-202.11174011 -130.12582397]
[-187.59614563 -136.95787048]
[-173.26855469 -129.73983765]
[-170.11988831 -114.00881195]
[-158.43368530 -104.60494995]
[-146.74746704 -95.20109558]
[-135.06126404 -85.79724121]
[-123.37505341 -76.39337921]
[-108.45718384 -82.59714508]
[-92.35335541 -80.42029572]
[-79.46997833 -70.36293793]
[-73.38035583 -55.09447861]
[-75.83386993 -38.74563217]
[-64.00423431 -29.52285194]
[-52.17459869 -20.30006981]
[-37.38003922 -18.57664299]
[-31.25393295 -3.98961449]
[-14.79683781 -11.56024265]
[3.31042004 -9.72538948]
[18.05142975 1.09337544]
[25.29838371 17.97362518]
[22.96776581 36.28105164]
[35.21072006 44.94765854]
[47.45367432 53.61426544]
[59.69662476 62.28087234]
[69.87330627 53.74552155]
[81.79422760 47.88815308]
[94.76921082 45.04790115]
[108.04703522 45.38919830]
[120.85896301 48.89228821]
[132.46322632 55.35435486]
[142.18795776 64.40126038]
[149.47015381 75.50922394]
[163.69256592 70.74235535]
[177.91497803 65.97547913]
[192.13739014 61.20861053]
[206.35978699 56.44173813]
[220.58219910 51.67486572]
[220.31193542 35.72838211]
[224.93792725 20.48753166]
[234.00204468 7.41672134]
[246.62034607 -2.23235059]
[261.56930542 -7.54054689]
[277.40447998 -8.00883961]
[292.60003662 -3.60519195]
[305.69573975 5.23361063]
[317.38195801 -4.17024660]
[329.06817627 -13.57410336]
[340.75436401 -22.97796059]
[352.44058228 -32.38181686]
[351.37664795 -49.26003265]
[360.49035645 -63.30830383]
[376.02520752 -69.10005188]
[391.79199219 -64.53912354]
[403.33200073 -74.12182617]
[404.54049683 -89.87983704]
[416.59182739 -100.10434723]
[432.33618164 -98.72932434]
[442.43270874 -86.57054138]
[440.89129639 -70.84160614]
[428.62646484 -60.87419891]
[412.91470337 -62.58181381]
[401.37469482 -52.99911118]
[403.46997070 -39.81069565]
[398.73565674 -27.20855904]
[388.30868530 -18.52335548]
[374.84524536 -16.10678482]
[361.84445190 -20.69561005]
[350.15823364 -11.29175186]
[338.47201538 -1.88789511]
[326.78582764 7.51596212]
[315.09960938 16.91981888]
[317.65994263 21.90427399]
[319.65652466 27.14009285]
[321.06512451 32.56374359]
[321.86865234 38.10941696]
[322.05734253 43.70982361]
[336.84262085 46.23868179]
[350.93014526 35.87200165]
[367.82440186 38.84006500]
[377.15963745 52.82605743]
[391.98211670 55.12693405]
[406.80459595 57.42780685]
[420.55120850 49.15677261]
[435.53781128 54.88223267]
[440.26797485 70.21211243]
[431.11312866 83.38662720]
[415.09606934 84.29943085]
[404.50372314 72.25028992]
[389.68124390 69.94941711]
[374.85876465 67.64853668]
[365.62133789 76.63649750]
[352.70071411 78.69191742]
[340.78076172 72.84271240]
[334.31375122 61.02397537]
[319.52847290 58.49511719]
[311.64324951 73.60419464]
[299.19396973 85.28210449]
[283.56396484 92.20739746]
[266.49789429 93.58808136]
[249.90702820 89.25210571]
[235.65510559 79.66862488]
[225.34907532 65.89727783]
[211.12666321 70.66414642]
[196.90425110 75.43102264]
[182.68183899 80.19789124]
[168.45944214 84.96475983]
[154.23703003 89.73163605]
[153.33604431 114.22534943]
[141.91952515 135.91444397]
[122.23830414 150.52279663]
[98.17266083 155.17024231]
[95.64380646 169.95553589]
[93.11494446 184.74082947]
[90.58608246 199.52612305]
[97.38895416 210.48867798]
[94.97459412 222.75424194]
[85.17327118 229.84968567]
[86.67288208 238.86596680]
[82.25938416 244.79934692]
[79.27641296 259.49975586]
[76.29344177 274.20016479]
[73.31047058 288.90057373]
[70.32749176 303.60095215]
[67.34452057 318.30136108]
[64.47483063 333.02429199]
[61.71858597 347.76889038]
[58.96234131 362.51348877]
[56.20610046 377.25808716]
[53.44985580 392.00268555]
[50.69361496 406.74728394]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[13 203]
[14 202]
[15 201]
[16 200]
[17 199]
[18 198]
[20 197]
[21 196]
[22 195]
[23 194]
[24 193]
[25 192]
[26 190]
[28 187]
[29 186]
[30 185]
[31 184]
[45 97]
[46 96]
[47 95]
[48 94]
[56 89]
[58 87]
[59 86]
[60 85]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[105 180]
[106 179]
[107 178]
[108 177]
[109 176]
[110 175]
[118 144]
[119 143]
[120 142]
[121 141]
[122 140]
[126 135]
[127 134]
[149 168]
[150 167]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
