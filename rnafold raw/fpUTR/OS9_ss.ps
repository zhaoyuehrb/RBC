%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGACCAAUCACGGACAGCGAUUGAUAUUUCUAAUCGUCGUGAUCCACCUCCCCAGGACCUUGGAGCCACGUUUACAAAUAGGAAUAGGGUACGUGGGAGGGAUAGAACGUACAGCCAAUAAAAUCAUGUGGCGCCGAUGGGCGUGUUGAGGCCGCUGCCUGGCUUAGGGCGGAAACAGAUUCUCUGCAUAAGAAGGGGAACGAAAG\
) } def
/len { sequence length } bind def

/coor [
[113.14140320 206.40101624]
[98.16238403 207.19406128]
[84.47436523 201.05906677]
[75.09870911 189.35021973]
[72.10491943 174.65200806]
[76.15380096 160.20880127]
[86.35328674 149.20753479]
[90.57637787 134.81430054]
[79.96977997 145.42089844]
[69.36317444 156.02749634]
[58.75657272 166.63409424]
[48.14997101 177.24070740]
[37.54336929 187.84730530]
[36.56881714 192.08409119]
[34.50343323 195.45072937]
[31.75514984 197.71099854]
[28.76672745 198.78555298]
[25.96149445 198.74977112]
[14.73383236 208.69660950]
[3.50617123 218.64344788]
[-7.72148991 228.59028625]
[-18.94915199 238.53713989]
[-30.17681313 248.48397827]
[-41.32903671 258.51531982]
[-52.40518951 268.63058472]
[-56.84428024 284.41751099]
[-72.80033112 288.20385742]
[-83.85913086 276.09454346]
[-78.64432526 260.54663086]
[-62.52046585 257.55444336]
[-51.44431686 247.43916321]
[-48.62443161 240.60571289]
[-40.12365341 237.25631714]
[-28.89599037 227.30947876]
[-17.66832924 217.36262512]
[-6.44066858 207.41578674]
[4.78699255 197.46894836]
[16.01465416 187.52210999]
[26.93676758 177.24070740]
[37.54336929 166.63409424]
[48.14997101 156.02749634]
[58.75657272 145.42089844]
[69.36317444 134.81430054]
[79.96977997 124.20769501]
[72.74693298 110.87831116]
[72.92825317 96.73602295]
[79.49351501 85.36772919]
[89.91915131 79.19848633]
[88.11110687 64.30785370]
[86.30305481 49.41721725]
[84.49500275 34.52658463]
[72.33793640 24.78782463]
[70.71643829 9.66084957]
[80.07577515 -1.86904156]
[78.26772308 -16.75967407]
[68.92340851 -29.52659988]
[75.07019043 -43.09370422]
[65.72588348 -55.86063004]
[71.87266541 -69.42773438]
[70.06461334 -84.31836700]
[68.14416504 -99.19492340]
[66.11141968 -114.05654907]
[64.07868195 -128.91818237]
[62.04594040 -143.77980042]
[52.50987244 -156.40414429]
[58.45104599 -170.06253052]
[56.41830444 -184.92416382]
[54.38556671 -199.78579712]
[52.35282516 -214.64741516]
[50.32008362 -229.50904846]
[48.28734207 -244.37066650]
[46.25460052 -259.23229980]
[31.33346748 -261.52136230]
[17.67570305 -267.91571045]
[6.38454342 -277.88940430]
[-1.63060784 -290.62774658]
[-5.72741699 -305.09387207]
[-5.58209324 -320.11300659]
[-1.21496058 -334.46810913]
[7.01187992 -346.99826050]
[18.42455864 -356.69271851]
[32.09263229 -362.77227783]
[30.05989075 -377.63391113]
[20.96087646 -381.01629639]
[13.76283360 -387.44277954]
[9.42718506 -395.99847412]
[8.51233196 -405.48809814]
[11.10205078 -414.60308838]
[16.79974365 -422.10186768]
[24.78853607 -426.97906494]
[23.65682793 -441.93630981]
[22.52511787 -456.89355469]
[21.39340782 -471.85079956]
[20.26169968 -486.80804443]
[19.12998962 -501.76528931]
[4.89924097 -507.28332520]
[-5.52176952 -518.43524170]
[-10.06394291 -533.00683594]
[-7.82542706 -548.10491943]
[0.74931949 -560.73168945]
[13.95777416 -568.38018799]
[29.17738914 -569.53179932]
[43.38629913 -563.95776367]
[53.76330948 -552.76489258]
[58.24806595 -538.17553711]
[55.95011139 -523.08636475]
[47.32571030 -510.49343872]
[34.08723831 -502.89700317]
[35.21894455 -487.93975830]
[36.35065460 -472.98251343]
[37.48236465 -458.02526855]
[38.61407471 -443.06802368]
[39.74578476 -428.11077881]
[56.31348419 -416.14315796]
[58.69926453 -395.54907227]
[44.92152023 -379.66662598]
[46.95425797 -364.80502319]
[61.75287247 -362.61904907]
[75.34963989 -356.34536743]
[86.63906097 -346.48458862]
[94.70059204 -333.82946777]
[98.87370300 -319.40097046]
[98.81197357 -304.36605835]
[94.51186371 -289.94326782]
[86.31367493 -277.30386353]
[74.87464142 -267.47680664]
[61.11623001 -261.26504517]
[63.14897156 -246.40341187]
[65.18170929 -231.54177856]
[67.21445465 -216.68016052]
[69.24719238 -201.81852722]
[71.27993011 -186.95690918]
[73.31267548 -172.09527588]
[82.70334625 -160.53393555]
[76.90756989 -145.81254578]
[78.94030762 -130.95091248]
[80.97305298 -116.08928680]
[83.00579071 -101.22766113]
[87.02774048 -95.02509308]
[84.95524597 -86.12641907]
[86.76329803 -71.23578644]
[95.97828674 -59.53393555]
[89.96082306 -44.90175247]
[99.17581940 -33.19990540]
[93.15835571 -18.56772423]
[94.96640778 -3.67709184]
[106.81306458 5.27792549]
[108.85880280 20.35338783]
[99.38563538 32.71853256]
[101.19368744 47.60916519]
[103.00173950 62.49980164]
[104.80978394 77.39043427]
[126.10031128 92.10655212]
[122.47300720 121.95873260]
[134.13969421 131.38679504]
[149.73637390 134.04281616]
[154.77220154 148.06028748]
[170.36886597 150.71630859]
[175.40469360 164.73379517]
[187.07138062 174.16184998]
[198.73806763 183.58992004]
[214.24481201 182.11393738]
[225.94218445 191.84153748]
[227.25373840 206.63394165]
[238.92042542 216.06201172]
[250.58711243 225.49008179]
[262.25381470 234.91813660]
[275.14035034 234.33581543]
[284.66378784 242.43060303]
[286.07101440 254.44650269]
[297.59396362 264.04968262]
[309.11694336 273.65289307]
[320.63989258 283.25607300]
[332.16287231 292.85928345]
[346.84783936 288.13116455]
[361.75195312 292.11502075]
[372.11935425 303.53958130]
[374.64181519 318.75930786]
[368.51446533 332.91769409]
[355.69250488 341.49676514]
[340.26739502 341.75906372]
[327.16119385 333.62081909]
[320.55606079 319.67892456]
[322.55966187 304.38223267]
[311.03671265 294.77905273]
[299.51373291 285.17584229]
[287.99078369 275.57266235]
[276.46780396 265.96945190]
[259.04019165 263.91751099]
[252.82574463 246.58482361]
[241.15905762 237.15676880]
[229.49237061 227.72869873]
[217.82568359 218.30064392]
[203.08746338 220.12294006]
[191.12147522 210.72775269]
[189.30999756 195.25660706]
[177.64331055 185.82853699]
[165.97662354 176.40048218]
[151.21443176 174.41882324]
[145.34413147 159.72697449]
[130.58193970 157.74533081]
[124.71163940 143.05348206]
[113.04494476 133.62542725]
[118.76337433 147.49263000]
[130.06573486 157.35450745]
[135.61705017 171.28945923]
[134.19200134 186.22161865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 44]
[9 43]
[10 42]
[11 41]
[12 40]
[13 39]
[18 38]
[19 37]
[20 36]
[21 35]
[22 34]
[23 33]
[24 31]
[25 30]
[48 152]
[49 151]
[50 150]
[51 149]
[54 146]
[55 145]
[57 143]
[59 141]
[60 140]
[61 138]
[62 137]
[63 136]
[64 135]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[72 127]
[82 117]
[83 116]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[154 203]
[155 202]
[157 200]
[159 198]
[160 197]
[161 196]
[164 193]
[165 192]
[166 191]
[167 190]
[170 188]
[171 187]
[172 186]
[173 185]
[174 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
