%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGCGCACUGAGAACUCACACCAUAUGUGUCCUGUUCCAGUGCGCGGGUCUGUGGAGAGCCGGGUGCGAGCGGCGGCAGCACGAGGGGAAAAGAGCUGAGCGGAGACCAAAGUCAGCCGGGAGACAGUGGGUCUGUGAGAGACCGAAUAGAGGGGCUGGGGCCACGAGCGCCAUUGACAAGCA\
) } def
/len { sequence length } bind def

/coor [
[-115.89775085 397.19955444]
[-115.02644348 382.22543335]
[-126.28652954 392.13555908]
[-137.54661560 402.04568481]
[-148.80670166 411.95578003]
[-160.06678772 421.86590576]
[-171.32687378 431.77603149]
[-182.58695984 441.68615723]
[-193.84703064 451.59628296]
[-205.10711670 461.50640869]
[-216.36720276 471.41653442]
[-220.75500488 479.45474243]
[-227.90365601 481.39733887]
[-239.33039856 491.11483765]
[-250.75714111 500.83230591]
[-262.18389893 510.54980469]
[-263.26681519 527.99871826]
[-276.36895752 539.05694580]
[-293.08062744 537.26483154]
[-304.34072876 547.17498779]
[-315.60079956 557.08508301]
[-326.86090088 566.99517822]
[-329.31268311 582.84979248]
[-343.30798340 590.69268799]
[-358.11077881 584.50750732]
[-362.36566162 569.03900146]
[-352.80862427 556.15325928]
[-336.77102661 555.73510742]
[-325.51092529 545.82501221]
[-314.25085449 535.91485596]
[-302.99075317 526.00476074]
[-303.97586060 513.14392090]
[-297.26751709 501.89978027]
[-285.12637329 496.49951172]
[-271.90136719 499.12304688]
[-260.47463989 489.40557861]
[-249.04789734 479.68807983]
[-237.62115479 469.97058105]
[-226.27732849 460.15643311]
[-215.01724243 450.24630737]
[-203.75715637 440.33618164]
[-192.49707031 430.42608643]
[-181.23698425 420.51596069]
[-169.97689819 410.60583496]
[-158.71682739 400.69570923]
[-147.45674133 390.78558350]
[-136.19665527 380.87545776]
[-124.93656921 370.96536255]
[-114.28503418 360.40386963]
[-104.27966309 349.22833252]
[-94.27429199 338.05279541]
[-91.54945374 323.40954590]
[-76.57983398 318.28890991]
[-66.57446289 307.11337280]
[-56.56909561 295.93783569]
[-46.56372452 284.76229858]
[-48.04301834 274.62347412]
[-43.59297562 265.15060425]
[-34.46963120 259.58706665]
[-23.57108498 259.98379517]
[-13.19200134 249.15444946]
[-2.90524101 238.23738098]
[7.28845501 227.23335266]
[17.38835144 216.14317322]
[27.39372063 204.96763611]
[37.39908981 193.79209900]
[40.12393188 179.14886475]
[55.09354782 174.02821350]
[57.81838989 159.38496399]
[72.78800964 154.26431274]
[82.79338074 143.08879089]
[92.79874420 131.91325378]
[70.82629395 107.20442963]
[82.23001099 79.16391754]
[79.94641113 64.33876801]
[70.01478577 56.08581161]
[68.42850494 43.67478943]
[75.49773407 33.84120560]
[73.46620941 18.97941208]
[71.43467712 4.11761904]
[69.40315247 -10.74417400]
[59.86811447 -23.36929131]
[65.81040192 -37.02719879]
[51.56155396 -42.76007843]
[42.10076904 -54.85921478]
[39.97294617 -70.06999969]
[45.75046158 -84.30080414]
[57.87919235 -93.72362518]
[73.09657288 -95.80375671]
[87.30919647 -89.98166656]
[96.69394684 -77.82345581]
[98.72637177 -62.59963226]
[92.85976410 -48.40532303]
[80.67219543 -39.05872726]
[90.06192780 -27.49662399]
[84.26494598 -12.77570152]
[86.29647064 2.08609176]
[88.32800293 16.94788551]
[90.35952759 31.80967903]
[101.84502411 45.06520844]
[94.77156067 62.05516815]
[97.05516052 76.88032532]
[110.92550659 82.59114075]
[117.41995239 68.16433716]
[132.25349426 66.81704712]
[144.31346130 57.89754868]
[156.37341309 48.97805023]
[168.43336487 40.05855179]
[180.49333191 31.13905525]
[180.11517334 14.23981667]
[189.78135681 0.57578439]
[205.52682495 -4.59050083]
[221.09403992 0.58597940]
[233.00079346 -8.53701973]
[244.90754700 -17.66001892]
[244.37773132 -33.16804504]
[253.09236145 -46.00684738]
[267.70050049 -51.23963928]
[282.58499146 -46.85430908]
[292.02249146 -34.53710556]
[292.38403320 -19.02424431]
[283.53063965 -6.28073597]
[268.86660767 -1.20672023]
[254.03054810 -5.75326014]
[242.12379456 3.36973858]
[230.21702576 12.49273777]
[231.79292297 25.76285744]
[226.55865479 38.17610168]
[215.78497314 46.44316864]
[202.22540283 48.31618118]
[189.41282654 43.19901276]
[177.35287476 52.11850739]
[165.29290771 61.03800583]
[153.23295593 69.95750427]
[141.17298889 78.87699890]
[135.54116821 92.66582489]
[119.84500885 94.65110016]
[120.86077118 102.08200073]
[135.72061157 100.03625488]
[150.58435059 98.01901245]
[152.61575317 112.88082123]
[137.75602722 114.92648315]
[122.89229584 116.94378662]
[123.90806580 124.37468719]
[137.91935730 129.73037720]
[150.84710693 121.14825439]
[166.34886169 121.83753967]
[178.46389771 131.53320312]
[182.53370667 146.50704956]
[176.99339294 161.00134277]
[163.97331238 169.44271851]
[148.47993469 168.58531189]
[136.47080994 158.75880432]
[132.56365967 143.74168396]
[118.55236816 138.38598633]
[103.97428131 141.91862488]
[93.96891022 153.09416199]
[83.96354675 164.26968384]
[80.52305603 179.71228027]
[66.26908112 184.03358459]
[62.82859421 199.47616577]
[48.57462692 203.79747009]
[38.56925583 214.97300720]
[28.56388664 226.14854431]
[25.16031075 234.65040588]
[18.29248047 237.42704773]
[8.09878349 248.43107605]
[4.55133104 256.87390137]
[-2.36265993 259.53353882]
[-12.74174309 270.36288452]
[-16.63070679 290.12738037]
[-35.38819122 294.76766968]
[-45.39355850 305.94320679]
[-55.39892960 317.11874390]
[-65.40429688 328.29428101]
[-68.84478760 343.73687744]
[-83.09875488 348.05816650]
[-93.10412598 359.23370361]
[-103.10949707 370.40924072]
[-88.12796021 369.66528320]
[-76.08733368 378.61087036]
[-72.47473907 393.16934204]
[-78.93649292 406.70614624]
[-92.52786255 413.05239868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 48]
[3 47]
[4 46]
[5 45]
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[13 38]
[14 37]
[15 36]
[16 35]
[19 31]
[20 30]
[21 29]
[22 28]
[49 179]
[50 178]
[51 177]
[53 175]
[54 174]
[55 173]
[56 172]
[60 170]
[61 169]
[62 167]
[63 166]
[64 164]
[65 163]
[66 162]
[68 160]
[70 158]
[71 157]
[72 156]
[74 102]
[75 101]
[78 99]
[79 98]
[80 97]
[81 96]
[83 94]
[103 137]
[105 135]
[106 134]
[107 133]
[108 132]
[109 131]
[113 126]
[114 125]
[115 124]
[144 155]
[145 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
