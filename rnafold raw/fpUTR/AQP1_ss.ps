%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAAAAAGUUGGCAGGCCGACAGCACAGCCGUGUCUGCAUCCAUCCAGAGGAGGUCUGUGUGGUGUGGGGCGGGCCAGGAGCGAAGAGAGGCCUUCCUCCCUUUGUGCUCCCCCCGCCCCCCGGCCCUAUAAAUAGGCCCAGCCCAGGCUGUGGCUCAGCUCUCAGAGGGAAUUGAGCACCCGGCAGCGGUCUCAGGCCAAGCCCCCUGCCAGC\
) } def
/len { sequence length } bind def

/coor [
[105.71084595 276.35644531]
[103.76303864 291.59133911]
[94.44598389 303.80151367]
[80.26592255 309.70248413]
[65.03722382 307.70690918]
[52.85632324 298.35162354]
[46.99982834 284.15313721]
[49.04310608 268.93078613]
[58.43652344 256.77926636]
[72.65329742 250.96730042]
[74.60221863 236.09445190]
[76.55113983 221.22160339]
[78.50006104 206.34875488]
[80.44898224 191.47589111]
[82.39790344 176.60304260]
[84.34682465 161.73019409]
[86.29574585 146.85734558]
[88.24466705 131.98449707]
[64.35279846 117.20449829]
[57.19130707 85.84812927]
[76.52116394 55.18519592]
[115.84459686 46.18593216]
[101.50037384 50.57265854]
[90.56629181 62.00753784]
[76.13267517 58.33057404]
[61.78845978 62.71730423]
[47.44424057 67.10403442]
[33.10002136 71.49076080]
[18.75580406 75.87749481]
[4.41158581 80.26422119]
[-9.90050316 84.75466919]
[-24.17971230 89.34859467]
[-34.94710922 100.94056702]
[-49.43244171 97.47294617]
[-60.19983673 109.06491089]
[-74.68516541 105.59729004]
[-88.96437836 110.19121552]
[-103.24358368 114.78514862]
[-117.52279663 119.37907410]
[-122.23241425 134.16416931]
[-134.75294495 143.33018494]
[-150.27000427 143.35258484]
[-162.81695557 134.22277832]
[-167.56924438 119.45133972]
[-162.69952393 104.71820068]
[-150.08029175 95.68855286]
[-134.56390381 95.83448029]
[-122.11672211 105.09986877]
[-107.83751678 100.50593567]
[-93.55830383 95.91201019]
[-79.27909851 91.31807709]
[-69.53304291 80.05470276]
[-54.02637100 83.19373322]
[-44.28031921 71.93035126]
[-28.77364159 75.06938934]
[-14.49443150 70.47545624]
[-9.09217930 65.43686676]
[0.02485675 65.92000580]
[14.36907578 61.53327179]
[28.71329308 57.14654541]
[43.05751419 52.75981522]
[57.40172958 48.37308502]
[71.74594879 43.98635483]
[81.65403748 32.86524582]
[97.11364746 36.22844315]
[111.45786285 31.84171295]
[117.96611786 18.32717896]
[105.69776154 8.33728695]
[108.21500397 -6.34306574]
[102.70121002 -20.29290771]
[97.18742371 -34.24275208]
[91.67362976 -48.19259262]
[86.15983582 -62.14243698]
[80.64604950 -76.09227753]
[75.13225555 -90.04212189]
[69.61846924 -103.99196625]
[59.41041946 -107.73111725]
[53.07383728 -116.29315186]
[52.50521088 -126.70992279]
[57.65122604 -135.53144836]
[52.54360199 -149.63507080]
[47.43598175 -163.73869324]
[42.32835770 -177.84231567]
[37.22073746 -191.94593811]
[31.90947533 -205.97415161]
[26.39568329 -219.92399597]
[20.88189316 -233.87382507]
[15.36810207 -247.82366943]
[3.09974265 -257.81356812]
[5.61698294 -272.49392700]
[0.10319205 -286.44375610]
[-5.41059875 -300.39361572]
[-10.92438984 -314.34344482]
[-24.09973907 -324.10778809]
[-21.96268845 -340.36709595]
[-6.71165276 -346.39517212]
[5.96440935 -335.99087524]
[3.02545285 -319.85723877]
[8.53924370 -305.90740967]
[14.05303478 -291.95755005]
[19.56682587 -278.00772095]
[31.44080162 -269.01559448]
[29.31794357 -253.33746338]
[34.83173370 -239.38761902]
[40.34552765 -225.43777466]
[45.85931778 -211.48794556]
[49.80327606 -208.80181885]
[52.10419083 -203.61157227]
[51.32435989 -197.05355835]
[56.43198395 -182.94993591]
[61.53960419 -168.84631348]
[66.64722443 -154.74269104]
[71.75484467 -140.63906860]
[87.41775513 -129.29621887]
[83.56830597 -109.50575256]
[89.08209991 -95.55591583]
[94.59589386 -81.60607147]
[100.10968018 -67.65622711]
[105.62347412 -53.70638275]
[111.13726044 -39.75654221]
[116.65105438 -25.80669975]
[122.16484833 -11.85685635]
[134.03881836 -2.86475110]
[131.91596985 12.81338787]
[146.70855713 15.29921627]
[156.47914124 3.91784406]
[166.24972534 -7.46352768]
[176.02030945 -18.84490013]
[171.50735474 -33.59741592]
[175.70861816 -48.44170761]
[187.28349304 -58.64101410]
[202.53846741 -60.94077301]
[216.60575867 -54.60713959]
[224.99653625 -41.66115952]
[225.03332520 -26.23383904]
[216.70439148 -13.24798393]
[202.66746521 -6.84733391]
[187.40168762 -9.07431221]
[177.63110352 2.30705953]
[167.86050415 13.68843079]
[158.08992004 25.06980324]
[167.18540955 36.99758911]
[180.74670410 30.58733177]
[194.30798340 24.17707253]
[207.86927795 17.76681328]
[216.75515747 3.98373628]
[233.11909485 5.05773687]
[240.12728882 19.88397598]
[230.57029724 33.21049118]
[214.27954102 31.32810402]
[200.71824646 37.73836136]
[187.15696716 44.14862061]
[173.59567261 50.55887985]
[174.67768860 57.98041916]
[176.84172058 72.82350159]
[177.92373657 80.24503326]
[192.75074768 82.51645660]
[207.57777405 84.78787231]
[222.40480042 87.05928802]
[237.23182678 89.33070374]
[252.05885315 91.60211945]
[266.87152100 86.04376984]
[278.28039551 95.61911011]
[293.10742188 97.89052582]
[307.93444824 100.16194916]
[322.76147461 102.43336487]
[339.33352661 98.85523224]
[347.35943604 113.78913116]
[335.23095703 125.63549042]
[320.49005127 117.26038361]
[305.66302490 114.98896790]
[290.83599854 112.71755219]
[276.00897217 110.44613647]
[262.25683594 116.16695404]
[249.78742981 106.42914581]
[234.96041870 104.15773010]
[220.13339233 101.88631439]
[205.30636597 99.61489868]
[190.47933960 97.34347534]
[175.65231323 95.07205963]
[171.73126221 101.46544647]
[184.51789856 109.30776215]
[176.67536926 122.09426880]
[163.88916016 114.25221252]
[159.96809387 120.64559174]
[168.71446228 132.83169556]
[177.46081543 145.01780701]
[190.91197205 145.65672302]
[201.38717651 153.80593872]
[205.20101929 166.31465149]
[201.17585754 178.55230713]
[209.74488831 190.86375427]
[218.31390381 203.17521667]
[226.88293457 215.48666382]
[240.89393616 225.03276062]
[235.59953308 241.13883972]
[218.65725708 240.50994873]
[214.57147217 224.05567932]
[206.00245667 211.74423218]
[197.43342590 199.43278503]
[188.86441040 187.12133789]
[172.19689941 184.86277771]
[162.12335205 170.97357178]
[165.27470398 153.76416016]
[156.52835083 141.57806396]
[147.78199768 129.39195251]
[123.77649689 138.30845642]
[103.11752319 133.93341064]
[101.16860199 148.80625916]
[99.21968079 163.67912292]
[97.27075958 178.55197144]
[95.32183838 193.42481995]
[93.37291718 208.29766846]
[91.42399597 223.17051697]
[89.47506714 238.04338074]
[87.52614594 252.91622925]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 216]
[11 215]
[12 214]
[13 213]
[14 212]
[15 211]
[16 210]
[17 209]
[18 208]
[22 66]
[23 65]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[31 56]
[32 55]
[34 53]
[36 51]
[37 50]
[38 49]
[39 48]
[67 124]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[80 113]
[81 112]
[82 111]
[83 110]
[84 109]
[85 106]
[86 105]
[87 104]
[88 103]
[90 101]
[91 100]
[92 99]
[93 98]
[125 141]
[126 140]
[127 139]
[128 138]
[142 153]
[143 152]
[144 151]
[145 150]
[156 180]
[157 179]
[158 178]
[159 177]
[160 176]
[161 175]
[163 173]
[164 172]
[165 171]
[166 170]
[185 206]
[186 205]
[187 204]
[191 201]
[192 200]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
