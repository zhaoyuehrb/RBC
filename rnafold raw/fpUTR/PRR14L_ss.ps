%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGAGACGAAGAGGUGGCGGCGGCCGGAGCGCCCCCGGCCUCUGUCGGCUCCGUAGGCUCAGGUAGACCUGGCGACGACGGGGCUGCAGCUGCAGGGGCUGAGCUGGCUGGGCAAGCGCGGGCCGCGGAGGAGGUCUCAGGGGUGAAUCAUUUGAUGUAAAAGACUUGACUCCAUAAUCUGCAUCUGUCCUA\
) } def
/len { sequence length } bind def

/coor [
[76.64136505 317.68554688]
[79.14376068 298.46606445]
[79.38665771 283.46801758]
[79.62954712 268.47000122]
[76.59007263 261.72149658]
[79.99977112 253.23158264]
[80.48550415 238.23945618]
[80.97122955 223.24732971]
[79.13999176 221.10705566]
[78.05243683 218.10736084]
[78.04209137 214.53010559]
[79.33351898 210.77325439]
[82.00505829 207.30935669]
[83.46020508 192.38011169]
[84.91535950 177.45085144]
[86.37050629 162.52160645]
[87.82565308 147.59236145]
[78.19607544 136.28718567]
[79.45912933 121.12607574]
[91.38231659 111.10234070]
[86.60867310 96.88220215]
[76.44004822 85.85500336]
[66.27142334 74.82781219]
[56.10279465 63.80061340]
[45.93416977 52.77341843]
[35.76554489 41.74622345]
[24.87222672 41.93371582]
[15.86371326 36.20606613]
[11.59186077 26.66315651]
[13.24992657 16.56266785]
[3.44371510 5.21197510]
[-6.36249638 -6.13871717]
[-16.16870880 -17.48940849]
[-35.48332214 -23.22813988]
[-38.32031250 -42.34671783]
[-48.48893738 -53.37391281]
[-58.65756226 -64.40110779]
[-68.82618713 -75.42830658]
[-78.99481201 -86.45549774]
[-89.16343689 -97.48269653]
[-99.33206940 -108.50988770]
[-112.87313080 -105.89209747]
[-125.83543396 -110.27576447]
[-134.86405945 -120.41330719]
[-137.67826843 -133.58288574]
[-133.64689636 -146.31867981]
[-143.63562012 -157.50909424]
[-153.62434387 -168.69949341]
[-163.61308289 -179.88990784]
[-173.60180664 -191.08032227]
[-183.59053040 -202.27073669]
[-193.57925415 -213.46115112]
[-203.56799316 -224.65155029]
[-218.90777588 -223.23834229]
[-231.98548889 -231.03750610]
[-237.89324951 -244.87811279]
[-234.55821228 -259.37002563]
[-244.54693604 -270.56042480]
[-254.53565979 -281.75085449]
[-264.52438354 -292.94125366]
[-269.50982666 -294.58154297]
[-273.00955200 -297.66732788]
[-274.72125244 -301.38681030]
[-274.71026611 -304.92617798]
[-284.14376831 -316.58847046]
[-293.57727051 -328.25076294]
[-303.01080322 -339.91305542]
[-317.70538330 -345.77648926]
[-319.69390869 -360.53775024]
[-329.12744141 -372.20004272]
[-338.56094360 -383.86230469]
[-347.99444580 -395.52459717]
[-363.63171387 -395.62503052]
[-375.51245117 -405.79272461]
[-378.02694702 -421.22683716]
[-369.98791504 -434.63980103]
[-355.19116211 -439.69848633]
[-340.62326050 -434.01428223]
[-333.16271973 -420.27111816]
[-336.33218384 -404.95809937]
[-326.89865112 -393.29583740]
[-317.46514893 -381.63354492]
[-308.03164673 -369.97125244]
[-294.01181030 -364.94198608]
[-291.34851074 -349.34655762]
[-281.91500854 -337.68426514]
[-272.48147583 -326.02197266]
[-263.04797363 -314.35971069]
[-253.33398438 -302.92999268]
[-243.34526062 -291.73956299]
[-233.35652161 -280.54916382]
[-223.36779785 -269.35876465]
[-208.59165955 -271.03314209]
[-195.50813293 -263.59774780]
[-189.23829651 -249.72177124]
[-192.37757874 -234.64028931]
[-182.38885498 -223.44987488]
[-172.40011597 -212.25946045]
[-162.41139221 -201.06904602]
[-152.42266846 -189.87863159]
[-142.43392944 -178.68823242]
[-132.44520569 -167.49781799]
[-122.45648193 -156.30740356]
[-106.19132996 -158.47729492]
[-91.69008636 -150.44882202]
[-84.75812531 -135.20989990]
[-88.30487061 -118.67852020]
[-78.13624573 -107.65132141]
[-67.96762085 -96.62412262]
[-57.79899216 -85.59693146]
[-47.63036728 -74.56973267]
[-37.46174240 -63.54253769]
[-27.29311562 -52.51534271]
[-17.06990242 -53.02025986]
[-8.07144451 -47.69639206]
[-3.39954066 -38.09781647]
[-4.81801558 -27.29561996]
[4.98819590 -15.94492817]
[14.79440784 -4.59423637]
[24.60061836 6.75645590]
[43.27558899 11.73781395]
[46.79273987 31.57759666]
[56.96136475 42.60479355]
[67.12998962 53.63198853]
[77.29861450 64.65918732]
[87.46723938 75.68637848]
[97.63587189 86.71357727]
[132.89271545 79.69300079]
[147.65536499 82.35086823]
[162.41801453 85.00873566]
[177.18066406 87.66659546]
[194.34915161 81.02716064]
[207.30604553 92.85395813]
[222.10978699 95.27242279]
[236.91354370 97.69088745]
[251.71730042 100.10935211]
[266.52105713 102.52780914]
[281.32479858 104.94627380]
[292.36248779 94.20032501]
[307.43511963 92.03947449]
[320.73269653 99.08494568]
[327.25372314 112.44960785]
[342.12081909 107.03855133]
[353.43408203 116.72665405]
[368.23785400 119.14511871]
[383.10494995 113.73406219]
[394.41821289 123.42215729]
[409.22198486 125.84062195]
[424.36047363 119.53521729]
[437.22427368 129.70646667]
[434.58023071 145.89105225]
[419.14828491 151.43966675]
[406.80349731 140.64437866]
[391.99975586 138.22590637]
[378.19149780 143.80995178]
[365.81936646 133.94886780]
[351.01562500 131.53039551]
[337.20736694 137.11444092]
[324.83526611 127.25335693]
[314.40005493 137.84791565]
[299.55166626 140.29521179]
[285.95034790 133.44995117]
[278.90634155 119.75003052]
[264.10256958 117.33156586]
[249.29882812 114.91310120]
[234.49508667 112.49463654]
[219.69132996 110.07617188]
[204.88757324 107.65770721]
[194.87826538 114.46626282]
[182.51750183 112.56275177]
[174.52279663 102.42924500]
[159.76014709 99.77137756]
[144.99749756 97.11351776]
[130.23484802 94.45565033]
[124.25403595 98.98110962]
[136.55830383 107.56044006]
[132.20108032 121.91365051]
[117.20391083 122.20504761]
[112.29238892 108.03202820]
[106.31156921 112.55748749]
[116.07471466 124.69498444]
[114.38631439 139.81463623]
[102.75490570 149.04750061]
[101.29975128 163.97676086]
[99.84460449 178.90600586]
[98.38945770 193.83525085]
[96.93431091 208.76451111]
[95.96336365 223.73304749]
[95.47763824 238.72518921]
[94.99190521 253.71731567]
[94.62758636 268.71289062]
[94.38468933 283.71093750]
[94.14179230 298.70895386]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[3 192]
[4 191]
[6 190]
[7 189]
[8 188]
[13 187]
[14 186]
[15 185]
[16 184]
[17 183]
[20 180]
[21 127]
[22 126]
[23 125]
[24 124]
[25 123]
[26 122]
[30 120]
[31 119]
[32 118]
[33 117]
[35 113]
[36 112]
[37 111]
[38 110]
[39 109]
[40 108]
[41 107]
[46 103]
[47 102]
[48 101]
[49 100]
[50 99]
[51 98]
[52 97]
[53 96]
[57 92]
[58 91]
[59 90]
[60 89]
[64 88]
[65 87]
[66 86]
[67 85]
[69 83]
[70 82]
[71 81]
[72 80]
[128 174]
[129 173]
[130 172]
[131 171]
[133 168]
[134 167]
[135 166]
[136 165]
[137 164]
[138 163]
[142 159]
[144 157]
[145 156]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
