%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACCGGUAGUCCGCGGUGGCGCGGUCCGCCCCUCACCUGGCCAGCGGCGGGCGCUGAGGGGCCCAAUGGGAGCCGCGGCCUGGCCGCCCCGCCCCGCGCCUCCGGACGUCUGUGCCGGGACAAGGCCGCCGCUGGUGCCGGGUCCUUGAGGAGAGCGCCUCCCGUCCGAGGCCAGCCGCCUCUGUCAGCCGUCCGCGCGGGCCGGGUCUGAAGCGCCGCCGGGACGGCGAAGAGCCGCGGCCGCCGCGGAGAAG\
GAGGCAGCGCAGGAGGCCGGAGCGGCCGCCGCGCCCGAGCAC\
) } def
/len { sequence length } bind def

/coor [
[76.57792664 528.31463623]
[68.78632355 515.07879639]
[68.67255402 499.72033691]
[76.26720428 486.37054443]
[89.52737427 478.62048340]
[89.36923981 463.62130737]
[89.21111298 448.62213135]
[82.62319183 444.49353027]
[78.12767792 438.03601074]
[76.50440216 430.24145508]
[78.08495331 422.34268188]
[82.68817902 415.61853027]
[89.63771820 411.18664551]
[90.11204529 396.19415283]
[90.58636475 381.20166016]
[91.06068420 366.20916748]
[91.53501129 351.21667480]
[92.00933075 336.22415161]
[92.48365784 321.23165894]
[92.95797729 306.23916626]
[93.43229675 291.24667358]
[90.51702881 284.49417114]
[93.99147797 276.09884644]
[94.62382507 261.11218262]
[87.42993927 248.07005310]
[95.74212646 234.60832214]
[96.37447357 219.62165833]
[97.00682831 204.63499451]
[97.63917542 189.64833069]
[98.19251251 174.65853882]
[98.66683960 159.66604614]
[99.06212616 144.67124939]
[99.37837219 129.67459106]
[99.69461823 114.67791748]
[91.37894440 115.88230133]
[82.25070953 112.06462097]
[75.32859039 102.98700714]
[61.12252426 98.17165375]
[46.91645432 93.35630035]
[32.71038818 88.54095459]
[18.50431824 83.72560120]
[4.29824924 78.91024780]
[-9.95779324 74.24492645]
[-24.26222610 69.73014832]
[-38.56665802 65.21537018]
[-52.87108994 60.70059586]
[-67.17552185 56.18581772]
[-81.47995758 51.67104340]
[-95.78439331 47.15626526]
[-110.08882141 42.64149094]
[-141.66108704 56.39215088]
[-156.65357971 55.91782761]
[-171.64608765 55.44350433]
[-186.63858032 54.96918106]
[-201.63108826 54.49485779]
[-206.15042114 56.91347885]
[-210.69538879 57.34532928]
[-214.51502991 56.10617065]
[-217.08805847 53.76102829]
[-232.05805969 52.81285858]
[-247.02806091 51.86468506]
[-261.99804688 50.91651535]
[-276.96807861 49.96834564]
[-268.93029785 62.63302994]
[-273.71783447 76.84849548]
[-287.77951050 82.07044220]
[-300.68511963 74.42549896]
[-302.86193848 59.58428955]
[-292.69528198 48.55525589]
[-307.59454346 46.81967926]
[-322.49380493 45.08410645]
[-326.32373047 46.89328766]
[-330.14889526 47.37045288]
[-333.55886841 46.67596054]
[-336.23504639 45.08494186]
[-337.97970581 42.94838333]
[-352.79254150 40.58625031]
[-367.60537720 38.22411346]
[-382.41824341 35.86198044]
[-397.23107910 33.49984360]
[-413.82473755 36.97646713]
[-421.75906372 21.99372101]
[-409.55828857 10.22182655]
[-394.86892700 18.68700218]
[-380.05609131 21.04913712]
[-365.24325562 23.41127014]
[-350.43041992 25.77340508]
[-335.61758423 28.13554001]
[-320.75820923 30.18485069]
[-305.85897827 31.92042732]
[-290.95971680 33.65600204]
[-276.01989746 34.99834442]
[-261.04989624 35.94651413]
[-246.07989502 36.89468384]
[-231.10987854 37.84285355]
[-216.13987732 38.79102707]
[-201.15675354 39.50236130]
[-186.16426086 39.97668457]
[-171.17176819 40.45100403]
[-156.17926025 40.92532730]
[-141.18676758 41.39965057]
[-135.33712769 27.58727646]
[-146.11012268 17.14972115]
[-156.88311768 6.71216440]
[-167.65611267 -3.72539210]
[-178.42910767 -14.16294861]
[-189.25695801 -24.54357338]
[-200.13938904 -34.86698151]
[-216.20364380 -38.16424561]
[-221.12280273 -53.80821609]
[-209.83647156 -65.70571899]
[-193.95504761 -61.61762619]
[-189.81597900 -45.74940872]
[-178.93356323 -35.42600250]
[-171.95166016 -33.11338806]
[-167.99154663 -24.93594360]
[-157.21855164 -14.49838734]
[-146.44555664 -4.06083059]
[-135.67256165 6.37672567]
[-124.89956665 16.81428146]
[-127.83843231 2.10499763]
[-121.15839386 -11.32545471]
[-107.65493011 -17.85664749]
[-92.97902679 -14.75538445]
[-83.27230835 -3.31949210]
[-82.59687805 11.66529369]
[-91.23539734 23.92808342]
[-105.57404327 28.33705711]
[-91.26961517 32.85183334]
[-76.96517944 37.36661148]
[-62.66074753 41.88138580]
[-48.35631561 46.39616013]
[-34.05188370 50.91093826]
[-19.74744987 55.42571259]
[-5.44301748 59.94049072]
[-0.90574163 58.59386444]
[4.52598572 60.05003738]
[9.11360168 64.70417786]
[23.31966972 69.51953125]
[37.52573776 74.33488464]
[51.73180771 79.15023804]
[65.93787384 83.96558380]
[80.14394379 88.78093719]
[92.28849030 79.97695923]
[92.13035583 64.97779083]
[91.97222900 49.97862625]
[83.16221619 36.14693069]
[90.97477722 21.72833252]
[107.37301636 21.55545235]
[115.48783112 35.80613327]
[106.97138977 49.82049561]
[107.12952423 64.81966400]
[107.28765106 79.81882477]
[119.38562012 88.68669891]
[130.33802795 77.26937103]
[144.76571655 80.96946716]
[159.11695862 76.60573578]
[173.44499207 72.16642761]
[187.74942017 67.65164948]
[202.05384827 63.13687515]
[216.35829163 58.62209702]
[230.66271973 54.10732269]
[244.96714783 49.59254456]
[252.77667236 33.91381073]
[269.19296265 28.85667610]
[283.88076782 37.09227753]
[298.13681030 32.42695236]
[312.39285278 27.76163101]
[326.64889526 23.09630775]
[337.35815430 11.45060349]
[351.86065674 14.84570026]
[366.11669922 10.18037701]
[380.37274170 5.51505327]
[386.86837769 -5.59209013]
[398.80172729 -9.20039082]
[409.64379883 -3.90360475]
[423.94824219 -8.41838074]
[438.25265503 -12.93315697]
[452.55709839 -17.44793320]
[466.86154175 -21.96270943]
[481.11758423 -26.62803268]
[495.32363892 -31.44338417]
[509.52972412 -36.25873566]
[523.73577881 -41.07408905]
[530.81762695 -46.76625061]
[538.11706543 -45.86446762]
[552.37310791 -50.52979279]
[559.51458740 -56.14697647]
[566.80407715 -55.16829300]
[581.10852051 -59.68307114]
[595.41296387 -64.19784546]
[609.71740723 -68.71262360]
[624.02185059 -73.22740173]
[638.32623291 -77.74217224]
[652.63067627 -82.25695038]
[659.96844482 -95.99721527]
[674.53948975 -100.37207031]
[687.59350586 -93.29194641]
[701.89794922 -97.80672455]
[716.20239258 -102.32150269]
[730.50683594 -106.83627319]
[744.78723145 -111.42639160]
[759.04327393 -116.09171295]
[762.12634277 -131.13798523]
[772.33148193 -142.61627197]
[786.91357422 -147.43894958]
[801.95013428 -144.30874634]
[813.39636230 -134.06768799]
[818.17327881 -119.47055054]
[814.99597168 -104.44390106]
[804.71911621 -93.02982330]
[790.10705566 -88.29865265]
[775.09045410 -91.52305603]
[763.70861816 -101.83567047]
[749.45257568 -97.17034912]
[744.09844971 -92.12766266]
[735.02160645 -92.53184509]
[720.71716309 -88.01706696]
[706.41271973 -83.50228882]
[692.10827637 -78.98751831]
[685.48382568 -65.69645691]
[671.04144287 -60.91406250]
[657.14544678 -67.95251465]
[642.84100342 -63.43774033]
[628.53662109 -58.92296600]
[614.23217773 -54.40819168]
[599.92773438 -49.89341354]
[585.62329102 -45.37863922]
[571.31884766 -40.86386108]
[557.03845215 -36.27374649]
[542.78240967 -31.60842514]
[528.55114746 -26.86802101]
[514.34509277 -22.05266953]
[500.13900757 -17.23731613]
[485.93292236 -12.42196465]
[483.06958008 -8.65347099]
[477.82785034 -6.61672735]
[471.37631226 -7.65827656]
[457.07186890 -3.14350033]
[442.76745605 1.37127566]
[428.46301270 5.88605165]
[414.15856934 10.40082836]
[402.99096680 23.96393204]
[385.03805542 19.77109528]
[370.78201294 24.43642044]
[356.52597046 29.10174370]
[346.83639526 40.41374969]
[331.31420898 37.35234833]
[317.05816650 42.01767349]
[302.80212402 46.68299866]
[288.54608154 51.34832001]
[284.40093994 63.51947403]
[273.85363770 71.20760345]
[260.60934448 71.43551636]
[249.48193359 63.89697647]
[235.17749023 68.41175079]
[220.87306213 72.92652893]
[206.56863403 77.44130707]
[192.26419067 81.95608521]
[177.95976257 86.47085571]
[172.55279541 91.45681763]
[163.48068237 90.95697021]
[149.12945557 95.32070160]
[139.20355225 106.42591095]
[123.74935150 103.03793335]
[114.69128418 114.99416351]
[114.37503815 129.99082947]
[114.05879211 144.98750305]
[116.99561310 153.58564758]
[113.65933990 160.14036560]
[113.18501282 175.13285828]
[116.03102875 183.76148987]
[112.62583923 190.28068542]
[111.99349213 205.26734924]
[111.36114502 220.25401306]
[110.72879791 235.24067688]
[117.87744904 249.35475159]
[109.61048889 261.74453735]
[108.97814178 276.73120117]
[108.42479706 291.72097778]
[107.95047760 306.71350098]
[107.47615051 321.70599365]
[107.00183105 336.69848633]
[106.52751160 351.69097900]
[106.05318451 366.68347168]
[105.57886505 381.67599487]
[105.10453796 396.66848755]
[104.63021851 411.66098022]
[116.54751587 430.66360474]
[104.21027374 448.46401978]
[104.36840820 463.46316528]
[104.52653503 478.46234131]
[117.94715118 485.93112183]
[125.82157135 499.11782837]
[126.03162384 514.47528076]
[118.52080536 527.87243652]
[105.30948639 535.70544434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 292]
[6 291]
[7 290]
[13 288]
[14 287]
[15 286]
[16 285]
[17 284]
[18 283]
[19 282]
[20 281]
[21 280]
[23 279]
[24 278]
[26 276]
[27 275]
[28 274]
[29 273]
[30 271]
[31 270]
[32 268]
[33 267]
[34 266]
[37 143]
[38 142]
[39 141]
[40 140]
[41 139]
[42 138]
[43 135]
[44 134]
[45 133]
[46 132]
[47 131]
[48 130]
[49 129]
[50 128]
[51 101]
[52 100]
[53 99]
[54 98]
[55 97]
[59 96]
[60 95]
[61 94]
[62 93]
[63 92]
[69 91]
[70 90]
[71 89]
[76 88]
[77 87]
[78 86]
[79 85]
[80 84]
[102 120]
[103 119]
[104 118]
[105 117]
[106 116]
[107 114]
[108 113]
[144 153]
[145 152]
[146 151]
[154 265]
[156 263]
[157 262]
[158 260]
[159 259]
[160 258]
[161 257]
[162 256]
[163 255]
[166 251]
[167 250]
[168 249]
[169 248]
[171 246]
[172 245]
[173 244]
[176 242]
[177 241]
[178 240]
[179 239]
[180 238]
[181 235]
[182 234]
[183 233]
[184 232]
[186 231]
[187 230]
[189 229]
[190 228]
[191 227]
[192 226]
[193 225]
[194 224]
[195 223]
[198 220]
[199 219]
[200 218]
[201 217]
[202 215]
[203 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
