%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGCGCGGCAGCCGGGCGGCUCCUCCUUCCUCCCGGCCCUGGCGUGGAGCAGAGGGACACAGGUUCCCACGCUGGCGCCCGGCGACCGGGUGGGGCUGCGGCCCAGCAGCUCC\
) } def
/len { sequence length } bind def

/coor [
[121.43449402 299.99206543]
[111.74008179 288.68423462]
[117.14283752 273.81408691]
[114.71610260 259.01168823]
[112.28937531 244.20930481]
[108.04558563 238.03573608]
[110.00302124 228.97366333]
[107.97801971 214.11097717]
[98.59336853 202.54475403]
[104.39681244 187.82638550]
[102.37181091 172.96369934]
[100.34680939 158.10101318]
[98.32181549 143.23832703]
[96.29681396 128.37564087]
[94.27181244 113.51296234]
[81.41895294 105.77965546]
[67.33906555 110.95234680]
[53.25917816 116.12504578]
[42.97370148 128.14666748]
[28.35895157 125.27293396]
[18.27689171 138.20677185]
[2.07440376 135.67468262]
[-3.58078170 120.28147888]
[7.12890482 107.86235809]
[23.18625641 111.19304657]
[32.46464539 99.54140472]
[48.08648300 102.04515839]
[62.16637421 96.87245941]
[76.24626160 91.69976807]
[86.99481964 89.20669556]
[95.69606781 92.50940704]
[99.70899963 78.05615234]
[95.94565582 62.68905258]
[106.80583954 52.49563599]
[110.81876373 38.04238892]
[114.83168793 23.58913803]
[118.84461212 9.13588810]
[122.85753632 -5.31736231]
[126.67438507 -19.82362556]
[130.09701538 -34.42792892]
[133.32156372 -49.07723618]
[128.73179626 -64.21805573]
[139.02418518 -74.98448181]
[142.24874878 -89.63378906]
[145.47329712 -104.28309631]
[148.69786072 -118.93241119]
[151.92240906 -133.58171082]
[145.61967468 -144.93463135]
[148.69848633 -157.13462830]
[158.95593262 -163.70230103]
[162.57600403 -178.25891113]
[166.19607544 -192.81553650]
[156.38800049 -204.69441223]
[155.46604919 -219.89321899]
[163.57456970 -232.57058716]
[177.42739868 -237.97770691]
[181.04747009 -252.53433228]
[184.66754150 -267.09094238]
[188.28761292 -281.64755249]
[191.90768433 -296.20419312]
[186.86041260 -311.80728149]
[198.04881287 -323.79693604]
[213.96321106 -319.83920288]
[218.23225403 -304.00546265]
[206.46429443 -292.58410645]
[202.84422302 -278.02749634]
[199.22415161 -263.47088623]
[195.60409546 -248.91426086]
[191.98402405 -234.35765076]
[201.69042969 -223.09159851]
[202.91621399 -208.09289551]
[194.98240662 -195.09642029]
[180.75268555 -189.19546509]
[177.13261414 -174.63883972]
[173.51255798 -160.08222961]
[179.30203247 -143.57620239]
[166.57171631 -130.35716248]
[163.34716797 -115.70785522]
[160.12260437 -101.05854034]
[156.89805603 -86.40923309]
[153.67349243 -71.75992584]
[158.49391174 -57.66691971]
[147.97087097 -45.85268021]
[144.74632263 -31.20337105]
[146.40362549 -23.89748192]
[141.23100281 -16.20355797]
[142.68986511 -8.85546780]
[137.31079102 -1.30443716]
[133.29786682 13.14881229]
[129.28494263 27.60206223]
[125.27201080 42.05531311]
[121.25908661 56.50856400]
[125.30945587 70.84187317]
[114.16224670 82.06908417]
[110.14932251 96.52233124]
[109.13449860 111.48796082]
[111.15949249 126.35064697]
[113.18449402 141.21333313]
[115.20949554 156.07601929]
[117.23449707 170.93870544]
[119.25949860 185.80137634]
[128.78898621 198.43067932]
[122.84070587 212.08598328]
[124.86569977 226.94866943]
[127.09177399 241.78256226]
[129.51850891 256.58496094]
[131.94523621 271.38735962]
[141.81321716 283.75399780]
[136.23689270 297.56533813]
[149.77578735 305.39044189]
[155.06869507 320.10504150]
[149.61645508 334.76135254]
[135.99345398 342.43908691]
[120.63205719 339.51309204]
[110.78543854 327.36492920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[3 107]
[4 106]
[5 105]
[7 104]
[8 103]
[10 101]
[11 100]
[12 99]
[13 98]
[14 97]
[15 96]
[16 29]
[17 28]
[18 27]
[20 25]
[31 95]
[32 94]
[34 92]
[35 91]
[36 90]
[37 89]
[38 88]
[39 86]
[40 84]
[41 83]
[43 81]
[44 80]
[45 79]
[46 78]
[47 77]
[50 75]
[51 74]
[52 73]
[56 69]
[57 68]
[58 67]
[59 66]
[60 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
