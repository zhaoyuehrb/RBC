%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCACCAGGUCGGGCCAGGCGGGCGCCGGGAGCUGGGAGCCGGGAGCCCAGAGUUCGGAACCUAGAGUUCGGAGCCGGCUAGGGAGCCGGCGUUGUCGCGGCGAGGAGGUGGGCGCGCUGGAGCAGGAGCGGGGCCGGAACUGGAGCCGAGGCGCAGGUGGCGCUGGGUCGCCUGCGAGGCCGCUGGCCAGGCCUGAGCCUCUGCCACC\
) } def
/len { sequence length } bind def

/coor [
[123.30563354 426.88369751]
[121.09093475 412.04806519]
[118.87623596 397.21246338]
[116.66153717 382.37686157]
[114.49209595 380.60272217]
[112.89441681 377.86267090]
[112.23979950 374.37008667]
[112.81556702 370.46862793]
[114.78229523 366.59939575]
[113.45035553 351.65866089]
[112.11842346 336.71789551]
[110.78648376 321.77716064]
[109.45454407 306.83639526]
[100.61767578 294.84643555]
[107.09901428 280.41375732]
[105.76707458 265.47299194]
[104.43513489 250.53225708]
[103.10320282 235.59150696]
[101.77126312 220.65075684]
[100.43932343 205.71000671]
[96.71460724 199.32723999]
[99.20002747 190.53826904]
[98.08963013 175.57942200]
[96.97923279 160.62057495]
[88.32100677 148.50099182]
[95.01550293 134.16590881]
[77.26644897 125.98731232]
[66.80030823 109.48342896]
[51.82665253 110.37203217]
[36.85299683 111.26064301]
[21.87934113 112.14925385]
[6.90568447 113.03786469]
[-3.56248736 124.57281494]
[-18.76056290 125.26068878]
[-29.69286537 115.20980072]
[-44.66651917 116.09841156]
[-59.64017868 116.98701477]
[-74.61383057 117.87562561]
[-89.58748627 118.76423645]
[-100.05566406 130.29919434]
[-115.25373840 130.98706055]
[-126.18603516 120.93617249]
[-141.15969849 121.82478333]
[-156.13334656 122.71339417]
[-171.10700989 123.60199738]
[-186.08065796 124.49060822]
[-196.54882812 136.02555847]
[-211.74690247 136.71343994]
[-222.67921448 126.66254425]
[-238.13233948 133.63658142]
[-249.11167908 120.71797943]
[-239.73731995 106.59149170]
[-223.56782532 111.68888855]
[-213.90100098 100.41555023]
[-198.72824097 99.30107117]
[-186.96926880 109.51695251]
[-171.99562073 108.62834167]
[-157.02195740 107.73973846]
[-142.04830933 106.85112762]
[-127.07464600 105.96251678]
[-117.40782928 94.68917847]
[-102.23506927 93.57469177]
[-90.47609711 103.79058075]
[-75.50244141 102.90196991]
[-60.52878571 102.01335907]
[-45.55513000 101.12475586]
[-30.58147430 100.23614502]
[-20.91465569 88.96280670]
[-5.74189711 87.84832001]
[6.01707506 98.06420898]
[20.99073029 97.17559814]
[35.96438599 96.28698730]
[50.93804169 95.39837646]
[65.91169739 94.50977325]
[68.71939087 85.38224792]
[73.91992188 77.37292480]
[64.99559784 65.31654358]
[56.07126999 53.26015854]
[47.14694214 41.20377350]
[38.22261429 29.14739037]
[29.29828835 17.09100723]
[20.37396049 5.03462362]
[5.12639475 -1.00224257]
[2.99869370 -17.26277542]
[16.17965508 -27.01953316]
[31.10983467 -20.23559761]
[32.43034363 -3.88970327]
[41.35467148 8.16668034]
[50.27899933 20.22306442]
[59.20332718 32.27944946]
[68.12765503 44.33583069]
[77.05197906 56.39221573]
[85.97630310 68.44860077]
[94.86078644 64.52217865]
[104.83800507 63.14757156]
[115.16278076 64.62337494]
[125.01083374 69.02793121]
[133.39053345 56.58684921]
[141.77023315 44.14576340]
[143.06230164 28.37740326]
[156.58970642 22.14374924]
[164.96940613 9.70266438]
[173.34910583 -2.73842096]
[181.72882080 -15.17950630]
[178.06588745 -32.28550339]
[187.71813965 -46.46863174]
[204.30860901 -49.22666931]
[212.50303650 -61.79056168]
[207.13391113 -76.22935486]
[211.24822998 -90.88970184]
[223.06639099 -100.20608521]
[237.92639160 -100.77027893]
[246.12081909 -113.33416748]
[254.31524658 -125.89806366]
[255.37350464 -141.68383789]
[268.80706787 -148.11726379]
[269.86532593 -163.90303040]
[283.29885864 -170.33645630]
[291.49328613 -182.90034485]
[299.68771362 -195.46423340]
[307.88214111 -208.02813721]
[302.22436523 -222.47697449]
[306.17248535 -237.48336792]
[318.20840454 -247.27705383]
[333.70404053 -248.09214783]
[346.70104980 -239.61524963]
[352.20175171 -225.10588074]
[348.09106445 -210.14320374]
[335.94961548 -200.48066711]
[320.44604492 -199.83370972]
[312.25161743 -187.26980591]
[304.05718994 -174.70591736]
[295.86276245 -162.14202881]
[295.39062500 -147.25491333]
[281.37094116 -139.92283630]
[280.89880371 -125.03571320]
[266.87915039 -117.70363617]
[258.68472290 -105.13973999]
[250.49028015 -92.57585144]
[255.96438599 -78.74934387]
[252.20271301 -64.17835236]
[240.44494629 -54.50322342]
[225.06692505 -53.59613419]
[216.87249756 -41.03224182]
[221.26457214 -28.91912270]
[217.82690430 -16.29958725]
[207.59828186 -7.83946800]
[194.16989136 -6.79980469]
[185.79019165 5.64128065]
[177.41049194 18.08236504]
[169.03079224 30.52345085]
[168.33810425 45.40193939]
[154.21131897 52.52546310]
[145.83161926 64.96655273]
[137.45191956 77.40763855]
[142.88273621 91.38999176]
[157.46307373 94.91327667]
[172.04342651 98.43656921]
[186.62376404 101.95986176]
[201.20411682 105.48315430]
[215.78445435 109.00643921]
[230.36479187 112.52973175]
[244.94514465 116.05302429]
[259.52548218 119.57631683]
[273.91122437 112.47487640]
[288.37084961 119.42456055]
[291.81222534 135.09416199]
[281.59539795 147.46331787]
[265.55783081 147.04344177]
[256.00219727 134.15666199]
[241.42184448 130.63336182]
[226.84150696 127.11007690]
[212.26116943 123.58678436]
[197.68081665 120.06349945]
[183.10047913 116.54020691]
[168.52012634 113.01691437]
[153.93978882 109.49362183]
[139.35945129 105.97033691]
[132.90039062 119.11254120]
[122.50009918 128.47079468]
[109.97434998 133.05551147]
[118.71199799 146.24505615]
[111.93807983 159.51017761]
[113.04847717 174.46902466]
[114.15886688 189.42787170]
[115.38007355 204.37806702]
[116.71200562 219.31881714]
[118.04394531 234.25956726]
[119.37588501 249.20031738]
[120.70782471 264.14105225]
[122.03976440 279.08181763]
[130.97189331 292.14044189]
[124.39529419 305.50445557]
[125.72722626 320.44522095]
[127.05916595 335.38595581]
[128.39111328 350.32672119]
[129.72303772 365.26745605]
[131.49714661 380.16217041]
[133.71183777 394.99777222]
[135.92654419 409.83337402]
[138.14123535 424.66897583]
[152.61610413 429.64260864]
[163.11314392 440.78131104]
[167.22024536 455.52548218]
[163.99360657 470.48699951]
[154.17469788 482.22784424]
[140.01982117 488.05004883]
[124.78166962 486.61572266]
[111.96186066 478.25445557]
[104.50628662 464.88757324]
[104.12818909 449.58673096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 199]
[4 198]
[9 197]
[10 196]
[11 195]
[12 194]
[13 193]
[15 191]
[16 190]
[17 189]
[18 188]
[19 187]
[20 186]
[22 185]
[23 184]
[24 183]
[26 181]
[28 74]
[29 73]
[30 72]
[31 71]
[32 70]
[35 67]
[36 66]
[37 65]
[38 64]
[39 63]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[49 53]
[76 93]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[97 155]
[98 154]
[99 153]
[101 151]
[102 150]
[103 149]
[104 148]
[107 144]
[108 143]
[112 139]
[113 138]
[114 137]
[116 135]
[118 133]
[119 132]
[120 131]
[121 130]
[156 178]
[157 177]
[158 176]
[159 175]
[160 174]
[161 173]
[162 172]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
