%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGGGUCCGCCGGCGGGGCGGGGCGGCGUGUGCCCGGGGGCGGGCGGGCGGCAGGGCAGCAGGACCGCGGCCGGUGCCCCAGCCGAAGCCGGAGUCGCGCGGCCGGGAGCACGGGCGCCGGCAUAGUACAAUGAGGCAGCCAGCGGAUCUUGGAGCCUGAGCCCUUGUGAAGCCGGCA\
) } def
/len { sequence length } bind def

/coor [
[60.00779724 352.99438477]
[56.92289734 367.67376709]
[53.83800125 382.35311890]
[61.36723328 396.51962280]
[54.85386276 411.18099976]
[39.29439163 415.09024048]
[26.62471008 405.24856567]
[26.56391716 389.20562744]
[39.15864563 379.26821899]
[42.24354553 364.58886719]
[45.32844543 349.90951538]
[48.15950775 335.17907715]
[50.73589325 320.40200806]
[53.31227875 305.62490845]
[55.88866425 290.84783936]
[58.46504974 276.07073975]
[61.04143524 261.29367065]
[50.55890656 250.74594116]
[48.27027130 235.87226868]
[55.26036453 222.34480286]
[69.03472137 215.44747925]
[71.61110687 200.67039490]
[74.18749237 185.89331055]
[76.63624573 171.09452820]
[78.95719147 156.27517700]
[81.27812958 141.45582581]
[83.59906769 126.63647461]
[73.08440399 115.93872833]
[60.48067093 125.50201416]
[46.80949020 119.59032440]
[31.95228195 121.65512085]
[17.09507561 123.71992493]
[4.49134159 133.28321838]
[-9.17983913 127.37152100]
[-24.03704643 129.43632507]
[-38.89425278 131.50112915]
[-53.75145721 133.56593323]
[-68.60866547 135.63073730]
[-83.46587372 137.69554138]
[-96.06453705 148.19342041]
[-111.35979462 142.27842712]
[-113.61719513 126.03540039]
[-100.51451874 116.17375946]
[-85.53067780 122.83833313]
[-70.67346954 120.77352905]
[-55.81626129 118.70872498]
[-40.95905304 116.64392090]
[-26.10184860 114.57911682]
[-11.24464130 112.51431274]
[0.29640576 103.09871674]
[15.03027344 108.86271667]
[29.88747978 106.79792023]
[44.74468613 104.73311615]
[56.28573227 95.31751251]
[71.01959991 101.08152008]
[84.30038452 80.27075195]
[105.58708954 79.31480408]
[114.31987000 67.11896515]
[123.05265045 54.92311859]
[131.78543091 42.72727966]
[129.40908813 27.33277512]
[138.43910217 15.08885860]
[153.13005066 12.91825199]
[161.86283875 0.72241044]
[170.59561157 -11.47343063]
[179.32839966 -23.66927338]
[188.06117249 -35.86511230]
[196.68836975 -48.13587189]
[205.20935059 -60.48062897]
[213.73031616 -72.82538605]
[222.25129700 -85.17014313]
[217.26762390 -112.49219513]
[242.82171631 -130.27169800]
[245.39810181 -145.04878235]
[247.97448730 -159.82586670]
[242.72247314 -174.74990845]
[252.53080750 -185.95909119]
[255.10719299 -200.73617554]
[257.68359375 -215.51325989]
[260.25997925 -230.29034424]
[262.70870972 -245.08911133]
[265.02966309 -259.90847778]
[267.35061646 -274.72781372]
[261.84176636 -289.55899048]
[271.45516968 -300.93579102]
[273.77612305 -315.75515747]
[276.09704590 -330.57449341]
[278.41799927 -345.39385986]
[271.45697021 -356.27246094]
[273.71206665 -368.58154297]
[283.43432617 -375.80633545]
[286.01071167 -390.58340454]
[275.79840088 -402.42584229]
[275.63916016 -418.06259155]
[285.60821533 -430.11053467]
[300.99841309 -432.88095093]
[314.54302979 -425.06573486]
[319.84671021 -410.35501099]
[314.40518188 -395.69473267]
[300.78778076 -388.00701904]
[298.21139526 -373.22994995]
[305.13122559 -357.11486816]
[293.23733521 -343.07290649]
[290.91641235 -328.25357056]
[288.59545898 -313.43420410]
[286.27453613 -298.61486816]
[291.94937134 -284.84365845]
[282.16995239 -272.40689087]
[279.84902954 -257.58752441]
[277.52807617 -242.76817322]
[279.60479736 -235.65492249]
[275.03704834 -227.71395874]
[272.46066284 -212.93687439]
[269.88427734 -198.15979004]
[267.30789185 -183.38270569]
[272.74420166 -169.51562500]
[262.75155640 -157.24948120]
[260.17517090 -142.47239685]
[257.59878540 -127.69532013]
[268.47644043 -117.36686707]
[283.10037231 -120.70468140]
[297.72427368 -124.04249573]
[305.24746704 -134.54020691]
[317.51553345 -137.00860596]
[327.82955933 -130.65718079]
[342.50891113 -133.74208069]
[357.18826294 -136.82698059]
[365.61541748 -150.19705200]
[381.04663086 -153.61070251]
[394.32684326 -145.04266357]
[397.57717896 -129.57621765]
[388.86920166 -116.38732147]
[373.36926270 -113.30072021]
[360.27316284 -122.14762878]
[345.59381104 -119.06272888]
[330.91445923 -115.97783661]
[318.51257324 -103.57728577]
[301.06210327 -109.41857910]
[286.43817139 -106.08076477]
[271.81423950 -102.74295044]
[270.13018799 -93.11907196]
[265.58386230 -84.85464478]
[258.85473633 -78.73629761]
[250.81483459 -75.26479340]
[242.41963196 -74.61742401]
[234.59605408 -76.64916992]
[226.07507324 -64.30441284]
[217.55410767 -51.95965576]
[209.03312683 -39.61489868]
[207.81787109 -32.30502701]
[200.25701904 -27.13233376]
[191.52424622 -14.93649197]
[182.79145813 -2.74065089]
[174.05868530 9.45519066]
[165.32589722 21.65103149]
[168.00325012 36.25813293]
[159.32069397 48.75085449]
[143.98127747 51.46006012]
[135.24848938 63.65589905]
[126.51571655 75.85173798]
[117.78293610 88.04758453]
[123.69189453 103.51455688]
[116.73992920 120.51210022]
[98.41841888 128.95741272]
[96.09748077 143.77676392]
[93.77654266 158.59611511]
[91.45560455 173.41548157]
[93.22193146 182.40454102]
[88.96457672 188.46969604]
[86.38819122 203.24678040]
[83.81180573 218.02386475]
[94.43930054 229.17565918]
[96.43909454 244.27050781]
[89.25204468 257.49209595]
[75.81851959 263.87005615]
[73.24213409 278.64712524]
[70.66574860 293.42422485]
[68.08936310 308.20129395]
[65.51297760 322.97839355]
[62.93659210 337.75546265]
[64.85966492 344.12484741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[12 180]
[13 179]
[14 178]
[15 177]
[16 176]
[17 175]
[21 171]
[22 170]
[23 169]
[24 167]
[25 166]
[26 165]
[27 164]
[28 55]
[30 53]
[31 52]
[32 51]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[57 161]
[58 160]
[59 159]
[60 158]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 149]
[69 148]
[70 147]
[71 146]
[73 119]
[74 118]
[75 117]
[77 115]
[78 114]
[79 113]
[80 112]
[81 110]
[82 109]
[83 108]
[85 106]
[86 105]
[87 104]
[88 103]
[91 101]
[92 100]
[120 140]
[121 139]
[122 138]
[125 136]
[126 135]
[127 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
