%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUAGCACACACCCCCUCCGCCCCGCGCGCCGGCGAUUCCGAGCCUACGACGCCUCCGCUAGAGCCCGCGGGGCUGCGCCGACUCCUGCUCUGGAGGGGUUGCGGGUACCUGAUGGCCACAGAGGGCUCUAGGAGGCCGAGCGUGUAAGCGGGGUGGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[79.76366425 456.75341797]
[71.64961243 469.60763550]
[59.23122787 478.37417603]
[44.40222931 481.71621704]
[29.42392921 479.12411499]
[16.58041191 470.99316406]
[7.83021641 458.56326294]
[4.50768709 443.72985840]
[7.11948538 428.75497437]
[15.26733017 415.92218018]
[27.70873451 407.18835449]
[42.54647446 403.88531494]
[37.09277725 390.02508545]
[47.06999207 377.74639893]
[49.62782669 362.96609497]
[52.18565750 348.18579102]
[46.73196411 334.32553101]
[56.70917511 322.04687500]
[59.26700974 307.26657104]
[61.82484436 292.48626709]
[64.38267517 277.70596313]
[66.94050598 262.92562866]
[69.49834442 248.14533997]
[60.66029739 238.73272705]
[58.84416962 225.75274658]
[64.93784332 213.92941284]
[76.90876007 207.69694519]
[79.74752808 192.96801758]
[82.58629608 178.23908997]
[85.42506409 163.51016235]
[88.26383209 148.78123474]
[91.10260010 134.05229187]
[93.80102539 119.29701233]
[83.97811127 107.96076965]
[68.98423004 108.38910675]
[53.99034882 108.81745148]
[45.34333420 121.70188904]
[30.76291466 127.01140594]
[15.85555935 122.70439148]
[6.35345221 110.43696594]
[5.91034555 94.92622375]
[14.69662380 82.13634491]
[29.33378410 76.98530579]
[44.19353867 81.45378876]
[53.56200790 93.82357025]
[68.55589294 93.39522552]
[83.54977417 92.96688843]
[69.75442505 87.07720947]
[63.46977997 73.45725250]
[67.94062042 59.13902283]
[80.85864258 51.51506424]
[95.55423737 54.52163315]
[104.44004059 66.60643768]
[102.92736816 81.53189850]
[110.55068970 68.61350250]
[118.17401886 55.69511032]
[125.79734039 42.77671432]
[133.42066956 29.85832024]
[141.04399109 16.93992805]
[141.49333191 10.27017879]
[144.77551270 5.56087923]
[149.21148682 3.68272853]
[157.32109070 -8.93607426]
[165.43070984 -21.55487823]
[173.54031372 -34.17367935]
[181.64993286 -46.79248428]
[189.75953674 -59.41128540]
[197.86915588 -72.03009033]
[205.97877502 -84.64889526]
[200.51251221 -99.05119324]
[204.52798462 -113.73892212]
[216.28312683 -123.13469696]
[231.13899231 -123.79897308]
[239.12811279 -136.49440002]
[246.99600220 -149.26531982]
[254.86390686 -162.03622437]
[262.73181152 -174.80714417]
[269.73181152 -188.07363892]
[275.83285522 -201.77682495]
[274.37753296 -217.53094482]
[286.62252808 -226.01084900]
[292.59286499 -239.77148438]
[298.43191528 -253.58834839]
[304.27096558 -267.40518188]
[310.11001587 -281.22204590]
[315.94906616 -295.03890991]
[321.78811646 -308.85577393]
[327.62716675 -322.67260742]
[333.46621704 -336.48947144]
[331.71121216 -352.21304321]
[343.79257202 -360.92453003]
[344.38882446 -377.86798096]
[360.83520508 -381.98544312]
[369.34454346 -367.32162476]
[357.60940552 -355.08547974]
[359.78207397 -340.35018921]
[347.28308105 -330.65042114]
[341.44403076 -316.83355713]
[335.60498047 -303.01672363]
[329.76593018 -289.19985962]
[323.92687988 -275.38299561]
[318.08782959 -261.56613159]
[312.24877930 -247.74929810]
[306.40972900 -233.93243408]
[306.70388794 -226.51338196]
[300.32571411 -219.90979004]
[302.21743774 -205.13580322]
[289.53604126 -195.67576599]
[283.43499756 -181.97259521]
[297.52694702 -187.11227417]
[311.67968750 -182.14233398]
[319.46417236 -169.32041931]
[317.34426880 -154.47097778]
[306.28292847 -144.33949280]
[291.30487061 -143.52830505]
[279.21401978 -152.40586853]
[275.50271606 -166.93925476]
[267.63482666 -154.16833496]
[259.76690674 -141.39741516]
[251.89903259 -128.62651062]
[251.06408691 -121.24872589]
[243.75779724 -115.68936157]
[249.32490540 -101.90003967]
[245.66146851 -87.30403900]
[233.96913147 -77.54993439]
[218.59756470 -76.53928375]
[210.48796082 -63.92047882]
[202.37834167 -51.30167389]
[194.26873779 -38.68287277]
[186.15911865 -26.06406784]
[178.04951477 -13.44526482]
[169.93989563 -0.82646221]
[161.83029175 11.79234123]
[153.96238708 24.56325340]
[146.33906555 37.48164749]
[138.71574402 50.40003967]
[131.09240723 63.31843567]
[123.46908569 76.23683167]
[115.84575653 89.15522003]
[120.39833832 106.27045441]
[108.58133698 121.85484314]
[110.20507050 130.89099121]
[105.83153534 136.89106750]
[102.99276733 151.61999512]
[100.15399933 166.34892273]
[97.31522369 181.07786560]
[94.47645569 195.80679321]
[91.63768768 210.53572083]
[101.70443726 224.81582642]
[98.41589355 241.63182068]
[84.27864838 250.70317078]
[81.72081757 265.48348999]
[79.16297913 280.26379395]
[76.60514832 295.04409790]
[74.04731750 309.82440186]
[71.48948669 324.60470581]
[76.76022339 339.52215576]
[66.96596527 350.74362183]
[64.40813446 365.52392578]
[61.85029984 380.30422974]
[67.12104034 395.22167969]
[57.32678223 406.44314575]
[70.19165039 414.54028320]
[78.97451782 426.94714355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 162]
[14 160]
[15 159]
[16 158]
[18 156]
[19 155]
[20 154]
[21 153]
[22 152]
[23 151]
[27 148]
[28 147]
[29 146]
[30 145]
[31 144]
[32 143]
[33 141]
[34 47]
[35 46]
[36 45]
[54 139]
[55 138]
[56 137]
[57 136]
[58 135]
[59 134]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[69 126]
[73 122]
[74 120]
[75 119]
[76 118]
[77 117]
[78 109]
[79 108]
[81 106]
[82 104]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[91 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
