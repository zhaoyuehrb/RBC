%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGCGGAACGCGCCGGGCGGGCUCCACCGCGCCGUGUGCUUCCGCAGGUUGCGGGGGUCGCUGGGGCCUUGUGGCGGGGCAGCUCCGCGGGGCUUCGCCCGCUCUCUCACCUCGCCGUGCUCUCUCGCGGCGGCCGGCGGGGCCCGCGCUGCAGCCGGAGACCCGGAGAAAGGUGAAGAACUGAAUGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[103.47534180 172.06832886]
[118.20780945 174.88587952]
[112.13605499 161.16967773]
[106.06430817 147.45349121]
[99.99255371 133.73730469]
[85.36863708 130.39949036]
[73.94694519 140.12290955]
[62.52526093 149.84634399]
[51.10356903 159.56976318]
[39.68188095 169.29319763]
[28.26019096 179.01661682]
[23.74687958 186.97279358]
[16.57662964 188.80258179]
[5.00056124 198.34169006]
[-6.57550621 207.88079834]
[-18.15157509 217.41990662]
[-29.65082169 227.05149841]
[-41.07250977 236.77491760]
[-52.49420166 246.49833679]
[-63.83759689 256.31298828]
[-75.10197449 266.21823120]
[-86.36634827 276.12347412]
[-97.63072968 286.02871704]
[-98.39306641 301.81460571]
[-110.15042877 312.37585449]
[-125.92737579 311.44665527]
[-136.36373901 299.57830811]
[-135.26779175 283.81207275]
[-123.28974915 273.50177002]
[-107.53597260 274.76434326]
[-96.27159119 264.85910034]
[-85.00721741 254.95385742]
[-73.74284363 245.04861450]
[-70.79214478 238.26231384]
[-62.21762848 235.07666016]
[-50.79593658 225.35322571]
[-39.37424850 215.62980652]
[-36.31516266 208.89166260]
[-27.69068527 205.84384155]
[-16.11461830 196.30473328]
[-4.53855038 186.76562500]
[7.03751755 177.22651672]
[18.53676605 167.59492493]
[29.95845413 157.87150574]
[41.38014221 148.14808655]
[52.80183411 138.42465210]
[64.22352600 128.70123291]
[75.64521027 118.97779846]
[74.75526428 89.35168457]
[97.36126709 76.22454071]
[100.46425629 61.54900742]
[103.56725311 46.87346649]
[106.67024994 32.19792938]
[109.77324677 17.52239227]
[112.87624359 2.84685326]
[115.97923279 -11.82868481]
[111.59621429 -26.17403793]
[100.82097626 -36.60927582]
[90.04573822 -47.04451370]
[79.27049255 -57.47975159]
[68.49525452 -67.91499329]
[53.19920349 -71.95744324]
[49.43928146 -86.36966705]
[38.66403961 -96.80490875]
[27.88880157 -107.24015045]
[14.52830696 -105.47587585]
[2.76468039 -111.64219666]
[-3.20752263 -123.28719330]
[-1.40539813 -136.05308533]
[-12.01200008 -146.65968323]
[-22.61860085 -157.26629639]
[-38.59038162 -160.98574829]
[-43.09557343 -176.75392151]
[-31.49962425 -188.34986877]
[-15.73145294 -183.84466553]
[-12.01200008 -167.87289429]
[-1.40539813 -157.26629639]
[9.20120335 -146.65968323]
[25.99789429 -147.38175964]
[38.36748505 -135.50279236]
[38.32403946 -118.01538849]
[49.09928131 -107.58014679]
[59.87451935 -97.14491272]
[74.39984894 -93.84885406]
[78.93048859 -78.69023132]
[89.70573425 -68.25498962]
[100.48097229 -57.81975555]
[111.25621033 -47.38451385]
[122.03145599 -36.94927597]
[137.02374268 -37.43004990]
[147.10826111 -48.53422165]
[157.19277954 -59.63838959]
[167.18797302 -70.82302094]
[177.09321594 -82.08740234]
[186.99845886 -93.35177612]
[196.90370178 -104.61614990]
[206.80894470 -115.88053131]
[216.71418762 -127.14490509]
[226.61943054 -138.40928650]
[236.52467346 -149.67366028]
[246.42990112 -160.93803406]
[256.33514404 -172.20240784]
[259.63769531 -187.67509460]
[273.85253906 -192.12342834]
[283.75778198 -203.38780212]
[269.08828735 -200.25625610]
[254.78596497 -204.77769470]
[244.58227539 -215.77244568]
[241.13937378 -230.37197876]
[245.35551453 -244.76725769]
[256.13070679 -255.20254517]
[270.65368652 -258.95526123]
[285.13540649 -255.04631042]
[295.79757690 -244.49554443]
[299.85839844 -230.05567932]
[296.25827026 -215.49386597]
[307.83435059 -225.03297424]
[319.41043091 -234.57208252]
[330.98648071 -244.11119080]
[342.56256104 -253.65031433]
[354.13861084 -263.18942261]
[365.71469116 -272.72854614]
[366.98260498 -288.48187256]
[379.07241821 -298.66085815]
[394.81149292 -297.22647095]
[404.86209106 -285.02969360]
[403.26135254 -269.30667114]
[390.95901489 -259.38562012]
[375.25378418 -261.15246582]
[363.67773438 -251.61335754]
[352.10165405 -242.07423401]
[340.52560425 -232.53512573]
[328.94952393 -222.99601746]
[317.37347412 -213.45690918]
[305.79739380 -203.91780090]
[295.02215576 -193.48255920]
[285.11691284 -182.21818542]
[282.52285767 -167.55120850]
[267.59951782 -162.29716492]
[257.69427490 -151.03279114]
[247.78904724 -139.76841736]
[237.88380432 -128.50404358]
[227.97856140 -117.23966217]
[218.07331848 -105.97528839]
[208.16807556 -94.71091461]
[198.26283264 -83.44653320]
[188.35758972 -72.18215942]
[178.45234680 -60.91778183]
[176.39369202 -53.80986404]
[168.29693604 -49.55387878]
[158.21243286 -38.44970703]
[148.12791443 -27.34553719]
[130.65476990 -8.72568989]
[127.55178070 5.94984865]
[124.44878387 20.62538719]
[121.34578705 35.30092621]
[118.24279022 49.97646332]
[115.13980103 64.65200043]
[112.03680420 79.32753754]
[119.43110657 84.14240265]
[124.86228943 91.61070251]
[127.38312531 100.92070007]
[126.38432312 110.92735291]
[121.70896149 120.29294586]
[113.70874786 127.66555786]
[119.78049469 141.38174438]
[125.85224915 155.09793091]
[131.92399597 168.81411743]
[138.54034424 182.27606201]
[145.69068909 195.46214294]
[159.07072449 203.90519714]
[158.33602905 218.78167725]
[175.18994141 223.44613647]
[183.30166626 238.55628967]
[178.08580017 254.53894043]
[185.44656372 267.60873413]
[192.80732727 280.67849731]
[207.80932617 286.36355591]
[212.58079529 301.68060303]
[203.46148682 314.87976074]
[187.44692993 315.83575439]
[176.82214355 303.81518555]
[179.73754883 288.03927612]
[172.37678528 274.96948242]
[165.01602173 261.89971924]
[152.23612976 260.19970703]
[142.62805176 251.31388855]
[139.85513306 238.32476807]
[145.14994812 225.93200684]
[132.28135681 218.43211365]
[132.50460815 202.61247253]
[125.35427094 189.42640686]
[118.58477783 202.81199646]
[103.93316650 206.02604675]
[92.18222046 196.70321655]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[5 165]
[6 48]
[7 47]
[8 46]
[9 45]
[10 44]
[11 43]
[13 42]
[14 41]
[15 40]
[16 39]
[17 37]
[18 36]
[19 35]
[20 33]
[21 32]
[22 31]
[23 30]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[55 154]
[56 153]
[57 89]
[58 88]
[59 87]
[60 86]
[61 85]
[63 83]
[64 82]
[65 81]
[69 78]
[70 77]
[71 76]
[90 152]
[91 151]
[92 150]
[93 148]
[94 147]
[95 146]
[96 145]
[97 144]
[98 143]
[99 142]
[100 141]
[101 140]
[102 139]
[104 137]
[105 136]
[116 135]
[117 134]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[169 192]
[170 191]
[172 189]
[175 185]
[176 184]
[177 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
