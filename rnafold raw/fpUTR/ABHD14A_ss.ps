%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGGUAACUGGGUUGCAGGCCCGCGGCUGCGGAGUGCGCAGGCGCGCCGAGAUGGCCGCGCUCCUGGCCGCCUAGAGCCGGAGCGGCCCGCGGAGCUGCGGAGGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[180.06849670 99.40901947]
[165.10603333 100.46948242]
[150.14356995 101.52994537]
[135.18110657 102.59040833]
[120.21863556 103.65087128]
[105.25617218 104.71133423]
[106.70594025 109.26338196]
[106.34956360 114.48240662]
[104.00702667 119.78887177]
[99.66545105 124.56549835]
[93.48509216 128.20234680]
[81.17755127 136.77699280]
[68.87001038 145.35163879]
[56.56247330 153.92628479]
[44.25493622 162.50091553]
[34.71523285 176.51628113]
[18.60674286 171.22923279]
[19.22789574 154.28666687]
[35.68029404 150.19338989]
[47.98783112 141.61874390]
[60.29536819 133.04409790]
[72.60290527 124.46945190]
[84.91044617 115.89481354]
[83.42698669 100.96834564]
[69.67250061 94.98386383]
[55.91800690 88.99938965]
[40.17680359 90.58843994]
[31.59324265 78.41585541]
[17.83875275 72.43137360]
[4.08426237 66.44689941]
[-9.67022705 60.46241379]
[-23.42471695 54.47793579]
[-38.81943130 58.99261856]
[-51.86425018 49.65387344]
[-52.55231094 33.62557983]
[-40.35578537 23.20327950]
[-24.63080978 26.38206482]
[-17.44023705 40.72344589]
[-3.68574715 46.70792389]
[10.06874275 52.69240570]
[23.82323265 58.67688751]
[37.57772446 64.66136932]
[52.33511353 62.64426422]
[61.90248871 75.24489594]
[75.65697479 81.22937775]
[89.41146851 87.21385956]
[104.19570923 89.74887085]
[119.15817261 88.68840790]
[134.12063599 87.62794495]
[149.08309937 86.56748199]
[164.04557800 85.50701904]
[179.00804138 84.44655609]
[186.55943298 66.26712036]
[202.09100342 54.29676819]
[221.44313049 51.64558792]
[239.48042297 58.94056320]
[251.45440674 74.17942810]
[266.11773682 71.01924133]
[280.78106689 67.85904694]
[295.44439697 64.69886017]
[310.06152344 61.33148956]
[324.62954712 57.75761032]
[339.19757080 54.18373108]
[353.76559448 50.60985184]
[368.33364868 47.03597260]
[382.06896973 32.41513443]
[400.41409302 38.24527740]
[414.75659180 33.85293579]
[429.09909058 29.46059418]
[443.44161987 25.06825256]
[457.78411865 20.67591095]
[472.12661743 16.28356934]
[486.40551758 11.68870926]
[500.61798096 6.89225054]
[507.40762329 -7.37926674]
[522.32788086 -12.59094524]
[536.52679443 -5.65078878]
[541.58044434 9.32373142]
[534.49053955 23.44849777]
[519.46343994 28.34353638]
[505.41442871 21.10470963]
[491.20196533 25.90116882]
[485.79171753 31.09770012]
[476.51895142 30.62607002]
[462.17645264 35.01841354]
[447.83395386 39.41075516]
[433.49145508 43.80309677]
[419.14895630 48.19543839]
[404.80645752 52.58778000]
[400.75204468 62.16174698]
[391.86828613 67.97821045]
[381.02899170 67.86117554]
[371.90750122 61.60400009]
[357.33947754 65.17787933]
[342.77145386 68.75175476]
[328.20343018 72.32563782]
[313.63540649 75.89951324]
[307.80395508 80.61850739]
[298.60458374 79.36219025]
[283.94125366 82.52237701]
[269.27792358 85.68256378]
[254.61459351 88.84275818]
[253.25401306 99.57484436]
[248.88725281 109.49562073]
[241.86425781 117.77995300]
[232.75643921 123.73506165]
[222.31016541 126.85843658]
[211.38568115 126.88022614]
[200.88615417 123.78650665]
[191.68313599 117.82142639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 52]
[2 51]
[3 50]
[4 49]
[5 48]
[6 47]
[11 23]
[12 22]
[13 21]
[14 20]
[15 19]
[24 46]
[25 45]
[26 44]
[28 42]
[29 41]
[30 40]
[31 39]
[32 38]
[57 102]
[58 101]
[59 100]
[60 99]
[61 97]
[62 96]
[63 95]
[64 94]
[65 93]
[67 89]
[68 88]
[69 87]
[70 86]
[71 85]
[72 84]
[73 82]
[74 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
