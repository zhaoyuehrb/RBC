%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCAGCCCAGUGGCCCUCUGAGCUGUUCCUUCUUGACCGGCACACACAGCUCGCUUCUUCACUUUCUUUUCCAUCCACUGCCGGACCCAAGCCAGCCUUCCAGGGAGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[40.72693253 265.21139526]
[34.75160217 279.03042603]
[24.42835999 289.95068359]
[11.01718235 296.66744995]
[-3.85464549 298.38726807]
[-18.38997078 294.92178345]
[-26.59419441 307.47927856]
[-34.79841614 320.03677368]
[-35.16105270 336.43191528]
[-49.66909409 344.07711792]
[-63.39791107 335.10760498]
[-62.22447205 318.75051880]
[-47.35591125 311.83255005]
[-39.15169144 299.27505493]
[-30.94746780 286.71755981]
[-39.95984268 274.79858398]
[-44.35881042 260.48849487]
[-43.59499359 245.50881958]
[-37.74130630 231.66844177]
[-27.48647308 220.64535522]
[-14.05405521 213.78311157]
[0.94352162 211.92713928]
[15.69851780 215.32057190]
[23.90274048 202.76307678]
[32.10696411 190.20558167]
[40.31118393 177.64808655]
[48.51540756 165.09057617]
[56.71963120 152.53308105]
[64.92385101 139.97558594]
[73.12807465 127.41809082]
[81.33229828 114.86059570]
[89.53652191 102.30310059]
[95.93816376 88.73773956]
[100.41588593 74.42166901]
[104.89360809 60.10559082]
[109.37133026 45.78951645]
[103.97065735 26.46378899]
[118.46719360 13.79193401]
[122.14947510 -0.74906963]
[125.83175659 -15.29007339]
[129.51403809 -29.83107758]
[133.19631958 -44.37208176]
[136.87860107 -58.91308594]
[123.10889435 -64.95004272]
[110.52071381 -73.17121887]
[99.45748901 -83.35231781]
[90.22102356 -95.21560669]
[83.06330109 -108.43743896]
[78.17958069 -122.65711212]
[75.70310974 -137.48670959]
[75.70143127 -152.52166748]
[78.17459869 -167.35180664]
[83.05514526 -181.57257080]
[90.20991516 -194.79600525]
[99.44373322 -206.66134644]
[110.50469208 -216.84492493]
[123.09103394 -225.06890869]
[136.85940552 -231.10893250]
[151.43417358 -234.80024719]
[166.41775513 -236.04211426]
[181.40136719 -234.80068970]
[195.97625732 -231.10983276]
[209.74481201 -225.07022095]
[222.33140564 -216.84661865]
[233.39266968 -206.66339111]
[242.62684631 -194.79832458]
[249.78202820 -181.57511902]
[254.66299438 -167.35449219]
[257.13662720 -152.52442932]
[257.13540649 -137.48947144]
[254.65937805 -122.65979767]
[249.77609253 -108.43997192]
[242.61877441 -95.21792603]
[233.38265991 -83.35435486]
[222.31974792 -73.17291260]
[209.73181152 -64.95136261]
[195.96229553 -58.91398239]
[181.38679504 -55.22548676]
[166.40298462 -53.98649216]
[151.41961670 -55.23080444]
[147.73731995 -40.68980026]
[144.05503845 -26.14879608]
[140.37275696 -11.60779095]
[136.69047546 2.93321276]
[133.00819397 17.47421646]
[139.08694458 25.89690971]
[139.45875549 36.49886703]
[133.75198364 45.70306396]
[123.68740845 50.26723862]
[119.20968628 64.58331299]
[114.73196411 78.89939117]
[110.25424194 93.21546173]
[123.07499695 85.42905426]
[138.06617737 84.91478729]
[151.39039612 91.80430603]
[159.63694763 104.33404541]
[160.69491577 119.29668427]
[154.29347229 132.86215210]
[142.07125854 141.55796814]
[127.15686798 143.15824890]
[113.36803436 137.25332642]
[104.23438263 125.35473633]
[102.09401703 110.50731659]
[93.88979340 123.06481934]
[85.68556976 135.62231445]
[77.48134613 148.17980957]
[69.27713013 160.73730469]
[61.07290649 173.29479980]
[52.86868286 185.85231018]
[44.66445923 198.40980530]
[36.46023941 210.96730042]
[28.25601578 223.52479553]
[37.29064941 235.67390442]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 15]
[7 14]
[8 13]
[23 112]
[24 111]
[25 110]
[26 109]
[27 108]
[28 107]
[29 106]
[30 105]
[31 104]
[32 103]
[33 92]
[34 91]
[35 90]
[36 89]
[38 85]
[39 84]
[40 83]
[41 82]
[42 81]
[43 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
