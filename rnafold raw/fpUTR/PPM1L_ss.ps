%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCUCCGCCUCCCUCCCGGCGGGCUGUCCCCGCAGUGCUCCCGGACCCGGCGAGCCUUCGGGGCGCGCGUCGCUGGUGGUGGUUGAGGCUCUAGCGAUAAUAA\
) } def
/len { sequence length } bind def

/coor [
[146.14776611 436.44750977]
[151.83883667 422.18191528]
[163.91018677 412.68569946]
[161.69548035 397.85009766]
[159.48078918 383.01449585]
[157.26608276 368.17889404]
[143.36727905 358.84036255]
[140.38758850 342.02197266]
[150.62651062 327.93374634]
[147.97315979 313.17028809]
[145.31980896 298.40682983]
[142.66645813 283.64337158]
[140.01310730 268.87991333]
[136.92341614 254.20155334]
[133.40013123 239.62120056]
[129.66116333 225.09468079]
[125.70735931 210.62513733]
[121.53957367 196.21578979]
[117.15872192 181.86976624]
[112.77787018 167.52375793]
[108.39701843 153.17773438]
[104.01616669 138.83172607]
[99.63531494 124.48571014]
[95.25446320 110.13969421]
[90.66151428 95.86017609]
[85.85746765 81.65027618]
[80.84337616 67.51313019]
[75.62035370 53.45183563]
[69.60456085 46.35988235]
[70.45766449 38.89570999]
[65.65361786 24.68581581]
[60.84957123 10.47592068]
[56.04552078 -3.73397470]
[51.24147415 -17.94387054]
[39.49194717 -28.53911209]
[42.74553299 -43.07401657]
[37.94148636 -57.28391266]
[32.13849258 -64.55101776]
[33.21241379 -71.98663330]
[28.83156204 -86.33264923]
[24.45071030 -100.67865753]
[20.06985855 -115.02467346]
[15.47690392 -129.30419922]
[10.67285633 -143.51409912]
[5.86880875 -157.72398376]
[-6.79791975 -168.13964844]
[-3.84449792 -184.27066040]
[11.69084644 -189.52281189]
[23.82668304 -178.49314880]
[20.07870483 -162.52803040]
[24.88275146 -148.31814575]
[29.68680000 -134.10824585]
[34.89415359 -128.69297791]
[34.41587448 -119.40552521]
[38.79672623 -105.05950928]
[43.17757797 -90.71350098]
[47.55842590 -76.36748505]
[52.15138245 -62.08795929]
[56.95542908 -47.87806320]
[68.36133575 -38.29920959]
[65.45137024 -22.74791718]
[70.25541687 -8.53802299]
[75.05946350 5.67187262]
[79.86351013 19.88176727]
[84.66756439 34.09166336]
[89.68164825 48.22880936]
[94.90467072 62.29010391]
[100.27021027 67.54868317]
[100.06735992 76.84622955]
[104.87140656 91.05612183]
[110.31424713 97.19120026]
[109.60047913 105.75884247]
[113.98133087 120.10485840]
[118.36218262 134.45086670]
[122.74303436 148.79689026]
[127.12388611 163.14289856]
[131.50474548 177.48892212]
[135.88558960 191.83493042]
[141.47068787 199.27081299]
[140.17689514 206.67132568]
[144.13070679 221.14086914]
[149.49299622 228.73898315]
[147.98046875 236.09791565]
[151.50376892 250.67826843]
[155.94836426 255.92236328]
[156.81753540 261.74566650]
[154.77656555 266.22653198]
[157.42991638 280.98999023]
[160.08326721 295.75344849]
[162.73661804 310.51690674]
[165.38996887 325.28036499]
[177.33604431 331.70745850]
[183.26583862 343.69018555]
[181.19091797 356.69985962]
[172.10168457 365.96417236]
[174.31639099 380.79977417]
[176.53108215 395.63537598]
[178.74578857 410.47097778]
[193.06427002 416.02767944]
[202.67358398 428.00918579]
[204.98887634 443.19256592]
[199.38734436 457.49356079]
[187.37576294 467.06527710]
[172.18519592 469.33294678]
[157.90184021 463.68661499]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 98]
[4 97]
[5 96]
[6 95]
[9 91]
[10 90]
[11 89]
[12 88]
[13 87]
[14 84]
[15 83]
[16 81]
[17 80]
[18 78]
[19 77]
[20 76]
[21 75]
[22 74]
[23 73]
[24 72]
[25 70]
[26 69]
[27 67]
[28 66]
[30 65]
[31 64]
[32 63]
[33 62]
[34 61]
[36 59]
[37 58]
[39 57]
[40 56]
[41 55]
[42 54]
[43 52]
[44 51]
[45 50]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
