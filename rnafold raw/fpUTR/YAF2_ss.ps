%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAGGAGUUUCCCCGACAGCUGGAGGCUGCGUGGGAUCCGGCGGCGGCUCCCGAGCGCGGCGGUGCGGCCUUCCCCGCCCCCUCCCUCCCUCCUCCCCCGCCCGCUUCCGCCCGGCUUAUUAUCCUCCUUAUUGACAAACAGAGCGGUCGCGGCGGCGACUCUCGGCGUGCGGUGAUAGCCAAGCC\
) } def
/len { sequence length } bind def

/coor [
[231.74870300 166.33757019]
[225.68676758 154.93865967]
[211.63450623 149.69139099]
[197.58222961 144.44412231]
[182.95245361 147.24032593]
[172.73085022 135.16433716]
[158.67858887 129.91706848]
[144.62632751 124.66979218]
[130.57406616 119.42252350]
[116.52179718 114.17524719]
[104.13603973 121.37289429]
[89.95927429 119.31557465]
[78.87908173 129.42642212]
[67.79888916 139.53727722]
[56.71870041 149.64813232]
[45.72292328 159.85072327]
[34.81231689 170.14434814]
[30.70731544 178.32611084]
[23.63376808 180.51652527]
[12.55357552 190.62738037]
[1.47338390 200.73823547]
[-9.60680771 210.84909058]
[-20.68700027 220.95994568]
[-28.31146622 236.10272217]
[-44.97312546 232.96817017]
[-46.57347107 216.08992004]
[-30.79785347 209.87974548]
[-19.71766090 199.76889038]
[-8.63746929 189.65803528]
[2.44272304 179.54719543]
[13.52291489 169.43634033]
[24.51869392 159.23374939]
[35.42929840 148.94012451]
[38.14219666 142.05003357]
[46.60784912 138.56794739]
[57.68803787 128.45709229]
[68.76823425 118.34623718]
[79.84842682 108.23538208]
[78.52585602 103.57334137]
[78.26741028 98.73422241]
[79.08589935 93.95782471]
[80.94075012 89.48085022]
[71.10927582 78.15203094]
[61.27780533 66.82321167]
[51.44633102 55.49439240]
[41.61485672 44.16557312]
[26.72615814 38.81420135]
[24.22793388 24.13059807]
[14.39646053 12.80177975]
[-1.25802600 17.20419884]
[-17.20893860 14.35380650]
[-30.27573586 4.87044907]
[-37.87541962 -9.30860996]
[-38.53306580 -25.32425308]
[-32.16782379 -39.97198868]
[-42.18624115 -51.13582993]
[-52.20465851 -62.29967117]
[-67.18024445 -67.40283203]
[-69.92218781 -82.04288483]
[-84.89778137 -87.14604187]
[-87.63971710 -101.78609467]
[-97.65813446 -112.94993591]
[-105.73501587 -117.25763702]
[-107.74840546 -124.38359070]
[-117.57987213 -135.71241760]
[-125.58403778 -140.15376282]
[-127.47870636 -147.31221008]
[-137.12051392 -158.80287170]
[-146.76232910 -170.29354858]
[-156.40414429 -181.78421021]
[-172.16815186 -182.91178894]
[-182.45439148 -194.91049194]
[-181.16020203 -210.66171265]
[-169.05342102 -220.82051086]
[-153.31677246 -219.35986328]
[-143.28654480 -207.14634705]
[-144.91348267 -191.42602539]
[-135.27166748 -179.93534851]
[-125.62985229 -168.44468689]
[-115.98803711 -156.95402527]
[-106.25106049 -145.54388428]
[-96.41958618 -134.21507263]
[-86.49429321 -122.96834564]
[-76.47588348 -111.80450439]
[-62.21687317 -107.49985504]
[-58.75834656 -92.06129456]
[-44.49934006 -87.75664520]
[-41.04081726 -72.31808472]
[-31.02239990 -61.15424728]
[-21.00398445 -49.99040604]
[-7.87746477 -54.51102448]
[6.02425623 -53.68104172]
[18.59766579 -47.59292984]
[27.92761803 -37.13729095]
[32.57902908 -23.87270164]
[31.81754875 -9.79344940]
[25.72527885 2.97030640]
[35.55675125 14.29912472]
[49.74224091 18.84018517]
[52.94367599 34.33409882]
[62.77515030 45.66291809]
[72.60662079 56.99173737]
[82.43809509 68.32055664]
[92.26956940 79.64937592]
[112.41221619 82.11580658]
[121.76907349 100.12298584]
[135.82133484 105.37025452]
[149.87359619 110.61753082]
[163.92585754 115.86479950]
[177.97813416 121.11207581]
[193.61302185 118.69118500]
[202.82951355 130.39184570]
[216.88177490 135.63912964]
[230.93403625 140.88639832]
[249.00868225 137.41268921]
[259.65243530 151.35523987]
[273.78997803 156.36822510]
[287.92752075 161.38121033]
[302.06506348 166.39418030]
[316.20260620 171.40716553]
[334.21701050 167.63351440]
[345.09103394 181.39721680]
[359.30993652 186.17453003]
[373.52883911 190.95182800]
[387.74777222 195.72912598]
[401.96667480 200.50642395]
[396.39434814 186.57984924]
[402.15991211 172.73216248]
[415.96917725 166.87519836]
[429.93228149 172.35531616]
[436.07144165 186.04147339]
[430.87905884 200.11410522]
[417.32177734 206.53286743]
[430.99438477 212.70216370]
[444.66696167 218.87147522]
[458.33953857 225.04078674]
[467.46804810 225.72125244]
[472.18679810 231.42793274]
[485.75494385 237.82365417]
[498.37875366 229.18730164]
[513.53045654 228.03681946]
[527.13323975 234.58132935]
[535.57733154 246.97299194]
[536.67767334 261.82745361]
[550.24584961 268.22314453]
[563.81402588 274.61886597]
[572.92993164 275.45095825]
[577.55316162 281.23529053]
[591.01318359 287.85565186]
[604.47314453 294.47601318]
[617.93310547 301.09634399]
[631.39306641 307.71670532]
[644.85308838 314.33706665]
[661.17114258 312.70819092]
[670.51971436 326.18170166]
[663.28186035 340.89718628]
[646.90319824 341.71661377]
[638.23272705 327.79702759]
[624.77276611 321.17669678]
[611.31274414 314.55633545]
[597.85278320 307.93597412]
[584.39282227 301.31564331]
[570.93286133 294.69528198]
[557.41827393 288.18701172]
[543.85015869 281.79132080]
[530.28198242 275.39559937]
[518.12359619 284.00015259]
[503.19131470 285.37277222]
[489.48635864 279.04504395]
[480.73129272 266.62548828]
[479.35925293 251.39179993]
[465.79107666 244.99609375]
[452.17025757 238.71336365]
[438.49765015 232.54406738]
[424.82507324 226.37475586]
[411.15246582 220.20544434]
[397.18936157 214.72532654]
[382.97045898 209.94802856]
[368.75155640 205.17073059]
[354.53265381 200.39343262]
[340.31372070 195.61613464]
[329.33331299 200.71946716]
[317.44018555 196.84127808]
[311.18960571 185.54469299]
[297.05206299 180.53172302]
[282.91455078 175.51873779]
[268.77700806 170.50576782]
[254.63945007 165.49278259]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 114]
[3 113]
[4 112]
[6 110]
[7 109]
[8 108]
[9 107]
[10 106]
[12 38]
[13 37]
[14 36]
[15 35]
[16 33]
[17 32]
[19 31]
[20 30]
[21 29]
[22 28]
[23 27]
[42 104]
[43 103]
[44 102]
[45 101]
[46 100]
[48 98]
[49 97]
[55 90]
[56 89]
[57 88]
[59 86]
[61 84]
[62 83]
[64 82]
[65 81]
[67 80]
[68 79]
[69 78]
[70 77]
[116 188]
[117 187]
[118 186]
[119 185]
[120 184]
[122 181]
[123 180]
[124 179]
[125 178]
[126 177]
[133 176]
[134 175]
[135 174]
[136 173]
[138 172]
[139 171]
[144 166]
[145 165]
[146 164]
[148 163]
[149 162]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
