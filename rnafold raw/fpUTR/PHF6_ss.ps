%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGGCGCUCCGCGAGCCCGUCUCUCCUCGAAUGAAAGGAAACAACCUCCGGCGACAGAGCCCCGCUCUCAGGCACUGCUGGAGAACCGAGACCGACUUCUUUCUCUUUACCCUCAUUGGCGCUUCUCUCCUGCAGUCCGCCUCUGGGCCCUGCCGCAUUUCUUGAGACUUAAAGUGGCAUUCUAAAGGCAAUUUAAAAAUC\
) } def
/len { sequence length } bind def

/coor [
[113.20414734 125.61596680]
[111.23667145 110.74555969]
[103.80146790 111.72929382]
[98.79254150 125.86827087]
[93.78361511 140.00724792]
[88.77468872 154.14622498]
[98.30392456 166.27870178]
[99.73837280 181.63923645]
[92.62029266 195.32632446]
[79.22103882 202.97248840]
[63.81627274 202.13783264]
[51.32159042 193.08871460]
[45.72400284 178.71267700]
[48.80968094 163.59704590]
[59.59399414 152.56518555]
[74.63571167 149.13729858]
[79.64463806 134.99832153]
[84.65356445 120.85934448]
[89.66249084 106.72036743]
[90.59044647 91.74909973]
[87.36589050 77.09979248]
[84.14133453 62.45048523]
[80.91677094 47.80117798]
[77.69221497 33.15186691]
[63.84515381 27.38481903]
[51.17526245 35.41437912]
[38.50537109 43.44393921]
[25.83547974 51.47349930]
[24.98600006 66.96730804]
[15.16563511 78.98146820]
[0.15051787 82.89629364]
[-14.28573418 77.20645905]
[-22.59208679 64.09981537]
[-21.57457924 48.61613464]
[-11.62446213 36.70921326]
[3.43224072 32.95750046]
[17.80591965 38.80360794]
[30.47581100 30.77404785]
[43.14570236 22.74448776]
[55.81559372 14.71492767]
[51.09246445 7.73067236]
[47.76006317 0.06060461]
[45.90872574 -8.02418709]
[45.57692719 -16.24289513]
[46.75080872 -24.31473541]
[49.36550140 -31.96854591]
[53.30816650 -38.95188904]
[58.42264557 -45.03937912]
[64.51551819 -50.03992462]
[71.36334229 -53.80270004]
[78.72078705 -56.22162628]
[86.32941437 -57.23823166]
[87.72023773 -72.17361450]
[89.11106110 -87.10899353]
[82.68666840 -101.56713104]
[91.57073212 -113.52215576]
[92.96155548 -128.45753479]
[94.35237885 -143.39291382]
[87.92797852 -157.85105896]
[96.81204224 -169.80609131]
[98.20286560 -184.74147034]
[99.59368896 -199.67684937]
[100.98451233 -214.61222839]
[94.56011963 -229.07037354]
[103.44418335 -241.02539062]
[90.39102173 -233.63519287]
[76.41607666 -239.08503723]
[71.81213379 -253.36102295]
[79.97008514 -265.94863892]
[94.88145447 -267.57687378]
[105.56386566 -257.04617310]
[108.10506439 -271.82934570]
[110.64625549 -286.61251831]
[113.18745422 -301.39572144]
[115.49957275 -316.21643066]
[117.58206177 -331.07116699]
[119.66455078 -345.92590332]
[121.74703979 -360.78063965]
[123.82952118 -375.63540649]
[118.08306885 -390.37609863]
[127.51239777 -401.90594482]
[129.59487915 -416.76068115]
[131.67736816 -431.61541748]
[133.75985718 -446.47015381]
[135.84234619 -461.32489014]
[118.31147003 -471.23568726]
[108.20047760 -490.23522949]
[109.96743774 -513.07458496]
[124.52790833 -532.52130127]
[122.67555237 -547.40649414]
[120.82319641 -562.29168701]
[118.97083282 -577.17687988]
[106.78483582 -586.87939453]
[105.11832428 -602.00152588]
[114.44330597 -613.55920410]
[104.12646484 -626.30651855]
[110.25933838 -641.51574707]
[126.53296661 -643.54089355]
[136.20642090 -630.29864502]
[129.32849121 -615.41156006]
[141.20175171 -606.49182129]
[143.29234314 -591.42254639]
[133.85601807 -579.02923584]
[135.70837402 -564.14404297]
[137.56074524 -549.25885010]
[139.41310120 -534.37365723]
[146.81430054 -533.16033936]
[149.24102783 -547.96270752]
[158.74380493 -559.56860352]
[164.04342651 -545.53601074]
[161.61669922 -530.73358154]
[169.01789856 -529.52020264]
[175.52615356 -543.03479004]
[171.60597229 -558.59149170]
[181.43876648 -571.26806641]
[197.48165894 -571.34008789]
[207.42791748 -558.75238037]
[203.64761353 -543.16107178]
[189.04067993 -536.52648926]
[182.53242493 -523.01196289]
[188.42570496 -510.43405151]
[190.05776978 -497.09054565]
[187.53974915 -484.34088135]
[181.39227295 -473.40057373]
[172.46803284 -465.22558594]
[161.84416199 -460.42968750]
[150.69708252 -459.24240112]
[148.61459351 -444.38766479]
[146.53210449 -429.53292847]
[144.44961548 -414.67819214]
[142.36714172 -399.82345581]
[148.26254272 -386.14523315]
[138.68426514 -373.55291748]
[136.60177612 -358.69815063]
[134.51928711 -343.84341431]
[132.43679810 -328.98867798]
[130.35430908 -314.13394165]
[132.46754456 -309.84454346]
[131.90417480 -304.18139648]
[127.97063446 -298.85452271]
[125.42943573 -284.07131958]
[122.88823700 -269.28814697]
[120.34704590 -254.50497437]
[118.37956238 -239.63456726]
[124.90343475 -226.24472046]
[115.91989136 -213.22140503]
[114.52906799 -198.28602600]
[113.13824463 -183.35064697]
[111.74742126 -168.41526794]
[118.27130127 -155.02540588]
[109.28775787 -142.00209045]
[107.89693451 -127.06671906]
[106.50611115 -112.13133240]
[113.02998352 -98.74147797]
[104.04644012 -85.71817017]
[102.65561676 -70.78279114]
[101.26479340 -55.84740829]
[114.66078186 -49.97575760]
[125.34695435 -39.70424652]
[131.91546631 -26.19870567]
[133.43701172 -11.06089973]
[129.59007263 3.86122036]
[120.71683502 16.69910622]
[107.79711914 25.79749489]
[92.34152985 29.92731285]
[95.56608582 44.57662201]
[98.79064178 59.22592926]
[102.01519775 73.87523651]
[105.23975372 88.52454376]
[145.89210510 99.28070831]
[154.40573120 111.63053894]
[162.91935730 123.98036957]
[171.43296814 136.33020020]
[179.94659424 148.68002319]
[194.14950562 155.65051270]
[195.00289917 170.52064514]
[203.51652527 182.87046814]
[217.71943665 189.84095764]
[218.57283020 204.71110535]
[234.08790588 204.96064758]
[246.47291565 214.30895996]
[250.96560669 229.16140747]
[245.83840942 243.80694580]
[233.06286621 252.61404419]
[217.55142212 252.19619751]
[205.26853943 242.71408081]
[200.93724060 227.81376648]
[206.22300720 213.22471619]
[192.62904358 207.13757324]
[191.16670227 191.38409424]
[182.65307617 179.03427124]
[169.05911255 172.94712830]
[167.59677124 157.19364929]
[159.08314514 144.84381104]
[150.56951904 132.49398804]
[142.05590820 120.14415741]
[133.54228210 107.79433441]
[126.10707855 108.77807617]
[128.07455444 123.64848328]
[130.04203796 138.51889038]
[132.00929260 153.38932800]
[117.13882446 155.35635376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[20 169]
[21 168]
[22 167]
[23 166]
[24 165]
[25 40]
[26 39]
[27 38]
[28 37]
[52 157]
[53 156]
[54 155]
[56 153]
[57 152]
[58 151]
[60 149]
[61 148]
[62 147]
[63 146]
[65 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 137]
[76 136]
[77 135]
[78 134]
[79 133]
[81 131]
[82 130]
[83 129]
[84 128]
[85 127]
[89 106]
[90 105]
[91 104]
[92 103]
[95 100]
[112 120]
[113 119]
[170 197]
[171 196]
[172 195]
[173 194]
[174 193]
[176 191]
[177 190]
[179 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
