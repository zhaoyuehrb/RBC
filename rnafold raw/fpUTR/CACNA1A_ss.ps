%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGUCCCGAGCUGCUAUCCCCGGCUCGGCCCGGGCAGCCGCCUUCUGAGCCCCCGACCCGAGGCGCCGAGCCGCCGCCGCCCGAUGGGCUGGGCCGUGGAGCGUCUCCGCAGUCGUAGCUCCAGCCGCCGCGCUCCCAGCCCCGGCAGCCUCAGCAUCAGCGGCGGCGGCGGCGGCGGCGGCGUCUUCCGCAUCGUUCGCCGCAGCGUAACCCGGAGCCCUUUGCUCUUUGCAGA\
) } def
/len { sequence length } bind def

/coor [
[1.55478406 661.65350342]
[-11.95267105 655.13055420]
[-21.98678207 643.98083496]
[-27.05486107 629.86297607]
[-26.40296745 614.87713623]
[-20.12808037 601.25268555]
[-9.16366291 591.01635742]
[4.85919952 585.69104004]
[19.85444069 586.06884766]
[33.59134293 592.09356689]
[44.02669907 602.86950684]
[40.28865051 588.34271240]
[36.55059814 573.81597900]
[32.81254578 559.28918457]
[29.07449532 544.76245117]
[22.08518600 542.04223633]
[18.40113258 556.58276367]
[15.96592808 571.38378906]
[1.33343053 574.68377686]
[-7.21893358 562.36077881]
[0.99198925 549.80718994]
[8.10657024 536.60180664]
[1.11726248 533.88159180]
[-11.45737839 542.05950928]
[-24.03202057 550.23742676]
[-36.60665894 558.41534424]
[-49.18130112 566.59326172]
[-61.75594330 574.77117920]
[-74.33058167 582.94909668]
[-75.96106720 593.68041992]
[-83.07424164 601.58673096]
[-93.14990234 604.22680664]
[-102.81046295 600.96472168]
[-115.59747314 608.80639648]
[-128.38447571 616.64813232]
[-141.17147827 624.48986816]
[-148.51184082 639.15447998]
[-164.89582825 639.85961914]
[-173.46897888 625.87988281]
[-165.41200256 611.59643555]
[-149.01319885 611.70281982]
[-136.22619629 603.86114502]
[-123.43918610 596.01940918]
[-110.65218353 588.17767334]
[-102.67775726 570.55120850]
[-82.50850677 570.37445068]
[-69.93386078 562.19653320]
[-57.35922241 554.01861572]
[-44.78458405 545.84069824]
[-32.20994186 537.66278076]
[-19.63529968 529.48486328]
[-7.06065893 521.30694580]
[-9.12154484 493.42922974]
[5.91602850 472.23458862]
[29.12115288 466.02127075]
[31.88889122 451.27883911]
[34.65663147 436.53637695]
[26.06292915 424.42507935]
[28.65979958 409.43472290]
[41.42152786 400.50296021]
[44.18926620 385.76052856]
[46.76134491 370.98269653]
[49.13731766 356.17205811]
[51.51328659 341.36141968]
[53.88925552 326.55078125]
[56.26522827 311.74017334]
[58.64119720 296.92953491]
[61.01716614 282.11889648]
[59.00400162 277.80590820]
[59.66641998 272.18417358]
[63.65743637 266.94931030]
[66.42517853 252.20686340]
[69.19291687 237.46441650]
[71.96065521 222.72196960]
[74.72839355 207.97953796]
[77.49613190 193.23709106]
[80.26387024 178.49464417]
[83.03160858 163.75219727]
[85.79934692 149.00976562]
[88.56708527 134.26731873]
[91.33482361 119.52487183]
[94.10256195 104.78243256]
[88.26612091 104.73052216]
[82.35378265 101.50473785]
[77.74600220 95.18489075]
[75.73040771 86.38509369]
[70.47574615 72.33559418]
[65.22107697 58.28609085]
[59.87341690 44.27172089]
[54.43298340 30.29310608]
[48.99255371 16.31449127]
[43.55212402 2.33587408]
[38.01916504 -11.60637665]
[32.39392090 -25.51165009]
[26.76867676 -39.41692352]
[14.42076969 -49.30832291]
[16.82045364 -64.00834656]
[11.19521141 -77.91362000]
[5.56996727 -91.81889343]
[-0.05527616 -105.72416687]
[-5.68051958 -119.62944031]
[-11.30576324 -133.53471375]
[-22.85076141 -145.95040894]
[-14.11625671 -160.48123169]
[2.26464558 -156.11059570]
[2.59951043 -139.15995789]
[8.22475433 -125.25468445]
[13.84999752 -111.34941101]
[19.47524071 -97.44413757]
[25.10048485 -83.53886414]
[30.72572899 -69.63359070]
[42.67127991 -60.73679352]
[40.67395020 -45.04216766]
[46.29919434 -31.13689423]
[51.92443848 -17.23162079]
[57.33680344 -12.21866894]
[57.53073883 -3.10455680]
[62.97116852 10.87405968]
[68.41159821 24.85267448]
[73.85203552 38.83129120]
[79.19747162 43.91554642]
[79.27058411 53.03142548]
[84.52524567 67.08093262]
[89.77990723 81.13043213]
[104.50368500 83.99581909]
[114.64364624 72.94226074]
[124.78359985 61.88869858]
[134.92356873 50.83513641]
[145.06352234 39.78157425]
[155.20347595 28.72801399]
[165.34344482 17.67445183]
[175.48339844 6.62089109]
[184.86901855 -5.07996845]
[193.45909119 -17.37674522]
[202.04916382 -29.67352295]
[203.60919189 -45.41762924]
[217.24066162 -51.42032623]
[225.83073425 -63.71710587]
[222.82272339 -79.23249817]
[231.73590088 -92.28358459]
[247.28222656 -95.12738800]
[260.23834229 -86.07672119]
[262.91763306 -70.50119781]
[253.73049927 -57.64148712]
[238.12750244 -55.12703705]
[229.53744507 -42.83025742]
[228.59182739 -27.96570206]
[214.34593201 -21.08345413]
[205.75587463 -8.78667736]
[197.16580200 3.51009989]
[211.29817200 -1.51741481]
[226.06660461 1.10814035]
[237.60017395 10.69858932]
[242.87586975 24.74020958]
[240.51087952 39.55259705]
[231.12509155 51.25332260]
[217.17858887 56.77554703]
[202.32682800 54.67185974]
[190.46258545 45.49364471]
[184.69554138 31.64658165]
[186.53695679 16.76085091]
[176.39700317 27.81441307]
[166.25704956 38.86797333]
[156.11708069 49.92153549]
[145.97712708 60.97509766]
[135.83715820 72.02865601]
[125.69720459 83.08222198]
[115.55724335 94.13578033]
[108.84500885 107.55017090]
[106.07727051 122.29261017]
[103.30953217 137.03504944]
[100.54179382 151.77749634]
[97.77404785 166.51994324]
[95.00630951 181.26239014]
[92.23857117 196.00482178]
[89.47083282 210.74726868]
[86.70309448 225.48971558]
[83.93535614 240.23216248]
[81.16761780 254.97459412]
[78.39987946 269.71704102]
[75.82779694 284.49487305]
[73.45182800 299.30551147]
[71.07585907 314.11614990]
[68.69989014 328.92675781]
[66.32391357 343.73739624]
[63.94794464 358.54803467]
[61.57197571 373.35864258]
[63.55961990 379.63412476]
[62.28369522 385.14907837]
[58.93170929 388.52825928]
[56.16397095 403.27069092]
[64.81721497 416.22290039]
[61.80032730 431.13439941]
[49.39907455 439.30410767]
[46.63133240 454.04656982]
[43.86359406 468.78900146]
[54.55392456 474.30444336]
[63.00299072 483.46514893]
[67.97432709 495.36358643]
[68.59721375 508.67739868]
[64.50314331 521.81604004]
[55.90441895 533.11047363]
[43.60126114 541.02441406]
[47.33931351 555.55114746]
[51.07736588 570.07794189]
[54.81541443 584.60467529]
[58.55346680 599.13146973]
[63.62143707 613.24938965]
[69.97572327 626.83697510]
[76.33000946 640.42456055]
[82.68430328 654.01220703]
[86.93436432 656.98120117]
[89.38687134 660.88879395]
[89.98460388 664.89782715]
[89.00906372 668.26867676]
[94.81813049 682.09814453]
[100.62719727 695.92767334]
[106.43626404 709.75714111]
[112.24533081 723.58660889]
[126.49410248 730.95898438]
[129.47264099 746.72314453]
[118.89607239 758.78613281]
[102.87782288 757.89428711]
[93.70573425 744.73175049]
[98.41584778 729.39569092]
[92.60677338 715.56622314]
[86.79770660 701.73669434]
[80.98863983 687.90722656]
[75.17957306 674.07775879]
[69.09669495 660.36645508]
[62.74240875 646.77886963]
[56.38811874 633.19128418]
[50.03383255 619.60363770]
[48.83449554 634.55566406]
[42.06569672 647.94158936]
[30.73436928 657.77014160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[23 52]
[24 51]
[25 50]
[26 49]
[27 48]
[28 47]
[29 46]
[33 44]
[34 43]
[35 42]
[36 41]
[55 196]
[56 195]
[57 194]
[60 191]
[61 190]
[62 187]
[63 186]
[64 185]
[65 184]
[66 183]
[67 182]
[68 181]
[71 180]
[72 179]
[73 178]
[74 177]
[75 176]
[76 175]
[77 174]
[78 173]
[79 172]
[80 171]
[81 170]
[82 169]
[86 124]
[87 123]
[88 122]
[89 120]
[90 119]
[91 118]
[92 117]
[93 115]
[94 114]
[95 113]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
[102 106]
[125 168]
[126 167]
[127 166]
[128 165]
[129 164]
[130 163]
[131 162]
[132 161]
[133 150]
[134 149]
[135 148]
[137 146]
[138 145]
[208 233]
[209 232]
[210 231]
[211 230]
[215 229]
[216 228]
[217 227]
[218 226]
[219 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
