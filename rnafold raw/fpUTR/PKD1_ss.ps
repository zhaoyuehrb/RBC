%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUGCAGCGCCAGCGUCCGAGCGGGCGGCCGAGCUCCCGGAGCGGCCUGGCCCCGAGCCCCGAGCGGGCGUCGCUCAGCAGCAGGUCGCGGCCGCAGCCCCAUCCAGCCCCGCGCCCGCCAUGCCGUCCGCGGGCCCCGCCUGAGCUGCGGCCUCCGCGCGCGGGCGGGCCUGGGGACGGCGGGGCCAUGCGCGCGCUGCCCUAACG\
) } def
/len { sequence length } bind def

/coor [
[97.20629883 323.41943359]
[89.21451569 310.45599365]
[87.19281006 295.36184692]
[91.49144745 280.75222778]
[101.36566925 269.15826416]
[115.10470581 262.58874512]
[114.65597534 247.59544373]
[114.20724487 232.60215759]
[113.75851440 217.60887146]
[113.30977631 202.61558533]
[112.86104584 187.62229919]
[112.41231537 172.62901306]
[101.42756653 162.63548279]
[100.75890350 147.43653870]
[111.31552887 135.98248291]
[110.86679077 120.98919678]
[96.63601685 116.24736786]
[87.28366852 127.97483826]
[77.93132019 139.70231628]
[68.57897949 151.42977905]
[66.67118073 167.71757507]
[51.50657654 173.95993042]
[38.68520737 163.73522949]
[41.39659882 147.56176758]
[56.85150528 142.07743835]
[66.20384979 130.34996033]
[75.55619812 118.62248993]
[84.90854645 106.89501953]
[75.82169342 94.96065521]
[62.02877808 100.85602570]
[48.23585892 106.75140381]
[34.44294357 112.64678192]
[20.65002823 118.54215240]
[14.69464207 132.93559265]
[0.62268156 138.71786499]
[-13.06256390 132.95161438]
[-26.85548019 138.84698486]
[-39.04364014 150.63194275]
[-53.74205017 142.18249512]
[-49.69174194 125.71946716]
[-32.75085449 125.05406952]
[-18.95793915 119.15869141]
[-13.66839409 105.28222656]
[0.23560259 99.10698700]
[14.75465202 104.74923706]
[28.54756927 98.85385895]
[42.34048462 92.95848846]
[56.13340378 87.06311035]
[69.92631531 81.16773224]
[80.76824188 70.80179596]
[87.27649689 57.28726196]
[93.78475189 43.77273178]
[100.29300690 30.25819778]
[106.80126953 16.74366379]
[113.30952454 3.22913074]
[119.81777954 -10.28540230]
[109.69608307 0.78488535]
[95.30092621 5.00146437]
[80.80599976 1.14179313]
[70.41390991 -9.67506695]
[67.13771057 -24.31291199]
[71.92728424 -38.52769089]
[83.39396667 -48.19802094]
[98.21313477 -50.52011108]
[112.08818054 -44.82070923]
[120.99533844 -32.75456619]
[115.93538666 -46.87536240]
[110.87543488 -60.99616241]
[105.81549072 -75.11695862]
[100.75553894 -89.23775482]
[95.69558716 -103.35855103]
[90.63563538 -117.47934723]
[85.57569122 -131.60014343]
[69.62553406 -143.92633057]
[73.89904785 -162.78387451]
[68.41893005 -176.74697876]
[62.93881607 -190.71008301]
[57.86528397 -176.59416199]
[45.52908707 -168.06080627]
[30.53087807 -168.29241943]
[18.46407127 -177.20265198]
[13.82885456 -191.46852112]
[18.35388184 -205.76971436]
[30.35159302 -214.77276611]
[45.34757233 -215.12008667]
[57.74914932 -206.68225098]
[53.97534561 -221.19976807]
[40.63027191 -229.23387146]
[37.00991058 -244.01045227]
[44.75143814 -256.68344116]
[33.79106903 -268.09310913]
[38.07748413 -282.35760498]
[34.30368042 -296.87512207]
[30.52987862 -311.39266968]
[18.64180183 -322.68893433]
[22.74315834 -338.56692505]
[38.61482239 -342.69274902]
[49.92938995 -330.82208252]
[45.04740143 -315.16647339]
[48.82120132 -300.64892578]
[52.59500504 -286.13140869]
[63.28544617 -275.76013184]
[59.26895905 -260.45724487]
[72.20207214 -253.15858459]
[76.23604584 -238.48951721]
[68.49286652 -224.97357178]
[72.26667023 -210.45603943]
[76.90192413 -196.19020081]
[82.38204193 -182.22709656]
[87.86215210 -168.26399231]
[97.55827332 -165.03634644]
[104.01242065 -156.83193970]
[104.90343475 -146.21087646]
[99.69648743 -136.66009521]
[104.75643158 -122.53929901]
[109.81638336 -108.41850281]
[114.87633514 -94.29770660]
[119.93628693 -80.17691040]
[124.99623108 -66.05611420]
[130.05618286 -51.93531418]
[135.11613464 -37.81451797]
[138.72195435 -36.01900101]
[141.47811890 -33.46351624]
[143.25650024 -30.45982361]
[144.03018188 -27.32923126]
[158.94799805 -28.89715767]
[173.86582947 -30.46508408]
[188.78366089 -32.03301239]
[203.70149231 -33.60093689]
[218.61932373 -35.16886520]
[233.53713989 -36.73679352]
[246.45295715 -45.87421799]
[259.91928101 -39.50966644]
[274.83709717 -41.07759094]
[289.75491333 -42.64551926]
[304.67276001 -44.21344757]
[319.59057617 -45.78137207]
[334.50842285 -47.34930038]
[349.42623901 -48.91722870]
[357.63452148 -52.92679214]
[364.57870483 -50.39531326]
[379.51834106 -51.73990250]
[394.45794678 -53.08449173]
[409.39755249 -54.42908096]
[424.33718872 -55.77367020]
[437.38821411 -64.71685791]
[450.75781250 -58.15157318]
[465.69744873 -59.49616241]
[473.96478271 -63.38248825]
[480.87033081 -60.74740982]
[495.82839966 -61.86836243]
[510.78643799 -62.98931122]
[525.74450684 -64.11026001]
[541.08752441 -71.32335663]
[552.26605225 -58.57675171]
[543.11212158 -44.30643463]
[526.86547852 -49.15220642]
[511.90740967 -48.03125381]
[496.94934082 -46.91030502]
[481.99127197 -45.78935242]
[467.04202271 -44.55654907]
[452.10241699 -43.21195602]
[440.11993408 -34.36494064]
[425.68176270 -40.83405685]
[410.74215698 -39.48946762]
[395.80252075 -38.14487839]
[380.86291504 -36.80028534]
[365.92330933 -35.45569611]
[350.99417114 -33.99939728]
[336.07632446 -32.43147278]
[321.15850830 -30.86354446]
[306.24069214 -29.29561806]
[291.32284546 -27.72768974]
[276.40502930 -26.15976334]
[261.48718262 -24.59183693]
[249.63841248 -15.56655979]
[235.10507202 -21.81896400]
[220.18724060 -20.25103760]
[205.26940918 -18.68310928]
[190.35159302 -17.11518288]
[175.43376160 -15.54725552]
[160.51593018 -13.97932911]
[145.59809875 -12.41140175]
[133.33230591 -3.77714610]
[126.82405853 9.73738670]
[120.31579590 23.25192070]
[113.80754089 36.76645279]
[107.29928589 50.28098679]
[100.79103088 63.79552078]
[94.28277588 77.31005096]
[123.70312500 84.70016479]
[125.86007690 120.54046631]
[126.30881500 135.53375244]
[137.53153992 146.33598328]
[137.77304077 161.54769897]
[127.40560150 172.18028259]
[127.85433197 187.17356873]
[128.30307007 202.16685486]
[128.75180054 217.16014099]
[129.20053101 232.15342712]
[129.64926147 247.14671326]
[130.09799194 262.14001465]
[144.20532227 267.87612915]
[154.75523376 278.85879517]
[159.91990662 293.18521118]
[158.80450439 308.37322998]
[151.60229492 321.79144287]
[139.56109619 331.11502075]
[124.76712799 334.72866821]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[15 193]
[16 192]
[17 28]
[18 27]
[19 26]
[20 25]
[29 49]
[30 48]
[31 47]
[32 46]
[33 45]
[36 42]
[37 41]
[50 190]
[51 189]
[52 188]
[53 187]
[54 186]
[55 185]
[56 184]
[66 121]
[67 120]
[68 119]
[69 118]
[70 117]
[71 116]
[72 115]
[73 114]
[75 110]
[76 109]
[77 108]
[86 107]
[87 106]
[90 103]
[92 101]
[93 100]
[94 99]
[125 183]
[126 182]
[127 181]
[128 180]
[129 179]
[130 178]
[131 177]
[133 175]
[134 174]
[135 173]
[136 172]
[137 171]
[138 170]
[139 169]
[141 168]
[142 167]
[143 166]
[144 165]
[145 164]
[147 162]
[148 161]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
