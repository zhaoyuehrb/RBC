%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCCAGUCCCCCUCCCCCUCCCCUCGCCGGCUAGGGUGGUGCGUGCCGGCAGGCCGGUCAAGGAGGCGGGACACGUCGGCGCUACCACCGCCACCGCCGCCGCCGCCCCUCCUCCCGUUCCAGCUGCCGCUGCCGCUUCCUGGGCUGAGUCCGCCCGCGGUCCCGGCGGCGCCAGGUGCGUUCACUCUGCCCGGCUCCAGCCAGCGUCCGCCGCCGCCGUAGCUGCCCCAGGCUCCCCGCCCCGCUGCCGAG\
) } def
/len { sequence length } bind def

/coor [
[58.14469910 364.14758301]
[66.17550659 376.90570068]
[70.91907501 391.21520996]
[72.09960938 406.24420166]
[69.64847565 421.11883545]
[63.70818710 434.97439575]
[54.62409973 447.00531006]
[42.92435074 456.51211548]
[29.28914642 462.94210815]
[14.51122475 465.92141724]
[-0.55025023 465.27688599]
[-15.01962185 461.04595947]
[-28.05566025 453.47463989]
[-38.90046692 443.00308228]
[-46.92353821 430.24008179]
[-51.65842819 415.92770386]
[-52.82984924 400.89804077]
[-50.36970139 386.02487183]
[-44.42101288 372.17291260]
[-35.32963181 360.14752197]
[-23.62412262 350.64779663]
[-9.98502350 344.22607422]
[4.79470301 341.25570679]
[19.85578346 341.90936279]
[24.06558609 327.51223755]
[28.27538872 313.11511230]
[32.48519135 298.71795654]
[28.63081360 284.33071899]
[39.93021393 273.25668335]
[44.14001465 258.85955811]
[48.34981918 244.46240234]
[52.55961990 230.06527710]
[47.03102112 219.32545471]
[50.39984512 207.30903625]
[61.38848114 200.58978271]
[65.77603149 186.24581909]
[70.16357422 171.90185547]
[74.55112457 157.55787659]
[78.93866730 143.21391296]
[83.32621765 128.86994934]
[68.30549622 110.34152222]
[69.50785828 86.51971436]
[57.50479507 77.52380371]
[45.50173187 68.52788544]
[36.78400040 65.89631653]
[33.40676498 59.34573364]
[21.51588249 50.20205307]
[9.51282024 41.20613861]
[-2.60058784 32.35936737]
[-14.71399593 23.51259613]
[-26.82740402 14.66582584]
[-38.94081116 5.81905460]
[-51.05421829 -3.02771592]
[-59.80383301 -5.55126190]
[-63.26182938 -12.05957413]
[-78.94506073 -14.14449883]
[-84.48920441 -27.96881485]
[-96.49226379 -36.96472931]
[-110.59609222 -31.04617119]
[-125.66921997 -32.96908951]
[-137.67623901 -42.11773300]
[-143.45321655 -55.95545578]
[-141.54104614 -70.72736359]
[-153.54411316 -79.72327423]
[-165.54716492 -88.71919250]
[-177.55023193 -97.71510315]
[-189.55329895 -106.71102142]
[-205.23652649 -108.79594421]
[-210.78067017 -122.62026215]
[-222.78373718 -131.61618042]
[-234.78678894 -140.61209106]
[-245.41227722 -138.45465088]
[-255.27346802 -142.40512085]
[-261.21972656 -150.94221497]
[-261.49441528 -161.12313843]
[-273.27130127 -170.41319275]
[-288.89816284 -172.88539124]
[-294.09869385 -186.84262085]
[-305.87554932 -196.13265991]
[-317.65243530 -205.42271423]
[-329.42932129 -214.71276855]
[-341.20620728 -224.00282288]
[-353.04031372 -233.21986389]
[-366.41107178 -225.92997742]
[-381.59146118 -224.71517944]
[-395.95138550 -229.78594971]
[-407.00289917 -240.26374817]
[-412.83123779 -254.33322144]
[-412.42663574 -269.55676270]
[-405.85919189 -283.29678345]
[-394.26672363 -293.17276001]
[-379.65774536 -297.47363281]
[-364.56329346 -295.45419312]
[-351.59863281 -287.46438599]
[-343.00994873 -274.88845825]
[-340.28524780 -259.90527344]
[-343.89663696 -245.11074829]
[-336.69842529 -243.52915955]
[-331.91616821 -235.77970886]
[-320.13928223 -226.48965454]
[-308.36239624 -217.19960022]
[-296.58551025 -207.90954590]
[-284.80862427 -198.61949158]
[-270.02413940 -196.81178284]
[-263.98126221 -182.19007874]
[-252.20437622 -172.90002441]
[-232.90341187 -171.49621582]
[-225.79087830 -152.61515808]
[-213.78781128 -143.61923218]
[-201.78475952 -134.62332153]
[-186.96006775 -133.18185425]
[-180.55738831 -118.71408081]
[-168.55432129 -109.71817017]
[-156.55125427 -100.72225189]
[-144.54818726 -91.72634125]
[-132.54513550 -82.73042297]
[-118.90357971 -88.71153259]
[-104.00067902 -87.05034637]
[-91.84991455 -78.09349060]
[-85.77394867 -64.16584015]
[-87.49635315 -48.96779251]
[-75.49328613 -39.97187805]
[-60.66859818 -38.53040314]
[-54.26591492 -24.06263733]
[-42.20744705 -15.14112377]
[-30.09403992 -6.29435301]
[-17.98063278 2.55241776]
[-5.86722517 11.39918804]
[6.24618292 20.24595833]
[18.35959053 29.09272957]
[23.10751534 29.26144218]
[27.80624008 32.39631271]
[30.65956497 38.31116867]
[42.55044556 47.45485306]
[54.49764633 56.52482605]
[66.50070953 65.52073669]
[78.50377655 74.51665497]
[84.80303955 68.27975464]
[92.90803528 63.67942810]
[102.37223816 61.23228455]
[112.60393524 61.32813644]
[122.90318298 64.19008636]
[132.50952148 69.84546661]
[140.59074402 57.20845795]
[148.67195129 44.57144928]
[156.75317383 31.93444252]
[151.90414429 17.06766701]
[157.79368591 2.58155560]
[171.64091492 -4.68399334]
[186.90760803 -1.29840970]
[196.38528442 11.13973713]
[195.59889221 26.75753403]
[184.91973877 38.18073654]
[169.39018250 40.01565552]
[161.30895996 52.65266418]
[153.22775269 65.28967285]
[145.14653015 77.92668152]
[152.51225281 90.99367523]
[167.50765991 90.62265778]
[182.50306702 90.25164032]
[197.49847412 89.88062286]
[212.49389648 89.50960541]
[223.35414124 78.34301758]
[238.56689453 78.18036652]
[249.14561462 88.60276794]
[264.14102173 88.23175049]
[279.13644409 87.86074066]
[294.13183594 87.48972321]
[309.12725830 87.11870575]
[324.12268066 86.74768829]
[339.11550903 86.28394318]
[354.10516357 85.72749329]
[369.09484863 85.17103577]
[383.98025513 83.32049561]
[398.64990234 80.18972015]
[413.31951904 77.05894470]
[427.96954346 73.83751678]
[442.59933472 70.52554321]
[457.22912598 67.21357727]
[468.89633179 55.68935013]
[484.63644409 60.29168701]
[488.25732422 76.28609467]
[476.03417969 87.21890259]
[460.54107666 81.84336853]
[445.91128540 85.15534210]
[431.28149414 88.46730804]
[425.46780396 92.99687195]
[416.45031738 91.72858429]
[401.78067017 94.85935974]
[387.11102295 97.99012756]
[387.15740967 105.48999023]
[400.19409180 112.90924072]
[387.25018311 120.48970032]
[387.29656982 127.98955536]
[402.00378418 130.93865967]
[416.71102905 133.88775635]
[432.06640625 128.13064575]
[444.55627441 138.75778198]
[441.33209229 154.83685303]
[425.71063232 159.82710266]
[413.76193237 148.59498596]
[399.05468750 145.64588928]
[384.34747314 142.69679260]
[367.05529785 121.20870209]
[369.65130615 100.16071320]
[354.66162109 100.71716309]
[339.67193604 101.27362061]
[333.12249756 104.65303040]
[324.49368286 101.74310303]
[309.49826050 102.11411285]
[294.50286865 102.48513031]
[279.50744629 102.85614777]
[264.51205444 103.22716522]
[249.51663208 103.59818268]
[239.46629333 114.53099060]
[224.26409912 115.12086487]
[212.86489868 104.50502014]
[197.86949158 104.87603760]
[182.87408447 105.24704742]
[167.87867737 105.61806488]
[152.88325500 105.98908234]
[146.25585938 119.44559479]
[155.10263062 131.55900574]
[163.94940186 143.67240906]
[172.79617310 155.78581238]
[188.44859314 157.97157288]
[197.90412903 170.63523865]
[195.55300903 186.26367188]
[182.79008484 195.58479309]
[167.18739319 193.06855774]
[158.00172424 180.20780945]
[160.68276978 164.63258362]
[151.83599854 152.51918030]
[142.98922729 140.40577698]
[134.14245605 128.29235840]
[121.69394684 134.40559387]
[109.02336121 135.88954163]
[97.67018127 133.25749207]
[93.28263855 147.60145569]
[88.89508820 161.94543457]
[84.50754547 176.28939819]
[80.11999512 190.63336182]
[75.73245239 204.97732544]
[80.27924347 222.83442688]
[66.95675659 234.27507019]
[62.74695587 248.67221069]
[58.53715134 263.06933594]
[54.32735062 277.46649170]
[57.88061523 292.88351440]
[46.88232803 302.92776489]
[42.67252731 317.32489014]
[38.46272278 331.72204590]
[34.25292206 346.11917114]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 253]
[25 252]
[26 251]
[27 250]
[29 248]
[30 247]
[31 246]
[32 245]
[35 243]
[36 242]
[37 241]
[38 240]
[39 239]
[40 238]
[42 137]
[43 136]
[44 135]
[46 134]
[47 133]
[48 130]
[49 129]
[50 128]
[51 127]
[52 126]
[53 125]
[55 124]
[57 122]
[58 121]
[63 116]
[64 115]
[65 114]
[66 113]
[67 112]
[69 110]
[70 109]
[71 108]
[75 106]
[76 105]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[83 97]
[143 157]
[144 156]
[145 155]
[146 154]
[158 221]
[159 220]
[160 219]
[161 218]
[162 217]
[165 214]
[166 213]
[167 212]
[168 211]
[169 210]
[170 209]
[171 207]
[172 206]
[173 205]
[174 190]
[175 189]
[176 188]
[177 186]
[178 185]
[179 184]
[194 203]
[195 202]
[196 201]
[222 235]
[223 234]
[224 233]
[225 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
