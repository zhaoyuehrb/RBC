%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACACCCGGCAGGCUCUGUCCUGGAAACAGGCUUCAACGGGCUUCCCCGAAAACCUUCCCCGCUUCUGGAUAUGAAAUUCAAGCUGCUUGCUGAGUCCUAUUGCCGGCUGCUGGGAGCCAGGAGAGCCCUGAGGAGUAGUCACUCAGUAGCAGCUGACGCGUGGGUCCACC\
) } def
/len { sequence length } bind def

/coor [
[-23.11656380 268.84835815]
[-33.49221420 273.91448975]
[-44.62937546 276.94073486]
[-56.13129425 277.82141113]
[-67.58860016 276.52725220]
[-78.59391022 273.10626221]
[-88.75628662 267.68209839]
[-97.71513367 260.44958496]
[-105.15299988 251.66755676]
[-118.40567780 258.69369507]
[-131.65835571 265.71981812]
[-141.04949951 281.54064941]
[-158.53720093 280.26361084]
[-171.66087341 287.52786255]
[-184.78453064 294.79211426]
[-197.90820312 302.05636597]
[-203.92684937 308.97457886]
[-211.33503723 309.33084106]
[-224.58772278 316.35696411]
[-237.84040833 323.38308716]
[-251.09307861 330.40921021]
[-264.01522827 338.02618408]
[-276.58050537 346.21847534]
[-289.14581299 354.41076660]
[-301.71109009 362.60305786]
[-308.64315796 377.46502686]
[-325.00137329 378.62292480]
[-333.95782471 364.88558960]
[-326.29885864 350.38482666]
[-309.90338135 350.03775024]
[-297.33807373 341.84545898]
[-284.77279663 333.65319824]
[-272.20751953 325.46090698]
[-286.04757690 319.67706299]
[-290.33267212 305.30215454]
[-281.91842651 292.88439941]
[-266.97915649 291.53588867]
[-256.47723389 302.24615479]
[-258.11920166 317.15655518]
[-244.86653137 310.13040161]
[-231.61384583 303.10427856]
[-218.36116028 296.07815552]
[-205.17245483 288.93267822]
[-192.04878235 281.66842651]
[-178.92510986 274.40417480]
[-165.80143738 267.13995361]
[-162.14761353 255.58569336]
[-151.24407959 249.43342590]
[-138.68449402 252.46713257]
[-125.43180847 245.44100952]
[-112.17913055 238.41487122]
[-116.13442230 220.13201904]
[-114.36450195 201.49443054]
[-107.02622986 184.25410461]
[-94.80037689 170.03463745]
[-78.82844543 160.17819214]
[-60.60612869 155.61892700]
[-41.84324646 156.79440308]
[-24.30328369 163.60363770]
[-9.63767052 175.41569519]
[2.62366438 166.77511597]
[14.88499928 158.13452148]
[27.06783295 149.38360596]
[39.17116928 140.52307129]
[51.27450943 131.66252136]
[56.97356415 117.90134430]
[72.67921448 115.99269104]
[84.78255463 107.13214874]
[88.79547882 92.67889404]
[82.99273682 78.84675598]
[77.18998718 65.01461792]
[71.38724518 51.18247223]
[65.58449554 37.35033035]
[51.33909607 29.97143364]
[48.36776352 14.20594215]
[58.94985199 2.14779186]
[74.96768951 3.04696345]
[84.13375854 16.21368980]
[79.41664124 31.54758644]
[85.21938324 45.37972641]
[91.02213287 59.21186829]
[96.82487488 73.04401398]
[102.62762451 86.87615204]
[116.40681458 92.80352783]
[130.43943787 87.50394440]
[144.47204590 82.20435333]
[158.50466919 76.90476227]
[172.53729248 71.60517120]
[186.56990051 66.30558777]
[200.60252380 61.00599670]
[207.55430603 55.02612305]
[214.93661499 55.73991013]
[229.06263733 50.69453049]
[243.18864441 45.64915085]
[257.31463623 40.60377502]
[271.44067383 35.55839539]
[285.56668091 30.51301575]
[299.69268799 25.46763802]
[311.26327515 11.16329575]
[328.38504028 14.94421101]
[342.41766357 9.64462185]
[356.45028687 4.34503222]
[370.48287964 -0.95455670]
[384.51550293 -6.25414562]
[394.69204712 -18.36813354]
[409.33215332 -15.62644958]
[423.31634521 -21.05250168]
[437.25100708 -26.60457420]
[451.18563843 -32.15664673]
[464.91076660 -38.20817184]
[478.40847778 -44.75126648]
[487.45144653 -57.73337173]
[502.27911377 -56.32270050]
[515.77679443 -62.86579132]
[529.27453613 -69.40888214]
[542.77221680 -75.95198059]
[554.38757324 -88.30188751]
[569.47027588 -80.55927277]
[566.20556641 -63.92262650]
[549.31530762 -62.45427704]
[535.81762695 -55.91118622]
[522.31988525 -49.36809158]
[508.82220459 -42.82500076]
[500.74465942 -30.31089973]
[484.95156860 -31.25356483]
[471.45385742 -24.71047211]
[470.41461182 -22.07161522]
[468.24929810 -19.69307709]
[465.05456543 -18.01266479]
[461.08596802 -17.42402267]
[456.73773193 -18.22199440]
[442.80307007 -12.66992283]
[428.86840820 -7.11785078]
[423.80093384 -1.70224476]
[414.63171387 -1.59383202]
[405.45889282 10.14109421]
[389.81509399 7.77847147]
[375.78247070 13.07806110]
[361.74984741 18.37764931]
[347.71725464 23.67723846]
[333.68463135 28.97682762]
[328.40573120 39.88483429]
[316.73019409 44.40357590]
[304.73806763 39.59364700]
[290.61206055 44.63902664]
[276.48605347 49.68440628]
[262.36001587 54.72978210]
[248.23402405 59.77516174]
[234.10800171 64.82054138]
[219.98199463 69.86592102]
[205.90211487 75.03861237]
[191.86949158 80.33820343]
[177.83688354 85.63779449]
[163.80426025 90.93737793]
[149.77163696 96.23696899]
[135.73902893 101.53656006]
[121.70640564 106.83615112]
[93.64309692 119.23548889]
[81.53975677 128.09602356]
[74.97499084 142.49096680]
[60.13505173 143.76586914]
[48.03171158 152.62640381]
[35.92837524 161.48695374]
[30.82977486 169.10865784]
[23.52558136 170.39585876]
[11.26424694 179.03643799]
[-0.99708849 187.67703247]
[3.45870137 198.37599182]
[5.82508707 209.71603394]
[6.01986980 221.29330444]
[4.03815365 232.69586182]
[-0.04755424 243.51840210]
[-6.08999348 253.37660217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 51]
[10 50]
[11 49]
[13 46]
[14 45]
[15 44]
[16 43]
[18 42]
[19 41]
[20 40]
[21 39]
[22 33]
[23 32]
[24 31]
[25 30]
[60 167]
[61 166]
[62 165]
[63 163]
[64 162]
[65 161]
[67 159]
[68 158]
[69 83]
[70 82]
[71 81]
[72 80]
[73 79]
[84 157]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
[90 151]
[92 150]
[93 149]
[94 148]
[95 147]
[96 146]
[97 145]
[98 144]
[100 141]
[101 140]
[102 139]
[103 138]
[104 137]
[106 135]
[107 133]
[108 132]
[109 131]
[110 126]
[111 125]
[113 123]
[114 122]
[115 121]
[116 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
