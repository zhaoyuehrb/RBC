%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCACGCUAGCGCCGCCCAGGCUGGCACAAAGGAGGAAGCCUAGUCCCGCCCCUGCGUGCGGCGCUUCUCCCAGGCCCCACCUUCCAUCCAGUGCCCUGGACCCUCGGCUGGGUAGCGCCACCAGAGCGACCAAACGUCCCGCGCCUUCCAGGCCGCACUCCAGAGCCAAAAGAGCUCC\
) } def
/len { sequence length } bind def

/coor [
[98.86299133 162.32295227]
[96.78660583 177.17854309]
[81.93104553 175.10191345]
[84.00736237 160.24681091]
[86.08349609 145.39118958]
[88.15963745 130.53556824]
[80.73182678 129.49749756]
[72.38474274 141.96049500]
[64.03766632 154.42349243]
[55.69058990 166.88648987]
[47.34350967 179.34948730]
[38.99643326 191.81246948]
[45.23253250 205.92327881]
[42.82722855 221.16197205]
[32.54804230 232.66596985]
[17.67502403 236.76437378]
[2.95410180 232.14939880]
[-6.91733265 220.29367065]
[-8.78934097 204.98030090]
[-2.06457114 191.09574890]
[11.11112690 183.07049561]
[26.53343582 183.46539307]
[34.88051224 171.00239563]
[43.22759247 158.53939819]
[51.57466888 146.07641602]
[59.92174911 133.61341858]
[68.26882935 121.15041351]
[64.98654938 108.37657928]
[66.36764526 96.00360107]
[71.72451782 85.58832550]
[79.90046692 78.26531982]
[89.47359467 74.62548065]
[98.98321533 74.68167877]
[102.84454346 60.18719101]
[106.70586395 45.69270325]
[110.56719208 31.19821548]
[114.30258179 16.67076302]
[106.40686035 3.24335647]
[110.27448273 -11.47045231]
[123.12412262 -18.91507149]
[126.73329926 -33.47439194]
[130.34246826 -48.03371429]
[133.95164490 -62.59303665]
[129.76214600 -77.84946442]
[140.33447266 -88.34114075]
[129.27378845 -101.12091827]
[128.01240540 -117.80879211]
[136.84936523 -131.82504272]
[152.14100647 -137.76119995]
[155.49694824 -152.38096619]
[158.85289001 -167.00074768]
[149.03990173 -176.70211792]
[145.33807373 -189.88278198]
[148.61305237 -203.06433105]
[157.90379333 -212.82290649]
[170.70123291 -216.67848206]
[174.31040955 -231.23780823]
[177.91958618 -245.79713440]
[181.52876282 -260.35644531]
[173.63304138 -273.78387451]
[177.50065613 -288.49768066]
[190.35029602 -295.94229126]
[193.95947266 -310.50161743]
[197.44216919 -325.09170532]
[200.79811096 -339.71148682]
[204.15405273 -354.33123779]
[207.50999451 -368.95101929]
[206.37928772 -378.04299927]
[211.05313110 -383.79434204]
[214.66230774 -398.35366821]
[205.01918030 -408.22387695]
[201.54667664 -421.46682739]
[205.04994202 -434.58953857]
[214.50865173 -444.18539429]
[227.37107849 -447.81829834]
[231.23240662 -462.31277466]
[235.09371948 -476.80725098]
[238.44966125 -491.42703247]
[241.29618835 -506.15447998]
[244.14270020 -520.88189697]
[246.98921204 -535.60931396]
[249.70780945 -550.36090088]
[252.29829407 -565.13555908]
[239.97674561 -574.07653809]
[232.78836060 -587.42620850]
[232.11174011 -602.51135254]
[238.02758789 -616.33758545]
[249.31326294 -626.18353271]
[263.69512939 -630.13671875]
[266.28561401 -644.91131592]
[268.87609863 -659.68591309]
[271.46655273 -674.46057129]
[274.05703735 -689.23516846]
[267.92813110 -704.44598389]
[278.24829102 -717.19061279]
[294.40106201 -714.35852051]
[299.76980591 -698.86309814]
[288.83166504 -686.64471436]
[286.24118042 -671.87005615]
[283.65069580 -657.09545898]
[281.06024170 -642.32086182]
[278.46975708 -627.54620361]
[290.64883423 -618.93603516]
[297.91168213 -605.83789062]
[298.77087402 -590.82385254]
[293.00253296 -576.86865234]
[281.70126343 -566.76086426]
[267.07290649 -562.54504395]
[264.48242188 -547.77044678]
[266.42947388 -540.61981201]
[261.71664429 -532.76281738]
[258.87014771 -518.03540039]
[256.02362061 -503.30795288]
[253.17710876 -488.58050537]
[254.65998840 -486.17147827]
[255.26472473 -483.02218628]
[254.70164490 -479.46899414]
[252.80979919 -475.94781494]
[249.58821106 -472.94592285]
[245.72688293 -458.45144653]
[241.86557007 -443.95697021]
[252.61392212 -431.56561279]
[253.88087463 -415.04467773]
[244.97085571 -400.87823486]
[229.22163391 -394.74447632]
[225.61245728 -380.18515015]
[222.12976074 -365.59506226]
[218.77381897 -350.97531128]
[215.41787720 -336.35552979]
[212.06193542 -321.73574829]
[213.63417053 -314.49346924]
[208.51879883 -306.89242554]
[204.90962219 -292.33309937]
[212.79414368 -279.74859619]
[209.34133911 -264.93197632]
[196.08808899 -256.74728394]
[192.47891235 -242.18795776]
[188.86973572 -227.62863159]
[185.26055908 -213.06930542]
[196.22235107 -200.86637878]
[197.77584839 -184.36991882]
[189.11305237 -170.05096436]
[173.47265625 -163.64480591]
[170.11671448 -149.02502441]
[166.76077271 -134.40525818]
[176.43701172 -125.18515778]
[180.31842041 -112.28235626]
[177.28662109 -99.04276276]
[168.03060913 -88.95516205]
[154.89378357 -84.73196411]
[159.34144592 -70.51691437]
[148.51097107 -58.98386002]
[144.90179443 -44.42453766]
[141.29261780 -29.86521530]
[137.68344116 -15.30589390]
[145.56796265 -2.72138715]
[142.11515808 12.09524918]
[128.86190796 20.27994156]
[130.30821228 27.54843140]
[125.06168365 35.05953979]
[121.20035553 49.55402756]
[117.33902740 64.04851532]
[113.47770691 78.54300690]
[131.65380859 97.71188354]
[124.71694946 129.03927612]
[129.32743835 143.31315613]
[133.93792725 157.58702087]
[138.54841614 171.86090088]
[143.28259277 186.09422302]
[155.98846436 196.46209717]
[153.09580994 212.60411072]
[137.58035278 217.91473389]
[125.40306854 206.93086243]
[129.09089661 190.95175171]
[123.93613434 185.62716675]
[124.27453613 176.47138977]
[119.66405487 162.19750977]
[115.05356598 147.92364502]
[110.44307709 133.64976501]
[103.01526642 132.61169434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[33 163]
[34 162]
[35 161]
[36 160]
[37 158]
[40 155]
[41 154]
[42 153]
[43 152]
[45 150]
[49 145]
[50 144]
[51 143]
[56 139]
[57 138]
[58 137]
[59 136]
[62 133]
[63 132]
[64 130]
[65 129]
[66 128]
[67 127]
[69 126]
[70 125]
[75 121]
[76 120]
[77 119]
[78 114]
[79 113]
[80 112]
[81 111]
[82 109]
[83 108]
[89 102]
[90 101]
[91 100]
[92 99]
[93 98]
[165 179]
[166 178]
[167 177]
[168 176]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
