%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGCCAAUUUCAGGGGGCAGCUCCGGUUCCCUCCCCGCCCCCUGCUCCUAUUCCUCCACCUGACCCUUUUUCCCUUGGCUCUGUCGGCAGUUUCUCCAGGACCCAGCAGUGCCCUCUGUCCACUGCUCUGGGCCAUUCCCCAAUCCCCCCUCCCACUUGAGCCCCUAACUCAGAAUCUGGGACCCAGGGGCCCCUCCCUACCCCAGCUAACCUCUUCUGGACCAGGAGAGCCAACCCAGAUCCCACUACCU\
CC\
) } def
/len { sequence length } bind def

/coor [
[256.51879883 172.94293213]
[243.43806458 165.60166931]
[230.35733032 158.26039124]
[217.27658081 150.91912842]
[204.19584656 143.57786560]
[191.11509705 136.23658752]
[179.40808105 139.20695496]
[168.45837402 133.22251892]
[164.38226318 121.00578308]
[151.39187622 113.50578308]
[138.40150452 106.00578308]
[129.93960571 122.46517944]
[115.28157806 132.58818054]
[98.26937866 134.51240540]
[83.00993347 128.42810059]
[72.59881592 139.22665405]
[62.18770599 150.02520752]
[51.77659225 160.82376099]
[41.36547852 171.62231445]
[30.95436478 182.42085266]
[20.54325294 193.21940613]
[10.13214016 204.01795959]
[6.12390566 219.32301331]
[-8.27987480 223.11515808]
[-9.16753674 227.29751587]
[-11.12944984 230.65492249]
[-13.77972507 232.95307922]
[-16.69611168 234.10501099]
[-19.47055435 234.17039490]
[-30.39507675 244.44924927]
[-30.62553596 260.25186157]
[-42.02067566 271.20294189]
[-57.81996536 270.80541992]
[-68.64996338 259.29513550]
[-68.08542633 243.50094604]
[-56.46128082 232.79324341]
[-40.67393112 233.52473450]
[-29.74940872 223.24588013]
[-19.07842636 212.70405579]
[-15.81486511 198.17138672]
[-0.66641235 193.60685730]
[9.74470043 182.80830383]
[20.15581322 172.00975037]
[30.56692696 161.21119690]
[40.97803879 150.41264343]
[51.38915253 139.61408997]
[61.80026627 128.81553650]
[72.21138000 118.01698303]
[67.85900116 107.98594666]
[67.01033020 97.08435059]
[52.75581360 92.41436768]
[38.50129700 87.74438477]
[24.24678040 83.07440186]
[15.97459221 95.68415833]
[4.72893000 105.71514130]
[-8.71963215 112.48802948]
[-23.45164680 115.54652405]
[-38.46166611 114.68801117]
[-52.72684479 109.97699738]
[-65.27666473 101.74033356]
[-75.25893402 90.54450226]
[-81.99768829 77.15668488]
[-85.03892517 62.49217987]
[-84.18121338 47.55183792]
[-98.43572998 42.88185501]
[-112.69024658 38.21187210]
[-126.94476318 33.54188919]
[-141.19927979 28.87190437]
[-155.56329346 24.55041885]
[-170.02827454 20.57999229]
[-180.89802551 31.43097878]
[-195.74114990 35.37782669]
[-210.56489563 31.35884666]
[-221.38174438 20.45512962]
[-225.28205872 5.59971857]
[-221.21662903 -9.21135521]
[-210.27905273 -19.99398613]
[-195.41149902 -23.84770393]
[-180.61323547 -19.73587418]
[-169.86494446 -8.76456070]
[-166.05784607 6.11500931]
[-151.59286499 10.08543587]
[-149.11045837 8.84467602]
[-145.99407959 8.49767399]
[-142.57638550 9.28814220]
[-139.27122498 11.33687210]
[-136.52929688 14.61738777]
[-122.27478027 19.28737068]
[-108.02026367 23.95735550]
[-93.76574707 28.62733841]
[-79.51123047 33.29732132]
[-71.36219025 20.74572563]
[-60.23324966 10.72357178]
[-46.87901688 3.91850019]
[-32.20708084 0.79973996]
[-17.21632767 1.58576167]
[-2.92893982 6.22898245]
[9.67930412 14.41860199]
[19.74567032 25.60139847]
[26.57950592 39.01909637]
[29.70961761 53.75978088]
[28.91676331 68.81987762]
[43.17127991 73.48986816]
[57.42579651 78.15985107]
[71.68031311 82.82983398]
[74.44863892 78.92994690]
[77.74980164 75.46945190]
[81.51496124 72.52050781]
[85.66559601 70.14460754]
[82.40414429 55.50347137]
[79.14269257 40.86233521]
[75.88124084 26.22119713]
[72.61978912 11.58005810]
[69.35833740 -3.06108022]
[66.09688568 -17.70221901]
[51.58041000 -22.92481804]
[42.21006775 -35.18043900]
[40.97590256 -50.55835724]
[48.27172470 -64.15153503]
[61.76947021 -71.62243652]
[77.16205597 -70.58712769]
[89.53776550 -61.37597275]
[94.94754791 -46.92821503]
[91.66516876 -31.85407829]
[80.73802185 -20.96367073]
[83.99947357 -6.32253265]
[87.26092529 8.31860542]
[90.52237701 22.95974350]
[93.78382874 37.60088348]
[97.04528809 52.24201965]
[100.30673981 66.88315582]
[111.21005249 65.79691315]
[122.71562195 68.46042633]
[126.50962830 53.94816589]
[130.30361938 39.43591309]
[134.09762573 24.92365646]
[125.89701843 11.41345596]
[129.73255920 -3.91834426]
[143.32872009 -11.97565937]
[158.61911011 -7.97822714]
[166.53222656 5.70234680]
[162.37335205 20.94962120]
[148.60987854 28.71765709]
[144.81588745 43.22991180]
[141.02188110 57.74216843]
[137.22787476 72.25442505]
[147.51496887 61.33766174]
[151.89921570 46.99268341]
[161.61763000 35.56673431]
[175.07321167 28.93743515]
[190.05477905 28.19417953]
[204.10044861 33.45910645]
[214.90206909 43.86702728]
[220.68463135 57.70761871]
[220.49789429 72.70645905]
[214.37252808 86.39878845]
[203.31510925 96.53455353]
[189.14273071 101.44815063]
[174.18429565 100.33212280]
[160.89732361 93.36935425]
[145.90150452 93.01540375]
[158.89187622 100.51540375]
[171.88226318 108.01540375]
[190.30540466 107.60046387]
[198.45637512 123.15585327]
[211.53710938 130.49711609]
[224.61785889 137.83837891]
[237.69859314 145.17965698]
[250.77932739 152.52091980]
[263.86007690 159.86218262]
[276.85186768 147.26182556]
[293.08013916 139.28755188]
[310.95956421 136.70672607]
[328.74722290 139.76042175]
[344.71228027 148.14094543]
[357.30456543 161.02281189]
[365.30499268 177.14402771]
[367.94363403 194.92970276]
[364.97375488 212.64596558]
[378.47695923 219.17773438]
[391.98013306 225.70948792]
[405.48333740 232.24124146]
[418.98651123 238.77299500]
[432.48971558 245.30474854]
[445.99291992 251.83650208]
[455.65087891 241.12594604]
[469.14260864 234.53569031]
[484.71093750 233.41200256]
[500.14132690 238.35446167]
[513.07690430 249.06887817]
[521.37628174 264.35156250]
[536.21643066 266.53558350]
[551.05657959 268.71957397]
[565.89672852 270.90359497]
[575.36798096 258.81265259]
[589.62176514 253.09208679]
[604.82391357 255.28071594]
[616.88513184 264.78982544]
[622.56097412 279.06146240]
[620.32470703 294.25668335]
[610.77789307 306.28802490]
[596.48846436 311.91912842]
[581.30035400 309.63522339]
[569.29901123 300.05072021]
[563.71270752 285.74374390]
[548.87255859 283.55972290]
[534.03240967 281.37573242]
[519.19226074 279.19171143]
[515.88537598 285.92327881]
[529.34851074 292.53713989]
[542.81170654 299.15097046]
[551.16448975 311.61013794]
[536.19787598 312.61416626]
[522.73468018 306.00030518]
[509.27151489 299.38647461]
[505.96456909 306.11804199]
[516.76312256 316.52917480]
[527.56170654 326.94027710]
[538.36022949 337.35137939]
[549.15881348 347.76251221]
[559.95733643 358.17361450]
[570.75592041 368.58471680]
[581.55444336 378.99584961]
[597.15368652 385.63659668]
[595.09075928 402.46456909]
[578.34936523 405.14071655]
[571.14331055 389.79440308]
[560.34478760 379.38327026]
[549.54620361 368.97216797]
[538.74768066 358.56106567]
[527.94909668 348.14993286]
[517.15057373 337.73883057]
[506.35202026 327.32772827]
[495.55346680 316.91659546]
[475.07592773 319.45016479]
[456.37387085 312.99465942]
[443.02124023 299.56735229]
[437.22158813 282.43411255]
[439.46115112 265.33969116]
[425.95794678 258.80795288]
[412.45477295 252.27618408]
[398.95156860 245.74443054]
[385.44839478 239.21267700]
[371.94519043 232.68092346]
[358.44201660 226.14916992]
[350.81875610 235.50926208]
[341.40493774 243.07771301]
[330.61285400 248.51913452]
[318.91604614 251.59136963]
[306.82839966 252.15631104]
[294.88162231 250.18603516]
[283.60192871 245.76423645]
[273.48672485 239.08265686]
[264.98278809 230.43276978]
[258.46646118 220.19302368]
[254.22708130 208.81237793]
[252.45399475 196.79052734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 170]
[2 169]
[3 168]
[4 167]
[5 166]
[6 165]
[9 163]
[10 162]
[11 161]
[15 48]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[22 41]
[24 39]
[29 38]
[30 37]
[50 105]
[51 104]
[52 103]
[53 102]
[64 91]
[65 90]
[66 89]
[67 88]
[68 87]
[69 82]
[70 81]
[109 131]
[110 130]
[111 129]
[112 128]
[113 127]
[114 126]
[115 125]
[133 146]
[134 145]
[135 144]
[136 143]
[179 245]
[180 244]
[181 243]
[182 242]
[183 241]
[184 240]
[185 239]
[191 208]
[192 207]
[193 206]
[194 205]
[216 234]
[217 233]
[218 232]
[219 231]
[220 230]
[221 229]
[222 228]
[223 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
