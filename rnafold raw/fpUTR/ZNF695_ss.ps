%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAGGAAGGGGCGGCCUUGGGGAUCUGGCGGGGCCUUUGUCUCCUUGCGGCCGGCGGGGUGCUGGGUUCCCGUCUGCUGCCUCUCGGAGAGUCCCGGGUGACUGCCGCAGGCUCCAUCGCCCUGUGGCCUGCAGGUAUUGCGAGAUUUAUAGGGAGGACGCUGGGACCCCCAAAAGCUGGGAA\
) } def
/len { sequence length } bind def

/coor [
[85.67323303 716.63208008]
[75.03481293 727.38751221]
[61.59253693 734.32727051]
[46.66333771 736.77148438]
[31.70982552 734.48071289]
[18.19699860 727.67932129]
[7.44870281 717.03369141]
[0.51794696 703.58679199]
[-1.91626430 688.65594482]
[0.38454854 673.70397949]
[7.19497538 660.19573975]
[17.84779930 649.45452881]
[31.29936600 642.53283691]
[46.23182678 640.10858154]
[48.50324249 625.28155518]
[50.77466202 610.45452881]
[53.04607773 595.62750244]
[45.79676056 579.65606689]
[57.40397644 565.37384033]
[59.42464828 550.51055908]
[61.44532013 535.64727783]
[63.46599197 520.78399658]
[65.48666382 505.92074585]
[67.50733948 491.05746460]
[59.98930359 475.21069336]
[71.35364532 460.73446655]
[73.12299347 445.83917236]
[74.89234161 430.94390869]
[76.66169739 416.04861450]
[78.43104553 401.15335083]
[80.20039368 386.25805664]
[81.96974945 371.36279297]
[68.46948242 360.00466919]
[64.43818665 342.66754150]
[71.66875458 326.23101807]
[87.44648743 317.33352661]
[88.71175385 302.38699341]
[89.97702026 287.44042969]
[77.35009003 274.20797729]
[78.40108490 255.62849426]
[92.92901611 243.49554443]
[93.68875885 228.51480103]
[94.44849396 213.53405762]
[95.20822906 198.55329895]
[95.96796417 183.57255554]
[95.96796417 168.57255554]
[95.20822906 153.59181213]
[94.44849396 138.61106873]
[93.68875885 123.63031769]
[92.92901611 108.64956665]
[92.04279327 93.67576599]
[91.03015137 78.70999146]
[90.01750183 63.74420929]
[89.00485229 48.77843094]
[87.99221039 33.81265259]
[84.28363037 25.44045639]
[87.09101868 18.58594704]
[86.33128357 3.60519886]
[85.57154083 -11.37554836]
[84.81180573 -26.35629654]
[84.05207062 -41.33704376]
[83.29232788 -56.31779099]
[82.53259277 -71.29853821]
[74.10625458 -84.68910980]
[81.18900299 -97.79193878]
[80.42926025 -112.77268219]
[79.66952515 -127.75343323]
[78.90979004 -142.73417664]
[66.99337769 -133.62377930]
[52.39981079 -137.09188843]
[45.85605240 -150.58926392]
[52.17208099 -164.19470215]
[66.70531464 -167.90753174]
[78.77241516 -159.00000000]
[79.27902985 -173.99143982]
[79.78564453 -188.98287964]
[80.29225159 -203.97431946]
[80.79886627 -218.96575928]
[81.30548096 -233.95719910]
[74.03868103 -248.01081848]
[82.20141602 -260.46951294]
[82.70803070 -275.46096802]
[82.83470917 -290.46041870]
[74.86543274 -304.12796021]
[82.38667297 -316.98406982]
[82.13333130 -331.98193359]
[81.87998962 -346.97979736]
[81.62664795 -361.97766113]
[81.37330627 -376.97552490]
[69.83805847 -387.77893066]
[69.40407562 -403.57727051]
[80.32883453 -414.99765015]
[96.13086700 -415.26455688]
[107.43511200 -404.21966553]
[107.53495789 -388.41571045]
[96.37116241 -377.22888184]
[96.62450409 -362.23101807]
[96.87784576 -347.23315430]
[97.13118744 -332.23529053]
[97.38452911 -317.23742676]
[105.33568573 -304.64263916]
[97.83256531 -290.71377563]
[100.12020874 -288.00363159]
[101.19726562 -284.04324341]
[100.48714447 -279.41909790]
[97.69947052 -274.95434570]
[97.19286346 -259.96289062]
[104.49589539 -246.98156738]
[96.29692078 -233.45059204]
[95.79030609 -218.45915222]
[95.28369904 -203.46771240]
[94.77708435 -188.47627258]
[94.27046967 -173.48481750]
[93.76386261 -158.49337769]
[93.89053345 -143.49391174]
[94.65026855 -128.51316833]
[95.41001129 -113.53241730]
[96.16974640 -98.55167389]
[104.54174042 -86.23262787]
[97.51334381 -72.05827332]
[98.27307892 -57.07752991]
[99.03281403 -42.09678268]
[99.79254913 -27.11603355]
[100.55229187 -12.13528633]
[101.31202698 2.84546137]
[102.07176208 17.82620811]
[102.95799255 32.80000687]
[103.97063446 47.76578522]
[104.98328400 62.73156357]
[105.99592590 77.69734192]
[107.00857544 92.66312408]
[110.65843964 99.87133026]
[107.90976715 107.88983154]
[108.66950226 122.87057495]
[109.42923737 137.85131836]
[110.18898010 152.83207703]
[110.94871521 167.81282043]
[121.88185120 157.54312134]
[136.87858582 157.85586548]
[147.37406921 168.57243347]
[147.37416077 183.57243347]
[136.87881470 194.28913879]
[121.88208771 194.60208130]
[110.94871521 184.33229065]
[110.18898010 199.31304932]
[109.42923737 214.29379272]
[108.66950226 229.27453613]
[107.90976715 244.25527954]
[117.46359253 251.37435913]
[122.33536530 262.11575317]
[121.41634369 273.75408936]
[115.05125427 283.39736938]
[104.92356110 288.70571899]
[103.65829468 303.65225220]
[102.39302826 318.59878540]
[112.86501312 325.47119141]
[119.37610626 336.08691406]
[120.73921967 348.39279175]
[116.75600433 360.03936768]
[108.24298859 368.82934570]
[96.86502838 373.13214111]
[95.09568024 388.02740479]
[93.32632446 402.92269897]
[91.55697632 417.81796265]
[89.78762817 432.71325684]
[88.01827240 447.60855103]
[86.24892426 462.50381470]
[93.60784149 473.11410522]
[91.81366730 485.49612427]
[82.37060547 493.07812500]
[80.34993744 507.94140625]
[78.32926178 522.80468750]
[76.30859375 537.66796875]
[74.28791809 552.53125000]
[72.26725006 567.39447021]
[79.44591522 578.12756348]
[77.44287109 590.47753906]
[67.87310028 597.89892578]
[65.60168457 612.72595215]
[63.33026886 627.55297852]
[61.05885315 642.38000488]
[74.58078003 649.16326904]
[85.34333801 659.79449463]
[92.29210663 673.23211670]
[94.74632263 688.15966797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 181]
[15 180]
[16 179]
[17 178]
[19 175]
[20 174]
[21 173]
[22 172]
[23 171]
[24 170]
[26 167]
[27 166]
[28 165]
[29 164]
[30 163]
[31 162]
[32 161]
[36 155]
[37 154]
[38 153]
[41 148]
[42 147]
[43 146]
[44 145]
[45 144]
[46 137]
[47 136]
[48 135]
[49 134]
[50 133]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
[57 126]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
[63 120]
[65 118]
[66 117]
[67 116]
[68 115]
[74 114]
[75 113]
[76 112]
[77 111]
[78 110]
[79 109]
[81 107]
[82 106]
[83 102]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
