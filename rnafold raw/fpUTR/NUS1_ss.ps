%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGUCCAUGUACUACUGGGGGCGGGGCUGCCAAGGGAGGAGGAAGAUGGCGGCGGGGGCGAGGUGAGGUGUUGGCAGUGGAAAGGGGUUCGGGCUCGGGGGGCGGGGGGACGCGGAGCGAUGGCCCGCGCCGGCCGCAGGGGCGGAUAAAAAGCCGUCGCGCUGCGGGAGUGGGCGGGAGGGAGAGGGGGUGUCUGAGGGCCACAAGAGU\
) } def
/len { sequence length } bind def

/coor [
[-9.49565411 130.92198181]
[-23.39599800 136.55940247]
[-37.29634094 142.19680786]
[-51.19668579 147.83422852]
[-57.97245407 153.95896912]
[-65.34501648 153.45050049]
[-79.32736969 158.88131714]
[-93.30972290 164.31213379]
[-99.21364594 175.77920532]
[-110.97077942 180.01490784]
[-122.09386444 175.26181030]
[-136.15515137 180.48483276]
[-150.21644592 185.70785522]
[-164.27774048 190.93089294]
[-178.26010132 196.36169434]
[-192.16044617 201.99911499]
[-206.06079102 207.63653564]
[-209.84411621 220.56280518]
[-220.22970581 228.82948303]
[-233.28671265 229.59410095]
[-244.23541260 222.80114746]
[-254.29801941 235.00994873]
[-268.96316528 232.40553284]
[-273.01834106 247.26695251]
[-284.90783691 256.77972412]
[-299.94122314 257.45941162]
[-312.34368896 249.25474548]
[-326.32601929 254.68556213]
[-340.30838013 260.11636353]
[-354.29074097 265.54718018]
[-368.27310181 270.97799683]
[-382.25546265 276.40881348]
[-396.23779297 281.83963013]
[-396.54067993 297.03753662]
[-402.64108276 310.96069336]
[-413.60873413 321.48587036]
[-427.77111816 327.00805664]
[-442.96862793 326.68518066]
[-456.88372803 320.56649780]
[-467.39447021 309.58502197]
[-472.89804077 295.41534424]
[-472.55517578 280.21829224]
[-466.41818237 266.31124878]
[-455.42288208 255.81495667]
[-441.24600220 250.33004761]
[-426.04937744 250.69290161]
[-412.15042114 256.84817505]
[-401.66860962 267.85726929]
[-387.68627930 262.42645264]
[-373.70391846 256.99563599]
[-359.72155762 251.56483459]
[-345.73919678 246.13401794]
[-331.75683594 240.70320129]
[-317.77450562 235.27238464]
[-314.16156006 220.84724426]
[-302.61065674 211.20147705]
[-287.41723633 210.19511414]
[-274.39398193 218.42317200]
[-265.33148193 206.60282898]
[-249.66622925 208.81880188]
[-243.55004883 193.15219116]
[-227.68290710 186.62834167]
[-211.69819641 193.73619080]
[-197.79786682 188.09877014]
[-183.89752197 182.46136475]
[-181.24540710 178.49037170]
[-176.07093811 176.14285278]
[-169.50077820 176.86959839]
[-155.43948364 171.64656067]
[-141.37817383 166.42353821]
[-127.31688690 161.20051575]
[-116.86956787 147.09974670]
[-98.74053955 150.32977295]
[-84.75818634 144.89895630]
[-70.77583313 139.46813965]
[-56.83409882 133.93388367]
[-42.93375778 128.29646301]
[-29.03341293 122.65904999]
[-15.13306808 117.02163696]
[-29.86618042 114.20465088]
[-42.49916840 106.11715698]
[-51.22474670 93.91616058]
[-54.79461670 79.34715271]
[-52.69807434 64.49439240]
[-45.23505020 51.48273087]
[-33.47321701 42.17363739]
[-19.09523201 37.89888000]
[-4.15802956 39.27000809]
[9.20145607 46.09086990]
[19.07200050 57.38566208]
[24.04151344 71.53853607]
[23.39904785 86.52477264]
[17.23651695 100.20041656]
[6.43405199 110.60998535]
[21.15657234 107.73815155]
[35.87908936 104.86631775]
[50.60161209 101.99448395]
[58.68351746 89.53582001]
[73.57333374 86.41364288]
[86.58633423 94.97516632]
[97.25759888 85.94103241]
[110.54183197 90.30231476]
[125.26435089 87.43048096]
[139.98687744 84.55864716]
[145.05401611 70.12704468]
[156.58825684 60.23471069]
[171.42672729 57.46235275]
[185.56597900 62.45608902]
[195.24206543 73.78035736]
[209.96458435 70.90852356]
[224.68710327 68.03668976]
[239.40962219 65.16486359]
[254.13214111 62.29302979]
[268.85467529 59.42119598]
[274.06625366 43.72906113]
[286.40975952 32.86877823]
[302.45339966 29.73356247]
[317.79995728 35.08623505]
[328.29168701 47.37635422]
[332.00930786 32.61354065]
[341.72836304 20.97622871]
[355.48004150 14.73827744]
[370.51461792 15.08816910]
[383.85131836 21.90295601]
[392.86929321 33.78326797]
[407.54763794 30.69358826]
[422.22598267 27.60390854]
[436.90432739 24.51423073]
[451.58267212 21.42455101]
[463.49322510 11.01062489]
[477.54129028 15.96046448]
[492.19635010 12.76211262]
[500.65377808 -0.31876948]
[515.53875732 -3.46396017]
[527.95727539 4.67952824]
[542.58819580 1.37268007]
[557.21917725 -1.93416798]
[571.85009766 -5.24101591]
[586.48107910 -8.54786396]
[601.11199951 -11.85471249]
[615.71807861 -15.26987553]
[630.27191162 -18.90110016]
[644.79846191 -22.64006042]
[659.32495117 -26.37901878]
[673.85150146 -30.11797905]
[688.37805176 -33.85693741]
[693.95623779 -48.33668900]
[706.99835205 -56.74398804]
[722.48944092 -55.84605408]
[734.47283936 -45.98816299]
[738.34069824 -30.96087456]
[732.60571289 -16.54249001]
[719.47314453 -8.27716827]
[703.99273682 -9.34309769]
[692.11700439 -19.33040428]
[677.59045410 -15.59144497]
[663.06390381 -11.85248566]
[648.53741455 -8.11352634]
[634.01086426 -4.37456656]
[628.31719971 0.33660907]
[619.24133301 -0.68953156]
[613.47845459 3.93675590]
[604.41888428 2.77623987]
[589.78790283 6.08308792]
[575.15698242 9.38993645]
[560.52600098 12.69678402]
[545.89508057 16.00363159]
[531.26409912 19.31048012]
[523.55493164 32.00317001]
[508.76419067 35.56520844]
[495.50317383 27.39306450]
[489.67239380 31.93344879]
[480.63095093 30.63881111]
[469.77032471 40.83174133]
[454.67236328 36.10289764]
[439.99401855 39.19257736]
[425.31567383 42.28225708]
[410.63732910 45.37193680]
[395.95898438 48.46161652]
[392.49545288 62.96918106]
[383.03762817 74.58204651]
[369.41983032 80.96304321]
[354.32040405 80.79802704]
[340.73477173 74.06616974]
[331.38137817 62.05470276]
[328.00051880 75.28631592]
[319.20642090 85.82108307]
[306.67144775 91.56669617]
[292.81793213 91.35010529]
[280.35015869 85.15659332]
[271.72650146 74.14371490]
[257.00396729 77.01554871]
[242.28146362 79.88738251]
[227.55894470 82.75920868]
[212.83642578 85.63104248]
[198.11389160 88.50287628]
[193.40315247 102.63349152]
[182.17723083 112.57505798]
[167.38464355 115.58265686]
[152.97816467 110.75041962]
[142.85870361 99.28116608]
[128.13618469 102.15299988]
[113.41366577 105.02483368]
[102.74240112 114.05896759]
[89.45816803 109.69768524]
[80.61681366 122.52220154]
[65.64517212 125.22492218]
[53.47344208 116.71700287]
[38.75092316 119.58883667]
[24.02840424 122.46067047]
[9.30588436 125.33250427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 79]
[2 78]
[3 77]
[4 76]
[6 75]
[7 74]
[8 73]
[11 71]
[12 70]
[13 69]
[14 68]
[15 65]
[16 64]
[17 63]
[21 60]
[23 58]
[27 54]
[28 53]
[29 52]
[30 51]
[31 50]
[32 49]
[33 48]
[94 211]
[95 210]
[96 209]
[97 208]
[100 205]
[102 203]
[103 202]
[104 201]
[109 196]
[110 195]
[111 194]
[112 193]
[113 192]
[114 191]
[119 185]
[125 179]
[126 178]
[127 177]
[128 176]
[129 175]
[131 173]
[132 171]
[135 168]
[136 167]
[137 166]
[138 165]
[139 164]
[140 163]
[141 161]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
