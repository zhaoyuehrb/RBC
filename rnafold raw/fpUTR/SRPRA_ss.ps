%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCUGCGCGCCCCCGGGCGGAGAUGGGGAGGGCACCCGGCGUUCUGAGCGGAAGUACGGUUGAGCCGAUUUCCGGGGCCACUGGUGUGACGUGUCCCGCGCUUGGCGCAGCAGGAAGCGGCGGCGAACGCGGCCUGAAUUCCCGGCGCCGGCCCCAGCUCCUCUGCCGCUGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-41.70919800 49.83726883]
[-46.57854843 42.18849945]
[-47.35324097 33.29282379]
[-60.25498199 25.64134598]
[-73.15672302 17.98987007]
[-86.05846405 10.33839130]
[-98.96019745 2.68691421]
[-111.86193848 -4.96456337]
[-124.83032990 -12.50253010]
[-137.86436462 -19.92640495]
[-150.89839172 -27.35027885]
[-163.93243408 -34.77415466]
[-176.96647644 -42.19802856]
[-189.47692871 -37.16096497]
[-202.41331482 -40.21354675]
[-211.09397888 -50.02040863]
[-212.51081848 -62.84449768]
[-228.32734680 -63.22896957]
[-235.32749939 -76.37610626]
[-248.22923279 -84.02758026]
[-261.13098145 -91.67906189]
[-274.03271484 -99.33053589]
[-283.03890991 -101.02487946]
[-287.09207153 -107.23120880]
[-299.85751343 -115.10793304]
[-312.62298584 -122.98465729]
[-325.38845825 -130.86137390]
[-341.19583130 -131.52336121]
[-347.96414185 -144.79133606]
[-358.81106567 -139.84094238]
[-370.57943726 -140.74577332]
[-380.34146118 -147.16426086]
[-385.72479248 -157.39767456]
[-385.48876953 -168.83819580]
[-397.96994019 -177.15805054]
[-410.45111084 -185.47792053]
[-422.93231201 -193.79779053]
[-435.41348267 -202.11766052]
[-455.54971313 -202.47518921]
[-463.41903687 -220.11914062]
[-476.18450928 -227.99586487]
[-488.94998169 -235.87258911]
[-504.75732422 -236.53457642]
[-511.52566528 -249.80253601]
[-509.32257080 -234.96520996]
[-518.12518311 -222.81968689]
[-532.91131592 -220.29550171]
[-545.24475098 -228.83280945]
[-548.08886719 -243.56069946]
[-539.82092285 -256.07632446]
[-525.15704346 -259.23880005]
[-537.02386475 -268.41366577]
[-548.89074707 -277.58856201]
[-560.75756836 -286.76342773]
[-572.62438965 -295.93829346]
[-584.49121094 -305.11315918]
[-596.35803223 -314.28805542]
[-605.08874512 -317.07330322]
[-608.35076904 -323.72955322]
[-620.05474854 -333.11126709]
[-631.75872803 -342.49298096]
[-643.46270752 -351.87469482]
[-659.60314941 -357.06350708]
[-659.08520508 -374.00955200]
[-642.65808105 -378.20300293]
[-634.08099365 -363.57870483]
[-622.37701416 -354.19696045]
[-610.67303467 -344.81524658]
[-598.96905518 -335.43353271]
[-587.18316650 -326.15487671]
[-575.31634521 -316.98001099]
[-563.44952393 -307.80514526]
[-551.58270264 -298.63024902]
[-539.71588135 -289.45538330]
[-527.84899902 -280.28051758]
[-515.98217773 -271.10565186]
[-503.64895630 -262.56802368]
[-488.75466919 -262.46942139]
[-481.07324219 -248.63806152]
[-468.30780029 -240.76133728]
[-455.54232788 -232.88461304]
[-445.81597900 -236.13088989]
[-435.70034790 -233.41561890]
[-428.61535645 -225.40582275]
[-427.09359741 -214.59883118]
[-414.61242676 -206.27897644]
[-402.13125610 -197.95910645]
[-389.65008545 -189.63923645]
[-377.16888428 -181.31936646]
[-359.49249268 -185.99809265]
[-343.72384644 -176.12646484]
[-340.08743286 -157.55680847]
[-325.19314575 -157.45820618]
[-317.51174927 -143.62684631]
[-304.74627686 -135.75012207]
[-291.98080444 -127.87339783]
[-279.21533203 -119.99668121]
[-266.38122559 -112.23227692]
[-253.47949219 -104.58080292]
[-240.57775879 -96.92932129]
[-227.67601013 -89.27784729]
[-212.78230286 -89.44065857]
[-204.85932922 -75.74623871]
[-188.77255249 -80.60559845]
[-173.84794617 -72.17304993]
[-169.54258728 -55.23206329]
[-156.50856018 -47.80818939]
[-143.47451782 -40.38431549]
[-130.44049072 -32.96044159]
[-117.40645599 -25.53656578]
[-110.01659393 -24.95653915]
[-104.21046448 -17.86630249]
[-91.30872345 -10.21482563]
[-78.40698242 -2.56334805]
[-65.50524139 5.08812952]
[-52.60350418 12.73960686]
[-39.70176315 20.39108467]
[-19.14097595 18.78470993]
[-8.84952641 37.55950546]
[4.43701649 44.52138519]
[17.72356033 51.48326492]
[31.01010323 58.44514465]
[44.29664612 65.40702820]
[57.58318710 72.36890411]
[70.86972809 79.33078766]
[84.15627289 86.29267120]
[97.44281769 93.25454712]
[98.32231903 84.97597504]
[103.21118164 77.20415497]
[111.78851318 71.41065979]
[123.25788116 68.90855408]
[136.41354370 70.71041107]
[150.86192322 74.74082947]
[165.31030273 78.77124786]
[179.75868225 82.80166626]
[194.24188232 86.70513916]
[208.75877380 90.48136139]
[223.27566528 94.25759125]
[236.77580261 86.04044342]
[252.11228943 89.85721588]
[260.18624878 103.44348907]
[256.20755005 118.73876190]
[242.53666687 126.66862488]
[227.28431702 122.52843475]
[219.49943542 108.77448273]
[204.98254395 104.99825287]
[190.46565247 101.22202301]
[183.17945862 102.58506012]
[175.72827148 97.25004578]
[161.27989197 93.21962738]
[146.83151245 89.18921661]
[132.38311768 85.15879822]
[127.84793091 91.13224030]
[139.79481506 100.20262146]
[151.74156189 109.27319336]
[142.67080688 121.21980286]
[130.72442627 112.14951324]
[118.77754974 103.07912445]
[114.24235535 109.05257416]
[122.00675201 121.88667297]
[137.41104126 125.41986084]
[145.73426819 138.85487366]
[142.03842163 154.22094727]
[128.51615906 162.40165710]
[113.19002533 158.54354858]
[105.15272522 144.93556213]
[109.17265320 129.65107727]
[101.40825653 116.81697083]
[90.48093414 106.54109192]
[77.19439697 99.57920837]
[63.90785217 92.61733246]
[50.62130737 85.65544891]
[37.33476639 78.69357300]
[24.04822159 71.73168945]
[10.76167870 64.76980591]
[-2.52486372 57.80792999]
[-15.81140709 50.84604645]
[-24.40461349 54.85132980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 117]
[4 116]
[5 115]
[6 114]
[7 113]
[8 112]
[9 110]
[10 109]
[11 108]
[12 107]
[13 106]
[17 103]
[19 101]
[20 100]
[21 99]
[22 98]
[24 97]
[25 96]
[26 95]
[27 94]
[29 92]
[34 89]
[35 88]
[36 87]
[37 86]
[38 85]
[40 81]
[41 80]
[42 79]
[44 77]
[51 76]
[52 75]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[59 69]
[60 68]
[61 67]
[62 66]
[119 177]
[120 176]
[121 175]
[122 174]
[123 173]
[124 172]
[125 171]
[126 170]
[127 169]
[132 152]
[133 151]
[134 150]
[135 149]
[136 147]
[137 146]
[138 145]
[159 168]
[160 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
