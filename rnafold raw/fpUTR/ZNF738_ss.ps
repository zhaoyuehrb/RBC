%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCAAUCAGGCACGCAGCUUGAGCGGAGAGGACGGCUUCCGGGAUGUGGCGGGAUUUGUCCGCUUCUUUGUCUUUGGCUGCCGCUGGAACUCCGGGUCUCGUCUUCACUGCUCUGUGUCCUCUGCUCCUAGAGGCCCAGCCUCUGGUCCUGUGACCUGCAGGUAUUGGGAAUCCACAGCUAAGACGCCGGGACACCCUGGAAGCCUAGAA\
) } def
/len { sequence length } bind def

/coor [
[-150.84341431 571.07293701]
[-164.81979370 569.81231689]
[-171.27078247 583.35430908]
[-177.72175598 596.89624023]
[-172.67414856 611.63256836]
[-179.40927124 625.27416992]
[-193.48921204 629.99548340]
[-199.94018555 643.53747559]
[-206.39117432 657.07940674]
[-212.84214783 670.62139893]
[-219.29312134 684.16333008]
[-225.74409485 697.70532227]
[-221.75808716 713.24530029]
[-231.53712463 725.96343994]
[-247.57957458 726.10339355]
[-257.57904053 713.55786133]
[-253.86477661 697.95068359]
[-239.28607178 691.25433350]
[-232.83508301 677.71240234]
[-226.38410950 664.17041016]
[-219.93313599 650.62841797]
[-213.48216248 637.08648682]
[-207.03117371 623.54449463]
[-212.23657227 609.63623047]
[-205.88726807 595.81085205]
[-191.26371765 590.44531250]
[-184.81274414 576.90332031]
[-178.36177063 563.36132812]
[-189.15116882 551.75421143]
[-194.67352295 536.85913086]
[-194.05545044 520.94671631]
[-187.36203003 506.45486450]
[-175.59138489 495.61517334]
[-160.52597046 490.10925293]
[-144.46260071 490.80807495]
[-138.21299744 477.17199707]
[-131.96340942 463.53591919]
[-125.71380615 449.89984131]
[-119.46420288 436.26376343]
[-113.21459961 422.62771606]
[-106.96500397 408.99163818]
[-100.71540070 395.35556030]
[-94.46579742 381.71948242]
[-88.21619415 368.08340454]
[-89.94726562 353.28973389]
[-77.16380310 343.96807861]
[-70.91419983 330.33200073]
[-64.66459656 316.69592285]
[-72.00361633 303.61392212]
[-86.89833069 301.83981323]
[-101.79304504 300.06573486]
[-116.68775940 298.29162598]
[-131.58247375 296.51751709]
[-146.47718811 294.74343872]
[-159.92204285 303.49645996]
[-175.10215759 298.30575562]
[-180.37266541 283.15313721]
[-171.69047546 269.66244507]
[-155.71582031 268.18255615]
[-144.70309448 279.84872437]
[-129.80838013 281.62280273]
[-114.91366577 283.39691162]
[-100.01895142 285.17098999]
[-85.12422943 286.94509888]
[-70.22951508 288.71920776]
[-56.32917023 283.08178711]
[-46.87785339 271.43392944]
[-37.42653656 259.78607178]
[-35.60161972 242.33189392]
[-18.34916687 235.89392090]
[-9.07148933 224.10729980]
[0.20618972 212.32066345]
[9.48386860 200.53402710]
[18.76154709 188.74740601]
[28.03922462 176.96076965]
[29.70613670 169.76113892]
[37.54275513 165.06956482]
[46.99407196 153.42170715]
[56.44538879 141.77384949]
[65.89670563 130.12599182]
[75.34802246 118.47813416]
[69.28289795 97.62915039]
[78.47551727 77.95781708]
[98.35974121 69.23523712]
[101.23157501 54.51271439]
[104.10340118 39.79019547]
[106.97523499 25.06767464]
[109.84706879 10.34515572]
[101.28554535 -2.66784239]
[104.40772247 -17.55766106]
[116.86638641 -25.63956642]
[119.73822021 -40.36208725]
[122.61005402 -55.08460617]
[117.65799713 -70.11083984]
[127.68887329 -81.12133026]
[130.56071472 -95.84384918]
[133.43254089 -110.56636810]
[120.04833221 -117.54798126]
[109.18468475 -128.00758362]
[101.71607971 -141.09135437]
[98.24037170 -155.73471069]
[99.03092194 -170.74893188]
[104.01512909 -184.91769409]
[112.78099823 -197.09555054]
[124.61118317 -206.30058289]
[138.54168701 -211.79353333]
[153.44039917 -213.13717651]
[156.31224060 -227.85969543]
[159.18406677 -242.58222961]
[150.14828491 -255.54872131]
[153.00993347 -271.09176636]
[166.07124329 -279.98995972]
[181.58317566 -276.96414185]
[190.34277344 -263.80947876]
[187.15312195 -248.33041382]
[173.90658569 -239.71038818]
[171.03475952 -224.98786926]
[168.16291809 -210.26535034]
[181.46443176 -203.42085266]
[192.30928040 -193.09512329]
[199.81268311 -180.11882019]
[203.35914612 -165.53926086]
[202.65295410 -150.53602600]
[197.74278259 -136.32537842]
[189.01850891 -124.06180573]
[177.18019104 -114.74411774]
[163.18194580 -109.13417053]
[148.15505981 -107.69453430]
[145.28323364 -92.97201538]
[142.41139221 -78.24949646]
[147.56886292 -64.27631378]
[137.33256531 -52.21277237]
[134.46073914 -37.49025345]
[131.58891296 -22.76773453]
[140.09681702 -10.59600544]
[137.39410400 4.37563324]
[124.56958771 13.21698761]
[121.69775391 27.93950653]
[118.82592010 42.66202545]
[115.95409393 57.38454819]
[113.08226013 72.10706329]
[123.03716278 79.54393768]
[129.24443054 90.30854797]
[144.20327759 89.19815063]
[159.16212463 88.08776093]
[174.12097168 86.97736359]
[189.07981873 85.86696625]
[204.03865051 84.75656891]
[218.98886108 83.53536987]
[233.92961121 82.20343018]
[248.87036133 80.87149048]
[263.81109619 79.53955078]
[278.75186157 78.20761871]
[290.10546875 66.87291718]
[306.02923584 68.82554626]
[314.30783081 82.56761169]
[308.59060669 97.55738068]
[293.26333618 102.29597473]
[280.08380127 93.14836121]
[265.14303589 94.48030090]
[250.20230103 95.81224060]
[235.26155090 97.14418030]
[220.32080078 98.47612000]
[213.93803406 102.20083618]
[205.14904785 99.71541595]
[190.19021606 100.82581329]
[175.23136902 101.93620300]
[160.27252197 103.04660034]
[145.31367493 104.15699768]
[130.35482788 105.26739502]
[127.95325470 112.95286560]
[123.64228821 119.75357056]
[117.71639252 125.20497894]
[110.58034515 128.93470764]
[102.72159576 130.68801880]
[94.67694092 130.34512329]
[86.99588013 127.92945099]
[77.54456329 139.57731628]
[68.09324646 151.22517395]
[58.64192963 162.87303162]
[49.19061279 174.52088928]
[39.82585526 186.23844910]
[30.54817772 198.02508545]
[21.27050018 209.81170654]
[11.99282074 221.59834290]
[2.71514249 233.38497925]
[-6.56253624 245.17160034]
[-5.81470442 258.04757690]
[-13.78412056 267.67358398]
[-25.77867889 269.23739624]
[-35.22999573 280.88525391]
[-44.68131256 292.53311157]
[-51.02852631 322.94552612]
[-57.27812576 336.58160400]
[-63.52772903 350.21768188]
[-62.24367523 365.98669434]
[-74.58012390 374.33300781]
[-80.82972717 387.96908569]
[-87.07932281 401.60516357]
[-93.32892609 415.24124146]
[-99.57852936 428.87731934]
[-105.82813263 442.51336670]
[-112.07772827 456.14944458]
[-118.32733154 469.78552246]
[-124.57693481 483.42160034]
[-130.82653809 497.05767822]
[-120.83472443 507.20672607]
[-114.91962433 520.12963867]
[-113.77320099 534.26568604]
[-117.51281738 547.91528320]
[-125.66963959 559.44421387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 28]
[3 27]
[4 26]
[7 23]
[8 22]
[9 21]
[10 20]
[11 19]
[12 18]
[35 206]
[36 205]
[37 204]
[38 203]
[39 202]
[40 201]
[41 200]
[42 199]
[43 198]
[44 197]
[46 195]
[47 194]
[48 193]
[49 65]
[50 64]
[51 63]
[52 62]
[53 61]
[54 60]
[66 192]
[67 191]
[68 190]
[70 187]
[71 186]
[72 185]
[73 184]
[74 183]
[75 182]
[77 181]
[78 180]
[79 179]
[80 178]
[81 177]
[84 141]
[85 140]
[86 139]
[87 138]
[88 137]
[91 134]
[92 133]
[93 132]
[95 130]
[96 129]
[97 128]
[107 118]
[108 117]
[109 116]
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[148 165]
[149 163]
[150 162]
[151 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
