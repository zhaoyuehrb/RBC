%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGGCAGUCAAGGGCUUCUGGCUGACCCGAGCGGAGAUCUCGCGAGACUGUCAGACGUAUGGCGAGAGGUGUGGGAGGAAGAUUGUGUUGUCGCGAGAACUCUGCCUUUGGGCCGUAGGUUAGUGUGGGGCCGUGUCUCAGUCCACCCAAGGUCUCCUCGGAUCGCCUGGAGAGGCACUCGGACCUGUUAUGUCUGGACACAUUGCUUCAACAUAGAACGCACAUGAACAAUGUGGAGGUCUAGGCUGGA\
) } def
/len { sequence length } bind def

/coor [
[64.76169586 326.78164673]
[59.80324936 331.00161743]
[53.83675003 333.47729492]
[47.44969940 333.99893188]
[41.30330658 347.68185425]
[35.15691376 361.36474609]
[29.09559441 375.08557129]
[23.11957741 388.84371948]
[17.14356232 402.60189819]
[11.16754532 416.36007690]
[5.19152880 430.11822510]
[-0.78448743 443.87640381]
[7.21180487 457.17449951]
[5.83098888 472.63000488]
[-4.39598227 484.29998779]
[-19.53663063 487.69711304]
[-33.76906586 481.51507568]
[-41.62063217 468.13104248]
[-40.07223511 452.69140625]
[-29.71926689 441.13305664]
[-14.54265690 437.90039062]
[-8.56664085 424.14221191]
[-2.59062433 410.38406372]
[3.38539219 396.62588501]
[9.36140823 382.86770630]
[15.33742523 369.10952759]
[15.12020874 361.74240112]
[21.47401047 355.21835327]
[27.62040138 341.53546143]
[33.76679230 327.85256958]
[28.87867928 305.26376343]
[48.40571213 291.57995605]
[53.51655960 277.47747803]
[58.62741089 263.37503052]
[52.10111618 250.03550720]
[57.08335114 235.66081238]
[71.11933136 228.90588379]
[76.23017883 214.80342102]
[81.34102631 200.70097351]
[86.45188141 186.59851074]
[91.56272888 172.49606323]
[96.67357635 158.39360046]
[101.78442383 144.29115295]
[87.99472809 138.04333496]
[78.49542999 128.19282532]
[73.93530273 116.82566071]
[59.74010849 121.67296600]
[51.40822983 135.38279724]
[35.47698975 137.27359009]
[24.16747093 125.89491272]
[26.15537071 109.97550201]
[39.91574097 101.72736359]
[54.89280319 107.47776794]
[69.08799744 102.63046265]
[69.37961578 95.01369476]
[71.51965332 87.69792938]
[59.59576797 78.59732819]
[47.67188644 69.49671936]
[32.00750351 67.27463531]
[26.58454323 53.40233612]
[14.66066170 44.30173111]
[2.73677850 35.20112228]
[-9.18710423 26.10051918]
[-21.11098671 16.99991417]
[-33.03487015 7.89930773]
[-51.35857391 5.95464230]
[-57.45446396 -10.51378822]
[-69.49043274 -19.46563339]
[-81.52639771 -28.41747665]
[-93.56236267 -37.36931992]
[-105.59832764 -46.32116699]
[-117.63429260 -55.27301025]
[-122.76578522 -55.87139130]
[-126.76695251 -58.13804626]
[-129.19403076 -61.36981201]
[-129.94349670 -64.78922272]
[-141.63771057 -74.18311310]
[-153.33192444 -83.57701111]
[-165.02615356 -92.97090149]
[-176.52035522 -88.13558960]
[-188.90817261 -88.63229370]
[-199.85035706 -94.30600739]
[-207.30667114 -104.02992249]
[-209.91615295 -115.92868805]
[-207.24526978 -127.73993683]
[-218.70260620 -137.42132568]
[-230.15994263 -147.10272217]
[-241.61727905 -156.78410339]
[-253.07463074 -166.46549988]
[-269.30172729 -168.83474731]
[-275.11120605 -184.17039490]
[-264.52676392 -196.69644165]
[-248.43676758 -193.52716064]
[-243.39323425 -177.92283630]
[-231.93589783 -168.24145508]
[-220.47854614 -158.56005859]
[-209.02120972 -148.87866211]
[-197.56387329 -139.19728088]
[-180.60433960 -144.19659424]
[-163.89880371 -137.94020081]
[-154.22599792 -122.76447296]
[-155.63224792 -104.66512299]
[-143.93803406 -95.27122498]
[-132.24382019 -85.87733459]
[-120.54959869 -76.48343658]
[-108.68244934 -67.30897522]
[-96.64648438 -58.35713196]
[-84.61051941 -49.40528870]
[-72.57455444 -40.45344162]
[-60.53858566 -31.50159836]
[-48.50261688 -22.54975510]
[-36.51040649 -24.00028419]
[-26.41427994 -16.66407585]
[-23.93426514 -4.02457476]
[-12.01038170 5.07603025]
[-0.08649883 14.17663574]
[11.83738422 23.27724075]
[23.76126671 32.37784576]
[35.68515015 41.47845078]
[50.49665833 43.04959869]
[56.77249146 57.57283783]
[68.69637299 66.67344666]
[80.62025452 75.77404785]
[115.28478241 65.56439209]
[144.24571228 97.31546021]
[157.56399536 90.41448212]
[170.88227844 83.51351166]
[184.20054626 76.61253357]
[197.47572327 69.62900543]
[210.70729065 62.56318665]
[223.93885803 55.49736786]
[237.17041016 48.43154907]
[250.40197754 41.36573410]
[260.30261230 23.78602600]
[279.59234619 25.33254242]
[292.64437866 17.94033623]
[305.69641113 10.54812908]
[318.74841309 3.15592241]
[331.80044556 -4.23628426]
[337.70535278 -11.16926003]
[345.06076050 -11.63809681]
[358.20355225 -18.86766624]
[371.34637451 -26.09723473]
[375.67532349 -38.22849655]
[386.74868774 -43.98456573]
[398.39266968 -40.76977539]
[411.62423706 -47.83559418]
[412.23321533 -63.11879730]
[420.35665894 -75.96039581]
[433.72827148 -82.96514130]
[448.71044922 -82.34053802]
[461.28369141 -74.35436249]
[474.51525879 -81.42018127]
[487.74682617 -88.48599243]
[500.97839355 -95.55181122]
[514.20996094 -102.61763000]
[527.44152832 -109.68344879]
[513.99682617 -116.33482361]
[510.68963623 -130.96569824]
[519.96636963 -142.75306702]
[534.96472168 -142.97738647]
[544.58978271 -131.47271729]
[541.72058105 -116.74809265]
[555.36511230 -122.97931671]
[560.96636963 -137.51422119]
[574.89257812 -143.63919067]
[588.71484375 -138.20965576]
[602.35937500 -144.44087219]
[616.00384521 -150.67210388]
[629.64831543 -156.90332031]
[638.71478271 -170.56826782]
[655.06317139 -169.27899170]
[661.87567139 -154.36180115]
[652.14410400 -141.16221619]
[635.87951660 -143.25885010]
[622.23504639 -137.02761841]
[608.59057617 -130.79640198]
[594.94610596 -124.56517029]
[589.99780273 -110.56339264]
[576.24914551 -104.04966736]
[561.59631348 -109.33483887]
[547.95184326 -103.10361481]
[534.50732422 -96.45188904]
[521.27575684 -89.38607025]
[508.04421997 -82.32025146]
[494.81265259 -75.25443268]
[481.58108521 -68.18861389]
[468.34951782 -61.12279892]
[467.99288940 -46.23191452]
[460.17864990 -33.43373108]
[446.91995239 -26.21756554]
[431.72970581 -26.60937309]
[418.69006348 -34.60403061]
[405.45849609 -27.53821373]
[396.98529053 -12.15725422]
[378.57592773 -12.95442963]
[365.43313599 -5.72486067]
[352.29031372 1.50470877]
[339.19265747 8.81573772]
[326.14062500 16.20794487]
[313.08862305 23.60015106]
[300.03659058 30.99235725]
[286.98455811 38.38456345]
[285.16549683 48.40608597]
[277.99008179 55.94046783]
[267.64221191 58.34576416]
[257.46780396 54.59729385]
[244.23623657 61.66311264]
[231.00466919 68.72892761]
[217.77310181 75.79474640]
[204.54154968 82.86056519]
[200.13374329 88.76760101]
[191.10153198 89.93080902]
[177.78324890 96.83178711]
[164.46496582 103.73276520]
[151.14669800 110.63373566]
[149.21304321 117.88018799]
[163.69793701 113.98301697]
[174.31535339 124.57878876]
[170.44775391 139.07160950]
[155.96276855 142.96846008]
[145.34576416 132.37307739]
[143.41210938 139.61953735]
[151.52172852 152.23834229]
[159.63133240 164.85713196]
[167.74095154 177.47593689]
[175.85055542 190.09474182]
[191.15824890 194.89622498]
[196.81387329 209.90933228]
[188.47892761 223.61729431]
[172.54727173 225.50453186]
[161.24029541 214.12332153]
[163.23175049 198.20436096]
[155.12214661 185.58555603]
[147.01252747 172.96675110]
[138.90292358 160.34794617]
[130.79330444 147.72914124]
[115.88687897 149.40200806]
[110.77603149 163.50445557]
[105.66518402 177.60690308]
[100.55432892 191.70936584]
[95.44348145 205.81181335]
[90.33263397 219.91427612]
[85.22178650 234.01672363]
[91.67112732 248.19570923]
[86.28710938 262.42480469]
[72.72986603 268.48590088]
[67.61901855 282.58834839]
[62.50816345 296.69079590]
[66.83363342 301.89633179]
[69.33452606 308.13006592]
[69.79891968 314.77917480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 30]
[5 29]
[6 28]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[32 249]
[33 248]
[34 247]
[37 244]
[38 243]
[39 242]
[40 241]
[41 240]
[42 239]
[43 238]
[46 54]
[47 53]
[56 123]
[57 122]
[58 121]
[60 119]
[61 118]
[62 117]
[63 116]
[64 115]
[65 114]
[67 111]
[68 110]
[69 109]
[70 108]
[71 107]
[72 106]
[76 105]
[77 104]
[78 103]
[79 102]
[85 98]
[86 97]
[87 96]
[88 95]
[89 94]
[125 216]
[126 215]
[127 214]
[128 213]
[129 211]
[130 210]
[131 209]
[132 208]
[133 207]
[135 203]
[136 202]
[137 201]
[138 200]
[139 199]
[141 198]
[142 197]
[143 196]
[146 194]
[147 193]
[152 188]
[153 187]
[154 186]
[155 185]
[156 184]
[157 183]
[163 182]
[164 181]
[167 178]
[168 177]
[169 176]
[170 175]
[223 237]
[224 236]
[225 235]
[226 234]
[227 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
