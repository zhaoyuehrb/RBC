%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGUGCGUCCAGGCUGGCGCCGCGCUGCGCCCCCUCUGCGCCGGCCUCUGCGGCUGCGCGCUGGCGGGGCUGAGGCCGAGGGGUGGGGGUCGCGCCGGGGGCCGGCGGAGCUCCUGUGGUGGUAGCAGCGGUAGCGGGAGACGGAGCGAGUCCAGCGGCCGCGGGCAGACCCGGAGGGAACGGAGGAAGCGGUC\
) } def
/len { sequence length } bind def

/coor [
[99.68225861 268.46386719]
[99.19902039 253.47166443]
[98.71578217 238.47944641]
[98.23254395 223.48724365]
[88.18124390 209.10881042]
[96.98690033 192.94357300]
[88.64373779 180.60498047]
[95.70526886 166.44709778]
[94.98056793 151.46461487]
[94.25586700 136.48213196]
[76.92143250 128.83264160]
[65.66140747 113.59420776]
[63.43951797 94.77770996]
[49.33040237 89.68527222]
[35.22129059 84.59283447]
[21.11217499 79.50039673]
[7.00306082 74.40796661]
[-7.10605335 69.31552887]
[-16.25409889 69.34428406]
[-21.40032578 64.02573395]
[-35.42556763 58.70666122]
[-51.07263947 61.04755402]
[-60.22916031 49.29990005]
[-74.25440216 43.98082733]
[-89.90147400 46.32172012]
[-99.05799866 34.57406616]
[-113.08323669 29.25499153]
[-127.10848236 23.93591881]
[-141.13372803 18.61684608]
[-155.20135498 13.41092205]
[-169.31047058 8.31848621]
[-183.41958618 3.22605014]
[-197.52870178 -1.86638570]
[-211.63781738 -6.95882177]
[-227.24514771 -4.36615753]
[-236.58973694 -15.96477509]
[-250.69885254 -21.05721092]
[-266.30618286 -18.46454811]
[-275.65075684 -30.06316566]
[-287.64489746 -25.29570580]
[-299.29687500 -29.83757019]
[-304.55148315 -40.74253464]
[-318.57672119 -46.06160736]
[-332.60195923 -51.38068008]
[-346.62719727 -56.69975281]
[-360.65246582 -62.01882935]
[-374.67770386 -67.33789825]
[-388.70294189 -72.65697479]
[-393.88101196 -71.81226349]
[-398.40841675 -72.93430328]
[-401.64288330 -75.44294739]
[-403.26696777 -78.58675385]
[-417.01882935 -84.57722473]
[-430.77072144 -90.56769562]
[-444.52261353 -96.55816650]
[-460.26449585 -94.97596741]
[-468.84277344 -107.15228271]
[-482.59463501 -113.14275360]
[-496.34652710 -119.13322449]
[-512.57171631 -116.75108337]
[-522.53375244 -129.77760315]
[-515.98449707 -144.81221008]
[-499.66131592 -146.38859558]
[-490.35604858 -132.88510132]
[-476.60418701 -126.89463806]
[-462.85229492 -120.90416718]
[-448.09402466 -122.91484070]
[-438.53213501 -110.31004333]
[-424.78024292 -104.31958008]
[-411.02838135 -98.32910919]
[-397.27648926 -92.33863831]
[-383.38388062 -86.68222046]
[-369.35861206 -81.36314392]
[-355.33337402 -76.04407501]
[-341.30813599 -70.72499847]
[-327.28289795 -65.40592194]
[-313.25765991 -60.08685303]
[-299.23242188 -54.76777649]
[-282.09442139 -58.51707077]
[-270.55831909 -44.17227936]
[-255.96017456 -47.12918854]
[-245.60641479 -35.16632462]
[-231.49729919 -30.07388878]
[-216.89915466 -33.03079987]
[-206.54537964 -21.06793594]
[-192.43626404 -15.97550011]
[-178.32714844 -10.88306427]
[-164.21803284 -5.79062796]
[-150.10893250 -0.69819212]
[-142.74018860 -1.38540268]
[-135.81465149 4.59160185]
[-121.78940582 9.91067505]
[-107.76416779 15.22974873]
[-93.73892212 20.54882240]
[-79.09503174 17.82747269]
[-68.93533325 29.95558357]
[-54.91008759 35.27465820]
[-40.26619720 32.55330658]
[-30.10649681 44.68141937]
[-16.08125305 50.00049210]
[-2.01361728 55.20641327]
[12.09549713 60.29885101]
[26.20461082 65.39128876]
[40.31372452 70.48371887]
[54.42284012 75.57615662]
[68.53195190 80.66859436]
[78.27401733 70.13491821]
[91.29528809 64.10892487]
[105.63040924 63.50014114]
[119.11569977 68.40045166]
[129.71575928 78.07023621]
[135.83068848 91.04998779]
[150.81852722 90.44599915]
[165.80636597 89.84201050]
[180.79420471 89.23801422]
[194.27162170 80.95131683]
[207.30012512 88.16986847]
[222.28796387 87.56587982]
[237.27580261 86.96188354]
[245.73764038 83.48557281]
[252.50955200 86.47086334]
[261.36831665 73.86814880]
[275.78085327 68.95569611]
[290.15243530 73.41904449]
[299.03375244 85.34633636]
[314.02935791 84.98387909]
[329.51431274 75.03043365]
[344.58303833 84.01382446]
[359.57086182 83.40983582]
[374.55868530 82.80584717]
[389.54653931 82.20185852]
[404.53436279 81.59786987]
[418.01181030 73.31116486]
[431.04031372 80.52971649]
[446.02813721 79.92572784]
[459.50555420 71.63902283]
[472.53405762 78.85757446]
[487.52191162 78.25358582]
[502.50973511 77.64959717]
[513.19512939 66.31559753]
[528.40356445 65.91657257]
[539.14294434 76.17333221]
[554.13079834 75.56934357]
[569.71362305 68.89012909]
[580.44555664 82.01497650]
[570.80450439 95.96083832]
[554.73474121 90.55717468]
[539.74694824 91.16116333]
[529.86767578 102.24882507]
[514.67651367 103.07486725]
[503.11373901 92.63743591]
[488.12588501 93.24142456]
[473.13806152 93.84541321]
[460.73266602 102.08891296]
[446.63211060 94.91356659]
[431.64428711 95.51755524]
[419.23889160 103.76105499]
[405.13836670 96.58570862]
[390.15051270 97.18969727]
[375.16268921 97.79368591]
[360.17486572 98.39767456]
[345.18701172 99.00166321]
[336.74960327 107.68145752]
[324.25900269 108.29976654]
[314.39181519 99.97949982]
[299.39620972 100.34195709]
[291.10150146 112.68441010]
[276.96234131 117.83687592]
[262.32928467 113.62648773]
[252.87199402 101.46648407]
[237.87979126 101.94972229]
[222.89195251 102.55371094]
[207.90411377 103.15769958]
[195.49871826 111.40119934]
[181.39819336 104.22585297]
[166.41035461 104.82984161]
[151.42251587 105.43383026]
[136.43467712 106.03781891]
[133.21209717 116.15232086]
[127.24555969 124.93232727]
[119.02799225 131.65243530]
[109.23834991 135.75743103]
[109.96305084 150.73991394]
[110.68775177 165.72239685]
[119.08274841 179.13264465]
[111.96938324 192.21887207]
[120.98252106 201.45744324]
[121.27058411 213.96002197]
[113.22475433 223.00399780]
[113.70799255 237.99621582]
[114.19123077 252.98843384]
[114.67446899 267.98065186]
[121.22794342 283.61676025]
[108.01706696 294.24264526]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 190]
[4 189]
[6 186]
[8 184]
[9 183]
[10 182]
[13 106]
[14 105]
[15 104]
[16 103]
[17 102]
[18 101]
[20 100]
[21 99]
[23 97]
[24 96]
[26 94]
[27 93]
[28 92]
[29 91]
[30 89]
[31 88]
[32 87]
[33 86]
[34 85]
[36 83]
[37 82]
[39 80]
[42 78]
[43 77]
[44 76]
[45 75]
[46 74]
[47 73]
[48 72]
[52 71]
[53 70]
[54 69]
[55 68]
[57 66]
[58 65]
[59 64]
[112 178]
[113 177]
[114 176]
[115 175]
[117 173]
[118 172]
[119 171]
[121 170]
[125 166]
[126 165]
[128 162]
[129 161]
[130 160]
[131 159]
[132 158]
[134 156]
[135 155]
[137 153]
[138 152]
[139 151]
[142 148]
[143 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
