%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCGGUCGCUUGUGCGUUCCGCUCCGGCCGCCCUUUGCGCUUGGAUCCACUUCCCCAUCUGUAACGAGGUGUUGAGACGAGGCGGAGUUGACCUGGAAACCUCUCCUUGGCCACUGUCCUUUCUAAGGAACUCAUUUCCAGAGUCCACCAGCACAGAACUGGUGGGGGAGCCUACUAGGAGCAGAGAAA\
) } def
/len { sequence length } bind def

/coor [
[68.63915253 359.48709106]
[68.54765320 343.68304443]
[79.71734619 332.50210571]
[79.47192383 317.50411987]
[79.22649384 302.50613403]
[64.59096527 299.21960449]
[57.95663452 312.67269897]
[59.59328461 331.00653076]
[44.64797211 340.19152832]
[38.23464584 353.75137329]
[31.82131767 367.31121826]
[33.70001984 383.60238647]
[20.37134361 393.15637207]
[5.54669046 386.14480591]
[4.47639132 369.78063965]
[18.26147842 360.89788818]
[24.67480469 347.33804321]
[31.08813095 333.77819824]
[27.30906487 322.27648926]
[32.55419540 310.92175293]
[44.50354385 306.03836060]
[51.13787460 292.58526611]
[56.30659485 278.50393677]
[59.95129776 263.95346069]
[63.59600067 249.40299988]
[67.24070740 234.85252380]
[70.88540649 220.30206299]
[73.93202209 205.61471558]
[76.37545776 190.81506348]
[78.81888580 176.01541138]
[81.14115906 161.19625854]
[75.35507965 147.47145081]
[85.03354645 134.95594788]
[87.23450470 120.11829376]
[80.27201080 106.83206940]
[66.81892395 100.19773865]
[53.36582947 93.56340790]
[39.91273880 86.92907715]
[26.45964813 80.29474640]
[13.00655746 73.66041565]
[3.90961671 72.66806793]
[-0.61103457 66.80589294]
[-13.95377541 59.95233917]
[-27.29651642 53.09878159]
[-40.63925934 46.24522400]
[-55.52011490 50.84933472]
[-68.95391846 43.70877838]
[-73.25153351 29.49378395]
[-86.59427643 22.64022446]
[-100.04736328 16.00589371]
[-113.60720062 9.59256840]
[-127.16704559 3.17924190]
[-140.72688293 -3.23408461]
[-154.28672791 -9.64741135]
[-167.84655762 -16.06073761]
[-179.68025208 -6.42089415]
[-194.52659607 -2.87849236]
[-209.43786621 -6.13687801]
[-221.45338440 -15.54909611]
[-228.18748474 -29.24634361]
[-228.30311584 -44.50902557]
[-221.77728271 -58.30671692]
[-209.90573120 -67.89988708]
[-195.04554749 -71.38379669]
[-180.14723206 -68.06671906]
[-168.16885376 -58.60725403]
[-161.48875427 -44.88359451]
[-161.43322754 -29.62057686]
[-147.87339783 -23.20725060]
[-134.31355286 -16.79392433]
[-120.75371552 -10.38059711]
[-107.19387817 -3.96727109]
[-93.63404083 2.44605517]
[-88.90152740 1.70286703]
[-83.65359497 3.93600631]
[-79.74071503 9.29748344]
[-66.39797211 16.15104103]
[-52.34009933 11.36442280]
[-38.71102905 18.12483406]
[-33.78569794 32.90248108]
[-20.44295883 39.75603867]
[-7.10021734 46.60959625]
[6.24252367 53.46315384]
[19.64088821 60.20732498]
[33.09397888 66.84165955]
[46.54706955 73.47598267]
[60.00016022 80.11031342]
[73.45325470 86.74464417]
[86.90634155 93.37897491]
[89.35914612 85.35786438]
[96.69235992 78.72755432]
[107.84866333 76.31048584]
[118.28029633 65.53176117]
[128.71194458 54.75303650]
[139.05505371 43.88932800]
[149.30892944 32.94136810]
[159.56282043 21.99340820]
[169.81669617 11.04544640]
[180.07058716 0.09748512]
[190.32446289 -10.85047626]
[200.57835388 -21.79843712]
[195.61561584 -37.56267166]
[199.25453186 -53.58781052]
[210.41070557 -65.52561188]
[225.97335815 -70.18584442]
[241.67221069 -66.38852692]
[251.74559021 -77.50279236]
[261.81896973 -88.61705780]
[271.89236450 -99.73132324]
[281.96572876 -110.84559631]
[292.03912354 -121.95986176]
[302.11251831 -133.07412720]
[296.32290649 -147.19656372]
[297.24270630 -162.43193054]
[304.68930054 -175.75526428]
[317.18414307 -184.52117920]
[332.24639893 -186.98921204]
[346.88543701 -182.66932678]
[358.19467163 -172.41925049]
[363.92861938 -158.27412415]
[362.94882202 -143.04249573]
[355.44982910 -129.74859619]
[342.92053223 -121.03194427]
[327.84869385 -118.62324524]
[313.22677612 -123.00074005]
[303.15338135 -111.88647461]
[293.08001709 -100.77220917]
[283.00662231 -89.65794373]
[272.93322754 -78.54367828]
[262.85986328 -67.42940521]
[252.78646851 -56.31513977]
[257.81396484 -43.60781479]
[256.86795044 -29.90852547]
[250.07629395 -17.89763451]
[238.71624756 -9.94978714]
[224.97447205 -7.66450500]
[211.52632141 -11.54455280]
[201.27243042 -0.59659147]
[191.01853943 10.35136986]
[180.76466370 21.29933167]
[170.51077271 32.24729156]
[160.25689697 43.19525146]
[150.00300598 54.14321518]
[147.72152710 61.18566513]
[139.49066162 65.18467712]
[129.05902100 75.96340179]
[118.62738037 86.74212646]
[121.43328094 101.47734833]
[135.09623718 107.66795349]
[148.75920105 113.85855865]
[162.42214966 120.04917145]
[176.08511353 126.23977661]
[189.74806213 132.43037415]
[203.76840210 125.50476837]
[218.94796753 129.26173401]
[228.11943054 141.92736816]
[226.95231628 157.52134705]
[215.99768066 168.68064880]
[200.42799377 170.13621521]
[187.59475708 161.20075989]
[183.55746460 146.09333801]
[169.89450073 139.90272522]
[156.23155212 133.71212769]
[142.56858826 127.52152252]
[128.90563965 121.33091736]
[115.24267578 115.14031219]
[102.07215118 122.31925201]
[99.87119293 137.15689087]
[105.49983978 151.94300842]
[95.97880554 163.39721680]
[97.81681061 172.36164856]
[93.61853790 178.45884705]
[91.17510223 193.25849915]
[88.73167419 208.05813599]
[102.29870605 201.66004944]
[115.83309174 208.12692261]
[119.37903595 222.70176697]
[110.32817078 234.66345215]
[95.33824158 235.21302795]
[85.43587494 223.94676208]
[81.79117584 238.49722290]
[78.14646912 253.04769897]
[74.50177002 267.59817505]
[70.85706329 282.14862061]
[84.58015442 286.33163452]
[94.22448730 302.26071167]
[94.46991730 317.25869751]
[94.71533966 332.25668335]
[106.24488831 343.06619263]
[106.67052460 358.86474609]
[95.73973846 370.27935791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 188]
[4 187]
[5 186]
[6 22]
[7 21]
[9 18]
[10 17]
[11 16]
[23 184]
[24 183]
[25 182]
[26 181]
[27 180]
[28 174]
[29 173]
[30 172]
[31 170]
[33 168]
[34 167]
[35 89]
[36 88]
[37 87]
[38 86]
[39 85]
[40 84]
[42 83]
[43 82]
[44 81]
[45 80]
[48 77]
[49 76]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[55 68]
[92 147]
[93 146]
[94 145]
[95 143]
[96 142]
[97 141]
[98 140]
[99 139]
[100 138]
[101 137]
[106 131]
[107 130]
[108 129]
[109 128]
[110 127]
[111 126]
[112 125]
[148 166]
[149 165]
[150 164]
[151 163]
[152 162]
[153 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
