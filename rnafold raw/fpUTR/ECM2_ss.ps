%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGGCAGUUAUUUUAGAUUUUACUAAGAAGUUCAGCAAAUACUUUUCAACAUUCCCUUCUGUCCUUUCUUUGUUUUUAAAGAAAGCUCUGAUUUUGUUUCAUUUUCAGCUGGAGACUUAAAUGACACCAAGCAAAGCCUACUUAGUUUAGAUCUCCAGAAAUUGGCUGGUGGAAAAAAAUCAAAC\
) } def
/len { sequence length } bind def

/coor [
[85.10043335 129.50630188]
[72.59368134 137.78768921]
[60.08693314 146.06906128]
[47.58018112 154.35043335]
[35.07343292 162.63182068]
[23.69996452 172.41160583]
[13.63819313 183.53639221]
[10.11963272 198.96138000]
[-4.15601158 203.21052551]
[-0.44941038 219.70404053]
[-7.22999716 235.00801086]
[-21.64823914 243.17929077]
[-37.93188858 241.17393494]
[-47.80635834 252.46530151]
[-57.68083191 263.75665283]
[-67.55530548 275.04800415]
[-77.42977905 286.33938599]
[-87.30425262 297.63073730]
[-85.99870300 313.38101196]
[-96.27627563 325.38714600]
[-112.03946686 326.52609253]
[-123.93626404 316.12216187]
[-124.90850067 300.34780884]
[-114.37936401 288.56167603]
[-98.59561157 287.75625610]
[-88.72113800 276.46490479]
[-78.84666443 265.17355347]
[-68.97219086 253.88218689]
[-59.09771729 242.59082031]
[-49.22324753 231.29946899]
[-53.38422012 218.60214233]
[-50.70134354 205.40197754]
[-41.77146149 195.17315674]
[-28.84972191 190.66169739]
[-15.28079319 193.14874268]
[-12.48191833 178.51948547]
[2.51341152 173.47460938]
[12.57518196 162.34983826]
[-1.75576806 166.77970886]
[-16.72470856 165.81491089]
[-30.36840439 159.58197021]
[-40.89743423 148.89836121]
[-46.93087387 135.16528320]
[-47.67741776 120.18386841]
[-43.03915024 105.91900635]
[-33.62440109 94.24156952]
[-20.66794968 86.68310547]
[-5.86908245 84.23493958]
[8.83127213 87.21815491]
[21.50510788 95.24149323]
[30.49020004 107.25265503]
[34.60811996 121.67634583]
[33.31879044 136.62083435]
[26.79205513 150.12506104]
[39.29880524 141.84368896]
[51.80555344 133.56231689]
[64.31230164 125.28093719]
[76.81905365 116.99955750]
[78.31295013 109.64984894]
[63.61357117 106.66182709]
[66.60181427 91.96249390]
[81.30073547 94.95042419]
[82.79463196 87.60070801]
[67.56443024 84.33288574]
[59.34410095 71.53129578]
[62.55332565 57.03176117]
[54.27194977 44.52500916]
[45.99057007 32.01826096]
[37.70919418 19.51151085]
[29.42781639 7.00476074]
[21.14644051 -5.50198889]
[12.86506271 -18.00873947]
[4.58368587 -30.51548958]
[-3.69769120 -43.02223969]
[-18.60856056 -49.84851456]
[-19.88267708 -66.19808960]
[-6.20934200 -75.25192261]
[8.34549141 -67.69621277]
[8.80905819 -51.30361557]
[17.09043503 -38.79686737]
[25.37181282 -26.29011536]
[33.65319061 -13.78336620]
[41.93456650 -1.27661622]
[50.21594238 11.23013401]
[58.49732208 23.73688316]
[66.77870178 36.24363327]
[75.06007385 48.75038528]
[89.66191864 51.45627213]
[98.23857117 64.02192688]
[95.30138397 79.31932831]
[108.90774536 85.63335419]
[123.80524445 83.88273621]
[138.70274353 82.13212585]
[153.60023499 80.38150787]
[168.49772644 78.63089752]
[183.39521790 76.88027954]
[198.29270935 75.12966919]
[211.09558105 65.83465576]
[224.63888550 72.03371429]
[239.53637695 70.28309631]
[254.43386841 68.53248596]
[269.33135986 66.78186798]
[284.22885132 65.03125763]
[299.12634277 63.28063965]
[314.02383423 61.53002548]
[328.51559448 50.18400574]
[344.35269165 57.72433472]
[359.21884155 55.72502899]
[374.08502197 53.72572708]
[388.95117188 51.72642136]
[403.76254272 49.35514832]
[418.50985718 46.61340332]
[433.25714111 43.87165451]
[448.00445557 41.12990570]
[462.75173950 38.38815689]
[477.49905396 35.64641190]
[492.24633789 32.90466309]
[504.39978027 22.77527237]
[518.32690430 28.05589294]
[533.07421875 25.31414413]
[547.82147217 22.57239723]
[562.56878662 19.83064842]
[577.31610107 17.08890152]
[592.06341553 14.34715271]
[594.09637451 0.15357752]
[600.40661621 -12.69773483]
[610.36450195 -22.95454407]
[622.98565674 -29.62199211]
[637.02832031 -32.05910110]
[651.11553955 -30.04034996]
[663.87005615 -23.77650452]
[674.04919434 -13.89267063]
[680.66564941 -1.36595094]
[695.45666504 -3.86089134]
[710.06951904 -12.45751953]
[722.37536621 -0.79556394]
[714.57580566 14.25776577]
[697.95159912 10.93016243]
[683.16058350 13.42510319]
[680.51037598 28.93569756]
[672.69903564 42.62619019]
[660.65380859 52.83432388]
[645.81738281 58.31343460]
[629.97491455 58.38469315]
[615.03930664 53.02113724]
[602.82031250 42.85315704]
[594.80511475 29.09445190]
[580.05786133 31.83619881]
[565.31054688 34.57794571]
[550.56323242 37.31969452]
[535.81591797 40.06144333]
[521.06866455 42.80319214]
[509.97003174 52.73647308]
[494.98809814 47.65196228]
[480.24078369 50.39371109]
[465.49349976 53.13545609]
[450.74621582 55.87720490]
[435.99890137 58.61895370]
[421.25161743 61.36070251]
[406.50430298 64.10244751]
[404.21246338 66.80662537]
[400.48846436 68.52586365]
[395.81387329 68.59536743]
[390.95046997 66.59258270]
[376.08432007 68.59188843]
[361.21813965 70.59119415]
[346.35198975 72.59049988]
[338.75744629 82.02190399]
[326.37426758 83.79926300]
[315.77447510 76.42752075]
[300.87695312 78.17813873]
[285.97946167 79.92874908]
[271.08197021 81.67936707]
[256.18447876 83.42997742]
[241.28698730 85.18059540]
[226.38949585 86.93120575]
[214.65219116 96.10100555]
[200.04333496 90.02716064]
[185.14582825 91.77777863]
[170.24833679 93.52838898]
[155.35084534 95.27900696]
[140.45335388 97.02961731]
[125.55585480 98.78023529]
[110.65836334 100.53084564]
[113.65664673 106.55473328]
[113.02239227 114.68170929]
[107.76081848 122.81781006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 58]
[2 57]
[3 56]
[4 55]
[5 54]
[6 38]
[7 37]
[9 35]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[18 25]
[63 90]
[66 87]
[67 86]
[68 85]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[74 79]
[91 184]
[92 183]
[93 182]
[94 181]
[95 180]
[96 179]
[97 178]
[99 176]
[100 175]
[101 174]
[102 173]
[103 172]
[104 171]
[105 170]
[107 167]
[108 166]
[109 165]
[110 164]
[111 160]
[112 159]
[113 158]
[114 157]
[115 156]
[116 155]
[117 154]
[119 152]
[120 151]
[121 150]
[122 149]
[123 148]
[124 147]
[133 139]
[134 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
