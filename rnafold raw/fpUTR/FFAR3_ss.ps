%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUUUUAGCAUGCUGACCAGCCCUGGCAACGGAGCUCAAGGCAUCUAUGUGCCACUGCUCAACAGUGAGUGACGUCAUGGGCACGGCCAGGUCUUUAUCAGUUCUGCCGGAUAAAUAGCCAACUGCACUAGGUCUGGAGAGACAGCAAGGUGCUGUGCGGCAGAGCAUUUGGGGUCUCAAAGAAGCAGUGGCCACCACC\
) } def
/len { sequence length } bind def

/coor [
[142.42320251 231.32133484]
[136.73687744 217.44093323]
[131.05055237 203.56053162]
[125.36422729 189.68011475]
[111.73561859 188.74000549]
[99.78504181 181.98582458]
[91.87390900 170.68667603]
[89.59359741 157.01602173]
[93.44558716 143.63366699]
[102.73259735 133.16827393]
[97.26282501 119.20110321]
[91.82238770 114.04808044]
[89.62403107 108.02069092]
[90.39376831 102.68444061]
[75.91498566 98.76461029]
[61.43621445 94.84477997]
[46.95743942 90.92495728]
[32.47866440 87.00512695]
[17.47231483 95.98887634]
[0.93612385 91.43322754]
[-7.03191137 76.62649536]
[-21.56989670 72.93231201]
[-36.85054398 77.03260040]
[-47.28026962 66.39916229]
[-61.81825256 62.70497513]
[-76.35623932 59.01079178]
[-90.89422607 55.31660843]
[-105.43220520 51.62242508]
[-119.97019196 47.92824173]
[-126.43805695 49.35411072]
[-131.84123230 47.56346893]
[-134.89930725 43.88648987]
[-149.31536865 39.74196625]
[-160.96260071 45.29419708]
[-172.88768005 41.54025650]
[-178.85769653 31.01432228]
[-193.20756531 26.64610100]
[-207.55743408 22.27788162]
[-221.90730286 17.90966034]
[-236.25717163 13.54143906]
[-251.71241760 16.92457390]
[-261.63485718 5.81625748]
[-275.98471069 1.44803667]
[-290.33459473 -2.92018414]
[-305.78982544 0.46295080]
[-315.71228027 -10.64536572]
[-330.06213379 -15.01358700]
[-325.45471191 -0.73872483]
[-333.60888672 11.85133648]
[-348.51965332 13.48491096]
[-359.20632935 2.95898700]
[-357.79891968 -11.97484016]
[-345.33291626 -20.31900978]
[-359.30007935 -25.78878212]
[-373.30932617 -31.14977837]
[-387.35986328 -36.40167618]
[-401.41040039 -41.65357208]
[-415.46093750 -46.90546799]
[-429.51147461 -52.15736389]
[-444.64709473 -46.83829498]
[-458.16558838 -55.47717285]
[-459.69671631 -71.44699860]
[-448.06591797 -82.49707794]
[-432.19537354 -80.15074921]
[-424.25958252 -66.20790100]
[-410.20904541 -60.95600510]
[-396.15850830 -55.70410919]
[-382.10797119 -50.45221329]
[-368.05743408 -45.20031357]
[-360.68597412 -45.80351639]
[-353.83029175 -39.75594330]
[-339.86312866 -34.28617096]
[-325.69390869 -29.36345291]
[-311.34405518 -24.99523163]
[-296.91519165 -28.69081116]
[-285.96636963 -17.27005005]
[-271.61648560 -12.90182877]
[-257.26663208 -8.53360844]
[-242.83776855 -12.22918797]
[-231.88894653 -0.80842644]
[-217.53907776 3.55979419]
[-203.18920898 7.92801476]
[-188.83935547 12.29623604]
[-174.48948669 16.66445541]
[-157.63764954 11.77830887]
[-145.17085266 25.32590103]
[-130.75479126 29.47042656]
[-116.27600861 33.39025497]
[-101.73802185 37.08443832]
[-87.20004272 40.77862167]
[-72.66205597 44.47280884]
[-58.12406921 48.16699219]
[-43.58608627 51.86117554]
[-29.34529114 47.49665070]
[-17.87571335 58.39432526]
[-3.33772779 62.08850861]
[6.71019602 54.01527023]
[19.76844025 53.19333649]
[31.08107567 60.14666367]
[36.39849091 72.52635193]
[50.87726593 76.44618225]
[65.35604095 80.36600494]
[79.83481598 84.28583527]
[94.31359100 88.20566559]
[109.21166992 86.45998383]
[122.39206696 79.29917908]
[135.57246399 72.13838196]
[148.75286865 64.97758484]
[161.93327332 57.81678772]
[175.11367798 50.65599060]
[188.29406738 43.49519348]
[196.72651672 30.10846138]
[211.60356140 30.83134651]
[224.78396606 23.67054939]
[237.96437073 16.50975037]
[223.04937744 14.91503143]
[210.53057861 6.65188551]
[203.20156860 -6.43573332]
[202.69787598 -21.42727470]
[209.13186646 -34.97731781]
[221.06781006 -44.06211853]
[235.84211731 -46.65436935]
[250.15786743 -42.17559814]
[260.82043457 -31.62526321]
[265.45043945 -17.35770988]
[263.01464844 -2.55679631]
[254.05676270 9.47451782]
[268.26382446 4.66213131]
[282.47091675 -0.15025540]
[296.67797852 -4.96264172]
[310.88507080 -9.77502823]
[317.93441772 -23.66547012]
[332.41094971 -28.34352875]
[345.60992432 -21.53744507]
[352.74020386 -27.25868797]
[360.07553101 -26.31233215]
[374.35571289 -30.90319061]
[388.63592529 -35.49404907]
[395.63079834 -49.66609955]
[410.62472534 -54.66192245]
[424.72201538 -47.51758194]
[429.55905151 -32.47169113]
[422.26605225 -18.45071030]
[407.16986084 -13.77303696]
[393.22677612 -21.21385384]
[378.94656372 -16.62299538]
[364.66638184 -12.03213596]
[350.42230225 -7.33037090]
[344.07675171 6.09606981]
[329.73730469 11.17889977]
[315.69744873 4.43204498]
[301.49035645 9.24443150]
[287.28329468 14.05681801]
[273.07623291 18.86920547]
[258.86914062 23.68159103]
[245.12516785 29.69015121]
[231.94476318 36.85094833]
[218.76435852 44.01174927]
[211.27467346 56.88629150]
[195.45486450 56.67559433]
[182.27447510 63.83639145]
[169.09407043 70.99719238]
[155.91366577 78.15798950]
[142.73326111 85.31878662]
[129.55287170 92.47958374]
[116.37246704 99.64038086]
[111.22998810 113.73133087]
[116.69976044 127.69849396]
[133.06924438 130.00468445]
[145.96946716 140.19132996]
[151.93983459 155.40518188]
[149.43969727 171.46121216]
[139.24462891 183.99378967]
[144.93095398 197.87420654]
[150.61729431 211.75460815]
[156.30361938 225.63500977]
[159.36735535 210.95123291]
[167.96910095 198.66262817]
[180.71704102 190.75755310]
[195.54847717 188.51512146]
[210.06359863 192.29814148]
[221.91377258 201.49452209]
[229.18156433 214.61622620]
[230.69100952 229.54008484]
[226.19787598 243.85133362]
[216.42916870 255.23431396]
[202.96553040 261.84722900]
[187.98545837 262.62002563]
[173.91279602 257.42767334]
[163.02313232 247.10821533]
[166.26339722 261.75405884]
[169.50366211 276.39990234]
[172.74392700 291.04574585]
[182.06904602 305.20477295]
[171.04478455 318.08508301]
[155.61604309 311.05728149]
[158.09808350 294.28601074]
[154.85781860 279.64016724]
[151.61755371 264.99432373]
[148.37728882 250.34848022]
[143.11198425 246.38700867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[4 173]
[10 168]
[11 167]
[14 104]
[15 103]
[16 102]
[17 101]
[18 100]
[21 96]
[22 95]
[24 93]
[25 92]
[26 91]
[27 90]
[28 89]
[29 88]
[32 87]
[33 86]
[36 84]
[37 83]
[38 82]
[39 81]
[40 80]
[42 78]
[43 77]
[44 76]
[46 74]
[47 73]
[53 72]
[54 71]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[105 166]
[106 165]
[107 164]
[108 163]
[109 162]
[110 161]
[111 160]
[113 158]
[114 157]
[115 156]
[127 155]
[128 154]
[129 153]
[130 152]
[131 151]
[134 148]
[136 147]
[137 146]
[138 145]
[190 200]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
