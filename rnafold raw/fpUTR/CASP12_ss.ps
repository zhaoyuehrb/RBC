%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUACAUGAUUUCAUUCUGUUCACUUUGUUAUGUCAAAAAGAAGAAAACACCUUCUGCUUCCUAUUUUCCAAAGGAAAGCAGUUAUACACGAGAUCAGAGUCUAAUUUUAUCUUGGCAAAGAAAAAGAGAAUUUGAGGACUGGGAAUUUUCCAUUCAGGGUAAUAUCAACAAGCUGGUCCACUGAGAGGAGAGCAAGCCUGUUGAAAUUGUUUUUGCUUUCACAGCUUUUUCCUGUCCGGGGAGCAGGAGAAGC\
C\
) } def
/len { sequence length } bind def

/coor [
[-29.45932198 378.08276367]
[-34.14686203 392.33151245]
[-38.83440018 406.58026123]
[-35.79719925 422.10720825]
[-47.12429810 431.77914429]
[-51.81183624 446.02789307]
[-56.49937820 460.27664185]
[-56.20638275 469.37658691]
[-61.33228302 474.67031860]
[-66.19364166 488.86068726]
[-59.01910019 502.94265747]
[-63.98276520 517.94726562]
[-78.13978577 524.97247314]
[-93.09105682 519.85046387]
[-99.96624756 505.61996460]
[-94.68643188 490.72369385]
[-80.38403320 483.99932861]
[-75.52267456 469.80895996]
[-70.74813080 455.58911133]
[-66.06059265 441.34036255]
[-61.37305069 427.09161377]
[-64.74553680 412.58383179]
[-53.08315277 401.89273071]
[-48.39561462 387.64398193]
[-43.70807648 373.39523315]
[-56.44711685 365.47583008]
[-67.15051270 375.98474121]
[-77.85391235 386.49365234]
[-88.55730438 397.00256348]
[-88.45156097 412.80651855]
[-99.61116791 423.99752808]
[-115.41533661 423.93618774]
[-126.48773193 412.65887451]
[-126.25930023 396.85623169]
[-114.86556244 385.90368652]
[-99.06622314 386.29919434]
[-88.36282349 375.79025269]
[-77.65943146 365.28134155]
[-66.95603180 354.77243042]
[-72.38275146 345.11935425]
[-75.88671112 334.66799927]
[-77.36162567 323.79528809]
[-76.77402496 312.88958740]
[-74.16377258 302.33691406]
[-69.64197540 292.50714111]
[-63.38640594 283.74118042]
[-55.63455582 276.33905029]
[-46.67467499 270.54965210]
[-36.83506775 266.56246948]
[-26.47208786 264.50134277]
[-15.95722389 264.42074585]
[-5.66379499 266.30453491]
[4.04630804 270.06707764]
[12.19794464 257.47537231]
[20.34958076 244.88368225]
[28.50121689 232.29199219]
[36.65285492 219.70028687]
[44.80448914 207.10859680]
[52.95612717 194.51689148]
[61.10776138 181.92520142]
[69.25939941 169.33349609]
[77.41103363 156.74180603]
[85.56266785 144.15011597]
[93.71430969 131.55841064]
[87.99497986 117.69084930]
[82.27616882 103.82451630]
[67.61808014 100.64010620]
[52.95999146 97.45570374]
[38.30190277 94.27129364]
[23.64381599 91.08689117]
[8.98572731 87.90248108]
[-7.77596664 90.44844818]
[-14.86253738 75.04660034]
[-2.02435875 63.97332382]
[12.17013454 73.24439240]
[26.82822227 76.42880249]
[41.48630905 79.61320496]
[56.14439774 82.79761505]
[70.80249023 85.98201752]
[85.46057892 89.16642761]
[90.54905701 83.65667725]
[79.21205902 73.83463287]
[67.87506104 64.01259613]
[56.53806686 54.19055176]
[45.20106888 44.36850739]
[33.86407471 34.54646683]
[21.22316933 26.47134781]
[23.65755463 11.67020702]
[38.21887970 8.06911659]
[47.27149200 20.02905846]
[57.96239471 30.55068207]
[68.65329742 41.07230377]
[79.34420776 51.59392548]
[90.03511047 62.11555099]
[100.72601318 72.63716888]
[105.81449890 67.12741852]
[101.47667694 52.76833344]
[97.13886261 38.40924835]
[92.80104828 24.05016327]
[88.46322632 9.69107819]
[77.06568146 -1.28191268]
[80.79181671 -15.70291138]
[76.45399475 -30.06199646]
[72.11618042 -44.42108154]
[61.15166092 -51.17765045]
[57.82393646 -63.20446014]
[63.38795471 -73.92485809]
[59.22598648 -88.33589172]
[55.06401443 -102.74693298]
[50.90204239 -117.15796661]
[45.52950287 -124.50851440]
[46.77843475 -131.77064514]
[42.79293060 -146.23147583]
[38.80743027 -160.69232178]
[34.82192612 -175.15315247]
[22.77007675 -186.27452087]
[26.63901329 -202.21075439]
[42.44870758 -206.56800842]
[53.93549728 -194.86392212]
[49.28276062 -179.13865662]
[53.26826477 -164.67781067]
[57.25376511 -150.21697998]
[61.23926926 -135.75614929]
[65.31307983 -121.31993866]
[69.47505188 -106.90890503]
[73.63702393 -92.49786377]
[77.79899597 -78.08683014]
[91.08342743 -66.60099792]
[86.47526550 -48.75889969]
[90.81307983 -34.39981461]
[95.15090179 -20.04072952]
[106.23817444 -10.09479618]
[102.82231140 5.35326052]
[107.16013336 19.71234703]
[111.49794769 34.07143021]
[115.83576202 48.43051910]
[120.17358398 62.78960419]
[132.66468811 71.09455109]
[147.58380127 69.53878021]
[162.50289917 67.98300934]
[177.42199707 66.42723846]
[190.34524536 57.30034256]
[203.80638123 63.67586899]
[218.72547913 62.12009811]
[233.64457703 60.56433105]
[248.56367493 59.00856018]
[263.48278809 57.45279312]
[278.39572144 18.99203873]
[291.32455444 11.38642597]
[304.25338745 3.78081203]
[317.18222046 -3.82480168]
[330.11102295 -11.43041515]
[343.03985596 -19.03602791]
[351.01141357 -32.70222855]
[365.90444946 -32.48652649]
[378.83328247 -40.09214020]
[391.76211548 -47.69775391]
[404.69094849 -55.30336761]
[417.61978149 -62.90898132]
[430.50186157 -70.59347534]
[443.33676147 -78.35655975]
[445.26907349 -82.17180634]
[448.02816772 -84.91341400]
[451.18060303 -86.45392609]
[454.29571533 -86.81779480]
[456.99420166 -86.16766357]
[470.19320679 -93.29413605]
[483.39218140 -100.42061615]
[496.59118652 -107.54708862]
[500.87463379 -122.75983429]
[514.70117188 -130.41503906]
[529.86779785 -125.97100067]
[537.37634277 -112.06429291]
[532.77221680 -96.94551849]
[518.78692627 -89.58437347]
[503.71765137 -94.34809875]
[490.51867676 -87.22162628]
[477.31967163 -80.09514618]
[464.12069702 -72.96867371]
[451.09985352 -65.52166748]
[438.26495361 -57.75857925]
[434.18008423 -51.62569427]
[425.22537231 -49.98015213]
[412.29656982 -42.37453842]
[399.36773682 -34.76892471]
[386.43890381 -27.16331100]
[373.51007080 -19.55769730]
[366.46328735 -6.43550158]
[350.64547729 -6.10719872]
[337.71664429 1.49841475]
[324.78781128 9.10402870]
[311.85897827 16.70964241]
[298.93014526 24.31525612]
[286.00134277 31.92086983]
[286.18466187 39.41862869]
[286.73471069 61.91190338]
[300.01980591 68.87650299]
[313.30493164 75.84111023]
[326.59005737 82.80570984]
[335.61450195 84.01161194]
[339.99423218 89.93750763]
[353.19320679 97.06398773]
[366.39221191 104.19046021]
[375.40124512 105.50658417]
[379.70819092 111.48557281]
[392.81909180 118.77285767]
[405.92999268 126.06014252]
[419.04086304 133.34742737]
[425.59979248 133.61979675]
[430.34048462 136.68722534]
[432.38003540 140.97650146]
[445.30886841 148.58210754]
[461.70294189 148.17462158]
[470.02084351 162.30772400]
[461.70581055 176.44250488]
[445.31164551 176.03831482]
[437.70324707 161.51094055]
[424.77441406 153.90533447]
[411.75360107 146.45832825]
[398.64270020 139.17103577]
[385.53179932 131.88375854]
[372.42092896 124.59646606]
[359.26571655 117.38945007]
[346.06674194 110.26297760]
[332.86773682 103.13649750]
[319.62545776 96.09082794]
[306.34033203 89.12622833]
[293.05520630 82.16162109]
[279.77011108 75.19702148]
[265.03854370 72.37189484]
[250.11944580 73.92765808]
[235.20034790 75.48342896]
[220.28125000 77.03919983]
[205.36213684 78.59497070]
[193.50601196 87.61058807]
[178.97776794 81.34634399]
[164.05867004 82.90211487]
[149.13957214 84.45787811]
[134.22045898 86.01364899]
[106.30599976 139.71005249]
[98.15436554 152.30174255]
[90.00273132 164.89344788]
[81.85109711 177.48513794]
[73.69945526 190.07684326]
[65.54782104 202.66853333]
[57.39618683 215.26022339]
[49.24454880 227.85192871]
[41.09291458 240.44361877]
[32.94127655 253.03532410]
[24.78964043 265.62701416]
[16.63800430 278.21871948]
[29.84171486 293.90020752]
[36.50471878 313.49792480]
[35.57783127 334.37625122]
[27.04308891 353.67132568]
[11.93597317 368.68380737]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[5 21]
[6 20]
[7 19]
[9 18]
[10 17]
[26 39]
[27 38]
[28 37]
[29 36]
[53 251]
[54 250]
[55 249]
[56 248]
[57 247]
[58 246]
[59 245]
[60 244]
[61 243]
[62 242]
[63 241]
[64 240]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[96 137]
[97 136]
[98 135]
[99 134]
[100 133]
[102 131]
[103 130]
[104 129]
[107 127]
[108 126]
[109 125]
[110 124]
[112 123]
[113 122]
[114 121]
[115 120]
[138 239]
[139 238]
[140 237]
[141 236]
[143 234]
[144 233]
[145 232]
[146 231]
[147 230]
[148 194]
[149 193]
[150 192]
[151 191]
[152 190]
[153 189]
[155 187]
[156 186]
[157 185]
[158 184]
[159 183]
[160 181]
[161 180]
[166 179]
[167 178]
[168 177]
[169 176]
[196 229]
[197 228]
[198 227]
[199 226]
[201 225]
[202 224]
[203 223]
[205 222]
[206 221]
[207 220]
[208 219]
[211 218]
[212 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
