%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGCGCAGAGGGCCGCGGGGGCUGCCGGGAAAGGCAUACGUGCUUAAUCCUGGUGCAGGGGGCGAGCAUGGCCGCUCCGCGAGUGAGCACCCCCAGCUCUUGCCUGGUUUCCCGGGACACUAGGGUGGGGCCUGAGGAGUGGAGUGGCAGCUGACCCUGUCUGUGCCCCUAGUAUUCCCACUUUCCUGUGCGGUGCAGCAGUAUGCCUGGGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[191.29534912 240.62603760]
[185.04859924 218.68946838]
[193.34307861 197.30818176]
[184.14778137 185.45718384]
[174.95246887 173.60617065]
[165.75717163 161.75517273]
[156.56185913 149.90415955]
[147.36654663 138.05316162]
[138.17124939 126.20214844]
[128.97593689 114.35114288]
[121.48828125 114.78126526]
[106.51296997 115.64150238]
[99.02531433 116.07161713]
[91.24755096 128.89762878]
[83.46977997 141.72363281]
[75.69201660 154.54963684]
[78.09795380 170.41125488]
[67.09164429 182.08346558]
[51.11618042 180.61235046]
[42.42657852 167.12641907]
[47.68875122 151.97093201]
[62.86601639 146.77186584]
[70.64378357 133.94586182]
[78.42154694 121.11985779]
[86.19931030 108.29385376]
[76.42082977 96.91926575]
[62.57294846 102.68435669]
[48.72507095 108.44944763]
[34.87719345 114.21454620]
[21.02931786 119.97963715]
[7.18143988 125.74472809]
[-6.66643763 131.50982666]
[-17.51122665 146.39515686]
[-34.81412125 143.45146179]
[-48.57787704 149.41459656]
[-62.34162903 155.37774658]
[-76.10538483 161.34088135]
[-89.86914062 167.30403137]
[-99.20120239 180.78900146]
[-115.52124023 179.18020630]
[-122.04060364 164.13261414]
[-112.05272675 151.12591553]
[-95.83228302 153.54026794]
[-82.06852722 147.57713318]
[-68.30477142 141.61398315]
[-54.54101944 135.65084839]
[-40.77726364 129.68769836]
[-36.04138565 118.56080627]
[-24.62829781 113.47846985]
[-12.43153000 117.66194153]
[1.41634774 111.89685059]
[15.26422501 106.13175964]
[29.11210251 100.36666870]
[42.95998001 94.60157013]
[56.80785751 88.83647919]
[70.65573883 83.07138824]
[78.97810364 70.59188080]
[78.97810364 55.59187698]
[78.97810364 40.59187698]
[78.97810364 25.59187889]
[78.97810364 10.59187889]
[78.97810364 -4.40812111]
[69.10167694 -11.01300144]
[63.69278336 -21.45708656]
[63.99124146 -33.09502411]
[69.80742645 -43.04122925]
[79.59795380 -48.88534546]
[80.02825165 -63.87917328]
[80.45854187 -78.87300110]
[72.55158997 -86.33128357]
[70.10177612 -96.69567871]
[73.68232727 -106.49236298]
[81.88562775 -112.57270050]
[82.74586487 -127.54801178]
[83.60610962 -142.52333069]
[84.46634674 -157.49864197]
[85.32658386 -172.47395325]
[86.18682098 -187.44926453]
[87.04705811 -202.42457581]
[87.90729523 -217.39988708]
[88.76753235 -232.37519836]
[89.62776947 -247.35050964]
[77.78853607 -257.20642090]
[74.06641388 -271.97122192]
[79.68557739 -285.93145752]
[92.29667664 -293.81170654]
[85.36354065 -308.03289795]
[93.81800842 -320.29550171]
[94.67824554 -335.27081299]
[86.98849487 -342.95285034]
[84.83700562 -353.38323975]
[88.69711304 -363.07318115]
[97.07146454 -368.91571045]
[98.36093903 -383.86016846]
[99.65040588 -398.80465698]
[100.93988037 -413.74911499]
[102.22935486 -428.69360352]
[99.85022736 -437.50646973]
[103.64601135 -443.84268188]
[105.14972687 -458.76712036]
[106.65344238 -473.69155884]
[108.15715790 -488.61599731]
[109.44662476 -503.56045532]
[110.52159119 -518.52191162]
[111.48921967 -533.49066162]
[112.34945679 -548.46594238]
[113.20969391 -563.44128418]
[114.06993103 -578.41656494]
[114.93016815 -593.39190674]
[107.07924652 -607.78967285]
[115.85239410 -621.64477539]
[132.22454834 -620.70428467]
[139.35343933 -605.93566895]
[129.90548706 -592.53167725]
[129.04524231 -577.55633545]
[128.18501282 -562.58105469]
[127.32476807 -547.60571289]
[126.46453094 -532.63043213]
[129.21746826 -525.77642822]
[125.48302460 -517.44689941]
[124.40805817 -502.48550415]
[126.79774475 -498.35668945]
[126.62319946 -492.68380737]
[123.08158875 -487.11227417]
[121.57788086 -472.18783569]
[120.07416534 -457.26339722]
[118.57044983 -442.33895874]
[117.17382812 -427.40411377]
[115.88435364 -412.45965576]
[114.59487915 -397.51516724]
[113.30541229 -382.57070923]
[112.01593781 -367.62622070]
[121.46406555 -350.75161743]
[109.65355682 -334.41058350]
[108.79331970 -319.43527222]
[115.78798676 -306.28521729]
[107.27198792 -292.95147705]
[118.89777374 -283.67898560]
[122.88139343 -269.16708374]
[117.49303436 -254.92564392]
[104.60308838 -246.49028015]
[103.74284363 -231.51496887]
[102.88260651 -216.53965759]
[102.02236938 -201.56434631]
[101.16213226 -186.58901978]
[100.30189514 -171.61370850]
[99.44165802 -156.63839722]
[98.58142090 -141.66308594]
[97.72118378 -126.68777466]
[96.86093903 -111.71246338]
[106.78925323 -95.11583710]
[95.45236969 -78.44270325]
[95.02207947 -63.44887543]
[94.59178162 -48.45505142]
[107.93827820 -35.91937256]
[107.87633514 -17.28943253]
[93.97810364 -4.40812111]
[93.97810364 10.59187889]
[93.97810364 25.59187889]
[93.97810364 40.59187698]
[93.97810364 55.59187698]
[93.97810364 70.59188080]
[140.82695007 105.15583801]
[150.02224731 117.00684357]
[159.21755981 128.85784912]
[168.41287231 140.70886230]
[177.60816956 152.55986023]
[186.80348206 164.41087341]
[195.99877930 176.26187134]
[205.19409180 188.11288452]
[212.65487671 185.52638245]
[220.48631287 184.62474060]
[228.31335449 185.44534302]
[235.76242065 187.94323730]
[242.47920227 191.99354553]
[248.14556885 197.39773560]
[252.49459839 203.89324951]
[255.32315063 211.16639709]
[256.50134277 218.86735535]
[255.97856140 226.62709045]
[253.78552246 234.07504272]
[250.03259277 240.85675049]
[244.90420532 246.65078735]
[252.49719238 259.58703613]
[260.09017944 272.52328491]
[267.68313599 285.45956421]
[275.27612305 298.39581299]
[282.86911011 311.33206177]
[290.46209717 324.26831055]
[294.99151611 326.83889771]
[297.80441284 330.52008057]
[298.76513672 334.47357178]
[298.08966064 337.92852783]
[305.11907959 351.17944336]
[312.14846802 364.43038940]
[318.93048096 370.54034424]
[319.18212891 377.92221069]
[326.02072144 391.27264404]
[332.85931396 404.62304688]
[347.97561646 409.23535156]
[355.32922363 423.22463989]
[350.55734253 438.29132080]
[336.49108887 445.49661255]
[321.47570801 440.56570435]
[314.41955566 426.42407227]
[319.50891113 411.46163940]
[312.67031860 398.11123657]
[305.83172607 384.76083374]
[298.89752197 371.45980835]
[291.86813354 358.20886230]
[284.83871460 344.95791626]
[277.52584839 331.86129761]
[269.93286133 318.92504883]
[262.33987427 305.98876953]
[254.74690247 293.05252075]
[247.15391541 280.11627197]
[239.56092834 267.18002319]
[231.96795654 254.24377441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 170]
[4 169]
[5 168]
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[13 25]
[14 24]
[15 23]
[16 22]
[26 56]
[27 55]
[28 54]
[29 53]
[30 52]
[31 51]
[32 50]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[57 162]
[58 161]
[59 160]
[60 159]
[61 158]
[62 157]
[67 154]
[68 153]
[69 152]
[73 150]
[74 149]
[75 148]
[76 147]
[77 146]
[78 145]
[79 144]
[80 143]
[81 142]
[82 141]
[86 137]
[88 135]
[89 134]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[99 127]
[100 126]
[101 125]
[102 124]
[103 121]
[104 120]
[105 118]
[106 117]
[107 116]
[108 115]
[109 114]
[183 218]
[184 217]
[185 216]
[186 215]
[187 214]
[188 213]
[189 212]
[193 211]
[194 210]
[195 209]
[197 208]
[198 207]
[199 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
