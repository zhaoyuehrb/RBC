%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGACUUGGGUGGCUCUGCGCCGCGGAGGCCACAGCCGCAGACUUCCCCAGUAGUACCGCGCCGCUCCGCCCCGGAGUGACGCCCUCCGCCCAUGGGCCUGGCCGAGGGCAACCGGCGGGCGGCGCGGAGGAGGCGGCGACAGGUGGCGCGCAGCAGGGCCGGAGCCGGGCCGGGCC\
) } def
/len { sequence length } bind def

/coor [
[52.79641342 971.22583008]
[37.72928619 974.54028320]
[23.27006531 969.16119385]
[14.03263664 956.80505371]
[12.96463013 941.41473389]
[20.40684128 927.90112305]
[33.98448944 920.57641602]
[35.03083801 905.61297607]
[36.07718277 890.64953613]
[37.12353134 875.68603516]
[38.16987610 860.72259521]
[29.63241577 845.40399170]
[40.01978683 830.21490479]
[40.80482483 815.23547363]
[41.58986282 800.25604248]
[42.37490463 785.27661133]
[43.15994263 770.29711914]
[43.94498444 755.31768799]
[44.73002243 740.33825684]
[45.51506042 725.35882568]
[42.71737671 718.49530029]
[46.44677353 710.12548828]
[47.49311829 695.16204834]
[48.53946686 680.19854736]
[49.32450485 665.21911621]
[49.84799957 650.22827148]
[38.01677704 641.21936035]
[33.70804977 626.80065918]
[38.77500534 612.44171143]
[51.47214127 603.71881104]
[51.86479568 588.72393799]
[52.12658310 573.72625732]
[52.38837051 558.72851562]
[52.65015411 543.73083496]
[52.91194153 528.73309326]
[43.58446503 513.88226318]
[53.16266632 498.17041016]
[45.42536545 485.44314575]
[53.16266632 471.64297485]
[53.16266632 456.64297485]
[53.16266632 441.64297485]
[45.42536545 428.91567993]
[53.16266632 415.11550903]
[50.00960922 408.40786743]
[53.29584885 399.85430908]
[53.55763626 384.85659790]
[53.81941986 369.85888672]
[54.08120728 354.86114502]
[54.34299469 339.86343384]
[43.84111404 350.57373047]
[29.30757332 354.28536987]
[14.95617676 349.92218018]
[4.94792032 338.74923706]
[2.18456674 324.00598145]
[7.46731329 309.96701050]
[19.26449776 300.70275879]
[34.15568161 298.89926147]
[47.82336807 305.07940674]
[56.30399704 317.44906616]
[58.65051270 302.63372803]
[60.99703217 287.81842041]
[63.34354782 273.00308228]
[65.69006348 258.18777466]
[68.03658295 243.37243652]
[70.38310242 228.55711365]
[72.72961426 213.74179077]
[75.07613373 198.92646790]
[73.01120758 191.80813599]
[77.59505463 183.87397766]
[80.19977570 169.10185242]
[82.80450439 154.32974243]
[85.40922546 139.55761719]
[88.01394653 124.78550720]
[72.56430817 112.24588013]
[68.71689606 90.97949982]
[80.50222015 70.84880066]
[76.87339020 56.29436111]
[73.24456024 41.73992538]
[69.61573029 27.18548965]
[64.48958588 19.59041023]
[66.05293274 12.34537888]
[54.47911072 0.72735083]
[59.01434708 -15.03220654]
[74.99318695 -18.72121239]
[85.97796631 -6.54473305]
[80.66848755 8.97111320]
[84.17016602 23.55666161]
[87.79899597 38.11109924]
[91.42782593 52.66553497]
[95.05665588 67.21997070]
[110.01041412 68.39685822]
[115.87137604 54.58928299]
[121.73234558 40.78171158]
[127.59331512 26.97413826]
[128.07022095 17.82344627]
[133.67893982 12.97815323]
[132.22360229 -2.77597475]
[144.46862793 -11.25587273]
[150.56967163 -24.95905495]
[156.67073059 -38.66223526]
[157.58947754 -55.59127045]
[174.11125183 -59.39485168]
[182.33987427 -44.57168579]
[170.37390137 -32.56118774]
[164.27285767 -18.85800552]
[158.17179871 -5.15482283]
[160.06353760 9.61916161]
[147.38212585 19.07920265]
[141.40087891 32.83510590]
[135.53991699 46.64267731]
[129.67895508 60.45024872]
[123.81798553 74.25782013]
[131.34617615 88.00476837]
[131.91580200 102.98475647]
[126.01068115 116.01804352]
[115.42766571 124.60231018]
[102.78606415 127.39022827]
[100.18134308 142.16233826]
[97.57661438 156.93446350]
[94.97189331 171.70657349]
[92.36717224 186.47869873]
[89.89145660 201.27297974]
[87.54494476 216.08830261]
[85.19842529 230.90362549]
[82.85190582 245.71894836]
[80.50539398 260.53427124]
[78.15887451 275.34960938]
[75.81235504 290.16491699]
[73.46584320 304.98025513]
[71.11932373 319.79559326]
[74.97288513 331.10684204]
[69.34070587 340.12524414]
[69.07892609 355.12295532]
[68.81713867 370.12066650]
[68.55535126 385.11837769]
[68.29356384 400.11608887]
[68.16266632 415.11550903]
[75.89996338 428.91567993]
[68.16266632 441.64297485]
[68.16266632 456.64297485]
[68.16266632 471.64297485]
[75.89996338 485.44314575]
[68.16266632 498.17041016]
[76.72380829 507.84213257]
[76.39923859 520.35321045]
[67.90966034 528.99487305]
[67.64787292 543.99261475]
[67.38608551 558.99029541]
[67.12429810 573.98803711]
[66.86251068 588.98571777]
[69.84823608 597.64880371]
[66.46300507 604.24230957]
[78.52073669 613.82965088]
[82.57372284 628.50708008]
[77.26969147 642.59008789]
[64.83885956 650.75177002]
[64.31536865 665.74261475]
[67.09601593 671.79077148]
[66.47694397 677.47552490]
[63.50292587 681.24493408]
[62.45658112 696.20837402]
[61.41023254 711.17181396]
[60.49450302 726.14385986]
[59.70946503 741.12329102]
[58.92442703 756.10272217]
[58.13938522 771.08215332]
[57.35434723 786.06164551]
[56.56930923 801.04107666]
[55.78426743 816.02050781]
[54.99922943 830.99993896]
[63.04246140 841.10650635]
[62.06355286 853.58343506]
[53.13333893 861.76892090]
[52.08699036 876.73242188]
[51.04064560 891.69586182]
[49.99429703 906.65930176]
[48.94794846 921.62280273]
[61.37406158 930.76580811]
[66.86312103 945.18365479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 177]
[8 176]
[9 175]
[10 174]
[11 173]
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[18 165]
[19 164]
[20 163]
[22 162]
[23 161]
[24 160]
[25 157]
[26 156]
[30 152]
[31 150]
[32 149]
[33 148]
[34 147]
[35 146]
[37 143]
[39 141]
[40 140]
[41 139]
[43 137]
[45 136]
[46 135]
[47 134]
[48 133]
[49 132]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[69 121]
[70 120]
[71 119]
[72 118]
[73 117]
[76 90]
[77 89]
[78 88]
[79 87]
[81 86]
[91 112]
[92 111]
[93 110]
[94 109]
[96 108]
[98 106]
[99 105]
[100 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
