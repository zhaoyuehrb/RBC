%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAUCCAAGCGGGCUCGCGGCGGACACCAGGUGUCACCUGGCCGUGGCGUCCGGCGCGGCGUGGGCGUCCGGGGGCGCGGCGUGGAGGAGCGCGCGGGAUGGGGCGUGGGCGCGGGGAGCGCCGGGCGGAGCCUUAACAAGUGGUCGGGCGGGCGGACGAGGCGGGCGAUGGCCCCGCGGCCGGGACGCGCACAGGGACC\
) } def
/len { sequence length } bind def

/coor [
[105.84301758 112.34269714]
[103.76052856 127.19743347]
[110.40725708 142.18919373]
[100.53002930 155.28012085]
[84.28968811 153.00338745]
[78.39291382 137.70111084]
[88.90579224 125.11494446]
[90.98828125 110.26020813]
[85.08853149 105.62954712]
[82.96762848 120.47885132]
[69.04726410 126.06664276]
[57.24797821 116.80506134]
[59.36920547 101.95581055]
[73.28904724 96.36822510]
[67.38930511 91.73756409]
[53.45465088 97.28963470]
[46.63547516 103.37704468]
[39.26115036 102.81797028]
[25.24224854 108.15373230]
[11.22334766 113.48950195]
[-2.79555416 118.82526398]
[-12.94081020 130.96546936]
[-27.58792877 128.26155090]
[-41.60683060 133.59732056]
[-55.62573242 138.93307495]
[-69.64463806 144.26884460]
[-83.66353607 149.60461426]
[-93.80879211 161.74481201]
[-108.45590973 159.04089355]
[-122.47481537 164.37666321]
[-136.49371338 169.71243286]
[-146.63897705 181.85261536]
[-161.28608704 179.14871216]
[-168.19865417 185.12985229]
[-175.56344604 184.45672607]
[-189.66323853 189.57490540]
[-203.76303101 194.69309998]
[-213.89506531 207.58782959]
[-230.08763123 204.99307251]
[-235.68321228 189.57810974]
[-224.92555237 177.20050049]
[-208.88121033 180.59329224]
[-194.78141785 175.47511292]
[-180.68162537 170.35693359]
[-166.62185669 165.12980652]
[-157.47932434 153.37126160]
[-141.82948303 155.69352722]
[-127.81057739 150.35775757]
[-113.79167938 145.02198792]
[-104.64914703 133.26344299]
[-88.99929810 135.58570862]
[-74.98040009 130.24993896]
[-60.96149826 124.91417694]
[-46.94259644 119.57841492]
[-32.92369461 114.24264526]
[-23.78116608 102.48410034]
[-8.13132000 104.80636597]
[5.88758183 99.47059631]
[19.90648270 94.13483429]
[33.92538452 88.79906464]
[47.90258026 83.35498810]
[61.83723068 77.80290985]
[106.64916229 81.26503754]
[117.92994690 71.37848663]
[129.21073914 61.49193192]
[134.48950195 46.57733917]
[149.16075134 44.00760651]
[160.44154358 34.12105560]
[171.72233582 24.23450279]
[183.00311279 14.34795284]
[194.28390503 4.46140242]
[205.56468201 -5.42514849]
[207.19099426 -18.22460556]
[216.79571533 -26.22683334]
[228.87782288 -25.55885506]
[240.31025696 -35.26964951]
[245.81919861 -50.10076904]
[260.52847290 -52.44315338]
[271.96090698 -62.15394592]
[283.39334106 -71.86473846]
[273.80718994 -76.46246338]
[266.13928223 -85.77111816]
[260.69519043 -99.74830627]
[255.25111389 -113.72550201]
[249.80702209 -127.70269775]
[244.36294556 -141.67990112]
[229.79467773 -147.80697632]
[223.90332031 -162.47215271]
[230.18408203 -176.97482300]
[244.91072083 -182.71081543]
[259.34619141 -176.27706909]
[264.92614746 -161.49060059]
[258.34014893 -147.12397766]
[263.78421021 -133.14677429]
[269.22830200 -119.16958618]
[274.67239380 -105.19239044]
[280.11645508 -91.21519470]
[278.80252075 -106.15753937]
[288.94821167 -117.20583344]
[303.94815063 -117.16703796]
[314.03659058 -106.06641388]
[312.64535522 -91.13107300]
[300.68066406 -82.08483124]
[314.69958496 -87.42060089]
[328.71847534 -92.75636292]
[342.73736572 -98.09213257]
[356.75628662 -103.42789459]
[359.29315186 -118.51138306]
[368.97537231 -130.22254944]
[383.12548828 -135.48002625]
[397.90838623 -132.96571350]
[409.37072754 -123.45359802]
[423.38961792 -128.78936768]
[433.53488159 -140.92956543]
[448.18200684 -138.22564697]
[462.20089722 -143.56141663]
[469.28472900 -161.12686157]
[486.65802002 -167.82781982]
[503.12777710 -159.84701538]
[509.21655273 -174.18452454]
[523.34161377 -179.83587646]
[536.97271729 -173.94281006]
[550.81976318 -179.70985413]
[564.66680908 -185.47689819]
[578.51391602 -191.24395752]
[588.27856445 -203.69229126]
[603.00238037 -201.44296265]
[612.76708984 -213.89129639]
[627.49084473 -211.64196777]
[637.25555420 -224.09030151]
[651.97930908 -221.84097290]
[665.82641602 -227.60801697]
[675.59106445 -240.05636597]
[690.31488037 -237.80702209]
[704.11688232 -243.68104553]
[717.87304688 -249.66169739]
[731.62921143 -255.64233398]
[743.74420166 -267.50250244]
[758.49462891 -259.14422607]
[754.54626465 -242.65643311]
[737.60986328 -241.88616943]
[723.85369873 -235.90553284]
[710.09753418 -229.92488098]
[705.21362305 -224.37144470]
[696.08190918 -223.95996094]
[687.30767822 -211.92411804]
[671.59344482 -213.76095581]
[657.74639893 -207.99391174]
[648.97210693 -195.95805359]
[633.25787354 -197.79490662]
[624.48364258 -185.75904846]
[608.76940918 -187.59590149]
[599.99517822 -175.56004333]
[584.28094482 -177.39689636]
[570.43389893 -171.62983704]
[556.58679199 -165.86279297]
[542.73974609 -160.09574890]
[537.32159424 -146.26899719]
[523.36083984 -140.22312927]
[508.89480591 -145.99993896]
[506.93661499 -134.75262451]
[499.71514893 -125.75597382]
[488.93600464 -121.31975555]
[477.23562622 -122.65420532]
[467.53665161 -129.54251099]
[453.51776123 -124.20674896]
[444.37524414 -112.44819641]
[428.72540283 -114.77046204]
[414.70648193 -109.43470001]
[412.46957397 -94.70847321]
[403.09954834 -83.00126648]
[389.03469849 -77.51979065]
[374.01596069 -79.82947540]
[362.09204102 -89.40899658]
[348.07315063 -84.07322693]
[334.05422974 -78.73746490]
[320.03533936 -73.40169525]
[306.01644897 -68.06593323]
[293.10412598 -60.43230820]
[281.67169189 -50.72151566]
[270.23925781 -41.01071930]
[265.54803467 -26.87418365]
[250.02105713 -23.83721733]
[238.58862305 -14.12642288]
[233.58866882 2.69236660]
[215.45123291 5.85563707]
[204.17045593 15.74218750]
[192.88966370 25.62873840]
[181.60888672 35.51528931]
[170.32809448 45.40184021]
[159.04730225 55.28839111]
[154.57540894 69.49583435]
[139.09729004 72.77272034]
[127.81649780 82.65927124]
[116.53571320 92.54582214]
[130.77119446 87.81811523]
[145.20341492 91.90602875]
[154.84498596 103.39688873]
[156.36407471 118.31977081]
[149.23570251 131.51774597]
[135.92324829 138.42993164]
[121.02712250 136.66769409]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 8]
[2 7]
[15 62]
[16 61]
[18 60]
[19 59]
[20 58]
[21 57]
[23 55]
[24 54]
[25 53]
[26 52]
[27 51]
[29 49]
[30 48]
[31 47]
[33 45]
[35 44]
[36 43]
[37 42]
[63 195]
[64 194]
[65 193]
[67 191]
[68 190]
[69 189]
[70 188]
[71 187]
[72 186]
[75 184]
[76 183]
[78 181]
[79 180]
[80 179]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[103 178]
[104 177]
[105 176]
[106 175]
[107 174]
[112 169]
[113 168]
[115 166]
[116 165]
[119 160]
[122 157]
[123 156]
[124 155]
[125 154]
[127 152]
[129 150]
[131 148]
[132 147]
[134 145]
[135 143]
[136 142]
[137 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
