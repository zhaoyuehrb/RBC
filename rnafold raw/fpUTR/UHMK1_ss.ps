%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCCGGCUUCUGGGACUCGGGUGCACCACGGCUUCCGGUGUCAUGGCUGCUUGAAGUCCCGGGAGUCGGUGAGGCGGCUGCAGGUCCCUCCCUGCGGAGCCGCUGGUCCGGCUGGCGGAGAUGUGACCGCGGGCCCGGCCGGCCUGCCUCAGGCGUCGCGUCAGCUCCCGUGUCCGUGCCCUUAACCCACACCG\
) } def
/len { sequence length } bind def

/coor [
[40.87665558 150.55969238]
[48.73861313 137.78512573]
[60.06853104 127.95492554]
[73.82657623 121.97266388]
[83.62664795 110.61666870]
[69.58192444 115.88408661]
[55.53720093 121.15151215]
[41.49247742 126.41893768]
[27.44775200 131.68635559]
[13.40302944 136.95378113]
[-0.64169425 142.22120667]
[-14.68641758 147.48863220]
[-28.73114204 152.75604248]
[-42.77586365 158.02346802]
[-56.82058716 163.29089355]
[-70.86531067 168.55831909]
[-84.91003418 173.82574463]
[-98.95475769 179.09317017]
[-112.99948120 184.36058044]
[-127.00176239 189.73982239]
[-140.96069336 195.23054504]
[-154.91964722 200.72126770]
[-168.87858582 206.21197510]
[-182.83752441 211.70269775]
[-196.79646301 217.19340515]
[-202.65629578 228.69212341]
[-214.40487671 232.97457886]
[-225.55088806 228.25563049]
[-239.59561157 233.52305603]
[-253.64033508 238.79046631]
[-263.84460449 250.88110352]
[-278.47836304 248.10589600]
[-292.52310181 253.37330627]
[-306.56781006 258.64074707]
[-311.60177612 273.44592285]
[-325.00131226 281.50732422]
[-340.43957520 279.01861572]
[-350.62710571 267.15487671]
[-350.75366211 251.51782227]
[-340.75946045 239.49075317]
[-325.36349487 236.75251770]
[-311.83523560 244.59600830]
[-297.79052734 239.32858276]
[-283.74578857 234.06117249]
[-274.54611206 222.34729004]
[-258.90774536 224.74574280]
[-244.86302185 219.47833252]
[-230.81829834 214.21090698]
[-220.42337036 200.07797241]
[-202.28718567 203.23446655]
[-188.32823181 197.74375916]
[-174.36929321 192.25303650]
[-160.41035461 186.76231384]
[-146.45141602 181.27160645]
[-132.49247742 175.78088379]
[-127.41277313 170.40061951]
[-118.26690674 170.31585693]
[-104.22218323 165.04844666]
[-90.17745972 159.78102112]
[-76.13273621 154.51359558]
[-62.08801270 149.24617004]
[-48.04328918 143.97874451]
[-33.99856567 138.71131897]
[-19.95384026 133.44390869]
[-5.90911722 128.17648315]
[8.13560677 122.90905762]
[22.18033028 117.64163208]
[36.22505188 112.37421417]
[50.26977539 107.10678864]
[64.31449890 101.83936310]
[78.35922241 96.57194519]
[97.84027100 80.80581665]
[104.31771851 67.27648926]
[110.79517365 53.74716949]
[117.27262115 40.21784210]
[123.75007629 26.68851852]
[130.22752380 13.15919399]
[136.70497131 -0.37013122]
[143.18243408 -13.89945602]
[144.37719727 -28.85179710]
[140.13035583 -43.23805237]
[135.88349915 -57.62430191]
[131.63665771 -72.01055908]
[127.38980103 -86.39681244]
[123.14295197 -100.78306580]
[118.89610291 -115.16931152]
[104.89599609 -122.50228882]
[100.26142883 -137.61177063]
[107.74200439 -151.53356934]
[122.89964294 -156.00813293]
[136.74157715 -148.38076782]
[141.05563354 -133.17668152]
[133.28234863 -119.41616058]
[137.52920532 -105.02991486]
[141.77604675 -90.64366150]
[146.02290344 -76.25740814]
[150.26976013 -61.87115097]
[154.51660156 -47.48490143]
[158.76345825 -33.09864807]
[165.98951721 -31.09019661]
[170.00665283 -45.54228210]
[184.45866394 -41.52493668]
[180.44166565 -27.07329941]
[187.66773987 -25.06484985]
[198.72914124 -35.19625092]
[209.79055786 -45.32765579]
[220.85195923 -55.45906067]
[231.91336060 -65.59046173]
[242.97476196 -75.72186279]
[254.03616333 -85.85327148]
[258.98681641 -100.87997437]
[273.59823608 -103.77062225]
[284.65963745 -113.90202332]
[295.72103882 -124.03342438]
[306.78244019 -134.16482544]
[311.73306274 -149.19152832]
[326.34448242 -152.08218384]
[337.40588379 -162.21357727]
[348.46728516 -172.34498596]
[359.52868652 -182.47639465]
[357.64178467 -197.87831116]
[365.19769287 -211.43145752]
[379.29101562 -217.92437744]
[394.50259399 -214.86039734]
[404.98324585 -203.41769409]
[406.70294189 -187.99620056]
[399.00045776 -174.52581787]
[384.83752441 -168.18617249]
[369.66009521 -171.41497803]
[358.59869385 -161.28358459]
[347.53729248 -151.15217590]
[336.47589111 -141.02076721]
[332.31643677 -126.71873474]
[316.91384888 -123.10342407]
[305.85244751 -112.97202301]
[294.79101562 -102.84061432]
[283.72961426 -92.70921326]
[279.57015991 -78.40718079]
[264.16757202 -74.79186249]
[253.10617065 -64.66046143]
[242.04476929 -54.52905655]
[230.98335266 -44.39765549]
[219.92195129 -34.26625061]
[208.86054993 -24.13484764]
[197.79914856 -14.00344467]
[156.71174622 -7.42200518]
[150.23429871 6.10731983]
[143.75685120 19.63664436]
[137.27940369 33.16596985]
[130.80195618 46.69529343]
[124.32450104 60.22462082]
[117.84704590 73.75394440]
[111.36959839 87.28327179]
[114.92359161 101.85615540]
[126.90232086 110.88444519]
[138.88105774 119.91273499]
[150.85978699 128.94102478]
[159.60743713 131.61170959]
[162.95602417 138.21002197]
[174.78926086 147.42817688]
[183.49322510 150.23803711]
[186.73614502 156.88890076]
[202.33789062 159.51501465]
[207.40057373 173.52281189]
[219.08531189 182.92849731]
[234.39073181 179.72253418]
[248.15162659 187.15029907]
[253.87052917 201.70462036]
[248.84715271 216.51338196]
[235.45338440 224.58436584]
[220.01333618 222.10667419]
[209.81733704 210.25021362]
[209.67962646 194.61323547]
[197.99488831 185.20755005]
[183.22892761 183.25419617]
[177.33047485 168.57363892]
[165.57110596 159.26142883]
[153.73786926 150.04325867]
[141.83149719 140.91975403]
[129.85276794 131.89146423]
[117.87403107 122.86318207]
[105.89530182 113.83489227]
[112.07923889 127.50086975]
[123.57904816 137.13177490]
[131.66284180 149.76713562]
[135.58703613 164.24472046]
[134.99070740 179.23286438]
[129.92868042 193.35292053]
[120.86656952 205.30609131]
[108.63794708 213.99290466]
[94.36760712 218.61431885]
[79.36817932 218.74526978]
[65.01934052 214.37368774]
[52.64091492 205.90170288]
[43.37150574 194.10856628]
[38.06373215 180.07904053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 71]
[6 70]
[7 69]
[8 68]
[9 67]
[10 66]
[11 65]
[12 64]
[13 63]
[14 62]
[15 61]
[16 60]
[17 59]
[18 58]
[19 57]
[20 55]
[21 54]
[22 53]
[23 52]
[24 51]
[25 50]
[28 48]
[29 47]
[30 46]
[32 44]
[33 43]
[34 42]
[72 153]
[73 152]
[74 151]
[75 150]
[76 149]
[77 148]
[78 147]
[79 146]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[104 145]
[105 144]
[106 143]
[107 142]
[108 141]
[109 140]
[110 139]
[112 137]
[113 136]
[114 135]
[115 134]
[117 132]
[118 131]
[119 130]
[120 129]
[154 182]
[155 181]
[156 180]
[157 179]
[159 178]
[160 177]
[162 176]
[164 174]
[165 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
