%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGGGAAAGAGCAGCCUGGGCGGCAGGGGCGGUGGCUGGAGCUCGGUAAAGCUCGUGGGACCCCAUUGGGGGAAUUUGAUCCAAGGAAGCGGUGAUUGCCGGGGGAGGAGAAGCUCCCAGAUCCUUGUGUCCACUUGCAGCGGGGGAGGCGGAGACGGCGGAGCGGGCCUUUUGGCGUCCACUGCGCGGCUGCACCCUGCCCCAUCCUGCCGGGAUC\
) } def
/len { sequence length } bind def

/coor [
[58.10905838 386.08206177]
[54.48719025 400.63824463]
[50.86532211 415.19439697]
[47.24345398 429.75057983]
[57.32606125 441.54553223]
[58.51660919 457.01684570]
[50.35729980 470.21554565]
[35.98556137 476.06640625]
[20.92761612 472.31970215]
[10.97355175 460.41607666]
[9.95091152 444.93273926]
[18.25292015 431.82333374]
[32.68728256 426.12872314]
[36.30915451 411.57254028]
[39.93102264 397.01635742]
[43.55289078 382.46020508]
[53.46475601 370.39910889]
[65.43702698 363.93707275]
[77.15995789 363.04193115]
[86.57123566 366.85626221]
[87.64619446 351.89480591]
[84.99186707 345.00204468]
[88.84540558 336.72698975]
[90.13488007 321.78250122]
[91.42435455 306.83804321]
[92.71382141 291.89355469]
[94.00329590 276.94909668]
[95.29277039 262.00460815]
[96.58223724 247.06013489]
[97.76448822 232.10679626]
[98.83945465 217.14537048]
[99.91442108 202.18394470]
[100.98938751 187.22250366]
[102.06435394 172.26107788]
[95.25903320 159.01203918]
[103.96542358 145.80183411]
[105.04039001 130.84040833]
[88.78344727 129.47334290]
[75.28675842 120.04647827]
[68.28182220 104.98425293]
[53.60515213 108.08187866]
[38.92847824 111.17950439]
[24.25180435 114.27713013]
[9.57513237 117.37475586]
[1.15958166 130.75212097]
[-14.26867294 134.17915344]
[-27.55632210 125.62263489]
[-30.82003975 110.15901184]
[-22.12351799 96.96257019]
[-6.62625170 93.86252594]
[6.47750759 102.69808197]
[21.15418053 99.60045624]
[35.83085251 96.50283051]
[50.50752640 93.40520477]
[65.18419647 90.30757904]
[72.11837769 77.00656128]
[66.25411224 63.20038986]
[60.38984299 49.39421844]
[54.52557373 35.58804703]
[48.66130829 21.78187561]
[26.66766739 19.92346191]
[11.28384495 -2.07855034]
[-2.72371364 -7.44402409]
[-16.73127174 -12.80949783]
[-30.73883057 -18.17497063]
[-46.84038925 -15.06500244]
[-57.37859344 -27.62996292]
[-51.51264954 -42.94409561]
[-35.27693176 -45.25353622]
[-25.37335777 -32.18252945]
[-11.36579895 -26.81705666]
[2.64175987 -21.45158195]
[16.64931870 -16.08610916]
[22.57482147 -20.68376160]
[12.85437775 -32.10799026]
[3.13393354 -43.53221512]
[-8.57758808 -52.90452957]
[-4.02070189 -67.19560242]
[10.95445633 -68.05854034]
[17.12291908 -54.38640213]
[25.77437401 -42.13273239]
[34.42582703 -29.87906837]
[40.35132980 -34.47671890]
[38.63368607 -49.37805176]
[36.91604233 -64.27938843]
[35.19839859 -79.18071747]
[33.48075104 -94.08204651]
[31.76310730 -108.98338318]
[14.65151405 -113.75028992]
[2.62237000 -130.22715759]
[3.33404303 -153.26892090]
[-2.13176203 -167.23764038]
[-7.59756708 -181.20635986]
[-13.06337261 -195.17506409]
[-26.20507812 -204.98463440]
[-24.01214790 -221.23649597]
[-8.74048138 -227.21214294]
[3.89974117 -216.76432800]
[0.90534174 -200.64086914]
[6.37114668 -186.67216492]
[11.83695221 -172.70344543]
[17.30275726 -158.73472595]
[24.70957565 -159.91329956]
[46.93003464 -163.44902039]
[47.79027176 -178.42433167]
[48.65050888 -193.39964294]
[49.51074600 -208.37495422]
[50.37098694 -223.35026550]
[39.66918182 -234.97984314]
[40.40867615 -250.76681519]
[52.15074158 -261.34506226]
[67.92902374 -260.43872070]
[78.38253784 -248.58546448]
[77.30941010 -232.81764221]
[65.34629822 -222.49003601]
[64.48606110 -207.51472473]
[63.62582397 -192.53939819]
[62.76558304 -177.56408691]
[61.90534592 -162.58877563]
[69.47457123 -145.78285217]
[67.90991211 -128.99624634]
[59.11994553 -116.48279572]
[46.66444016 -110.70102692]
[48.38208389 -95.79969025]
[50.09972763 -80.89836121]
[51.81737518 -65.99703217]
[53.53501892 -51.09569550]
[55.25266266 -36.19436646]
[72.77953339 -19.60717201]
[74.18562317 1.64081490]
[62.46747971 15.91760826]
[68.33174896 29.72377968]
[74.19601440 43.52994919]
[80.06027985 57.33612061]
[85.92455292 71.14229584]
[97.41368103 68.14037323]
[109.15430450 69.52371216]
[119.53758240 75.06388855]
[127.15482330 83.96552277]
[130.98861694 94.98027802]
[130.54858398 106.58182526]
[145.54510498 106.25908661]
[160.54164124 105.93634033]
[175.53816223 105.61360168]
[189.16867065 97.58116913]
[202.05946350 105.04283142]
[217.05599976 104.72009277]
[232.05252075 104.39735413]
[245.68302917 96.36491394]
[258.57382202 103.82658386]
[273.57034302 103.50384521]
[287.20086670 95.47140503]
[300.09164429 102.93307495]
[315.08819580 102.61033630]
[330.08471680 102.28759003]
[345.08123779 101.96485138]
[353.58767700 98.65314484]
[360.29486084 101.74659729]
[375.29446411 101.63900757]
[390.29406738 101.53141785]
[400.11944580 89.36605072]
[415.47570801 86.41320801]
[429.11209106 94.06713867]
[434.58993530 108.71389008]
[429.32275391 123.43770599]
[415.79757690 131.28646851]
[400.40051270 128.55419922]
[390.40167236 116.53102875]
[375.40203857 116.63861847]
[360.40243530 116.74620819]
[345.40399170 116.96138000]
[330.40744019 117.28411865]
[315.41091919 117.60685730]
[300.41439819 117.92960358]
[287.85653687 125.93894958]
[273.89309692 118.50036621]
[258.89657593 118.82311249]
[246.33871460 126.83245850]
[232.37525940 119.39387512]
[217.37873840 119.71662140]
[202.38220215 120.03936005]
[189.82435608 128.04870605]
[175.86090088 120.61013031]
[160.86437988 120.93286896]
[145.86784363 121.25560760]
[130.87132263 121.57835388]
[120.00182343 131.91537476]
[118.92685699 146.87680054]
[125.65528107 161.19598389]
[117.02577972 173.33604431]
[115.95081329 188.29747009]
[114.87585449 203.25891113]
[113.80088806 218.22033691]
[112.72592163 233.18176270]
[115.23121643 241.95959473]
[111.52671051 248.34960938]
[110.23723602 263.29409790]
[108.94776917 278.23855591]
[107.65829468 293.18304443]
[106.36882019 308.12750244]
[105.07935333 323.07196045]
[103.78987885 338.01644897]
[102.60762787 352.96978760]
[101.53266144 367.93121338]
[102.71491241 382.88455200]
[106.12760925 397.49118042]
[109.54029846 412.09780884]
[112.95298767 426.70443726]
[116.36568451 441.31106567]
[125.85706329 455.35919189]
[114.98541260 468.36856079]
[99.47488403 461.52313232]
[101.75905609 444.72375488]
[98.34636688 430.11712646]
[94.93367004 415.51049805]
[91.52098083 400.90386963]
[88.10828400 386.29724121]
[80.60848236 386.24343872]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[20 204]
[21 203]
[23 202]
[24 201]
[25 200]
[26 199]
[27 198]
[28 197]
[29 196]
[30 194]
[31 193]
[32 192]
[33 191]
[34 190]
[36 188]
[37 187]
[40 55]
[41 54]
[42 53]
[43 52]
[44 51]
[56 135]
[57 134]
[58 133]
[59 132]
[60 131]
[62 73]
[63 72]
[64 71]
[65 70]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[91 102]
[92 101]
[93 100]
[94 99]
[104 119]
[105 118]
[106 117]
[107 116]
[108 115]
[141 186]
[142 185]
[143 184]
[144 183]
[146 181]
[147 180]
[148 179]
[150 177]
[151 176]
[153 174]
[154 173]
[155 172]
[156 171]
[158 170]
[159 169]
[160 168]
[205 217]
[206 216]
[207 215]
[208 214]
[209 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
