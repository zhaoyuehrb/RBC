%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAACUGGGAGGCGGCCCCGCCUCUGGGCAUCCUCCUGGGUCUUGCCUAGCGGCGGGCGCAUGCUUAGUCACCGUGAGGCUGCGCUUGCCCGGGGCCCGCGCCCCCCUACCCCGGGGACCGCCCCCGGGCCGCCCGCCCCACUUGGCGCGCCACUUCCGCGUGC\
) } def
/len { sequence length } bind def

/coor [
[154.31834412 314.63528442]
[145.54237366 305.34899902]
[140.92828369 293.38400269]
[141.19897461 280.51614380]
[146.34951782 268.66989136]
[155.64250183 259.63027954]
[150.60176086 245.50260925]
[145.56101990 231.37493896]
[140.52027893 217.24726868]
[124.90338135 205.89031982]
[128.70899963 186.12467957]
[123.13406372 172.19917297]
[117.55912781 158.27365112]
[111.98419189 144.34812927]
[106.40925598 130.42260742]
[100.83432007 116.49709320]
[87.77313232 109.12109375]
[72.96913910 111.53810883]
[58.16515350 113.95511627]
[43.36116409 116.37213135]
[28.55717659 118.78913879]
[13.75318909 121.20615387]
[1.38009286 131.06602478]
[-12.42760849 125.48062897]
[-27.23159599 127.89763641]
[-42.03558350 130.31465149]
[-56.83957291 132.73165894]
[-71.64356232 135.14866638]
[-86.44754791 137.56567383]
[-101.25153351 139.98269653]
[-115.98046875 142.82145691]
[-130.62232971 146.07966614]
[-145.26419067 149.33787537]
[-156.97366333 160.81918335]
[-172.69674683 156.15905762]
[-176.25888062 140.15145874]
[-163.99563599 129.26362610]
[-148.52239990 134.69601440]
[-133.88053894 131.43780518]
[-119.23867798 128.17959595]
[-117.03706360 125.37081146]
[-113.34529114 123.50932312]
[-108.63323975 123.29296875]
[-103.66854858 125.17870331]
[-88.86455536 122.76169586]
[-74.06056976 120.34468079]
[-59.25658417 117.92767334]
[-44.45259476 115.51065826]
[-29.64860725 113.09365082]
[-14.84461975 110.67663574]
[-3.53040338 100.98964691]
[11.33617783 106.40216064]
[26.14016533 103.98515320]
[40.94415283 101.56813812]
[55.74814224 99.15113068]
[70.55213165 96.73411560]
[85.35611725 94.31710815]
[83.46995544 89.44525146]
[83.05723572 83.69098663]
[78.28638458 69.46990967]
[73.51553345 55.24883652]
[61.79077530 44.62618637]
[65.07829285 30.09891891]
[60.30744171 15.87784386]
[48.58268738 5.25519371]
[51.87020493 -9.27207375]
[47.09934998 -23.49314690]
[42.32849884 -37.71422195]
[37.55764389 -51.93529510]
[32.78679276 -66.15637207]
[18.16756248 -71.70724487]
[10.58178139 -85.38166809]
[13.61121845 -100.72299957]
[25.82546997 -110.48753357]
[41.45733643 -110.06475067]
[53.12593079 -99.65428162]
[55.32169724 -84.17163086]
[47.00786591 -70.92722321]
[51.77872086 -56.70615005]
[56.54957199 -42.48507690]
[61.32042694 -28.26400185]
[66.09127808 -14.04292679]
[77.47479248 -4.43746281]
[74.52851868 11.10699081]
[79.29936981 25.32806587]
[90.68288422 34.93352890]
[87.73660278 50.47798157]
[92.50746155 64.69905853]
[97.27831268 78.92012787]
[111.40597534 83.96086884]
[124.10140991 75.97175598]
[136.79684448 67.98264313]
[149.49227905 59.99352264]
[162.18771362 52.00440979]
[174.88314819 44.01529312]
[177.35568237 39.31521988]
[181.03050232 36.35787201]
[185.02978516 35.30897522]
[188.53933716 35.95658112]
[201.67015076 28.70526314]
[214.80096436 21.45394325]
[219.28010559 6.53499508]
[232.69992065 -0.63182056]
[246.89526367 3.73029828]
[260.02609253 -3.52102089]
[273.15689087 -10.77233982]
[286.28771973 -18.02365875]
[290.42669678 -33.27634048]
[304.18002319 -41.06231689]
[319.38809204 -36.76229858]
[327.02822876 -22.92741776]
[322.56765747 -7.76565933]
[308.65277100 -0.27222732]
[293.53903198 -4.89284182]
[280.40820312 2.35847735]
[267.27740479 9.60979652]
[254.14657593 16.86111641]
[250.27796936 31.19880867]
[237.06474304 38.73973083]
[222.05229187 34.58476257]
[208.92147827 41.83607864]
[195.79064941 49.08739853]
[182.87225342 56.71072769]
[170.17683411 64.69984436]
[157.48139954 72.68895721]
[144.78596497 80.67807007]
[132.09053040 88.66719055]
[119.39509583 96.65630341]
[114.75984192 110.92214966]
[120.33477783 124.84767151]
[125.90971375 138.77319336]
[131.48464966 152.69871521]
[137.05958557 166.62422180]
[142.63452148 180.54974365]
[152.91616821 184.27021790]
[159.30097961 192.87384033]
[159.85931396 203.35275269]
[154.64794922 212.20652771]
[159.68869019 226.33419800]
[164.72943115 240.46186829]
[169.77017212 254.58952332]
[187.09085083 257.32260132]
[200.59051514 268.37390137]
[206.62864685 284.64730835]
[203.63557434 301.65472412]
[192.51931763 314.75366211]
[198.09425354 328.67916870]
[203.66918945 342.60470581]
[209.24412537 356.53021240]
[214.81906128 370.45574951]
[220.39399719 384.38125610]
[235.30627441 389.08847046]
[243.66033936 402.30755615]
[241.51167297 417.79681396]
[229.87478638 428.24270630]
[214.24427795 428.71301270]
[202.00038147 418.98568726]
[198.92431641 403.65362549]
[206.46847534 389.95620728]
[200.89353943 376.03067017]
[195.31860352 362.10516357]
[189.74366760 348.17962646]
[184.16873169 334.25411987]
[178.59379578 320.32861328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 141]
[7 140]
[8 139]
[9 138]
[11 134]
[12 133]
[13 132]
[14 131]
[15 130]
[16 129]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[24 50]
[25 49]
[26 48]
[27 47]
[28 46]
[29 45]
[30 44]
[31 40]
[32 39]
[33 38]
[59 89]
[60 88]
[61 87]
[63 85]
[64 84]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[90 128]
[91 127]
[92 126]
[93 125]
[94 124]
[95 123]
[99 122]
[100 121]
[101 120]
[104 117]
[105 116]
[106 115]
[107 114]
[146 164]
[147 163]
[148 162]
[149 161]
[150 160]
[151 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
