%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCCUAGGGCUGCGGCGCCUUUGUGAGCGCGGCCGCCGGCCAGGAUCGAGCCCUGGCCCGGGCCCUGGCCCAGCCCCGGCCUCCAAGGACCGCGCCGAAGGAGGUGCCCACUGGAGGGAGGAGGCGCUCGACUUUCUCAGGAUACUGUCCCUCUCCCACAGAGGAGCUGAAGGAGUAGGACAGAAGAACUGUCAAAUUCUGGAAUCCUUAAAGCC\
) } def
/len { sequence length } bind def

/coor [
[47.69702911 263.14767456]
[47.09432983 248.04377747]
[50.97197342 233.43367004]
[58.98516083 220.61648560]
[70.42136383 210.73191833]
[84.26368713 204.65890503]
[82.53820038 189.75846863]
[80.81270599 174.85804749]
[79.08721924 159.95762634]
[64.73704529 155.59042358]
[55.00354385 167.00352478]
[45.27004242 178.41664124]
[42.20222092 193.93756104]
[28.05638504 198.60067749]
[18.32288551 210.01377869]
[15.25506306 225.53469849]
[1.10922801 230.19781494]
[-8.62427139 241.61091614]
[-18.35777092 253.02401733]
[-28.09127045 264.43713379]
[-37.74228287 275.92007446]
[-37.67930984 291.96301270]
[-50.27268982 301.90213013]
[-65.86185455 298.11300659]
[-72.48813629 283.50234985]
[-65.06841278 269.27816772]
[-49.29446793 266.35205078]
[-47.44971085 259.19940186]
[-39.50437546 254.70362854]
[-29.77087784 243.29052734]
[-20.03737831 231.87742615]
[-10.30387783 220.46430969]
[-7.93226004 205.75973511]
[6.90978003 200.28027344]
[16.64328003 188.86717224]
[19.01489639 174.16259766]
[33.85693741 168.68313599]
[43.59043503 157.27003479]
[53.32393646 145.85691833]
[46.16971970 132.67294312]
[31.29570770 134.61297607]
[16.42169380 136.55300903]
[1.54768097 138.49304199]
[-13.32633209 140.43307495]
[-28.20034599 142.37310791]
[-43.07435989 144.31314087]
[-51.33921814 157.58816528]
[-66.21945953 162.39570618]
[-80.68908691 156.46578979]
[-87.91598511 142.59834290]
[-84.48783875 127.34116364]
[-72.02330780 117.89820099]
[-56.40776443 118.72814941]
[-45.01439285 129.43913269]
[-30.14037704 127.49909210]
[-15.26636410 125.55906677]
[-0.39235094 123.61903381]
[14.48166275 121.67900085]
[29.35567665 119.73896790]
[44.22969055 117.79893494]
[46.28902054 102.36370087]
[52.20680618 89.26380920]
[38.24746323 83.77411652]
[24.28812027 78.28442383]
[10.32877731 72.79472351]
[-5.79977083 75.76153564]
[-16.22594452 63.10345459]
[-10.22418785 47.84203339]
[6.03140450 45.67691422]
[15.81847382 58.83538055]
[29.77781677 64.32508087]
[43.73715973 69.81477356]
[57.69649887 75.30447388]
[67.94640350 62.95918274]
[81.63572693 54.58845139]
[78.20765686 39.98542404]
[74.77958679 25.38240051]
[71.24639130 10.80445576]
[67.60823822 -3.74765325]
[54.33872604 -11.90594864]
[50.85642624 -26.71568298]
[58.71588898 -39.31585693]
[55.07773972 -53.86796570]
[51.43959045 -68.42007446]
[47.80144119 -82.97218323]
[44.16329193 -97.52429199]
[40.52513885 -112.07640076]
[27.42120171 -125.01692200]
[32.90843964 -141.68830872]
[29.06096268 -156.18647766]
[25.38529778 -159.87809753]
[23.66199875 -164.17977905]
[23.79696274 -168.24700928]
[25.37502289 -171.39462280]
[22.15774727 -186.04553223]
[18.94046974 -200.69644165]
[15.72319412 -215.34735107]
[12.50591755 -229.99826050]
[-0.93967539 -238.30436707]
[-4.49247408 -253.70414734]
[3.95533347 -267.06118774]
[19.39181328 -270.45095825]
[32.65877533 -261.86239624]
[35.88516617 -246.39094543]
[27.15682602 -233.21553040]
[30.37410355 -218.56462097]
[33.59138107 -203.91371155]
[36.80865479 -189.26280212]
[40.02593231 -174.61189270]
[43.55913162 -160.03395081]
[47.40660858 -145.53578186]
[57.70471573 -139.19572449]
[61.03088379 -127.15260315]
[55.07724762 -115.71455383]
[58.71540070 -101.16244507]
[62.35354996 -86.61033630]
[65.99169922 -72.05822754]
[69.62984467 -57.50611877]
[73.26799774 -42.95401001]
[86.13243103 -35.53498077]
[90.02932739 -20.82889938]
[82.16034698 -7.38580275]
[85.79850006 7.16630554]
[90.46788025 12.88998413]
[89.38261414 21.95433235]
[92.81068420 36.55735779]
[96.23875427 51.16038132]
[110.78195190 52.21710587]
[124.36973572 57.50798416]
[135.79804993 66.56417847]
[144.05422974 78.58319092]
[148.40666199 92.50000000]
[163.40666199 92.50000000]
[178.40666199 92.50000000]
[194.13906860 82.92597198]
[208.98175049 92.29290009]
[223.98019409 92.07673645]
[238.97863770 91.86058044]
[253.97708130 91.64442444]
[257.34030151 85.69767761]
[262.33621216 81.11347198]
[268.45590210 78.31568909]
[275.08905029 77.54840088]
[281.58483887 78.85491943]
[287.31573486 82.07662964]
[291.73809814 86.87147522]
[294.44375610 92.75007629]
[309.40484619 93.82996368]
[324.36590576 94.90985107]
[339.32699585 95.98973846]
[354.28805542 97.06963348]
[369.24914551 98.14952087]
[381.13769531 88.08473969]
[396.29498291 89.39302063]
[405.81695557 100.78897858]
[420.77801514 101.86886597]
[435.73910522 102.94875336]
[450.70019531 104.02864075]
[462.58874512 93.96385956]
[477.74603271 95.27214813]
[487.26797485 106.66809845]
[502.22906494 107.74798584]
[517.19012451 108.82787323]
[530.21362305 99.45938873]
[545.61859131 103.93894196]
[551.58770752 118.83019257]
[543.54193115 132.70986938]
[527.65332031 134.93064880]
[516.11022949 123.78895569]
[501.14916992 122.70906830]
[486.18811035 121.62917328]
[475.12823486 131.53953552]
[459.94021606 130.65750122]
[449.62030029 118.98971558]
[434.65921021 117.90982819]
[419.69815063 116.82994080]
[404.73706055 115.75005341]
[393.67721558 125.66041565]
[378.48916626 124.77838135]
[368.16925049 113.11059570]
[353.20819092 112.03070831]
[338.24710083 110.95082092]
[323.28601074 109.87093353]
[308.32495117 108.79104614]
[293.36386108 107.71115112]
[273.86145020 120.12967682]
[254.19323730 106.64286804]
[239.19479370 106.85902405]
[224.19635010 107.07518005]
[209.19790649 107.29133606]
[200.54942322 115.74420929]
[188.05917358 116.05008698]
[178.40666199 107.50000000]
[163.40666199 107.50000000]
[148.40666199 107.50000000]
[146.44477844 120.02325439]
[141.20210266 132.00158691]
[132.83961487 142.56777954]
[121.74872589 150.90447998]
[108.53531647 156.30552673]
[93.98764801 158.23213196]
[95.71313477 173.13255310]
[97.43862152 188.03298950]
[99.16410828 202.93341064]
[114.02801514 205.68220520]
[127.42055511 212.69157410]
[138.15087891 223.33824158]
[145.26487732 236.67550659]
[148.12994385 251.51742554]
[146.49133301 266.54428101]
[140.49475098 280.41989136]
[130.67341614 291.91043091]
[117.90061951 299.99420166]
[103.31211853 303.95236206]
[88.20510864 303.43298340]
[73.92290497 298.48220825]
[61.73545837 289.54031372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 204]
[7 203]
[8 202]
[9 201]
[10 39]
[11 38]
[12 37]
[14 35]
[15 34]
[17 32]
[18 31]
[19 30]
[20 29]
[21 27]
[40 60]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[62 73]
[63 72]
[64 71]
[65 70]
[75 127]
[76 126]
[77 125]
[78 123]
[79 122]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
[89 111]
[90 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[132 195]
[133 194]
[134 193]
[136 190]
[137 189]
[138 188]
[139 187]
[147 185]
[148 184]
[149 183]
[150 182]
[151 181]
[152 180]
[155 177]
[156 176]
[157 175]
[158 174]
[161 171]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
