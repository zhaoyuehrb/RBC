%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGACGGCCCGCCCCGCGGGGGGUGGGCGCAGCUCGUCGCGCUCCGCACAAAGUUUGUUUUCUCCCUCCGGGCGGGUGGGGGAGGGCGCAGAGGGCGCGGGGGGAGGAGAGGGGAUCUGACGUCAGGCCGCGAGGUGCUUUCCAGCCGCGAGCUGUCAGGCCGAGUGUCAGGCCGGGCAGGUUUACCCAAGGUCCAGCCUAGCCCCUAGGCACC\
) } def
/len { sequence length } bind def

/coor [
[94.58557129 135.86091614]
[93.70934296 120.88652802]
[86.40088654 119.20236206]
[83.03231049 133.81922913]
[68.41549683 130.45040894]
[71.78396606 115.83402252]
[64.47550201 114.14985657]
[57.13423538 127.23059845]
[49.79296875 140.31134033]
[42.45170212 153.39208984]
[35.11043549 166.47282410]
[27.76916695 179.55355835]
[20.42789841 192.63430786]
[13.08663082 205.71504211]
[5.74536324 218.79579163]
[6.48598242 235.17820740]
[-7.47514915 243.78161621]
[-21.77601624 235.75558472]
[-21.70511246 219.35659790]
[-7.33537817 211.45451355]
[0.00588978 198.37377930]
[7.34715748 185.29304504]
[14.68842506 172.21229553]
[22.02969360 159.13156128]
[29.37096024 146.05081177]
[36.71222687 132.97007751]
[44.05349731 119.88933563]
[51.39476395 106.80859375]
[51.94259262 91.81859589]
[45.57574463 78.23687744]
[39.20889282 64.65515137]
[32.84204102 51.07342911]
[26.47519302 37.49170303]
[20.10834122 23.90998077]
[13.74149132 10.32825756]
[7.37464094 -3.25346613]
[0.90055776 -9.69299221]
[1.01560819 -17.08047295]
[-5.15211248 -30.75377655]
[-11.53141308 -37.28721237]
[-11.30843258 -44.67222214]
[-17.27570724 -58.43418503]
[-23.24298096 -72.19615173]
[-42.29587173 -78.58199310]
[-50.38047028 -96.64434052]
[-42.69093323 -114.54640198]
[-49.25555420 -128.03364563]
[-55.82017517 -141.52088928]
[-62.38479614 -155.00813293]
[-73.53353882 -153.42111206]
[-84.79714966 -155.27011108]
[-95.12718201 -160.47586060]
[-103.53458405 -168.64247131]
[-109.18418121 -179.08641052]
[-111.47712708 -190.89314270]
[-110.11315918 -202.99711609]
[-105.12636566 -214.27786255]
[-96.89031219 -223.66374207]
[-106.40090942 -235.26324463]
[-115.91151428 -246.86274719]
[-125.42211914 -258.46224976]
[-134.93272400 -270.06173706]
[-144.44332886 -281.66125488]
[-153.95393372 -293.26074219]
[-163.46453857 -304.86022949]
[-172.97514343 -316.45974731]
[-182.48574829 -328.05923462]
[-191.99635315 -339.65875244]
[-201.50694275 -351.25823975]
[-211.01754761 -362.85775757]
[-225.75067139 -368.62365723]
[-227.83702087 -383.37142944]
[-237.34762573 -394.97091675]
[-254.21958923 -393.75375366]
[-268.35159302 -402.74459839]
[-274.27944946 -418.23229980]
[-269.85153198 -434.04104614]
[-279.53060913 -445.50036621]
[-294.34640503 -451.05038452]
[-296.64801025 -465.76608276]
[-312.41561890 -466.84246826]
[-322.74075317 -478.80770874]
[-321.49771118 -494.56304932]
[-309.42398071 -504.76110840]
[-293.68267822 -503.35156250]
[-283.61282349 -491.17068481]
[-285.18872070 -475.44515991]
[-271.06524658 -470.71478271]
[-268.07131958 -455.17941284]
[-258.39224243 -443.72012329]
[-245.22669983 -445.92605591]
[-232.58872986 -441.30212402]
[-223.81542969 -430.95550537]
[-221.27944946 -417.51895142]
[-225.74812317 -404.48153687]
[-216.23751831 -392.88201904]
[-202.18466187 -387.94580078]
[-199.41804504 -372.36834717]
[-189.90745544 -360.76885986]
[-180.39685059 -349.16934204]
[-170.88624573 -337.56985474]
[-161.37564087 -325.97033691]
[-151.86503601 -314.37084961]
[-142.35443115 -302.77136230]
[-132.84382629 -291.17184448]
[-123.33322144 -279.57235718]
[-113.82261658 -267.97283936]
[-104.31201935 -256.37335205]
[-94.80141449 -244.77384949]
[-85.29080963 -233.17434692]
[-70.45066071 -235.35835266]
[-72.28919220 -251.07237244]
[-60.25429916 -259.84793091]
[-54.48874283 -273.69561768]
[-54.07967758 -282.81777954]
[-48.53644943 -287.70254517]
[-42.56917572 -301.46450806]
[-36.60190201 -315.22647095]
[-30.63462639 -328.98843384]
[-33.04412079 -345.20959473]
[-20.03442001 -355.19357300]
[-4.98878813 -348.66967773]
[-3.38488317 -332.34915161]
[-16.87266350 -323.02114868]
[-22.83993912 -309.25918579]
[-28.80721283 -295.49722290]
[-34.77448654 -281.73526001]
[-40.64105988 -267.93008423]
[-46.40661240 -254.08238220]
[-44.15568542 -239.35884094]
[-56.60297394 -229.59280396]
[-39.95156097 -216.05882263]
[-32.65395737 -196.51556396]
[-36.15525436 -176.55546570]
[-48.89755249 -161.57275391]
[-42.33293152 -148.08551025]
[-35.76831055 -134.59826660]
[-29.20368958 -121.11102295]
[-18.96209145 -120.49942780]
[-9.82630730 -115.65534973]
[-3.47503805 -107.39306641]
[-1.10661221 -97.16154480]
[-3.21334529 -86.79055786]
[-9.48101807 -78.16342163]
[-3.51374364 -64.40145874]
[2.45353079 -50.63949585]
[8.52119064 -36.92149734]
[14.68891144 -23.24819374]
[20.95636368 -9.62031651]
[27.32321548 3.96140695]
[33.69006348 17.54313087]
[40.05691528 31.12485504]
[46.42376709 44.70657730]
[52.79061508 58.28829956]
[59.15746689 71.87002563]
[65.52431488 85.45175171]
[81.23856354 57.62318039]
[118.32199860 47.85643387]
[156.99241638 70.45899963]
[171.81622314 72.75138092]
[186.64001465 75.04376221]
[201.46380615 77.33614349]
[212.29991150 66.22944641]
[227.60047913 63.64642715]
[241.48216248 70.58030701]
[248.60714722 84.36486816]
[246.23574829 99.69966888]
[235.27980042 110.68816376]
[219.95210266 113.10504913]
[206.14646912 106.02098846]
[199.17143250 92.15994263]
[184.34762573 89.86756134]
[169.52383423 87.57518005]
[154.70004272 85.28279877]
[147.55068970 98.46941376]
[157.56047058 109.64099121]
[167.57025146 120.81257629]
[177.58003235 131.98416138]
[187.67115784 143.08230591]
[197.84310913 154.10644531]
[208.01506042 165.13056946]
[218.18701172 176.15470886]
[228.35894775 187.17883301]
[246.06320190 192.24761963]
[249.24661255 209.50675964]
[259.57855225 220.38108826]
[269.91049194 231.25541687]
[285.20376587 238.57337952]
[282.40536499 255.29478455]
[265.56277466 257.23471069]
[259.03616333 241.58735657]
[248.70422363 230.71302795]
[238.37228394 219.83869934]
[226.29364014 219.21669006]
[217.59698486 210.24430847]
[217.33482361 197.35078430]
[207.16287231 186.32666016]
[196.99092102 175.30252075]
[186.81898499 164.27839661]
[176.64703369 153.25425720]
[169.80299377 150.47087097]
[166.40844727 141.99394226]
[156.39866638 130.82235718]
[146.38888550 119.65077972]
[136.37910461 108.47919464]
[129.45526123 111.36196899]
[127.52484131 126.23723602]
[115.60757446 117.12752533]
[108.68373108 120.01029968]
[109.55995178 134.98468018]
[120.54355621 146.67826843]
[118.10679626 162.53518677]
[104.11894226 170.39135742]
[89.31027985 164.22021484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[34 151]
[35 150]
[36 149]
[38 148]
[39 147]
[41 146]
[42 145]
[43 144]
[46 138]
[47 137]
[48 136]
[49 135]
[58 110]
[59 109]
[60 108]
[61 107]
[62 106]
[63 105]
[64 104]
[65 103]
[66 102]
[67 101]
[68 100]
[69 99]
[70 98]
[72 96]
[73 95]
[77 90]
[78 89]
[80 87]
[111 131]
[113 129]
[114 128]
[116 127]
[117 126]
[118 125]
[119 124]
[159 174]
[160 173]
[161 172]
[162 171]
[175 205]
[176 204]
[177 203]
[178 202]
[179 200]
[180 199]
[181 198]
[182 197]
[183 196]
[185 193]
[186 192]
[187 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
