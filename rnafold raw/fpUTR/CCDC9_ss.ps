%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAGGACCGGAAGUGACCCUCUUUAUUUCCCUUCCUCACGUGGUGCAGGCAGGAAGUGACGCGCCUGGCCCGGGAGCUGCGGUCGCAGAGGCCGACGGAGCCGGAGUCGCGGACGCCGCGGGGUCUCCGGGACAGGAACCCUCAGUGCUGCGUCUAGAUUCUGCAGGGGAGGUUUGCUGGGACCUUGGCUCCACGCAGCCAGCGAA\
) } def
/len { sequence length } bind def

/coor [
[97.75531006 149.38049316]
[100.57062531 134.64753723]
[103.38579559 119.91407776]
[96.01906586 118.50649261]
[87.31262207 130.72114563]
[78.60617828 142.93580627]
[69.89972687 155.15045166]
[72.30928040 170.53979492]
[63.30570602 182.80317688]
[48.61947250 185.00546265]
[39.91302872 197.22012329]
[31.20658302 209.43478394]
[22.50013733 221.64942932]
[13.79369259 233.86408997]
[5.08724689 246.07875061]
[-3.61919808 258.29339600]
[-12.32564354 270.50805664]
[-9.46509838 286.05133057]
[-18.50179863 299.01718140]
[-34.07442856 301.71322632]
[-46.94402695 292.53994751]
[-49.47528458 276.93969727]
[-40.16645432 264.16778564]
[-24.54029846 261.80160522]
[-15.83385372 249.58695984]
[-7.12740850 237.37229919]
[1.57903647 225.15765381]
[10.28548145 212.94299316]
[18.99192619 200.72833252]
[27.69837189 188.51368713]
[36.40481567 176.29902649]
[33.69596100 161.69773865]
[42.35153198 149.18630981]
[57.68507385 146.44401550]
[66.39151764 134.22935486]
[75.09796143 122.01470184]
[83.80441284 109.80004120]
[80.82996368 102.91508484]
[74.88105774 89.14517212]
[71.90660858 82.26021576]
[57.04498291 80.22747040]
[48.11602020 82.16532898]
[41.97490311 78.05016327]
[27.14567184 75.79319000]
[12.31644058 73.53622437]
[3.35922742 75.33900452]
[-2.71903563 71.13155365]
[-17.51248741 68.65087891]
[-32.30593872 66.17019653]
[-47.09939194 63.68951797]
[-61.89284515 61.20883942]
[-74.67439270 70.11219025]
[-89.64172363 67.38569641]
[-98.05094147 55.14557266]
[-110.77344513 64.52178955]
[-126.38687134 62.07303619]
[-135.62805176 49.25210953]
[-133.01435852 33.66544342]
[-120.09645081 24.56032944]
[-104.53829193 27.33866501]
[-95.57025909 40.35211945]
[-83.62826538 31.52464485]
[-68.59026337 33.82966614]
[-59.41216660 46.41538620]
[-44.61871338 48.89606476]
[-29.82526016 51.37674332]
[-15.03180790 53.85742569]
[-0.23835601 56.33810425]
[14.57340813 58.70699310]
[29.40263939 60.96396255]
[44.23186874 63.22092819]
[59.07772446 65.36584473]
[73.93935394 67.39858246]
[88.38841248 63.37060928]
[100.05509949 53.94254303]
[111.72178650 44.51448059]
[123.38848114 35.08641815]
[135.05516052 25.65835571]
[146.72186279 16.23029137]
[158.38854980 6.80222845]
[164.25885010 -7.88960934]
[179.02104187 -9.87126637]
[190.68772888 -19.29932976]
[202.35441589 -28.72739220]
[214.02110291 -38.15545654]
[219.89140320 -52.84729385]
[234.65359497 -54.82894897]
[246.32029724 -64.25701141]
[257.98696899 -73.68507385]
[269.58212280 -83.20097351]
[281.10510254 -92.80416870]
[292.62805176 -102.40736389]
[304.15103149 -112.01055145]
[315.67398071 -121.61374664]
[317.25158691 -137.11048889]
[329.07431030 -146.68533325]
[343.83837891 -145.08583069]
[342.94659424 -160.46473694]
[351.18508911 -173.27023315]
[365.21820068 -178.70486450]
[379.58859253 -174.87991333]
[391.11154175 -184.48310852]
[395.70187378 -192.38314819]
[402.88183594 -194.14273071]
[414.54852295 -203.57080078]
[426.21520996 -212.99887085]
[437.88189697 -222.42692566]
[449.54858398 -231.85499573]
[461.21527100 -241.28305054]
[463.35055542 -254.00480652]
[473.26385498 -261.61718750]
[485.30746460 -260.47113037]
[497.11520386 -269.72192383]
[508.92297363 -278.97268677]
[520.73071289 -288.22348022]
[532.53845215 -297.47427368]
[544.34625244 -306.72503662]
[550.43774414 -321.32653809]
[565.22821045 -323.08502197]
[577.03594971 -332.33581543]
[588.55889893 -341.93899536]
[599.78656006 -351.88583374]
[611.01422119 -361.83267212]
[622.24188232 -371.77951050]
[633.46954346 -381.72634888]
[637.81915283 -389.76144409]
[644.94274902 -391.73709106]
[656.31933594 -401.51321411]
[667.69592285 -411.28933716]
[668.63824463 -427.06552124]
[680.51531982 -437.49197388]
[696.28063965 -436.38293457]
[706.58093262 -424.39630127]
[705.30529785 -408.64358521]
[693.21044922 -398.47058105]
[677.47204590 -399.91271973]
[666.09545898 -390.13659668]
[654.71887207 -380.36047363]
[643.41638184 -370.49868774]
[632.18872070 -360.55184937]
[620.96105957 -350.60501099]
[609.73339844 -340.65817261]
[598.50573730 -330.71133423]
[598.20312500 -327.92224121]
[596.77618408 -325.08514404]
[594.20111084 -322.62933350]
[590.61010742 -320.98480225]
[586.28674316 -320.52804565]
[574.47900391 -311.27728271]
[569.23199463 -297.33746338]
[553.59698486 -294.91729736]
[541.78924561 -285.66650391]
[529.98150635 -276.41574097]
[518.17376709 -267.16494751]
[506.36599731 -257.91415405]
[494.55825806 -248.66337585]
[488.89428711 -232.05461121]
[470.64334106 -229.61636353]
[458.97665405 -220.18830872]
[447.30996704 -210.76023865]
[435.64328003 -201.33216858]
[423.97659302 -191.90411377]
[412.30990601 -182.47604370]
[400.71475220 -172.96014404]
[389.19177246 -163.35696411]
[390.36373901 -148.53250122]
[382.48858643 -135.70886230]
[368.40780640 -129.91355896]
[353.44155884 -133.56286621]
[352.35357666 -118.75233459]
[340.80444336 -108.84918213]
[325.27719116 -110.09078217]
[313.75421143 -100.48758698]
[302.23126221 -90.88439941]
[290.70828247 -81.28120422]
[279.18533325 -71.67800903]
[276.05880737 -64.97929382]
[267.41503906 -62.01838684]
[255.74835205 -52.59032440]
[244.08166504 -43.16226196]
[239.04583740 -29.14478302]
[223.44917297 -26.48876762]
[211.78248596 -17.06070328]
[200.11579895 -7.63264084]
[188.44909668 1.79542243]
[183.41328430 15.81290245]
[167.81660461 18.46891785]
[156.14991760 27.89698029]
[144.48323059 37.32504272]
[132.81654358 46.75310516]
[121.14985657 56.18117142]
[109.48316193 65.60923004]
[97.81647491 75.03730011]
[129.07325745 80.44898224]
[140.05010986 120.54709625]
[143.63984680 135.11122131]
[147.22958374 149.67535400]
[160.15980530 159.17213440]
[160.65278625 175.20761108]
[148.33035278 185.48074341]
[132.64521790 182.11085510]
[125.62967682 167.68304443]
[132.66545105 153.26509094]
[129.07571411 138.70095825]
[125.48598480 124.13683319]
[118.11925507 122.72924805]
[115.30408478 137.46270752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 37]
[5 36]
[6 35]
[7 34]
[10 31]
[11 30]
[12 29]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[40 73]
[41 72]
[43 71]
[44 70]
[45 69]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[54 61]
[74 193]
[75 192]
[76 191]
[77 190]
[78 189]
[79 188]
[80 187]
[82 185]
[83 184]
[84 183]
[85 182]
[87 180]
[88 179]
[89 178]
[90 176]
[91 175]
[92 174]
[93 173]
[94 172]
[97 169]
[101 165]
[102 164]
[104 163]
[105 162]
[106 161]
[107 160]
[108 159]
[109 158]
[112 156]
[113 155]
[114 154]
[115 153]
[116 152]
[117 151]
[119 149]
[120 148]
[121 143]
[122 142]
[123 141]
[124 140]
[125 139]
[127 138]
[128 137]
[129 136]
[195 205]
[196 204]
[197 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
