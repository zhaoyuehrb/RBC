%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUGCCUUCCCGGGCGCAUAUGCGAGCGCAGCACCCGGCGCUGCCGAGCCACCUCCCCCGCCGCCCGCUAGCAAGUUUGGCGGCUCCAAGCCAGGCGCGCCUCAGGAUCCAGGCUCAUUUGCUUCCACCUAGCUUCGGUGCCCCCUGCUAGGCGGGGACCCUCGAGAGCG\
) } def
/len { sequence length } bind def

/coor [
[96.99256897 114.75949097]
[87.07695007 126.01473999]
[77.16133881 137.26998901]
[67.34773254 148.61428833]
[57.63694000 160.04672241]
[47.92614365 171.47914124]
[38.21535110 182.91157532]
[28.50455666 194.34400940]
[18.89736366 205.86363220]
[9.39455414 217.46952820]
[24.33667374 216.15306091]
[36.71570587 224.62416077]
[40.89969635 239.02882385]
[34.98509598 252.81350708]
[21.66281128 259.70675659]
[6.99393797 256.57238770]
[-2.34778047 244.83644104]
[-2.11260462 229.83926392]
[-13.00253677 240.15475464]
[-23.89246941 250.47024536]
[-28.04306412 266.33544922]
[-43.92745209 270.41198730]
[-55.20513535 258.50628662]
[-50.27460480 242.86589050]
[-34.20796204 239.58030701]
[-23.31802940 229.26481628]
[-12.42809677 218.94932556]
[-2.21133304 207.96672058]
[7.29147577 196.36082458]
[9.10238552 189.16856384]
[17.07212448 184.63320923]
[26.78291893 173.20079041]
[36.49371338 161.76835632]
[46.20450974 150.33592224]
[55.91530228 138.90348816]
[57.85576630 131.74508667]
[65.90608978 127.35437012]
[75.82170105 116.09912109]
[85.73731995 104.84387207]
[87.08961487 89.90496063]
[79.35630798 77.05210114]
[71.62300110 64.19924164]
[63.88969040 51.34638596]
[56.15638351 38.49352646]
[49.02537155 32.72856903]
[48.40189743 25.33807182]
[40.90189743 12.34769154]
[33.40189743 -0.64268935]
[18.40037346 -4.83698177]
[10.97935963 -18.11791611]
[15.07042599 -32.39372635]
[7.57042599 -45.38410568]
[-3.43181562 -43.00758362]
[-14.65868568 -43.55887604]
[-25.34547997 -46.99235535]
[-34.76637650 -53.06634903]
[-42.28371811 -61.36014557]
[-47.39118958 -71.30310822]
[-49.74789810 -82.21395111]
[-49.20112228 -93.34740448]
[-45.79618454 -103.94513702]
[-39.77280426 -113.28739166]
[-31.54825592 -120.74186707]
[-37.84659195 -134.35549927]
[-44.14492798 -147.96913147]
[-50.44326782 -161.58276367]
[-56.74160385 -175.19639587]
[-63.03993988 -188.81002808]
[-78.32915497 -199.04391479]
[-76.10721588 -216.43682861]
[-82.65031433 -229.93452454]
[-89.19340515 -243.43223572]
[-103.06305695 -252.18235779]
[-102.14976501 -268.55606079]
[-87.39305115 -275.70947266]
[-73.97335052 -266.28378296]
[-75.69570160 -249.97532654]
[-69.15261078 -236.47761536]
[-62.60951614 -222.97991943]
[-51.27002335 -218.70591736]
[-45.71709442 -207.48529053]
[-49.42630768 -195.10836792]
[-43.12797165 -181.49473572]
[-36.82963562 -167.88110352]
[-30.53129768 -154.26747131]
[-24.23296165 -140.65383911]
[-17.93462563 -127.04020691]
[1.03179276 -127.73426819]
[18.45760536 -120.09203339]
[30.85804558 -105.59539032]
[35.73317719 -87.10155487]
[32.07178879 -68.27993774]
[20.56080627 -52.88410568]
[28.06080627 -39.89372635]
[42.46955490 -36.29878998]
[50.26067352 -23.23153496]
[46.39227676 -8.14268970]
[53.89227676 4.84769154]
[61.39227676 17.83807182]
[69.00923920 30.76021957]
[76.74254608 43.61307526]
[84.47586060 56.46593475]
[92.20916748 69.31879425]
[99.94247437 82.17164612]
[121.60330963 93.11867523]
[136.25260925 96.34323120]
[150.93043518 99.43540955]
[165.63557434 102.39495850]
[180.34071350 105.35451508]
[195.39619446 100.49212646]
[206.34669495 110.58846283]
[221.05183411 113.54801178]
[235.75695801 116.50756836]
[250.70748901 115.29018402]
[264.74011230 109.99059296]
[278.77270508 104.69100952]
[292.80532837 99.39141846]
[299.08239746 84.88713837]
[313.80758667 79.14739227]
[328.24468994 85.57745361]
[333.82843018 100.36248779]
[327.24609375 114.73079681]
[312.40283203 120.15792084]
[298.10491943 113.42403412]
[284.07229614 118.72362518]
[270.03970337 124.02321625]
[256.00708008 129.32279968]
[255.33023071 144.30752563]
[268.82794189 150.85061646]
[284.62103271 149.90795898]
[292.69857788 162.42205811]
[306.19625854 168.96514893]
[319.69396973 175.50823975]
[333.19168091 182.05133057]
[346.68936157 188.59442139]
[360.18707275 195.13751221]
[373.83270264 187.98889160]
[388.89511108 190.21989441]
[399.62866211 200.76763916]
[402.06396484 215.43757629]
[415.56164551 221.98068237]
[432.45190430 223.44902039]
[435.71661377 240.08566284]
[420.63391113 247.82827759]
[409.01855469 235.47837830]
[395.52087402 228.93528748]
[382.49588013 236.11076355]
[367.56661987 234.21830750]
[356.48480225 223.77575684]
[353.64398193 208.63520813]
[340.14627075 202.09211731]
[326.64859009 195.54902649]
[313.15087891 189.00593567]
[299.65316772 182.46284485]
[286.15548706 175.91975403]
[271.32781982 177.33042908]
[262.28485107 164.34831238]
[248.78713989 157.80522156]
[232.79740906 131.21270752]
[218.09226990 128.25315857]
[203.38714600 125.29360199]
[189.38345337 130.36767578]
[177.38116455 120.05964661]
[162.67602539 117.10009766]
[147.97088623 114.14054871]
[140.76818848 115.90950775]
[133.02806091 110.99253845]
[118.37874603 107.76798248]
[130.58117676 116.49156189]
[133.78378296 131.14569092]
[126.33306122 144.16439819]
[112.07582855 148.82609558]
[98.37313843 142.72395325]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 35]
[5 34]
[6 33]
[7 32]
[8 31]
[9 29]
[10 28]
[18 27]
[19 26]
[20 25]
[40 104]
[41 103]
[42 102]
[43 101]
[44 100]
[46 99]
[47 98]
[48 97]
[51 94]
[52 93]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[70 79]
[71 78]
[72 77]
[105 168]
[106 167]
[107 165]
[108 164]
[109 163]
[111 161]
[112 160]
[113 159]
[114 127]
[115 126]
[116 125]
[117 124]
[128 158]
[129 157]
[131 155]
[132 154]
[133 153]
[134 152]
[135 151]
[136 150]
[140 146]
[141 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
