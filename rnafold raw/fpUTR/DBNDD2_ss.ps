%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGAAGGGGUGGGCUGCAGCACUGGAGGAAGGGAACCCUCCACCCUGAGAUCUCUGUCUCUAUCCUAUCCUGUCCCUGGCCUUCUGAGGCAAGCGGGGCCAAUUAAGGGGAAAACGUACCUCCUCCAUUUGUGCUGAACCAAUCCCUCCAACCCCUCUCAGGAGGGCAUGAU\
) } def
/len { sequence length } bind def

/coor [
[279.18670654 644.22515869]
[284.00155640 636.18048096]
[290.86688232 629.76110840]
[285.31478882 615.82647705]
[279.76272583 601.89178467]
[274.34713745 596.82434082]
[274.23870850 587.65509033]
[268.93911743 573.62249756]
[263.63952637 559.58984375]
[258.33993530 545.55725098]
[253.04035950 531.52465820]
[247.61430359 517.54040527]
[242.06222534 503.60577393]
[230.81512451 501.46322632]
[221.91703796 494.06887817]
[217.66467285 483.18020630]
[219.22830200 471.47454834]
[226.33256531 461.89080811]
[221.28718567 447.76480103]
[216.24180603 433.63879395]
[211.19642639 419.51278687]
[206.15104675 405.38677979]
[201.10566711 391.26077271]
[195.67961121 377.27658081]
[189.87687683 363.44442749]
[184.07412720 349.61227417]
[178.27137756 335.78015137]
[172.46864319 321.94799805]
[166.66589355 308.11587524]
[160.86314392 294.28372192]
[155.35693359 289.31484985]
[155.08299255 280.14907837]
[149.53092957 266.21444702]
[138.52938843 261.13333130]
[133.80059814 249.54127502]
[138.39323425 237.46426392]
[133.09364319 223.43164062]
[118.16791534 223.04168701]
[104.49156189 216.95046997]
[94.16131592 206.05778503]
[88.77393341 192.00204468]
[89.17945099 176.91398621]
[95.34719849 163.09364319]
[106.36575317 152.65969849]
[101.06616211 138.62709045]
[95.76657104 124.59446716]
[90.46698761 110.56185150]
[80.05360413 99.76548767]
[66.22146606 93.96273804]
[52.38932037 88.15999603]
[38.55718231 82.35724640]
[24.72503853 76.55450439]
[8.53375340 79.15724945]
[-1.60464299 66.26753235]
[4.73936224 51.14517593]
[21.03960037 49.34677124]
[30.52778435 62.72235870]
[44.35992432 68.52510834]
[58.19206619 74.32785034]
[72.02420807 80.13059998]
[85.85635376 85.93334198]
[92.06401825 81.72444153]
[82.70715332 70.00057220]
[73.35029602 58.27669907]
[59.57486725 52.34057617]
[55.02238464 38.04809952]
[62.82680511 25.23829842]
[77.61551666 22.72952271]
[89.20787811 32.24882889]
[89.62361145 47.24311829]
[97.05148315 60.27487564]
[104.47935486 73.30663300]
[110.68701935 69.09773254]
[110.41620636 54.10017395]
[110.14539337 39.10261917]
[109.87458801 24.10506439]
[109.60377502 9.10750961]
[95.48109436 -3.47988939]
[95.01539612 -22.07364273]
[108.03670502 -34.90504074]
[107.22462463 -49.88304520]
[106.41253662 -64.86104584]
[105.60045624 -79.83904266]
[96.19564056 -93.27338409]
[103.37198639 -108.01896667]
[119.74707794 -108.90679932]
[128.47563171 -95.02355957]
[120.57845306 -80.65113068]
[121.39054108 -65.67312622]
[122.20262146 -50.69512558]
[123.01470947 -35.71712494]
[132.98893738 -30.09550095]
[139.06021118 -20.24704552]
[139.61322021 -8.57058620]
[134.39379883 2.02305341]
[124.60132599 8.83669758]
[124.87213898 23.83425331]
[125.14295197 38.83181000]
[125.41376495 53.82936478]
[125.68457794 68.82691956]
[128.72476196 78.95298767]
[128.59480286 88.47727966]
[125.81533051 96.52581024]
[121.12525177 102.45109558]
[115.40106201 105.88147736]
[109.56637573 106.74439240]
[104.49960327 105.26226044]
[109.79919434 119.29487610]
[115.09877777 133.32749939]
[120.39836884 147.36010742]
[135.56340027 147.90551758]
[149.32717896 154.19847107]
[159.60528564 165.25172424]
[164.85427856 179.35971069]
[164.30349731 194.36177063]
[158.06799316 207.97293091]
[147.12625122 218.13204956]
[152.42584229 232.16467285]
[166.93675232 243.47512817]
[163.46557617 260.66235352]
[169.01763916 274.59701538]
[174.69528198 288.48098755]
[180.49803162 302.31311035]
[186.30078125 316.14526367]
[192.10353088 329.97738647]
[197.90626526 343.80953979]
[203.70901489 357.64169312]
[209.51176453 371.47381592]
[213.72564697 374.67034912]
[216.03767395 378.76150513]
[216.42738342 382.86367798]
[215.23167419 386.21539307]
[220.27705383 400.34140015]
[225.32243347 414.46740723]
[230.36781311 428.59341431]
[235.41319275 442.71942139]
[240.45857239 456.84542847]
[257.86114502 464.26452637]
[264.23947144 481.73626709]
[255.99688721 498.05371094]
[261.54895020 511.98837280]
[267.65335083 518.83105469]
[267.07296753 526.22503662]
[272.37255859 540.25769043]
[277.67214966 554.29028320]
[282.97174072 568.32287598]
[288.27133179 582.35552979]
[293.69738770 596.33972168]
[299.24945068 610.27435303]
[304.80151367 624.20904541]
[325.80221558 627.95764160]
[340.24044800 643.47967529]
[342.43399048 664.43054199]
[331.66143799 682.37738037]
[338.68756104 695.63006592]
[345.71368408 708.88275146]
[352.73980713 722.13543701]
[359.76593018 735.38812256]
[373.94244385 743.63177490]
[373.62088013 760.02777100]
[359.13204956 767.70928955]
[345.38079834 758.77423096]
[346.51324463 742.41424561]
[339.48712158 729.16156006]
[332.46099854 715.90887451]
[325.43487549 702.65618896]
[318.40875244 689.40350342]
[309.29525757 690.56665039]
[300.19149780 689.16571045]
[291.80667114 685.29663086]
[284.79763794 679.24829102]
[279.71731567 671.48065186]
[276.97131348 662.59014893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 150]
[4 149]
[5 148]
[7 147]
[8 146]
[9 145]
[10 144]
[11 143]
[12 141]
[13 140]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[23 132]
[24 128]
[25 127]
[26 126]
[27 125]
[28 124]
[29 123]
[30 122]
[32 121]
[33 120]
[36 118]
[37 117]
[44 110]
[45 109]
[46 108]
[47 107]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[73 100]
[74 99]
[75 98]
[76 97]
[77 96]
[80 91]
[81 90]
[82 89]
[83 88]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
