%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUGAAGAGAGGCGGGACGCGGGGUGAUAACAGCUGGCUCUGGUGGGCGGGCGGGAGCUGGGGAGGAGGAGCAGGAGAGGCCCACAGGCUUCAUUUGGAGUCAGGCCUGGCUGUUGCUCAGGUGACCAGCUUGUGUCUCUGGGAGGGCGCUGCUUUCCCCGGCCACCCGGCGCG\
) } def
/len { sequence length } bind def

/coor [
[36.94481277 337.92807007]
[24.79577255 342.27523804]
[20.33811378 356.59756470]
[15.88045692 370.91992188]
[11.42279911 385.24224854]
[18.99315453 399.11541748]
[14.45628738 414.25451660]
[0.50383979 421.67779541]
[-14.58644867 416.98110962]
[-21.86177635 402.95095825]
[-17.00582123 387.91116333]
[-2.89953589 380.78457642]
[1.55812156 366.46224976]
[6.01577902 352.13992310]
[10.47343636 337.81759644]
[2.02271724 323.29345703]
[6.77011061 306.82287598]
[22.25240517 298.71145630]
[21.10456848 291.38662720]
[26.65964317 284.09521484]
[31.11730003 269.77288818]
[35.57495880 255.45054626]
[31.96946526 240.99891663]
[43.45830917 230.12155151]
[47.91596603 215.79920959]
[52.37362289 201.47688293]
[56.83127975 187.15454102]
[61.28893661 172.83221436]
[47.45883560 178.63981628]
[33.51153183 173.11959839]
[27.40214157 159.42013550]
[32.61527252 145.35516357]
[46.17751694 138.94692993]
[60.35338593 143.85046387]
[67.05750275 157.27030945]
[73.01227570 143.50292969]
[78.96704865 129.73554993]
[84.92182922 115.96817017]
[76.74108124 103.39537048]
[61.74167252 103.26225281]
[46.74226379 103.12913513]
[31.74285316 102.99601746]
[17.74271202 111.53582001]
[3.47851944 103.44477844]
[3.62405276 87.04627991]
[18.02960014 79.20968628]
[31.87596893 87.99661255]
[46.87537766 88.12973022]
[61.87478638 88.26284790]
[76.87419891 88.39595795]
[88.75421143 79.23815918]
[92.44328308 64.69887543]
[96.13235474 50.15959549]
[99.82142639 35.62031174]
[103.51050568 21.08102989]
[99.40483856 5.80182505]
[110.03461456 -4.63163710]
[113.72369385 -19.17091942]
[117.41276550 -33.71020126]
[121.10183716 -48.24948502]
[124.79090881 -62.78876877]
[128.47998047 -77.32804871]
[132.16905212 -91.86733246]
[119.30622101 -103.80241394]
[114.26718140 -120.51759338]
[118.34857178 -137.40063477]
[130.34321594 -149.84028625]
[146.89538574 -154.48568726]
[150.06613159 -169.14674377]
[153.23686218 -183.80778503]
[148.59152222 -198.93165588]
[158.84431458 -209.73580933]
[162.01504517 -224.39685059]
[165.18579102 -239.05790710]
[168.35652161 -253.71894836]
[171.52726746 -268.38000488]
[162.96774292 -278.80371094]
[161.99877930 -292.06127930]
[168.75102234 -303.28488159]
[180.56108093 -308.48287964]
[183.99153137 -323.08535767]
[187.42198181 -337.68783569]
[190.85241699 -352.29028320]
[194.28286743 -366.89276123]
[188.25971985 -374.21945190]
[186.33030701 -383.36489868]
[188.80642700 -392.23464966]
[195.00550842 -398.85690308]
[203.43257141 -401.82089233]
[207.63533020 -416.22009277]
[211.83808899 -430.61926270]
[216.04084778 -445.01846313]
[220.24360657 -459.41766357]
[224.44636536 -473.81686401]
[220.03089905 -489.61038208]
[231.69259644 -501.14022827]
[247.43490601 -496.54544067]
[251.06347656 -480.55276489]
[238.84556580 -469.61410522]
[234.64280701 -455.21490479]
[230.44003296 -440.81570435]
[226.23727417 -426.41650391]
[222.03451538 -412.01733398]
[217.83175659 -397.61813354]
[224.50382996 -378.10501099]
[208.88533020 -363.46231079]
[205.45489502 -348.85983276]
[202.02444458 -334.25738525]
[198.59399414 -319.65490723]
[195.16354370 -305.05245972]
[204.62327576 -291.16436768]
[201.05621338 -274.39852905]
[186.18832397 -265.20925903]
[183.01757812 -250.54821777]
[179.84683228 -235.88716125]
[176.67610168 -221.22612000]
[173.50535583 -206.56506348]
[178.37750244 -192.48985291]
[167.89791870 -180.63705444]
[164.72717285 -165.97599792]
[161.55644226 -151.31494141]
[171.79931641 -143.86091614]
[178.47758484 -133.04113770]
[180.56468201 -120.45134735]
[177.71420288 -107.96414185]
[170.31687927 -97.45053101]
[159.44737244 -90.49958038]
[146.70834351 -88.17826080]
[143.01927185 -73.63897705]
[139.33020020 -59.09969330]
[135.64111328 -44.56040955]
[131.95204163 -30.02112770]
[128.26296997 -15.48184586]
[124.57389832 -0.94256335]
[128.94343567 13.29669476]
[118.04978943 24.77010345]
[114.36071014 39.30938721]
[110.67163849 53.84866714]
[106.98256683 68.38795471]
[103.29348755 82.92723083]
[113.23941040 85.69139862]
[120.82861328 94.27691650]
[122.73146057 106.73103333]
[134.36347961 116.20184326]
[145.99549866 125.67264557]
[157.62750244 135.14346313]
[169.25952148 144.61425781]
[180.89154053 154.08506775]
[192.52355957 163.55587769]
[204.15557861 173.02668762]
[220.25588989 178.33857727]
[219.60861206 195.28016663]
[203.14991760 199.34806824]
[194.68476868 184.65870667]
[183.05274963 175.18789673]
[171.42073059 165.71708679]
[159.78871155 156.24627686]
[148.15669250 146.77546692]
[136.52468872 137.30465698]
[124.89266968 127.83385468]
[113.26065063 118.36304474]
[98.68920135 121.92295074]
[92.73442841 135.69032288]
[86.77965546 149.45770264]
[80.82488251 163.22508240]
[75.61127472 177.28987122]
[71.15361786 191.61219788]
[66.69596100 205.93453979]
[62.23830032 220.25688171]
[57.78064346 234.57920837]
[61.06729507 250.05526733]
[49.89729309 259.90820312]
[45.43963623 274.23052979]
[40.98197937 288.55288696]
[36.65159988 302.91421509]
[44.45013046 313.91882324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[18 175]
[20 174]
[21 173]
[22 172]
[24 170]
[25 169]
[26 168]
[27 167]
[28 166]
[35 165]
[36 164]
[37 163]
[38 162]
[39 50]
[40 49]
[41 48]
[42 47]
[51 140]
[52 139]
[53 138]
[54 137]
[55 136]
[57 134]
[58 133]
[59 132]
[60 131]
[61 130]
[62 129]
[63 128]
[68 121]
[69 120]
[70 119]
[72 117]
[73 116]
[74 115]
[75 114]
[76 113]
[80 110]
[81 109]
[82 108]
[83 107]
[84 106]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
[94 99]
[143 161]
[144 160]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
