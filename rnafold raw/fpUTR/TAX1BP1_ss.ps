%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGAGACCGCCCCGUGGGCGGAAGUGACGCAAGGCCUACUGUCGGCUGGGAGGGGAGGUGUAGCCGGUCUUUGGGGGUAGGCGGUAGUGGCGGAAGAGGUUCGGCGGCUGAUGGCGGAUCAGGAUCGGAAGCCUGCGUAACUUUCUCCCUUGAUCCGGGAGUCUUUCCACUGGAUUCACA\
) } def
/len { sequence length } bind def

/coor [
[189.50173950 549.45275879]
[186.43345642 534.76995850]
[183.36517334 520.08709717]
[178.90818787 514.16809082]
[180.37252808 505.12597656]
[177.55674744 490.39263916]
[174.74096680 475.65930176]
[171.92518616 460.92596436]
[169.10940552 446.19262695]
[160.14949036 441.21719360]
[155.31777954 431.93035889]
[156.43151855 421.30014038]
[163.36235046 412.87664795]
[161.05400085 398.05532837]
[158.74563599 383.23400879]
[156.43727112 368.41268921]
[140.49572754 352.60467529]
[148.88766479 330.98657227]
[145.31716919 316.41769409]
[141.74667358 301.84884644]
[131.20223999 291.32913208]
[135.43225098 276.08389282]
[131.86175537 261.51504517]
[128.29125977 246.94618225]
[124.72075653 232.37731934]
[121.15025330 217.80847168]
[117.57975769 203.23960876]
[107.03533936 192.71989441]
[111.26534271 177.47463989]
[107.69484711 162.90579224]
[104.12434387 148.33692932]
[100.55384827 133.76808167]
[96.98334503 119.19922638]
[86.07102966 116.57727051]
[77.41070557 107.71313477]
[74.50725555 94.46196747]
[59.57406616 93.04778290]
[44.64088058 91.63359070]
[29.70769310 90.21940613]
[15.23952389 96.62117004]
[3.29840803 87.71842194]
[-11.63477898 86.30422974]
[-26.10294914 92.70599365]
[-38.04406357 83.80324554]
[-52.97725296 82.38905334]
[-64.99514008 92.65287018]
[-80.74390411 91.32929230]
[-90.88008881 79.20355988]
[-89.39007568 63.46966553]
[-77.15785217 53.46224976]
[-61.44059372 55.11853027]
[-51.56306458 67.45587158]
[-36.62987518 68.87005615]
[-23.22982788 62.36713791]
[-10.22059059 71.37104034]
[4.71259642 72.78523254]
[18.11264420 66.28231049]
[31.12188148 75.28621674]
[46.05506897 76.70040894]
[60.98825455 78.11459351]
[75.92144012 79.52878571]
[88.07181549 70.73284912]
[91.39169312 56.10485077]
[83.23136902 42.83658600]
[86.80657959 28.04900551]
[99.50613403 20.35114861]
[102.82601166 5.72314882]
[106.14588928 -8.90485191]
[109.46576691 -23.53285217]
[112.78564453 -38.16085434]
[116.10552979 -52.78885269]
[119.42540741 -67.41685486]
[122.74528503 -82.04485321]
[121.29052734 -86.19599915]
[121.25178528 -90.18899536]
[122.40233612 -93.59408569]
[124.39816284 -96.10081482]
[126.82762146 -97.54614258]
[131.14337158 -111.91187286]
[135.45912170 -126.27761078]
[128.22842407 -140.07452393]
[132.80986023 -154.58193970]
[146.00765991 -161.39027405]
[150.32341003 -175.75601196]
[146.88381958 -191.19880676]
[157.95581055 -201.16175842]
[162.27156067 -215.52748108]
[166.46383667 -229.92973328]
[170.53234863 -244.36743164]
[174.60086060 -258.80514526]
[170.89668274 -274.18661499]
[181.79600525 -284.33816528]
[185.86451721 -298.77587891]
[182.16032410 -314.15734863]
[193.05964661 -324.30889893]
[197.12815857 -338.74658203]
[201.19667053 -353.18429565]
[196.63435364 -368.93603516]
[208.18818665 -380.57394409]
[223.97257996 -376.12591553]
[227.74990845 -360.16772461]
[215.63436890 -349.11578369]
[211.56585693 -334.67807007]
[207.49736023 -320.24038696]
[211.49253845 -305.89160156]
[200.30221558 -294.70736694]
[196.23370361 -280.26965332]
[200.22889709 -265.92086792]
[189.03855896 -254.73663330]
[184.97004700 -240.29893494]
[180.90155029 -225.86122131]
[182.11660767 -218.55210876]
[176.63729858 -211.21173096]
[172.32153320 -196.84600830]
[176.06982422 -182.43074036]
[164.68914795 -171.44026184]
[160.37339783 -157.07452393]
[167.63406372 -144.12005615]
[163.46192932 -129.48968506]
[149.82485962 -121.96186066]
[145.50910950 -107.59612274]
[141.19335938 -93.23039246]
[137.37329102 -78.72497559]
[134.05340576 -64.09697723]
[130.73352051 -49.46897507]
[127.41365051 -34.84097290]
[124.09376526 -20.21297264]
[120.77388763 -5.58497238]
[117.45401001 9.04302788]
[114.13413239 23.67102814]
[122.26655579 36.09677887]
[119.10810852 50.97894669]
[106.01969910 59.42472839]
[102.69981384 74.05272675]
[121.95800018 94.00733185]
[111.55220032 115.62872314]
[115.12270355 130.19758606]
[118.69319916 144.76643372]
[122.26370239 159.33529663]
[125.83419800 173.90414429]
[136.63400269 185.46592712]
[132.14860535 199.66911316]
[135.71911621 214.23796082]
[139.28961182 228.80682373]
[142.86010742 243.37567139]
[146.43060303 257.94451904]
[150.00111389 272.51339722]
[160.80091858 284.07516479]
[156.31552124 298.27835083]
[159.88601685 312.84719849]
[163.45652771 327.41607666]
[170.65136719 329.79104614]
[176.51445007 334.48159790]
[180.34049988 340.86270142]
[181.69070435 348.10998535]
[180.44252014 355.30633545]
[176.79920959 361.55767822]
[171.25859070 366.10433960]
[173.56695557 380.92565918]
[175.87530518 395.74697876]
[178.18367004 410.56829834]
[191.53302002 425.65142822]
[183.84275818 443.37683105]
[186.65853882 458.11016846]
[189.47431946 472.84350586]
[192.29008484 487.57687378]
[195.10586548 502.31021118]
[198.04800415 517.01885986]
[201.11628723 531.70166016]
[204.18457031 546.38452148]
[219.07859802 549.56066895]
[231.38929749 558.52539062]
[238.98376465 571.72552490]
[240.54621887 586.87408447]
[235.80593872 601.34643555]
[225.58422852 612.63525391]
[211.65203857 618.78454590]
[196.42323303 618.72900391]
[182.53627014 612.47827148]
[172.39715576 601.11523438]
[167.76255798 586.60864258]
[169.43544006 571.47192383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 170]
[2 169]
[3 168]
[5 167]
[6 166]
[7 165]
[8 164]
[9 163]
[13 161]
[14 160]
[15 159]
[16 158]
[18 151]
[19 150]
[20 149]
[22 147]
[23 146]
[24 145]
[25 144]
[26 143]
[27 142]
[29 140]
[30 139]
[31 138]
[32 137]
[33 136]
[36 61]
[37 60]
[38 59]
[39 58]
[41 56]
[42 55]
[44 53]
[45 52]
[62 134]
[63 133]
[66 130]
[67 129]
[68 128]
[69 127]
[70 126]
[71 125]
[72 124]
[73 123]
[78 122]
[79 121]
[80 120]
[83 117]
[84 116]
[86 114]
[87 113]
[88 111]
[89 110]
[90 109]
[92 107]
[93 106]
[95 104]
[96 103]
[97 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
