%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACGCAAGUCCCGCUUCGCUCUCGGGGGCGGACUCAGCGGCGGAAGUGGCGCUGCCGGAAGAUCUUCUUCCGCUCUGAGGCGCUACUGAGGCCGCGGAGCCGGACUGCGGUUGGGGCGGGAAGAGCCGGGGCCGUGGCUGACAUGGAGCAGCCCUGCUGCUGAGGCCGCGCCCUCCCCGCCCUGAGGUGGGGGCCCACCAGG\
) } def
/len { sequence length } bind def

/coor [
[53.50521851 130.19334412]
[55.50028229 115.32660675]
[66.17824554 104.79185486]
[81.07180023 102.99796295]
[66.32720184 100.24172211]
[51.58260345 97.48548126]
[36.83800888 94.72923279]
[27.82172394 96.22884369]
[21.88834190 91.81535339]
[7.18793774 88.83237457]
[-7.51246595 85.84940338]
[-22.21286964 82.86643219]
[-37.27608871 87.70482635]
[-48.21047974 77.59105682]
[-62.91088104 74.60807800]
[-77.61128998 71.62510681]
[-92.31169128 68.64213562]
[-107.01209259 65.65916443]
[-121.71250153 62.67618942]
[-136.41290283 59.69321442]
[-151.15750122 56.93697357]
[-165.94279480 54.40811157]
[-180.72808838 51.87925339]
[-195.51338196 49.35039520]
[-210.29867554 46.82153702]
[-225.08395386 44.29267883]
[-239.99102783 49.59265137]
[-251.23168945 39.82040024]
[-266.01699829 37.29154205]
[-280.80227661 34.76268387]
[-295.58758545 32.23382568]
[-306.55014038 39.03669739]
[-318.81570435 36.62233734]
[-325.91113281 26.82101440]
[-340.65573120 24.06477165]
[-355.40032959 21.30852890]
[-370.14492798 18.55228615]
[-384.88952637 15.79604244]
[-393.90582275 17.29565239]
[-399.83920288 12.88215637]
[-414.53958130 9.89918327]
[-429.23999023 6.91621017]
[-443.94039917 3.93323708]
[-458.64080811 0.95026392]
[-473.34121704 -2.03270936]
[-488.04162598 -5.01568270]
[-502.74200439 -7.99865580]
[-517.80523682 -3.16026282]
[-528.73962402 -13.27403259]
[-543.44000244 -16.25700569]
[-556.51733398 -7.79403830]
[-571.38311768 -11.02861023]
[-579.37072754 -23.54797745]
[-594.07110596 -26.53095055]
[-607.10546875 -17.59338379]
[-622.62646484 -20.57237244]
[-631.42572021 -33.70053101]
[-628.28283691 -49.18915939]
[-615.06237793 -57.84912872]
[-599.60784912 -54.54262924]
[-591.08813477 -41.23135376]
[-576.38775635 -38.24838257]
[-564.15209961 -46.66410065]
[-549.20129395 -43.84835434]
[-540.45703125 -30.95740891]
[-525.75665283 -27.97443581]
[-511.74490356 -33.02619171]
[-499.75903320 -22.69906044]
[-485.05865479 -19.71608543]
[-470.35824585 -16.73311234]
[-455.65783691 -13.75014019]
[-440.95742798 -10.76716709]
[-426.25701904 -7.78419352]
[-411.55661011 -4.80122042]
[-396.85623169 -1.81824696]
[-382.13327026 1.05144608]
[-367.38867188 3.80768895]
[-352.64410400 6.56393147]
[-337.89950562 9.32017422]
[-323.15490723 12.07641697]
[-306.94503784 5.35899353]
[-293.05871582 17.44853210]
[-278.27340698 19.97739220]
[-263.48812866 22.50625038]
[-248.70283508 25.03510857]
[-234.85330200 19.55425644]
[-222.55509949 29.50738525]
[-207.76980591 32.03624344]
[-192.98451233 34.56510162]
[-178.19921875 37.09396362]
[-163.41392517 39.62282181]
[-148.62864685 42.15167999]
[-144.27815247 40.16906357]
[-138.63552856 40.90226746]
[-133.42993164 44.99280930]
[-118.72952271 47.97578430]
[-104.02912140 50.95875549]
[-89.32872009 53.94173050]
[-74.62831116 56.92470551]
[-59.92790985 59.90767670]
[-45.22750473 62.89065170]
[-31.21575928 57.83889389]
[-19.22989655 68.16603088]
[-4.52949238 71.14900208]
[10.17091084 74.13197327]
[24.87131500 77.11494446]
[39.59424973 79.98464203]
[54.33884811 82.74088287]
[69.08344269 85.49712372]
[83.82804108 88.25336456]
[99.55113220 78.26605988]
[118.41871643 85.42275238]
[133.30502319 83.57942963]
[148.19132996 81.73610687]
[163.07763672 79.89277649]
[177.96394348 78.04945374]
[192.85025024 76.20613098]
[207.73655701 74.36280823]
[222.62286377 72.51948547]
[237.50917053 70.67615509]
[252.39549255 68.83283234]
[255.10363770 62.52601242]
[259.59619141 57.40527725]
[265.40829468 53.95210266]
[271.95330811 52.47794342]
[278.58197021 53.09635925]
[284.64666748 55.71490860]
[289.56491089 60.04733658]
[292.87506104 65.64452362]
[307.86795044 65.18260193]
[322.86080933 64.72067261]
[337.85369873 64.25875092]
[352.84658813 63.79682159]
[361.33331299 60.40304947]
[368.07351685 63.44501877]
[383.07174683 63.21402740]
[398.06997681 62.98303986]
[413.06820679 62.75204849]
[428.06640625 62.52105713]
[443.06463623 62.29006577]
[452.59051514 53.58866119]
[465.09088135 53.70812225]
[473.86648560 62.03877640]
[488.86648560 62.03877640]
[497.45370483 58.90796280]
[504.09704590 62.15605164]
[518.01470947 54.63218307]
[530.62133789 62.56455994]
[545.61956787 62.79554749]
[560.61779785 63.02653885]
[575.61596680 63.25753021]
[589.67156982 54.80927277]
[603.88262939 62.99321365]
[603.63012695 79.39041138]
[589.17376709 87.13284302]
[575.38500977 78.25575256]
[560.38677979 78.02475739]
[545.38854980 77.79376984]
[530.39031982 77.56278229]
[517.54541016 85.10317230]
[503.86605835 77.15427399]
[488.86648560 77.03877258]
[473.86648560 77.03877258]
[459.16693115 86.62037659]
[443.29562378 77.28829193]
[428.29739380 77.51927948]
[413.29919434 77.75026703]
[398.30096436 77.98126221]
[383.30273438 78.21224976]
[368.30450439 78.44323730]
[353.30853271 78.78971100]
[338.31564331 79.25163269]
[323.32275391 79.71356201]
[308.32986450 80.17548370]
[293.33697510 80.63741302]
[275.23623657 95.02915192]
[254.23881531 83.71913910]
[239.35250854 85.56246185]
[224.46620178 87.40579224]
[209.57987976 89.24911499]
[194.69357300 91.09243774]
[179.80726624 92.93576050]
[164.92095947 94.77908325]
[150.03465271 96.62241364]
[135.14834595 98.46573639]
[120.26203918 100.30905914]
[112.26759338 113.00113678]
[117.03446198 127.22354889]
[121.80133820 141.44595337]
[126.56820679 155.66836548]
[131.33508301 169.89077759]
[143.97453308 180.33952332]
[140.97892761 196.46275330]
[125.42990112 201.67425537]
[113.32295227 190.61289978]
[117.11267090 174.65765381]
[112.34579468 160.43524170]
[107.57892609 146.21282959]
[102.81205750 131.99041748]
[98.04518127 117.76800537]
[98.32652283 132.76536560]
[89.36867523 144.79687500]
[74.92036438 148.82752991]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 110]
[5 109]
[6 108]
[7 107]
[9 106]
[10 105]
[11 104]
[12 103]
[14 101]
[15 100]
[16 99]
[17 98]
[18 97]
[19 96]
[20 95]
[21 92]
[22 91]
[23 90]
[24 89]
[25 88]
[26 87]
[28 85]
[29 84]
[30 83]
[31 82]
[34 80]
[35 79]
[36 78]
[37 77]
[38 76]
[40 75]
[41 74]
[42 73]
[43 72]
[44 71]
[45 70]
[46 69]
[47 68]
[49 66]
[50 65]
[53 62]
[54 61]
[112 186]
[113 185]
[114 184]
[115 183]
[116 182]
[117 181]
[118 180]
[119 179]
[120 178]
[121 177]
[129 175]
[130 174]
[131 173]
[132 172]
[133 171]
[135 170]
[136 169]
[137 168]
[138 167]
[139 166]
[140 165]
[143 163]
[144 162]
[146 161]
[148 159]
[149 158]
[150 157]
[151 156]
[187 200]
[188 199]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
