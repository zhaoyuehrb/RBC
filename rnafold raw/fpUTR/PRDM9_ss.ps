%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGGACUCUGAGAGAACGCCCGGCCAGGGUGAACGCCGCGGCAGGAGAGCACGGGAGAUUGUGAAGAGCAUGGGGAGCCUUUGUCGUGCAGCGUGAAACCCUUGAGCCUUUGGCCUAGGAGCUGGGAGACUCAGGGCCCUUCUCACACUCAGAAUUGGAGCAGGGCCUUCUAGACAGUCCCAGCACC\
) } def
/len { sequence length } bind def

/coor [
[126.40543365 126.34547424]
[112.63199615 132.28620911]
[106.69122314 118.51332855]
[99.80460358 121.48392487]
[105.99766541 135.77670288]
[100.35838318 149.90657043]
[86.69422913 155.72264099]
[81.33035278 169.73080444]
[75.96647644 183.73896790]
[75.94907379 200.69291687]
[59.65288162 205.36950684]
[50.64781570 191.00479126]
[61.95830536 178.37509155]
[67.32218170 164.36692810]
[72.68605804 150.35876465]
[66.40094757 136.90391541]
[71.64113617 122.62122345]
[85.79643250 116.12004852]
[81.73382568 101.68068695]
[69.85252380 92.52455902]
[57.97122192 83.36843109]
[37.90115356 81.62026215]
[31.28172112 63.46408844]
[19.10265160 54.70793152]
[6.92358160 45.95177460]
[-5.32784033 37.29714584]
[-17.65076828 28.74463272]
[-30.04434967 20.29483032]
[-42.50772858 11.94832516]
[-54.97110748 3.60181904]
[-67.43448639 -4.74468708]
[-84.52028656 -1.03276229]
[-98.73002625 -10.62946796]
[-101.55488586 -27.19968414]
[-114.15527344 -35.33787918]
[-126.75566864 -43.47607040]
[-139.35604858 -51.61426544]
[-152.08996582 -59.54189682]
[-164.95390320 -67.25678253]
[-177.81782532 -74.97166443]
[-190.68174744 -82.68654633]
[-203.54566956 -90.40142822]
[-216.40960693 -98.11631012]
[-229.27352905 -105.83119202]
[-242.13745117 -113.54607391]
[-255.00137329 -121.26095581]
[-256.90554810 -113.62126160]
[-262.09475708 -106.36401367]
[-270.40780640 -100.65807343]
[-281.30761719 -97.59351349]
[-293.91592407 -98.06856537]
[-308.05346680 -103.08154297]
[-322.19100952 -108.09452057]
[-336.32852173 -113.10749817]
[-350.46606445 -118.12047577]
[-366.48471069 -114.60823059]
[-377.33428955 -126.90532684]
[-371.85369873 -142.36155701]
[-355.68093872 -145.07688904]
[-345.45309448 -132.25801086]
[-331.31555176 -127.24504089]
[-317.17800903 -122.23206329]
[-303.04046631 -117.21908569]
[-288.90292358 -112.20610809]
[-284.32485962 -118.14675903]
[-296.20617676 -127.30288696]
[-308.08746338 -136.45901489]
[-319.96862793 -145.61534119]
[-310.81210327 -157.49633789]
[-298.93133545 -148.34031677]
[-287.05004883 -139.18418884]
[-275.16873169 -130.02806091]
[-270.59066772 -135.96870422]
[-279.04049683 -148.36228943]
[-294.04232788 -154.98623657]
[-295.53750610 -171.31707764]
[-281.98788452 -180.55505371]
[-267.33218384 -173.19691467]
[-266.64691162 -156.81208801]
[-258.19711304 -144.41850281]
[-247.28649902 -134.12487793]
[-234.42257690 -126.41000366]
[-221.55863953 -118.69512177]
[-208.69471741 -110.98023987]
[-195.83079529 -103.26535797]
[-182.96687317 -95.55046844]
[-170.10293579 -87.83558655]
[-157.23901367 -80.12070465]
[-144.37509155 -72.40582275]
[-139.58990479 -72.68118286]
[-134.58422852 -69.94042969]
[-131.21786499 -64.21465302]
[-118.61746979 -56.07646179]
[-106.01708221 -47.93826675]
[-93.41669464 -39.80007172]
[-81.31165314 -44.24763870]
[-68.66804504 -40.85474396]
[-60.16664886 -30.64520073]
[-59.08798218 -17.20806694]
[-46.62460327 -8.86156082]
[-34.16122437 -0.51505482]
[-21.69784355 7.83145142]
[-14.37683678 8.94314480]
[-9.09825516 16.42170525]
[3.22467184 24.97421646]
[10.52618885 26.20744133]
[15.67973709 33.77270508]
[27.85880661 42.52886200]
[40.03787613 51.28501511]
[49.95625305 48.73317337]
[59.84610748 52.14307022]
[66.35218048 60.61389923]
[67.12734985 71.48712921]
[79.00865173 80.64325714]
[90.88995361 89.79938507]
[96.55936432 81.72956085]
[108.20835876 77.97302246]
[122.25571442 82.32280731]
[133.06253052 95.73144531]
[146.93261719 101.44288635]
[162.63934326 99.54301453]
[171.46182251 111.54355621]
[185.33190918 117.25500488]
[199.20199585 122.96644592]
[213.07209778 128.67788696]
[226.94218445 134.38934326]
[240.81227112 140.10078430]
[254.68235779 145.81222534]
[267.86874390 137.84823608]
[283.03884888 139.16053772]
[294.39303589 149.03707886]
[297.71456909 163.53208923]
[311.58468628 169.24354553]
[325.59283447 174.60742188]
[339.73037720 179.62039185]
[353.86791992 184.63337708]
[368.00546265 189.64634705]
[382.14300537 194.65933228]
[396.28054810 199.67230225]
[410.41809082 204.68528748]
[424.55563354 209.69827271]
[440.14813232 207.01783752]
[449.55780029 218.56370544]
[463.69534302 223.57667542]
[477.83288574 228.58966064]
[486.98635864 228.50997925]
[492.16256714 233.80523682]
[506.21484375 239.05250549]
[519.07586670 230.37074280]
[534.58251953 230.94021606]
[546.77209473 240.54197693]
[550.95751953 255.48393250]
[545.52935791 270.02059937]
[532.57489014 278.56234741]
[517.07531738 277.82467651]
[504.99063110 268.09124756]
[500.96755981 253.10476685]
[486.91531372 247.85749817]
[472.81991577 242.72718811]
[458.68237305 237.71421814]
[444.54483032 232.70123291]
[429.96356201 235.74023438]
[419.54263306 223.83580017]
[405.40512085 218.82283020]
[391.26757812 213.80984497]
[377.13003540 208.79687500]
[362.99249268 203.78388977]
[348.85494995 198.77091980]
[334.71740723 193.75793457]
[320.57986450 188.74496460]
[317.24255371 189.93698120]
[313.15945435 189.56013489]
[309.07958984 187.28045654]
[305.87322998 183.11363220]
[292.00314331 177.40219116]
[279.43786621 185.35530090]
[264.42126465 184.37283325]
[252.72583008 174.62242126]
[248.97091675 159.68231201]
[235.10083008 153.97087097]
[221.23074341 148.25942993]
[207.36064148 142.54798889]
[193.49055481 136.83653259]
[179.62046814 131.12509155]
[165.75038147 125.41365051]
[151.03573608 127.72204590]
[141.22117615 115.31298065]
[127.35108185 109.60153198]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 18]
[7 15]
[8 14]
[9 13]
[19 115]
[20 114]
[21 113]
[23 109]
[24 108]
[25 107]
[26 105]
[27 104]
[28 102]
[29 101]
[30 100]
[31 99]
[34 95]
[35 94]
[36 93]
[37 92]
[38 89]
[39 88]
[40 87]
[41 86]
[42 85]
[43 84]
[44 83]
[45 82]
[46 81]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
[73 80]
[74 79]
[119 188]
[120 187]
[122 185]
[123 184]
[124 183]
[125 182]
[126 181]
[127 180]
[128 179]
[132 175]
[133 174]
[134 170]
[135 169]
[136 168]
[137 167]
[138 166]
[139 165]
[140 164]
[141 163]
[143 161]
[144 160]
[145 159]
[147 158]
[148 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
