%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGUCAUUGAAGAGCUUGUGGGGCUGUGGGACCUGCGCCCUCUGGAGGAAUUCCAUACACCCACUCAACUCUGGCAAAUAGGAAAUUGUCAAGUAGGAGACAAGGAGCAAAGUCCUAUCACAGCGGGAGGGGACGCCAGCGCCUGCAGAGGCUGAGCAGGGAAAAAGCCAGUGCCCCAGCGGAAGCACAGCUCAGAGCUGGUCUGCC\
) } def
/len { sequence length } bind def

/coor [
[77.01061249 130.14852905]
[76.00184631 115.18294525]
[68.51882935 115.68746185]
[63.67068481 129.88237000]
[58.82254028 144.07728577]
[54.08070755 158.30805969]
[49.44545364 172.57391357]
[56.84286499 186.54008484]
[52.11825943 201.62164307]
[38.07466125 208.87098694]
[23.04388809 203.98719788]
[15.94343281 189.86773682]
[20.98586845 174.88943481]
[35.17960739 167.93865967]
[39.81486130 153.67280579]
[38.89208221 146.33940125]
[44.62763214 139.22914124]
[49.47577667 125.03423309]
[54.32392120 110.83931732]
[72.49014282 94.52819824]
[92.58096313 94.63960266]
[90.56746674 79.77536011]
[88.55397034 64.91110992]
[86.54046631 50.04686356]
[84.52696991 35.18261719]
[82.51346588 20.31837273]
[70.22307587 10.74841595]
[68.39285278 -4.35472679]
[77.59208679 -16.01275826]
[75.57858276 -30.87700462]
[73.56508636 -45.74125290]
[55.27034760 -57.61796570]
[51.77898026 -78.86033630]
[64.95713806 -95.52168274]
[61.83846283 -110.19390106]
[58.71978760 -124.86611176]
[55.60111237 -139.53833008]
[52.48243713 -154.21054077]
[36.21195221 -163.91429138]
[32.26799774 -182.11694336]
[42.69903183 -197.15985107]
[39.14282608 -211.73219299]
[35.58662033 -226.30455017]
[32.03041458 -240.87689209]
[28.47420692 -255.44924927]
[24.91800117 -270.02160645]
[14.12954140 -281.59396362]
[18.62886620 -295.79275513]
[15.07265949 -310.36508179]
[11.51645374 -324.93743896]
[-2.36556816 -325.15536499]
[-15.77994061 -328.69622803]
[-27.94367981 -335.34841919]
[-38.14797974 -344.71887207]
[-45.79951859 -356.25634766]
[-50.45495224 -369.28369141]
[-51.84660721 -383.03778076]
[-49.89785767 -396.71401978]
[-44.72733688 -409.51358032]
[-36.64171982 -420.69003296]
[-26.11754227 -429.59274292]
[-13.77311230 -435.70492554]
[-16.89178848 -450.37713623]
[-20.01046371 -465.04934692]
[-24.85606194 -472.79354858]
[-23.06431580 -479.96432495]
[-25.96315575 -494.68154907]
[-28.86199379 -509.39877319]
[-39.11892700 -517.21997070]
[-41.23006058 -529.53820801]
[-34.60117340 -539.65734863]
[-44.67824936 -551.85418701]
[-39.33783340 -565.75848389]
[-42.01618576 -580.51739502]
[-44.69453812 -595.27636719]
[-55.59862137 -600.01550293]
[-62.78721237 -609.33465576]
[-64.56587219 -620.84777832]
[-60.60700607 -631.67663574]
[-52.00289917 -639.17034912]
[-54.23853302 -654.00280762]
[-56.47416687 -668.83526611]
[-58.70980072 -683.66772461]
[-60.94543457 -698.50024414]
[-63.18106842 -713.33270264]
[-82.91584015 -725.28192139]
[-87.30056763 -747.65783691]
[-73.85619354 -765.73986816]
[-77.62999725 -780.25738525]
[-81.40380096 -794.77490234]
[-85.17759705 -809.29241943]
[-88.95140076 -823.80993652]
[-103.44449615 -829.35339355]
[-111.88305664 -842.37530518]
[-111.02229309 -857.86853027]
[-101.19318390 -869.87554932]
[-86.17521667 -873.77941895]
[-71.74311066 -868.07904053]
[-63.44630814 -854.96636963]
[-64.47509003 -839.48345947]
[-74.43387604 -827.58374023]
[-70.66007996 -813.06622314]
[-66.88627625 -798.54870605]
[-63.11247635 -784.03118896]
[-59.33867264 -769.51367188]
[-51.92615509 -768.45288086]
[-45.04286575 -765.43707275]
[-39.19626617 -760.67291260]
[-34.82157898 -754.49639893]
[-32.24940491 -747.34936523]
[-31.68076324 -739.74792480]
[-33.17146683 -732.24499512]
[-36.62699890 -725.39013672]
[-41.80837250 -719.68951416]
[-48.34860611 -715.56829834]
[-46.11297226 -700.73583984]
[-43.87733841 -685.90338135]
[-41.64170456 -671.07092285]
[-39.40607071 -656.23846436]
[-37.17043686 -641.40600586]
[-21.81390762 -631.44244385]
[-18.56035805 -613.10382080]
[-29.93559456 -597.95471191]
[-27.25724220 -583.19573975]
[-24.57888794 -568.43682861]
[-14.69338799 -557.29565430]
[-19.84222984 -542.33569336]
[-7.79014730 -529.58020020]
[-14.14476776 -512.29760742]
[-11.24592876 -497.58038330]
[-8.34709072 -482.86315918]
[-5.33824921 -468.16802979]
[-2.21957374 -453.49581909]
[0.89910156 -438.82360840]
[17.04362106 -437.82040405]
[32.26868820 -432.31573486]
[45.34445190 -422.74597168]
[55.21233749 -409.87609863]
[61.07073593 -394.73870850]
[62.44013214 -378.55108643]
[59.20232773 -362.61727905]
[51.61060715 -348.22323608]
[40.26994705 -336.53277588]
[26.08880424 -328.49365234]
[29.64500999 -313.92129517]
[33.20121765 -299.34893799]
[43.73531342 -288.81890869]
[39.49035263 -273.57778931]
[43.04655838 -259.00546265]
[46.60276413 -244.43310547]
[50.15896988 -229.86074829]
[53.71517563 -215.28840637]
[57.27138138 -200.71604919]
[68.07461548 -197.04495239]
[75.84434509 -188.52627563]
[78.56461334 -177.19863892]
[75.44703674 -165.84948730]
[67.15464783 -157.32922363]
[70.27332306 -142.65699768]
[73.39199829 -127.98478699]
[76.51067352 -113.31257629]
[79.62934875 -98.64035797]
[88.01455688 -96.65796661]
[95.33829498 -92.03681946]
[100.79165649 -85.25395966]
[103.76157379 -77.02693939]
[103.89958954 -68.23790741]
[101.16253662 -59.83907700]
[95.82027435 -52.74955750]
[88.42932892 -47.75474930]
[90.44283295 -32.89050293]
[92.45632935 -18.02625847]
[104.42551422 -9.23568249]
[106.67923737 5.81009436]
[97.37771606 18.30487251]
[99.39121246 33.16912079]
[101.40471649 48.03336716]
[103.41821289 62.89761353]
[105.43170929 77.76185608]
[107.44521332 92.62610626]
[111.86653900 106.95969391]
[118.57623291 120.37535858]
[125.28593445 133.79101562]
[131.99563599 147.20668030]
[137.29484558 151.16223145]
[139.47332764 156.41221619]
[138.69860840 161.12554932]
[145.00396729 174.73593140]
[151.45132446 181.20771790]
[151.30014038 188.59741211]
[157.40119934 202.30058289]
[163.50224304 216.00376892]
[169.60328674 229.70695496]
[175.70434570 243.41012573]
[187.67030334 255.42063904]
[179.44168091 270.24380493]
[162.91990662 266.44021606]
[162.00115967 249.51118469]
[155.90011597 235.80799866]
[149.79905701 222.10481262]
[143.69801331 208.40164185]
[137.59695435 194.69845581]
[131.39358521 181.04129028]
[125.08822632 167.43090820]
[118.57997131 153.91638184]
[111.87026978 140.50071716]
[105.16057587 127.08505249]
[98.45087433 113.66939545]
[90.96786499 114.17391205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 15]
[7 14]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[29 172]
[30 171]
[31 170]
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[41 153]
[42 152]
[43 151]
[44 150]
[45 149]
[46 148]
[48 146]
[49 145]
[50 144]
[62 134]
[63 133]
[64 132]
[66 131]
[67 130]
[68 129]
[71 127]
[73 125]
[74 124]
[75 123]
[80 120]
[81 119]
[82 118]
[83 117]
[84 116]
[85 115]
[88 105]
[89 104]
[90 103]
[91 102]
[92 101]
[181 208]
[182 207]
[183 206]
[184 205]
[187 204]
[188 203]
[190 202]
[191 201]
[192 200]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
