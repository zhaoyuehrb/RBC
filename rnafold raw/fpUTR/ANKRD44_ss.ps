%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCAAACCCCACUAGCCAGUGUCAGCCUCUCGGCGGGAGGAGGCGGCGGCGGAGGAGGAGCAGGGGGAGGGCUGUCAAAUUCGGGAGCCAGAUUUUUUCCCUUCUCCUGGCAAUCCCUUCCGCUUCCCCGGCUCCCGGCGUGACAUCUGCGGGCCGGGGACCUGCAUGUGUGUGCGCGCGAAGGAGCGGAAGA\
) } def
/len { sequence length } bind def

/coor [
[272.01876831 460.81100464]
[265.66726685 447.22207642]
[259.31576538 433.63317871]
[252.96424866 420.04428101]
[236.92962646 414.99316406]
[229.35408020 399.60812378]
[235.35865784 383.18478394]
[228.78793335 369.70053101]
[222.21722412 356.21624756]
[215.64649963 342.73196411]
[200.59507751 333.72039795]
[202.02059937 315.36807251]
[195.23239136 301.99197388]
[182.57304382 294.14404297]
[183.22747803 278.33636475]
[176.43927002 264.96026611]
[162.24546814 260.59317017]
[155.17071533 247.12460327]
[159.84756470 232.26643372]
[153.05935669 218.89033508]
[146.27114868 205.51422119]
[139.48295593 192.13812256]
[132.69474792 178.76200867]
[125.90653992 165.38589478]
[119.01025391 152.06518555]
[112.00634003 138.80076599]
[105.00241852 125.53633118]
[91.78567505 124.69115448]
[80.69668579 117.45021820]
[74.60784149 105.68915558]
[75.09633636 92.45442200]
[82.03563690 81.17422485]
[75.24742889 67.79811096]
[68.45922852 54.42200470]
[55.31433487 45.61732483]
[56.45431137 30.76640701]
[49.66610336 17.39029884]
[42.98225021 11.14284611]
[42.87825775 3.74217677]
[36.30754089 -9.74209881]
[29.73682785 -23.22637558]
[23.16611290 -36.71065140]
[16.59539795 -50.19492722]
[10.02468204 -63.67920303]
[3.45396686 -77.16348267]
[-3.11674833 -90.64775848]
[-16.11734200 -99.66413879]
[-14.73703384 -114.49465179]
[-21.30774879 -127.97892761]
[-27.88956070 -134.33378601]
[-27.87370110 -141.73516846]
[-34.22520447 -155.32408142]
[-40.57670593 -168.91299438]
[-59.79166031 -174.73829651]
[-68.41565704 -192.53245544]
[-61.30536652 -210.65678406]
[-68.30928040 -223.92121887]
[-75.31319427 -237.18565369]
[-82.31711578 -250.45008850]
[-89.32102966 -263.71450806]
[-102.60677338 -272.30517578]
[-101.70742798 -287.17260742]
[-108.71134186 -300.43704224]
[-115.71525574 -313.70147705]
[-122.71917725 -326.96591187]
[-129.72308350 -340.23034668]
[-136.72700500 -353.49478149]
[-143.73092651 -366.75921631]
[-150.73483276 -380.02365112]
[-158.26986694 -392.99374390]
[-166.32366943 -405.64822388]
[-174.37747192 -418.30273438]
[-182.43127441 -430.95721436]
[-196.36831665 -438.44519043]
[-196.67439270 -453.33663940]
[-204.72819519 -465.99114990]
[-220.20874023 -469.17367554]
[-228.83486938 -482.41622925]
[-225.48886108 -497.86224365]
[-212.15583801 -506.34790039]
[-196.74606323 -502.83877563]
[-188.40185547 -489.41677856]
[-192.07369995 -474.04495239]
[-184.01989746 -461.39044189]
[-170.65893555 -454.80761719]
[-169.77677917 -439.01101685]
[-161.72297668 -426.35653687]
[-153.66917419 -413.70202637]
[-145.61537170 -401.04754639]
[-139.78784180 -414.86926270]
[-125.39411163 -419.09069824]
[-113.02443695 -410.60592651]
[-111.77985382 -395.65765381]
[-122.57607269 -385.24411011]
[-137.47039795 -387.02755737]
[-130.46649170 -373.76312256]
[-123.46257019 -360.49868774]
[-116.45865631 -347.23425293]
[-109.45474243 -333.96981812]
[-102.45082855 -320.70541382]
[-95.44690704 -307.44097900]
[-88.44299316 -294.17654419]
[-75.65821838 -286.53463745]
[-76.05659485 -270.71844482]
[-69.05268097 -257.45401001]
[-62.04876328 -244.18957520]
[-55.04484940 -230.92514038]
[-48.04093552 -217.66070557]
[-37.75519562 -217.38261414]
[-28.44359016 -212.81777954]
[-21.82151413 -204.73229980]
[-19.13983917 -194.54742432]
[-20.94904137 -184.08992004]
[-26.98779678 -175.26449585]
[-20.63629532 -161.67558289]
[-14.28479290 -148.08666992]
[-7.82347250 -134.54963684]
[-1.25275755 -121.06536102]
[11.27785397 -113.01346588]
[10.36752796 -97.21846771]
[16.93824387 -83.73419189]
[23.50895882 -70.24991608]
[30.07967377 -56.76564407]
[36.65038681 -43.28136826]
[43.22110367 -29.79709053]
[49.79182053 -16.31281471]
[56.36253357 -2.82853842]
[63.04221344 10.60209370]
[69.83042145 23.97820282]
[82.48976898 31.82613373]
[81.83533478 47.63380051]
[88.62354279 61.00990677]
[95.41174316 74.38601685]
[111.50362396 76.65915680]
[123.10848236 88.03646851]
[125.69981384 104.08018494]
[118.26685333 118.53240967]
[125.27076721 131.79684448]
[132.27468872 145.06127930]
[139.05882263 151.19967651]
[139.28265381 158.59768677]
[146.07084656 171.97380066]
[152.85905457 185.34991455]
[159.64726257 198.72601318]
[166.43547058 212.10212708]
[173.22367859 225.47824097]
[187.97705078 230.47579956]
[194.67071533 244.13777161]
[189.81538391 258.17205811]
[196.60359192 271.54815674]
[209.74847412 280.35284424]
[208.60850525 295.20376587]
[215.39671326 308.57986450]
[227.40025330 313.32519531]
[232.77568054 324.61752319]
[229.13078308 336.16125488]
[235.70149231 349.64553833]
[242.27221680 363.12979126]
[248.84292603 376.61407471]
[262.00518799 379.51217651]
[270.96099854 389.32180786]
[272.60281372 402.30661011]
[266.55316162 413.69277954]
[272.90466309 427.28167725]
[279.25616455 440.87057495]
[285.60766602 454.45950317]
[298.53723145 454.34759521]
[310.50344849 459.12139893]
[319.73825073 468.03741455]
[324.89160156 479.74307251]
[325.22882080 492.48165894]
[320.73507690 504.35607910]
[312.11242676 513.61138916]
[324.65982056 523.24847412]
[322.56094360 537.99444580]
[328.46905518 551.78186035]
[334.37719727 565.56933594]
[346.92459106 575.20642090]
[344.82571411 589.95239258]
[358.27331543 599.33825684]
[356.59936523 615.65173340]
[341.52587891 622.11096191]
[328.55914307 612.07122803]
[331.03826904 595.86053467]
[318.91345215 587.20965576]
[320.58975220 571.47747803]
[314.68161011 557.69000244]
[308.77346802 543.90258789]
[296.64865112 535.25164795]
[298.32495117 519.51953125]
[281.17727661 518.10797119]
[267.02874756 508.16192627]
[259.82180786 492.34265137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[7 159]
[8 158]
[9 157]
[10 156]
[12 153]
[13 152]
[15 150]
[16 149]
[19 146]
[20 145]
[21 144]
[22 143]
[23 142]
[24 141]
[25 139]
[26 138]
[27 137]
[32 133]
[33 132]
[34 131]
[36 129]
[37 128]
[39 127]
[40 126]
[41 125]
[42 124]
[43 123]
[44 122]
[45 121]
[46 120]
[48 118]
[49 117]
[51 116]
[52 115]
[53 114]
[56 108]
[57 107]
[58 106]
[59 105]
[60 104]
[62 102]
[63 101]
[64 100]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[70 89]
[71 88]
[72 87]
[73 86]
[75 84]
[76 83]
[173 190]
[175 188]
[176 187]
[177 186]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
