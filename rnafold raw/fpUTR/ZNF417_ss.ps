%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGCUGAGACUUCCGGGGUCUCUAGUAGCGGCUGUGUAUCGGUGACGCGGGUGUUUCCCCAGUUUGUGGCCCCUGAGUGCUGGGGGGGGACCGCGGUGACUGAACCUAGAAGGUGGAGAGGAAUCGUCCUCGGUGCCCAGAGGCGGCUCUGCAGCCCCGUGACGGCGACCACUGCUCCCGGGCCGUGCUUCCCCAAGUAGUCCG\
) } def
/len { sequence length } bind def

/coor [
[83.82468414 477.66854858]
[71.49917603 486.74270630]
[56.36676407 489.03805542]
[41.90476608 484.02716064]
[31.43644142 472.86145020]
[27.36734009 458.10678101]
[30.63250732 443.15359497]
[40.48163223 431.43807983]
[54.65145874 425.65237427]
[56.02208710 410.71511841]
[57.39271164 395.77786255]
[58.76334000 380.84060669]
[46.08049011 370.42123413]
[42.06567001 354.33453369]
[48.49284744 338.87066650]
[63.01261902 330.19839478]
[64.15529633 315.24197388]
[65.29797363 300.28555298]
[66.44064331 285.32913208]
[60.14746857 280.57559204]
[56.20093918 273.63903809]
[55.30913925 265.61380005]
[57.69129181 257.80026245]
[63.03002167 251.49409485]
[70.51155090 247.77146912]
[72.56390381 232.91253662]
[74.61625671 218.05360413]
[76.66860962 203.19467163]
[74.46889496 196.13584900]
[78.86723328 188.12545776]
[81.14594269 173.29956055]
[83.42465210 158.47364807]
[85.70336151 143.64775085]
[87.98207855 128.82183838]
[77.12144470 123.52465057]
[68.62745667 114.11927795]
[64.04735565 101.67205811]
[64.44744873 87.82435608]
[70.20423889 74.57699585]
[80.89117432 64.00138092]
[68.72908783 55.22165680]
[56.56699371 46.44193268]
[44.40490341 37.66220856]
[32.24281311 28.88248444]
[16.52479362 27.07848740]
[10.73420334 13.35557556]
[-1.42788720 4.57585144]
[-10.22140121 2.08873129]
[-13.70712662 -4.43165922]
[-25.73391342 -13.39583206]
[-37.82870483 -22.26803970]
[-49.99079514 -31.04776382]
[-62.15288544 -39.82748795]
[-77.87090302 -41.63148499]
[-83.66149902 -55.35439682]
[-95.82358551 -64.13412476]
[-107.98567963 -72.91384888]
[-120.14776611 -81.69357300]
[-132.30986023 -90.47329712]
[-144.47195435 -99.25302124]
[-156.63403320 -108.03274536]
[-168.79612732 -116.81246948]
[-180.95822144 -125.59219360]
[-193.12031555 -134.37191772]
[-207.79698181 -129.69200134]
[-222.24623108 -134.49537659]
[-230.99299622 -146.74111938]
[-230.85342407 -161.61117554]
[-243.01551819 -170.39089966]
[-255.17761230 -179.17062378]
[-271.55908203 -183.53909302]
[-271.89617920 -200.48970032]
[-255.70133972 -205.50601196]
[-246.39788818 -191.33271790]
[-234.23579407 -182.55299377]
[-222.07369995 -173.77326965]
[-208.00367737 -178.58702087]
[-193.62698364 -174.14010620]
[-184.51902771 -161.93771362]
[-184.34059143 -146.53401184]
[-172.17849731 -137.75428772]
[-160.01640320 -128.97456360]
[-147.85430908 -120.19483185]
[-135.69223022 -111.41510773]
[-123.53013611 -102.63538361]
[-111.36804199 -93.85565948]
[-99.20595551 -85.07593536]
[-87.04386139 -76.29621124]
[-74.88177490 -67.51648712]
[-60.03366470 -66.34047699]
[-53.37316132 -51.98957825]
[-41.21107101 -43.20985413]
[-29.04897881 -34.43013000]
[-21.78277206 -33.06337357]
[-16.76973915 -25.42261887]
[-4.74295330 -16.45844650]
[7.35183716 -7.58623886]
[19.51392746 1.19348526]
[34.36203384 2.36949801]
[41.02253723 16.72039413]
[53.18462753 25.50011826]
[65.34671783 34.27984238]
[77.50881195 43.05956650]
[89.67089844 51.83929062]
[103.67733765 46.47089386]
[106.85565948 31.81148148]
[110.03397369 17.15207291]
[113.21229553 2.49266291]
[110.65936279 -14.26797199]
[126.05826569 -21.36093903]
[137.13687134 -8.52736187]
[127.87170410 5.67098093]
[124.69338226 20.33039093]
[121.51506805 34.98979950]
[118.33674622 49.64921188]
[128.94334412 60.25581360]
[143.60275269 57.07749557]
[158.26216125 53.89917374]
[172.92158508 50.72085571]
[187.55632019 47.43085098]
[202.16555786 44.02935028]
[208.27912903 29.88966751]
[221.39303589 22.15153122]
[236.37168884 23.60196304]
[247.49099731 33.47612381]
[262.10021973 30.07461929]
[276.70947266 26.67311668]
[291.31869507 23.27161407]
[305.92794800 19.87011147]
[315.31256104 3.41633463]
[333.43209839 -0.88313437]
[348.67645264 9.24705696]
[363.17517090 5.40161133]
[377.67388916 1.55616498]
[389.02929688 -9.46041393]
[403.31478882 -5.24449205]
[417.81350708 -9.08993816]
[430.55993652 -22.37688065]
[447.30731201 -17.13920975]
[461.74569702 -21.20531273]
[476.18408203 -25.27141380]
[490.62246704 -29.33751678]
[505.06085205 -33.40361786]
[516.11480713 -45.51731491]
[532.07238770 -41.73733139]
[536.51776123 -25.95218849]
[524.87792969 -14.40029049]
[509.12695312 -18.96523857]
[494.68856812 -14.89913654]
[480.25018311 -10.83303452]
[465.81179810 -6.76693201]
[451.37341309 -2.70082998]
[445.18536377 7.69601679]
[433.18670654 11.20016289]
[421.65893555 5.40877008]
[407.16024780 9.25421619]
[396.84185791 19.99574280]
[381.51931763 16.05487251]
[367.02062988 19.90032005]
[352.52191162 23.74576569]
[349.06488037 34.62327957]
[340.69842529 42.56210709]
[329.42266846 45.50481796]
[318.01132202 42.60792160]
[309.32943726 34.47934723]
[294.72021484 37.88085175]
[280.11096191 41.28235245]
[265.50173950 44.68385696]
[250.89250183 48.08535767]
[245.27838135 61.85560226]
[232.48089600 69.77321625]
[217.29762268 68.62358093]
[205.56706238 58.63858414]
[190.95782471 62.04008865]
[185.15382385 66.62040710]
[176.09989929 65.38026428]
[161.44049072 68.55858612]
[146.78108215 71.73690033]
[132.12167358 74.91522217]
[137.52966309 101.93755341]
[124.79013824 123.85455322]
[102.80798340 131.10055542]
[100.52926636 145.92645264]
[98.25055695 160.75236511]
[95.97184753 175.57826233]
[93.69313812 190.40417480]
[91.52754211 205.24702454]
[89.47518921 220.10595703]
[87.42283630 234.96488953]
[85.37048340 249.82382202]
[95.31803131 269.90118408]
[81.39705658 286.47183228]
[80.25438690 301.42822266]
[79.11170959 316.38464355]
[77.96903229 331.34106445]
[89.10744476 339.46435547]
[94.73194885 351.93209839]
[93.47052002 365.44277954]
[85.75923920 376.47631836]
[73.70058441 382.21124268]
[72.32996368 397.14849854]
[70.95933533 412.08572388]
[69.58870697 427.02297974]
[82.46900177 435.29080200]
[90.02159882 448.60308838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 203]
[10 202]
[11 201]
[12 200]
[16 195]
[17 194]
[18 193]
[19 192]
[25 190]
[26 189]
[27 188]
[28 187]
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[40 104]
[41 103]
[42 102]
[43 101]
[44 100]
[46 98]
[47 97]
[49 96]
[50 95]
[51 93]
[52 92]
[53 91]
[55 89]
[56 88]
[57 87]
[58 86]
[59 85]
[60 84]
[61 83]
[62 82]
[63 81]
[64 80]
[68 76]
[69 75]
[70 74]
[105 115]
[106 114]
[107 113]
[108 112]
[116 179]
[117 178]
[118 177]
[119 176]
[120 174]
[121 173]
[125 169]
[126 168]
[127 167]
[128 166]
[129 165]
[132 160]
[133 159]
[134 158]
[136 156]
[137 155]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
