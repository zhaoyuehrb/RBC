%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACGAGAGCGGUCCUUGUCUGCGUUCCGUGUCCAGGCAGGUGCAGGCGCCGCGGGGCCGGAUCCUCCGCGCGGCCGAGUCCAUCUCCUGGGAAAUGGGGCGGACAGUGUUUCCUUGACUGACUAUUGUGAGCGCCCUCUCUCUCCGGCGGAGCGGAGACC\
) } def
/len { sequence length } bind def

/coor [
[47.35314178 331.09777832]
[42.25303650 345.20413208]
[37.15293121 359.31045532]
[32.05282593 373.41680908]
[26.95272064 387.52316284]
[34.95646667 400.95721436]
[32.40142822 416.38464355]
[20.49401665 426.52108765]
[4.85654545 426.58044434]
[-7.12744808 416.53463745]
[-9.79948902 401.12704468]
[-1.89792073 387.63262939]
[12.84637737 382.42303467]
[17.94648170 368.31671143]
[23.04658699 354.21035767]
[28.14669228 340.10400391]
[33.24679565 325.99768066]
[29.21871948 308.93820190]
[43.34213638 297.15707397]
[48.16942978 282.95507812]
[52.99672318 268.75305176]
[57.82402039 254.55104065]
[54.59422302 240.01083374]
[66.36107635 229.43482971]
[71.18836975 215.23281860]
[76.01566315 201.03080750]
[80.84295654 186.82878113]
[85.67024994 172.62677002]
[90.49755096 158.42475891]
[95.32484436 144.22274780]
[100.15213776 130.02072144]
[76.96803284 113.30551910]
[79.98107147 88.32039642]
[70.16809845 76.97555542]
[60.35511780 65.63070679]
[50.54214478 54.28586578]
[40.72916794 42.94102097]
[30.91619110 31.59617424]
[22.89484978 27.12465096]
[21.02598572 19.93682861]
[11.43347454 8.40497112]
[1.84096301 -3.12688637]
[-7.75154829 -14.65874386]
[-17.34405899 -26.19060135]
[-37.37815857 -26.91023827]
[-50.28497696 -41.85111237]
[-48.15221786 -61.17424774]
[-58.39510727 -72.13249969]
[-68.63800049 -83.09074402]
[-84.19937134 -83.78459930]
[-94.43101501 -95.04373932]
[-93.67362213 -109.87485504]
[-103.91651917 -120.83309937]
[-114.15940857 -131.79135132]
[-124.40229797 -142.74960327]
[-134.64518738 -153.70785522]
[-144.88807678 -164.66609192]
[-155.13096619 -175.62434387]
[-170.73541260 -174.60693359]
[-183.31245422 -183.89952087]
[-186.92356873 -199.11444092]
[-179.86372375 -213.06767273]
[-165.46635437 -219.17091370]
[-150.52944946 -214.54241943]
[-142.10577393 -201.36761475]
[-144.17271423 -185.86723328]
[-133.92982483 -174.90898132]
[-123.68693542 -163.95074463]
[-113.44404602 -152.99249268]
[-103.20115662 -142.03424072]
[-92.95826721 -131.07598877]
[-82.71537781 -120.11774445]
[-67.86694336 -119.87369537]
[-57.32308960 -108.90638733]
[-57.67974854 -93.33363342]
[-47.43685913 -82.37538910]
[-37.19396973 -71.41713715]
[-27.13937950 -73.86050415]
[-16.90295029 -71.86961365]
[-8.36542988 -65.74137878]
[-3.12406349 -56.53908157]
[-2.19396877 -45.90838242]
[-5.81220198 -35.78311157]
[3.78030920 -24.25125504]
[13.37281990 -12.71939754]
[22.96533203 -1.18754029]
[32.55784225 10.34431648]
[42.26103592 21.78319931]
[52.07401276 33.12804413]
[61.88698959 44.47288895]
[71.69996643 55.81773376]
[81.51293945 67.16257477]
[91.32591248 78.50742340]
[101.10218048 75.47898102]
[111.81553650 76.93573761]
[121.40472412 83.08184052]
[127.82869720 93.17968750]
[129.49121094 105.61569977]
[144.33476257 103.45496368]
[159.17831421 101.29422760]
[174.02188110 99.13349152]
[188.86543274 96.97276306]
[203.70899963 94.81202698]
[218.89765930 81.60597992]
[236.55642700 89.41484070]
[251.30567932 86.68367767]
[266.05493164 83.95250702]
[280.80419922 81.22134399]
[295.55346680 78.49018097]
[310.27572632 75.61701202]
[324.96960449 72.60210419]
[339.66351318 69.58718872]
[345.12936401 55.16054916]
[357.54074097 45.99751663]
[372.93722534 45.02198792]
[386.40585327 52.54524994]
[393.64883423 66.16665649]
[392.35498047 81.53966522]
[382.93710327 93.75881195]
[368.40045166 98.92499542]
[353.38363647 95.38972473]
[342.67840576 84.28108215]
[327.98452759 87.29598999]
[313.29064941 90.31089783]
[307.34182739 94.75716400]
[298.28463745 93.23944855]
[283.53536987 95.97061157]
[268.78610229 98.70177460]
[254.03684998 101.43293762]
[239.28758240 104.16410065]
[234.24362183 113.11787415]
[224.89637756 117.89434052]
[214.24752808 116.68671417]
[205.86973572 109.65558624]
[191.02616882 111.81632233]
[176.18261719 113.97705078]
[161.33905029 116.13778687]
[146.49549866 118.29852295]
[131.65193176 120.45925140]
[146.65170288 120.37612152]
[159.52009583 128.08355713]
[166.52609253 141.34689331]
[165.63838196 156.32060242]
[157.11436462 168.66325378]
[143.42546082 174.79626465]
[128.54057312 172.94145203]
[116.77539825 163.63658142]
[111.54107666 149.57948303]
[114.35414886 134.84802246]
[109.52685547 149.05003357]
[104.69956207 163.25204468]
[99.87226868 177.45407104]
[95.04497528 191.65608215]
[90.21767426 205.85809326]
[85.39038086 220.06010437]
[80.56308746 234.26213074]
[83.44760132 249.81816101]
[72.02603149 259.37832642]
[67.19873810 273.58035278]
[62.37144470 287.78237915]
[57.54415131 301.98437500]
[62.53984070 313.90972900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[5 13]
[19 161]
[20 160]
[21 159]
[22 158]
[24 156]
[25 155]
[26 154]
[27 153]
[28 152]
[29 151]
[30 150]
[31 149]
[33 93]
[34 92]
[35 91]
[36 90]
[37 89]
[38 88]
[40 87]
[41 86]
[42 85]
[43 84]
[44 83]
[47 77]
[48 76]
[49 75]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[98 139]
[99 138]
[100 137]
[101 136]
[102 135]
[103 134]
[105 130]
[106 129]
[107 128]
[108 127]
[109 126]
[110 124]
[111 123]
[112 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
