%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCCUUCAGGAACUUUCAGAUGGCUCAGGAGUGGAGCUUUUGUGGCAGUUCCUGACAGGAUAAGGACAAGAAGCAACACACAGAAGAGAAGGAAAAAGAAAGAAAACUGACCAAU\
) } def
/len { sequence length } bind def

/coor [
[331.61819458 151.57478333]
[317.25686646 147.24440002]
[302.89553833 142.91403198]
[288.32409668 139.35412598]
[273.58383179 136.57479858]
[258.84356689 133.79547119]
[244.10330200 131.01612854]
[229.32736206 128.43325806]
[214.51832581 126.04730988]
[199.70930481 123.66136169]
[184.90028381 121.27540588]
[170.09124756 118.88945007]
[155.28222656 116.50350189]
[140.47320557 114.11754608]
[125.66417694 111.73159790]
[110.85515594 109.34564209]
[97.72158051 114.14157867]
[86.75889587 105.46337891]
[71.94986725 103.07743073]
[57.14084625 100.69147491]
[42.28564835 106.13516235]
[30.95113754 96.47193146]
[13.97515392 103.45091248]
[0.75484174 91.99377441]
[-14.11245060 90.00289154]
[-28.97974396 88.01200867]
[-43.84703445 86.02112579]
[-58.71432877 84.03024292]
[-70.14426422 94.70219421]
[-85.76255035 95.47873688]
[-98.19471741 85.99320984]
[-101.57067871 70.72438812]
[-94.29639435 56.88174438]
[-79.80657196 51.00134659]
[-64.94285583 55.85974503]
[-56.72344589 69.16294861]
[-41.85615158 71.15383148]
[-26.98886108 73.14471436]
[-12.12156773 75.13559723]
[2.74572468 77.12648010]
[12.62422943 70.00690460]
[25.09831047 71.63041687]
[33.33708954 81.66290283]
[47.13304520 76.04855347]
[59.52679825 85.88245392]
[74.33582306 88.26840210]
[89.14484406 90.65435791]
[102.27841949 85.85842133]
[113.24110413 94.53662109]
[128.05012512 96.92256927]
[142.85916138 99.30852509]
[157.66818237 101.69447327]
[172.47720337 104.08042908]
[187.28622437 106.46637726]
[202.09526062 108.85233307]
[216.90428162 111.23828888]
[231.71330261 113.62423706]
[240.81513977 111.88827515]
[246.88264465 116.27587128]
[261.62289429 119.05520630]
[276.36315918 121.83453369]
[291.10342407 124.61386108]
[295.41488647 122.90023804]
[299.60937500 122.74863434]
[303.18670654 123.91326141]
[305.78683472 126.00486755]
[307.22592163 128.55270386]
[321.58724976 132.88307190]
[335.94857788 137.21345520]
[342.01773071 123.47500610]
[349.72921753 110.58654022]
[358.96612549 98.74343872]
[369.58847046 88.12524414]
[381.43515015 78.89292908]
[394.32659912 71.18644714]
[408.06741333 65.12262726]
[422.44924927 60.79340363]
[437.25408936 58.26439285]
[452.25753784 57.57394028]
[467.23208618 58.73251724]
[481.95077515 61.72255325]
[496.19042969 66.49872589]
[509.73519897 72.98862457]
[522.37976074 81.09386444]
[533.93237305 90.69157410]
[544.21795654 101.63626099]
[553.08062744 113.76199341]
[560.38592529 126.88495636]
[566.02313232 140.80621338]
[569.90686035 155.31471252]
[571.97814941 170.19050598]
[572.20562744 185.20808411]
[570.58587646 200.13980103]
[567.14337158 214.75927734]
[561.93041992 228.84487915]
[555.02593994 242.18309021]
[546.53460693 254.57170105]
[536.58526611 265.82290649]
[525.32861328 275.76611328]
[512.93536377 284.25064087]
[499.59338379 291.14782715]
[485.50491333 296.35308838]
[470.88357544 299.78756714]
[455.95095825 301.39916992]
[440.93350220 301.16348267]
[426.05883789 299.08404541]
[411.55249023 295.19241333]
[397.63430786 289.54757690]
[384.51535034 282.23510742]
[372.39447021 273.36584473]
[361.45541382 263.07424927]
[351.86401367 251.51635742]
[343.76568604 238.86738586]
[337.28320312 225.31906128]
[332.51480103 211.07679749]
[329.53283691 196.35649109]
[328.38244629 181.38130188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 69]
[2 68]
[3 67]
[4 62]
[5 61]
[6 60]
[7 59]
[8 57]
[9 56]
[10 55]
[11 54]
[12 53]
[13 52]
[14 51]
[15 50]
[16 49]
[18 47]
[19 46]
[20 45]
[22 43]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
