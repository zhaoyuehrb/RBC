%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGCGGGCGGGAUCCCUCCGCUCUGGGGAGGCAGCGCUGGCGGCGGGGCUGGGGCCACUGAGGAAAUCCAUCCGCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCUCCGCCGCGGAGGAAGACAGCGCCGCCCGCGCACCGCCAGCGACCUCCGCCGCAGAGUCCCACCGCCACAGGCCUCGGGCCAGCGGCCAGGAGCUGCCUCCCCCAGCCCCCGUCCCGCGGCCCCCAGCCGCCCCCAACCCUG\
CCCCACGGGCCCGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[268.53976440 227.51333618]
[259.56756592 217.76028442]
[257.81347656 204.42858887]
[244.93925476 196.73088074]
[232.06504822 189.03317261]
[219.19084167 181.33546448]
[206.31663513 173.63775635]
[193.44241333 165.94004822]
[181.66329956 168.58805847]
[170.88401794 162.31170654]
[167.13864136 149.99487305]
[154.35353088 142.15007019]
[141.56842041 134.30525208]
[128.78332520 126.46044922]
[115.99821472 118.61563873]
[80.13603973 130.52470398]
[53.76499176 86.05509949]
[38.80047226 85.02400970]
[23.83595276 83.99291229]
[8.87143230 82.96181488]
[-6.09308672 81.93071747]
[-21.05760574 80.89962006]
[-36.02212524 79.86852264]
[-43.76089096 87.44463348]
[-54.17271423 89.48966217]
[-63.79619217 85.56851196]
[-69.56509399 77.18991089]
[-84.01596832 83.63063049]
[-95.98102570 74.76007843]
[-110.91796875 73.38613129]
[-125.85491180 72.01217651]
[-140.79185486 70.63822174]
[-155.72879028 69.26427460]
[-170.66574097 67.89031982]
[-185.11660767 74.33104706]
[-197.08166504 65.46049500]
[-212.01860046 64.08654022]
[-226.95555115 62.71259308]
[-241.40641785 69.15331268]
[-253.37147522 60.28276443]
[-268.30841064 58.90881348]
[-283.24536133 57.53485870]
[-298.18231201 56.16090775]
[-313.11926270 54.78695679]
[-328.05618286 53.41300583]
[-342.99313354 52.03905487]
[-357.93008423 50.66510391]
[-372.86700439 49.29115295]
[-387.81158447 48.00285339]
[-402.76330566 46.80025101]
[-417.71502686 45.59764862]
[-432.09109497 52.20363235]
[-444.15707397 43.47084808]
[-458.53314209 50.07683182]
[-470.59912109 41.34405136]
[-485.55084229 40.14144516]
[-500.50256348 38.93884277]
[-503.27337646 45.54959869]
[-508.12524414 51.28096771]
[-514.76293945 55.47365570]
[-522.68273926 57.57184219]
[-531.20947266 57.18866730]
[-539.55413818 54.15815735]
[-546.88665771 48.56751633]
[-561.88269043 48.22357559]
[-576.87878418 47.87963867]
[-588.13281250 58.97564697]
[-603.93591309 58.78033066]
[-614.91229248 47.40957260]
[-614.54992676 31.60943985]
[-603.06378174 20.75387001]
[-587.26837158 21.28327942]
[-576.53485107 32.88357925]
[-561.53875732 33.22751999]
[-546.54272461 33.57146072]
[-544.31518555 18.73777962]
[-558.75085449 14.66203499]
[-573.18652344 10.58629036]
[-588.94055176 15.14071751]
[-600.57263184 3.58104825]
[-596.11669922 -12.20112038]
[-580.15661621 -15.97044659]
[-569.11077881 -3.84937048]
[-554.67510986 0.22637433]
[-540.23944092 4.30211926]
[-512.52252197 4.02791071]
[-499.29995728 23.98712921]
[-484.34823608 25.18973351]
[-469.39651489 26.39233589]
[-456.08990479 19.70033264]
[-442.95446777 28.51913452]
[-429.64782715 21.82713127]
[-416.51242065 30.64593315]
[-401.56069946 31.84853554]
[-386.60897827 33.05113983]
[-379.71572876 30.46470070]
[-371.49307251 34.35420990]
[-356.55612183 35.72816086]
[-341.61917114 37.10211182]
[-326.68225098 38.47606277]
[-311.74530029 39.85001373]
[-296.80834961 41.22396469]
[-281.87139893 42.59791565]
[-266.93447876 43.97187042]
[-251.99752808 45.34582138]
[-238.61505127 38.80682373]
[-225.58160400 47.77565002]
[-210.64465332 49.14960098]
[-195.70771790 50.52355194]
[-182.32522583 43.98455429]
[-169.29177856 52.95338058]
[-154.35484314 54.32733154]
[-139.41789246 55.70128250]
[-124.48095703 57.07523346]
[-109.54401398 58.44918442]
[-94.60707092 59.82313538]
[-81.22459412 53.28414154]
[-68.19114685 62.25296402]
[-51.23141861 52.92114639]
[-34.99102783 64.90400696]
[-20.02651024 65.93510437]
[-5.06199074 66.96620178]
[9.90252876 67.99729156]
[24.86704826 69.02838898]
[39.83156586 70.05948639]
[54.79608536 71.09058380]
[60.39453888 66.09986115]
[46.15186691 61.39386749]
[43.10594940 46.70637894]
[54.30266571 36.72472000]
[68.54542542 41.43044662]
[71.59143829 56.11840820]
[77.18989563 51.12768173]
[77.87759399 36.14345551]
[78.56529236 21.15922546]
[79.25299072 6.17499876]
[69.54664612 -6.59866095]
[73.62120819 -22.11566544]
[88.35103607 -28.47269821]
[102.43665314 -20.79318619]
[105.07278442 -4.96819401]
[94.23721313 6.86269760]
[93.54951477 21.84692574]
[92.86181641 36.83115387]
[92.17411804 51.81538010]
[99.42592621 53.72882080]
[109.99169922 43.08153915]
[113.92955017 57.55570221]
[121.18135834 59.46914673]
[127.97588348 46.09624863]
[124.72668457 33.63932800]
[130.63183594 22.65230942]
[142.05653381 18.74899292]
[149.00395203 5.45487642]
[155.95135498 -7.83923960]
[152.54281616 -23.51601791]
[162.78553772 -35.86373901]
[178.82217407 -35.41028976]
[188.35079956 -22.50351715]
[184.06185913 -7.04439020]
[169.24546814 -0.89183128]
[162.29806519 12.40228462]
[155.35064697 25.69639969]
[157.01588440 43.18212509]
[141.34878540 52.89077759]
[134.55426025 66.26367188]
[136.75466919 78.95039368]
[135.13041687 90.39848328]
[130.47944641 99.58905792]
[123.84302521 105.83052826]
[136.62812805 113.67533875]
[149.41323853 121.52014923]
[162.19834900 129.36495972]
[174.98344421 137.20976257]
[193.41465759 137.29115295]
[201.14012146 153.06584167]
[214.01432800 160.76354980]
[226.88854980 168.46124268]
[239.76275635 176.15895081]
[252.63696289 183.85665894]
[265.51116943 191.55436707]
[282.41470337 186.98114014]
[297.09680176 195.88870239]
[300.70321655 212.33248901]
[313.66485596 219.88208008]
[326.62646484 227.43167114]
[342.44555664 227.69152832]
[349.54904175 240.78309631]
[362.51068115 248.33268738]
[375.47229004 255.88229370]
[388.43392944 263.43188477]
[401.39553833 270.98147583]
[414.35717773 278.53106689]
[427.31878662 286.08065796]
[443.13784790 286.34051514]
[450.24136353 299.43209839]
[466.06042480 299.69192505]
[473.16394043 312.78350830]
[486.12557983 320.33309937]
[504.55380249 319.99185181]
[512.63891602 335.58523560]
[525.68627930 342.98574829]
[538.73358154 350.38623047]
[551.78094482 357.78671265]
[575.23266602 345.08053589]
[603.82781982 360.25027466]
[618.60650635 362.81735229]
[633.38525391 365.38442993]
[648.16394043 367.95147705]
[659.99993896 357.73171997]
[675.63659668 357.56265259]
[687.69079590 367.52407837]
[690.47088623 382.91256714]
[682.66424561 396.46209717]
[667.95684814 401.77502441]
[653.29315186 396.34274292]
[645.59686279 382.73019409]
[630.81817627 380.16311646]
[616.03942871 377.59603882]
[601.26074219 375.02896118]
[598.01770020 381.79156494]
[611.54284668 388.27767944]
[625.06805420 394.76379395]
[638.59320068 401.24987793]
[647.06353760 413.62942505]
[632.10711670 414.77505493]
[618.58190918 408.28894043]
[605.05676270 401.80285645]
[591.53155518 395.31674194]
[588.28851318 402.07931519]
[599.54248047 411.99642944]
[610.79638672 421.91351318]
[622.05035400 431.83059692]
[633.30426025 441.74771118]
[649.34161377 442.17578125]
[658.89068604 455.06744385]
[654.62622070 470.53332520]
[639.81958008 476.70935059]
[625.82916260 468.85775757]
[623.38720703 453.00164795]
[612.13323975 443.08456421]
[600.87933350 433.16744995]
[589.62536621 423.25036621]
[578.37139893 413.33325195]
[568.79748535 412.85571289]
[560.04919434 410.04568481]
[552.65899658 405.28356934]
[547.02270508 399.06134033]
[543.37963867 391.93911743]
[541.80456543 384.49884033]
[542.21343994 377.29913330]
[544.38043213 370.83404541]
[531.33312988 363.43356323]
[518.28576660 356.03305054]
[505.23843384 348.63256836]
[493.52313232 351.54998779]
[482.60278320 345.52243042]
[478.57598877 333.29473877]
[465.61434937 325.74514771]
[450.72238159 326.02526855]
[442.69177246 312.39370728]
[427.79980469 312.67385864]
[419.76919556 299.04226685]
[406.80758667 291.49267578]
[393.84594727 283.94308472]
[380.88433838 276.39349365]
[367.92269897 268.84390259]
[354.96109009 261.29431152]
[341.99945068 253.74472046]
[327.10748291 254.02487183]
[319.07687378 240.39329529]
[306.11526489 232.84370422]
[293.15362549 225.29411316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 181]
[4 180]
[5 179]
[6 178]
[7 177]
[8 176]
[11 174]
[12 173]
[13 172]
[14 171]
[15 170]
[17 126]
[18 125]
[19 124]
[20 123]
[21 122]
[22 121]
[23 120]
[27 118]
[29 116]
[30 115]
[31 114]
[32 113]
[33 112]
[34 111]
[36 109]
[37 108]
[38 107]
[40 105]
[41 104]
[42 103]
[43 102]
[44 101]
[45 100]
[46 99]
[47 98]
[48 97]
[49 95]
[50 94]
[51 93]
[53 91]
[55 89]
[56 88]
[57 87]
[64 75]
[65 74]
[66 73]
[76 85]
[77 84]
[78 83]
[133 145]
[134 144]
[135 143]
[136 142]
[149 166]
[150 165]
[153 163]
[154 162]
[155 161]
[184 273]
[185 272]
[186 271]
[188 269]
[189 268]
[190 267]
[191 266]
[192 265]
[193 264]
[194 263]
[196 261]
[198 259]
[199 258]
[201 255]
[202 254]
[203 253]
[204 252]
[206 220]
[207 219]
[208 218]
[209 217]
[230 244]
[231 243]
[232 242]
[233 241]
[234 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
