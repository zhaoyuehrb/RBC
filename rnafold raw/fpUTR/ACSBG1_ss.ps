%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCACAAAGAAAAGGAAAGUUUUAAUUCUGAGAAACUUCACUGAGGAGCAAUUUUUUUUGAGCUUCUAAAAAUAGAGAGGAAAUGAGCCUCUUUGGGUCACUCUAGUUGCCGCCUCCCCUGCCCCAUGCCCACCCCCACUGCUCACUCAAGGCUAGCCUCUCUCAGUGGGUGACUGAGCUGUCUUCAGUGGAAGCCCGAGGCAG\
) } def
/len { sequence length } bind def

/coor [
[136.85369873 129.64292908]
[146.57669067 141.06498718]
[151.43778992 155.25546265]
[150.76069641 170.24017334]
[144.63963318 183.93443298]
[133.92616272 194.43305969]
[120.11073303 200.27551270]
[105.11538696 200.64895630]
[91.02627563 195.50143433]
[79.80348969 185.54908752]
[73.00835419 172.17649841]
[71.58621979 157.24406433]
[75.73493195 142.82920837]
[84.87831879 130.93643188]
[90.65639496 117.09397125]
[78.94922638 126.47172546]
[77.07116699 141.93492126]
[65.06484222 151.27853394]
[50.33461380 149.39279175]
[38.62744522 158.77053833]
[26.92027855 168.14828491]
[15.21311188 177.52604675]
[3.50594378 186.90379333]
[-8.20122433 196.28153992]
[-19.90839195 205.65930176]
[-19.04412460 221.15228271]
[-27.47974396 234.17610168]
[-41.97158432 239.72283936]
[-56.94723511 235.65963745]
[-66.64825439 223.54890442]
[-67.34439850 208.04745483]
[-58.76799393 195.11592102]
[-44.21683502 189.72671509]
[-29.28614235 193.95213318]
[-17.57897568 184.57437134]
[-5.87180758 175.19662476]
[5.83536005 165.81887817]
[17.54252815 156.44111633]
[29.24969482 147.06336975]
[40.95686340 137.68562317]
[42.33208084 122.89899445]
[54.07122421 113.22184753]
[69.57147217 114.76455688]
[81.27864075 105.38680267]
[82.98234558 90.48387146]
[73.69370270 78.70587921]
[64.40505981 66.92788696]
[55.11641312 55.14989471]
[37.85908508 48.73018265]
[36.01368713 31.27983856]
[26.54736900 19.64416885]
[17.08104897 8.00849915]
[7.61472988 -3.62717009]
[-1.85158932 -15.26283932]
[-11.31790829 -26.89850807]
[-24.99656296 -23.96507263]
[-38.53985596 -27.19660759]
[-49.31744766 -35.90687561]
[-55.26145935 -48.35132980]
[-55.26309586 -62.07630539]
[-49.37905884 -74.40274048]
[-58.66770554 -86.18073273]
[-67.95634460 -97.95872498]
[-82.57733154 -104.00334930]
[-84.38327789 -118.78806305]
[-93.67192078 -130.56605530]
[-93.73580170 -115.56619263]
[-101.80780029 -102.92329407]
[-115.38792419 -96.55302429]
[-130.27023315 -98.42832947]
[-141.84550476 -107.96841431]
[-146.52873230 -122.21858215]
[-142.86946106 -136.76539612]
[-132.00100708 -147.10351562]
[-117.28948212 -150.03111267]
[-103.29026031 -144.64074707]
[-110.88861847 -157.57385254]
[-118.48697662 -170.50694275]
[-126.08533478 -183.44003296]
[-133.68370056 -196.37313843]
[-141.28205872 -209.30622864]
[-148.88041687 -222.23931885]
[-164.32962036 -224.65922546]
[-174.56990051 -236.47746277]
[-174.76609802 -252.11381531]
[-164.82559204 -264.18527222]
[-149.44197083 -266.99206543]
[-135.87890625 -259.20892334]
[-130.54048157 -244.51078796]
[-135.94731140 -229.83767700]
[-128.34895325 -216.90458679]
[-120.75060272 -203.97149658]
[-113.15223694 -191.03839111]
[-105.55387878 -178.10530090]
[-97.95552063 -165.17221069]
[-90.35716248 -152.23912048]
[-81.89392853 -139.85470581]
[-72.60528564 -128.07670593]
[-58.64868927 -122.87452698]
[-56.17835617 -107.24737549]
[-46.88971329 -95.46938324]
[-37.60106659 -83.69139099]
[-21.67280197 -86.40361023]
[-6.46229649 -80.68093109]
[3.84645224 -67.99634552]
[6.36691761 -51.75152206]
[0.31776085 -36.36482620]
[9.78408051 -24.72915840]
[19.25039864 -13.09348869]
[28.71671867 -1.45781982]
[38.18303680 10.17784977]
[47.64935684 21.81351852]
[59.64826202 23.36286545]
[67.62987518 32.98200989]
[66.89440918 45.86125183]
[76.18305206 57.63924408]
[85.47169495 69.41723633]
[94.76033783 81.19522858]
[105.44138336 82.29927063]
[113.36740875 88.68188477]
[116.36753082 97.81703949]
[130.89967346 101.53415680]
[145.43180847 105.25127411]
[159.96394348 108.96839142]
[174.49607849 112.68550873]
[189.78318787 108.60932922]
[200.19612122 119.25921631]
[213.68174744 111.46334839]
[228.36645508 115.44004822]
[235.71551514 128.34457397]
[250.24765015 132.06169128]
[264.83453369 135.55784607]
[279.47277832 138.83221436]
[294.11102295 142.10658264]
[308.74929810 145.38095093]
[330.67721558 134.91180420]
[349.24707031 149.54881287]
[364.24319458 149.20736694]
[379.23928833 148.86592102]
[394.23541260 148.52447510]
[409.23150635 148.18302917]
[424.22763062 147.84158325]
[439.22375488 147.50013733]
[443.04406738 136.89950562]
[449.89511108 127.98698425]
[459.11312866 121.59946442]
[469.81314087 118.33047485]
[480.97381592 118.47509003]
[491.53509521 122.00337982]
[500.49865723 128.56477356]
[507.02249146 137.52282715]
[510.49990845 148.01692200]
[525.48913574 148.58590698]
[540.47833252 149.15490723]
[554.72076416 141.02560425]
[568.74377441 149.52778625]
[568.12170410 165.91513062]
[553.49444580 173.32974243]
[539.90936279 164.14410400]
[524.92010498 163.57511902]
[509.93093872 163.00611877]
[500.74862671 179.52694702]
[484.37728882 189.13580322]
[465.31268311 189.09770203]
[448.83917236 179.34014893]
[439.56518555 162.49624634]
[424.56909180 162.83769226]
[409.57296753 163.17913818]
[394.57684326 163.52058411]
[379.58074951 163.86203003]
[364.58462524 164.20349121]
[349.58850098 164.54493713]
[349.34671021 165.22796631]
[349.08261108 165.90270996]
[360.19927979 175.97344971]
[371.31594849 186.04420471]
[387.08666992 185.01475525]
[398.91091919 195.50105286]
[399.77355957 211.28178406]
[389.16284180 222.99450684]
[373.37387085 223.69027710]
[361.77398682 212.95629883]
[361.24517822 197.16085815]
[350.12854004 187.09010315]
[339.01187134 177.01936340]
[330.83834839 179.73886108]
[322.14916992 179.13473511]
[314.25842285 175.22505188]
[308.38720703 168.53327942]
[305.47491455 160.01921082]
[290.83666992 156.74482727]
[276.19842529 153.47045898]
[261.56015015 150.19609070]
[257.11666870 151.95446777]
[251.52127075 150.93792725]
[246.53053284 146.59382629]
[231.99839783 142.87670898]
[219.35572815 150.66763306]
[204.56512451 147.10496521]
[196.47900391 133.79135132]
[182.23133850 138.13340759]
[170.77896118 127.21764374]
[156.24682617 123.50052643]
[141.71469116 119.78340912]
[127.18255615 116.06629181]
[112.65041351 112.34917450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 44]
[16 43]
[19 40]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[45 118]
[46 117]
[47 116]
[48 115]
[50 112]
[51 111]
[52 110]
[53 109]
[54 108]
[55 107]
[61 102]
[62 101]
[63 100]
[65 98]
[66 97]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[121 206]
[122 205]
[123 204]
[124 203]
[125 202]
[127 200]
[130 197]
[131 196]
[132 193]
[133 192]
[134 191]
[135 190]
[137 172]
[138 171]
[139 170]
[140 169]
[141 168]
[142 167]
[143 166]
[152 161]
[153 160]
[154 159]
[174 185]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
