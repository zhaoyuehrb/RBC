%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUCAGGCCGUUGUGCGCAGGCGCAGAGGCGGCGGCGGCGGCGGCGGCGGCGGAUGUUUACGGCGGCCGAGGUUGGAGCGGCGCUGCUCGGCCGCGGACACACGAGGGACGCGCCCGAGGAGCUGCAGGUGGCAGCCCAGGCGGUCCGAACCCGUCGGCCGGCCGAGCCUGGAGUAUUGCCUAAGUGUAAUCUUGAAC\
) } def
/len { sequence length } bind def

/coor [
[68.47190094 111.12073517]
[59.88426208 123.41921234]
[58.32733917 139.16362000]
[44.69705963 145.16902161]
[36.10942459 157.46749878]
[27.52179146 169.76597595]
[26.57285881 176.32218933]
[22.98929977 180.74609375]
[18.46857834 182.30891418]
[9.50075531 194.33297729]
[0.53293240 206.35705566]
[-1.51531410 222.04510498]
[-15.32662964 227.62156677]
[-24.29445267 239.64562988]
[-33.26227570 251.66969299]
[-42.23009872 263.69375610]
[-51.19792175 275.71783447]
[-60.16574478 287.74188232]
[-61.54529572 304.08291626]
[-76.49988556 310.81286621]
[-89.64551544 301.00854492]
[-87.45908356 284.75579834]
[-72.18981171 278.77407837]
[-63.22198868 266.75000000]
[-54.25416565 254.72593689]
[-45.28634262 242.70187378]
[-36.31851959 230.67781067]
[-27.35069466 218.65374756]
[-25.94388771 203.82571411]
[-11.49113274 197.38922119]
[-2.52330995 185.36515808]
[6.44451284 173.34109497]
[15.22331429 161.17834473]
[23.81094933 148.87986755]
[32.39858627 136.58139038]
[33.34126282 121.71664429]
[47.58578491 114.83157349]
[56.17341995 102.53309631]
[94.05616760 88.70621490]
[96.15924072 73.85437775]
[98.26231384 59.00254059]
[91.14669800 48.23836899]
[93.20932007 35.90715408]
[102.80544281 28.53397560]
[105.14038086 13.71682167]
[107.47531891 -1.10033274]
[109.81025696 -15.91748714]
[112.02932739 -30.75243568]
[114.13240051 -45.60427475]
[116.23547363 -60.45611191]
[118.22241974 -75.32392883]
[120.09311676 -90.20682526]
[121.96380615 -105.08971405]
[123.83450317 -119.97261047]
[125.70520020 -134.85549927]
[123.49110413 -141.09907532]
[124.60157776 -146.68295288]
[127.87400818 -150.17158508]
[130.20895386 -164.98873901]
[132.54388428 -179.80589294]
[134.87882996 -194.62304688]
[127.93231201 -205.49711609]
[130.18740845 -217.79458618]
[139.89759827 -225.01689148]
[142.46383667 -239.79573059]
[145.03005981 -254.57458496]
[139.76780701 -269.49502563]
[149.56843567 -280.71093750]
[152.13467407 -295.48977661]
[154.70089722 -310.26864624]
[145.87165833 -323.10147095]
[148.68470764 -338.05279541]
[160.97328186 -346.39105225]
[163.53952026 -361.16989136]
[166.10574341 -375.94876099]
[168.67198181 -390.72760010]
[171.23822021 -405.50643921]
[162.40896606 -418.33929443]
[165.22201538 -433.29058838]
[177.51058960 -441.62884521]
[180.07682800 -456.40771484]
[173.33241272 -473.53829956]
[185.08555603 -486.56558228]
[187.42050171 -501.38272095]
[189.63957214 -516.21765137]
[191.74264526 -531.06951904]
[193.84571838 -545.92132568]
[188.11968994 -560.67004395]
[197.56498718 -572.18676758]
[199.66806030 -587.03863525]
[201.77113342 -601.89044189]
[203.87420654 -616.74230957]
[205.97727966 -631.59411621]
[200.25126648 -646.34277344]
[209.69656372 -657.85955811]
[211.79963684 -672.71136475]
[213.90270996 -687.56323242]
[216.00578308 -702.41503906]
[206.77975464 -714.96569824]
[209.12414551 -729.99761963]
[221.14610291 -738.71588135]
[210.56074524 -750.22601318]
[209.90214539 -765.84973145]
[219.48126221 -778.20996094]
[234.77513123 -781.47052002]
[248.56246948 -774.09191895]
[254.33329773 -759.55816650]
[249.36282349 -744.73150635]
[235.99794006 -736.61279297]
[245.12672424 -724.89947510]
[243.20547485 -709.80767822]
[230.85762024 -700.31201172]
[228.75454712 -685.46014404]
[226.65147400 -670.60833740]
[224.54840088 -655.75646973]
[230.42485046 -642.07012939]
[220.82911682 -629.49102783]
[218.72604370 -614.63922119]
[216.62297058 -599.78735352]
[214.51989746 -584.93554688]
[212.41682434 -570.08367920]
[218.29327393 -556.39733887]
[208.69755554 -543.81829834]
[206.59448242 -528.96643066]
[204.49140930 -514.11462402]
[206.66801453 -507.04534912]
[202.23765564 -499.04779053]
[199.90270996 -484.23062134]
[206.76631165 -474.26367188]
[204.93675232 -461.89572144]
[194.85566711 -453.84149170]
[192.28944397 -439.06262207]
[201.04766846 -427.06976318]
[198.65567017 -412.04534912]
[186.01705933 -402.94021606]
[183.45083618 -388.16137695]
[180.88459778 -373.38250732]
[178.31835938 -358.60366821]
[175.75213623 -343.82479858]
[184.51036072 -331.83193970]
[182.11836243 -316.80752563]
[169.47975159 -307.70239258]
[166.91352844 -292.92355347]
[164.34729004 -278.14471436]
[169.79310608 -264.28134155]
[159.80891418 -252.00836182]
[157.24269104 -237.22950745]
[154.67645264 -222.45065308]
[161.60263062 -206.33003235]
[149.69598389 -192.28811646]
[147.36103821 -177.47096252]
[145.02610779 -162.65379333]
[142.69116211 -147.83663940]
[140.58808899 -132.98480225]
[138.71739197 -118.10191345]
[136.84669495 -103.21902466]
[134.97601318 -88.33612823]
[133.10531616 -73.45323944]
[135.39215088 -66.41886902]
[131.08731079 -58.35303879]
[128.98423767 -43.50120163]
[126.88116455 -28.64936256]
[129.05778503 -21.58011055]
[124.62741089 -13.58254910]
[122.29247284 1.23460543]
[119.95753479 16.05175972]
[117.62259674 30.86891365]
[124.79987335 46.87931061]
[113.11415100 61.10561371]
[111.01107788 75.95745087]
[108.90800476 90.80928802]
[111.58965302 105.56763458]
[124.99722290 113.96690369]
[124.31117249 128.84570312]
[131.50457764 142.00833130]
[138.69799805 155.17095947]
[145.56515503 161.20678711]
[145.89913940 168.59600830]
[152.88595581 181.86944580]
[159.87275696 195.14289856]
[166.85957336 208.41635132]
[173.84638977 221.68980408]
[189.01309204 226.13351440]
[196.52197266 240.04006958]
[191.91815186 255.15895081]
[177.93299866 262.52038574]
[162.86363220 257.75698853]
[155.65046692 243.69476318]
[160.57293701 228.67662048]
[153.58612061 215.40316772]
[146.59931946 202.12971497]
[139.61250305 188.85626221]
[132.62568665 175.58280945]
[125.53536224 162.36436462]
[118.34194946 149.20173645]
[111.14854431 136.03910828]
[98.25549316 128.58132935]
[98.42701721 112.76104736]
[90.93824005 112.35096741]
[82.73944092 124.91201019]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[4 35]
[5 34]
[6 33]
[9 32]
[10 31]
[11 30]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[39 171]
[40 170]
[41 169]
[44 167]
[45 166]
[46 165]
[47 164]
[48 162]
[49 161]
[50 160]
[51 158]
[52 157]
[53 156]
[54 155]
[55 154]
[58 153]
[59 152]
[60 151]
[61 150]
[64 148]
[65 147]
[66 146]
[68 144]
[69 143]
[70 142]
[73 139]
[74 138]
[75 137]
[76 136]
[77 135]
[80 132]
[81 131]
[83 128]
[84 127]
[85 125]
[86 124]
[87 123]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[95 115]
[96 114]
[97 113]
[98 112]
[101 109]
[172 198]
[174 196]
[175 195]
[176 194]
[178 193]
[179 192]
[180 191]
[181 190]
[182 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
