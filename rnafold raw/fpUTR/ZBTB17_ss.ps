%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCCGGAAGUUGCAGCCGGGAAGCCUGCGAGGUCGGUUCCGCCCGACUCUAACAUGGCGGCGCCCUUUGUCUGCUCUGGAGUGCCGUCCCCGGCCUUCUCGCGGCCGUGAUGCACCUCCCUCUGCGGUGGGGUCCGGGACAUGGCAGGUAAUGAGCCGGACGAGGGGAGCCAAGCUGGAGUUUACACAGGCAAACUGUCAGAAAAGAGUAGCCUGGGCUGUCUGGAAAUCUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[107.32293701 426.66928101]
[91.53083038 426.04879761]
[80.86436462 414.38681030]
[81.65177155 398.60214233]
[93.42588806 388.05957031]
[94.01477814 373.07113647]
[94.50556946 358.07919312]
[94.89822388 343.08432007]
[95.29087830 328.08944702]
[95.68353271 313.09460449]
[85.27640533 302.50085449]
[85.46100616 287.28836060]
[96.64325714 276.44421387]
[97.03591156 261.44937134]
[97.13407898 246.44969177]
[96.93773651 231.45097351]
[96.74139404 216.45225525]
[96.54505157 201.45353699]
[96.34870911 186.45481873]
[96.15236664 171.45611572]
[88.24913025 158.83120728]
[95.80513000 144.93093872]
[95.60878754 129.93222046]
[83.48205566 124.29315948]
[75.29724121 114.21572113]
[72.44369507 101.95195770]
[58.82154846 108.23185730]
[45.19940186 114.51175690]
[31.61864662 120.88066864]
[18.07986641 127.33834076]
[12.72149849 141.96453857]
[-1.10074127 148.32066345]
[-15.01156330 143.12214661]
[-28.55034256 149.57980347]
[-42.04656601 156.12594604]
[-55.49965668 162.76026917]
[-68.95275116 169.39460754]
[-82.40583801 176.02893066]
[-95.85893250 182.66326904]
[-100.70108032 197.70750427]
[-114.80081940 204.84703064]
[-129.79302979 199.84609985]
[-136.78308105 185.67166138]
[-131.62391663 170.73316956]
[-117.37637329 163.89335632]
[-102.49326324 169.21017456]
[-89.04016876 162.57585144]
[-75.58708191 155.94151306]
[-62.13398743 149.30718994]
[-48.68089676 142.67285156]
[-44.08110046 136.90699768]
[-35.00800705 136.04103088]
[-21.46922874 129.58335876]
[-16.75487518 115.50108337]
[-3.11662054 108.75923157]
[11.62220001 113.79956055]
[25.16098022 107.34188843]
[29.83585358 101.63673401]
[38.91950226 100.88960266]
[52.54165268 94.60971069]
[66.16380310 88.32981110]
[73.91740417 75.48918915]
[73.13236237 60.50974655]
[72.34732056 45.53030396]
[63.89838409 32.15398407]
[70.95898438 19.03921318]
[70.17394257 4.05977058]
[69.38890839 -10.91967201]
[68.60386658 -25.89911461]
[67.81882477 -40.87855911]
[67.03379059 -55.85800171]
[66.24874878 -70.83744812]
[65.46370697 -85.81688690]
[64.67867279 -100.79633331]
[63.89363098 -115.77577209]
[63.10859299 -130.75521851]
[62.22552872 -145.72920227]
[61.24448395 -160.69708252]
[60.26343536 -175.66496277]
[45.11770248 -181.63499451]
[34.13454437 -193.57283020]
[29.47823524 -209.05102539]
[32.03350830 -224.95219421]
[41.23796463 -238.09687805]
[55.20485687 -245.87922668]
[54.02796936 -260.83297729]
[52.85108185 -275.78674316]
[51.67419815 -290.74050903]
[50.30167389 -305.67758179]
[48.73374557 -320.59539795]
[47.16581726 -335.51324463]
[45.59789276 -350.43106079]
[44.02996445 -365.34890747]
[34.89253998 -378.26470947]
[41.25709152 -391.73101807]
[39.68916321 -406.64883423]
[38.12123871 -421.56668091]
[36.55331039 -436.48449707]
[34.98538208 -451.40234375]
[33.41745758 -466.32015991]
[24.28003120 -479.23596191]
[30.64458275 -492.70227051]
[29.07665634 -507.62011719]
[27.50872993 -522.53796387]
[25.94080353 -537.45574951]
[24.37287521 -552.37359619]
[22.80494881 -567.29144287]
[10.80634880 -577.22479248]
[9.42875862 -592.37591553]
[18.97262764 -603.75354004]
[14.97030830 -611.94207764]
[17.48312569 -618.87670898]
[16.11060143 -633.81378174]
[3.80086660 -643.72570801]
[2.18843794 -659.44750977]
[12.22994041 -671.65173340]
[27.96792984 -673.09790039]
[40.06533432 -662.92791748]
[41.34497833 -647.17547607]
[31.04767609 -635.18627930]
[32.42020035 -620.24920654]
[33.89045715 -605.32147217]
[45.59130859 -596.17675781]
[47.39392090 -581.07025146]
[37.72277832 -568.85937500]
[39.29070282 -553.94152832]
[40.85863113 -539.02368164]
[42.42655945 -524.10589600]
[43.99448395 -509.18804932]
[45.56241226 -494.27020264]
[54.58768845 -482.42141724]
[48.33528519 -467.88809204]
[49.90321350 -452.97024536]
[51.47113800 -438.05242920]
[53.03906631 -423.13461304]
[54.60699463 -408.21676636]
[56.17491913 -393.29895020]
[65.20019531 -381.45016479]
[58.94779205 -366.91680908]
[60.51572037 -351.99899292]
[62.08364487 -337.08117676]
[63.65157318 -322.16333008]
[65.21949768 -307.24551392]
[68.28619385 -303.60757446]
[69.11285400 -298.00991821]
[66.62796021 -291.91738892]
[67.80484009 -276.96362305]
[68.98172760 -262.00988770]
[70.15861511 -247.05610657]
[83.31385803 -242.68298340]
[93.84431458 -233.60025024]
[100.14066315 -221.15242004]
[101.22412872 -207.20150757]
[96.89845276 -193.84844971]
[87.78449249 -183.11680603]
[75.23132324 -176.64601135]
[76.21236420 -161.67813110]
[77.19341278 -146.71025085]
[80.76010895 -140.25408936]
[78.08803558 -131.54025269]
[78.87307739 -116.56081390]
[79.65811157 -101.58136749]
[80.44315338 -86.60192871]
[81.22819519 -71.62248230]
[82.01322937 -56.64303970]
[82.79827118 -41.66359711]
[83.58331299 -26.68415451]
[84.36834717 -11.70471191]
[85.15338898 3.27473140]
[85.93843079 18.25417519]
[94.33121490 30.55906487]
[87.32676697 44.74526215]
[88.11180878 59.72470856]
[88.89684296 74.70414734]
[109.35858154 73.07919312]
[125.94702148 86.22495270]
[129.23486328 107.78095245]
[142.93804932 113.88200378]
[156.64123535 119.98305511]
[170.34442139 126.08409882]
[185.78829956 116.55355072]
[203.70292664 118.20231628]
[216.91439819 130.18005371]
[220.24650574 147.53842163]
[234.10469055 153.27868652]
[247.96289062 159.01893616]
[262.41772461 153.21414185]
[276.39013672 159.23298645]
[281.83502197 173.04922485]
[295.69320679 178.78948975]
[309.55142212 184.52973938]
[323.40960693 190.26998901]
[338.72204590 185.48370361]
[351.93002319 194.59025574]
[352.90148926 210.60386658]
[340.89123535 221.24026489]
[325.11248779 218.34013367]
[317.66934204 204.12817383]
[303.81115723 198.38792419]
[289.95297241 192.64767456]
[276.09478760 186.90742493]
[262.47509766 192.82685852]
[248.33914185 187.20283508]
[242.22264099 172.87712097]
[228.36444092 167.13687134]
[214.50625610 161.39662170]
[205.22888184 169.19212341]
[193.44969177 172.32945251]
[181.38197327 170.15574646]
[171.32017517 163.02210999]
[165.20373535 152.22851562]
[164.24336243 139.78727722]
[150.54017639 133.68623352]
[136.83700562 127.58518219]
[123.13381958 121.48413086]
[110.60749817 129.73588562]
[110.80384064 144.73458862]
[118.72112274 158.43231201]
[111.15107727 171.25976562]
[111.34741974 186.25848389]
[111.54376221 201.25720215]
[111.74011230 216.25590515]
[111.93645477 231.25462341]
[112.13279724 246.25334167]
[114.78150177 250.70588684]
[115.40815735 255.27363586]
[114.30464172 259.17144775]
[112.03076935 261.84201050]
[111.63811493 276.83688354]
[122.23750305 288.25137329]
[121.62568665 303.45269775]
[110.67839050 313.48724365]
[110.28573608 328.48211670]
[109.89308167 343.47695923]
[109.50042725 358.47183228]
[112.39968872 367.11273193]
[109.00321960 373.66003418]
[108.41432190 388.64846802]
[119.32498169 400.08233643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 238]
[6 237]
[7 235]
[8 234]
[9 233]
[10 232]
[13 229]
[14 228]
[15 224]
[16 223]
[17 222]
[18 221]
[19 220]
[20 219]
[22 217]
[23 216]
[26 61]
[27 60]
[28 59]
[29 57]
[30 56]
[33 53]
[34 52]
[35 50]
[36 49]
[37 48]
[38 47]
[39 46]
[62 174]
[63 173]
[64 172]
[66 170]
[67 169]
[68 168]
[69 167]
[70 166]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[77 158]
[78 157]
[79 156]
[85 149]
[86 148]
[87 147]
[88 146]
[89 143]
[90 142]
[91 141]
[92 140]
[93 139]
[95 137]
[96 136]
[97 135]
[98 134]
[99 133]
[100 132]
[102 130]
[103 129]
[104 128]
[105 127]
[106 126]
[107 125]
[110 122]
[112 121]
[113 120]
[177 215]
[178 214]
[179 213]
[180 212]
[184 206]
[185 205]
[186 204]
[189 201]
[190 200]
[191 199]
[192 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
