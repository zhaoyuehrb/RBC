%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCCUCGCGGAGGCGGGCGGGGGCGUGGCCUCGCGGAGGCGGGACUCUGGCCGCCUGUUUUUUUUGCAGCCGCGCUGCGCGCACCGCGGGCUCCGGGCUCAGAAGUGCGGACGCCCGGCUCCCGGCGUGGACGCC\
) } def
/len { sequence length } bind def

/coor [
[82.67574310 318.38375854]
[82.33429718 303.38763428]
[81.99285126 288.39154053]
[73.96784210 275.84368896]
[81.38899994 261.87097168]
[81.04755402 246.87484741]
[73.02254486 234.32699585]
[80.44370270 220.35427856]
[80.10225677 205.35815430]
[79.76080322 190.36204529]
[79.07808685 175.37759399]
[78.05445099 160.41256714]
[77.03081512 145.44752502]
[76.00717926 130.48249817]
[87.55367279 97.28133392]
[77.06848907 86.55468750]
[66.58329773 75.82804871]
[56.09811401 65.10140228]
[45.49151230 54.49480438]
[34.76486969 44.00961685]
[24.03822517 33.52442932]
[13.19293213 23.16201591]
[-2.17384839 19.39736176]
[-6.19427776 5.05562544]
[-17.15681648 -5.18267155]
[-28.11935616 -15.42096901]
[-39.08189774 -25.65926552]
[-50.04443741 -35.89756393]
[-61.00697327 -46.13586044]
[-71.96951294 -56.37415695]
[-82.93205261 -66.61245728]
[-93.87172699 -65.61238861]
[-103.33843994 -70.73667908]
[-108.27586365 -80.05316925]
[-107.24499512 -90.32486725]
[-117.73017883 -101.05151367]
[-128.21536255 -111.77815247]
[-138.70056152 -122.50479889]
[-150.00625610 -132.36285400]
[-162.06071472 -141.28976440]
[-174.11518860 -150.21669006]
[-186.16964722 -159.14360046]
[-198.22412109 -168.07051086]
[-210.27857971 -176.99743652]
[-225.03825378 -172.20869446]
[-239.78335571 -177.04205322]
[-248.84413147 -189.63896179]
[-248.73649597 -205.15567017]
[-239.50184631 -217.62567139]
[-224.69110107 -222.25399780]
[-209.99929810 -217.26098633]
[-201.07571411 -204.56651306]
[-201.35166931 -189.05189514]
[-189.29719543 -180.12498474]
[-177.24273682 -171.19807434]
[-165.18826294 -162.27114868]
[-153.13380432 -153.34423828]
[-141.07933044 -144.41731262]
[-142.73971558 -159.32513428]
[-134.58918762 -171.91755676]
[-120.30871582 -176.50755310]
[-106.34767151 -171.02217102]
[-99.01117706 -157.93875122]
[-101.61255646 -143.16604614]
[-112.97696686 -133.37574768]
[-127.97391510 -132.98999023]
[-117.48872375 -122.26334381]
[-107.00354004 -111.53669739]
[-96.51834869 -100.81005859]
[-77.59896851 -97.06888580]
[-72.69375610 -77.57499695]
[-61.73121643 -67.33670044]
[-50.76867676 -57.09840012]
[-39.80613708 -46.86010361]
[-28.84359932 -36.62180710]
[-17.88105965 -26.38350868]
[-6.91851997 -16.14521027]
[4.04401922 -5.90691376]
[18.62668610 -2.87457180]
[23.43123055 12.19947624]
[30.52774620 14.48567486]
[34.52341461 22.79778671]
[45.25005341 33.28297424]
[55.97669601 43.76816177]
[63.01933289 46.21530533]
[66.82475281 54.61621857]
[77.30994415 65.34285736]
[87.79512787 76.06950378]
[98.28031921 86.79614258]
[112.03848267 92.77216339]
[127.03459930 93.11360931]
[142.03071594 93.45505524]
[157.02682495 93.79650879]
[172.02584839 93.96723938]
[187.02584839 93.96723938]
[202.02584839 93.96723938]
[217.02584839 93.96723938]
[230.82601929 86.22994232]
[243.55329895 93.96723938]
[258.55328369 93.96723938]
[273.55328369 93.96723938]
[287.47711182 85.30353546]
[301.81253052 93.26766968]
[301.81253052 109.66681671]
[287.47711182 117.63094330]
[273.55328369 108.96723938]
[258.55328369 108.96723938]
[243.55329895 108.96723938]
[230.82601929 116.70454407]
[217.02584839 108.96723938]
[202.02584839 108.96723938]
[187.02584839 108.96723938]
[172.02584839 108.96723938]
[165.27900696 112.14015198]
[156.68537903 108.79261780]
[141.68927002 108.45117188]
[126.69315338 108.10972595]
[111.69703674 107.76827240]
[106.51583099 113.19091797]
[96.15341949 124.03621674]
[90.97221375 129.45886230]
[91.99584961 144.42388916]
[93.01948547 159.38893127]
[94.04312134 174.35395813]
[97.48036957 180.16453552]
[97.41108704 185.95596313]
[94.75691986 190.02059937]
[95.09836578 205.01670837]
[95.43981934 220.01283264]
[103.48925018 233.63330078]
[96.04366302 246.53340149]
[96.38511658 261.52951050]
[104.43454742 275.14999390]
[96.98896027 288.05007935]
[97.33041382 303.04620361]
[97.67185974 318.04229736]
[100.30049896 337.24490356]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 136]
[2 135]
[3 134]
[5 132]
[6 131]
[8 129]
[9 128]
[10 127]
[11 124]
[12 123]
[13 122]
[14 121]
[15 89]
[16 88]
[17 87]
[18 86]
[19 84]
[20 83]
[21 82]
[22 80]
[24 78]
[25 77]
[26 76]
[27 75]
[28 74]
[29 73]
[30 72]
[31 71]
[35 69]
[36 68]
[37 67]
[38 66]
[39 58]
[40 57]
[41 56]
[42 55]
[43 54]
[44 53]
[90 118]
[91 117]
[92 116]
[93 115]
[94 113]
[95 112]
[96 111]
[97 110]
[99 108]
[100 107]
[101 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
