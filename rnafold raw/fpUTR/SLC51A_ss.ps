%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUUCCUCCGGGGUGAACUCUGAGAUAGAAAGUUGGCCCGGGAAGCUCAAGGAGGGAGAGCGGCAGAGGGGAAGACUCUGCAAUUCUGCUUGCCCCCCACCCCGGCCCAGGCAAGCCACCCUGCCCCCGGCCCCCACCUGCCCGCCCCGCCUGCCCUUCCUCACCCCGGUGCCUGCGGGAUUGCUGGAGAGAACGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[150.99679565 284.15182495]
[136.14250183 282.06622314]
[124.12278748 273.09255981]
[117.90148926 259.44354248]
[119.01263428 244.48477173]
[127.18225861 231.90472412]
[140.39587402 224.80541992]
[155.39529419 224.93739319]
[168.48107910 232.26725769]
[163.22918701 218.21672058]
[157.97729492 204.16618347]
[152.72538757 190.11564636]
[147.47349548 176.06510925]
[142.22160339 162.01457214]
[136.96969604 147.96403503]
[131.71780396 133.91349792]
[126.46590424 119.86296844]
[119.13060760 118.29982758]
[104.46001434 115.17354584]
[97.12471771 113.61040497]
[86.60091400 124.29916382]
[76.07711029 134.98793030]
[65.55330658 145.67668152]
[58.74930573 161.20542908]
[41.94389725 158.96611023]
[39.44349670 142.19755554]
[54.86454773 135.15287781]
[65.38835144 124.46411896]
[75.91215515 113.77536011]
[86.43595886 103.08660126]
[73.96399689 111.42028046]
[59.07963181 113.27924347]
[44.94110489 108.26905060]
[34.54839706 97.45278168]
[30.10667801 83.12549591]
[32.55842209 68.32722473]
[41.38339615 56.19792938]
[54.70908356 49.31126785]
[69.70796967 49.12848663]
[83.19751740 55.68836975]
[92.31545258 67.59900665]
[95.12709045 82.33294678]
[95.36036682 67.33476257]
[95.59364319 52.33657455]
[95.82692719 37.33839035]
[96.06020355 22.34020424]
[84.44812775 14.90625763]
[78.07784271 2.80049539]
[78.51943970 -10.76359558]
[85.55056763 -22.24470139]
[97.24248505 -28.69824028]
[97.70898438 -43.69098282]
[98.17548370 -58.68372726]
[90.87110901 -72.71785736]
[99.00048065 -85.19834137]
[99.46697998 -100.19108582]
[99.93347931 -115.18383026]
[97.07086945 -123.86592865]
[100.52561188 -130.40559387]
[93.44038391 -144.55162048]
[101.76286316 -156.90417480]
[99.03562927 -165.62974548]
[102.59165955 -172.11489868]
[103.52420044 -187.08587646]
[104.45674896 -202.05686951]
[105.38928986 -217.02784729]
[106.32183838 -231.99884033]
[96.53783417 -249.61828613]
[107.90087128 -265.25817871]
[108.36737061 -280.25094604]
[108.83386993 -295.24368286]
[109.30036163 -310.23641968]
[98.75731659 -321.70297241]
[99.44399261 -336.90112305]
[110.44057465 -346.88162231]
[99.63057709 -353.17596436]
[92.56587219 -363.41137695]
[90.53801727 -375.60855103]
[93.87164307 -387.44024658]
[101.87433624 -396.67547607]
[112.97938538 -401.59997559]
[113.91193390 -416.57095337]
[114.84447479 -431.54196167]
[101.60565948 -439.05825806]
[92.97825623 -451.52642822]
[90.62943268 -466.44296265]
[94.97213745 -480.84094238]
[105.09375000 -491.88006592]
[118.94721985 -497.40701294]
[119.87976837 -512.37799072]
[120.81230927 -527.34899902]
[121.74485016 -542.31994629]
[122.67739868 -557.29095459]
[123.60993958 -572.26190186]
[124.54248810 -587.23291016]
[111.47275543 -600.93994141]
[112.54642487 -619.52911377]
[126.61662292 -631.23187256]
[127.08312225 -646.22460938]
[117.18933105 -658.85363770]
[121.03446960 -674.42907715]
[135.66886902 -681.00280762]
[149.86628723 -673.53198242]
[152.73567200 -657.74761963]
[142.07586670 -645.75811768]
[141.60937500 -630.76538086]
[151.04469299 -624.33624268]
[156.25581360 -614.04272461]
[155.84336853 -602.39270020]
[149.79421997 -592.28771973]
[139.51347351 -586.30035400]
[138.58093262 -571.32940674]
[137.64837646 -556.35839844]
[136.71583557 -541.38739014]
[135.78329468 -526.41644287]
[134.85075378 -511.44543457]
[133.91819763 -496.47445679]
[146.97869873 -489.27105713]
[155.65213013 -477.06118774]
[158.17449951 -462.23556519]
[153.99270630 -447.72583008]
[143.88470459 -436.42468262]
[129.81546021 -430.60940552]
[128.88291931 -415.63842773]
[127.95037079 -400.66744995]
[142.07037354 -390.07046509]
[147.05171204 -372.96984863]
[140.72065735 -356.15362549]
[125.43331909 -346.41513062]
[135.78814697 -335.77026367]
[135.52862549 -320.55883789]
[124.29310608 -309.76992798]
[123.82660675 -294.77719116]
[123.36011505 -279.78445435]
[122.89361572 -264.79168701]
[130.53807068 -257.99786377]
[133.23391724 -247.90490723]
[129.85639954 -237.78732300]
[121.29281616 -231.06628418]
[120.36027527 -216.09530640]
[119.42773438 -201.12432861]
[118.49518585 -186.15333557]
[117.56264496 -171.18235779]
[116.74654388 -156.20457458]
[123.88181305 -143.13027954]
[115.50929260 -129.70599365]
[114.92622375 -114.71733093]
[114.45972443 -99.72458649]
[113.99322510 -84.73184204]
[121.33097076 -71.77009583]
[113.16822815 -58.21723175]
[112.70172882 -43.22448730]
[112.23522949 -28.23174286]
[125.52307129 -18.59836769]
[130.50296021 -2.78536725]
[125.02441406 13.03780079]
[111.05838776 22.57348061]
[110.82511139 37.57166672]
[110.59183502 52.56985474]
[110.35855865 67.56803894]
[110.12527466 82.56622314]
[140.51644897 114.61106873]
[145.76834106 128.66160583]
[151.02023315 142.71214294]
[156.27214050 156.76268005]
[161.52403259 170.81321716]
[166.77592468 184.86375427]
[172.02781677 198.91429138]
[177.27972412 212.96482849]
[182.53161621 227.01536560]
[191.45256042 234.96049500]
[190.99385071 245.57978821]
[198.15464783 258.76019287]
[205.31544495 271.94058228]
[212.16705322 277.99276733]
[212.48330688 285.38211060]
[219.43826294 298.67230225]
[226.39320374 311.96246338]
[241.61392212 314.33648682]
[252.39222717 325.09201050]
[254.74275208 339.95602417]
[247.97108459 353.19546509]
[254.92604065 366.48562622]
[270.08203125 370.96572876]
[277.55755615 384.89022827]
[272.91748047 399.99804688]
[258.91470337 407.32589722]
[243.85681152 402.52636719]
[236.67739868 388.44689941]
[241.63586426 373.44058228]
[234.68090820 360.15042114]
[219.94303894 358.16726685]
[209.07029724 347.76306152]
[206.37728882 332.77636719]
[213.10304260 318.91741943]
[206.14808655 305.62722778]
[199.19313049 292.33706665]
[192.13504028 279.10137939]
[184.97424316 265.92098999]
[177.81344604 252.74058533]
[174.76232910 267.42700195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 170]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[20 30]
[21 29]
[22 28]
[23 27]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[51 153]
[52 152]
[53 151]
[55 149]
[56 148]
[57 147]
[59 146]
[61 144]
[63 143]
[64 142]
[65 141]
[66 140]
[67 139]
[69 135]
[70 134]
[71 133]
[72 132]
[75 129]
[81 125]
[82 124]
[83 123]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
[95 111]
[98 106]
[99 105]
[172 200]
[173 199]
[174 198]
[176 197]
[177 196]
[178 195]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
