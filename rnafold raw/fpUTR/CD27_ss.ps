%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAAGGGGAAGGGGGUGGAGGUUGCUGCUAUGAGAGAGAAAAAAAAAACAGCCACAAUAGAGAUUCUGCCUUCAAAGGUUGGCUUGCCACCUGAAGCAGCCACUGCCCAGGGGGUGCAAAGAAGAGACAGCAGCGCCCAGCUUGGAGGUGCUAACUCCAGAGGCCAGCAUCAGCAACUGGGCACAGAAAGGAGCCGCCUGGGCAGGGACC\
) } def
/len { sequence length } bind def

/coor [
[86.23151398 133.04295349]
[77.98493195 128.22666931]
[71.30524445 121.40137482]
[57.66917419 127.65097809]
[44.03310013 133.90057373]
[30.39702797 140.15017700]
[16.76095390 146.39978027]
[3.17156148 152.75024414]
[-10.37040615 159.20121765]
[-23.91237259 165.65220642]
[-37.45434189 172.10317993]
[-38.14928055 191.32402039]
[-48.47054672 207.45643616]
[-65.48447418 216.06930542]
[-84.43302917 214.84719849]
[-100.06430054 204.21218872]
[-113.20032501 211.45407104]
[-126.33634949 218.69595337]
[-139.47238159 225.93783569]
[-143.96223450 240.85356140]
[-157.38719177 248.01074219]
[-171.57939148 243.63842773]
[-184.71542358 250.88031006]
[-197.85144043 258.12219238]
[-194.07434082 272.72302246]
[-194.04782104 287.80447388]
[-197.77352905 302.41848755]
[-205.01727295 315.64645386]
[-215.32369995 326.65682983]
[-228.04495239 334.75750732]
[-242.38133240 339.43923950]
[-257.43167114 340.40774536]
[-272.24990845 337.60217285]
[-285.90451050 331.19882202]
[-297.53713989 321.60028076]
[-306.41659546 309.40988159]
[-311.98471069 295.39392090]
[-313.89141846 280.43344116]
[-312.01690674 265.46893311]
[-306.47900391 251.44100952]
[-297.62579346 239.23152161]
[-286.01385498 229.60794067]
[-272.37304688 223.17523193]
[-257.56091309 220.33775330]
[-242.50851440 221.27388000]
[-228.16207886 225.92474365]
[-215.42343140 233.99800110]
[-205.09332275 244.98616028]
[-191.95730591 237.74427795]
[-178.82127380 230.50239563]
[-174.94236755 216.16748047]
[-161.72372437 208.63606262]
[-146.71426392 212.80181885]
[-133.57823181 205.55993652]
[-120.44220734 198.31805420]
[-107.30618286 191.07617188]
[-108.91284943 180.14691162]
[-107.11222839 169.22097778]
[-102.05923462 159.33790588]
[-94.21900177 151.44300842]
[-84.32410431 146.29693604]
[-73.30613708 144.40242004]
[-62.20798492 145.95520020]
[-52.08514786 150.82395935]
[-43.90531921 158.56121826]
[-30.36335182 152.11022949]
[-16.82138443 145.65925598]
[-3.27941656 139.20828247]
[1.40696442 133.49417114]
[10.51135349 132.76370239]
[24.14742661 126.51410675]
[37.78350067 120.26450348]
[51.41957474 114.01490784]
[65.05564880 107.76530457]
[64.26215363 97.94715118]
[66.17466736 88.28443146]
[70.64836884 79.50879669]
[77.34452057 72.28471375]
[70.49507904 58.93985748]
[63.64564133 45.59500122]
[56.79620361 32.25014496]
[49.94676590 18.90528870]
[43.24455643 12.70014095]
[43.09635925 5.31154966]
[36.44541931 -8.13333797]
[29.79448128 -21.57822609]
[14.47623539 -24.05430222]
[3.56282139 -35.08503342]
[1.25066996 -50.42887878]
[8.42885113 -64.18581390]
[22.33720779 -71.06602478]
[37.62769318 -68.42391968]
[48.42079926 -57.27544785]
[50.56636429 -41.90742493]
[43.23936844 -28.22916603]
[49.89030838 -14.78427696]
[56.54124832 -1.33938885]
[63.29162216 12.05585098]
[70.14105988 25.40070724]
[76.99050140 38.74556351]
[83.83993530 52.09041977]
[90.68937683 65.43527985]
[116.81596375 68.39887238]
[133.86952209 88.41281128]
[148.76425171 86.63871765]
[163.65896606 84.86461639]
[178.55368042 83.09052277]
[193.44839478 81.31642151]
[208.34310913 79.54232788]
[223.23782349 77.76822662]
[238.13253784 75.99413300]
[253.02726746 74.22003174]
[265.81546021 64.90485382]
[279.36849976 71.08255005]
[294.26321411 69.30844879]
[309.15792847 67.53435516]
[321.78219604 59.43324280]
[329.60073853 46.63204193]
[321.27352905 33.84061050]
[319.32949829 18.70180130]
[324.15463257 4.22143650]
[334.79086304 -6.72539616]
[349.12640381 -11.96519661]
[364.31488037 -10.45759678]
[377.34063721 -2.50193405]
[385.61737061 10.32219028]
[387.50177002 25.46853638]
[382.61965942 39.92978668]
[371.94039917 50.83465195]
[357.58435059 56.01795578]
[342.40191650 54.45055771]
[334.58340454 67.25176239]
[341.82562256 80.38836670]
[349.06716919 93.52381134]
[362.98049927 85.99185181]
[375.59170532 93.91690063]
[390.59005737 94.13917542]
[405.58840942 94.36145020]
[420.58676147 94.58372498]
[435.58511353 94.80599976]
[450.58346558 95.02827454]
[459.20977783 92.02655029]
[465.80200195 95.36660767]
[480.79541016 95.81111145]
[495.78881836 96.25560760]
[507.23989868 85.69574738]
[522.43902588 86.36012268]
[532.43566895 97.34205627]
[547.42907715 97.78655243]
[562.42248535 98.23105621]
[577.41589355 98.67555237]
[592.40930176 99.12005615]
[607.40270996 99.56455231]
[618.85382080 89.00469208]
[634.05291748 89.66906738]
[644.04956055 100.65100098]
[659.04296875 101.09549713]
[671.65747070 91.18318176]
[687.23852539 95.00546265]
[693.83374023 109.63021088]
[686.38372803 123.83856964]
[670.60357666 126.73110199]
[658.59844971 116.08891296]
[643.60504150 115.64440918]
[632.97540283 126.01484680]
[617.76361084 125.77764893]
[606.95819092 114.55796814]
[591.96478271 114.11346436]
[576.97137451 113.66896820]
[561.97796631 113.22446442]
[546.98455811 112.77996826]
[531.99114990 112.33546448]
[521.36151123 122.70590210]
[506.14971924 122.46870422]
[495.34432983 111.24902344]
[480.35089111 110.80451965]
[465.35748291 110.36002350]
[450.36120605 110.02662659]
[435.36285400 109.80435181]
[420.36450195 109.58207703]
[405.36614990 109.35980225]
[390.36779785 109.13752747]
[375.36944580 108.91525269]
[362.52890015 116.46310425]
[348.84490967 108.52216339]
[346.51251221 123.33972168]
[337.30999756 135.18511963]
[323.52908325 141.10848999]
[308.60165405 139.63467407]
[296.24514771 131.13073730]
[289.53677368 117.71442413]
[290.14709473 102.72684479]
[297.92413330 89.90040588]
[310.93203735 82.42906952]
[296.03732300 84.20317078]
[281.14260864 85.97726440]
[269.41976929 95.16555023]
[254.80136108 89.11475372]
[239.90664673 90.88884735]
[225.01193237 92.66294861]
[210.11720276 94.43704224]
[195.22248840 96.21114349]
[180.32777405 97.98523712]
[165.43305969 99.75933838]
[150.53834534 101.53343201]
[135.64363098 103.30753326]
[133.50067139 112.61400604]
[128.97334290 121.02268982]
[122.38385773 127.93511200]
[114.20124054 132.85928345]
[105.00785828 135.44473267]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 74]
[4 73]
[5 72]
[6 71]
[7 70]
[8 68]
[9 67]
[10 66]
[11 65]
[16 56]
[17 55]
[18 54]
[19 53]
[22 50]
[23 49]
[24 48]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[84 97]
[85 96]
[86 95]
[104 206]
[105 205]
[106 204]
[107 203]
[108 202]
[109 201]
[110 200]
[111 199]
[112 198]
[114 196]
[115 195]
[116 194]
[117 132]
[118 131]
[134 185]
[136 183]
[137 182]
[138 181]
[139 180]
[140 179]
[141 178]
[143 177]
[144 176]
[145 175]
[148 172]
[149 171]
[150 170]
[151 169]
[152 168]
[153 167]
[156 164]
[157 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
