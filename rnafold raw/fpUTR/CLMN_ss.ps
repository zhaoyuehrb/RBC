%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGACUCCAGCUCCGCGGCGCCCUCGCCGGGUGCGUGCCGCUCGCGCGCCCGCCAGCCAGGCUCUCCGCGCCCGCCGCCCGCGCCGCGCUGGCCCGGGCUCUCCCGCCCGCGCUUC\
) } def
/len { sequence length } bind def

/coor [
[93.41191101 162.10096741]
[92.20491028 147.14961243]
[90.99791718 132.19825745]
[77.55682373 122.03964996]
[71.47154236 107.42079926]
[73.47687531 92.73461914]
[82.02179718 81.88403320]
[75.05094910 68.60218811]
[68.08010101 55.32035065]
[61.10925293 42.03850937]
[54.13840485 28.75666809]
[49.49409866 25.83912468]
[46.79198074 21.80029297]
[46.12936783 17.60637093]
[47.19016266 14.11356354]
[41.31066513 0.31387234]
[35.43116760 -13.48581886]
[29.55166626 -27.28551102]
[23.67216682 -41.08520126]
[17.79266739 -54.88489532]
[11.91316891 -68.68458557]
[-3.07144594 -72.25775146]
[-12.96319485 -83.83387756]
[-14.12799263 -98.83744812]
[-6.32808971 -111.49839020]
[-12.20758915 -125.29808807]
[-24.73495293 -134.96119690]
[-22.60546112 -149.70278931]
[-28.48496056 -163.50248718]
[-34.36445999 -177.30216980]
[-40.24395752 -191.10186768]
[-46.12345886 -204.90155029]
[-52.00295639 -218.70124817]
[-57.88245773 -232.50094604]
[-63.76195526 -246.30062866]
[-81.69010162 -257.87820435]
[-78.85118103 -278.24740601]
[-85.82202911 -291.52923584]
[-92.79287720 -304.81109619]
[-100.11780548 -317.90100098]
[-107.79152679 -330.78952026]
[-115.46524811 -343.67803955]
[-129.17332458 -351.57736206]
[-129.03619385 -366.47134399]
[-136.70991516 -379.35986328]
[-144.38363647 -392.24838257]
[-158.95095825 -399.77999878]
[-159.44165039 -416.17181396]
[-145.35092163 -424.56130981]
[-131.17413330 -416.31811523]
[-131.49511719 -399.92208862]
[-123.82139587 -387.03356934]
[-116.14767456 -374.14505005]
[-102.98847961 -367.16760254]
[-102.57672882 -351.35174561]
[-94.90300751 -338.46322632]
[-87.22927856 -325.57470703]
[-82.77967834 -323.53317261]
[-79.62970734 -318.60507202]
[-79.51103973 -311.78195190]
[-72.54019165 -298.50009155]
[-65.56934357 -285.21826172]
[-56.55240631 -283.94604492]
[-49.06452179 -278.52349854]
[-44.92007065 -270.10427856]
[-45.19754028 -260.58538818]
[-49.96226501 -252.18013000]
[-44.08276367 -238.38043213]
[-38.20326614 -224.58074951]
[-32.32376480 -210.78105164]
[-26.44426727 -196.98136902]
[-20.56476784 -183.18167114]
[-14.68526840 -169.38197327]
[-8.80576992 -155.58229065]
[3.30105329 -146.90621948]
[1.59210277 -131.17758179]
[7.47160196 -117.37789154]
[22.00588799 -114.23265839]
[32.01961899 -102.99925995]
[33.51609421 -87.84624481]
[25.71286011 -74.56408691]
[31.59235954 -60.76439285]
[37.47185898 -46.96470261]
[43.35135651 -33.16500854]
[49.23085785 -19.36531830]
[55.11035538 -5.56562662]
[60.98985672 8.23406506]
[67.42024231 21.78582191]
[74.39109039 35.06766129]
[81.36193848 48.34950256]
[88.33278656 61.63134384]
[95.30363464 74.91318512]
[114.63530731 75.94256592]
[129.48672485 91.11521149]
[130.26370239 114.20822144]
[140.79885864 124.88578033]
[151.33403015 135.56333923]
[161.86918640 146.24090576]
[172.40435791 156.91847229]
[188.20797729 156.77391052]
[199.42636108 167.90602112]
[199.40380859 183.71029663]
[188.15373230 194.81033325]
[172.35057068 194.62071228]
[161.37008667 183.25389099]
[161.72679138 167.45362854]
[151.19163513 156.77606201]
[140.65646362 146.09851074]
[130.12130737 135.42094421]
[119.58613586 124.74337769]
[105.94927216 130.99125671]
[107.15627289 145.94261169]
[108.36327362 160.89398193]
[118.11927795 174.07548523]
[111.33450317 189.00527954]
[94.98853302 190.32485962]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 113]
[2 112]
[3 111]
[7 92]
[8 91]
[9 90]
[10 89]
[11 88]
[15 87]
[16 86]
[17 85]
[18 84]
[19 83]
[20 82]
[21 81]
[25 77]
[26 76]
[28 74]
[29 73]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[35 67]
[37 62]
[38 61]
[39 60]
[40 57]
[41 56]
[42 55]
[44 53]
[45 52]
[46 51]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
