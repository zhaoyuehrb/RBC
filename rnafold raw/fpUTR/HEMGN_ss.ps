%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUAGCAACCUAUGCUAGGGGUUGCUAGCACCAGCCAUUUCCCCUACUCACACCUGUGCAGUGUGAUAAAGAUAGUAGAAUUAGCCUGCAGUUGUGGUCCAACCAGAUAAAACUUUUAGGCGGGAAGUCAAGUGACAGGCAAACUUGUGUGUGUGGUUUUUUUUUUUAAGUGUUAGAUGUUUUUGAUAUUUUAAAAAAGCAUCUAGGCUGCUUGUGGAAGUCAGACCAAAAUAGCAGGAAGGUAUUGCAGCA\
AG\
) } def
/len { sequence length } bind def

/coor [
[100.09168243 290.74508667]
[85.84069824 295.42584229]
[70.96097565 293.53009033]
[58.33889389 285.42559814]
[50.42288971 272.68444824]
[48.74851227 257.77819824]
[42.38166046 271.35992432]
[36.01481247 284.94165039]
[29.64796066 298.52337646]
[23.28111076 312.10510254]
[16.91425896 325.68682861]
[10.54740906 339.26855469]
[4.18055868 352.85028076]
[-2.18629193 366.43200684]
[4.55735445 380.54077148]
[0.60430932 395.67044067]
[-12.17891979 404.67727661]
[-27.75648308 403.30850220]
[-38.77313232 392.21041870]
[-40.02714157 376.62319946]
[-30.92640686 363.90664673]
[-15.76801586 360.06515503]
[-9.40116501 346.48342896]
[-3.03431463 332.90170288]
[3.33253598 319.31997681]
[9.69938660 305.73825073]
[16.06623650 292.15652466]
[22.43308830 278.57479858]
[28.79993820 264.99307251]
[35.16679001 251.41136169]
[40.52525330 237.40110779]
[44.84673691 223.03710938]
[49.16822433 208.67309570]
[41.54714584 198.30461121]
[41.27623367 185.24497986]
[48.67773819 174.24671936]
[61.24117279 169.44081116]
[65.73724365 155.13047791]
[70.23330688 140.82015991]
[65.75868988 134.80120850]
[54.95228195 145.20416260]
[44.98381424 156.41262817]
[30.84104919 151.41439819]
[30.12899208 136.43132019]
[43.73425293 130.11444092]
[56.80945206 122.76330566]
[52.33483505 116.74435425]
[37.33594513 116.92699432]
[22.33705711 117.10964203]
[7.33816957 117.29228973]
[-7.63403797 118.20497894]
[-22.54405212 119.84555054]
[-37.45406723 121.48611450]
[-52.36408234 123.12668610]
[-67.27409363 124.76725006]
[-82.18411255 126.40782166]
[-90.71421814 139.51397705]
[-105.68811798 144.02134705]
[-120.03558350 137.80169678]
[-126.98219299 123.79174805]
[-123.24796295 108.60657501]
[-110.59608459 99.41614532]
[-95.00038147 100.55990601]
[-83.82467651 111.49780273]
[-68.91466522 109.85723877]
[-54.00465012 108.21666718]
[-39.09463501 106.57610321]
[-24.18461990 104.93553162]
[-9.27460575 103.29496765]
[-21.71692848 94.91709900]
[-26.94718170 80.85848999]
[-23.00611877 66.38548279]
[-11.37005997 56.91963959]
[3.60214281 56.00686646]
[16.30191612 63.98907852]
[21.97194099 77.87615204]
[18.48823166 92.46600342]
[7.15552330 102.29340363]
[22.15441132 102.11075592]
[37.15329742 101.92810822]
[52.15218735 101.74546051]
[53.99925613 93.39071655]
[57.24770737 85.74376678]
[61.70625305 79.02878571]
[67.14994812 73.42485809]
[73.33001709 69.06145477]
[79.98420715 66.01583862]
[74.96849060 51.87926483]
[69.95278168 37.74269485]
[64.93707275 23.60612297]
[59.92136002 9.46955109]
[54.81967545 -4.63622093]
[49.63220215 -18.71067047]
[37.59978867 -28.98352432]
[40.45817947 -43.60128403]
[35.27070618 -57.67573166]
[30.08323669 -71.75018311]
[15.29439354 -76.06253052]
[5.98927498 -88.11524963]
[5.57043695 -103.15814209]
[13.98900604 -115.41643524]
[8.80153465 -129.49089050]
[3.61406302 -143.56533813]
[-10.45844460 -150.24382019]
[-15.51878262 -164.59121704]
[-9.06513405 -177.96604919]
[-14.25260544 -192.04049683]
[-19.52567101 -206.08309937]
[-24.88413429 -220.09333801]
[-30.24259758 -234.10359192]
[-45.08013916 -239.04133606]
[-53.22834396 -252.38827515]
[-50.83988953 -267.84237671]
[-39.04251862 -278.10668945]
[-23.40659904 -278.33471680]
[-11.31492901 -268.41879272]
[-8.47682667 -253.04092407]
[-16.23235512 -239.46205139]
[-10.87389278 -225.45181274]
[-5.51542950 -211.44155884]
[-0.20643219 -206.33204651]
[-0.17815593 -197.22796631]
[5.00931549 -183.15351868]
[18.59932137 -177.16625977]
[24.06065178 -162.96665955]
[17.68851280 -148.75280762]
[22.87598419 -134.67835999]
[28.06345558 -120.60390472]
[42.42375946 -116.74131012]
[51.86771774 -105.02484131]
[52.61040878 -89.81623077]
[44.15768433 -76.93765259]
[49.34515762 -62.86320496]
[54.53263092 -48.78875351]
[66.19400024 -39.52259827]
[63.70665359 -23.89814186]
[68.89412689 -9.82369232]
[74.14051056 -4.64990711]
[74.05792999 4.45384026]
[79.07363892 18.59041214]
[84.08935547 32.72698212]
[89.10506439 46.86355591]
[94.12077332 61.00012589]
[109.21009064 61.64990616]
[122.94882202 67.92342377]
[133.32229614 78.90071106]
[138.80932617 92.97203827]
[153.80821228 93.15468597]
[168.80709839 93.33732605]
[183.80598450 93.51997375]
[198.80487061 93.70262146]
[205.64967346 80.10446167]
[217.67076111 70.86430359]
[232.45117188 67.77239990]
[247.04832458 71.38960266]
[258.57983398 80.94645691]
[264.79269409 94.50617981]
[279.79156494 94.68881989]
[294.79046631 94.87146759]
[309.78933716 95.05411530]
[324.78823853 95.23676300]
[339.78713989 95.41941071]
[355.64993286 86.04094696]
[370.37106323 95.61678314]
[385.37106323 95.61678314]
[400.37106323 95.61678314]
[415.37106323 95.61678314]
[430.37106323 95.61678314]
[444.17123413 87.87947845]
[456.89849854 95.61678314]
[471.89849854 95.61678314]
[486.89849854 95.61678314]
[501.89849854 95.61678314]
[516.89849854 95.61678314]
[531.89825439 95.52545929]
[546.89709473 95.34281158]
[561.89459229 95.06884766]
[576.89019775 94.70358276]
[591.88574219 94.33831787]
[606.88128662 93.97305298]
[621.87683105 93.60778809]
[636.87237549 93.24252319]
[651.86791992 92.87725830]
[666.86346436 92.51199341]
[681.85900879 92.14672852]
[696.85461426 91.78146362]
[711.85015869 91.41619110]
[719.13287354 77.89371490]
[732.20953369 69.83792877]
[747.56262207 69.41579437]
[761.06225586 76.74087524]
[769.07696533 89.84275055]
[769.45098877 105.19709015]
[762.08361816 118.67364502]
[748.95672607 126.64730072]
[733.60125732 126.97317505]
[720.14788818 119.56361389]
[712.21539307 106.41174316]
[697.21984863 106.77701569]
[682.22430420 107.14228058]
[667.22875977 107.50754547]
[652.23321533 107.87281036]
[637.23767090 108.23807526]
[622.24206543 108.60334015]
[607.24652100 108.96860504]
[592.25097656 109.33386993]
[577.25543213 109.69913483]
[562.25988770 110.06439972]
[555.66925049 113.35927582]
[547.07977295 110.34169769]
[532.08087158 110.52434540]
[525.45062256 113.73872375]
[516.89849854 110.61678314]
[501.89849854 110.61678314]
[486.89849854 110.61678314]
[471.89849854 110.61678314]
[456.89849854 110.61678314]
[444.17123413 118.35408020]
[430.37106323 110.61678314]
[415.37106323 110.61678314]
[400.37106323 110.61678314]
[385.37106323 110.61678314]
[370.37106323 110.61678314]
[361.61572266 118.93670654]
[349.13812256 119.07696533]
[339.60449219 110.41829681]
[324.60559082 110.23564911]
[309.60671997 110.05300140]
[294.60781860 109.87035370]
[279.60891724 109.68771362]
[264.61004639 109.50506592]
[258.06884766 122.90947723]
[246.30801392 132.18269348]
[231.62712097 135.44335938]
[216.92637634 131.99246216]
[205.13388062 122.46231842]
[198.62222290 108.70150757]
[183.62333679 108.51886749]
[168.62445068 108.33621979]
[153.62556458 108.15357208]
[138.62667847 107.97092438]
[130.36854553 129.37882996]
[110.56480408 143.81077576]
[84.54363251 145.31622314]
[80.04756165 159.62655640]
[75.55149841 173.93687439]
[83.92687225 189.31111145]
[78.68087769 205.65936279]
[63.53223419 212.99458313]
[59.21074677 227.35859680]
[54.88925934 241.72259521]
[66.08351898 231.73818970]
[80.48155212 227.53144836]
[95.29041290 229.91839600]
[107.63748169 238.43603516]
[115.12765503 251.43208313]
[116.30798340 266.38555908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 30]
[7 29]
[8 28]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[31 251]
[32 250]
[33 249]
[37 246]
[38 245]
[39 244]
[47 81]
[48 80]
[49 79]
[50 78]
[51 69]
[52 68]
[53 67]
[54 66]
[55 65]
[56 64]
[87 143]
[88 142]
[89 141]
[90 140]
[91 139]
[92 137]
[93 136]
[95 134]
[96 133]
[97 132]
[101 128]
[102 127]
[103 126]
[106 123]
[107 122]
[108 120]
[109 119]
[110 118]
[147 241]
[148 240]
[149 239]
[150 238]
[151 237]
[157 231]
[158 230]
[159 229]
[160 228]
[161 227]
[162 226]
[164 223]
[165 222]
[166 221]
[167 220]
[168 219]
[170 217]
[171 216]
[172 215]
[173 214]
[174 213]
[175 211]
[176 210]
[177 208]
[178 207]
[179 206]
[180 205]
[181 204]
[182 203]
[183 202]
[184 201]
[185 200]
[186 199]
[187 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
