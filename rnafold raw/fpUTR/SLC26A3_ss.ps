%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUGGAUGCACACAGAGCCUGUAGACCUGAGUGGAUGGACACUGCCUCUUAGAACUAGAACUUAGAACUUUAUCUUGAAAAUGUACCACUGUUGCAGAAGCUCCUCACAGAGUAUGUGUCAGGCAUUUUUAACCUGCUAAAGGCAAGAAGAAGUGUUCACCACAUAGUUGCAAAGGUCUUCAACUUGCCACAGCCAACAGAAAAAUCAAA\
) } def
/len { sequence length } bind def

/coor [
[210.01174927 788.85247803]
[216.81236267 775.33929443]
[227.45738220 764.59039307]
[240.90391541 757.65887451]
[238.46961975 742.85772705]
[236.03533936 728.05657959]
[219.41629028 717.89062500]
[215.57360840 698.48022461]
[227.42593384 682.25585938]
[224.33625793 667.57751465]
[221.24658203 652.89916992]
[205.76985168 648.25207520]
[194.68482971 636.36560059]
[191.08644104 620.41943359]
[196.04922485 604.74530029]
[208.30889893 593.65002441]
[205.00205994 579.01910400]
[201.69520569 564.38812256]
[198.28004456 549.78210449]
[194.75674438 535.20172119]
[191.23345947 520.62139893]
[175.86499023 514.85083008]
[166.87458801 500.91720581]
[167.97200012 484.20468140]
[178.92242432 471.31292725]
[175.18345642 456.78640747]
[171.44450378 442.25985718]
[166.73332214 436.56619263]
[167.75946045 427.49035645]
[164.23617554 412.91003418]
[153.72589111 402.35620117]
[158.00524902 387.12472534]
[154.48196411 372.54440308]
[150.95866394 357.96405029]
[147.43537903 343.38369751]
[142.80909729 337.62081909]
[143.96960449 328.56121826]
[140.66276550 313.93026733]
[137.35591125 299.29931641]
[134.04905701 284.66836548]
[130.74221802 270.03741455]
[127.43536377 255.40644836]
[124.12851715 240.77549744]
[120.82167053 226.14454651]
[110.46892548 215.43614197]
[114.97352600 200.26976013]
[104.62077332 189.56137085]
[109.12537384 174.39498901]
[105.81852722 159.76403809]
[102.51168060 145.13307190]
[99.20482635 130.50212097]
[85.84001160 130.18540955]
[72.79736328 123.83988953]
[62.82417297 111.78768921]
[58.40357590 95.59484863]
[61.20202255 77.88510132]
[46.62167740 74.36181641]
[32.04133606 70.83852386]
[17.65560913 77.93996429]
[3.19596004 70.99028015]
[-0.24540709 55.32067490]
[9.97142982 42.95152664]
[26.00898743 43.37139130]
[35.56462479 56.25817871]
[50.14496994 59.78147125]
[64.72531128 63.30475998]
[70.51406860 58.53607941]
[59.40776825 48.45391083]
[45.10507965 43.93361282]
[39.17928696 30.15373611]
[45.73662567 16.66294861]
[60.23323441 12.80959320]
[72.62379456 21.26382256]
[74.32228088 36.16758347]
[82.09157562 48.99871826]
[87.88033295 44.23003769]
[87.21370697 29.24485779]
[86.54707336 14.25967884]
[85.88044739 -0.72550064]
[85.21382141 -15.71068001]
[84.54719543 -30.69585991]
[83.88056183 -45.68103790]
[83.21393585 -60.66621780]
[82.54730988 -75.65139771]
[81.88068390 -90.63658142]
[79.41690826 -94.20991516]
[78.32746124 -98.00016785]
[78.51183319 -101.54879761]
[79.73097229 -104.47696686]
[81.64523315 -106.52383423]
[81.86750793 -121.52218628]
[82.08978271 -136.52053833]
[79.20861816 -142.46983337]
[79.69142151 -148.13136292]
[82.54745483 -151.95831299]
[83.21408081 -166.94348145]
[83.88071442 -181.92866516]
[76.76435852 -196.05906677]
[85.05963898 -208.42990112]
[77.94329071 -222.56030273]
[86.23857117 -234.93113708]
[86.90519714 -249.91630554]
[87.57182312 -264.90148926]
[88.23845673 -279.88665771]
[77.38724518 -291.37695312]
[77.92264557 -307.17218018]
[89.52702332 -317.90130615]
[105.31569672 -317.19894409]
[115.92153168 -305.48178101]
[115.05226898 -289.70141602]
[103.22363281 -279.22003174]
[102.55700684 -264.23486328]
[101.89038086 -249.24967957]
[101.22374725 -234.26451111]
[108.38777924 -221.20594788]
[100.04482269 -207.76327515]
[107.20885468 -194.70471191]
[98.86589050 -181.26203918]
[98.19926453 -166.27685547]
[97.53263855 -151.29167175]
[97.08813477 -136.29826355]
[96.86585999 -121.29991150]
[96.64358521 -106.30155945]
[96.86585999 -91.30320740]
[97.53248596 -76.31802368]
[98.19911957 -61.33284760]
[98.86574554 -46.34766769]
[99.53237152 -31.36248779]
[100.19899750 -16.37730789]
[100.86563110 -1.39212847]
[101.53225708 13.59305096]
[102.19888306 28.57822990]
[102.86550903 43.56341171]
[116.26074982 50.31378555]
[128.70184326 41.93408203]
[141.14292908 33.55438232]
[145.61335754 18.14676285]
[160.50108337 12.16887093]
[174.38551331 20.20643234]
[176.61569214 36.09371948]
[165.48081970 47.64336395]
[149.52262878 45.99546814]
[137.08154297 54.37516785]
[124.64045715 62.75486755]
[137.52445984 102.13822174]
[113.83578491 127.19528198]
[117.14263153 141.82623291]
[120.44947815 156.45718384]
[123.75632477 171.08813477]
[134.34559631 182.84303284]
[129.60447693 196.96292114]
[140.19375610 208.71781921]
[135.45262146 222.83770752]
[138.75947571 237.46865845]
[142.06631470 252.09960938]
[145.37316895 266.73056030]
[148.68000793 281.36151123]
[151.98686218 295.99246216]
[155.29371643 310.62341309]
[158.60055542 325.25436401]
[162.01571655 339.86041260]
[165.53901672 354.44076538]
[169.06230164 369.02111816]
[172.58560181 383.60144043]
[183.34790039 395.19815063]
[178.81652832 409.38671875]
[182.33981323 423.96707153]
[185.97103882 438.52090454]
[189.70999146 453.04745483]
[193.44895935 467.57397461]
[206.60879517 471.67245483]
[215.95106506 481.65887451]
[219.11381531 494.85186768]
[215.37496948 507.78067017]
[205.81379700 517.09814453]
[209.33709717 531.67846680]
[212.86038208 546.25878906]
[217.91758728 553.86462402]
[216.32615662 561.08129883]
[219.63301086 575.71221924]
[222.93984985 590.34320068]
[236.49464417 593.79553223]
[247.18865967 602.70861816]
[252.97154236 615.29931641]
[252.76661682 629.08679199]
[246.67086792 641.38153076]
[235.92492676 649.80944824]
[239.01460266 664.48779297]
[242.10427856 679.16613770]
[252.21020508 682.58166504]
[259.92807007 689.82824707]
[263.91143799 699.54980469]
[263.50363159 709.96704102]
[258.84524536 719.20324707]
[250.83648682 725.62225342]
[253.27078247 740.42346191]
[255.70507812 755.22460938]
[270.66329956 757.48449707]
[284.19015503 764.25793457]
[294.96041870 774.88128662]
[301.91894531 788.31384277]
[304.38400269 803.23962402]
[302.11410522 818.19635010]
[295.33160400 831.71862793]
[284.70098877 842.48181152]
[271.26376343 849.43133545]
[256.33633423 851.88641357]
[241.38117981 849.60644531]
[227.86340332 842.81488037]
[217.10737610 832.17706299]
[210.16685486 818.73522949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[6 195]
[9 189]
[10 188]
[11 187]
[16 181]
[17 180]
[18 179]
[19 177]
[20 176]
[21 175]
[25 170]
[26 169]
[27 168]
[29 167]
[30 166]
[32 164]
[33 163]
[34 162]
[35 161]
[37 160]
[38 159]
[39 158]
[40 157]
[41 156]
[42 155]
[43 154]
[44 153]
[46 151]
[48 149]
[49 148]
[50 147]
[51 146]
[56 66]
[57 65]
[58 64]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[90 123]
[91 122]
[92 121]
[95 120]
[96 119]
[97 118]
[99 116]
[101 114]
[102 113]
[103 112]
[104 111]
[134 144]
[135 143]
[136 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
