%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCUGGAGGUAAGGCGGUCGUCAGCCUAUCUCUUCUGCUGGCUGGGCUCAAUGCCGCGGGUGAGCGUUCGGCCGAGGCUGCUCCUACCCUUGAGUGAUGUGCCUUGAAUGACGCUGCUUUCAUGCGCUGCUCUCACGGCUGCUUUCUCCGUCCUCCCCUGUUACUACCUUGGGCUGUUUCAGCGGGCGCUCGCGUUGGUCUUCGACCCACUUUGCGUUUGUUCACGUGUGCUCCCGACACCUAGUG\
) } def
/len { sequence length } bind def

/coor [
[311.71713257 259.02923584]
[307.46487427 250.68484497]
[304.71530151 241.76770020]
[303.53857422 232.54499817]
[303.95803833 223.29098511]
[305.94958496 214.27885437]
[292.26959229 208.12597656]
[278.58963013 201.97311401]
[264.90963745 195.82023621]
[251.22962952 189.66735840]
[237.54963684 183.51449585]
[232.86701965 184.33155823]
[227.61917114 182.23300171]
[223.60516357 177.02992249]
[210.08477783 170.53384399]
[196.56437683 164.03776550]
[183.04399109 157.54168701]
[169.52359009 151.04562378]
[156.00320435 144.54954529]
[142.48281860 138.05346680]
[128.96241760 131.55740356]
[115.44202423 125.06132507]
[101.92163086 118.56524658]
[87.02925110 120.35884857]
[75.43785095 129.87931824]
[63.84644318 139.39978027]
[52.25503922 148.92025757]
[40.66363525 158.44073486]
[44.74782181 173.11177063]
[42.50523758 188.17465210]
[34.32442856 201.01966858]
[21.62277031 209.42132568]
[6.60090065 211.92398071]
[-8.13855171 208.09403992]
[-20.04188728 198.59506226]
[-27.04677963 185.07281494]
[-27.93959236 169.87008667]
[-22.56563568 155.62086487]
[-11.85598278 144.79388428]
[2.33385491 139.26501465]
[17.54540253 139.99215698]
[31.14316559 146.84931946]
[42.73456955 137.32885742]
[54.32597351 127.80838013]
[65.91738129 118.28791046]
[77.50878143 108.76744080]
[70.67364502 95.41526031]
[56.17258072 99.25182343]
[41.67152023 103.08838654]
[32.39570999 116.17803955]
[16.37091827 116.94328308]
[5.88999462 104.79710388]
[8.99300575 89.05699921]
[23.29958725 81.79743195]
[37.83495712 88.58732605]
[52.33601761 84.75076294]
[66.83707428 80.91419220]
[70.76504517 66.43762970]
[60.19195175 55.79762268]
[49.61885834 45.15761566]
[34.40316391 40.82250595]
[30.92038155 26.34080887]
[20.34728813 15.70080471]
[9.77419376 5.06080055]
[-0.79889995 -5.57920361]
[-11.70228672 -15.88047314]
[-22.92511940 -25.83275986]
[-34.14795303 -35.78504562]
[-45.37078476 -45.73733521]
[-53.84513092 -49.07800293]
[-56.67141342 -55.88667679]
[-67.76779175 -65.97976685]
[-83.33425903 -65.41159821]
[-94.44378662 -75.80550385]
[-94.88951111 -90.64925385]
[-105.98588562 -100.74234009]
[-117.08226013 -110.83542633]
[-128.17863464 -120.92851257]
[-139.27502441 -131.02160645]
[-150.37139893 -141.11468506]
[-161.71890259 -150.92459106]
[-173.31030273 -160.44506836]
[-184.90170288 -169.96553040]
[-196.49310303 -179.48600769]
[-208.08451843 -189.00646973]
[-223.06584167 -184.96429443]
[-237.54989624 -190.53134155]
[-245.96723938 -203.56698608]
[-245.08123779 -219.05874634]
[-235.23257446 -231.04972839]
[-220.20826721 -234.92915344]
[-205.78547668 -229.20530701]
[-197.51004028 -216.07911682]
[-198.56404114 -200.59786987]
[-186.97264099 -191.07740784]
[-175.38124084 -181.55693054]
[-163.78982544 -172.03646851]
[-152.19842529 -162.51599121]
[-149.42144775 -162.64027405]
[-146.42829895 -161.68580627]
[-143.62461853 -159.56500244]
[-141.44024658 -156.33683777]
[-140.27830505 -152.21105957]
[-129.18193054 -142.11798096]
[-118.08555603 -132.02488708]
[-106.98917389 -121.93180084]
[-95.89279938 -111.83871460]
[-84.79642487 -101.74562836]
[-69.97696686 -102.70440674]
[-58.57987976 -92.62665558]
[-57.67470169 -77.07614136]
[-46.57832718 -66.98305511]
[-35.41849899 -56.96016693]
[-24.19566536 -47.00788116]
[-12.97283268 -37.05559540]
[-1.74999964 -27.10330582]
[-0.17156242 -42.02002716]
[12.40469551 -50.19546127]
[26.67810059 -45.58353043]
[32.09286880 -31.59495354]
[24.64454842 -18.57487297]
[9.84110451 -16.15229797]
[20.41419792 -5.51229286]
[30.98729134 5.12771130]
[41.56038666 15.76771545]
[56.01982117 19.34178352]
[60.25886154 34.58452225]
[70.83195496 45.22452927]
[81.40505219 55.86453247]
[96.33539581 57.02312469]
[108.69655609 62.62549591]
[117.34798431 71.20961761]
[121.79039001 81.08740997]
[122.18078613 90.59252930]
[119.25955963 98.31147003]
[114.20220184 103.26897430]
[108.41770935 105.04485321]
[121.93810272 111.54093170]
[135.45849609 118.03700256]
[148.97888184 124.53308105]
[162.49928284 131.02915955]
[176.01966858 137.52522278]
[189.54006958 144.02130127]
[203.06045532 150.51737976]
[216.58085632 157.01344299]
[230.10124207 163.50952148]
[243.70251465 169.83450317]
[257.38250732 175.98738098]
[271.06250000 182.14024353]
[284.74249268 188.29312134]
[298.42248535 194.44599915]
[312.10247803 200.59886169]
[321.96295166 188.46371460]
[334.99884033 179.61010742]
[350.14712524 174.84474182]
[366.14791870 174.63751221]
[381.64907837 179.07604980]
[395.32055664 187.85249329]
[405.96844482 200.28375244]
[412.63912964 215.36430359]
[426.61209106 209.90936279]
[440.58505249 204.45442200]
[446.99395752 190.25711060]
[461.24224854 184.92408752]
[474.73770142 191.12149048]
[488.71066284 185.66654968]
[495.11956787 171.46923828]
[509.36785889 166.13619995]
[522.86334229 172.33360291]
[536.83630371 166.87866211]
[549.39208984 155.48622131]
[563.81512451 164.39759827]
[559.24468994 180.72387695]
[542.29119873 180.85162354]
[528.31823730 186.30656433]
[522.59124756 200.00828552]
[508.49838257 205.73942566]
[494.16561890 199.63951111]
[480.19265747 205.09445190]
[474.46563721 218.79615784]
[460.37277222 224.52729797]
[446.03997803 218.42738342]
[432.06701660 223.88232422]
[418.09405518 229.33726501]
[416.20657349 244.21803284]
[428.37509155 252.98881531]
[440.54364014 261.75961304]
[452.71218872 270.53039551]
[468.43151855 272.32284546]
[474.23220825 286.04147339]
[486.40072632 294.81225586]
[502.12008667 296.60470581]
[507.92074585 310.32336426]
[520.08929443 319.09414673]
[532.25781250 327.86492920]
[544.42639160 336.63571167]
[556.59490967 345.40649414]
[567.92864990 346.90216064]
[573.56329346 355.34646606]
[587.16461182 361.67144775]
[600.76586914 367.99642944]
[614.36712646 374.32138062]
[631.27880859 375.51766968]
[634.81091309 392.09960938]
[619.85479736 400.08401489]
[608.04217529 387.92266846]
[594.44091797 381.59768677]
[580.83959961 375.27270508]
[567.23834229 368.94772339]
[575.89263916 381.19940186]
[579.97357178 395.63357544]
[579.01538086 410.60293579]
[573.12744141 424.39901733]
[562.98168945 435.44729614]
[549.73608398 442.48678589]
[534.90240479 444.71408081]
[520.17352295 441.87500000]
[507.23046875 434.29357910]
[497.55047607 422.83505249]
[492.23831177 408.80722046]
[491.90020752 393.81100464]
[496.57476807 379.55801392]
[505.72851562 367.67486572]
[518.31671143 359.51782227]
[532.90264893 356.01782227]
[547.82415771 357.57504272]
[535.65557861 348.80426025]
[523.48706055 340.03347778]
[511.31851196 331.26269531]
[499.14996338 322.49191284]
[484.30099487 321.32681274]
[477.62994385 306.98080444]
[465.46142578 298.21002197]
[450.61245728 297.04492188]
[443.94140625 282.69891357]
[431.77285767 273.92813110]
[419.60430908 265.15734863]
[407.43579102 256.38656616]
[401.88540649 264.43038940]
[395.06268311 271.38003540]
[387.17767334 277.03811646]
[378.47039795 281.24670410]
[369.20346069 283.89181519]
[359.65408325 284.90643311]
[350.10598755 284.27206421]
[340.84078979 282.01910400]
[332.12976074 278.22549438]
[324.22592163 273.01409912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 152]
[7 151]
[8 150]
[9 149]
[10 148]
[11 147]
[14 146]
[15 145]
[16 144]
[17 143]
[18 142]
[19 141]
[20 140]
[21 139]
[22 138]
[23 137]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[47 57]
[48 56]
[49 55]
[58 129]
[59 128]
[60 127]
[62 125]
[63 124]
[64 123]
[65 122]
[66 116]
[67 115]
[68 114]
[69 113]
[71 112]
[72 111]
[75 108]
[76 107]
[77 106]
[78 105]
[79 104]
[80 103]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[160 184]
[161 183]
[162 182]
[165 179]
[166 178]
[169 175]
[170 174]
[185 238]
[186 237]
[187 236]
[188 235]
[190 233]
[191 232]
[193 230]
[194 229]
[195 228]
[196 227]
[197 226]
[199 209]
[200 208]
[201 207]
[202 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
