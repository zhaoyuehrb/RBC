%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCGCGGACGCGGGCAUAUGAGGAGGCGGAGGCGGCGGCCGCCGCAGCCUCUGUGCGGUGGGACCAACGGACGGACGGACGGACGCGCGCACCUACCGAGGCGCGGGCGCUGCAGAGGCUCCCAGCCCAAGCCUGAGCCUGAGCCCGCCCCGAGGUCCCCGCCCCGCCCGCCUGGCUCUCUCGCCGCGGAGCCGCCAAG\
) } def
/len { sequence length } bind def

/coor [
[94.60492706 229.23446655]
[102.54988098 216.51135254]
[115.63536072 209.17852783]
[130.63475037 209.04414368]
[143.84863281 216.14048767]
[138.35292053 202.18351746]
[132.85722351 188.22653198]
[127.36152649 174.26954651]
[123.40983582 171.57447815]
[121.11370850 166.36480713]
[121.91968536 159.78947449]
[116.86289215 145.66755676]
[111.80609131 131.54562378]
[106.74929810 117.42369843]
[92.87991333 111.71053314]
[79.34365845 118.17349243]
[65.80740356 124.63645172]
[52.27114868 131.09941101]
[38.73489380 137.56236267]
[32.33261490 144.08923340]
[24.93619728 144.01869202]
[11.30058479 150.26930237]
[-2.33502793 156.51991272]
[-15.97064018 162.77050781]
[-21.55126762 177.31335449]
[-35.46876144 183.45811462]
[-49.29874802 178.04821777]
[-62.93436050 184.29882812]
[-76.56997681 190.54943848]
[-90.20558167 196.80003357]
[-99.52631378 209.58418274]
[-114.32011414 207.85421753]
[-127.95572662 214.10481262]
[-141.59133911 220.35542297]
[-150.63841248 234.03323364]
[-166.98861694 232.76719666]
[-173.82226562 217.85969543]
[-164.10948181 204.64630127]
[-147.84194946 206.71981812]
[-134.20632935 200.46920776]
[-120.57072449 194.21859741]
[-112.22529602 181.88153076]
[-96.45619202 183.16442871]
[-82.82057953 176.91381836]
[-69.18496704 170.66320801]
[-55.54935455 164.41261292]
[-50.62095642 150.40380859]
[-36.88154984 143.87055969]
[-22.22124672 149.13490295]
[-8.58563423 142.88429260]
[5.04997826 136.63368225]
[18.68559074 130.38308716]
[32.27193832 124.02610779]
[45.80819321 117.56314850]
[59.34444809 111.10019684]
[72.88070679 104.63723755]
[86.41696167 98.17427826]
[96.38403320 86.96457672]
[101.21949768 72.76534271]
[106.05496216 58.56610489]
[110.89042664 44.36687088]
[115.72589111 30.16763687]
[120.56135559 15.96840096]
[125.28570557 1.73181105]
[129.89866638 -12.54126453]
[134.51161194 -26.81433868]
[129.34246826 -38.63716507]
[133.48432922 -50.43370056]
[144.20039368 -56.05644989]
[149.03585815 -70.25568390]
[153.87132263 -84.45491791]
[152.96267700 -91.01684570]
[155.17709351 -96.26176453]
[159.08618164 -99.01827240]
[164.36308289 -113.05944061]
[164.45359802 -122.20170593]
[169.83372498 -127.27774811]
[175.32943726 -141.23472595]
[180.82513428 -155.19171143]
[173.50825500 -159.03353882]
[167.76438904 -166.75245667]
[165.44531250 -177.52966309]
[163.80744934 -192.43997192]
[159.75680542 -200.63641357]
[162.26239014 -207.59587097]
[160.85775757 -222.52995300]
[159.45314026 -237.46405029]
[150.45756531 -250.47904968]
[156.96907043 -263.87493896]
[155.56445312 -278.80902100]
[154.15982056 -293.74310303]
[145.16426086 -306.75811768]
[151.67575073 -320.15399170]
[150.27113342 -335.08807373]
[148.86651611 -350.02215576]
[138.93702698 -363.07351685]
[145.52377319 -378.09173584]
[161.85086060 -379.62738037]
[171.12239075 -366.10070801]
[163.80059814 -351.42678833]
[165.20523071 -336.49270630]
[166.60984802 -321.55862427]
[175.50494385 -309.61178589]
[169.09391785 -295.14773560]
[170.49853516 -280.21365356]
[171.90315247 -265.27954102]
[180.79826355 -253.33273315]
[174.38722229 -238.86866760]
[175.79185486 -223.93457031]
[177.19647217 -209.00048828]
[178.71775818 -194.07783508]
[180.35562134 -179.16752625]
[194.22500610 -173.45436096]
[205.88955688 -182.88504028]
[207.69755554 -198.35659790]
[219.66142273 -207.75450134]
[234.40003967 -205.93550110]
[246.06460571 -215.36619568]
[257.72915649 -224.79689026]
[269.39373779 -234.22758484]
[281.05828857 -243.65827942]
[292.72286987 -253.08897400]
[292.59082031 -266.56219482]
[300.13476562 -277.49044800]
[312.41436768 -282.00903320]
[324.86636353 -278.67761230]
[336.67691040 -287.92486572]
[342.29904175 -303.33016968]
[358.49606323 -305.89700317]
[368.60583496 -292.98483276]
[362.22830200 -277.87655640]
[345.92413330 -276.11431885]
[334.11358643 -266.86709595]
[332.79931641 -250.10437012]
[319.50891113 -239.26222229]
[302.15353394 -241.42440796]
[290.48898315 -231.99371338]
[278.82443237 -222.56301880]
[267.15985107 -213.13232422]
[255.49530029 -203.70164490]
[243.83073425 -194.27095032]
[242.52252197 -179.47824097]
[230.82733154 -169.74801636]
[215.32025146 -171.22048950]
[203.65570068 -161.78979492]
[194.78210449 -149.69601440]
[189.28640747 -135.73902893]
[183.79071045 -121.78205109]
[178.40425110 -107.78254700]
[173.12734985 -93.74137878]
[168.07055664 -79.61945343]
[163.23509216 -65.42021942]
[158.39962769 -51.22098541]
[162.73199463 -34.21872711]
[148.78468323 -22.20138741]
[144.17173767 -7.92831230]
[139.55877686 6.34476280]
[140.49388123 13.68217182]
[134.76058960 20.80386543]
[129.92512512 35.00310135]
[125.08966064 49.20233536]
[120.25419617 63.40156937]
[115.41873169 77.60080719]
[110.58326721 91.80004120]
[120.87122345 112.36690521]
[125.92801666 126.48883057]
[130.98481750 140.61076355]
[136.04161072 154.73268127]
[141.31851196 168.77384949]
[146.81420898 182.73083496]
[152.30990601 196.68780518]
[157.80560303 210.64479065]
[166.85882568 218.42767334]
[166.59165955 229.04661560]
[173.98991394 242.09521484]
[181.38816833 255.14381409]
[188.78642273 268.19241333]
[196.18467712 281.24099731]
[203.58293152 294.28961182]
[210.98118591 307.33819580]
[226.41464233 308.94683838]
[237.93251038 319.34484863]
[241.10592651 334.53396606]
[234.71463013 348.67364502]
[221.21623230 356.32693481]
[205.80111694 354.55096436]
[194.39672852 344.02862549]
[191.38829041 328.80596924]
[197.93258667 314.73645020]
[190.53433228 301.68786621]
[183.13607788 288.63925171]
[175.73782349 275.59066772]
[168.33956909 262.54205322]
[160.94131470 249.49346924]
[153.54306030 236.44487000]
[150.75320435 251.18315125]
[141.21791077 262.76235962]
[127.28840637 268.32733154]
[112.39940643 266.50582886]
[100.22225189 257.74700928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 172]
[6 171]
[7 170]
[8 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 57]
[16 56]
[17 55]
[18 54]
[19 53]
[21 52]
[22 51]
[23 50]
[24 49]
[27 46]
[28 45]
[29 44]
[30 43]
[32 41]
[33 40]
[34 39]
[58 164]
[59 163]
[60 162]
[61 161]
[62 160]
[63 159]
[64 157]
[65 156]
[66 155]
[69 153]
[70 152]
[71 151]
[74 150]
[75 149]
[77 148]
[78 147]
[79 146]
[82 112]
[83 111]
[85 110]
[86 109]
[87 108]
[89 106]
[90 105]
[91 104]
[93 102]
[94 101]
[95 100]
[113 145]
[114 144]
[117 141]
[118 140]
[119 139]
[120 138]
[121 137]
[122 136]
[126 133]
[127 132]
[174 195]
[175 194]
[176 193]
[177 192]
[178 191]
[179 190]
[180 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
