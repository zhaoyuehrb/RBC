%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAUUUUUCCUUUCUGAAGGCAGGUCUCACCUAUCUCCUGGUUCGAUCUAGGAAAAAGGAAAGGAAGGGAUUUAAAAGUAAACAGUGAAAUGAGAAAGAAUUCACUGGGAGUUUAUCAAACUAAGUUAAAAUAGCUAAGUCAGCCUGACAGGUGCUUGGCACAGAGAAGGAGCAAAUAUUUCCUC\
) } def
/len { sequence length } bind def

/coor [
[95.02147675 384.99838257]
[97.19138336 369.89028931]
[105.70867920 357.22467041]
[118.88225555 349.51623535]
[117.62373352 334.56912231]
[116.36521912 319.62200928]
[115.10670471 304.67489624]
[113.72267914 289.73889160]
[112.21324158 274.81503296]
[110.70380402 259.89117432]
[109.19436646 244.96731567]
[107.68492889 230.04345703]
[106.05018616 215.13279724]
[104.29025269 200.23640442]
[102.53031921 185.34001160]
[100.77038574 170.44360352]
[99.01045990 155.54721069]
[85.50971985 153.63304138]
[72.88189697 148.48794556]
[61.88771439 140.42184448]
[53.18947601 129.92068481]
[47.31117630 117.61703491]
[44.60693359 104.25212097]
[29.63285828 103.37062836]
[14.65878105 102.48914337]
[-0.31529546 101.60765076]
[-15.28937244 100.72615814]
[-30.26344872 99.84467316]
[-45.23752594 98.96318054]
[-61.48946762 107.60035706]
[-75.76425171 97.40792084]
[-90.75102234 96.77810669]
[-105.73780060 96.14829254]
[-119.85066986 103.29933929]
[-132.24185181 95.03446960]
[-147.22862244 94.40465546]
[-162.22862244 94.40465546]
[-177.21539307 95.03446960]
[-192.20216370 95.66428375]
[-207.18893433 96.29409790]
[-222.17570496 96.92391205]
[-237.16247559 97.55372620]
[-247.67286682 109.35657501]
[-263.45532227 110.18707275]
[-275.14639282 99.55248260]
[-275.80996704 83.76213074]
[-265.05236816 72.18415070]
[-249.25588989 71.68754578]
[-237.79229736 82.56695557]
[-222.80552673 81.93714142]
[-207.81875610 81.30732727]
[-192.83197021 80.67751312]
[-177.84519958 80.04769897]
[-162.85842896 79.41788483]
[-171.86991882 67.42650604]
[-168.28050232 52.86229324]
[-154.72885132 46.43168259]
[-141.17703247 52.86192703]
[-137.58723450 67.42604065]
[-146.59880066 79.41788483]
[-131.61203003 80.04769897]
[-118.57111359 72.85160828]
[-105.10798645 81.16152191]
[-90.12121582 81.79133606]
[-75.13443756 82.42115021]
[-66.00779724 74.46203613]
[-53.50396347 74.87699890]
[-44.35603714 83.98910522]
[-29.38195992 84.87059784]
[-14.40788269 85.75208282]
[0.56619436 86.63357544]
[15.54027081 87.51506042]
[30.51434708 88.39655304]
[45.48842621 89.27804565]
[47.38304520 82.16945648]
[50.20031357 75.37352753]
[53.89082336 69.00942230]
[58.38986206 63.18874359]
[63.61853790 58.01355743]
[69.48516846 53.57460403]
[75.88687897 49.94972610]
[82.71141815 47.20248795]
[89.83911896 45.38106155]
[97.14498138 44.51737976]
[98.40350342 29.57026863]
[99.66201782 14.62315750]
[100.92053223 -0.32395360]
[102.17904663 -15.27106476]
[103.43756104 -30.21817589]
[104.69607544 -45.16528702]
[91.75411987 -53.33622742]
[84.10185242 -66.59146881]
[83.49770355 -81.88504791]
[90.08051300 -95.70261383]
[102.33760071 -104.86899567]
[117.45236206 -107.27782440]
[131.95155334 -102.37556458]
[142.50335693 -91.28871918]
[146.68304443 -76.56497192]
[143.53015137 -61.58772659]
[133.76921082 -49.79864502]
[119.64318848 -43.90677261]
[118.38467407 -28.95965958]
[117.12615967 -14.01254940]
[115.86764526 0.93456221]
[114.60912323 15.88167381]
[113.35060883 30.82878494]
[112.09209442 45.77589798]
[123.94915771 47.42061615]
[135.60852051 51.71199036]
[146.47109985 58.62919235]
[157.12216187 48.06723404]
[167.77320862 37.50527191]
[178.42427063 26.94331169]
[189.07531738 16.38135147]
[196.06480408 0.93520480]
[212.84219360 3.37561941]
[215.14160156 20.17291451]
[199.63728333 27.03240585]
[188.98622131 37.59436798]
[178.33517456 48.15632629]
[167.68411255 58.71828842]
[157.03306580 69.28025055]
[158.96406555 76.52740479]
[173.37490845 72.36479950]
[187.78576660 68.20219421]
[202.19662476 64.03958893]
[215.21070862 56.58078766]
[226.68232727 66.24525452]
[221.54106140 80.33665466]
[206.54052734 80.34255219]
[191.96903992 83.90227509]
[177.39755249 87.46199036]
[162.82606506 91.02171326]
[164.75704956 98.26886749]
[179.25135803 102.13086700]
[193.74566650 105.99285889]
[208.23997498 109.85485840]
[222.73428345 113.71685791]
[237.22859192 117.57884979]
[251.72290039 121.44084930]
[258.22839355 120.08528900]
[263.62380981 121.95232391]
[266.63504028 125.68371582]
[280.99142456 130.03044128]
[295.34780884 134.37718201]
[309.70419312 138.72392273]
[326.61584473 137.52690125]
[332.44766235 153.44627380]
[318.76486206 163.45710754]
[305.35745239 153.08030701]
[291.00106812 148.73356628]
[276.64468384 144.38684082]
[262.28829956 140.04010010]
[247.86091614 135.93516541]
[233.36660767 132.07316589]
[218.87229919 128.21116638]
[204.37799072 124.34916687]
[189.88368225 120.48716736]
[175.38937378 116.62517548]
[160.89506531 112.76317596]
[142.59442139 140.66212463]
[113.90685272 153.78727722]
[115.66678619 168.68368530]
[117.42671967 183.58007812]
[119.18665314 198.47647095]
[120.94658661 213.37286377]
[125.06891632 221.54814148]
[122.60878754 228.53401184]
[124.11822510 243.45788574]
[125.62766266 258.38174438]
[127.13710022 273.30560303]
[128.64654541 288.22946167]
[132.63095093 296.47283936]
[130.05381775 303.41638184]
[131.31233215 318.36349487]
[132.57084656 333.31060791]
[133.82936096 348.25772095]
[148.10639954 353.65487671]
[158.62161255 364.71801758]
[163.28720093 379.25054932]
[161.17680359 394.36706543]
[152.70944214 407.06616211]
[139.56632996 414.82638550]
[124.35703278 416.10696411]
[110.10136414 410.65365601]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 178]
[5 177]
[6 176]
[7 175]
[8 173]
[9 172]
[10 171]
[11 170]
[12 169]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[23 74]
[24 73]
[25 72]
[26 71]
[27 70]
[28 69]
[29 68]
[31 65]
[32 64]
[33 63]
[35 61]
[36 60]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[84 108]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
[90 102]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
[135 161]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[144 154]
[145 153]
[146 152]
[147 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
