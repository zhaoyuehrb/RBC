%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGGAGGAGGGGGAGGAGAAGGGGCGGAGCAGUCGGUGGGCGCGGCGGCUGCUGGAGGCUAGCGCGACCCGACUCUUAAGUUUUCUUUUCCUCUCCAGAGGGGCCGAUUAGGGAGAGAGACCAGAAAUGAGUGGAAUGCUAUCUUAAGCCAAAAAAAACUAUUAUAAUUUUUAUUUAGUACUACUUAA\
) } def
/len { sequence length } bind def

/coor [
[461.13180542 198.78903198]
[446.86596680 194.15377808]
[432.60012817 189.51852417]
[418.33425903 184.88327026]
[404.06842041 180.24801636]
[387.13406372 184.82252502]
[374.91546631 171.05729675]
[360.57492065 166.65853882]
[342.84808350 178.34155273]
[321.98806763 173.07888794]
[311.65640259 153.88632202]
[297.00158691 150.68682861]
[282.34680176 147.48733521]
[267.69198608 144.28784180]
[253.03718567 141.08834839]
[238.38238525 137.88885498]
[223.72758484 134.68936157]
[209.07278442 131.48986816]
[194.41798401 128.29037476]
[179.76316833 125.09087372]
[165.10836792 121.89138031]
[150.45356750 118.69188690]
[135.79876709 115.49239349]
[121.14396667 112.29290009]
[106.48916626 109.09340668]
[91.80841064 106.01517487]
[74.51094818 112.30592346]
[61.79484558 100.22290039]
[47.04227066 97.50969696]
[32.28969193 94.79648590]
[23.26509285 96.32322693]
[17.31650543 91.91452789]
[2.61080527 88.95777893]
[-12.09489441 86.00102234]
[-26.80059433 83.04426575]
[-41.50629425 80.08750916]
[-56.21199417 77.13075256]
[-65.26060486 78.50807953]
[-71.13548279 74.00162506]
[-82.40434265 80.30075073]
[-94.55333710 77.32190704]
[-101.18969727 67.19481659]
[-115.78959656 63.75345993]
[-130.38949585 60.31210327]
[-144.98939514 56.87074280]
[-158.32502747 64.92049408]
[-173.08238220 61.22248840]
[-180.67440796 48.45938873]
[-195.27430725 45.01802826]
[-209.87420654 41.57667160]
[-224.47410583 38.13531113]
[-237.78170776 46.66077423]
[-253.20190430 43.19773102]
[-261.58621216 29.80074310]
[-257.96032715 14.41800785]
[-244.47543335 6.17582893]
[-229.13189697 9.96414375]
[-221.03274536 23.53541183]
[-206.43284607 26.97677040]
[-191.83294678 30.41813087]
[-177.23304749 33.85948944]
[-164.74012756 25.83063507]
[-149.88473511 29.11268044]
[-141.54803467 42.27084351]
[-126.94813538 45.71220398]
[-112.34824371 49.15356064]
[-97.74834442 52.59492111]
[-81.24958038 46.63761520]
[-67.93598938 59.34682465]
[-53.25523758 62.42505264]
[-38.54953766 65.38181305]
[-23.84383774 68.33856201]
[-9.13813877 71.29531860]
[5.56756067 74.25207520]
[20.27326012 77.20883179]
[35.00290298 80.04390717]
[49.75547791 82.75711823]
[64.50805664 85.47032928]
[74.65346527 78.86200714]
[86.97577667 81.01425171]
[94.76516724 91.30947113]
[102.67589569 89.68300629]
[109.68865967 94.43859863]
[124.34346008 97.63809967]
[138.99826050 100.83759308]
[153.65306091 104.03708649]
[168.30786133 107.23657990]
[182.96267700 110.43607330]
[197.61747742 113.63556671]
[212.27227783 116.83506012]
[226.92707825 120.03455353]
[241.58187866 123.23405457]
[256.23669434 126.43354797]
[270.89147949 129.63304138]
[285.54629517 132.83253479]
[300.20108032 136.03202820]
[314.85589600 139.23152161]
[320.45614624 132.22833252]
[327.99572754 127.45506287]
[336.63671875 125.40864563]
[345.42968750 126.28479767]
[353.41793823 129.95971680]
[359.74160767 136.00663757]
[363.73019409 143.74520874]
[364.97369385 152.31800842]
[379.31420898 156.71675110]
[391.06475830 151.36972046]
[402.92626953 155.34164429]
[408.70367432 165.98217773]
[422.96951294 170.61743164]
[437.23538208 175.25268555]
[451.50122070 179.88793945]
[465.76705933 184.52319336]
[456.11801147 173.03860474]
[451.11666870 158.89694214]
[451.40011597 143.89962769]
[456.93222046 129.95704651]
[467.00833130 118.84524536]
[480.34490967 111.97969055]
[495.24310303 110.23493195]
[509.80511475 113.83322144]
[522.17602539 122.31619263]
[530.77996826 134.60327148]
[534.52093506 149.12928772]
[532.92242432 164.04386902]
[526.18804932 177.44715881]
[515.17565918 187.63180542]
[501.28802490 193.30044556]
[486.29653931 193.73136902]
[499.24539185 201.30285645]
[512.19421387 208.87434387]
[525.14306641 216.44583130]
[538.09191895 224.01730347]
[551.04077148 231.58879089]
[563.98962402 239.16027832]
[570.61688232 239.58020020]
[575.32104492 242.80903625]
[577.23553467 247.20223999]
[589.92694092 255.19770813]
[602.61834717 263.19317627]
[615.30981445 271.18865967]
[628.00122070 279.18414307]
[638.10290527 268.04287720]
[649.98583984 258.82516479]
[663.28900146 251.81111145]
[677.60809326 247.21386719]
[692.50799561 245.17314148]
[707.53588867 245.75094604]
[722.23510742 248.92971802]
[736.15893555 254.61286926]
[748.88421631 262.62768555]
[760.02435303 272.73059082]
[769.24072266 284.61462402]
[776.25323486 297.91857910]
[780.84887695 312.23818970]
[782.88793945 327.13830566]
[782.30841064 342.16610718]
[779.12799072 356.86495972]
[773.44323730 370.78814697]
[765.42700195 383.51257324]
[755.32281494 394.65151978]
[743.43774414 403.86654663]
[730.13299561 410.87759399]
[715.81286621 415.47158813]
[700.91247559 417.50891113]
[685.88476562 416.92770386]
[671.18627930 413.74560547]
[657.26373291 408.05929565]
[644.54022217 400.04159546]
[633.40240479 389.93615723]
[624.18872070 378.05004883]
[617.17919922 364.74450684]
[612.58685303 350.42382812]
[610.55120850 335.52325439]
[611.13409424 320.49557495]
[614.31787109 305.79745483]
[620.00573730 291.87557983]
[607.31433105 283.88009644]
[594.62286377 275.88461304]
[581.93145752 267.88912964]
[569.24005127 259.89367676]
[556.41815186 252.10911560]
[543.46929932 244.53764343]
[530.52044678 236.96615601]
[517.57159424 229.39466858]
[504.62274170 221.82318115]
[491.67391968 214.25170898]
[478.72506714 206.68022156]
[472.48474121 207.78927612]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 113]
[2 112]
[3 111]
[4 110]
[5 109]
[7 106]
[8 105]
[11 97]
[12 96]
[13 95]
[14 94]
[15 93]
[16 92]
[17 91]
[18 90]
[19 89]
[20 88]
[21 87]
[22 86]
[23 85]
[24 84]
[25 83]
[26 81]
[28 78]
[29 77]
[30 76]
[32 75]
[33 74]
[34 73]
[35 72]
[36 71]
[37 70]
[39 69]
[42 67]
[43 66]
[44 65]
[45 64]
[48 61]
[49 60]
[50 59]
[51 58]
[129 188]
[130 187]
[131 186]
[132 185]
[133 184]
[134 183]
[135 182]
[138 181]
[139 180]
[140 179]
[141 178]
[142 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
