%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCGCUGUGGCGCAGCCGGGCUGGCCCGCGCUGUCCCUGACGCGGAUCACUGGCCCCUCUUGAGCACGGCCUUGCCGGUUUGGCGGGGUGAAAGGUUGCGAAG\
) } def
/len { sequence length } bind def

/coor [
[7.51160002 146.06372070]
[-6.48947430 151.44609070]
[-20.49054909 156.82846069]
[-34.49162292 162.21083069]
[-48.49269867 167.59320068]
[-58.59751129 179.76707458]
[-73.25354767 177.11190796]
[-87.25461578 182.49427795]
[-94.27523804 188.58842468]
[-101.74653625 187.82250977]
[-115.89958954 192.79153442]
[-130.05262756 197.76057434]
[-144.20567322 202.72959900]
[-151.10116577 216.69706726]
[-165.52516174 221.53474426]
[-178.79850769 214.87487793]
[-192.95155334 219.84390259]
[-207.10459900 224.81294250]
[-221.25764465 229.78196716]
[-234.19947815 240.73391724]
[-248.30607605 231.32965088]
[-243.17443848 215.17098999]
[-226.22666931 215.62892151]
[-212.07362366 210.65989685]
[-197.92057800 205.69085693]
[-183.76753235 200.72183228]
[-177.57066345 187.22612000]
[-163.28823853 181.98519897]
[-149.17471313 188.57655334]
[-135.02166748 183.60752869]
[-120.86861420 178.63848877]
[-106.71556854 173.66946411]
[-92.63699341 168.49320984]
[-78.63591766 163.11083984]
[-69.53255463 151.32194519]
[-53.87506866 153.59213257]
[-39.87399292 148.20976257]
[-25.87291908 142.82739258]
[-11.87184525 137.44502258]
[2.12922859 132.06263733]
[5.81052351 116.13967896]
[18.34562683 105.39768219]
[34.97402191 104.17424774]
[49.22596359 113.14186859]
[63.06299591 107.35079193]
[76.90003204 101.55972290]
[90.73706055 95.76864624]
[96.47229767 89.90970612]
[105.06631470 90.01728058]
[119.06739044 84.63491058]
[133.06846619 79.25254059]
[139.55094910 65.08866882]
[153.82670593 59.82962799]
[167.28984070 66.09696960]
[177.39465332 53.92308807]
[192.05068970 56.57826233]
[206.05175781 51.19589233]
[220.05282593 45.81352234]
[234.05390930 40.43114853]
[248.05497742 35.04877853]
[254.06550598 23.52021027]
[265.96194458 19.37372780]
[277.09976196 24.34128380]
[291.25283813 19.37225342]
[305.40588379 14.40322399]
[319.55892944 9.43419456]
[333.71197510 4.46516562]
[347.86502075 -0.50386405]
[355.06149292 -6.38928127]
[362.50711060 -5.40436745]
[376.79992676 -9.95577145]
[391.09274292 -14.50717640]
[405.38555908 -19.05858040]
[418.64334106 -29.62588310]
[432.46777344 -19.81155396]
[426.86398315 -3.81049705]
[409.93698120 -4.76576042]
[395.64413452 -0.21435578]
[381.35131836 4.33704853]
[367.05850220 8.88845348]
[352.83404541 13.64918327]
[338.68099976 18.61821175]
[324.52795410 23.58724213]
[310.37490845 28.55627251]
[296.22186279 33.52530289]
[282.06881714 38.49433136]
[271.47006226 52.39602661]
[253.43734741 49.04985428]
[239.43627930 54.43222427]
[225.43519592 59.81459427]
[211.43412781 65.19696808]
[197.43305969 70.57933807]
[188.32969666 82.36823273]
[172.67221069 80.09804535]
[166.87419128 93.76985931]
[152.75178528 99.42780304]
[138.45083618 93.25360870]
[124.44976044 98.63598633]
[110.44869232 104.01835632]
[96.52813721 109.60568237]
[82.69110107 115.39675140]
[68.85407257 121.18782806]
[55.01703644 126.97889709]
[52.82564163 140.67762756]
[44.18770599 151.39385986]
[31.46915627 156.36453247]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 40]
[2 39]
[3 38]
[4 37]
[5 36]
[7 34]
[8 33]
[10 32]
[11 31]
[12 30]
[13 29]
[16 26]
[17 25]
[18 24]
[19 23]
[44 103]
[45 102]
[46 101]
[47 100]
[49 99]
[50 98]
[51 97]
[54 94]
[56 92]
[57 91]
[58 90]
[59 89]
[60 88]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[68 81]
[70 80]
[71 79]
[72 78]
[73 77]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
