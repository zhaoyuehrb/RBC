%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGGCAGCACGUGGGCAGCACGUGAUAGCGCUGGGCGACUCCGCGGAGCUGCACGGCCAUGGACGUGGGCGCCGACGAGUUCGAGGAGAGCCUCCCUCUGCUGCAGGAGCUCGUCCAGGAGGCCGACUUCGUGGAGGUGAGCGCGGGUGCCUUGGCCGCCUGCAGAUCUACAGUGUGAGGAGUGCUGGCG\
) } def
/len { sequence length } bind def

/coor [
[141.56547546 601.75817871]
[141.32005310 586.76019287]
[133.37554932 574.16125488]
[140.88601685 560.23632812]
[140.64059448 545.23834229]
[140.39517212 530.24029541]
[140.14974976 515.24230957]
[139.16870117 500.27444458]
[137.45439148 485.37274170]
[135.74008179 470.47100830]
[134.02578735 455.56930542]
[132.18962097 440.68209839]
[130.23173523 425.81042480]
[128.27383423 410.93875122]
[126.31594086 396.06707764]
[124.35805511 381.19540405]
[122.27855682 366.34027100]
[112.75752258 354.88604736]
[118.38616943 340.09994507]
[116.18521881 325.26229858]
[113.98426056 310.42465210]
[104.46322632 298.97042847]
[110.09187317 284.18432617]
[107.89091492 269.34667969]
[105.68995667 254.50901794]
[103.07510376 252.12110901]
[101.49463654 248.34143066]
[101.59300232 243.67356873]
[103.76367950 238.89112854]
[102.29341888 223.96334839]
[98.50291443 217.60462952]
[100.92327881 208.77961731]
[92.17177582 196.72720337]
[98.75543213 182.34089661]
[97.52960968 167.39106750]
[96.30379486 152.44123840]
[95.07798004 137.49140930]
[91.39202118 131.07151794]
[93.95645905 122.28728485]
[92.97541046 107.31939697]
[89.34259033 100.10821533]
[92.10279846 92.09896088]
[91.36678314 77.11702728]
[90.63076782 62.13509750]
[89.89476013 47.15316391]
[87.04584503 42.74098587]
[86.26362610 38.13808441]
[87.27239227 34.16741180]
[89.50856781 31.42166710]
[89.50856781 16.42166710]
[89.50856781 1.42166662]
[86.37510681 -7.17603779]
[89.63329315 -13.82325745]
[89.87872314 -28.82124901]
[90.12414551 -43.81924057]
[79.41320801 -55.12913132]
[79.87575531 -70.33573151]
[90.72401428 -80.47727203]
[90.96944427 -95.47526550]
[91.21486664 -110.47325897]
[91.46029663 -125.47125244]
[91.70571899 -140.46923828]
[91.95114899 -155.46723938]
[92.19657135 -170.46522522]
[89.20420074 -179.11305237]
[92.57071686 -185.70606995]
[93.06150055 -200.69804382]
[85.77986908 -214.74397278]
[93.92945099 -227.21127319]
[94.42024231 -242.20324707]
[94.91102600 -257.19522095]
[85.85375977 -273.21939087]
[95.67619324 -287.75369263]
[95.92161560 -302.75167847]
[95.92161560 -317.75167847]
[95.67619324 -332.74969482]
[95.43076324 -347.74768066]
[95.18534088 -362.74566650]
[94.93991852 -377.74365234]
[94.69448853 -392.74163818]
[94.44906616 -407.73965454]
[94.20363617 -422.73764038]
[93.95821381 -437.73562622]
[93.46742249 -452.72760010]
[92.60886383 -467.70300293]
[91.62781525 -482.67089844]
[83.00450897 -495.93545532]
[89.89283752 -509.14154053]
[88.91179657 -524.10943604]
[87.93074799 -539.07733154]
[86.94969940 -554.04516602]
[75.88449097 -565.66156006]
[78.21016693 -581.53515625]
[92.14267731 -589.48907471]
[106.99417877 -583.42175293]
[111.37188721 -567.98754883]
[101.91757965 -555.02624512]
[102.89862823 -540.05834961]
[103.87967682 -525.09045410]
[104.86072540 -510.12258911]
[113.41386414 -497.92861938]
[106.59570312 -483.65194702]
[107.57675171 -468.68405151]
[111.15717316 -462.20471191]
[108.44935608 -453.46362305]
[111.33567810 -449.64022827]
[111.84008789 -443.95928955]
[108.95619965 -437.98104858]
[109.20162964 -422.98306274]
[109.44705200 -407.98507690]
[109.69248199 -392.98709106]
[109.93790436 -377.98907471]
[110.18333435 -362.99108887]
[110.42875671 -347.99310303]
[110.67418671 -332.99511719]
[110.91960907 -317.99713135]
[113.67929077 -314.08135986]
[113.99755096 -308.38693237]
[110.91960907 -302.50625610]
[110.67418671 -287.50827026]
[118.86323547 -278.59143066]
[118.77182007 -266.08410645]
[109.90299225 -256.70443726]
[109.41220856 -241.71246338]
[108.92142487 -226.72048950]
[116.23815155 -213.74687195]
[108.05346680 -200.20724487]
[107.56268311 -185.21528625]
[107.19456482 -170.21980286]
[106.94913483 -155.22180176]
[106.70371246 -140.22381592]
[106.45828247 -125.22582245]
[106.21286011 -110.22782898]
[105.96743774 -95.22983551]
[105.72200775 -80.23184967]
[116.23263550 -69.74079132]
[116.19738770 -54.52719498]
[105.12213898 -43.57381439]
[104.87671661 -28.57582283]
[104.63128662 -13.57783127]
[104.50856781 1.42166662]
[104.50856781 16.42166710]
[104.50856781 31.42166710]
[104.87668610 46.41714859]
[105.61270142 61.39908218]
[106.34871674 76.38101196]
[107.08473206 91.36294556]
[107.94329071 106.33835602]
[108.92433929 121.30623627]
[110.02780914 136.26559448]
[111.25362396 151.21542358]
[112.47943878 166.16525269]
[113.70525360 181.11508179]
[122.54444122 194.23678589]
[115.87310791 207.55380249]
[117.22119141 222.49310303]
[118.69144440 237.42086792]
[120.52761078 252.30805969]
[122.72856140 267.14572144]
[124.92951965 281.98336792]
[134.60798645 294.49887085]
[128.82189941 308.22369385]
[131.02285767 323.06134033]
[133.22381592 337.89898682]
[142.90228271 350.41448975]
[137.11621094 364.13931274]
[141.47729492 372.18417358]
[139.22972107 379.23751831]
[141.18762207 394.10919189]
[143.14550781 408.98086548]
[145.10340881 423.85253906]
[147.06129456 438.72421265]
[151.29017639 446.83935547]
[148.92750549 453.85498047]
[150.64179993 468.75671387]
[152.35610962 483.65841675]
[154.07041931 498.56015015]
[164.29785156 487.58746338]
[179.28250122 486.90911865]
[190.45954895 496.91278076]
[191.44050598 511.88067627]
[181.66468811 523.25756836]
[166.71966553 524.54071045]
[155.14773560 514.99688721]
[155.39315796 529.99487305]
[155.63858032 544.99291992]
[155.88401794 559.99090576]
[163.84606934 573.66259766]
[156.31805420 586.51477051]
[156.56347656 601.51275635]
[159.06910706 620.73181152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[4 187]
[5 186]
[6 185]
[7 184]
[8 177]
[9 176]
[10 175]
[11 174]
[12 172]
[13 171]
[14 170]
[15 169]
[16 168]
[17 166]
[19 164]
[20 163]
[21 162]
[23 160]
[24 159]
[25 158]
[29 157]
[30 156]
[32 155]
[34 153]
[35 152]
[36 151]
[37 150]
[39 149]
[40 148]
[42 147]
[43 146]
[44 145]
[45 144]
[49 143]
[50 142]
[51 141]
[53 140]
[54 139]
[55 138]
[58 135]
[59 134]
[60 133]
[61 132]
[62 131]
[63 130]
[64 129]
[66 128]
[67 127]
[69 125]
[70 124]
[71 123]
[73 120]
[74 119]
[75 116]
[76 115]
[77 114]
[78 113]
[79 112]
[80 111]
[81 110]
[82 109]
[83 108]
[84 105]
[85 103]
[86 102]
[88 100]
[89 99]
[90 98]
[91 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
