%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUGGGGCUGAGGGGAAGGAGGAGAAGCUCCUGAAGCGGCGGGCGCGCAGCGGGAGUGGGAGUGGGGUCGGACCAGGGCAGCUAGAAGCCCUGCCCUUCCGCCUCAGCGGAUCAUGACCCGGGCGGCGGCCGCGAAGGUCGCGGUGGUGGGGGACGUGCCCUGGCGGGGCGGGCGCUGAAAG\
) } def
/len { sequence length } bind def

/coor [
[321.39916992 188.74951172]
[319.77450562 173.76097107]
[321.56585693 158.78178406]
[307.46563721 153.66477966]
[293.36541748 148.54777527]
[279.26519775 143.43077087]
[265.16497803 138.31378174]
[251.06474304 133.19677734]
[236.96452332 128.07977295]
[222.86430359 122.96276855]
[208.26101685 125.89424896]
[197.92811584 113.91336823]
[183.82788086 108.79636383]
[169.72766113 103.67936707]
[155.62744141 98.56236267]
[141.52722168 93.44535828]
[127.42699432 88.32836151]
[128.55511475 121.96872711]
[93.97574615 141.81721497]
[82.22561646 151.14108276]
[70.47549438 160.46495056]
[58.72536850 169.78881836]
[46.97524261 179.11268616]
[45.41684341 194.83995056]
[33.14123917 204.79409790]
[17.43132782 203.06951904]
[7.60751915 190.68936157]
[9.49810600 174.99855042]
[21.98143578 165.30618286]
[37.65137100 167.36256409]
[49.40149689 158.03869629]
[61.15162277 148.71482849]
[72.90174866 139.39094543]
[84.65187836 130.06707764]
[83.51007843 122.65450287]
[68.72827148 125.20365906]
[55.23051071 131.74662781]
[44.72479248 121.04010010]
[51.52213669 107.66863251]
[66.36274719 109.84666443]
[81.22647858 107.82935333]
[80.08467865 100.41677856]
[66.07337952 95.06108093]
[52.06207657 89.70538330]
[36.40894699 92.00538635]
[27.28314781 80.23384857]
[11.63001537 82.53385925]
[2.50421643 70.76232147]
[-11.50708294 65.40662384]
[-25.51838303 60.05093002]
[-39.80754852 66.25234222]
[-53.94070435 60.62130737]
[-59.76474380 46.96055603]
[-73.34208679 54.71876907]
[-88.72052765 51.88370132]
[-98.63883209 39.79398727]
[-98.41389465 24.15802383]
[-88.15190887 12.35862923]
[-72.69828033 9.96712017]
[-59.34973145 18.11269188]
[-54.40904617 32.94925690]
[-40.95787048 26.65628815]
[-26.67212677 31.88813019]
[-20.16268539 46.03963089]
[-6.15138626 51.39532471]
[7.85991335 56.75102234]
[22.51086426 54.06793976]
[32.63884354 66.22254944]
[47.28979492 63.53947067]
[57.41777420 75.69408417]
[71.42907715 81.04978180]
[85.44037628 86.40547943]
[91.07041931 81.45041656]
[88.11801147 66.74384308]
[102.33049774 71.54029846]
[107.96054077 66.58523560]
[104.42790985 52.00715256]
[100.89527893 37.42906952]
[97.36264038 22.85098648]
[93.83000946 8.27290249]
[90.29737854 -6.30518007]
[75.89816284 -12.08811760]
[67.67662048 -25.24812508]
[68.79409027 -40.72491074]
[78.82088470 -52.56733322]
[93.90149689 -56.22174454]
[108.23712921 -50.28294373]
[116.31542969 -37.03452301]
[115.03013611 -21.57076836]
[104.87545776 -9.83781338]
[108.40809631 4.74026966]
[111.94072723 19.31835175]
[115.47335815 33.89643478]
[119.00598907 48.47451782]
[122.53862762 63.05260086]
[132.54399109 74.22813416]
[146.64422607 79.34513855]
[160.74444580 84.46214294]
[174.84466553 89.57913971]
[188.94488525 94.69614410]
[203.04510498 99.81314850]
[218.65693665 97.24767303]
[227.98130798 108.86254883]
[242.08152771 113.97954559]
[256.18176270 119.09654999]
[270.28198242 124.21355438]
[284.38220215 129.33055115]
[298.48242188 134.44755554]
[312.58264160 139.56455994]
[326.68286133 144.68156433]
[335.86093140 130.91467285]
[348.14157104 119.84208679]
[362.76336670 112.14331818]
[378.82153320 108.28892517]
[395.32376099 108.51174164]
[411.25167847 112.79282379]
[425.62359619 120.86296082]
[437.55508423 132.21955872]
[446.31332397 146.15795898]
[451.36221313 161.81518555]
[466.31842041 160.67004395]
[481.27465820 159.52490234]
[496.23086548 158.37976074]
[511.16888428 147.63043213]
[526.68768311 155.80311584]
[541.62231445 154.40417480]
[554.64074707 145.41355896]
[568.03411865 151.93014526]
[582.96875000 150.53120422]
[597.90338135 149.13226318]
[612.83801270 147.73332214]
[627.77258301 146.33436584]
[642.70721436 144.93542480]
[654.00988770 133.54991150]
[669.94226074 135.43109131]
[678.28240967 149.13589478]
[672.63250732 164.15115356]
[657.32666016 168.95845032]
[644.10620117 159.87005615]
[629.17156982 161.26899719]
[614.23693848 162.66793823]
[599.30230713 164.06687927]
[584.36767578 165.46583557]
[569.43304443 166.86477661]
[557.48284912 175.75534058]
[543.02124023 169.33880615]
[528.08660889 170.73774719]
[520.11676025 179.85668945]
[507.66998291 181.13229370]
[497.37600708 173.33598328]
[482.41979980 174.48112488]
[467.46356201 175.62626648]
[452.50735474 176.77140808]
[451.15771484 187.83436584]
[447.97131348 198.51412964]
[443.03848267 208.50801086]
[436.49902344 217.53274536]
[428.53826904 225.33255005]
[436.72564697 237.90103149]
[444.91302490 250.46952820]
[453.10040283 263.03799438]
[461.28778076 275.60650635]
[469.47518921 288.17498779]
[476.79864502 293.67340088]
[477.69274902 301.02713013]
[493.15264893 304.30850220]
[501.69400024 317.60589600]
[498.24935913 333.03024292]
[484.86236572 341.43051147]
[469.47531128 337.82299805]
[461.21707153 324.34796143]
[464.98706055 308.99990845]
[456.90667725 296.36236572]
[448.71929932 283.79388428]
[440.53192139 271.22540283]
[432.34454346 258.65689087]
[424.15716553 246.08842468]
[415.96978760 233.51992798]
[401.89584351 238.70755005]
[387.00592041 240.59591675]
[372.06344604 239.08387756]
[357.83551025 234.24470520]
[345.05346680 226.32260132]
[334.37539673 215.72035217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 110]
[4 109]
[5 108]
[6 107]
[7 106]
[8 105]
[9 104]
[10 103]
[12 101]
[13 100]
[14 99]
[15 98]
[16 97]
[17 96]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[42 72]
[43 71]
[44 70]
[46 68]
[48 66]
[49 65]
[50 64]
[53 61]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[120 153]
[121 152]
[122 151]
[123 150]
[125 147]
[126 146]
[128 144]
[129 143]
[130 142]
[131 141]
[132 140]
[133 139]
[158 178]
[159 177]
[160 176]
[161 175]
[162 174]
[163 173]
[165 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
