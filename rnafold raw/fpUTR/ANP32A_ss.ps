%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUCCCGCCUCCACGGCGAUCAGGUUAGUGUGCGCCGCGGGUGCUGGGGGCUCGAGAACCGAGCGGAGCUGGUUGAGCCUUCAAAGUCCUAAAACGCGCGGCCGUGGGUUCGGGGUUUAUUGAUUGAAUUCCGCCGGCGCGGGAGCCUCUGCAGAGAGAGAGCGCGAGAG\
) } def
/len { sequence length } bind def

/coor [
[102.19953918 192.76745605]
[115.85822296 186.56742859]
[130.83972168 187.31224060]
[143.81709290 194.83740234]
[137.69935608 181.14164734]
[131.58161926 167.44590759]
[125.46389771 153.75016785]
[119.34616089 140.05442810]
[113.22843170 126.35868073]
[98.16436768 129.25552368]
[83.77968597 124.20130920]
[73.95924377 112.66064453]
[61.60252380 121.16426849]
[54.62053680 135.36154175]
[39.74971390 136.20288086]
[27.39299583 144.70649719]
[15.03627777 153.21011353]
[2.67955971 161.71374512]
[-9.67715836 170.21736145]
[-12.67220879 185.50354004]
[-25.32481575 193.95138550]
[-39.87939835 191.00186157]
[-52.23611450 199.50547791]
[-54.85993195 215.09045410]
[-67.78375244 224.18717957]
[-83.34011078 221.39872742]
[-92.29968262 208.37945557]
[-89.34692383 192.85345459]
[-76.23365021 184.03202820]
[-60.73973465 187.14877319]
[-48.38301468 178.64514160]
[-45.93857574 163.99726868]
[-33.52824402 155.19737244]
[-18.18077660 157.86064148]
[-5.82405853 149.35702515]
[6.53265905 140.85340881]
[18.88937759 132.34977722]
[31.24609566 123.84616852]
[37.34424591 110.25713348]
[53.09890366 108.80754852]
[65.45561981 100.30393219]
[68.58322906 85.63361359]
[60.76912308 72.82971954]
[52.95502090 60.02582550]
[45.14091492 47.22192764]
[35.97330856 35.34947968]
[25.56219673 24.55092812]
[15.15108299 13.75237656]
[4.73997021 2.95382404]
[-5.67114305 -7.84472799]
[-16.08225632 -18.64328003]
[-26.49336815 -29.44183159]
[-36.90447998 -40.24038315]
[-47.31559372 -51.03893661]
[-57.72670746 -61.83749008]
[-62.81572342 -63.29532623]
[-66.45263672 -66.27720642]
[-68.29830170 -69.96468353]
[-68.39208221 -73.52423096]
[-78.19615936 -84.87677002]
[-88.00022888 -96.22930908]
[-96.00877380 -100.70059967]
[-97.87738800 -107.87989044]
[-107.47248077 -119.40959167]
[-117.06758118 -130.93930054]
[-131.84693909 -139.24632263]
[-127.95590210 -155.74772644]
[-111.02223206 -156.57678223]
[-105.53787231 -140.53439331]
[-95.94277954 -129.00468445]
[-86.34767914 -117.47498322]
[-76.64768982 -106.03337860]
[-66.84362030 -94.68084717]
[-57.03954315 -83.32830811]
[-46.92815399 -72.24860382]
[-36.51704407 -61.45005035]
[-26.10593033 -50.65149689]
[-15.69481659 -39.85294342]
[-5.28370380 -29.05439377]
[5.12740898 -18.25584030]
[15.53852177 -7.45728874]
[25.94963455 3.34126306]
[36.36074829 14.13981533]
[46.77186203 24.93836784]
[44.28755951 10.14552307]
[48.36595154 -4.28939009]
[58.22404099 -15.59505749]
[71.96920013 -21.60093689]
[86.96253967 -21.15398026]
[100.32553101 -14.33999634]
[109.49266052 -2.46718097]
[112.70395660 12.18504047]
[109.34288788 26.80363274]
[100.05474091 38.58201599]
[86.62271881 45.25889587]
[71.62558746 45.55239868]
[57.94480896 39.40782166]
[65.75891876 52.21171951]
[73.57302094 65.01561737]
[81.38712311 77.81951141]
[108.73613739 72.11272430]
[128.45880127 92.26252747]
[142.74148560 87.67941284]
[157.02416992 83.09630585]
[171.30685425 78.51319122]
[178.55416870 72.89130402]
[185.89242554 73.97938538]
[188.80363464 70.64540100]
[192.28135681 68.63604736]
[195.83203125 67.96566010]
[199.00941467 68.48433685]
[201.46470642 69.90825653]
[216.10585022 66.64679718]
[230.74697876 63.38534927]
[245.38812256 60.12389755]
[260.02926636 56.86244202]
[274.67041016 53.60099030]
[289.31152344 50.33953857]
[303.95266724 47.07808685]
[318.59381104 43.81663132]
[328.37884521 31.10314369]
[344.42135620 30.97073364]
[354.41488647 43.52097321]
[350.69329834 59.12639618]
[336.11141968 65.81585693]
[321.85525513 58.45777130]
[307.21414185 61.71922302]
[292.57299805 64.98067474]
[277.93185425 68.24212646]
[263.29071045 71.50357819]
[248.64958191 74.76503754]
[234.00843811 78.02648926]
[219.36729431 81.28794098]
[204.72616577 84.54939270]
[190.21391296 88.34339142]
[175.88996887 92.79587555]
[161.60726929 97.37899017]
[147.32458496 101.96209717]
[133.04190063 106.54521179]
[126.92417908 120.24095154]
[133.04190063 133.93669128]
[139.15963745 147.63243103]
[145.27737427 161.32818604]
[151.39509583 175.02392578]
[157.51283264 188.71966553]
[164.97325134 201.73281860]
[173.70114136 213.93215942]
[182.54006958 226.05130005]
[191.48930359 238.08920288]
[200.43853760 250.12710571]
[209.38777161 262.16500854]
[225.05816650 264.21786499]
[234.62083435 276.80084229]
[232.40238953 292.44866943]
[219.71902466 301.87774658]
[204.09553528 299.49401855]
[194.80107117 286.71166992]
[197.34986877 271.11425781]
[188.40063477 259.07635498]
[179.45140076 247.03843689]
[170.50216675 235.00053406]
[163.96385193 231.49562073]
[161.50178528 222.66004944]
[152.77391052 210.46069336]
[152.71119690 225.46057129]
[145.78491211 238.76570129]
[133.53364563 247.42056274]
[118.67884064 249.50257874]
[104.52028656 244.54925537]
[94.20310974 233.66091919]
[90.01912689 219.25625610]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 140]
[12 41]
[13 40]
[15 38]
[16 37]
[17 36]
[18 35]
[19 34]
[22 31]
[23 30]
[42 100]
[43 99]
[44 98]
[45 97]
[46 84]
[47 83]
[48 82]
[49 81]
[50 80]
[51 79]
[52 78]
[53 77]
[54 76]
[55 75]
[59 74]
[60 73]
[61 72]
[63 71]
[64 70]
[65 69]
[102 139]
[103 138]
[104 137]
[105 136]
[107 135]
[112 134]
[113 133]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[146 164]
[147 163]
[148 161]
[149 160]
[150 159]
[151 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
