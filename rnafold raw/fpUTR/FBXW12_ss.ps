%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUUUCUCCUCCACUGCAAAGUUAAAUGCGAGAAGGUAGAAACCCAGAGGCCAUGCUGGCGCUGAGAGAUGAGCCCCACUCACCAGAUUCAAGAUCCCAAGUGCUGCAGACUUUGGCAAAGCCUAUAAAUUCAGAGCAGCCCGGAGAGGAGAAAGGAAAGUGGAUGUGGGUUCAGGCCGCAUGAA\
) } def
/len { sequence length } bind def

/coor [
[202.55940247 238.87322998]
[195.76077271 225.50241089]
[188.96214294 212.13159180]
[182.16351318 198.76078796]
[175.36488342 185.38996887]
[168.56625366 172.01914978]
[161.76762390 158.64834595]
[154.96899414 145.27752686]
[148.17036438 131.90672302]
[141.37174988 118.53590393]
[134.57312012 105.16509247]
[127.77448273 91.79427338]
[137.48667908 107.01940155]
[137.45149231 128.91552734]
[124.11009216 151.08871460]
[97.93579102 165.63653564]
[87.28473663 176.19850159]
[76.63368225 186.76045227]
[65.98262787 197.32241821]
[68.47864532 212.63742065]
[61.46598434 226.47947693]
[47.64115143 233.52600098]
[32.32007599 231.06748962]
[21.39402771 220.04927063]
[19.06429100 204.70808411]
[26.22670174 190.94293213]
[40.12716293 184.04678345]
[55.42066574 186.67135620]
[66.07172394 176.10940552]
[76.72277832 165.54743958]
[87.37383270 154.98547363]
[83.80714417 148.38784790]
[70.61177063 155.52102661]
[63.47880173 142.32554626]
[76.67376709 135.19258118]
[73.10707855 128.59495544]
[58.43661118 131.72184753]
[43.76614761 134.84873962]
[31.95426559 146.22465515]
[16.27356720 141.42384338]
[12.85501099 125.38497162]
[25.21531296 114.60745239]
[40.63925552 120.17827606]
[55.30971909 117.05138397]
[69.98018646 113.92449188]
[70.61000061 98.93772125]
[56.25360870 94.59098816]
[41.89722061 90.24425507]
[30.16425323 95.63429260]
[18.28716087 91.70330048]
[12.47271347 81.08090210]
[-1.80862856 76.49360657]
[-16.08996964 71.90631104]
[-30.37131119 67.31901550]
[-47.30067062 68.23175049]
[-52.86425400 52.21666718]
[-39.01519775 42.43709564]
[-25.78401566 53.03767014]
[-11.50267410 57.62496567]
[2.77866721 62.21226120]
[17.06000900 66.79956055]
[33.97735214 62.16719055]
[46.24395370 75.88786316]
[60.60034180 80.23459625]
[74.95673370 84.58132935]
[79.52660370 78.63437653]
[73.79576874 64.77228546]
[88.66635895 66.74047089]
[93.23622894 60.79352188]
[79.39299011 53.13354111]
[79.27133179 38.23943329]
[71.37484741 25.48617554]
[63.47836685 12.73291874]
[55.58188248 -0.02033849]
[40.35701752 -5.07830048]
[34.95439529 -20.18429947]
[43.51844788 -33.75030899]
[59.47956467 -35.36964417]
[70.59375000 -23.80009079]
[68.33514404 -7.91682100]
[76.23162079 4.83643627]
[84.12810516 17.58969307]
[92.02458954 30.34295082]
[105.30301666 37.09073257]
[105.98948669 52.89703751]
[113.36178589 54.27515793]
[112.54621124 39.29734802]
[105.92590332 25.83735085]
[110.07764435 11.42336178]
[122.84349823 3.54726720]
[137.58822632 6.30278301]
[146.64804077 18.25768852]
[145.31396484 33.19824600]
[134.27749634 43.35963058]
[128.10638428 57.03140259]
[135.47868347 58.40952301]
[147.44894409 49.37000275]
[159.41920471 40.33048248]
[160.30104065 29.46293449]
[166.89213562 21.05501175]
[176.81785583 17.74341583]
[186.71224976 20.39592743]
[191.94349670 12.88175869]
[199.25878906 11.72369766]
[211.66925049 3.29870129]
[224.07969666 -5.12629557]
[236.49015808 -13.55129242]
[248.90061951 -21.97628975]
[256.83078003 -40.49451828]
[276.14495850 -41.11343384]
[288.26538086 -49.95058823]
[294.85794067 -64.33282471]
[309.70031738 -65.57906342]
[321.82073975 -74.41621399]
[333.94116211 -83.25336456]
[345.83505249 -92.39311981]
[357.49490356 -101.82965851]
[369.15472412 -111.26619720]
[377.66305542 -125.93059540]
[394.10971069 -121.81427765]
[394.70715332 -104.87085724]
[378.59127808 -99.60636902]
[366.93142700 -90.16982269]
[355.27160645 -80.73328400]
[354.54513550 -77.26286316]
[352.08920288 -73.97613525]
[348.01055908 -71.68778992]
[342.77832031 -71.13294220]
[330.65789795 -62.29578781]
[318.53744507 -53.45863342]
[312.81182861 -39.70848465]
[297.10253906 -37.83016205]
[284.98211670 -28.99300766]
[284.30981445 -18.77132988]
[277.98052979 -10.43904972]
[267.89895630 -6.90391588]
[257.32562256 -9.56583309]
[244.91516113 -1.14083624]
[232.50469971 7.28416061]
[220.09423828 15.70915794]
[207.68379211 24.13415527]
[195.34454346 32.66310120]
[188.54380798 50.75093842]
[168.45872498 52.30074310]
[156.48846436 61.34026337]
[144.51820374 70.37978363]
[141.14529419 84.99565125]
[147.94392395 98.36646271]
[154.74255371 111.73727417]
[161.54118347 125.10808563]
[168.33981323 138.47889709]
[175.13844299 151.84971619]
[181.93707275 165.22053528]
[188.73570251 178.59133911]
[195.53433228 191.96215820]
[202.33296204 205.33296204]
[209.13157654 218.70378113]
[215.93020630 232.07460022]
[228.85629272 231.53446960]
[240.98004150 235.91423035]
[250.50720215 244.52799988]
[256.04208374 256.06616211]
[256.79205322 268.79440308]
[252.68066406 280.81420898]
[244.35401917 290.34628296]
[250.69963074 303.93792725]
[257.04525757 317.52957153]
[263.39086914 331.12124634]
[269.73648071 344.71289062]
[276.08209229 358.30456543]
[291.23446655 362.16973877]
[300.31533813 374.90051270]
[299.03695679 390.48574829]
[288.00299072 401.56661987]
[272.42330933 402.91104126]
[259.65414429 393.88421631]
[255.72476196 378.74838257]
[262.49044800 364.65017700]
[256.14483643 351.05850220]
[249.79920959 337.46685791]
[243.45359802 323.87521362]
[237.10798645 310.28353882]
[230.76235962 296.69189453]
[213.58364868 295.83172607]
[199.12561035 286.35122681]
[191.40988159 270.77993774]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[3 156]
[4 155]
[5 154]
[6 153]
[7 152]
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[16 31]
[17 30]
[18 29]
[19 28]
[36 45]
[37 44]
[38 43]
[46 65]
[47 64]
[48 63]
[51 61]
[52 60]
[53 59]
[54 58]
[69 85]
[71 83]
[72 82]
[73 81]
[74 80]
[96 146]
[97 145]
[98 144]
[102 142]
[104 141]
[105 140]
[106 139]
[107 138]
[108 137]
[110 133]
[111 132]
[113 130]
[114 129]
[115 128]
[116 124]
[117 123]
[118 122]
[165 183]
[166 182]
[167 181]
[168 180]
[169 179]
[170 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
