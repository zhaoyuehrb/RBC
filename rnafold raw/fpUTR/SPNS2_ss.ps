%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCCGCAGCUGUCAGAGCCGCGGCGGCGAACGAGGCGCAGCGAGCUGAGCGGUGGCAGCGCCGCAGCCGGGGCCGGAGCGCAGGAGCCGACGGGGCCCGACCAGGAUGGUGCAGUGGCGGCUCCGCGGCGCACGCACGCGCUGAGCGGGCCCAGCCUGGGCCCCGCGCCCCCCGCGCCCCCCGCCGCCCCGAUCCGGGCCGGC\
) } def
/len { sequence length } bind def

/coor [
[100.53619385 136.57615662]
[101.59583282 130.04370117]
[97.09130859 115.73603821]
[82.13489532 114.59336090]
[75.50910950 128.05065918]
[68.88333130 141.50796509]
[62.25755310 154.96527100]
[55.63177109 168.42257690]
[56.47752380 184.22116089]
[43.91410446 192.22177124]
[37.28832245 205.67907715]
[30.66254234 219.13638306]
[34.44700241 234.72666931]
[24.50411034 247.31709290]
[8.46120071 247.24932861]
[-1.37497890 234.57536316]
[2.54104686 219.01759338]
[17.20523834 212.51060486]
[23.83101845 199.05329895]
[30.45679855 185.59599304]
[29.13712692 170.75996399]
[42.17446899 161.79679871]
[48.80024719 148.33949280]
[55.42602921 134.88218689]
[62.05180740 121.42488098]
[68.67758942 107.96758270]
[60.17835236 95.60784912]
[45.24110413 96.97846985]
[30.30385780 98.34909821]
[26.24173546 109.07604218]
[18.50350952 117.47326660]
[8.23625278 122.35254669]
[-3.05901146 123.04297638]
[-13.74672031 119.48297882]
[-22.29360199 112.22364807]
[-27.48862839 102.34385681]
[-42.47293091 103.02988434]
[-57.45723724 103.71591187]
[-72.44153595 104.40194702]
[-87.42584229 105.08797455]
[-100.85770416 113.44833374]
[-113.92552948 106.30121613]
[-128.90983582 106.98725128]
[-142.34169006 115.34761047]
[-155.40951538 108.20049286]
[-168.84138489 116.56085205]
[-181.90921021 109.41373444]
[-193.74130249 120.24798584]
[-209.56599426 117.61009216]
[-217.24394226 103.52362061]
[-210.88526917 88.79450226]
[-195.36781311 84.72166443]
[-182.59523010 94.42943573]
[-170.23515320 86.11814117]
[-156.09555054 93.21618652]
[-143.73545837 84.90489960]
[-129.59587097 92.00294495]
[-114.61155701 91.31691742]
[-102.25147247 83.00562286]
[-88.11187744 90.10367584]
[-73.12757111 89.41764069]
[-58.14326477 88.73161316]
[-43.15896225 88.04557800]
[-28.17465782 87.35955048]
[-18.81758499 71.18576813]
[-1.46642721 63.85673523]
[16.94305801 68.49838257]
[28.93323135 83.41184998]
[43.87047958 82.04122162]
[58.80772781 80.67060089]
[103.15645599 86.69398499]
[113.01075745 75.38502502]
[122.86506653 64.07605743]
[132.71937561 52.76709747]
[142.57368469 41.45813370]
[152.34146118 30.07435799]
[162.02217102 18.61643410]
[171.70286560 7.15850878]
[174.36721802 -12.82047844]
[192.82182312 -18.58472252]
[202.14860535 -30.33254242]
[211.47537231 -42.08036041]
[220.80215454 -53.82818222]
[223.32313538 -69.44725037]
[237.29652405 -74.60415649]
[246.62329102 -86.35197449]
[249.50999451 -95.02253723]
[256.18298340 -98.20640564]
[265.68780518 -109.81062317]
[275.19265747 -121.41484833]
[277.95153809 -136.99365234]
[292.00195312 -141.93687439]
[289.40698242 -160.70024109]
[301.14648438 -175.15664673]
[319.40591431 -176.42321777]
[328.55245972 -188.31190491]
[337.69900513 -200.20059204]
[346.84552002 -212.08926392]
[355.99206543 -223.97795105]
[365.13861084 -235.86663818]
[374.28515625 -247.75532532]
[372.43899536 -263.22238159]
[381.88424683 -275.14889526]
[396.64108276 -276.81359863]
[405.78759766 -288.70230103]
[414.93414307 -300.59097290]
[410.06280518 -313.48757935]
[412.18423462 -326.99975586]
[420.63839722 -337.61373901]
[433.13284302 -342.62295532]
[446.36318970 -340.81796265]
[455.68997192 -352.56576538]
[465.01675415 -364.31359863]
[474.34353638 -376.06140137]
[477.23022461 -384.73196411]
[483.90319824 -387.91583252]
[493.40805054 -399.52005005]
[502.91290283 -411.12429810]
[512.32897949 -422.80065918]
[521.65576172 -434.54846191]
[524.17675781 -450.16754150]
[538.15008545 -455.32443237]
[547.47686768 -467.07226562]
[552.59002686 -483.23681641]
[569.53826904 -482.79830933]
[573.80865479 -466.39099121]
[559.22473145 -457.74548340]
[549.89794922 -445.99768066]
[548.04406738 -431.21887207]
[533.40356445 -425.22167969]
[524.07678223 -413.47387695]
[522.37915039 -406.27777100]
[514.51708984 -401.61944580]
[505.01226807 -390.01522827]
[495.50741577 -378.41101074]
[486.09133911 -366.73464966]
[476.76455688 -354.98681641]
[467.43780518 -343.23901367]
[458.11102295 -331.49118042]
[463.01724243 -315.82760620]
[457.56713867 -300.16882324]
[443.72103882 -290.74945068]
[426.82284546 -291.44442749]
[417.67630005 -279.55575562]
[408.52975464 -267.66705322]
[410.70379639 -252.97662354]
[401.59725952 -240.78950500]
[386.17382812 -238.60879517]
[377.02728271 -226.72010803]
[367.88073730 -214.83142090]
[358.73422241 -202.94273376]
[349.58767700 -191.05404663]
[340.44113159 -179.16535950]
[331.29458618 -167.27667236]
[335.18740845 -156.54739380]
[333.39718628 -145.15364075]
[326.25463867 -135.94570923]
[315.44378662 -131.28343201]
[303.60617065 -132.43202209]
[301.52713013 -117.68323517]
[286.79687500 -111.91000366]
[277.29205322 -100.30578613]
[267.78720093 -88.70156097]
[258.37112427 -77.02519989]
[249.04434204 -65.27738190]
[247.19047546 -50.49860001]
[232.54997253 -44.50140762]
[223.22320557 -32.75358582]
[213.89642334 -21.00576782]
[204.56964111 -9.25794792]
[206.64456177 0.75236303]
[202.78396606 10.45524406]
[194.03904724 16.55536652]
[183.16079712 16.83920860]
[173.48008728 28.29713440]
[163.79939270 39.75505829]
[161.88308716 46.89603424]
[153.88264465 51.31243896]
[144.02833557 62.62140274]
[134.17402649 73.93036652]
[124.31972504 85.23932648]
[114.46541595 96.54829407]
[111.39897156 111.23151398]
[115.90349579 125.53917694]
[120.62568665 139.77647400]
[125.56444550 153.94012451]
[130.50320435 168.10375977]
[135.44197083 182.26739502]
[147.29158020 192.75059509]
[144.17614746 207.31573486]
[149.11491394 221.47937012]
[154.05366516 235.64302063]
[158.99243164 249.80665588]
[169.91668701 262.77188110]
[160.48228455 276.85833740]
[144.33462524 271.69216919]
[144.82879639 254.74540710]
[139.89002991 240.58177185]
[134.95126343 226.41813660]
[130.01251221 212.25450134]
[118.51615906 202.78437805]
[121.27832794 187.20616150]
[116.33956909 173.04251099]
[111.40081024 158.87887573]
[106.46205139 144.71524048]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 184]
[3 183]
[4 26]
[5 25]
[6 24]
[7 23]
[8 22]
[10 20]
[11 19]
[12 18]
[27 70]
[28 69]
[29 68]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[42 58]
[43 57]
[45 55]
[47 53]
[71 182]
[72 181]
[73 180]
[74 179]
[75 178]
[76 176]
[77 175]
[78 174]
[80 170]
[81 169]
[82 168]
[83 167]
[85 165]
[86 164]
[88 163]
[89 162]
[90 161]
[92 159]
[95 154]
[96 153]
[97 152]
[98 151]
[99 150]
[100 149]
[101 148]
[104 145]
[105 144]
[106 143]
[111 139]
[112 138]
[113 137]
[114 136]
[116 135]
[117 134]
[118 133]
[119 131]
[120 130]
[122 128]
[123 127]
[185 205]
[186 204]
[187 203]
[188 202]
[190 200]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
