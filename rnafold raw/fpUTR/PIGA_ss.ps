%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCCGGCUGCAGCCGCGGGAGGUCCGGACACUGGCGGCCAUGGAACUCACCGGUAAUAGAGGACACAUCUCUUAACUGGGUUGCUCUAAGAACUGAUGUCUAAACCGUCUCAGC\
) } def
/len { sequence length } bind def

/coor [
[22.64347839 349.77838135]
[18.88725471 354.66571045]
[13.99217987 358.35766602]
[8.32169056 360.60195923]
[2.29104900 361.25299072]
[-3.66305900 360.28115845]
[-12.34899330 372.51040649]
[-21.03492737 384.73965454]
[-29.72086143 396.96890259]
[-30.72023773 413.33758545]
[-45.51436996 420.41329956]
[-58.88431931 410.91714478]
[-57.07623291 394.61798096]
[-41.95011139 388.28295898]
[-33.26417542 376.05371094]
[-24.57824326 363.82446289]
[-15.89230824 351.59521484]
[-17.53509140 327.29501343]
[4.33579683 315.16320801]
[10.21529579 301.36352539]
[16.09479523 287.56384277]
[21.97429466 273.76412964]
[27.66799927 259.88674927]
[33.17488480 245.93418884]
[38.68177032 231.98161316]
[32.53461456 218.46318054]
[37.92062378 204.23484802]
[52.14167786 197.87879944]
[57.64856339 183.92623901]
[63.15544891 169.97366333]
[68.66233826 156.02108765]
[74.16921997 142.06852722]
[73.69165802 134.59417725]
[80.01580811 127.81852722]
[77.88631439 113.07693481]
[90.41368103 103.41382599]
[90.43636322 95.23914337]
[96.64073944 89.32593536]
[91.37345886 74.66668701]
[97.90395355 60.92597198]
[111.91176605 55.99476624]
[110.62571716 40.22591400]
[122.96110535 31.87802124]
[129.20898438 18.24115753]
[135.45684814 4.60429287]
[141.70472717 -9.03257179]
[140.41867065 -24.80142212]
[152.75407410 -33.14931488]
[145.31025696 -46.63618851]
[147.21301270 -61.74356461]
[157.52473450 -72.70406342]
[172.13821411 -75.45794678]
[178.38609314 -89.09481049]
[184.63397217 -102.73168182]
[190.88183594 -116.36854553]
[197.12971497 -130.00540161]
[190.99412537 -142.08343506]
[192.94873047 -155.29130554]
[202.04930115 -164.79226685]
[214.77711487 -167.23947144]
[221.38885498 -180.70367432]
[228.00059509 -194.16787720]
[234.61233521 -207.63208008]
[241.22409058 -221.09628296]
[237.42337036 -236.68263245]
[247.35313416 -249.28340149]
[263.39608765 -249.23237610]
[273.24548340 -236.56867981]
[269.34570312 -221.00683594]
[254.68829346 -214.48454285]
[248.07655334 -201.02033997]
[241.46479797 -187.55613708]
[234.85305786 -174.09191895]
[228.24131775 -160.62771606]
[234.36370850 -145.02749634]
[227.22613525 -129.49427795]
[210.76658630 -123.75753021]
[204.51870728 -110.12066650]
[198.27082825 -96.48380280]
[192.02296448 -82.84693909]
[185.77508545 -69.21007538]
[193.23225403 -56.34428406]
[191.66505432 -41.37738800]
[181.46607971 -30.07101059]
[166.39093018 -26.90144157]
[168.12387085 -12.10799122]
[155.34159851 -2.78469777]
[149.09371948 10.85216713]
[142.84584045 24.48903084]
[136.59797668 38.12589645]
[138.33091736 52.91934586]
[125.54862976 62.24264145]
[130.96130371 76.07154083]
[124.81932831 89.99026489]
[110.27760315 95.57380676]
[104.21337128 109.29332733]
[105.92231750 125.02196503]
[93.81549835 133.69802856]
[88.12179565 147.57540894]
[82.61490631 161.52798462]
[77.10801697 175.48054504]
[71.60113525 189.43312073]
[66.09424591 203.38568115]
[72.14079285 217.74107361]
[66.35726929 231.81251526]
[52.63434219 237.48851013]
[47.12745667 251.44107056]
[41.62057114 265.39364624]
[41.36349487 274.65853882]
[35.77398682 279.64364624]
[29.89448738 293.44332886]
[24.01498795 307.24301147]
[18.13548851 321.04272461]
[22.17001343 325.91772461]
[24.74854279 331.66058350]
[25.70108604 337.85009766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 17]
[7 16]
[8 15]
[9 14]
[19 113]
[20 112]
[21 111]
[22 110]
[23 108]
[24 107]
[25 106]
[28 103]
[29 102]
[30 101]
[31 100]
[32 99]
[34 98]
[36 96]
[38 95]
[41 92]
[43 90]
[44 89]
[45 88]
[46 87]
[48 85]
[52 81]
[53 80]
[54 79]
[55 78]
[56 77]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
