%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCGCUGGGCAGGAUCCGCCGCGCCGGCUGCGGCCGGCCGGGCUGGGAGACCCGCGCGGGGUAGAAGGUGAGGGGACCCGGCGGGCCGCUCGGCACAGGCCGGGACAUGAACGCCUGGAAGUCUGGCUGGGAGCGGACCCAUGAUCGAAGGACCAAAGGAGCCGCUUGAUCGCUGGACCUGGCCCUGCGACCCCAGUC\
) } def
/len { sequence length } bind def

/coor [
[53.78092194 367.49331665]
[57.13151169 352.63754272]
[66.24001312 340.43283081]
[79.52832031 332.99368286]
[78.11669922 318.06027222]
[76.70507050 303.12683105]
[67.80436707 291.18420410]
[74.20861816 276.71713257]
[72.79699707 261.78369141]
[71.38536835 246.85026550]
[69.97374725 231.91682434]
[68.44487762 216.99494934]
[66.79886627 202.08554077]
[65.15284729 187.17611694]
[61.29064560 180.86700439]
[63.59996414 172.01985168]
[62.18834305 157.08642578]
[60.77671814 142.15298462]
[59.36509323 127.21955872]
[45.79268646 120.83287048]
[33.38647842 129.26411438]
[20.98026848 137.69537354]
[15.63543034 145.11412048]
[8.31231594 146.15982056]
[-4.22479391 154.39517212]
[-16.76190376 162.63050842]
[-29.29901505 170.86585999]
[-41.83612442 179.10119629]
[-54.37323761 187.33653259]
[-61.25428391 202.22221375]
[-77.60843658 203.43621826]
[-86.61193848 189.72969055]
[-79.00276184 175.20272827]
[-62.60857773 174.79942322]
[-50.07146835 166.56408691]
[-37.53435898 158.32875061]
[-24.99724770 150.09339905]
[-12.46013641 141.85806274]
[0.07697403 133.62271118]
[12.54901791 125.28916168]
[24.95522690 116.85791016]
[37.36143494 108.42666626]
[35.94981003 93.49323273]
[22.18349075 87.53601837]
[8.41717243 81.57879639]
[-5.34914732 75.62157440]
[-19.11546707 69.66436005]
[-32.88178635 63.70714188]
[-44.75616074 70.07566833]
[-57.93761826 68.46310425]
[-67.63790131 59.68108368]
[-70.46362305 47.10417557]
[-84.13467407 40.93146133]
[-97.80571747 34.75874329]
[-113.56725311 36.13157654]
[-121.98291779 23.84231949]
[-135.65397644 17.66960526]
[-149.32501221 11.49689007]
[-161.75073242 20.52447319]
[-177.02717590 22.11377335]
[-191.04505920 15.83727837]
[-200.03364563 3.38333058]
[-201.57505798 -11.89801884]
[-195.25465393 -25.89616394]
[-182.77259827 -34.84567261]
[-167.48649597 -36.33917618]
[-153.50822449 -29.97492409]
[-144.59788513 -17.46487236]
[-143.15229797 -2.17415953]
[-129.48124695 3.99855590]
[-115.81020355 10.17127132]
[-101.02651978 8.35692596]
[-91.63300323 21.08769608]
[-77.96195984 27.26041031]
[-64.29090881 33.43312454]
[-48.83191681 26.82079887]
[-33.06154633 33.56378555]
[-26.92456818 49.94082260]
[-13.15824890 55.89804077]
[0.60807097 61.85525894]
[14.37439060 67.81247711]
[28.14070892 73.76969910]
[41.90702820 79.72691345]
[55.80987930 74.09568024]
[61.55012894 60.23748779]
[67.29038239 46.37929535]
[72.92161560 32.47644424]
[78.44348145 18.52979851]
[83.96535492 4.58315086]
[89.48722076 -9.36349678]
[95.00908661 -23.31014442]
[100.53095245 -37.25679016]
[105.83307648 -51.28845215]
[110.91414642 -65.40166473]
[115.99521637 -79.51487732]
[115.95864868 -88.65838623]
[121.26852417 -93.80879974]
[126.57064819 -107.84046173]
[131.87277222 -121.87211609]
[137.17489624 -135.90377808]
[142.14495850 -150.05645752]
[146.78021240 -164.32231140]
[151.41546631 -178.58816528]
[156.05072021 -192.85400391]
[160.68597412 -207.11985779]
[160.36222839 -216.25770569]
[165.50770569 -221.57235718]
[158.33058167 -235.65299988]
[163.29148865 -250.65849304]
[177.44721985 -257.68634033]
[192.39942932 -252.56706238]
[199.27722168 -238.33782959]
[194.00015259 -223.44058228]
[179.69897461 -216.71360779]
[174.95182800 -202.48460388]
[170.31657410 -188.21875000]
[165.68132019 -173.95289612]
[161.04606628 -159.68705750]
[156.41081238 -145.42120361]
[157.68376160 -142.12402344]
[157.41749573 -138.04507446]
[155.26141357 -133.91703796]
[151.20655823 -130.60165405]
[145.90443420 -116.56999969]
[140.60231018 -102.53833771]
[135.30018616 -88.50667572]
[130.10842896 -74.43380737]
[125.02735901 -60.32059479]
[119.94628906 -46.20738220]
[121.13730621 -41.57400131]
[119.42397308 -36.14356995]
[114.47760010 -31.73492241]
[108.95573425 -17.78827477]
[103.43386841 -3.84162831]
[97.91199493 10.10501862]
[92.39012909 24.05166626]
[86.86826324 37.99831390]
[87.32932281 45.38132858]
[81.14857483 52.11954498]
[75.40832520 65.97773743]
[69.66806793 79.83592987]
[95.34985352 66.65470123]
[120.07937622 76.49583435]
[128.15376282 99.48538971]
[142.68251038 103.21573639]
[157.21125793 106.94608307]
[171.74000549 110.67642975]
[186.26875305 114.40678406]
[200.79750061 118.13713074]
[218.40856934 112.77246857]
[230.46304321 125.52091980]
[245.04859924 129.02259827]
[258.41738892 121.02804565]
[273.15933228 124.78702545]
[280.69854736 137.58139038]
[296.26013184 132.40751648]
[308.34027100 143.49813843]
[304.51196289 159.44418335]
[288.71343994 163.84172058]
[277.19683838 152.16694641]
[264.67083740 160.14408875]
[249.82914734 156.80065918]
[241.54692078 143.60815430]
[226.96136475 140.10647583]
[216.48135376 146.15885925]
[204.29684448 143.35443115]
[197.06715393 132.66587830]
[182.53840637 128.93553162]
[168.00965881 125.20517731]
[153.48091125 121.47483063]
[138.95216370 117.74448395]
[124.42340851 114.01413727]
[113.13357544 127.98457336]
[94.22879791 133.16964722]
[74.29852295 125.80793762]
[75.71014404 140.74136353]
[77.12177277 155.67478943]
[78.53339386 170.60823059]
[80.06226349 185.53010559]
[81.70827484 200.43951416]
[83.35429382 215.34893799]
[87.40972137 223.54397583]
[84.90717316 230.50520325]
[86.31880188 245.43862915]
[87.73042297 260.37207031]
[89.14204407 275.30548096]
[98.14372253 288.31628418]
[91.63850403 301.71520996]
[93.05012512 316.64865112]
[94.46175385 331.58206177]
[108.90863800 336.39944458]
[120.14273834 346.68124390]
[126.21767426 360.64602661]
[126.08092499 375.87432861]
[119.75617981 389.72775269]
[108.33924103 399.80612183]
[93.80816650 404.36328125]
[78.68054962 402.60968018]
[65.57733917 394.84915161]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[8 186]
[9 185]
[10 184]
[11 183]
[12 181]
[13 180]
[14 179]
[16 178]
[17 177]
[18 176]
[19 175]
[20 42]
[21 41]
[22 40]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[43 83]
[44 82]
[45 81]
[46 80]
[47 79]
[48 78]
[52 75]
[53 74]
[54 73]
[56 71]
[57 70]
[58 69]
[84 141]
[85 140]
[86 139]
[87 137]
[88 136]
[89 135]
[90 134]
[91 133]
[92 132]
[93 129]
[94 128]
[95 127]
[97 126]
[98 125]
[99 124]
[100 123]
[101 119]
[102 118]
[103 117]
[104 116]
[105 115]
[107 114]
[144 172]
[145 171]
[146 170]
[147 169]
[148 168]
[149 167]
[151 164]
[152 163]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
