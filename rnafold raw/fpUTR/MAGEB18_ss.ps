%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUGGGCGUGGCCGGACAUGUUUCUCUUGACCUAUCUUCCACAUCAUCAAGCUGUUACGGGCGAAACCUUGGUCUGAAACAUGCGGCCAGAGAAAUAAAUCUCAGGAUCCGGCAGGUGUCAAAGGUGCCCUCUUCAUCAAUUCAACUGCCUGCACUAUUGUCUGUAGUCCCUGACAAGAGUAAUU\
) } def
/len { sequence length } bind def

/coor [
[118.07447052 223.03488159]
[127.59964752 211.44735718]
[142.08363342 207.54679871]
[156.13780212 212.78239441]
[149.14988708 199.50952148]
[142.16197205 186.23666382]
[135.17405701 172.96379089]
[128.18614197 159.69091797]
[121.19822693 146.41806030]
[114.21031189 133.14518738]
[81.05197144 106.45521545]
[66.18580627 104.45590973]
[51.31964493 102.45660400]
[36.45348358 100.45729828]
[21.58732033 98.45800018]
[6.72115898 96.45869446]
[0.44064543 98.62500000]
[-5.14639711 97.45566559]
[-8.60515594 94.13614655]
[-23.39620972 91.64120483]
[-38.18726349 89.14627075]
[-52.97831726 86.65132904]
[-67.76937103 84.15638733]
[-82.56042480 81.66144562]
[-97.35147858 79.16650391]
[-112.14253235 76.67156219]
[-119.05641174 83.13487244]
[-128.03941345 85.64344025]
[-137.03196716 83.75398254]
[-144.03254700 78.01679993]
[-147.54302979 69.82382202]
[-162.19049072 66.59082794]
[-176.83793640 63.35783005]
[-191.48538208 60.12483215]
[-208.40432739 72.57968903]
[-228.73403931 68.59715271]
[-239.39715576 51.17849731]
[-254.22782898 48.93106079]
[-269.03149414 54.51335526]
[-280.45584106 44.95647812]
[-295.28652954 42.70904160]
[-310.11718750 40.46160507]
[-319.74319458 52.34803391]
[-333.93270874 57.78444290]
[-348.83914185 55.40432739]
[-360.47494507 45.94577789]
[-365.77832031 32.02673721]
[-380.60900879 29.77930260]
[-393.18228149 39.35468292]
[-408.83233643 37.15208054]
[-418.27426147 24.47825813]
[-415.90631104 8.85236835]
[-403.13336182 -0.45502296]
[-387.53338623 2.07799292]
[-378.36157227 14.94862270]
[-363.53088379 17.19605827]
[-354.34173584 5.47320986]
[-340.42602539 -0.11326761]
[-325.48370361 2.02988482]
[-313.54193115 11.42621803]
[-307.86975098 25.63092804]
[-293.03909302 27.87836456]
[-278.20840454 30.12579918]
[-264.46551514 24.38275337]
[-251.98040771 34.10038376]
[-237.14971924 36.34782028]
[-231.66455078 28.71551323]
[-223.72160339 23.58305359]
[-214.39584351 21.69547844]
[-204.96797180 23.35521889]
[-196.74851990 28.37456703]
[-190.89573669 36.09585571]
[-188.25238037 45.47738266]
[-173.60493469 48.71038055]
[-158.95748901 51.94337845]
[-144.31004333 55.17637634]
[-125.27217865 47.23348236]
[-109.64759064 61.88051224]
[-94.85653687 64.37545013]
[-80.06548309 66.87039185]
[-65.27442932 69.36533356]
[-50.48337555 71.86027527]
[-35.69232178 74.35521698]
[-20.90126991 76.85015106]
[-6.11021566 79.34509277]
[8.72046280 81.59252930]
[23.58662605 83.59183502]
[38.45278931 85.59114075]
[53.31895065 87.59044647]
[68.18511200 89.58974457]
[83.05127716 91.58905029]
[95.05255890 82.59076691]
[97.29999542 67.76008606]
[99.54743195 52.92941284]
[101.79486847 38.09873199]
[92.21949005 25.52544403]
[94.42208862 9.87539291]
[107.09591675 0.43347788]
[122.72180176 2.80141973]
[132.02919006 15.57436085]
[129.49618530 31.17434120]
[116.62554932 40.34616852]
[114.37811279 55.17684555]
[112.13067627 70.00752258]
[109.88323975 84.83820343]
[122.85268402 92.37435150]
[134.62467957 83.07810974]
[146.39666748 73.78186035]
[158.16865540 64.48561096]
[158.81512451 53.60275269]
[165.22161865 45.05485916]
[175.07188416 41.52871704]
[185.02055359 43.96475220]
[197.09660339 35.06705475]
[209.17265320 26.16935921]
[221.24870300 17.27166367]
[218.87301636 2.15165401]
[223.80703735 -12.33675289]
[234.91699219 -22.86422729]
[249.64985657 -27.01163483]
[264.62014771 -23.82592773]
[276.38781738 -14.03916073]
[282.24871826 0.09973887]
[280.85604858 15.34175587]
[272.52987671 28.18438721]
[259.18344116 35.67648697]
[243.88369751 36.09643173]
[230.14639282 29.34771347]
[218.07034302 38.24541092]
[205.99429321 47.14310837]
[193.91824341 56.04080200]
[187.51231384 74.27280426]
[167.46490479 76.25759888]
[155.69291687 85.55384827]
[143.92092896 94.85009766]
[132.14892578 104.14634705]
[146.93669128 101.63191223]
[159.50996399 93.45190430]
[174.42658997 91.87248993]
[188.43411255 97.23802948]
[198.47836304 108.37863922]
[202.36927795 122.86521149]
[199.25849915 137.53909302]
[189.82427979 149.20080566]
[176.12367249 155.30763245]
[161.14393616 154.52803040]
[148.15127563 147.03198242]
[139.97900391 134.45512390]
[127.48317719 126.15727234]
[134.47109985 139.43014526]
[141.45901489 152.70300293]
[148.44691467 165.97587585]
[155.43482971 179.24874878]
[162.42274475 192.52160645]
[169.41065979 205.79447937]
[177.26950073 218.57096863]
[185.96417236 230.79400635]
[194.65884399 243.01705933]
[208.96292114 249.77751160]
[210.03532410 264.63345337]
[218.72998047 276.85650635]
[227.42465210 289.07955933]
[236.11930847 301.30258179]
[244.81398010 313.52563477]
[260.09628296 311.99356079]
[274.09054565 318.32250977]
[283.03244019 330.81005859]
[284.51660156 346.09707642]
[278.14379883 360.07144165]
[265.62829590 368.97412109]
[250.33671570 370.41036987]
[236.38238525 363.99380493]
[227.51896667 351.45046997]
[226.13066101 336.15444946]
[232.59094238 322.22030640]
[223.89627075 309.99725342]
[215.20159912 297.77423096]
[206.50694275 285.55117798]
[197.81227112 273.32812500]
[184.13009644 267.44195557]
[182.43579102 251.71171570]
[173.74113464 239.48867798]
[165.04646301 227.26564026]
[163.37977600 242.17274475]
[153.36494446 253.33981323]
[138.72657776 256.61367798]
[124.90880585 250.77677917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 155]
[5 154]
[6 153]
[7 152]
[8 151]
[9 150]
[10 149]
[11 91]
[12 90]
[13 89]
[14 88]
[15 87]
[16 86]
[19 85]
[20 84]
[21 83]
[22 82]
[23 81]
[24 80]
[25 79]
[26 78]
[31 76]
[32 75]
[33 74]
[34 73]
[37 66]
[38 65]
[40 63]
[41 62]
[42 61]
[47 56]
[48 55]
[92 105]
[93 104]
[94 103]
[95 102]
[106 136]
[107 135]
[108 134]
[109 133]
[113 131]
[114 130]
[115 129]
[116 128]
[156 183]
[157 182]
[158 181]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
