%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUCCCCACCUCUCCGCGCUGAGCAGCCACGUCGGCGGCGGUCCCUGGUCCAGGGAGGGGCGUGGCAAAGGCCCGUGCGCGGUACGUGUCCCGCCCCUCGCUGCCCGGAGCCCGGAUGAAGAGUAACGCCAUUACCGCCGGAGCCGCCGAGAGCCUUAGCCGACGGAAACUGGACACUGGACCGGCAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[175.96183777 617.57708740]
[174.51412964 602.64709473]
[173.06642151 587.71710205]
[162.11004639 574.01580811]
[169.85639954 557.31707764]
[168.16835022 542.41235352]
[166.48031616 527.50762939]
[164.19348145 512.68298340]
[161.31158447 497.96243286]
[158.42968750 483.24188232]
[145.84600830 478.75967407]
[137.05232239 468.56088257]
[134.42886353 455.24212646]
[138.76652527 442.26489258]
[149.03276062 433.05603027]
[146.38838196 418.29095459]
[143.74400330 403.52587891]
[141.09962463 388.76080322]
[138.33639526 374.01751709]
[135.45449829 359.29696655]
[132.45411682 344.60009766]
[129.33543396 329.92788696]
[126.21675873 315.25567627]
[123.09808350 300.58346558]
[119.97940826 285.91125488]
[116.52193451 282.59902954]
[115.11676788 277.07510376]
[117.00465393 270.71640015]
[114.36027527 255.95133972]
[103.79306793 251.60900879]
[96.56418610 242.60789490]
[94.56358337 231.11622620]
[98.40344238 219.97491455]
[107.23743439 211.99519348]
[105.07009888 197.15260315]
[102.90276337 182.30999756]
[100.73542786 167.46740723]
[98.56809235 152.62481689]
[96.40075684 137.78221130]
[94.23342133 122.93962097]
[92.06608582 108.09702301]
[86.29793549 94.25041962]
[71.82205963 87.86609650]
[70.36177826 73.04324341]
[61.35064316 61.05160141]
[52.33950806 49.05996323]
[46.39756012 46.11203384]
[43.30950928 41.32119370]
[43.23865509 36.53370667]
[34.61851883 24.25798988]
[22.06299973 21.26684952]
[15.13732815 10.85375786]
[17.10388756 -1.09034598]
[8.68263245 -13.50334263]
[0.26137832 -25.91633797]
[-13.88914394 -32.99258804]
[-14.63157845 -47.86867523]
[-23.05283356 -60.28167343]
[-31.47408676 -72.69467163]
[-39.89533997 -85.10766602]
[-48.31659698 -97.52066040]
[-56.73785019 -109.93365479]
[-65.15910339 -122.34665680]
[-73.58036041 -134.75964355]
[-87.73088074 -141.83589172]
[-88.47331238 -156.71199036]
[-96.89456940 -169.12498474]
[-105.31582642 -181.53797913]
[-113.73707581 -193.95097351]
[-126.24278259 -197.14399719]
[-132.99980164 -207.66731262]
[-130.84107971 -219.57818604]
[-146.05513000 -222.92036438]
[-154.21282959 -235.76194763]
[-150.93283081 -250.24563599]
[-159.15301514 -262.79269409]
[-167.37319946 -275.33975220]
[-182.25054932 -282.23876953]
[-183.44479370 -298.59436035]
[-169.72738647 -307.58129883]
[-155.20964050 -299.95458984]
[-154.82614136 -283.55993652]
[-146.60595703 -271.01287842]
[-138.38577271 -258.46582031]
[-123.79732513 -255.68864441]
[-115.28214264 -243.08125305]
[-118.29402161 -227.79837036]
[-102.22531891 -220.75816345]
[-101.32408142 -202.37223816]
[-92.90282440 -189.95922852]
[-84.48157501 -177.54623413]
[-76.06031799 -165.13323975]
[-62.51214218 -158.94485474]
[-61.16736221 -143.18090820]
[-52.74610901 -130.76791382]
[-44.32485199 -118.35491180]
[-35.90359879 -105.94191742]
[-27.48234558 -93.52892303]
[-19.06109047 -81.11592102]
[-10.63983631 -68.70292664]
[-2.21858239 -56.28993225]
[11.32959557 -50.10154343]
[12.67437458 -34.33759308]
[21.09562874 -21.92459679]
[29.51688385 -9.51160049]
[45.69691849 -2.73116827]
[46.89423752 15.63785362]
[55.51437378 27.91357231]
[64.33115387 40.04882812]
[73.34228516 52.04047012]
[82.35341644 64.03211212]
[96.18476105 69.55871582]
[98.28957367 85.23928070]
[113.05464172 87.88365936]
[125.66750336 79.76480865]
[138.28036499 71.64595795]
[150.89323425 63.52711105]
[156.42472839 56.24081802]
[163.77532959 55.38096237]
[176.51734924 47.46635818]
[178.43966675 43.53923035]
[181.23498535 40.71893692]
[184.44544983 39.14432907]
[187.61535645 38.79035568]
[190.34472656 39.48311996]
[203.56997681 32.40550995]
[216.79522705 25.32790184]
[230.02049255 18.25028992]
[236.02726746 3.37419677]
[251.44354248 -1.06632888]
[264.44323730 8.33510494]
[265.05413818 24.36652374]
[252.80758667 34.72999191]
[237.09809875 31.47554779]
[223.87284851 38.55315781]
[210.64758301 45.63076782]
[197.42233276 52.70837784]
[184.43194580 60.20837784]
[171.68992615 68.12298584]
[159.01208496 76.13996887]
[146.39921570 84.25881958]
[133.78636169 92.37767029]
[121.17349243 100.49652100]
[114.13698578 105.42423248]
[106.90867615 105.92968750]
[109.07601166 120.77228546]
[111.24334717 135.61488342]
[113.41068268 150.45747375]
[115.57801819 165.30006409]
[117.74535370 180.14266968]
[119.91269684 194.98526001]
[122.08003235 209.82786560]
[137.68844604 220.54692078]
[140.47149658 238.95329285]
[129.12535095 253.30696106]
[131.76971436 268.07202148]
[134.65162659 282.79257202]
[137.77029419 297.46478271]
[140.88897705 312.13702393]
[144.00764465 326.80923462]
[147.12632751 341.48144531]
[151.97763062 349.23724365]
[150.17504883 356.41506958]
[153.05694580 371.13562012]
[157.78266907 378.96856689]
[155.86470032 386.11642456]
[158.50907898 400.88150024]
[161.15345764 415.64657593]
[163.79782104 430.41165161]
[179.11453247 437.57260132]
[187.07028198 452.30343628]
[184.70666504 468.70980835]
[173.15023804 480.35998535]
[176.03213501 495.08053589]
[178.91403198 509.80108643]
[189.37882996 499.05453491]
[204.32093811 500.37115479]
[212.74519348 512.78210449]
[208.45262146 527.15478516]
[194.60189819 532.91302490]
[181.38502502 525.81958008]
[183.07307434 540.72430420]
[184.76110840 555.62902832]
[194.35049438 564.26800537]
[195.44309998 576.72607422]
[187.99639893 586.26940918]
[189.44410706 601.19940186]
[190.89181519 616.12933350]
[203.88661194 624.82812500]
[208.20005798 639.85906982]
[201.79547119 654.12493896]
[187.69691467 660.88989258]
[172.56126404 656.95965576]
[163.53514099 644.19006348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[5 183]
[6 182]
[7 181]
[8 175]
[9 174]
[10 173]
[15 169]
[16 168]
[17 167]
[18 166]
[19 164]
[20 163]
[21 161]
[22 160]
[23 159]
[24 158]
[25 157]
[28 156]
[29 155]
[34 152]
[35 151]
[36 150]
[37 149]
[38 148]
[39 147]
[40 146]
[41 145]
[42 113]
[44 111]
[45 110]
[46 109]
[49 108]
[50 107]
[53 105]
[54 104]
[55 103]
[57 101]
[58 100]
[59 99]
[60 98]
[61 97]
[62 96]
[63 95]
[64 94]
[66 92]
[67 91]
[68 90]
[69 89]
[72 87]
[75 84]
[76 83]
[77 82]
[114 143]
[115 142]
[116 141]
[117 140]
[119 139]
[120 138]
[125 137]
[126 136]
[127 135]
[128 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
