%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUAUUAUCUGGGCAUUUGGAGGUGAAGGGGUCACAGCUCUGGCAAAGAUGGGGUUGAAAGGGCCCGGACUCCAGGGAGGGGCAGCUCUGCAUGGCCUGAUUCCUGCACCCCACCUUUGCCCCCUCACACCUCCUCUCAUCUCCCGUUUUUGAAGAGGAGGACCCUGUCACAUCUGGACAAUUCUGCAAGAACUCUGUAGAACUGACUUCACUGUGAACCAGGCUCCAGAAGUCAACAGAAACAAAA\
) } def
/len { sequence length } bind def

/coor [
[85.88575745 439.04815674]
[71.70919800 433.68148804]
[60.22513199 423.78744507]
[52.82030106 410.56079102]
[50.38888550 395.59872437]
[53.22448349 380.70794678]
[60.98468399 367.68661499]
[72.73240662 358.10711670]
[87.04906464 353.12622070]
[87.23831177 338.12741089]
[87.42755890 323.12860107]
[87.61680603 308.12979126]
[87.61680603 293.12979126]
[87.42755890 278.13098145]
[87.23831177 263.13217163]
[79.34104919 250.50354004]
[86.90362549 236.60685730]
[86.71437836 221.60804749]
[86.52513123 206.60923767]
[86.33588409 191.61042786]
[86.14663696 176.61163330]
[85.95738983 161.61282349]
[85.76814270 146.61401367]
[77.15158081 134.33578491]
[63.11090851 129.05757141]
[49.07023621 123.77935791]
[35.02956772 118.50114441]
[25.92094994 118.41355133]
[20.84574699 113.06674957]
[6.87278652 107.61180878]
[-7.10017443 102.15686798]
[-21.07313538 96.70192719]
[-12.39221096 108.93473816]
[-10.31283951 123.78990936]
[-15.30132961 137.93611145]
[-26.23898888 148.20098877]
[-40.67299271 152.28257751]
[-55.36645508 149.26559448]
[-67.02429199 139.82658386]
[-73.03218079 126.08230591]
[-72.04281616 111.11496735]
[-64.27808380 98.28107452]
[-51.47924805 90.45867920]
[-36.51480865 89.40229034]
[-49.59878159 82.06678009]
[-62.68275070 74.73126984]
[-75.76672363 67.39575958]
[-88.85069275 60.06024933]
[-101.93466187 52.72473907]
[-117.75586700 52.72496033]
[-125.07361603 39.75191498]
[-138.15759277 32.41640472]
[-151.24156189 25.08089638]
[-164.32553101 17.74538612]
[-177.40950012 10.40987682]
[-190.49346924 3.07436657]
[-199.48468018 1.61397290]
[-203.69540405 -4.43712568]
[-216.31666565 -1.85877836]
[-226.97546387 -8.35312748]
[-230.25306702 -19.98100471]
[-243.14779663 -27.64430046]
[-256.04251099 -35.30759811]
[-268.93725586 -42.97089386]
[-284.07369995 -39.29317093]
[-297.04159546 -47.24853516]
[-300.45446777 -61.70148849]
[-313.34921265 -69.36478424]
[-326.24392700 -77.02808380]
[-336.58175659 -73.74802399]
[-346.81106567 -76.62595367]
[-353.63436890 -84.48420715]
[-354.99011230 -94.58153534]
[-367.68737793 -102.56774139]
[-380.38464355 -110.55394745]
[-396.18569946 -111.35183716]
[-402.83969116 -124.67751312]
[-418.64077759 -125.47541046]
[-425.29476929 -138.80108643]
[-437.99203491 -146.78729248]
[-450.68930054 -154.77349854]
[-463.38656616 -162.75968933]
[-479.78552246 -162.83923340]
[-487.68002319 -177.21311951]
[-478.94891357 -191.09474182]
[-462.57397461 -190.20387268]
[-455.40036011 -175.45695496]
[-442.70309448 -167.47076416]
[-430.00582886 -159.48455811]
[-417.30856323 -151.49835205]
[-402.41567993 -151.27168274]
[-394.85351562 -137.37478638]
[-379.96063232 -137.14811707]
[-372.39843750 -123.25121307]
[-359.70117188 -115.26500702]
[-347.00390625 -107.27880096]
[-327.66467285 -107.93646240]
[-318.58062744 -89.92280579]
[-305.68591309 -82.25950623]
[-292.79116821 -74.59621429]
[-278.46487427 -78.50684357]
[-265.27862549 -70.91886139]
[-261.27395630 -55.86561584]
[-248.37922668 -48.20232010]
[-235.48449707 -40.53902435]
[-222.58978271 -32.87572861]
[-205.04475403 -33.58893967]
[-196.19540405 -17.42750740]
[-183.15795898 -10.00960445]
[-170.07398987 -2.67409444]
[-156.99002075 4.66141558]
[-143.90605164 11.99692535]
[-130.82208252 19.33243561]
[-117.73810577 26.66794586]
[-102.85275269 26.14303970]
[-94.59915161 39.64076614]
[-81.51518250 46.97627640]
[-68.43121338 54.31178665]
[-55.34724045 61.64729691]
[-42.26327133 68.98280334]
[-29.17930031 76.31831360]
[-15.61819649 82.72897339]
[-1.64523518 88.18390656]
[12.32772541 93.63884735]
[26.30068588 99.09378815]
[40.30778122 104.46047211]
[54.34845352 109.73868561]
[68.38912201 115.01689911]
[82.42979431 120.29512024]
[78.39279938 89.45853424]
[104.09938049 79.16043854]
[112.00532532 66.41304779]
[119.91127014 53.66565323]
[127.81721497 40.91825867]
[135.72315979 28.17086601]
[143.62910461 15.42347336]
[151.53504944 2.67608070]
[159.44099426 -10.07131195]
[167.26637268 -22.86832619]
[175.01086426 -35.71445084]
[167.02238464 -48.76982498]
[166.02764893 -64.04297638]
[172.25523376 -78.02423859]
[184.27407837 -87.50082397]
[199.32235718 -90.29508972]
[213.94207764 -85.76492310]
[224.77374268 -74.95132446]
[229.32829285 -60.33918762]
[226.55914307 -45.28626633]
[217.10263062 -33.25161743]
[203.13177490 -27.00070953]
[187.85697937 -27.96996117]
[180.11250305 -15.12383652]
[179.35255432 -7.79114103]
[172.18838501 -2.16536713]
[164.28244019 10.58202553]
[156.37649536 23.32941818]
[148.47055054 36.07681274]
[140.56460571 48.82420349]
[132.65866089 61.57159805]
[124.75272369 74.31899261]
[116.84677124 87.06638336]
[122.95801544 97.37756348]
[122.73031616 110.34977722]
[115.21281433 122.11727905]
[129.92689514 125.03203583]
[144.64097595 127.94678497]
[159.35505676 130.86154175]
[174.10475159 133.59042358]
[188.88768005 136.13299561]
[203.67062378 138.67556763]
[218.45356750 141.21813965]
[233.23651123 143.76071167]
[244.18632507 136.97502136]
[256.43374634 139.38070679]
[263.53182983 149.15657043]
[278.28152466 151.88543701]
[293.03121948 154.61431885]
[307.78088379 157.34320068]
[322.56384277 159.88577271]
[337.37768555 162.24163818]
[352.22177124 156.76779175]
[363.57589722 166.40797424]
[378.38973999 168.76383972]
[393.20358276 171.11970520]
[408.01742554 173.47557068]
[422.83126831 175.83142090]
[437.64511108 178.18728638]
[452.45895386 180.54315186]
[464.14785767 170.15548706]
[479.78051758 169.76321411]
[491.97567749 179.55158997]
[494.97515869 194.89880371]
[487.36270142 208.55839539]
[472.73263550 214.08070374]
[457.99288940 208.85829163]
[450.10308838 195.35699463]
[435.28924561 193.00112915]
[420.47540283 190.64526367]
[405.66156006 188.28941345]
[390.84771729 185.93354797]
[376.03387451 183.57768250]
[361.22003174 181.22181702]
[347.43551636 186.86418152]
[335.02182007 177.05548096]
[320.20797729 174.69961548]
[315.90270996 176.71438599]
[310.28845215 176.06329346]
[305.05200195 172.09289551]
[290.30233765 169.36401367]
[275.55264282 166.63513184]
[260.80294800 163.90625000]
[244.58815002 170.64544678]
[230.69393921 158.54365540]
[215.91099548 156.00108337]
[201.12805176 153.45851135]
[186.34510803 150.91593933]
[171.56216431 148.37336731]
[167.23182678 150.33364868]
[161.62623596 149.61177063]
[156.44030762 145.57562256]
[141.72622681 142.66087341]
[127.01214600 139.74612427]
[112.29805756 136.83135986]
[100.76694489 146.42477417]
[100.95619202 161.42356873]
[101.14543915 176.42237854]
[101.33468628 191.42118835]
[101.52393341 206.41999817]
[101.71318054 221.41879272]
[101.90243530 236.41760254]
[109.81322479 250.11906433]
[102.23711395 262.94293213]
[102.42636108 277.94174194]
[102.61560822 292.94055176]
[105.64095306 298.77420044]
[105.33098602 304.41760254]
[102.61560822 308.31903076]
[102.42636108 323.31784058]
[102.23711395 338.31665039]
[102.04786682 353.31546021]
[116.23429108 358.65600586]
[127.73657227 368.52883911]
[135.16575623 381.74182129]
[137.62475586 396.69940186]
[134.81660461 411.59539795]
[127.08040619 424.63101196]
[115.35035706 434.23211670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 241]
[10 240]
[11 239]
[12 238]
[13 235]
[14 234]
[15 233]
[17 231]
[18 230]
[19 229]
[20 228]
[21 227]
[22 226]
[23 225]
[24 129]
[25 128]
[26 127]
[27 126]
[29 125]
[30 124]
[31 123]
[32 122]
[44 121]
[45 120]
[46 119]
[47 118]
[48 117]
[49 116]
[51 114]
[52 113]
[53 112]
[54 111]
[55 110]
[56 109]
[58 108]
[61 106]
[62 105]
[63 104]
[64 103]
[67 100]
[68 99]
[69 98]
[73 96]
[74 95]
[75 94]
[77 92]
[79 90]
[80 89]
[81 88]
[82 87]
[131 162]
[132 161]
[133 160]
[134 159]
[135 158]
[136 157]
[137 156]
[138 155]
[139 153]
[140 152]
[165 224]
[166 223]
[167 222]
[168 221]
[169 218]
[170 217]
[171 216]
[172 215]
[173 214]
[176 212]
[177 211]
[178 210]
[179 209]
[180 206]
[181 205]
[183 203]
[184 202]
[185 201]
[186 200]
[187 199]
[188 198]
[189 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
