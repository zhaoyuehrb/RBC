%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGUGUCCGCAUGCGCGACUGAGCCGGGUGGAUGGUACUGCUGCAUCCGGGUGUCUGGAGGCUGUGGCCGUUUUGUUUUCUUGGCUAAAAUCGGGGGAGUGAGGCGGGCCGGCGCGGCGCGACACCGGGCUCCGGAACCACUGCACGACGGGGCUGGACUGACCUGAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[207.99325562 243.25367737]
[221.15118408 236.05168152]
[236.12492371 236.97808838]
[225.18666077 226.71386719]
[214.24841309 216.44963074]
[203.31015015 206.18539429]
[192.37188721 195.92115784]
[181.34088135 185.75665283]
[170.21804810 175.69273376]
[159.09521484 165.62881470]
[152.00022888 163.46499634]
[147.86389160 155.27973938]
[136.92564392 145.01550293]
[125.98738098 134.75128174]
[115.04911804 124.48703766]
[104.11086273 114.22280884]
[89.55936432 110.58222961]
[75.07636261 114.48644257]
[60.59336853 118.39064789]
[56.76617432 129.69123840]
[48.03693390 137.64735413]
[36.66449738 140.35743713]
[25.51667976 137.25753784]
[17.34716988 129.23397827]
[2.73196006 132.60971069]
[-11.88325024 135.98545837]
[-26.49846077 139.36119080]
[-41.11367035 142.73693848]
[-55.72888184 146.11267090]
[-70.34409332 149.48841858]
[-82.04898071 160.13294983]
[-96.19104004 155.45840454]
[-103.88098907 160.45561218]
[-111.10224152 158.76019287]
[-119.50669861 172.14453125]
[-134.93209839 175.58435059]
[-148.22685242 167.03884888]
[-151.50338745 151.57794189]
[-142.81781006 138.37429810]
[-127.32312012 135.26139832]
[-114.21203613 144.08609009]
[-99.56678009 140.84318542]
[-88.90727234 130.44010925]
[-73.71983337 134.87319946]
[-59.10462189 131.49746704]
[-44.48941040 128.12171936]
[-29.87420082 124.74597931]
[-15.25899029 121.37023926]
[-0.64378023 117.99449921]
[13.97142982 114.61875916]
[22.68490791 98.54877472]
[40.67645264 93.83531189]
[56.68916321 103.90765381]
[71.17215729 100.00344086]
[85.65515137 96.09923553]
[70.95867157 99.10145569]
[56.83583069 94.04720306]
[47.38137054 82.40190125]
[45.33647919 67.54193878]
[51.29405212 53.77577209]
[63.52676773 45.09471893]
[78.48790741 44.01573181]
[91.83969879 50.85165024]
[99.71095276 63.62049103]
[99.82015228 78.61773682]
[100.63692474 63.63999176]
[101.45369720 48.66224670]
[102.27046967 33.68449783]
[103.08724976 18.70675278]
[103.76799011 3.72220850]
[104.31266022 -11.26789951]
[104.85732269 -26.25800705]
[105.40198517 -41.24811554]
[105.94665527 -56.23822403]
[106.49131775 -71.22833252]
[107.03598022 -86.21843719]
[107.58065033 -101.20854950]
[108.12531281 -116.19865417]
[108.66998291 -131.18876648]
[109.21464539 -146.17887878]
[109.75930786 -161.16897583]
[110.30397797 -176.15908813]
[110.84864044 -191.14920044]
[111.39330292 -206.13929749]
[100.44895172 -217.54090881]
[100.85580444 -233.33996582]
[112.37248993 -244.16316223]
[128.16635132 -243.58929443]
[138.86718750 -231.95881653]
[138.12637329 -216.17190552]
[126.38341522 -205.59463501]
[125.83874512 -190.60453796]
[125.29408264 -175.61442566]
[124.74942017 -160.62431335]
[124.20475006 -145.63420105]
[123.66008759 -130.64410400]
[123.11542511 -115.65399170]
[122.57075500 -100.66387939]
[122.02609253 -85.67377472]
[121.48143005 -70.68367004]
[120.93675995 -55.69355774]
[120.39209747 -40.70344925]
[119.84743500 -25.71334267]
[119.30276489 -10.72323418]
[118.75810242 4.26687384]
[121.66796112 11.08989620]
[118.06499481 19.52352715]
[117.24822235 34.50127411]
[116.43144989 49.47901917]
[115.61466980 64.45676422]
[114.79789734 79.43450928]
[114.37509918 103.28454590]
[125.31335449 113.54878235]
[136.25161743 123.81301880]
[147.18986511 134.07725525]
[158.12812805 144.34149170]
[169.15913391 154.50598145]
[180.28196716 164.56990051]
[191.40480042 174.63381958]
[199.90037537 178.08822632]
[202.63612366 184.98289490]
[213.57438660 195.24713135]
[224.51263428 205.51136780]
[235.45089722 215.77560425]
[246.38916016 226.03984070]
[258.12875366 235.37696838]
[270.59133911 243.72467041]
[283.05389404 252.07237244]
[295.51647949 260.42007446]
[308.05435181 268.65426636]
[320.81182861 276.54394531]
[333.71044922 284.20065308]
[346.60906982 291.85736084]
[359.50772095 299.51409912]
[372.40634155 307.17080688]
[387.54092407 303.48535156]
[400.51290894 311.43408203]
[403.93313599 325.88531494]
[416.83178711 333.54202271]
[430.18548584 325.95428467]
[445.54391479 326.07604980]
[458.77566528 333.87451172]
[466.32150269 347.25195312]
[466.15161133 362.60989380]
[458.31170654 375.81716919]
[444.91067505 383.32101440]
[429.55331421 383.10299683]
[416.37072754 375.22171021]
[408.90890503 361.79724121]
[409.17504883 346.44064331]
[396.27642822 338.78393555]
[381.95214844 342.70187378]
[368.76202393 335.12063599]
[364.74963379 320.06942749]
[351.85101318 312.41271973]
[338.95236206 304.75601196]
[326.05374146 297.09930420]
[313.15509033 289.44259644]
[308.35620117 289.74472046]
[303.32269287 287.01077271]
[299.93432617 281.26638794]
[292.58181763 280.28579712]
[287.16879272 272.88265991]
[274.70620728 264.53494263]
[262.24362183 256.18725586]
[249.78105164 247.83953857]
[254.05351257 262.21820068]
[249.99876404 276.65979004]
[238.86650085 286.71328735]
[224.08775330 289.28015137]
[210.21743774 283.56927490]
[201.53044128 271.34078979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 125]
[4 124]
[5 123]
[6 122]
[7 121]
[8 119]
[9 118]
[10 117]
[12 116]
[13 115]
[14 114]
[15 113]
[16 112]
[17 55]
[18 54]
[19 53]
[24 50]
[25 49]
[26 48]
[27 47]
[28 46]
[29 45]
[30 44]
[32 42]
[34 41]
[65 111]
[66 110]
[67 109]
[68 108]
[69 107]
[70 105]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[126 166]
[127 165]
[128 164]
[129 163]
[130 161]
[131 158]
[132 157]
[133 156]
[134 155]
[135 154]
[138 151]
[139 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
