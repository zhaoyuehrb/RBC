%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUGCUGAGCCUACGGGGGAGGCGGCGGCGGCAGUGGAGAGAGCGGGAGGAGCGAGGGAAGGCAGGAAGGAGGCAGCCGAAGGCCGAGCUGGGUGGCUGGACCGGGUGCUGGCUGCGCCGCGCUGCUUUCGGCUCCCACGGCCUCUCCCAUGCGCUGAGGGAGCCCGGCUGGGCCGGGCCGGCGGCGGGAGGGGAGGCUCCUCUCC\
) } def
/len { sequence length } bind def

/coor [
[64.97846985 151.86596680]
[63.06690979 166.74366760]
[48.18924332 164.83186340]
[50.10073853 149.95466614]
[52.01205063 135.07693481]
[44.57318497 134.12127686]
[36.65415955 146.86054993]
[28.73513794 159.59982300]
[20.81611443 172.33909607]
[20.64444542 190.75173950]
[4.85923529 198.41795349]
[-2.86740971 211.27482605]
[-10.59405422 224.13168335]
[-18.32069969 236.98855591]
[-20.05935860 245.95761108]
[-26.26134491 249.97935486]
[-26.25425529 266.37850952]
[-40.58624649 274.34881592]
[-54.51379395 265.69113159]
[-53.70943069 249.31173706]
[-39.00061798 242.06033325]
[-31.17756271 229.26190186]
[-23.45091820 216.40504456]
[-15.72427368 203.54817200]
[-7.99762917 190.69131470]
[-10.61777592 178.88093567]
[-4.28449488 168.10604858]
[8.07684231 164.42007446]
[15.99586582 151.68080139]
[23.91488838 138.94152832]
[31.83391190 126.20225525]
[60.15505600 91.30616760]
[94.03216553 93.89662933]
[89.37546539 79.63776398]
[84.71877289 65.37889862]
[70.90627289 58.17802429]
[66.38684845 43.65116882]
[73.33690643 30.52743912]
[68.68021393 16.26857567]
[64.02351379 2.00971103]
[59.36682510 -12.24915314]
[54.71012878 -26.50801659]
[50.05343628 -40.76688004]
[44.41365433 -47.95435715]
[45.43565750 -55.27519226]
[40.99381256 -69.60243988]
[29.51698494 -80.49247742]
[33.13843155 -94.94012451]
[19.43572807 -102.34780121]
[15.13516426 -116.94094086]
[22.28169632 -129.95872498]
[17.83985519 -144.28598022]
[13.39801121 -158.61322021]
[8.95616913 -172.94047546]
[4.51432610 -187.26771545]
[-4.34152889 -190.51319885]
[-10.61741829 -197.36857605]
[-12.99850845 -206.21022034]
[-11.07268143 -215.02130127]
[-5.39569521 -221.85159302]
[-9.18715954 -236.36451721]
[-12.97862339 -250.87742615]
[-16.77008820 -265.39035034]
[-20.56155205 -279.90325928]
[-24.35301590 -294.41616821]
[-28.14447975 -308.92910767]
[-31.93594360 -323.44201660]
[-46.23425293 -329.17477417]
[-54.32075882 -342.07678223]
[-53.27191925 -357.08892822]
[-43.69903564 -368.46862793]
[-47.49049759 -382.98153687]
[-58.20592880 -390.16268921]
[-61.06446838 -402.32974243]
[-55.06451416 -412.83453369]
[-58.63740540 -427.40280151]
[-62.21029663 -441.97106934]
[-65.78318787 -456.53933716]
[-69.35608673 -471.10760498]
[-72.92897797 -485.67587280]
[-76.50186920 -500.24414062]
[-89.73468018 -508.46182251]
[-93.15057373 -523.28704834]
[-85.23471832 -535.85186768]
[-96.03642273 -547.41186523]
[-91.55336761 -561.61578369]
[-95.12625885 -576.18402100]
[-98.69915009 -590.75231934]
[-111.93196869 -598.96997070]
[-115.34785461 -613.79516602]
[-107.43199921 -626.35998535]
[-111.00489044 -640.92828369]
[-114.57778168 -655.49652100]
[-118.15067291 -670.06481934]
[-129.88157654 -681.52423096]
[-125.56126404 -697.34405518]
[-109.63411713 -701.25024414]
[-98.48461151 -689.22436523]
[-103.58240509 -673.63769531]
[-100.00951385 -659.06945801]
[-96.43662262 -644.50115967]
[-92.86373138 -629.93292236]
[-80.03267670 -622.45629883]
[-76.20172882 -607.73291016]
[-84.13088226 -594.32519531]
[-80.55799103 -579.75695801]
[-76.98509979 -565.18865967]
[-66.43894958 -554.67065430]
[-70.66645050 -539.42474365]
[-57.83539581 -531.94812012]
[-54.00444412 -517.22473145]
[-61.93360138 -503.81704712]
[-58.36070633 -489.24877930]
[-54.78781509 -474.68051147]
[-51.21492386 -460.11224365]
[-47.64202881 -445.54397583]
[-44.06913757 -430.97570801]
[-40.49624634 -416.40744019]
[-27.68914413 -404.41067505]
[-32.97758102 -386.77301025]
[-29.18611526 -372.26010132]
[-15.27048492 -367.01669312]
[-7.01304054 -354.43582153]
[-7.75571394 -339.22720337]
[-17.42302513 -327.23348999]
[-13.63156128 -312.72055054]
[-9.84009743 -298.20764160]
[-6.04863310 -283.69473267]
[-2.25716925 -269.18182373]
[1.53429496 -254.66889954]
[5.32575893 -240.15597534]
[9.11722279 -225.64305115]
[24.84469032 -212.27975464]
[18.84157372 -191.70956421]
[23.28341675 -177.38230896]
[27.72525978 -163.05506897]
[32.16710281 -148.72781372]
[36.60894394 -134.40057373]
[49.86608124 -127.70848846]
[54.57483673 -113.24189758]
[47.46567917 -99.38196564]
[58.62479782 -89.51670837]
[55.32106018 -74.04428101]
[59.76290512 -59.71703339]
[64.31230164 -45.42357635]
[68.96899414 -31.16471100]
[73.62568665 -16.90584564]
[78.28237915 -2.64698243]
[82.93907166 11.61188126]
[87.59576416 25.87074661]
[100.95199585 32.36280441]
[105.87766266 46.75698471]
[98.97763824 60.72220230]
[103.63433075 74.98107147]
[108.29102325 89.23992920]
[118.11393738 100.57617950]
[131.56495667 107.21472168]
[145.01596069 113.85326385]
[158.46697998 120.49180603]
[170.64076233 114.72650146]
[183.72125244 116.99266052]
[192.97080994 126.24208069]
[195.17056274 138.93908691]
[204.23663330 140.06755066]
[208.66838074 145.98352051]
[221.91377258 153.02337646]
[235.15916443 160.06324768]
[248.40454102 167.10310364]
[261.64993286 174.14295959]
[274.89532471 181.18283081]
[288.14071655 188.22268677]
[304.96478271 190.31729126]
[307.60937500 207.06370544]
[292.24954224 214.24084473]
[281.10086060 201.46807861]
[267.85546875 194.42820740]
[254.61007690 187.38835144]
[241.36468506 180.34849548]
[228.11929321 173.30862427]
[214.87390137 166.26876831]
[201.62850952 159.22891235]
[188.33059692 152.28878784]
[172.56018066 158.12911987]
[157.14135742 150.60913086]
[151.82843018 133.94281006]
[138.37742615 127.30427551]
[124.92640686 120.66573334]
[111.47539520 114.02719116]
[105.77052307 118.89590454]
[88.65589142 133.50205994]
[93.09774017 147.82929993]
[97.53958130 162.15655518]
[101.98142242 176.48379517]
[106.42326355 190.81105042]
[110.86511230 205.13829041]
[115.30695343 219.46554565]
[119.74879456 233.79278564]
[130.21427917 247.13107300]
[120.29439545 260.87997437]
[104.33671570 255.15383911]
[105.42154694 238.23463440]
[100.97970581 223.90737915]
[96.53785706 209.58013916]
[92.09601593 195.25288391]
[87.65417480 180.92564392]
[83.21233368 166.59838867]
[78.77049255 152.27114868]
[74.32864380 137.94389343]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 31]
[7 30]
[8 29]
[9 28]
[11 25]
[12 24]
[13 23]
[14 22]
[16 21]
[33 155]
[34 154]
[35 153]
[38 150]
[39 149]
[40 148]
[41 147]
[42 146]
[43 145]
[45 144]
[46 143]
[48 141]
[51 138]
[52 137]
[53 136]
[54 135]
[55 134]
[60 132]
[61 131]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
[71 121]
[72 120]
[75 118]
[76 117]
[77 116]
[78 115]
[79 114]
[80 113]
[81 112]
[84 109]
[86 107]
[87 106]
[88 105]
[91 102]
[92 101]
[93 100]
[94 99]
[156 188]
[157 187]
[158 186]
[159 185]
[163 182]
[165 181]
[166 180]
[167 179]
[168 178]
[169 177]
[170 176]
[171 175]
[190 208]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
[197 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
