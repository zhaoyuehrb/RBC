%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUCCUCGGGGAUGGGGGCGGAGUGGCUGUGGUGACCUGGCUUGGGCGGCGUCUCUGAGGAGCUGGCUGGCUUUGGGUUUCCCCUGGGAGGAGCUGUUUUGCGGCGGGCGGAGCUGCAGGCUGGGCAGGGCUUAGCCUGUGCGCUUCUGCUGGCCUCCUUUUCGCCCUCCCACCCGCACUGCAGUCUCCAGCCUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[90.19679260 466.95355225]
[75.15530396 470.38241577]
[60.65560150 465.11343384]
[51.32448959 452.82791138]
[50.13949585 437.44613647]
[57.47874451 423.87634277]
[71.00030518 416.44863892]
[71.93285370 401.47766113]
[72.86539459 386.50668335]
[73.79794312 371.53567505]
[74.73048401 356.56469727]
[75.66303253 341.59371948]
[67.89362335 332.31619263]
[68.55258179 319.83157349]
[77.83137512 310.86557007]
[78.99663544 295.91088867]
[80.16188812 280.95623779]
[81.32714844 266.00155640]
[82.49240875 251.04689026]
[83.65766144 236.09222412]
[84.82292175 221.13754272]
[85.87185669 206.17427063]
[78.94077301 192.99058533]
[87.52105713 179.69813538]
[88.45359802 164.72715759]
[89.38614655 149.75616455]
[90.31868744 134.78518677]
[82.86042023 131.78005981]
[76.25215149 127.19883728]
[70.82162476 121.26874542]
[66.83815002 114.28385925]
[64.49928284 106.59059143]
[63.92100906 98.57047272]
[49.38302612 94.87628937]
[34.10237885 98.97658539]
[23.67265320 88.34313965]
[9.13466835 84.64895630]
[-5.40331697 80.95477295]
[-19.94130135 77.26058960]
[-34.47928619 73.56640625]
[-49.07296371 70.09876251]
[-63.71880722 66.85849762]
[-78.36464691 63.61822891]
[-93.01049042 60.37796021]
[-102.07297516 61.57991409]
[-107.85807037 56.97174072]
[-122.45174408 53.50409317]
[-137.66677856 57.84153366]
[-148.26060486 47.37157822]
[-162.85429382 43.90393448]
[-177.44796753 40.43628693]
[-192.04164124 36.96864319]
[-207.25668335 41.30607986]
[-217.85050964 30.83612633]
[-232.44418335 27.36848068]
[-247.03787231 23.90083694]
[-263.84570312 26.12175941]
[-270.63272095 10.58557892]
[-257.58251953 -0.23702945]
[-243.57022095 9.30715847]
[-228.97654724 12.77480316]
[-214.38287354 16.24244881]
[-200.21166992 11.65698051]
[-188.57400513 22.37496567]
[-173.98031616 25.84260941]
[-159.38664246 29.31025505]
[-144.79296875 32.77790070]
[-130.62176514 28.19243240]
[-118.98410034 38.91041565]
[-104.39042664 42.37806320]
[-89.77021790 45.73212051]
[-75.12438202 48.97238541]
[-60.47853851 52.21265411]
[-45.83269882 55.45292282]
[-41.39024734 53.68186951]
[-35.78768539 54.68785095]
[-30.78510284 59.02842331]
[-16.24711800 62.72260666]
[-1.70913327 66.41678619]
[12.82885170 70.11096954]
[27.36683655 73.80515289]
[41.60762787 69.44062805]
[53.07720947 80.33831024]
[67.61519623 84.03249359]
[82.50907898 68.41194916]
[103.65252686 64.07791901]
[123.49091339 72.57894897]
[135.40304565 63.46295929]
[147.31517029 54.34696960]
[159.22729492 45.23097992]
[171.13941956 36.11499023]
[183.05154419 26.99899864]
[194.96366882 17.88300705]
[199.88150024 10.17662525]
[207.13267517 8.71959305]
[219.18513489 -0.21003954]
[215.56919861 -14.94777298]
[217.86505127 -29.90678787]
[225.69203186 -42.81229019]
[237.83081055 -51.71383667]
[252.41322327 -55.28008270]
[267.20974731 -52.99783325]
[279.97033691 -45.24564743]
[286.45263672 -59.67790985]
[301.28506470 -61.03767014]
[313.33752441 -69.96730042]
[325.38995361 -78.89693451]
[331.87228394 -93.32920074]
[346.70468140 -94.68895721]
[358.75714111 -103.61859131]
[370.80960083 -112.54822540]
[382.86206055 -121.47785950]
[394.91448975 -130.40748596]
[406.96694946 -139.33712769]
[418.94961548 -148.36021423]
[430.86172485 -157.47619629]
[442.70260620 -166.68453979]
[454.47152710 -175.98468018]
[466.24044800 -185.28483582]
[478.00933838 -194.58497620]
[489.77825928 -203.88511658]
[501.54718018 -213.18525696]
[513.31610107 -222.48539734]
[525.08502197 -231.78553772]
[536.85394287 -241.08569336]
[548.62286377 -250.38583374]
[560.39172363 -259.68597412]
[572.16064453 -268.98611450]
[580.83917236 -283.55044556]
[597.23675537 -279.24291992]
[597.63690186 -262.29370117]
[581.46081543 -257.21719360]
[569.69189453 -247.91706848]
[557.92297363 -238.61691284]
[546.15405273 -229.31677246]
[534.38513184 -220.01663208]
[522.61621094 -210.71649170]
[510.84732056 -201.41635132]
[499.07839966 -192.11619568]
[487.30950928 -182.81605530]
[475.54058838 -173.51591492]
[463.77166748 -164.21577454]
[452.00274658 -154.91563416]
[448.70144653 -148.29716492]
[439.97772217 -145.56407166]
[428.06561279 -136.44808960]
[424.66177368 -129.88175964]
[415.89657593 -127.28466797]
[403.84414673 -118.35503387]
[391.79168701 -109.42539978]
[379.73922729 -100.49576569]
[367.68676758 -91.56613922]
[355.63430786 -82.63650513]
[350.01406860 -68.84294891]
[334.31961060 -66.84448242]
[322.26715088 -57.91484833]
[310.21469116 -48.98521423]
[304.59445190 -35.19165802]
[288.89996338 -33.19319153]
[292.60006714 -18.72811508]
[290.47445679 -3.90829444]
[282.81616211 9.00354004]
[270.76544189 18.02394104]
[256.13995361 21.75341034]
[241.16072083 19.59346199]
[228.11476135 11.84241486]
[216.06230164 20.77204704]
[204.07965088 29.79513168]
[192.16752625 38.91112137]
[180.25540161 48.02711487]
[168.34327698 57.14310455]
[156.43115234 66.25909424]
[144.51902771 75.37508392]
[132.60690308 84.49107361]
[136.01780701 97.45949554]
[134.46107483 110.77829742]
[128.15138245 122.61054230]
[117.95899963 131.32429504]
[105.28967285 135.71772766]
[104.35713196 150.68872070]
[103.42458344 165.65969849]
[102.49204254 180.63067627]
[109.35642242 194.88519287]
[100.84284210 207.10681152]
[103.43405151 215.87373352]
[99.77759552 222.30281067]
[98.61233521 237.25747681]
[97.44707489 252.21214294]
[96.28182220 267.16680908]
[95.11656189 282.12149048]
[93.95130157 297.07617188]
[92.78604889 312.03082275]
[101.11115265 328.45187378]
[90.63401031 342.52627563]
[89.70146942 357.49725342]
[88.76892853 372.46823120]
[87.83638000 387.43920898]
[86.90383911 402.41021729]
[85.97129059 417.38119507]
[98.46656036 426.42947388]
[104.06508636 440.80517578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 199]
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[15 192]
[16 191]
[17 190]
[18 189]
[19 188]
[20 187]
[21 186]
[22 184]
[24 182]
[25 181]
[26 180]
[27 179]
[33 84]
[34 83]
[36 81]
[37 80]
[38 79]
[39 78]
[40 77]
[41 74]
[42 73]
[43 72]
[44 71]
[46 70]
[47 69]
[49 67]
[50 66]
[51 65]
[52 64]
[54 62]
[55 61]
[56 60]
[87 174]
[88 173]
[89 172]
[90 171]
[91 170]
[92 169]
[93 168]
[95 167]
[96 166]
[103 159]
[105 157]
[106 156]
[107 155]
[109 153]
[110 152]
[111 151]
[112 150]
[113 149]
[114 148]
[115 146]
[116 145]
[117 143]
[118 142]
[119 141]
[120 140]
[121 139]
[122 138]
[123 137]
[124 136]
[125 135]
[126 134]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
