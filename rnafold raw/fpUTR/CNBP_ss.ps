%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCCGCGCGCUGAUUGGCCGCGUGGGCGAGGCGGAGGAGAGCCGUGCGCAGCGGCGUAUGUGGGGCCGUGUGCAGACCCGCGUGUGGCGCAGGCAAGGACCCUCAAAAUAAACAGCCUCUACCUUGCGAGCCGUCUUCCCCAGGCCUGCGUCCGAGUCUCCGCCGCUGCGGGCCCGCUCCGACGCGGAAGAUCUGACUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[98.10568237 541.67596436]
[84.91447449 549.84735107]
[69.44205475 548.67095947]
[57.63788223 538.59918213]
[54.04089737 523.50476074]
[60.03421783 509.19186401]
[73.31328583 501.16403198]
[74.45045471 486.20721436]
[75.47409058 471.24218750]
[76.38414001 456.26980591]
[77.29418182 441.29742432]
[64.35606384 428.34994507]
[64.99842072 409.73776245]
[79.27979279 397.29333496]
[79.73502350 382.30023193]
[80.19026184 367.30715942]
[80.64549255 352.31405640]
[70.28266907 341.67697144]
[70.53076172 326.46536255]
[81.75817108 315.66799927]
[82.21340942 300.67492676]
[82.66864014 285.68182373]
[83.12387085 270.68875122]
[83.57910919 255.69564819]
[84.03433990 240.70256042]
[76.68685913 227.74632263]
[84.83941650 214.18733215]
[85.29465485 199.19424438]
[83.15465546 196.38824463]
[82.26914978 192.40530396]
[83.17692566 187.84713745]
[86.12731171 183.53346252]
[87.26448059 168.57662964]
[88.40164948 153.61979675]
[89.53881073 138.66296387]
[90.67597961 123.70613098]
[84.22548676 120.00206757]
[79.11997986 114.59255981]
[64.84012604 119.18449402]
[54.23701477 131.69473267]
[38.15177155 128.50144958]
[33.13152313 112.88961792]
[44.34066391 100.91935730]
[60.24819565 104.90464020]
[74.52804565 100.31271362]
[74.52686310 100.19330597]
[74.52623749 100.07389069]
[60.17834091 95.69920349]
[45.83044434 91.32451630]
[31.48254967 86.94982147]
[17.13465500 82.57513428]
[2.78676033 78.20044708]
[-6.33771753 78.69084930]
[-11.74476814 73.64896393]
[-26.02462006 69.05702972]
[-40.30447006 64.46510315]
[-54.58432388 59.87316895]
[-70.09056091 63.01437378]
[-79.83818817 51.75235367]
[-94.70970917 57.77045059]
[-108.61579132 49.77043533]
[-110.88889313 33.88923264]
[-99.78527069 22.30954552]
[-83.82268524 23.91431618]
[-75.24625397 37.47250366]
[-60.76140976 34.00285339]
[-49.99238968 45.59331894]
[-35.71253967 50.18524933]
[-21.43268776 54.77717972]
[-7.15283632 59.36911392]
[7.16144943 63.85255051]
[21.50934410 68.22724152]
[35.85723877 72.60192871]
[50.20513535 76.97661591]
[64.55303192 81.35131073]
[78.90092468 85.72599792]
[87.39623260 77.86263275]
[98.49423981 74.57067108]
[109.90319061 76.52991486]
[119.54499817 65.03924561]
[129.18681335 53.54858017]
[138.82862854 42.05791092]
[148.47044373 30.56724548]
[158.11225891 19.07658005]
[161.23257446 10.48820305]
[167.98863220 7.48613453]
[177.80372620 -3.85688281]
[187.61882019 -15.19989967]
[197.43389893 -26.54291725]
[207.24899292 -37.88593292]
[217.06408691 -49.22895050]
[220.24311829 -64.72747803]
[234.42202759 -69.28903198]
[244.23712158 -80.63204956]
[254.05220032 -91.97506714]
[263.86727905 -103.31808472]
[262.91366577 -118.86569977]
[273.02914429 -130.22930908]
[287.85729980 -131.04264832]
[297.67239380 -142.38566589]
[307.48745728 -153.72868347]
[317.30255127 -165.07170105]
[303.45593262 -159.30361938]
[288.66018677 -156.83650208]
[273.69116211 -157.79968262]
[259.33364868 -162.14268494]
[246.34042358 -169.63777161]
[235.39276123 -179.89198303]
[227.06466675 -192.36767578]
[221.79278564 -206.41072083]
[219.85353088 -221.28483582]
[221.34857178 -236.21014404]
[226.19952393 -250.40409851]
[234.15205383 -263.12246704]
[244.78918457 -273.69845581]
[257.55322266 -281.57751465]
[271.77490234 -286.34652710]
[286.70858765 -287.75549316]
[301.57128906 -285.73046875]
[315.58367920 -280.37768555]
[328.01113892 -271.97778320]
[338.20205688 -260.97119141]
[345.62210083 -247.93496704]
[349.88223267 -233.55264282]
[350.75906372 -218.57829285]
[348.20666504 -203.79704285]
[342.35885620 -189.98390198]
[333.52258301 -177.86352539]
[346.84088135 -184.76451111]
[360.15914917 -191.66548157]
[368.85244751 -204.88429260]
[383.71246338 -203.86982727]
[397.03076172 -210.77081299]
[410.34902954 -217.67178345]
[410.96792603 -233.01820374]
[419.19067383 -245.99055481]
[432.80538940 -253.09936523]
[448.14978027 -252.43237305]
[461.09631348 -244.16900635]
[468.16238403 -230.53207397]
[467.44729614 -215.18983459]
[459.14340210 -202.26927185]
[445.48437500 -195.24597168]
[430.14447021 -196.00914001]
[417.25000000 -204.35350037]
[403.93173218 -197.45252991]
[390.61343384 -190.55155945]
[382.87274170 -177.82633972]
[367.06011963 -178.34719849]
[353.74185181 -171.44622803]
[340.42355347 -164.54525757]
[328.64556885 -155.25660706]
[318.83047485 -143.91358948]
[309.01541138 -132.57057190]
[299.20031738 -121.22755432]
[300.52593994 -106.43640137]
[290.73361206 -94.79314423]
[275.21029663 -93.50299835]
[265.39523315 -82.15998077]
[255.58013916 -70.81696320]
[245.76504517 -59.47394562]
[243.28804016 -44.78675079]
[228.40710449 -39.41386414]
[218.59201050 -28.07084656]
[208.77691650 -16.72782898]
[198.96183777 -5.38481188]
[189.14674377 5.95820570]
[179.33164978 17.30122375]
[169.60292053 28.71839333]
[159.96110535 40.20906067]
[150.31929016 51.69972610]
[140.67747498 63.19039536]
[131.03567505 74.68106079]
[121.39385223 86.17173004]
[123.58988953 109.61432648]
[105.63281250 124.84329987]
[104.49564362 139.80012512]
[103.35848236 154.75695801]
[102.22131348 169.71379089]
[101.08415222 184.67063904]
[100.28774261 199.64947510]
[99.83251190 214.64256287]
[107.14742279 228.67120361]
[99.02742767 241.15779114]
[98.57219696 256.15087891]
[98.11696625 271.14398193]
[97.66172791 286.13705444]
[97.20649719 301.13015747]
[96.75126648 316.12322998]
[107.30291748 327.58187866]
[106.62767029 342.78051758]
[95.63858032 352.76928711]
[95.18334961 367.76239014]
[94.72811890 382.75546265]
[94.27288055 397.74856567]
[103.95249939 404.65731812]
[109.04180908 415.27273560]
[108.38021851 426.90643311]
[102.24771118 436.67337036]
[92.26655579 442.20748901]
[91.35650635 457.17984009]
[90.44645691 472.15222168]
[93.05005646 480.91110229]
[89.40728760 487.34436035]
[88.27011871 502.30120850]
[100.18286133 512.24432373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 205]
[8 204]
[9 202]
[10 201]
[11 200]
[14 195]
[15 194]
[16 193]
[17 192]
[20 189]
[21 188]
[22 187]
[23 186]
[24 185]
[25 184]
[27 182]
[28 181]
[32 180]
[33 179]
[34 178]
[35 177]
[36 176]
[38 45]
[39 44]
[47 76]
[48 75]
[49 74]
[50 73]
[51 72]
[52 71]
[54 70]
[55 69]
[56 68]
[57 67]
[59 65]
[79 174]
[80 173]
[81 172]
[82 171]
[83 170]
[84 169]
[86 168]
[87 167]
[88 166]
[89 165]
[90 164]
[91 163]
[93 161]
[94 160]
[95 159]
[96 158]
[99 155]
[100 154]
[101 153]
[102 152]
[128 151]
[129 150]
[130 149]
[132 147]
[133 146]
[134 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
