%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGGGCCGGAACUUCCGGCGUCCUCCUCGUGGCGGUCAUUUUGGCCUCUGUCCUGUUUGUCCAGCCCGCCAGUUUCUGCAGUGGAGGUCGCGACUGAGGGACGGGACAGAGAAGUCGCGAAAGUGGGCCAGAGGUUCUGCGACACCACCUCGGGUGAGCUGCGCCAGGCCCGGGAUAGGGACUGUUGUGUUCGA\
) } def
/len { sequence length } bind def

/coor [
[81.13266754 234.17929077]
[86.81894684 219.00296021]
[98.59442902 207.78324890]
[93.86780548 193.54742432]
[89.14118195 179.31158447]
[84.41455841 165.07574463]
[79.68793488 150.83990479]
[74.96131134 136.60408020]
[87.43927002 97.81401062]
[77.00403595 87.03877258]
[66.56879425 76.26352692]
[56.13355637 65.48828888]
[45.69831848 54.71304703]
[35.26308060 43.93780899]
[24.82784081 33.16256714]
[14.39260292 22.38732719]
[-0.76602042 17.85668755]
[-4.06207657 3.33135557]
[-14.49731541 -7.44388485]
[-24.93255424 -18.21912575]
[-40.09117889 -22.74976540]
[-43.38723373 -37.27509689]
[-58.54585648 -41.80573654]
[-61.84191513 -56.33106995]
[-72.27715302 -67.10630798]
[-85.14551544 -68.09528351]
[-93.61561584 -77.29531097]
[-93.54357147 -89.39944458]
[-103.80476379 -100.34056091]
[-114.06595612 -111.28166962]
[-124.32715607 -122.22277832]
[-134.58834839 -133.16389465]
[-144.84954834 -144.10499573]
[-155.11073303 -155.04611206]
[-169.52449036 -159.19863892]
[-184.03392029 -155.39382935]
[-198.54333496 -151.58900452]
[-213.05276489 -147.78417969]
[-227.56217957 -143.97937012]
[-241.34960938 -134.11309814]
[-254.64703369 -144.63046265]
[-248.22180176 -160.31971741]
[-231.36700439 -158.48878479]
[-216.85758972 -162.29360962]
[-202.34815979 -166.09843445]
[-187.83872986 -169.90324402]
[-173.32931519 -173.70806885]
[-168.03619385 -187.74311829]
[-176.41964722 -200.18167114]
[-184.80311584 -212.62022400]
[-193.18658447 -225.05877686]
[-201.57003784 -237.49732971]
[-209.95350647 -249.93586731]
[-218.33697510 -262.37442017]
[-226.72042847 -274.81298828]
[-235.10389709 -287.25152588]
[-243.48736572 -299.69006348]
[-251.87081909 -312.12863159]
[-260.25430298 -324.56716919]
[-274.38320923 -331.68643188]
[-275.08041382 -346.56469727]
[-283.46386719 -359.00326538]
[-290.86468506 -364.37899780]
[-291.88015747 -371.70904541]
[-300.06317139 -384.28036499]
[-312.50518799 -387.71099854]
[-319.06042480 -398.36050415]
[-316.67590332 -410.22766113]
[-324.65637207 -422.92852783]
[-332.63687134 -435.62936401]
[-346.53036499 -443.19781494]
[-346.75030518 -458.09078979]
[-360.64379883 -465.65924072]
[-360.86376953 -480.55224609]
[-368.84423828 -493.25308228]
[-376.82473755 -505.95394897]
[-384.80520630 -518.65484619]
[-400.26708984 -521.92681885]
[-408.81649780 -535.21905518]
[-405.38119507 -550.64544678]
[-391.99932861 -559.05383301]
[-376.61010742 -555.45568848]
[-368.34365845 -541.98565674]
[-372.10433960 -526.63531494]
[-364.12387085 -513.93444824]
[-356.14337158 -501.23358154]
[-348.16290283 -488.53271484]
[-334.84024048 -481.87271118]
[-334.04946899 -466.07128906]
[-320.72677612 -459.41128540]
[-319.93600464 -443.60986328]
[-311.95553589 -430.90899658]
[-303.97503662 -418.20812988]
[-288.04272461 -410.86355591]
[-287.49185181 -392.46337891]
[-279.30883789 -379.89205933]
[-271.02532959 -367.38671875]
[-262.64187622 -354.94818115]
[-249.11256409 -348.71859741]
[-247.81573486 -332.95065308]
[-239.43226624 -320.51208496]
[-231.04881287 -308.07354736]
[-222.66534424 -295.63497925]
[-214.28187561 -283.19644165]
[-205.89842224 -270.75790405]
[-197.51495361 -258.31933594]
[-189.13148499 -245.88078308]
[-180.74803162 -233.44223022]
[-172.36456299 -221.00369263]
[-163.98109436 -208.56513977]
[-155.59764099 -196.12658691]
[-147.63328552 -190.77555847]
[-142.71821594 -182.81867981]
[-141.56071472 -173.78245544]
[-144.16963196 -165.30729675]
[-133.90843201 -154.36619568]
[-123.64723969 -143.42507935]
[-113.38603973 -132.48397827]
[-103.12484741 -121.54286194]
[-92.86365509 -110.60175323]
[-82.60246277 -99.66063690]
[-65.55998230 -95.49710083]
[-61.50191116 -77.54154968]
[-51.06667328 -66.76631165]
[-36.65444946 -63.00638580]
[-32.61199188 -47.71033478]
[-18.19976807 -43.95041275]
[-14.15731335 -28.65436363]
[-3.72207475 -17.87912369]
[6.71316338 -7.10388279]
[21.12538910 -3.34396005]
[25.16784286 11.95208931]
[35.60308075 22.72732925]
[46.03831863 33.50257111]
[56.47355652 44.27780914]
[66.90879822 55.05305099]
[77.34403229 65.82829285]
[87.77927399 76.60353088]
[98.21450806 87.37876892]
[111.45747375 94.42320251]
[126.22492218 97.05422974]
[140.99238586 99.68525696]
[150.00265503 98.10869598]
[155.97462463 102.47861481]
[170.69801331 105.34599304]
[185.44390869 108.09528351]
[200.23197937 110.60787964]
[215.03970337 113.00187683]
[229.84742737 115.39587402]
[244.65515137 117.78987122]
[261.25625610 114.34896088]
[269.15832520 129.34873962]
[256.93225098 141.09436035]
[242.26115417 132.59759521]
[227.45343018 130.20359802]
[212.64570618 127.80960846]
[197.83796692 125.41560364]
[190.72425842 127.45413208]
[182.81288147 122.86273956]
[175.66740417 124.78698730]
[167.83062744 120.06938171]
[153.10723877 117.20200348]
[138.36135864 114.45271301]
[123.59389496 111.82168579]
[108.82644653 109.19065857]
[103.91912079 114.86235809]
[94.10446930 126.20575714]
[89.19714355 131.87745667]
[93.92376709 146.11328125]
[98.65039062 160.34912109]
[103.37701416 174.58496094]
[108.10363770 188.82080078]
[112.83026123 203.05664062]
[126.91265106 204.32896423]
[139.40751648 210.85485840]
[148.44212341 221.61891174]
[152.67660522 234.97340393]
[151.50259399 248.89041138]
[145.13043213 261.26974487]
[134.55235291 270.25598145]
[139.05020142 284.56573486]
[143.54803467 298.87548828]
[148.04588318 313.18527222]
[162.17211914 320.27221680]
[167.07028198 335.29830933]
[159.83436584 349.34884644]
[144.75732422 354.08786011]
[130.78408813 346.70379639]
[126.20474243 331.57748413]
[133.73612976 317.68310547]
[129.23828125 303.37335205]
[124.74043274 289.06356812]
[120.24258423 274.75381470]
[104.39324188 272.76229858]
[90.94853973 264.02905273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 173]
[4 172]
[5 171]
[6 170]
[7 169]
[8 168]
[9 139]
[10 138]
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[18 130]
[19 129]
[20 128]
[22 126]
[24 124]
[25 123]
[28 121]
[29 120]
[30 119]
[31 118]
[32 117]
[33 116]
[34 115]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[48 111]
[49 110]
[50 109]
[51 108]
[52 107]
[53 106]
[54 105]
[55 104]
[56 103]
[57 102]
[58 101]
[59 100]
[61 98]
[62 97]
[64 96]
[65 95]
[68 93]
[69 92]
[70 91]
[72 89]
[74 87]
[75 86]
[76 85]
[77 84]
[140 165]
[141 164]
[142 163]
[144 162]
[145 161]
[146 159]
[147 157]
[148 156]
[149 155]
[150 154]
[180 193]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
