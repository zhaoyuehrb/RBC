%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUGGAGCUGCGGCCGGGAGGGCGGGCGGCCGGGGAGACGGGGUGGCGGCUGCAGCCCGGGUAGGGCCAGGAGACCCGGUCCACGUUUGCAAACGCAGCCGAACGCCCAGGCCGACCCGUGCCGCCCGAGCGCCGCGCUGCGUCCGCGCCACUCUUCUCGCCGCCCCG\
) } def
/len { sequence length } bind def

/coor [
[83.47705841 372.85293579]
[68.43656921 377.13284302]
[54.18501282 370.69644165]
[47.45153809 356.58282471]
[51.41549301 341.45599365]
[64.20520782 332.45837402]
[65.30653381 317.49884033]
[62.65154648 310.57080078]
[66.56797791 302.27545166]
[64.23284149 298.06970215]
[64.54148865 292.34701538]
[68.27873230 286.81872559]
[70.20246887 271.94256592]
[72.12619781 257.06643677]
[74.04993439 242.19032288]
[75.97367096 227.31419373]
[69.93252563 213.69972229]
[79.37579346 201.00581360]
[81.29952240 186.12968445]
[83.22325897 171.25355530]
[85.14699554 156.37742615]
[87.07073212 141.50129700]
[88.99446869 126.62516022]
[90.91819763 111.74903107]
[89.67951202 96.80026245]
[85.33348083 82.44365692]
[80.98745728 68.08705902]
[76.64142609 53.73045731]
[72.29539490 39.37385178]
[67.94937134 25.01725006]
[63.60334015 10.66064739]
[59.25731277 -3.69595480]
[54.77959061 -18.01202965]
[50.17055130 -32.28636932]
[45.56151199 -46.56070709]
[40.95247650 -60.83504868]
[27.16410637 -68.08202362]
[22.69322968 -82.62388611]
[29.68708229 -95.72433472]
[18.08372498 -106.47945404]
[21.53601646 -120.96844482]
[7.59412956 -132.97084045]
[11.89508343 -149.96791077]
[7.02459145 -164.15516663]
[2.15409923 -178.34242249]
[-2.71639276 -192.52969360]
[-7.58688498 -206.71694946]
[-21.74691391 -218.46119690]
[-17.75893593 -235.53440857]
[-22.88923836 -249.62979126]
[-28.01954079 -263.72518921]
[-33.14984131 -277.82055664]
[-38.28014374 -291.91595459]
[-43.41044617 -306.01135254]
[-48.54074860 -320.10675049]
[-65.78175354 -332.79147339]
[-61.48678970 -352.95776367]
[-67.38578796 -366.74914551]
[-81.78079224 -372.70074463]
[-87.56674957 -386.77117920]
[-81.80408478 -400.45794678]
[-94.34509277 -410.10333252]
[-92.23643494 -424.84793091]
[-98.13543701 -438.63931274]
[-104.41130066 -445.32992554]
[-104.01353455 -452.73861694]
[-109.65818024 -466.63604736]
[-115.30281830 -480.53344727]
[-120.94745636 -494.43084717]
[-126.59210205 -508.32827759]
[-132.74398804 -515.13305664]
[-132.21018982 -522.53320312]
[-137.59857178 -536.53198242]
[-150.68576050 -546.41412354]
[-148.40289307 -562.65362549]
[-133.09837341 -568.54461670]
[-120.51618958 -558.02697754]
[-123.59981537 -541.92034912]
[-118.21143341 -527.92156982]
[-112.69468689 -513.97290039]
[-107.05004883 -500.07550049]
[-101.40541077 -486.17810059]
[-95.76076508 -472.28067017]
[-90.11612701 -458.38327026]
[-84.34406281 -444.53829956]
[-78.44506836 -430.74691772]
[-66.32599640 -422.08798218]
[-68.01271820 -406.35693359]
[-54.13486481 -401.07104492]
[-47.95598221 -387.16867065]
[-53.59441757 -372.64813232]
[-47.69542313 -358.85675049]
[-38.96238327 -356.92129517]
[-32.00794220 -351.07879639]
[-28.48980904 -342.55548096]
[-29.32287979 -333.23382568]
[-34.44535828 -325.23703003]
[-29.31505775 -311.14166260]
[-24.18475533 -297.04626465]
[-19.05445290 -282.95086670]
[-13.92415142 -268.85546875]
[-8.79384899 -254.76008606]
[-3.66354656 -240.66470337]
[7.18179655 -235.25338745]
[11.55851173 -223.52149963]
[6.60037374 -211.58743286]
[11.47086620 -197.40017700]
[16.34135818 -183.21292114]
[21.21184921 -169.02566528]
[26.08234215 -154.83840942]
[36.82644272 -149.22875977]
[40.98689651 -137.41844177]
[35.81035614 -125.57748413]
[47.08404541 -115.84336090]
[43.96142197 -100.33336639]
[57.29588699 -93.79673004]
[62.17345047 -79.38617706]
[55.22681427 -65.44408417]
[59.83585358 -51.16974640]
[64.44489288 -36.89540863]
[69.05393219 -22.62106705]
[74.12084961 -17.20135880]
[73.61391449 -8.04198360]
[77.95994568 6.31461954]
[82.30596924 20.67122269]
[86.65200043 35.02782440]
[90.99803162 49.38442612]
[95.34405518 63.74102783]
[99.69008636 78.09763336]
[104.03610992 92.45423126]
[119.15150452 83.76237488]
[139.45413208 86.62432861]
[152.71125793 93.64205170]
[165.96838379 100.65978241]
[179.22550964 107.67751312]
[192.67097473 114.32728577]
[206.29457092 120.60405731]
[219.91815186 126.88082123]
[236.83398438 128.01719666]
[240.42477417 144.58653259]
[225.49700928 152.62384033]
[213.64138794 140.50440979]
[200.01780701 134.22764587]
[186.39421082 127.95087433]
[182.94696045 128.84729004]
[178.89112854 128.09458923]
[175.01760864 125.42385864]
[172.20777893 120.93463898]
[158.95065308 113.91691589]
[145.69352722 106.89918518]
[132.43640137 99.88145447]
[125.77587891 103.32928467]
[112.45484924 110.22493744]
[105.79433441 113.67276764]
[103.87059784 128.54888916]
[101.94686127 143.42501831]
[100.02312469 158.30116272]
[98.09938812 173.17729187]
[96.17565155 188.05342102]
[94.25192261 202.92955017]
[100.15546417 217.60806274]
[90.84980011 229.23793030]
[88.92606354 244.11405945]
[87.00233459 258.99017334]
[85.07859802 273.86630249]
[83.15486145 288.74243164]
[81.50473785 303.65139771]
[80.26604462 318.60015869]
[79.16472626 333.55969238]
[90.49888611 344.33331299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 169]
[7 168]
[9 167]
[12 166]
[13 165]
[14 164]
[15 163]
[16 162]
[18 160]
[19 159]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[25 130]
[26 129]
[27 128]
[28 127]
[29 126]
[30 125]
[31 124]
[32 123]
[33 121]
[34 120]
[35 119]
[36 118]
[39 115]
[41 113]
[43 110]
[44 109]
[45 108]
[46 107]
[47 106]
[49 103]
[50 102]
[51 101]
[52 100]
[53 99]
[54 98]
[55 97]
[57 92]
[58 91]
[61 88]
[63 86]
[64 85]
[66 84]
[67 83]
[68 82]
[69 81]
[70 80]
[72 79]
[73 78]
[132 151]
[133 150]
[134 149]
[135 148]
[136 144]
[137 143]
[138 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
