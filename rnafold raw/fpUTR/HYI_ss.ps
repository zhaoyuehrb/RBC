%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAUCCCUCUCUCGCUAACCGUAGGCGCUUUUCGUGAAGGCCCGGGUUUUUACAGCACUUCGCUUUUCUAACCACGAACAGUGCUCGUUCGUUCGCAGGGCCAGCAAGGAGAGCCCCGCCCCCGCCCGCCGCCCGCCGCCCGCCGCCCGCCGCCUUUGGAUCCCGCGGACUCCGCCCGGCCCGGCCUCCCCAGGC\
) } def
/len { sequence length } bind def

/coor [
[106.54962921 123.02477264]
[102.53273010 137.47691345]
[98.51583099 151.92906189]
[94.49893188 166.38121033]
[104.25661469 178.44633484]
[105.02542877 193.94435120]
[96.50973511 206.91595459]
[81.98400116 212.37330627]
[67.03366852 208.21794128]
[57.40744019 196.04768372]
[56.80679703 180.54223633]
[65.46270752 167.66377258]
[80.04678345 162.36431885]
[84.06368256 147.91217041]
[88.08058167 133.46002197]
[92.09748077 119.00787354]
[85.43959045 132.44932556]
[72.37951660 139.82728577]
[57.43045425 138.59216309]
[45.75839233 129.17074585]
[41.39686966 114.81884766]
[45.85311127 100.49607086]
[57.58716202 91.15197754]
[72.54405975 90.01563263]
[85.55534363 97.47997284]
[74.17649078 87.70645905]
[58.66643524 84.58415985]
[54.05302048 70.42203522]
[42.67416000 60.64852142]
[31.29530334 50.87500763]
[19.91644478 41.10149384]
[8.53758717 31.32797813]
[-2.84127164 21.55446434]
[-14.22012997 11.78094959]
[-29.73018456 8.65864658]
[-34.34359741 -5.50347424]
[-45.72245789 -15.27698898]
[-61.26647949 -14.26646709]
[-72.66703033 -24.34029579]
[-73.53461456 -39.16537476]
[-84.91347504 -48.93888855]
[-96.29233551 -58.71240234]
[-107.67118835 -68.48591614]
[-119.05004883 -78.25942993]
[-130.50646973 -87.94190216]
[-146.06434631 -90.81648254]
[-150.90301514 -104.90322876]
[-164.78532410 -98.65480804]
[-179.94215393 -99.05180359]
[-193.36862183 -105.96192932]
[-202.42620850 -117.96697998]
[-205.36111450 -132.65356445]
[-201.64376831 -147.09817505]
[-213.17703247 -156.68899536]
[-224.78640747 -166.18754578]
[-236.47114563 -175.59323120]
[-248.15588379 -184.99891663]
[-259.84060669 -194.40460205]
[-271.52536011 -203.81028748]
[-283.21008301 -213.21595764]
[-295.04333496 -222.43412781]
[-307.02206421 -231.46240234]
[-319.00079346 -240.49069214]
[-332.54254150 -233.44911194]
[-347.79873657 -232.98898315]
[-361.74020386 -239.20167542]
[-371.59893799 -250.85365295]
[-375.41738892 -265.63140869]
[-372.43746948 -280.60079956]
[-363.25082397 -292.78964233]
[-349.68145752 -299.77786255]
[-334.42358398 -300.17791748]
[-320.50665283 -293.91036987]
[-310.69390869 -282.21963501]
[-306.93365479 -267.42697144]
[-309.97250366 -252.46942139]
[-297.99377441 -243.44114685]
[-286.01504517 -234.41285706]
[-281.23431396 -234.18058777]
[-276.55154419 -230.93493652]
[-273.80441284 -224.90069580]
[-262.11968994 -215.49502563]
[-250.43493652 -206.08934021]
[-238.75019836 -196.68365479]
[-227.06546021 -187.27796936]
[-215.38072205 -177.87228394]
[-208.19061279 -176.12501526]
[-203.58621216 -168.22225952]
[-192.05294800 -158.63143921]
[-178.52848816 -164.92065430]
[-163.55296326 -164.71330261]
[-150.09742737 -157.99691772]
[-140.85464478 -146.05577087]
[-137.70021057 -131.22550964]
[-141.31219482 -116.43649292]
[-126.57925415 -114.24792480]
[-120.91565704 -99.47516632]
[-113.75431824 -97.61347198]
[-109.27653503 -89.63829041]
[-97.89767456 -79.86477661]
[-86.51882172 -70.09126282]
[-75.13996124 -60.31774521]
[-63.76110077 -50.54423141]
[-48.97489548 -51.92397308]
[-37.29588699 -42.17433548]
[-35.94894409 -26.65584755]
[-24.57008362 -16.88233185]
[-9.87392139 -14.45909691]
[-4.44661570 0.40209121]
[6.93224287 10.17560577]
[18.31110191 19.94911957]
[29.68995857 29.72263336]
[41.06881714 39.49614716]
[52.44767761 49.26966476]
[63.82653427 59.04317856]
[78.52269745 61.46641159]
[83.95000458 76.32759857]
[95.32886505 86.10111237]
[108.41776276 93.42782593]
[122.69831848 98.01755524]
[136.97888184 102.60728455]
[146.30493164 90.68042755]
[159.12478638 82.67895508]
[173.88092041 79.55222321]
[188.78839111 81.65872955]
[202.05065918 88.72512054]
[212.07611084 99.88149261]
[217.66911316 113.76844788]
[218.17253113 128.70269775]
[232.45309448 133.29243469]
[246.73364258 137.88215637]
[261.01422119 142.47189331]
[270.39965820 136.94567871]
[281.05746460 137.49240112]
[289.47412109 143.68965149]
[293.00830078 153.29232788]
[307.13522339 158.33511353]
[321.26217651 163.37791443]
[335.38909912 168.42070007]
[349.53683472 161.90306091]
[363.79171753 167.21839905]
[369.91809082 180.74626160]
[384.04504395 185.78904724]
[398.32559204 190.37878418]
[412.74523926 194.51078796]
[427.16491699 198.64279175]
[441.58456421 202.77479553]
[455.52041626 191.19017029]
[473.46279907 190.28889465]
[488.22885132 200.24305725]
[494.02035522 216.91667175]
[508.56445312 220.58674622]
[522.00421143 212.27119446]
[537.36816406 215.97583008]
[545.54113770 229.50274658]
[541.67431641 244.82667542]
[528.06170654 252.85620117]
[512.77954102 248.82754517]
[504.89437866 235.13082886]
[490.35028076 231.46075439]
[482.27465820 240.54232788]
[471.03588867 245.35289001]
[458.74621582 244.92149353]
[447.74392700 239.26875305]
[440.14855957 229.41450500]
[437.45254517 217.19445801]
[423.03289795 213.06245422]
[408.61325073 208.93045044]
[394.19357300 204.79844666]
[391.67254639 206.04908752]
[388.50143433 206.37059021]
[385.03384399 205.50923157]
[381.70886230 203.34472656]
[379.00222778 199.91598511]
[364.87530518 194.87319946]
[351.56741333 201.46372986]
[337.16885376 196.55087280]
[330.34631348 182.54763794]
[316.21939087 177.50483704]
[302.09243774 172.46205139]
[287.96551514 167.41926575]
[269.25906372 172.28730774]
[256.42446899 156.75245667]
[242.14392090 152.16271973]
[227.86335754 147.57298279]
[213.58279419 142.98326111]
[204.47276306 154.82777405]
[191.83633423 162.85583496]
[177.18830872 166.08221436]
[162.29243469 164.09866333]
[148.94911194 157.12544250]
[138.77772522 145.98707581]
[133.02015686 132.01487732]
[132.38914490 116.88784790]
[118.10858917 112.29811859]
[103.82803345 107.70838165]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[25 118]
[26 117]
[28 115]
[29 114]
[30 113]
[31 112]
[32 111]
[33 110]
[34 109]
[36 107]
[37 106]
[40 103]
[41 102]
[42 101]
[43 100]
[44 99]
[45 97]
[47 95]
[53 89]
[54 88]
[55 86]
[56 85]
[57 84]
[58 83]
[59 82]
[60 81]
[61 78]
[62 77]
[63 76]
[119 196]
[120 195]
[121 194]
[129 186]
[130 185]
[131 184]
[132 183]
[136 181]
[137 180]
[138 179]
[139 178]
[142 175]
[143 174]
[144 169]
[145 168]
[146 167]
[147 166]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
