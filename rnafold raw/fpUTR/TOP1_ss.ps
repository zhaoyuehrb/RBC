%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCAAAUGCGAACUUAGGCUGUUACACAACUGCUGGGGUCUGUUCUCGCCGCCCGCCCGGCAGUCAGGCAGCGUCGCCGCCGUGGUAGCAGCCUCAGCCGUUUCUGGAGUCUCGGGCCCACAGUCACCGCCGCUUACCUGCGCCUCCUCGAGCCUCCGGAGUCCCCGUCCGCCCGCACAGGCCGGUUCGCCGUCUGCGUCUCCCCCACGCCGCCUCGCCUGCCGCCGCGCUCGUCCCUCCGGGCCGAC\
) } def
/len { sequence length } bind def

/coor [
[112.22827911 182.50195312]
[123.15859985 171.08689880]
[122.59549713 156.09747314]
[122.03239441 141.10804749]
[121.46929169 126.11861420]
[110.32521820 130.74642944]
[98.75688171 131.03280640]
[88.33058167 127.29139709]
[80.33460999 120.35855103]
[75.62068176 111.43840027]
[60.80389023 113.77565002]
[45.98709869 116.11289215]
[37.79549026 126.05387878]
[25.42476082 127.70738220]
[15.56425667 120.72855377]
[0.71937323 122.88016510]
[-11.82824326 132.51696777]
[-25.53374672 126.68528748]
[-40.37863159 128.83689880]
[-55.22351456 130.98852539]
[-70.06839752 133.14013672]
[-84.91327667 135.29174805]
[-99.75816345 137.44335938]
[-114.60304260 139.59498596]
[-129.44792175 141.74659729]
[-144.29281616 143.89820862]
[-159.13769531 146.04981995]
[-173.96882629 148.29429626]
[-188.78561401 150.63154602]
[-185.88102722 171.47972107]
[-205.33638000 192.73805237]
[-219.39212036 197.97601318]
[-233.44786072 203.21397400]
[-247.50360107 208.45193481]
[-261.55932617 213.68991089]
[-275.61508179 218.92787170]
[-289.67080688 224.16583252]
[-303.72653198 229.40379333]
[-317.78228760 234.64176941]
[-317.12045288 249.75524902]
[-321.16333008 264.33297729]
[-329.51477051 276.94680786]
[-341.35659790 286.36093140]
[-355.52871704 291.65307617]
[-370.64260864 292.30477905]
[-385.21765137 288.25216675]
[-397.82586670 279.89227295]
[-407.23208618 268.04409790]
[-412.51470947 253.86846924]
[-413.15628052 238.75411987]
[-409.09390259 224.18180847]
[-400.72555542 211.57919312]
[-388.87109375 202.18092346]
[-374.69192505 196.90777588]
[-359.57714844 196.27635193]
[-345.00756836 200.34851074]
[-332.41055298 208.72528076]
[-323.02023315 220.58602905]
[-308.96450806 215.34806824]
[-294.90878296 210.11009216]
[-280.85302734 204.87213135]
[-266.79730225 199.63417053]
[-252.74156189 194.39620972]
[-238.68582153 189.15823364]
[-224.63008118 183.92027283]
[-210.57435608 178.68231201]
[-210.66822815 171.18289185]
[-210.85595703 156.18406677]
[-210.94982910 148.68466187]
[-225.13226318 143.80015564]
[-239.31471252 138.91564941]
[-254.88224792 141.73742676]
[-264.39630127 130.27740479]
[-278.57873535 125.39289856]
[-295.52346802 125.95193481]
[-300.75140381 109.82416534]
[-286.70117188 100.33591461]
[-273.69424438 111.21046448]
[-259.51177979 116.09497070]
[-244.95867920 112.92381287]
[-234.43020630 124.73320770]
[-220.24775696 129.61772156]
[-206.06532288 134.50222778]
[-191.12286377 135.81475830]
[-176.30606079 133.47750854]
[-170.20458984 129.34161377]
[-161.28930664 131.20494080]
[-146.44442749 129.05332947]
[-131.59954834 126.90171051]
[-116.75466156 124.75009918]
[-101.90977478 122.59848022]
[-87.06489563 120.44686890]
[-72.22000885 118.29524994]
[-57.37512970 116.14363861]
[-42.53024673 113.99201965]
[-27.68536186 111.84040833]
[-16.19955063 102.35750580]
[-1.43224192 108.03528595]
[13.41264153 105.88366699]
[26.60562897 94.29496765]
[43.64985657 101.29610443]
[58.46664810 98.95885468]
[73.28343964 96.62161255]
[77.39430237 82.96531677]
[88.30397034 72.71999359]
[103.56236267 69.14728546]
[119.23751831 73.88734436]
[130.92823792 86.34140778]
[133.91210938 71.64118958]
[136.89598083 56.94096756]
[139.87985229 42.24074936]
[135.04238892 27.17723274]
[145.15682983 16.24346161]
[148.14070129 1.54324138]
[151.12457275 -13.15697956]
[154.10845947 -27.85720062]
[157.09233093 -42.55741882]
[160.07620239 -57.25764084]
[152.72540283 -61.07441330]
[146.25550842 -66.23199463]
[140.90742493 -72.53411102]
[136.87948608 -79.74195099]
[134.32008362 -87.58320618]
[133.32220459 -95.76237488]
[133.92002869 -103.97189331]
[136.08781433 -111.90368652]
[139.74096680 -119.26075745]
[144.73933411 -125.76826477]
[150.89259338 -131.18383789]
[157.96745300 -135.30656433]
[165.69654846 -137.98449707]
[173.78857422 -139.12016296]
[181.93913269 -138.67417908]
[186.73478699 -152.88690186]
[191.53044128 -167.09963989]
[184.29081726 -181.14823914]
[189.18501282 -196.17562866]
[203.30938721 -203.26632690]
[218.28417969 -198.21351624]
[225.22514343 -184.01498413]
[220.01431274 -169.09443665]
[205.74316406 -162.30398560]
[200.94750977 -148.09124756]
[196.15185547 -133.87852478]
[212.15242004 -118.52195740]
[218.16595459 -97.10288239]
[212.46075439 -75.52749634]
[196.54669189 -59.78246689]
[174.77642822 -54.27376556]
[171.79255676 -39.57354736]
[168.80867004 -24.87332535]
[165.82479858 -10.17310429]
[162.84092712 4.52711678]
[159.85705566 19.22733688]
[164.90794373 33.23939514]
[154.58007812 45.22462463]
[151.59620667 59.92484283]
[148.61233521 74.62506104]
[145.62844849 89.32528687]
[153.15553284 102.29999542]
[167.39799500 107.00661469]
[181.64045715 111.71323395]
[195.88291931 116.41984558]
[206.43200684 107.57093811]
[219.86810303 105.10295868]
[232.66894531 109.55434418]
[241.53219604 119.66368866]
[244.22734070 132.72492981]
[258.40979004 137.60943604]
[272.48373413 130.93400574]
[286.79718018 136.08961487]
[293.07443237 149.54812622]
[307.25689697 154.43263245]
[321.43933105 159.31713867]
[333.33633423 154.37889099]
[345.03775024 158.72012329]
[350.47369385 169.50827026]
[364.59387207 174.56990051]
[382.64532471 170.87298584]
[393.44351196 184.72044373]
[407.62597656 189.60494995]
[421.80841064 194.48945618]
[435.99084473 199.37396240]
[450.17327881 204.25846863]
[464.92694092 206.96585083]
[479.91958618 207.43513489]
[494.91223145 207.90441895]
[509.10028076 199.68057251]
[523.17950439 208.08929443]
[522.66650391 224.48042297]
[508.08889771 231.99215698]
[494.44296265 222.89707947]
[479.45028687 222.42779541]
[464.45764160 221.95851135]
[462.78219604 229.26896667]
[473.76907349 239.48115540]
[459.43130493 243.88989258]
[457.75585938 251.20036316]
[471.45651245 257.30712891]
[485.15713501 263.41390991]
[498.85778809 269.52066040]
[512.83538818 262.50927734]
[528.03771973 266.17315674]
[537.28662109 278.78234863]
[536.21508789 294.38317871]
[525.32904053 305.60940552]
[509.76855469 307.16033936]
[496.88079834 298.30371094]
[492.75100708 283.22128296]
[479.05038452 277.11453247]
[465.34973145 271.00775146]
[451.64910889 264.90100098]
[437.35345459 269.44351196]
[422.90951538 265.39715576]
[413.05429077 254.08900452]
[411.01986694 239.22760010]
[417.47344971 225.68687439]
[430.29852295 217.90757751]
[445.28875732 218.44091797]
[431.10632324 213.55639648]
[416.92388916 208.67189026]
[402.74145508 203.78738403]
[388.55902100 198.90287781]
[377.56921387 203.91867065]
[365.72448730 199.98530579]
[359.53225708 188.69009399]
[345.41204834 183.62846375]
[328.32501221 187.67645264]
[316.55480957 173.49958801]
[302.37237549 168.61508179]
[288.18994141 163.73056030]
[274.95654297 170.46949768]
[260.50396729 165.71795654]
[253.52526855 151.79187012]
[239.34283447 146.90736389]
[226.19079590 156.75064087]
[209.59690857 156.80616760]
[196.11154175 146.85357666]
[191.17630005 130.66230774]
[176.93383789 125.95569611]
[162.69137573 121.24907684]
[148.44891357 116.54245758]
[136.45872498 125.55551147]
[137.02182007 140.54493713]
[137.58493042 155.53436279]
[138.14802551 170.52378845]
[149.90397644 181.08660889]
[150.66421509 196.87260437]
[139.97769165 208.51622009]
[124.18454742 209.10951233]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 246]
[3 245]
[4 244]
[5 243]
[10 103]
[11 102]
[12 101]
[15 99]
[16 98]
[18 96]
[19 95]
[20 94]
[21 93]
[22 92]
[23 91]
[24 90]
[25 89]
[26 88]
[27 87]
[28 85]
[29 84]
[31 66]
[32 65]
[33 64]
[34 63]
[35 62]
[36 61]
[37 60]
[38 59]
[39 58]
[69 83]
[70 82]
[71 81]
[73 79]
[74 78]
[108 159]
[109 158]
[110 157]
[111 156]
[113 154]
[114 153]
[115 152]
[116 151]
[117 150]
[118 149]
[133 144]
[134 143]
[135 142]
[160 242]
[161 241]
[162 240]
[163 239]
[168 235]
[169 234]
[172 231]
[173 230]
[174 229]
[177 227]
[178 226]
[180 223]
[181 222]
[182 221]
[183 220]
[184 219]
[185 194]
[186 193]
[187 192]
[198 212]
[199 211]
[200 210]
[201 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
