%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCAGGCUGCGGAUCCCCGUAGGCGAGCGAGCGGCUAGGUUCGUGAUCUGGAGAGACGCUCAGAUUAUUAAGUUCCUGCAACUUAACUGGGAACUGAUCAAGAUUUCAAGCUAAAG\
) } def
/len { sequence length } bind def

/coor [
[93.46717834 169.28137207]
[97.16764069 154.21199036]
[109.04064178 144.22142029]
[107.84384918 129.26924133]
[90.72619629 128.17164612]
[77.30979156 118.08476257]
[72.41808319 133.13075256]
[57.81811523 136.07864380]
[46.79650116 146.25331116]
[35.77488708 156.42799377]
[24.75327682 166.60267639]
[13.73166466 176.77734375]
[2.71005201 186.95202637]
[-1.64410639 202.76257324]
[-17.57957649 206.63462830]
[-28.70331192 194.58496094]
[-23.57216835 179.00923157]
[-7.46462536 175.93041992]
[3.55698681 165.75573730]
[14.57859898 155.58105469]
[25.60021210 145.40638733]
[36.62182236 135.23170471]
[47.64343643 125.05702972]
[51.74680328 110.73880005]
[67.13511658 107.06314850]
[67.33478546 92.06447601]
[56.58793640 81.60000610]
[45.84108734 71.13552856]
[35.09423447 60.67105865]
[24.34738350 50.20658493]
[10.01842022 55.34878159]
[-5.06078100 53.76616669]
[-17.90494156 45.82590485]
[-25.99466324 33.14846802]
[-27.77054596 18.27716637]
[-22.93353844 4.16799068]
[-33.68038940 -6.29648209]
[-44.42723846 -16.76095581]
[-55.17409134 -27.22542763]
[-65.92094421 -37.68989944]
[-76.66779327 -48.15437317]
[-87.41464233 -58.61884689]
[-102.98081207 -65.33678436]
[-100.83456421 -82.15433502]
[-84.08010864 -84.74751282]
[-76.95017242 -69.36569977]
[-66.20332336 -58.90122604]
[-55.45647049 -48.43675232]
[-44.70961761 -37.97227859]
[-33.96276855 -27.50780678]
[-23.21591568 -17.04333305]
[-12.46906471 -6.57886076]
[1.50634623 -11.78974915]
[16.41965485 -10.41037750]
[29.30795097 -2.66100240]
[37.58731461 9.96723366]
[39.57078552 24.99896049]
[34.81185532 39.45973206]
[45.55870819 49.92420578]
[56.30555725 60.38867950]
[67.05240631 70.85314941]
[77.79926300 81.31762695]
[107.84529877 71.39761353]
[129.89476013 95.04847717]
[144.00526428 89.95989227]
[158.11576843 84.87130737]
[172.22627258 79.78273010]
[175.07087708 76.11756897]
[178.60769653 73.85755157]
[182.28100586 73.04484558]
[185.58299255 73.52688599]
[188.11628723 74.99140167]
[202.68772888 71.43150330]
[217.25918579 67.87160492]
[231.83062744 64.31169891]
[246.40208435 60.75180054]
[260.97354126 57.19189835]
[275.54498291 53.63199997]
[279.17633057 38.76351166]
[289.31015015 27.29336548]
[303.61776733 21.85731697]
[318.81140137 23.70452881]
[331.39965820 32.41052628]
[338.48983765 45.97473526]
[338.45269775 61.28019714]
[331.29675293 74.80982971]
[318.66638184 83.45462799]
[303.46398926 85.22807312]
[289.18292236 79.72264099]
[279.10488892 68.20344543]
[264.53341675 71.76335144]
[249.96197510 75.32324982]
[235.39053345 78.88314819]
[220.81909180 82.44304657]
[206.24763489 86.00295258]
[191.67619324 89.56285095]
[177.31484985 93.89322662]
[163.20436096 98.98181152]
[149.09385681 104.07039642]
[134.98335266 109.15898132]
[149.80607605 111.45826721]
[164.78849792 110.73244476]
[177.95587158 117.91718292]
[185.45327759 130.90905762]
[185.08578491 145.90455627]
[176.96096802 158.51358032]
[163.45747375 165.04467773]
[148.52857971 163.58583069]
[136.54490662 154.56410217]
[131.01477051 140.62045288]
[122.79602814 128.07244873]
[123.99282074 143.02462769]
[137.30378723 150.99943542]
[143.35414124 165.28834534]
[139.81736755 180.39698792]
[128.05343628 190.51576233]
[112.58583069 191.75381470]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 112]
[4 111]
[6 25]
[8 23]
[9 22]
[10 21]
[11 20]
[12 19]
[13 18]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[42 46]
[64 100]
[65 99]
[66 98]
[67 97]
[72 96]
[73 95]
[74 94]
[75 93]
[76 92]
[77 91]
[78 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
