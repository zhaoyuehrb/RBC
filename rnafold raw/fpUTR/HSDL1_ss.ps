%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCGUACGCGGGUCACGUGAGGGCGCGGCGCGGCAGCAGCUCCGGCGGCCGAGACGGGGGCGGCGGCCGCGCGGGUCUGGCGGGACCGGUUUGGAAGACUUUGCCGGCCUGCAGAUUGGCCUUAAGAGAAGGACGGAGCCACAUACUGCUGACGGCCCAGAACUGGCAGAGAGAAGGUUGCC\
) } def
/len { sequence length } bind def

/coor [
[98.48815155 369.69708252]
[91.02083588 368.99758911]
[83.70541382 382.09280396]
[76.38999176 395.18801880]
[69.07456970 408.28323364]
[69.09906769 424.10443115]
[56.13726425 431.44207764]
[56.16176224 447.26324463]
[43.19996643 454.60089111]
[35.88454056 467.69610596]
[28.56911659 480.79132080]
[21.25369263 493.88653564]
[24.22374916 509.65225220]
[13.64068604 521.70953369]
[-2.37707639 520.80908203]
[-11.54208183 507.64163208]
[-6.82372189 492.30810547]
[8.15848064 486.57110596]
[15.47390461 473.47589111]
[22.78932953 460.38067627]
[30.10475349 447.28546143]
[29.55700684 432.40093994]
[43.04205322 424.12664795]
[42.49430847 409.24209595]
[55.97935486 400.96780396]
[63.29477692 387.87258911]
[70.61019897 374.77737427]
[77.92562866 361.68215942]
[82.07379150 347.26715088]
[82.83763123 332.28662109]
[83.60147095 317.30606079]
[80.79565430 310.45010376]
[84.50760651 302.07827759]
[85.52571869 287.11288452]
[78.67011261 273.88980103]
[87.32624817 260.64660645]
[88.34436035 245.68119812]
[89.36247253 230.71578979]
[90.38058472 215.75038147]
[91.39868927 200.78497314]
[91.52605438 185.78552246]
[90.76221466 170.80497742]
[89.99837494 155.82444763]
[89.23452759 140.84390259]
[88.47068787 125.86336517]
[87.70684814 110.88282776]
[79.41304779 98.38430786]
[65.90641785 91.85966492]
[52.39979172 85.33502197]
[38.89316559 78.81037903]
[25.38653564 72.28573608]
[11.87990665 65.76109314]
[-1.62672246 59.23644638]
[-11.70108032 63.41293716]
[-22.19267464 61.38440323]
[-29.66974068 54.06105042]
[-31.82300949 44.04367828]
[-45.10029602 37.06415939]
[-61.45621490 38.25408936]
[-70.43953705 24.53432465]
[-62.80899048 10.01858139]
[-46.41422653 9.63941288]
[-38.12077332 23.78687477]
[-24.84348869 30.76639557]
[-5.64620829 28.56644630]
[4.89792156 45.72981644]
[18.40455055 52.25446320]
[31.91117859 58.77910614]
[45.41780853 65.30374908]
[58.92443466 71.82839203]
[72.43106842 78.35303497]
[85.93769073 84.87767792]
[99.27375793 78.01114655]
[101.80877686 63.22690582]
[96.51500702 48.31762695]
[106.29193115 37.08103561]
[108.82694244 22.29679680]
[111.36196136 7.51255846]
[113.89697266 -7.27168036]
[116.43198395 -22.05591965]
[118.96699524 -36.84015656]
[117.33108521 -45.85069275]
[121.67262268 -51.85301971]
[124.45831299 -66.59207916]
[127.24401093 -81.33114624]
[130.02970886 -96.07020569]
[128.54704285 -105.10721588]
[132.98986816 -111.03495789]
[136.02545166 -125.72459412]
[139.06101990 -140.41423035]
[142.09658813 -155.10385132]
[145.13217163 -169.79348755]
[136.71606445 -182.90100098]
[140.00382996 -197.75514221]
[152.55169678 -205.69783020]
[155.58728027 -220.38746643]
[149.92062378 -235.77644348]
[160.62104797 -248.20355225]
[176.68087769 -244.88482666]
[181.57913208 -229.23429871]
[170.27690125 -217.35188293]
[167.24133301 -202.66224670]
[175.61320496 -190.39654541]
[172.74395752 -175.45593262]
[159.82179260 -166.75791931]
[156.78622437 -152.06828308]
[153.75065613 -137.37864685]
[150.71507263 -122.68901825]
[147.67950439 -107.99938202]
[144.76876831 -93.28450775]
[141.98307800 -78.54544830]
[139.19737244 -63.80638885]
[136.41168213 -49.06732559]
[133.75123596 -34.30514526]
[131.21621704 -19.52090645]
[128.68121338 -4.73666811]
[126.14619446 10.04757118]
[123.61118317 24.83181000]
[121.07617188 39.61604691]
[126.55126190 53.46786118]
[116.59300995 65.76191711]
[114.05799866 80.54615784]
[125.64810181 90.06820679]
[139.65940857 84.71250916]
[153.67070007 79.35681915]
[161.50312805 65.35564423]
[177.35588074 62.89196777]
[189.06809998 73.85570526]
[187.65515137 89.83641815]
[174.20095825 98.57507324]
[159.02639771 93.36811829]
[145.01510620 98.72380829]
[131.00379944 104.07950592]
[121.06829834 112.18319702]
[110.57453918 113.82250977]
[102.68738556 110.11898804]
[103.45123291 125.09952545]
[104.21507263 140.08006287]
[104.97891235 155.06060791]
[105.74275208 170.04113770]
[106.50659180 185.02168274]
[116.62119293 173.94491577]
[131.46983337 171.81939697]
[144.28575134 179.61378479]
[149.22850037 193.77603149]
[144.04560852 207.85217285]
[131.09899902 215.42745972]
[116.28864288 213.04974365]
[106.36409760 201.80308533]
[105.34599304 216.76849365]
[104.32788086 231.73390198]
[103.30976868 246.69931030]
[102.29165649 261.66473389]
[109.07444000 275.95822144]
[100.49112701 288.13098145]
[99.47301483 303.09640503]
[98.58200836 318.06991577]
[97.81816864 333.05044556]
[97.05432892 348.03100586]
[98.15644073 333.07153320]
[107.03811646 320.98370361]
[120.98480988 315.46194458]
[135.73393250 318.19390869]
[146.77763367 328.34460449]
[150.74058533 342.81164551]
[146.41156006 357.17337036]
[135.11605835 367.03927612]
[139.87226868 381.26525879]
[144.62849426 395.49121094]
[149.38470459 409.71719360]
[154.14091492 423.94317627]
[168.97868347 428.48413086]
[178.28666687 440.89950562]
[178.48573303 456.41531372]
[169.49937439 469.06539917]
[154.78300476 473.98556519]
[139.99537659 469.28390503]
[130.82263184 456.76831055]
[130.79187012 441.25125122]
[139.91494751 428.69940186]
[135.15872192 414.47341919]
[130.40251160 400.24743652]
[125.64630127 386.02145386]
[120.89008331 371.79547119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 28]
[3 27]
[4 26]
[5 25]
[7 23]
[9 21]
[10 20]
[11 19]
[12 18]
[29 159]
[30 158]
[31 157]
[33 156]
[34 155]
[36 153]
[37 152]
[38 151]
[39 150]
[40 149]
[41 141]
[42 140]
[43 139]
[44 138]
[45 137]
[46 136]
[47 72]
[48 71]
[49 70]
[50 69]
[51 68]
[52 67]
[53 66]
[57 64]
[58 63]
[73 122]
[74 121]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
[83 113]
[84 112]
[85 111]
[86 110]
[88 109]
[89 108]
[90 107]
[91 106]
[92 105]
[95 102]
[96 101]
[123 133]
[124 132]
[125 131]
[167 184]
[168 183]
[169 182]
[170 181]
[171 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
