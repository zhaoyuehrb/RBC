%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCCUGCAGUGGCUGUAACAAAACCCAGACCCCCAGGUCCCGGCCAAUGGAGGCGAUUUAGACUGGAGUGGGACCGCGUCUGUCAAAAGCCCGACUCGGCAGCAGCGGCGGAGUCCAGGAGGAGAGCUGGAGCCGCCGCGCUGCCUCCCCGCCCCCGCCGGGAUUUAUUAUUUGGACUGGACAAUUAAGUGGCCCUG\
) } def
/len { sequence length } bind def

/coor [
[47.58670425 743.89721680]
[43.54970169 758.78698730]
[32.08821869 769.11352539]
[16.85956955 771.58172607]
[2.72316265 765.40386963]
[-5.81012583 752.55139160]
[-6.01735497 737.12542725]
[2.16760111 724.04833984]
[16.13295364 717.49298096]
[18.01295090 702.61126709]
[19.89295006 687.72955322]
[17.61029434 680.69317627]
[21.92113495 672.62951660]
[24.03465462 657.77917480]
[26.14817238 642.92883301]
[28.26169014 628.07849121]
[14.48168564 622.24230957]
[2.67291188 613.03094482]
[-6.35597038 601.06750488]
[-11.98469925 587.16387939]
[-13.82401657 572.26568604]
[-11.74258137 557.38757324]
[-5.87632990 543.54473877]
[3.38038588 531.68304443]
[15.40130138 522.61474609]
[29.37060738 516.96289062]
[44.33831787 515.11822510]
[46.45183945 500.26785278]
[48.56535721 485.41748047]
[50.67887497 470.56713867]
[44.81205368 456.87664795]
[54.41662598 444.30435181]
[56.53014374 429.45397949]
[41.60019302 416.83163452]
[37.27978516 397.61663818]
[45.48900986 379.55599976]
[63.06011963 370.03906250]
[64.23700714 355.08529663]
[65.41389465 340.13153076]
[66.59078217 325.17776489]
[67.76766205 310.22402954]
[68.94454956 295.27026367]
[70.12143707 280.31649780]
[71.29832458 265.36273193]
[72.47521210 250.40898132]
[73.65209961 235.45521545]
[71.92701721 233.23487854]
[70.98155212 230.19442749]
[71.13361359 226.62884521]
[72.58801270 222.94302368]
[75.40151978 219.60917664]
[77.51503754 204.75881958]
[71.64821625 191.06832886]
[81.25278473 178.49601746]
[83.36630249 163.64566040]
[85.47982025 148.79531860]
[87.59333801 133.94496155]
[80.28598785 130.83074951]
[73.75039673 126.14457703]
[68.32422638 120.07588196]
[64.29900360 112.88646698]
[61.90463638 104.89933014]
[61.29666138 96.48418427]
[62.54685593 88.04039001]
[65.63780212 79.97796631]
[70.46170044 72.69770813]
[76.82364655 66.57129669]
[84.44924927 61.92241287]
[77.01737213 48.89294052]
[69.58549500 35.86346436]
[62.15361023 22.83399391]
[48.59533310 14.68024158]
[49.01036072 -0.20858067]
[41.57847977 -13.23805332]
[37.05489731 -15.87830257]
[34.27959442 -19.61822510]
[33.37851715 -23.60529900]
[34.12000656 -27.06102562]
[27.31015015 -40.42612457]
[12.00512218 -40.54727936]
[-1.48503077 -47.77737808]
[-10.06036854 -60.45500183]
[-11.75034237 -75.66692352]
[-6.16660786 -89.91755676]
[5.40773344 -99.93220520]
[20.31298256 -103.40958405]
[35.12402344 -99.55060577]
[46.43738556 -89.24205017]
[51.65333939 -74.85272980]
[49.57330322 -59.68922043]
[40.67524719 -47.23598099]
[47.48510742 -33.87088394]
[54.60795212 -20.66993332]
[62.03983307 -7.64046049]
[75.06652832 -0.41866371]
[75.18308258 15.40211296]
[82.61496735 28.43158531]
[90.04684448 41.46105957]
[97.47872162 54.49053192]
[112.38813782 56.13654709]
[122.48332977 45.04207993]
[132.57850647 33.94761276]
[142.67370605 22.85314751]
[152.76889038 11.75868034]
[162.86407471 0.66421407]
[166.32936096 -7.79728508]
[173.20602417 -10.52364254]
[183.47422791 -21.45817184]
[193.74243164 -32.39270020]
[204.01065063 -43.32723236]
[214.27885437 -54.26176071]
[224.54705811 -65.19628906]
[234.81526184 -76.13082123]
[235.19229126 -89.02932739]
[243.97731018 -97.92597198]
[256.06890869 -98.43124390]
[266.50759888 -109.20314026]
[276.94628906 -119.97502899]
[287.38497925 -130.74693298]
[297.82366943 -141.51881409]
[295.02328491 -156.78111267]
[301.75900269 -170.76000977]
[315.44082642 -178.08035278]
[330.80780029 -175.92730713]
[341.95101929 -165.12878418]
[344.58569336 -149.83700562]
[337.69873047 -135.93200684]
[323.93829346 -128.76051331]
[308.59558105 -131.08012390]
[298.15689087 -120.30823517]
[287.71820068 -109.53633881]
[277.27951050 -98.76444244]
[266.84082031 -87.99255371]
[263.49383545 -70.76956177]
[245.74980164 -65.86260986]
[235.48158264 -54.92808151]
[225.21337891 -43.99355316]
[214.94517517 -33.05902481]
[204.67697144 -22.12449455]
[194.40876770 -11.18996525]
[184.14054871 -0.25543585]
[173.95854187 10.75940132]
[163.86335754 21.85386848]
[153.76817322 32.94833374]
[143.67297363 44.04280090]
[133.57778931 55.13726807]
[123.48260498 66.23173523]
[135.78283691 81.82790375]
[139.12417603 100.91390991]
[133.15997314 118.83730316]
[119.75685883 131.44801331]
[102.44369507 136.05847168]
[100.33017731 150.90882874]
[98.21665955 165.75918579]
[96.10314178 180.60954285]
[101.81878662 195.36222839]
[92.36538696 206.87232971]
[90.25186920 221.72268677]
[88.60585785 236.63211060]
[87.42897034 251.58586121]
[86.25208282 266.53961182]
[85.07519531 281.49337769]
[83.89831543 296.44714355]
[82.72142792 311.40090942]
[81.54454041 326.35467529]
[80.36765289 341.30844116]
[79.19076538 356.26217651]
[78.01387787 371.21594238]
[87.34638214 376.30404663]
[94.42541504 384.18185425]
[98.46134949 393.93249512]
[99.01671600 404.43246460]
[96.05353546 414.48104858]
[89.93470764 422.93768311]
[81.37979889 428.85134888]
[71.38050079 431.56750488]
[69.26697540 446.41784668]
[74.98262787 461.17056274]
[65.52922821 472.68066406]
[63.41571045 487.53100586]
[61.30219269 502.38137817]
[59.18867493 517.23168945]
[73.04742432 523.17901611]
[84.88523102 532.50378418]
[93.89888000 544.56573486]
[99.47873688 558.53900146]
[101.25002289 573.46881104]
[99.09796906 588.33685303]
[93.17520905 602.13037109]
[83.89099884 613.91149902]
[71.88292694 622.88098145]
[57.97314072 628.43206787]
[43.11204529 630.19201660]
[40.99852753 645.04235840]
[38.88500977 659.89270020]
[36.77149200 674.74304199]
[34.77466965 689.60955811]
[32.89467239 704.49127197]
[31.01467323 719.37298584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 199]
[10 198]
[11 197]
[13 196]
[14 195]
[15 194]
[16 193]
[27 182]
[28 181]
[29 180]
[30 179]
[32 177]
[33 176]
[37 168]
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[44 161]
[45 160]
[46 159]
[51 158]
[52 157]
[54 155]
[55 154]
[56 153]
[57 152]
[68 99]
[69 98]
[70 97]
[71 96]
[73 94]
[74 93]
[78 92]
[79 91]
[100 147]
[101 146]
[102 145]
[103 144]
[104 143]
[105 142]
[107 141]
[108 140]
[109 139]
[110 138]
[111 137]
[112 136]
[113 135]
[116 133]
[117 132]
[118 131]
[119 130]
[120 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
