%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCCUUUCCGGCGGCGCGCUGUCGUCACGCGUCCCGCGCCUCCUCGCGCCUGCGCCGUGGUUGGAAGGUCGUCCCUGUGACCGGCUUGGCGGUUGGAGCGGCUGUCGCC\
) } def
/len { sequence length } bind def

/coor [
[88.89765167 113.54906464]
[87.99368286 105.76769257]
[90.87776184 100.10348511]
[77.18601227 93.97682190]
[63.49426270 87.85015869]
[49.80251312 81.72349548]
[35.19056702 87.12059784]
[21.39246178 80.71224976]
[16.33719635 66.74872589]
[2.64544725 60.62206268]
[-11.13087845 54.68802261]
[-24.98907089 48.94777298]
[-38.84726334 43.20751953]
[-52.70545578 37.46726990]
[-67.61113739 35.78779984]
[-82.39920807 38.30039597]
[-97.18727112 40.81298828]
[-111.97533417 43.32558060]
[-126.76340485 45.83817673]
[-141.55146790 48.35076904]
[-149.62338257 52.93315125]
[-156.78904724 50.72037125]
[-171.64176941 52.81722641]
[-184.21775818 63.34227371]
[-199.52574158 57.46030045]
[-201.81817627 41.22217178]
[-188.73681641 31.33228683]
[-173.73863220 37.96450806]
[-158.88591003 35.86765289]
[-144.06405640 33.56270218]
[-129.27600098 31.05010986]
[-114.48793030 28.53751564]
[-99.69986725 26.02492332]
[-84.91179657 23.51232910]
[-70.12373352 20.99973679]
[-67.35106659 14.03106880]
[-61.80573654 0.09373476]
[-59.03306961 -6.87493229]
[-68.05282593 -18.86009026]
[-77.07257843 -30.84524727]
[-86.09233856 -42.83040237]
[-101.77451324 -44.79124069]
[-111.41088104 -57.31785202]
[-109.28435516 -72.97842407]
[-96.65656281 -82.48181152]
[-81.01934814 -80.18982697]
[-71.65000153 -67.46226501]
[-74.10717773 -51.85015869]
[-65.08742523 -39.86500168]
[-56.06766891 -27.87984657]
[-47.04791260 -15.89468861]
[-41.81290054 -6.79868555]
[-39.51695251 2.44648266]
[-39.92770004 11.03036118]
[-42.60943985 18.26032448]
[-46.96520615 23.60907555]
[-33.10701370 29.34932709]
[-19.24881935 35.08957672]
[-5.39062691 40.82983017]
[2.10061836 40.47700500]
[8.77211094 46.93031693]
[22.46385956 53.05698013]
[36.24420929 47.52185440]
[50.21686554 53.54011917]
[55.92917633 68.03174591]
[69.62092590 74.15840912]
[83.31267548 80.28507233]
[97.00442505 86.41173553]
[112.00442505 86.41173553]
[125.69617462 80.28507233]
[139.38792419 74.15840912]
[153.07966614 68.03174591]
[166.77142334 61.90508270]
[172.17271423 47.05241776]
[186.52954102 40.44508743]
[201.32427979 46.00310516]
[207.77944946 60.42899704]
[202.06532288 75.16413116]
[187.57199097 81.46642303]
[172.89808655 75.59683228]
[159.20632935 81.72349548]
[145.51458740 87.85015869]
[131.82283020 93.97682190]
[118.13108826 100.10348511]
[115.41134644 114.85485840]
[126.01795197 125.46146393]
[136.62455750 136.06806946]
[143.12388611 138.21792603]
[146.89572144 142.70994568]
[147.50753784 147.57937622]
[157.50273132 158.76400757]
[167.49792480 169.94863892]
[177.49313354 181.13327026]
[187.48832703 192.31790161]
[197.48353577 203.50253296]
[207.47872925 214.68716431]
[217.47392273 225.87179565]
[232.53668213 233.65316772]
[229.22920227 250.28135681]
[212.33523560 251.70628357]
[206.28929138 235.86700439]
[196.29409790 224.68235779]
[186.29888916 213.49772644]
[176.30369568 202.31309509]
[166.30850220 191.12846375]
[156.31329346 179.94383240]
[146.31809998 168.75920105]
[136.32290649 157.57456970]
[126.01795197 146.67466736]
[115.41134644 136.06806946]
[104.80474854 125.46146393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 68]
[4 67]
[5 66]
[6 65]
[9 62]
[10 61]
[11 59]
[12 58]
[13 57]
[14 56]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[22 29]
[23 28]
[38 51]
[39 50]
[40 49]
[41 48]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[85 111]
[86 110]
[87 109]
[90 108]
[91 107]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[97 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
