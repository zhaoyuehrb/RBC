%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCAGGCGGGGGCGGAGGGGGAGGCUGGCAGCGGAGCUUUGAAUAGGGAAGUUUUGCAGGGGUUACGUUUGCAGUCAGUCCGGUGUUUGCAAAUAUUGUGUGGGCUCCGCGCGCUGCGGGCUGCGGGAGGGUCCGGCCGGGCGUCUCUGCGAGCCUGGAGUUUGCAUGAAACUUUCACCUGCGCUCCGGGGAGACUUUCGGCUCCGGCUCCCACCGCGCGCCUCGCCGCCCUCGCGACCGCGGGCUCCGUCCA\
ACCCGGCCCGAC\
) } def
/len { sequence length } bind def

/coor [
[138.10693359 383.88415527]
[132.26023865 374.59378052]
[128.98077393 364.10183716]
[128.49447632 353.10458374]
[130.84161377 342.33386230]
[135.87367249 332.50851440]
[143.26264954 324.28634644]
[152.52247620 318.22009277]
[148.52708435 303.76199341]
[144.53169250 289.30389404]
[140.53628540 274.84576416]
[136.54089355 260.38766479]
[132.54550171 245.92956543]
[128.55010986 231.47146606]
[124.55471039 217.01335144]
[120.55931854 202.55525208]
[116.56391907 188.09713745]
[105.71611023 177.89056396]
[109.49807739 162.52803040]
[105.50268555 148.06993103]
[101.50728607 133.61183167]
[97.51189423 119.15372467]
[84.48365021 113.81372833]
[77.76776886 100.29366302]
[81.89309692 84.71789551]
[67.12438965 82.09393311]
[52.35567474 79.46997070]
[37.58696365 76.84601593]
[22.64608955 82.04993439]
[11.46855354 72.20555115]
[-3.30015731 69.58158875]
[-18.06886864 66.95762634]
[-32.83757782 64.33366394]
[-47.60629272 61.70970535]
[-62.37500381 59.08574295]
[-77.18756866 61.44962692]
[-90.40601349 68.53995514]
[-103.62445068 75.63027954]
[-116.84289551 82.72061157]
[-130.06134033 89.81093597]
[-143.27978516 96.90126038]
[-156.49822998 103.99159241]
[-159.51632690 119.33515930]
[-171.72337341 129.10871887]
[-187.35554504 128.69747925]
[-199.03182983 118.29563141]
[-201.23902893 102.81459808]
[-192.93498230 89.56405640]
[-178.04060364 84.80050659]
[-163.58856201 90.77314758]
[-150.37011719 83.68282318]
[-137.15167236 76.59249115]
[-123.93322754 69.50216675]
[-110.71478271 62.41183853]
[-97.49633789 55.32151031]
[-84.27789307 48.23118210]
[-84.80529022 33.24045563]
[-98.48933411 27.09660149]
[-112.17337799 20.95274544]
[-127.93197632 22.35883141]
[-136.37355042 10.08735943]
[-150.05760193 3.94350457]
[-163.74163818 -2.20035100]
[-179.50024414 -0.79426503]
[-187.94181824 -13.06573677]
[-201.62586975 -19.20959091]
[-215.30990601 -25.35344696]
[-228.99395752 -31.49730301]
[-242.85214233 -37.23755264]
[-256.87258911 -42.56927109]
[-270.89303589 -47.90098953]
[-284.91348267 -53.23270798]
[-298.93389893 -58.56442642]
[-312.95434570 -63.89614487]
[-326.97479248 -69.22785950]
[-340.99523926 -74.55957794]
[-356.64440918 -72.23279572]
[-365.79034424 -83.98870087]
[-379.81079102 -89.32041931]
[-394.12408447 -82.61930847]
[-408.95486450 -88.08041382]
[-415.50427246 -102.46376038]
[-409.88665771 -117.23596954]
[-395.43487549 -123.63294220]
[-380.72290039 -117.85948181]
[-374.47906494 -103.34086609]
[-360.45861816 -98.00914764]
[-345.81228638 -100.71728516]
[-335.66351318 -88.58002472]
[-321.64306641 -83.24830627]
[-307.62265015 -77.91658783]
[-293.60220337 -72.58486938]
[-279.58175659 -67.25315094]
[-265.56130981 -61.92143250]
[-251.54086304 -56.58971405]
[-237.52043152 -51.25799561]
[-241.38253784 -65.75227356]
[-232.55557251 -77.88011932]
[-217.57589722 -78.66085815]
[-207.53599548 -67.51634216]
[-209.87039185 -52.69910812]
[-222.85009766 -45.18134689]
[-209.16606140 -39.03749084]
[-195.48200989 -32.89363480]
[-181.79797363 -26.74977875]
[-167.01814270 -28.59531593]
[-157.59779358 -15.88439465]
[-143.91374207 -9.74053860]
[-130.22970581 -3.59668350]
[-115.44987488 -5.44221878]
[-106.02952576 7.26870203]
[-92.34548187 13.41255760]
[-78.66143799 19.55641365]
[-59.75104141 44.31703186]
[-44.98233032 46.94099426]
[-30.21361923 49.56495285]
[-15.44490719 52.18891525]
[-0.67619646 54.81287384]
[14.09251499 57.43683624]
[27.97703362 52.04523087]
[40.21092606 62.07730103]
[54.97963715 64.70126343]
[69.74834442 67.32522583]
[84.51705933 69.94918060]
[99.04318237 66.20861816]
[110.70774078 56.77792358]
[122.37230682 47.34723282]
[134.03686523 37.91653824]
[136.16041565 25.21732712]
[146.04092407 17.60117340]
[158.06494141 18.70810127]
[169.83924866 9.41478825]
[181.61355591 0.12147653]
[188.04766846 -17.14904404]
[205.51765442 -18.96042061]
[217.18222046 -28.39111328]
[228.84678650 -37.82180786]
[240.40000916 -47.38858414]
[251.84028625 -57.09013367]
[263.28054810 -66.79167938]
[274.72082520 -76.49323273]
[286.16110229 -86.19477844]
[297.60137939 -95.89633179]
[303.12231445 -110.72299194]
[317.83346558 -113.05348206]
[329.27374268 -122.75502777]
[340.71401978 -132.45657349]
[352.15429688 -142.15812683]
[363.59457397 -151.85968018]
[348.73919678 -153.93754578]
[339.61749268 -165.84527588]
[341.47952271 -180.72926331]
[353.25360107 -190.02285767]
[368.16302490 -188.37704468]
[377.62655640 -176.73908997]
[376.19686890 -161.80648804]
[388.29064941 -170.68006897]
[400.38442993 -179.55364990]
[412.47821045 -188.42724609]
[424.57199097 -197.30082703]
[436.66577148 -206.17440796]
[448.75955200 -215.04798889]
[460.85333252 -223.92156982]
[463.83398438 -229.76055908]
[468.59222412 -232.78793335]
[473.33624268 -232.85748291]
[485.63470459 -241.44511414]
[497.93319702 -250.03274536]
[510.13015747 -258.76394653]
[522.22393799 -267.63754272]
[534.31774902 -276.51113892]
[546.41149902 -285.38470459]
[555.60498047 -299.62957764]
[571.83813477 -294.73873901]
[571.63226318 -277.78604126]
[555.28509521 -273.29092407]
[543.19128418 -264.41735840]
[531.09753418 -255.54376221]
[519.00372314 -246.67018127]
[517.40863037 -242.20182800]
[513.00897217 -238.67353821]
[506.52081299 -237.73426819]
[494.22235107 -229.14663696]
[481.92388916 -220.55900574]
[469.72689819 -211.82778931]
[457.63311768 -202.95420837]
[445.53933716 -194.08062744]
[433.44555664 -185.20704651]
[421.35177612 -176.33346558]
[409.25799561 -167.45986938]
[397.16421509 -158.58628845]
[385.07043457 -149.71270752]
[373.29614258 -140.41940308]
[361.85586548 -130.71784973]
[350.41558838 -121.01630402]
[338.97531128 -111.31475067]
[327.53503418 -101.61320496]
[322.83236694 -87.48046112]
[307.30294800 -84.45605469]
[295.86267090 -74.75450134]
[284.42239380 -65.05295563]
[272.98211670 -55.35140610]
[261.54183960 -45.64985657]
[250.10154724 -35.94830704]
[248.82438660 -31.37890053]
[244.68356323 -27.55015373]
[238.27748108 -26.15724373]
[226.61291504 -16.72655106]
[214.94834900 -7.29585838]
[213.37197876 4.67565870]
[203.76145935 12.62979507]
[190.90687561 11.89578533]
[179.13255310 21.18909836]
[167.35824585 30.48241043]
[161.73269653 47.12077332]
[143.46755981 49.58110046]
[131.80299377 59.01179504]
[120.13843536 68.44248962]
[108.47386932 77.87318420]
[117.59806061 85.82155609]
[121.25851440 96.75806427]
[118.98722076 107.48544312]
[111.97000122 115.15832520]
[115.96539307 129.61642456]
[119.96079254 144.07453918]
[123.95618439 158.53263855]
[135.08976746 169.77336121]
[131.02203369 184.10174561]
[135.01742554 198.55986023]
[139.01281738 213.01795959]
[143.00820923 227.47605896]
[147.00360107 241.93417358]
[150.99900818 256.39227295]
[154.99440002 270.85037231]
[158.98979187 285.30850220]
[162.98518372 299.76660156]
[166.98059082 314.22470093]
[186.12866211 316.90249634]
[202.11235046 327.69256592]
[211.70581055 344.36462402]
[212.99604797 363.50674438]
[205.76417542 381.22354126]
[191.52113342 393.92883301]
[196.35659790 408.12808228]
[201.19206238 422.32730103]
[206.02752686 436.52655029]
[210.86299133 450.72576904]
[215.69845581 464.92501831]
[229.60032654 471.95178223]
[234.30191040 486.42071533]
[227.51727295 499.63070679]
[232.35273743 513.82995605]
[243.18228149 526.87438965]
[233.64552307 540.89178467]
[217.53591919 535.60809326]
[218.15350342 518.66540527]
[213.31803894 504.46618652]
[199.88130188 498.14242554]
[194.77519226 483.81127930]
[201.49922180 469.76046753]
[196.66375732 455.56124878]
[191.82829285 441.36199951]
[186.99282837 427.16278076]
[182.15736389 412.96353149]
[177.32189941 398.76428223]
[166.41047668 399.04733276]
[155.77481079 396.52539062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 237]
[9 236]
[10 235]
[11 234]
[12 233]
[13 232]
[14 231]
[15 230]
[16 229]
[17 228]
[19 226]
[20 225]
[21 224]
[22 223]
[25 124]
[26 123]
[27 122]
[28 121]
[30 119]
[31 118]
[32 117]
[33 116]
[34 115]
[35 114]
[36 56]
[37 55]
[38 54]
[39 53]
[40 52]
[41 51]
[42 50]
[57 113]
[58 112]
[59 111]
[61 109]
[62 108]
[63 107]
[65 105]
[66 104]
[67 103]
[68 102]
[69 96]
[70 95]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[78 87]
[79 86]
[125 219]
[126 218]
[127 217]
[128 216]
[131 214]
[132 213]
[133 212]
[135 209]
[136 208]
[137 207]
[138 204]
[139 203]
[140 202]
[141 201]
[142 200]
[143 199]
[145 197]
[146 196]
[147 195]
[148 194]
[149 193]
[156 192]
[157 191]
[158 190]
[159 189]
[160 188]
[161 187]
[162 186]
[163 185]
[166 184]
[167 183]
[168 182]
[169 179]
[170 178]
[171 177]
[172 176]
[243 265]
[244 264]
[245 263]
[246 262]
[247 261]
[248 260]
[251 257]
[252 256]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
