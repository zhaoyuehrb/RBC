%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUAAUCAGGGACGCUGGGCUGGGAACUGUCCAAUCAGGCACAAAGCUGGAGCGGACAGGGCGGCUUCCGGGAUGUGGCUGGGCCUUUGUCUCUCGCUGCCGCCGGAGUUUCCAGGUCUCGACUUCACUGCUCUGUGUCCUCUGCUCCAGGAGGCCCAGCCUGUGUGGCCCUGUGACCUGCAGGUAUUGGAGAGCCACAGCUAAG\
) } def
/len { sequence length } bind def

/coor [
[203.51119995 446.97372437]
[209.35435486 441.00219727]
[206.41404724 426.29321289]
[203.47372437 411.58419800]
[200.53341675 396.87521362]
[197.59310913 382.16619873]
[194.65280151 367.45721436]
[190.38711548 353.07653809]
[184.83140564 339.14334106]
[179.27568054 325.21014404]
[173.71997070 311.27694702]
[168.16424561 297.34375000]
[156.26327515 288.38739014]
[158.33897400 272.70294189]
[152.78326416 258.76974487]
[147.22753906 244.83654785]
[141.56625366 230.94590759]
[135.79972839 217.09861755]
[130.03318787 203.25134277]
[124.26666260 189.40406799]
[118.50012970 175.55679321]
[112.73359680 161.70951843]
[106.96706390 147.86222839]
[101.20053101 134.01495361]
[95.43400574 120.16767883]
[92.74092102 118.10350037]
[90.57453156 115.72236633]
[88.96314240 113.13678741]
[76.20635986 121.02757263]
[63.44958115 128.91836548]
[60.06871796 144.35679626]
[46.71657944 152.81233215]
[31.31474876 149.26843262]
[23.00086212 135.82763672]
[26.70739937 120.46414185]
[40.23533630 112.29282379]
[55.55879211 116.16158295]
[68.31557465 108.27079773]
[81.07234955 100.38000488]
[85.44704437 86.03211212]
[79.26291656 72.36621857]
[73.07878876 58.70032883]
[66.89466858 45.03443527]
[60.71054077 31.36854362]
[47.97193527 21.98566246]
[49.77394104 7.20046473]
[43.58981705 -6.46542692]
[37.40568924 -20.13131905]
[31.01488113 -33.70178604]
[24.41886139 -47.17370224]
[17.82283974 -60.64561844]
[11.22681904 -74.11753082]
[4.63079834 -87.58944702]
[-2.06726146 -101.01092529]
[-8.86697483 -114.38118744]
[-15.76795101 -127.69946289]
[-22.76979065 -140.96499634]
[-29.77163124 -154.23051453]
[-44.60325623 -158.99084473]
[-51.51514435 -172.54371643]
[-46.88550186 -186.65406799]
[-53.88734055 -199.91960144]
[-67.17173767 -208.51234436]
[-66.27006531 -223.37963867]
[-73.27191162 -236.64515686]
[-80.27375031 -249.91069031]
[-87.27558899 -263.17620850]
[-94.05112457 -269.30718994]
[-94.28129578 -276.69662476]
[-101.08100891 -290.06689453]
[-107.88072205 -303.43713379]
[-114.68044281 -316.80740356]
[-127.88395691 -319.47805786]
[-137.00469971 -329.12542725]
[-138.87498474 -342.07272339]
[-133.03361511 -353.55990601]
[-139.62963867 -367.03179932]
[-146.22564697 -380.50372314]
[-152.82167053 -393.97564697]
[-159.41769409 -407.44754028]
[-176.63734436 -417.92434692]
[-174.48930359 -437.13900757]
[-181.49114990 -450.40454102]
[-188.49299622 -463.67004395]
[-195.49482727 -476.93557739]
[-209.65621948 -485.20523071]
[-209.30462646 -501.60061646]
[-194.80172729 -509.25555420]
[-181.06687927 -500.29531860]
[-182.22930908 -483.93743896]
[-175.22746277 -470.67190552]
[-168.22561646 -457.40637207]
[-161.22378540 -444.14083862]
[-151.22566223 -442.01269531]
[-143.89668274 -434.57528687]
[-141.83018494 -424.11614990]
[-145.94578552 -414.04357910]
[-139.34976196 -400.57165527]
[-132.75373840 -387.09973145]
[-126.15771484 -373.62783813]
[-119.56169128 -360.15591431]
[-103.43454742 -355.39080811]
[-95.58777618 -340.13650513]
[-101.31018066 -323.60711670]
[-94.51046753 -310.23684692]
[-87.71074677 -296.86660767]
[-80.91103363 -283.49633789]
[-74.01006317 -270.17807007]
[-67.00822449 -256.91253662]
[-60.00638199 -243.64700317]
[-53.00453949 -230.38146973]
[-40.22096252 -222.73756409]
[-40.62181091 -206.92143250]
[-33.61997223 -193.65591431]
[-19.35796165 -189.51699829]
[-12.06812668 -176.16360474]
[-16.50610352 -161.23236084]
[-9.50426292 -147.96682739]
[-2.50242257 -134.70130920]
[3.40179014 -130.25190735]
[4.50328636 -121.18090057]
[11.30300045 -107.81063843]
[17.13900757 -103.27215576]
[18.10271454 -94.18547058]
[24.69873428 -80.71355438]
[31.29475594 -67.24163818]
[37.89077759 -53.76972198]
[44.48679733 -40.29780579]
[48.63715363 -37.92907715]
[51.34192276 -32.92646027]
[51.07158279 -26.31544304]
[57.25570679 -12.64955235]
[63.43983078 1.01634002]
[75.73610687 9.42174625]
[74.37643433 25.18441963]
[80.56056213 38.85031128]
[86.74468231 52.51620102]
[92.92881012 66.18209839]
[99.11293030 79.84798431]
[112.58484650 86.44400787]
[127.17172241 82.94786072]
[141.75860596 79.45171356]
[156.34547424 75.95556641]
[170.93235779 72.45941925]
[178.98049927 58.85784149]
[194.30970764 55.01195145]
[207.82543945 63.20344543]
[211.50904846 78.57246399]
[203.17510986 92.00083160]
[187.76800537 95.52174377]
[174.42849731 87.04630280]
[159.84162903 90.54244232]
[145.25474548 94.03858948]
[130.66787720 97.53473663]
[116.08099365 101.03088379]
[109.28128052 114.40114594]
[115.04781342 128.24842834]
[120.81434631 142.09570312]
[126.58087158 155.94297791]
[132.34741211 169.79025269]
[138.11393738 183.63754272]
[143.88046265 197.48481750]
[149.64700317 211.33209229]
[155.41352844 225.17936707]
[161.60346985 231.90106201]
[161.16073608 239.28082275]
[166.71646118 253.21401978]
[172.27217102 267.14721680]
[184.57052612 277.10015869]
[182.09744263 291.78802490]
[187.65316772 305.72122192]
[193.20887756 319.65441895]
[198.76460266 333.58761597]
[204.32031250 347.52081299]
[211.92233276 343.17019653]
[222.20378113 342.62902832]
[233.35397339 347.02987671]
[243.83915710 357.75653076]
[254.32434082 368.48315430]
[270.25274658 372.38415527]
[274.57818604 388.20260620]
[262.85098267 399.66580200]
[247.13511658 394.98141479]
[243.59770203 378.96835327]
[233.11251831 368.24169922]
[222.62733459 357.51507568]
[209.36180115 364.51690674]
[212.30210876 379.22589111]
[215.24241638 393.93490601]
[218.18272400 408.64389038]
[221.12303162 423.35290527]
[224.06333923 438.06188965]
[240.05062866 453.76150513]
[232.33816528 473.98303223]
[236.16545105 488.48654175]
[239.99273682 502.99005127]
[251.92237854 514.24243164]
[247.87956238 530.13543701]
[232.02322388 534.31970215]
[220.66497803 522.49084473]
[225.48922729 506.81732178]
[221.66194153 492.31381226]
[217.83465576 477.81030273]
[210.33195496 475.38500977]
[204.32917786 470.12863159]
[200.85377502 462.84216309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[7 187]
[8 174]
[9 173]
[10 172]
[11 171]
[12 170]
[14 168]
[15 167]
[16 166]
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[22 159]
[23 158]
[24 157]
[25 156]
[28 39]
[29 38]
[30 37]
[40 139]
[41 138]
[42 137]
[43 136]
[44 135]
[46 133]
[47 132]
[48 131]
[49 128]
[50 127]
[51 126]
[52 125]
[53 124]
[54 122]
[55 121]
[56 119]
[57 118]
[58 117]
[61 114]
[62 113]
[64 111]
[65 110]
[66 109]
[67 108]
[69 107]
[70 106]
[71 105]
[72 104]
[76 101]
[77 100]
[78 99]
[79 98]
[80 97]
[82 93]
[83 92]
[84 91]
[85 90]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[177 186]
[178 185]
[179 184]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
