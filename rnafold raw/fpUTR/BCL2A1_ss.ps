%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCUACGCACGAAAGUGACUAGGAGGAAGGAUAUUAUAAAGUGAUGCAAACAGAAAUUCCACCAGCCUCCAUGUAUCAUCAUGUGUCAUAACUCAGUCAAGCUCAGUGAGCAUUCUCAGCACAUUGCCUCAACAGCUUCAAGGUGAGCCAGCUCAAGACUUUGCUCUCCACCAGGCAGAAG\
) } def
/len { sequence length } bind def

/coor [
[85.52997589 175.18296814]
[96.91591644 164.46409607]
[95.88669586 149.49943542]
[94.85747528 134.53479004]
[93.82825470 119.57014465]
[79.02729797 117.13465118]
[73.25731659 130.98049927]
[81.45122528 144.15773010]
[80.30127716 159.63214111]
[70.24964905 171.45349121]
[55.16139603 175.07623291]
[40.83826447 169.10736084]
[32.78778458 155.84201050]
[34.10553741 140.38099670]
[44.28481293 128.66937256]
[59.41147614 125.21051788]
[65.18144989 111.36467743]
[59.76988983 97.37486267]
[46.18435669 91.01614380]
[32.59882355 84.65742493]
[19.01328850 78.29871368]
[12.36421299 78.48542023]
[7.37971687 75.69095612]
[5.07630205 71.48143005]
[-8.28294563 64.66010284]
[-21.64219284 57.83877945]
[-34.53264618 66.07185364]
[-49.71310806 66.74290466]
[-63.10226440 59.77175140]
[-71.15051270 47.11941528]
[-71.78088379 32.23760605]
[-85.14012909 25.41628075]
[-98.49937439 18.59495354]
[-111.85862732 11.77362633]
[-125.21787262 4.95229959]
[-134.41215515 11.86974430]
[-145.47709656 14.83158493]
[-156.79556274 13.44474888]
[-166.72814941 7.94884968]
[-173.85073853 -0.82416201]
[-177.15858459 -11.57572651]
[-176.20797729 -22.73281670]
[-189.19834900 -30.23281670]
[-202.18873596 -37.73281860]
[-215.17912292 -45.23281860]
[-228.16949463 -52.73281860]
[-241.15988159 -60.23281860]
[-254.15025330 -67.73281860]
[-267.14065552 -75.23281860]
[-281.26654053 -69.08746338]
[-296.12869263 -72.39952087]
[-306.07315063 -83.69428253]
[-307.44354248 -98.50170898]
[-320.43392944 -106.00170898]
[-332.72952271 -97.01627350]
[-347.61819458 -93.81508636]
[-362.52035522 -96.95277405]
[-374.85415649 -105.88571167]
[-382.48266602 -119.06621552]
[-384.08419800 -134.21067810]
[-379.38131714 -148.69525146]
[-369.18875122 -160.01036072]
[-355.27249146 -166.19563293]
[-340.04357910 -166.17939758]
[-326.14053345 -159.96449280]
[-315.97213745 -148.62767029]
[-311.30010986 -134.13311768]
[-312.93392944 -118.99208832]
[-299.94354248 -111.49208832]
[-286.43475342 -117.70901489]
[-271.68096924 -114.74423218]
[-261.38156128 -103.52925873]
[-259.64065552 -88.22319794]
[-246.65025330 -80.72319794]
[-233.65988159 -73.22319794]
[-220.66949463 -65.72319794]
[-207.67912292 -58.22319794]
[-194.68873596 -50.72319794]
[-181.69834900 -43.22319794]
[-168.70797729 -35.72319794]
[-152.13427734 -44.30661392]
[-133.58332825 -41.17069626]
[-120.54605103 -27.39916420]
[-118.39654541 -8.40694809]
[-105.03730011 -1.58562088]
[-91.67804718 5.23570633]
[-78.31880188 12.05703354]
[-64.95955658 18.87836075]
[-52.53527451 10.66234684]
[-37.56710815 9.76235676]
[-24.06896400 16.52005196]
[-15.71077538 29.21010780]
[-14.82086658 44.47953033]
[-1.46161866 51.30085754]
[11.89762878 58.12218475]
[25.37200546 64.71318054]
[38.95753860 71.07189178]
[52.54307175 77.43061066]
[66.12860870 83.78932953]
[124.97371674 58.22315979]
[137.27330017 49.63710022]
[149.57287598 41.05104065]
[161.87245178 32.46498108]
[174.17202759 23.87891960]
[185.93382263 14.56977844]
[197.11538696 4.57115126]
[208.29695129 -5.42747545]
[219.47853088 -15.42610264]
[230.66009521 -25.42473030]
[235.78977966 -40.39125824]
[250.43466187 -43.10726547]
[261.61621094 -53.10589218]
[260.94332886 -68.72898865]
[270.51113892 -81.09794617]
[285.80203247 -84.37250519]
[299.59609985 -77.00653076]
[305.38021851 -62.47801208]
[300.42330933 -47.64686203]
[287.06585693 -39.51590347]
[271.61483765 -41.92432404]
[260.43328857 -31.92569542]
[256.10339355 -17.67433739]
[240.65872192 -14.24316120]
[229.47715759 -4.24453449]
[218.29557800 5.75409222]
[207.11401367 15.75271893]
[195.93244934 25.75134659]
[210.90327454 26.68650818]
[221.86959839 36.92073822]
[223.83526611 51.79138565]
[215.90469360 64.52347565]
[201.69102478 69.31635284]
[187.66992188 63.98640060]
[180.22929382 50.96192169]
[182.75808716 36.17849731]
[170.45851135 44.76455688]
[158.15893555 53.35061646]
[145.85935974 61.93667603]
[133.55978394 70.52273560]
[133.17369080 78.01279449]
[145.76092529 86.17131805]
[132.40150452 92.99290466]
[132.01541138 100.48295593]
[143.36697388 110.28816223]
[154.71853638 120.09336853]
[166.07009888 129.89857483]
[174.63294983 133.15148926]
[177.53050232 139.97085571]
[193.09158325 139.27070618]
[204.28884888 149.57002258]
[204.86044312 164.40945435]
[216.04200745 174.40808105]
[227.22357178 184.40670776]
[241.78910828 179.53427124]
[256.83624268 182.61309814]
[268.31738281 192.81501770]
[273.14413452 207.39575195]
[270.01815796 222.43316650]
[259.78030396 233.88226318]
[245.18450928 238.66329956]
[230.15696716 235.49020386]
[218.74002075 225.21650696]
[214.00476074 210.60580444]
[217.22494507 195.58827209]
[206.04338074 185.58964539]
[194.86181641 175.59101868]
[180.05101013 176.67544556]
[168.56887817 166.69470215]
[167.53187561 151.15242004]
[156.26489258 141.25013733]
[144.91333008 131.44493103]
[133.56176758 121.63972473]
[122.21021271 111.83451843]
[108.79290009 118.54092407]
[109.82212830 133.50556946]
[110.85134888 148.47021484]
[111.88056946 163.43487549]
[124.62677765 172.49401855]
[128.51779175 187.63977051]
[121.71638489 201.72077942]
[107.43398285 208.08842468]
[92.41428375 203.73608398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 177]
[3 176]
[4 175]
[5 174]
[6 17]
[7 16]
[18 99]
[19 98]
[20 97]
[21 96]
[24 95]
[25 94]
[26 93]
[31 88]
[32 87]
[33 86]
[34 85]
[35 84]
[42 80]
[43 79]
[44 78]
[45 77]
[46 76]
[47 75]
[48 74]
[49 73]
[53 69]
[54 68]
[100 139]
[101 138]
[102 137]
[103 136]
[104 135]
[105 127]
[106 126]
[107 125]
[108 124]
[109 123]
[111 121]
[112 120]
[143 173]
[144 172]
[145 171]
[146 170]
[148 169]
[151 166]
[152 165]
[153 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
