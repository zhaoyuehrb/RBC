%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCAAUGUUCAAAUGCGCAGCUCUUAGUCGCGGGCCGACUGGUGUUUAUCCGUCACUCGCCGAGGUUCCUUGGGUCAUGGUGCCAGCCUGACUGAGAAGAGGACGCUCCCGGGAGACGAAUGAGGAACCACCUCCUCCUACUGUUCAAGUACAGGGGCCUGGUCCGCAAAGGGAAGAAAAGCAAAAGACGAAA\
) } def
/len { sequence length } bind def

/coor [
[84.67428589 570.02667236]
[69.42899323 569.28924561]
[56.01750946 562.00262451]
[47.10268784 549.61358643]
[44.45458221 534.58190918]
[48.59896851 519.89227295]
[58.71298218 508.46118164]
[72.78847504 502.55834961]
[73.51317596 487.57586670]
[74.23786926 472.59338379]
[63.09251022 465.22998047]
[56.99509430 453.22308350]
[57.63524628 439.66348267]
[64.95252228 428.10144043]
[77.12426758 421.61700439]
[78.09024048 406.64816284]
[79.05621338 391.67929077]
[63.54125214 382.34497070]
[54.86078644 366.35818481]
[55.48765945 348.09252930]
[65.33486938 332.59500122]
[81.75585175 324.19146729]
[81.99750519 309.19342041]
[82.23915863 294.19537354]
[82.48080444 279.19732666]
[82.72245789 264.19924927]
[75.57198334 258.89678955]
[71.60997772 250.77160645]
[71.84227753 241.59715271]
[76.34338379 233.44172668]
[84.21121979 228.20220947]
[85.17719269 213.23335266]
[86.14316559 198.26448059]
[87.10914612 183.29562378]
[88.07511902 168.32675171]
[89.04109192 153.35789490]
[90.00706482 138.38902283]
[90.97304535 123.42015839]
[78.00927734 112.09950256]
[75.38538361 95.08975220]
[84.33509064 80.38876343]
[78.90321350 66.40682220]
[73.47133636 52.42488098]
[68.03945923 38.44293976]
[53.42009735 27.25683784]
[56.75418091 10.03325844]
[51.09775543 -3.85936165]
[45.44133377 -17.75198174]
[39.78491211 -31.64460182]
[34.12849045 -45.53722000]
[21.75842476 -55.40089417]
[24.12512589 -70.10626984]
[18.46870422 -83.99888611]
[12.81228161 -97.89151001]
[7.15585899 -111.78412628]
[-5.21420622 -121.64779663]
[-2.84750342 -136.35317993]
[-8.50392628 -150.24578857]
[-14.16034889 -164.13841248]
[-19.81677055 -178.03103638]
[-31.38532829 -183.75436401]
[-35.80676651 -195.45257568]
[-31.21880913 -206.65434265]
[-36.65068436 -220.63629150]
[-42.08256531 -234.61822510]
[-56.26928329 -241.05055237]
[-61.57880020 -255.30760193]
[-55.35913849 -268.79284668]
[-60.79101562 -282.77478027]
[-66.22289276 -296.75671387]
[-71.65476990 -310.73864746]
[-77.53427124 -324.53836060]
[-90.36643982 -333.79287720]
[-88.71296692 -348.59539795]
[-95.03398132 -362.19851685]
[-101.35499573 -375.80163574]
[-107.67601776 -389.40475464]
[-113.99703217 -403.00787354]
[-120.45998383 -409.48226929]
[-120.30833435 -416.88143921]
[-126.40938568 -430.58462524]
[-132.51043701 -444.28778076]
[-146.08843994 -453.48397827]
[-144.64358521 -469.81933594]
[-129.66223145 -476.48947144]
[-116.55588531 -466.63272095]
[-118.80725098 -450.38885498]
[-112.70619965 -436.68566895]
[-106.60514832 -422.98248291]
[-100.39391327 -409.32888794]
[-94.07289886 -395.72576904]
[-87.75188446 -382.12265015]
[-81.43087006 -368.51953125]
[-75.10984802 -354.91641235]
[-62.72980499 -346.63488770]
[-63.93115616 -330.85937500]
[-61.33301926 -329.77355957]
[-59.01149750 -327.58627319]
[-57.39084625 -324.39880371]
[-56.85042572 -320.46487427]
[-57.67282867 -316.17053223]
[-52.24095154 -302.18859863]
[-46.80907440 -288.20666504]
[-41.37719727 -274.22470093]
[-27.68494797 -268.47509766]
[-21.97707367 -254.37281799]
[-28.10062218 -240.05010986]
[-22.66874504 -226.06816101]
[-17.23686600 -212.08622742]
[-2.98304701 -201.85897827]
[-5.92415142 -183.68745422]
[-0.26772898 -169.79483032]
[5.38869381 -155.90222168]
[11.04511642 -142.00959778]
[23.01059532 -133.13961792]
[21.04847908 -117.44055176]
[26.70490074 -103.54792786]
[32.36132431 -89.65531158]
[38.01774597 -75.76268768]
[49.98322678 -66.89270782]
[48.02111053 -51.19364166]
[53.67753220 -37.30102539]
[59.33395386 -23.40840340]
[64.99037933 -9.51578426]
[70.64679718 4.37683535]
[81.67555237 9.36638832]
[86.49764252 20.90522766]
[82.02140045 33.01106262]
[87.45327759 46.99300385]
[92.88515472 60.97494507]
[98.31703186 74.95688629]
[113.92356873 79.11641693]
[123.76464844 91.92340088]
[138.76026917 91.56094360]
[153.75588989 91.19848633]
[168.75151062 90.83602905]
[183.74713135 90.47357178]
[193.20079041 81.68630219]
[205.70668030 81.70043182]
[214.55360413 89.96244812]
[229.55311584 89.84162140]
[244.55262756 89.72079468]
[259.55215454 89.59996033]
[271.78414917 79.21932220]
[287.49819946 82.45172882]
[294.63980103 96.81755829]
[287.73056030 111.29656982]
[272.07061768 114.78170776]
[259.67297363 104.59947968]
[244.67346191 104.72030640]
[229.67395020 104.84113312]
[214.67443848 104.96196747]
[200.05732727 114.66288757]
[184.10958862 105.46919250]
[169.11396790 105.83164978]
[154.11834717 106.19410706]
[139.12272644 106.55656433]
[124.12710571 106.91902161]
[120.27943420 114.78968048]
[113.96111298 120.85850525]
[105.94190979 124.38613892]
[104.97592926 139.35499573]
[104.00995636 154.32386780]
[103.04398346 169.29272461]
[102.07801056 184.26159668]
[101.11203003 199.23045349]
[100.14605713 214.19932556]
[99.18008423 229.16818237]
[109.84323120 247.74618530]
[97.72051239 264.44091797]
[97.47885895 279.43896484]
[97.23721313 294.43701172]
[96.99555969 309.43505859]
[96.75390625 324.43313599]
[107.79010010 329.24801636]
[116.52719116 337.48278809]
[121.95497894 348.15313721]
[123.45677948 359.99517822]
[120.87940216 371.61502075]
[114.54841614 381.65286255]
[105.22721863 388.94219971]
[94.02507782 392.64526367]
[93.05910492 407.61413574]
[92.09313202 422.58297729]
[105.25102234 433.20138550]
[109.45028687 449.40811157]
[103.22904205 464.77209473]
[89.22035980 473.31808472]
[88.49565887 488.30056763]
[87.77095795 503.28305054]
[101.21102905 510.51681519]
[110.17456818 522.87066650]
[112.88185120 537.89178467]
[108.79534149 552.59765625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 190]
[9 189]
[10 188]
[15 184]
[16 183]
[17 182]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[31 168]
[32 167]
[33 166]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[41 131]
[42 130]
[43 129]
[44 128]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[52 119]
[53 118]
[54 117]
[55 116]
[57 114]
[58 113]
[59 112]
[60 111]
[63 109]
[64 108]
[65 107]
[68 104]
[69 103]
[70 102]
[71 101]
[72 96]
[74 94]
[75 93]
[76 92]
[77 91]
[78 90]
[80 89]
[81 88]
[82 87]
[133 158]
[134 157]
[135 156]
[136 155]
[137 154]
[140 152]
[141 151]
[142 150]
[143 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
