%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGGAAGAAAGGCGAAGGCAAGGCGAAGGGGUGGAGAGUGAUAUGAAGAGCGAGAGAAAAGAGAGGACAGCGGACGAGCAGAUCCGGUAUCUGGAAUCCCGGCGCCUAGAACGUGUUUUUCGGGAGAGCAAAGGCUGUGUCUACGGCAGCCUGGGGAUAUAGCCUCUCCUUCCGAUGAAAAGAGAAAGGAAGA\
) } def
/len { sequence length } bind def

/coor [
[111.65287018 211.26420593]
[124.40379333 203.19721985]
[119.92807770 188.88052368]
[115.45235443 174.56382751]
[110.97663879 160.24711609]
[106.50091553 145.93041992]
[102.02519989 131.61372375]
[97.54947662 117.29701996]
[80.00312042 102.12337494]
[92.15003204 78.64845276]
[79.49024200 70.60297394]
[66.83045197 62.55749893]
[54.17066574 54.51202011]
[41.51087570 46.46654129]
[28.85108566 38.42106247]
[16.19129562 30.37558174]
[3.53150678 22.33010292]
[-10.07499790 29.31653786]
[-25.25140953 28.55934906]
[-37.92690659 20.36190033]
[-44.75169373 7.00981283]
[-43.98204041 -7.86544228]
[-59.77920914 -8.73720264]
[-66.37082672 -22.09384155]
[-79.03061676 -30.13932228]
[-91.69040680 -38.18479919]
[-104.35019684 -46.23027802]
[-117.00998688 -54.27575684]
[-132.24964905 -51.05233002]
[-144.97386169 -59.39193344]
[-147.95298767 -73.94048309]
[-160.61277771 -81.98596191]
[-173.27256775 -90.03144073]
[-185.93235779 -98.07691956]
[-198.59214783 -106.12240601]
[-190.79382324 -93.30889130]
[-185.87988281 -79.13662720]
[-184.07235718 -64.24592590]
[-185.45291138 -49.30959320]
[-189.95916748 -35.00247574]
[-197.38752747 -21.97099876]
[-207.40237427 -10.80395031]
[-219.55119324 -2.00587869]
[-233.28509521 4.02570105]
[-247.98355103 7.01826954]
[-262.98245239 6.83661747]
[-277.60412598 3.48895192]
[-291.18792725 -2.87347317]
[-303.12008667 -11.96319008]
[-312.86154175 -23.36950874]
[-319.97213745 -36.57706833]
[-324.13058472 -50.98912430]
[-325.14898682 -65.95451355]
[-322.98135376 -80.79706573]
[-317.72564697 -94.84616852]
[-309.61926270 -107.46705627]
[-299.02853394 -118.08948517]
[-286.43191528 -126.23352814]
[-272.39855957 -131.53120422]
[-257.56256104 -133.74316406]
[-242.59419250 -132.76945496]
[-228.16978455 -128.65408325]
[-214.93980408 -121.58216095]
[-223.67900085 -133.77340698]
[-232.41818237 -145.96466064]
[-251.20672607 -148.32354736]
[-262.12728882 -163.40106201]
[-258.63168335 -181.36187744]
[-267.75518799 -193.26824951]
[-276.87869263 -205.17460632]
[-286.09686279 -217.00784302]
[-300.72991943 -223.02317810]
[-302.56549072 -237.80424500]
[-311.87768555 -249.56359863]
[-327.60342407 -251.13758850]
[-337.54537964 -263.42306519]
[-335.80523682 -279.13125610]
[-323.41534424 -288.94277954]
[-307.72640991 -287.03665161]
[-298.04641724 -274.54370117]
[-300.11834717 -258.87582397]
[-290.80612183 -247.11645508]
[-276.83914185 -241.94224548]
[-274.33749390 -226.32006836]
[-267.71270752 -223.02420044]
[-264.97235107 -214.29812622]
[-255.84883118 -202.39175415]
[-246.72531128 -190.48539734]
[-235.34574890 -191.47508240]
[-224.79447937 -186.79541016]
[-217.74447632 -177.50514221]
[-216.04255676 -165.84635925]
[-220.22694397 -154.70384216]
[-211.48774719 -142.51260376]
[-202.74855042 -130.32135010]
[-198.83053589 -129.56414795]
[-195.10960388 -127.30108643]
[-192.16741943 -123.60782623]
[-190.54667664 -118.78218842]
[-177.88688660 -110.73670959]
[-165.22709656 -102.69123077]
[-152.56730652 -94.64575195]
[-139.90751648 -86.60027313]
[-125.47068787 -90.08073425]
[-112.51725006 -82.10182190]
[-108.96450806 -66.93554688]
[-96.30471802 -58.89006805]
[-83.64492798 -50.84458923]
[-70.98513794 -42.79911041]
[-58.32535172 -34.75363159]
[-43.43369293 -34.45733643]
[-35.93656158 -20.52523232]
[-22.79577065 -27.53845215]
[-7.80922556 -27.02912331]
[4.99482203 -19.03395271]
[12.12463570 -5.61521339]
[11.57698631 9.67031288]
[24.23677444 17.71579170]
[36.89656448 25.76127052]
[49.55635452 33.80675125]
[62.21614456 41.85223007]
[74.87593079 49.89770889]
[87.53572083 57.94318771]
[100.19551086 65.98867035]
[91.78288269 53.56982422]
[90.38114929 38.63545990]
[96.33593750 24.86809349]
[108.17893219 15.66246986]
[122.98988342 13.28851032]
[137.11671448 18.33158493]
[147.07604980 29.54817390]
[150.41209412 44.17249298]
[146.30226135 58.59848785]
[135.75996399 69.26899719]
[121.38591003 73.55284882]
[136.27874756 75.34263611]
[151.17160034 77.13241577]
[166.06443787 78.92219543]
[180.95727539 80.71198273]
[195.85011292 82.50176239]
[210.74295044 84.29154205]
[225.63578796 86.08132935]
[240.52862549 87.87110901]
[255.42147827 89.66088867]
[270.31430054 91.45067596]
[284.93908691 85.41526794]
[296.65225220 94.61589813]
[311.54507446 96.40567780]
[326.43792725 98.19546509]
[341.29598999 91.25502777]
[354.57873535 100.87274933]
[352.62200928 117.15473938]
[337.43872070 123.35148621]
[324.64813232 113.08830261]
[309.75531006 111.29852295]
[294.86245728 109.50873566]
[281.30291748 115.67215729]
[268.52453613 106.34351349]
[253.63168335 104.55373383]
[238.73884583 102.76394653]
[223.84600830 100.97416687]
[208.95317078 99.18438721]
[194.06033325 97.39459991]
[179.16749573 95.60482025]
[164.27464294 93.81504059]
[149.38180542 92.02525330]
[134.48896790 90.23547363]
[119.59613037 88.44568634]
[119.89635468 102.91870880]
[111.86618042 112.82129669]
[116.34189606 127.13800049]
[120.81761932 141.45469666]
[125.29333496 155.77140808]
[129.76905823 170.08810425]
[134.24478149 184.40480042]
[138.72048950 198.72151184]
[153.79573059 198.08941650]
[168.52069092 201.38156128]
[181.89137268 208.37348938]
[192.99617004 218.58848572]
[201.07791138 231.33006287]
[205.58560181 245.72947693]
[206.21186829 260.80496216]
[202.91403198 275.52862549]
[195.91694641 288.89663696]
[185.69766235 299.99746704]
[172.95297241 308.07431030]
[158.55181885 312.57641602]
[143.47608948 313.19686890]
[128.75367737 309.89334106]
[115.38839722 302.89111328]
[104.29150391 292.66754150]
[96.21958923 279.91973877]
[91.72303009 265.51684570]
[91.10839844 250.44087219]
[94.41760254 235.71974182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 176]
[3 175]
[4 174]
[5 173]
[6 172]
[7 171]
[8 170]
[10 124]
[11 123]
[12 122]
[13 121]
[14 120]
[15 119]
[16 118]
[17 117]
[22 112]
[24 110]
[25 109]
[26 108]
[27 107]
[28 106]
[31 103]
[32 102]
[33 101]
[34 100]
[35 99]
[63 95]
[64 94]
[65 93]
[68 88]
[69 87]
[70 86]
[71 84]
[73 82]
[74 81]
[135 168]
[136 167]
[137 166]
[138 165]
[139 164]
[140 163]
[141 162]
[142 161]
[143 160]
[144 159]
[145 158]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
