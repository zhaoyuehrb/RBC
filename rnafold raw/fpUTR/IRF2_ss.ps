%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGCGGCUCUUCGCAGUUUCCUCUCCUUGUUUUGCUUUCGAUCUGGACUGUUCUCAGGCAAGCCGGGGAGUAACUUUUAGUUUUGCUCCUGCGAUUAUUCAACUGACGGGCUUUCAUUUCCAUUUCACAUACCCUAGCAACACUUAUACCUUGCGGAAUUGUAUUGGUAGCGUGAAAAAAGCACACUGAGAGGGCACC\
) } def
/len { sequence length } bind def

/coor [
[91.89414978 343.13458252]
[76.83460999 345.86752319]
[62.23347092 341.27780151]
[51.44596863 330.42016602]
[46.95099258 315.78958130]
[49.78145599 300.74807739]
[59.28693771 288.75204468]
[73.28314209 282.55813599]
[74.22032166 267.58743286]
[71.49845886 260.70968628]
[75.29093933 252.39065552]
[76.46198273 237.43644714]
[77.63302612 222.48222351]
[78.80406952 207.52799988]
[72.08399963 194.23553467]
[80.87506104 181.08152771]
[82.04610443 166.12730408]
[83.21714783 151.17308044]
[84.38819122 136.21887207]
[79.14741516 130.85375977]
[72.18119812 144.13803101]
[57.39445496 141.61764526]
[55.22232437 126.77574921]
[68.66587830 120.12355804]
[63.42510605 114.75846100]
[48.44754410 115.57861328]
[33.46998215 116.39877319]
[18.49242020 117.21892548]
[3.51485920 118.03908539]
[-11.46270180 118.85923767]
[-26.44026375 119.67939758]
[-39.79673767 128.15966797]
[-52.92802429 121.12983704]
[-67.90558624 121.94999695]
[-82.88314819 122.77014923]
[-97.86071014 123.59030914]
[-112.83827209 124.41046143]
[-127.81583405 125.23062134]
[-142.79339600 126.05077362]
[-153.31417847 137.53775024]
[-168.51524353 138.15614319]
[-179.40148926 128.05538940]
[-194.37904358 128.87554932]
[-207.73551941 137.35583496]
[-220.86680603 130.32598877]
[-231.22640991 142.26141357]
[-246.99703979 143.29234314]
[-258.82226562 132.80714417]
[-259.68640137 117.02649689]
[-249.07675171 105.31278229]
[-233.28785706 104.61553955]
[-221.68696594 115.34843445]
[-209.40179443 106.92681885]
[-195.19920349 113.89798737]
[-180.22164917 113.07783508]
[-170.50340271 101.84880066]
[-155.32569885 100.80368042]
[-143.61355591 111.07321167]
[-128.63598633 110.25305939]
[-113.65842438 109.43289948]
[-98.68086243 108.61274719]
[-83.70330048 107.79258728]
[-68.72574615 106.97243500]
[-53.74818039 106.15227509]
[-41.46300125 97.73065948]
[-27.26041985 104.70183563]
[-12.28285789 103.88167572]
[2.69470310 103.06152344]
[17.67226410 102.24136353]
[32.64982605 101.42121124]
[47.62738800 100.60105133]
[62.60494995 99.78089905]
[67.00241089 85.63264465]
[76.29125214 74.82194519]
[88.60596466 68.84000397]
[101.72225952 68.27481079]
[98.46612549 53.63249207]
[87.91764832 41.84096527]
[92.70767212 27.73759842]
[89.45153809 13.09527493]
[86.19541168 -1.54704750]
[82.93927765 -16.18937111]
[79.68315125 -30.83169365]
[76.42701721 -45.47401428]
[72.48814392 -59.94762421]
[67.87519836 -74.22069550]
[63.26224518 -88.49377441]
[58.64929199 -102.76684570]
[46.12345886 -113.35153198]
[49.29305267 -129.44145203]
[64.89746857 -134.48469543]
[76.88422394 -123.29318237]
[72.92236328 -107.37979889]
[77.53531647 -93.10672760]
[82.14826965 -78.83364868]
[86.76122284 -64.56057739]
[94.58435822 -77.35895538]
[109.13134766 -81.01752472]
[122.07830811 -73.44282532]
[126.01692200 -58.96914673]
[118.69347382 -45.87841797]
[104.29849243 -41.66123581]
[91.06934357 -48.73014450]
[94.32546997 -34.08782196]
[97.58160400 -19.44550133]
[100.83773041 -4.80317783]
[104.09386444 9.83914471]
[107.34999084 24.48146820]
[117.66557312 35.22567749]
[113.10845184 50.37636185]
[116.36457825 65.01868439]
[128.45835876 73.89226532]
[143.40296936 72.60439301]
[158.34757996 71.31652069]
[173.29219055 70.02864838]
[188.23680115 68.74077606]
[176.17967224 59.81745529]
[171.55503845 45.54816055]
[176.08575439 31.24877167]
[188.08396912 22.24637222]
[203.07983398 21.89471626]
[215.48683167 30.32480812]
[220.68284607 44.39610672]
[216.73217773 58.86649323]
[205.10652161 68.34519958]
[220.09507751 68.93116760]
[235.08361816 69.51713562]
[250.07217407 70.10310364]
[265.06072998 70.68907166]
[280.04928589 71.27504730]
[296.13552856 62.32090759]
[310.60485840 72.24484253]
[325.60073853 72.59648132]
[340.59661865 72.94812012]
[355.59249878 73.29975891]
[365.04101562 61.13293457]
[379.67102051 56.91198730]
[393.81390381 62.05425644]
[402.11749268 74.39072418]
[417.11337280 74.74236298]
[432.10925293 75.09400177]
[447.10513306 75.44564056]
[458.49057007 64.81507111]
[473.69351196 65.38529968]
[483.75799561 76.30511475]
[498.75387573 76.65675354]
[506.67437744 63.49768448]
[520.12103271 56.07590103]
[535.47674561 56.38782120]
[548.61096191 64.34954071]
[555.99053955 77.81939697]
[555.63049316 93.17407227]
[547.62762451 106.28322601]
[534.13470459 113.62056732]
[518.78125000 113.21238708]
[505.69723511 105.16848755]
[498.40222168 91.65262604]
[483.40634155 91.30098724]
[472.84112549 101.73705292]
[457.62814331 101.59406281]
[446.75347900 90.44152069]
[431.75759888 90.08988190]
[416.76171875 89.73824310]
[401.76583862 89.38660431]
[392.89315796 101.32029724]
[378.52478027 105.79400635]
[364.10870361 100.89196014]
[355.24084473 88.29563904]
[340.24496460 87.94400024]
[325.24908447 87.59236145]
[310.25320435 87.24072266]
[301.28326416 95.36408997]
[288.78195190 95.18895721]
[279.46331787 86.26359558]
[264.47476196 85.67762756]
[249.48620605 85.09165955]
[234.49765015 84.50568390]
[219.50910950 83.91971588]
[204.52055359 83.33374786]
[189.52467346 83.68538666]
[174.58006287 84.97325897]
[159.63545227 86.26113129]
[144.69084167 87.54900360]
[129.74623108 88.83687592]
[132.24041748 109.62507629]
[120.97143555 128.66961670]
[99.34240723 137.38990784]
[98.17136383 152.34413147]
[97.00032043 167.29835510]
[95.82927704 182.25256348]
[102.46559143 196.61466980]
[93.75829315 208.69905090]
[92.58724976 223.65325928]
[91.41620636 238.60748291]
[90.24516296 253.56170654]
[89.19101715 268.52462769]
[88.25383759 283.49530029]
[101.36831665 291.38638306]
[109.30352783 304.47421265]
[110.23602295 319.75128174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 197]
[9 196]
[11 195]
[12 194]
[13 193]
[14 192]
[16 190]
[17 189]
[18 188]
[19 187]
[25 72]
[26 71]
[27 70]
[28 69]
[29 68]
[30 67]
[31 66]
[33 64]
[34 63]
[35 62]
[36 61]
[37 60]
[38 59]
[39 58]
[42 55]
[43 54]
[45 52]
[76 111]
[77 110]
[79 108]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[85 96]
[86 95]
[87 94]
[88 93]
[112 184]
[113 183]
[114 182]
[115 181]
[116 180]
[125 179]
[126 178]
[127 177]
[128 176]
[129 175]
[130 174]
[132 171]
[133 170]
[134 169]
[135 168]
[139 164]
[140 163]
[141 162]
[142 161]
[145 158]
[146 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
