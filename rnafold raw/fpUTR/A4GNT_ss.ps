%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCUAAGACCUCAAAUACUGGUUAACUGCAUUUGCAGCUAGAAGUUAGGCUCUGAUUCACUGUUUUGUAUUUUCUAAAAGGGUUAUAUGUAAUUUGAAAGAUAGACCUGCCAAGACGUGAGAUCUGUGUUCUCCUUGGUUAGAGCUAACAUUUUUGGUGAGGAAAGCACUGCAGGAGCAGGCUGGCACAGAGAAGAGGAC\
) } def
/len { sequence length } bind def

/coor [
[115.29151917 796.97961426]
[106.11962891 809.13671875]
[92.79278564 816.50659180]
[77.61994934 817.81237793]
[63.22990799 812.82769775]
[52.11581802 802.41632080]
[46.20326996 788.38201904]
[46.51664352 773.15631104]
[53.00164413 759.37719727]
[64.53470612 749.43194580]
[79.11766815 745.04364014]
[80.97002411 730.15844727]
[82.82238007 715.27325439]
[84.67474365 700.38806152]
[73.25932312 692.88482666]
[66.15748596 681.13800049]
[64.80460358 667.41162109]
[69.52156067 654.37994385]
[79.44105530 644.60668945]
[92.66645050 640.04058838]
[94.74893951 625.18585205]
[96.83142853 610.33111572]
[98.79891205 595.46075439]
[100.65126801 580.57556152]
[102.50362396 565.69036865]
[104.35598755 550.80517578]
[96.66278076 535.03540039]
[107.88233948 520.43762207]
[109.50411987 505.52557373]
[111.12590790 490.61349487]
[112.74769592 475.70144653]
[106.43180847 462.21221924]
[115.61581421 449.32949829]
[117.23760223 434.41741943]
[118.85938263 419.50537109]
[120.48117065 404.59329224]
[122.10295868 389.68121338]
[123.72473907 374.76916504]
[125.34652710 359.85708618]
[125.69470215 344.86111450]
[124.76674652 329.88986206]
[123.83879089 314.91857910]
[122.91083527 299.94732666]
[121.98287201 284.97604370]
[121.05491638 270.00479126]
[120.12696075 255.03350830]
[119.19900513 240.06224060]
[106.13094330 229.48077393]
[104.72853088 212.38557434]
[116.34577179 199.31071472]
[115.18624115 184.35559082]
[114.02671051 169.40048218]
[112.86718750 154.44535828]
[111.70765686 139.49024963]
[110.54812622 124.53513336]
[109.38859558 109.58001709]
[107.01973724 118.11653137]
[99.08473206 125.42798615]
[86.55381775 128.44163513]
[71.91320801 124.81002045]
[58.68812943 113.59353638]
[45.22435760 106.98090363]
[30.34983826 112.32170105]
[16.09128380 105.50487518]
[10.90804386 90.57471466]
[17.87524223 76.38903046]
[32.85936356 71.36392975]
[46.97059631 78.48072052]
[51.83699417 93.51713562]
[65.30076599 100.12976837]
[71.30640411 95.63729858]
[62.32146072 83.62601471]
[53.33652115 71.61473846]
[44.35157776 59.60345840]
[32.09471893 50.95653152]
[36.53087616 36.62752151]
[51.52942276 36.41867828]
[56.36285782 50.61851883]
[65.34780121 62.62979507]
[74.33274078 74.64107513]
[83.31768036 86.65235901]
[89.32331848 82.15988159]
[86.78212738 67.37670898]
[84.24092865 52.59353256]
[81.69973755 37.81035233]
[79.15853882 23.02717781]
[74.61785126 15.09371376]
[76.69425201 7.99570227]
[74.38213348 -6.82503033]
[72.07001495 -21.64576340]
[62.29800797 -34.08836746]
[67.98104095 -47.85617065]
[54.11072159 -54.81274033]
[47.00828171 -68.60893250]
[49.40475464 -83.93983459]
[60.37865067 -94.91040039]
[75.71027374 -97.30222321]
[89.50431824 -90.19559479]
[96.45667267 -76.32316589]
[93.89403534 -61.01916504]
[82.80177307 -50.16829300]
[92.40840149 -38.78576279]
[86.89074707 -23.95788193]
[89.20286560 -9.13714886]
[91.51498413 5.68358326]
[93.94171906 20.48598099]
[96.48291016 35.26915741]
[99.02410889 50.05233383]
[101.56529999 64.83551025]
[104.10649872 79.61869049]
[118.46270752 83.96601868]
[128.77819824 73.07608795]
[139.09368896 62.18615341]
[149.40917969 51.29621887]
[159.72467041 40.40628815]
[170.04016113 29.51635551]
[170.90074158 25.24556732]
[172.87948608 21.81826210]
[175.57275391 19.48286057]
[178.53762817 18.33071327]
[181.34674072 18.29693604]
[192.31616211 8.06601715]
[203.28559875 -2.16490197]
[214.25502014 -12.39582062]
[213.25463867 -28.00137329]
[222.56095886 -40.56825256]
[237.77981567 -44.16276550]
[251.72532654 -37.08768845]
[257.81283569 -22.68366241]
[253.16804504 -7.75182247]
[239.98405457 0.65747017]
[224.48593140 -1.42639446]
[213.51651001 8.80452442]
[202.54708862 19.03544235]
[191.57765198 29.26636124]
[180.93009949 39.83184814]
[170.61460876 50.72177887]
[160.29911804 61.61171341]
[149.98362732 72.50164795]
[139.66813660 83.39157867]
[129.35264587 94.28150940]
[124.34371185 108.42048645]
[125.50324249 123.37560272]
[126.66277313 138.33071899]
[127.82230377 153.28582764]
[128.98182678 168.24095154]
[130.14135742 183.19606018]
[131.30088806 198.15118408]
[142.47572327 205.67720032]
[147.20468140 218.08479309]
[143.96997070 230.76222229]
[134.17027283 239.13427734]
[135.09823608 254.10554504]
[136.02618408 269.07681274]
[136.95414734 284.04809570]
[137.88209534 299.01934814]
[138.81005859 313.99063110]
[139.73800659 328.96188354]
[140.66596985 343.93316650]
[148.39988708 331.08068848]
[161.17077637 323.21273804]
[176.12835693 322.08538818]
[189.93429565 327.95022583]
[199.50729370 339.49826050]
[202.71078491 354.15219116]
[198.82981873 368.64144897]
[188.73054504 379.73217773]
[174.66700745 384.94915771]
[159.77796936 383.12796021]
[147.38647461 374.67510986]
[140.25859070 361.47888184]
[138.63681030 376.39093018]
[137.01502991 391.30300903]
[135.39323425 406.21508789]
[133.77145386 421.12713623]
[132.14967346 436.03921509]
[130.52787781 450.95129395]
[136.72776794 465.50711060]
[127.65975952 477.32321167]
[126.03797913 492.23529053]
[124.41619110 507.14736938]
[122.79441071 522.05944824]
[130.25387573 532.58691406]
[128.59207153 544.97741699]
[119.24117279 552.65753174]
[117.38880920 567.54272461]
[115.53645325 582.42791748]
[113.68409729 597.31311035]
[115.73061371 606.22204590]
[111.68616486 612.41363525]
[109.60367584 627.26837158]
[107.52118683 642.12310791]
[120.65650177 652.16076660]
[126.90339661 667.36517334]
[124.64514923 683.55218506]
[114.59159088 696.31872559]
[99.55992889 702.24041748]
[97.70756531 717.12561035]
[95.85520935 732.01080322]
[94.00285339 746.89599609]
[107.06549072 754.72460938]
[115.80931091 767.19317627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 200]
[12 199]
[13 198]
[14 197]
[20 192]
[21 191]
[22 190]
[23 188]
[24 187]
[25 186]
[26 185]
[28 182]
[29 181]
[30 180]
[31 179]
[33 177]
[34 176]
[35 175]
[36 174]
[37 173]
[38 172]
[39 171]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[47 152]
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[55 143]
[56 142]
[61 70]
[62 69]
[82 110]
[83 109]
[84 108]
[85 107]
[86 106]
[88 105]
[89 104]
[90 103]
[92 101]
[111 141]
[112 140]
[113 139]
[114 138]
[115 137]
[116 136]
[121 135]
[122 134]
[123 133]
[124 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
