%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGUGGGGGAGGAGGAGGAGGAGUUGGAAGGGGAGGAGGAAGAGGGGGAGCAGGAAGAGGGGCAGAAGGAAGAAGAAGAGGGGGAGGAGAAAGAGAUAGAAGAGUAAGAGGAGGGGGAAGAAAGACAAGGGGAAGGGGAGGAGGAGGAGGACGGGGAGGAGCUUCGCCGCGGCCUGCUCCGCCCAGCCGGGGUCGGUGGCCGC\
) } def
/len { sequence length } bind def

/coor [
[-193.48759460 80.37452698]
[-198.45341492 94.53255463]
[-204.17204285 108.40361023]
[-210.62698364 121.94772339]
[-217.79962158 135.12582397]
[-225.66926575 147.89991760]
[-234.21325684 160.23318481]
[-243.40692139 172.09005737]
[-253.22378540 183.43635559]
[-263.63552856 194.23934937]
[-274.61212158 204.46791077]
[-286.12191772 214.09252930]
[-298.13174438 223.08547974]
[-310.60699463 231.42080688]
[-323.51162720 239.07447815]
[-336.80853271 246.02444458]
[-350.45928955 252.25065613]
[-364.42456055 257.73516846]
[-378.66412354 262.46215820]
[-393.13684082 266.41799927]
[-407.80108643 269.59130859]
[-422.61447144 271.97290039]
[-437.53436279 273.55590820]
[-452.51773071 274.33581543]
[-467.52133179 274.31030273]
[-482.50195312 273.47952271]
[-497.41638184 271.84579468]
[-512.22161865 269.41387939]
[-526.87493896 266.19076538]
[-541.33416748 262.18576050]
[-555.55755615 257.41040039]
[-569.50415039 251.87847900]
[-583.13366699 245.60591125]
[-596.40686035 238.61079407]
[-609.28540039 230.91329956]
[-621.73223877 222.53562927]
[-633.71142578 213.50192261]
[-645.18847656 203.83824158]
[-656.13024902 193.57244873]
[-666.50524902 182.73413086]
[-676.28344727 171.35453796]
[-685.43676758 159.46649170]
[-693.93878174 147.10426331]
[-701.76501465 134.30349731]
[-708.89282227 121.10108948]
[-715.30169678 107.53512573]
[-720.97314453 93.64471436]
[-725.89080811 79.46990204]
[-730.04058838 65.05155182]
[-733.41040039 50.43124771]
[-735.99060059 35.65114212]
[-737.77374268 20.75384331]
[-738.75463867 5.78230858]
[-738.93054199 -9.22029495]
[-738.30090332 -24.21071053]
[-736.86749268 -39.14571762]
[-734.63452148 -53.98225403]
[-731.60839844 -68.67754364]
[-727.79779053 -83.18921661]
[-723.21380615 -97.47542572]
[-717.86956787 -111.49498749]
[-711.78045654 -125.20747375]
[-704.96417236 -138.57334900]
[-697.44018555 -151.55407715]
[-689.23034668 -164.11224365]
[-680.35827637 -176.21160889]
[-670.84948730 -187.81732178]
[-660.73144531 -198.89588928]
[-650.03338623 -209.41539001]
[-638.78607178 -219.34548950]
[-627.02191162 -228.65754700]
[-614.77496338 -237.32473755]
[-602.08038330 -245.32203674]
[-588.97479248 -252.62640381]
[-575.49609375 -259.21679688]
[-561.68304443 -265.07415771]
[-547.57550049 -270.18167114]
[-533.21417236 -274.52456665]
[-518.64044189 -278.09033203]
[-503.89627075 -280.86865234]
[-489.02426147 -282.85159302]
[-474.06723022 -284.03338623]
[-459.06832886 -284.41061401]
[-444.07083130 -283.98220825]
[-429.11791992 -282.74942017]
[-414.25274658 -280.71575928]
[-399.51815796 -277.88714600]
[-384.95666504 -274.27169800]
[-370.61019897 -269.87982178]
[-356.52017212 -264.72424316]
[-342.72720337 -258.81976318]
[-329.27102661 -252.18344116]
[-316.19049072 -244.83441162]
[-303.52328491 -236.79383850]
[-291.30590820 -228.08493042]
[-279.57360840 -218.73280334]
[-268.36022949 -208.76438904]
[-257.69808960 -198.20845032]
[-247.61793518 -187.09542847]
[-238.14881897 -175.45735168]
[-229.31803894 -163.32778931]
[-221.15106201 -150.74169922]
[-213.67144775 -137.73538208]
[-206.90075684 -124.34632111]
[-200.85850525 -110.61314392]
[-195.56210327 -96.57543182]
[-191.02685547 -82.27367401]
[-187.26580811 -67.74908447]
[-184.28981018 -53.04356003]
[-182.10745239 -38.19948959]
[-180.72502136 -23.25967979]
[-180.14651489 -8.26720333]
[-180.37356567 6.73471308]
[-181.40556335 21.70281410]
[-183.23950195 36.59394073]
[-169.35282898 31.20789528]
[-157.12295532 41.24486160]
[-142.35530090 43.87473297]
[-134.79917908 32.23677444]
[-123.34143066 24.33355141]
[-109.69371796 21.38586044]
[-95.91026306 23.87116241]
[-84.07859802 31.44661140]
[-76.00343323 42.99592590]
[-72.93141174 56.79376602]
[-58.20578766 59.64963150]
[-43.48016357 62.50550079]
[-32.73574448 52.22467041]
[-17.82138252 50.21821976]
[-4.42878103 57.46332932]
[2.20637059 71.36588287]
[16.93199539 74.22174835]
[24.78373146 65.93662262]
[35.77432251 62.43642807]
[47.20645142 64.70165253]
[56.21544266 72.28267670]
[60.48706436 83.38334656]
[75.11825562 86.68913269]
[89.74944305 89.99492645]
[103.15679932 86.02824402]
[113.55634308 95.37388611]
[128.18753052 98.67967224]
[142.81872559 101.98546600]
[157.44992065 105.29125977]
[172.61596680 100.78556061]
[183.32511902 111.13753510]
[197.95631409 114.44332886]
[212.58750916 117.74911499]
[225.84790039 109.57601166]
[240.63891602 113.13698578]
[248.34899902 125.82911682]
[257.41421509 124.66780090]
[263.17825317 129.29930115]
[277.75708008 132.82890320]
[292.33587646 136.35852051]
[307.56921387 132.08576965]
[318.11846924 142.60063171]
[332.69726562 146.13024902]
[347.27609253 149.65986633]
[362.84756470 144.51580811]
[374.90646362 155.62954712]
[371.04760742 171.56822205]
[355.24069214 175.93548584]
[343.74649048 164.23867798]
[329.16766357 160.70906067]
[314.58883667 157.17944336]
[300.39831543 161.70466614]
[288.80627441 150.93733215]
[274.22744751 147.40773010]
[259.64865112 143.87811279]
[245.04321289 140.46031189]
[232.62530518 148.60469055]
[217.74009705 145.46057129]
[209.28170776 132.38031006]
[194.65052795 129.07450867]
[180.01933289 125.76872253]
[165.89979553 130.51087952]
[154.14411926 119.92244720]
[139.51293945 116.61665344]
[124.88174438 113.31086731]
[110.25055695 110.00507355]
[96.84320068 113.97175598]
[86.44365692 104.62611389]
[71.81246185 101.32032776]
[57.18127441 98.01453400]
[41.56453705 108.73328400]
[23.38292503 104.70724487]
[14.07612896 88.94737244]
[-0.64949608 86.09150696]
[-12.00062656 96.50582123]
[-27.13064384 98.21929932]
[-40.21370316 90.78306580]
[-46.33602905 77.23112488]
[-61.06165314 74.37525940]
[-75.78727722 71.51939392]
[-85.40174103 84.64277649]
[-99.72492218 92.23342133]
[-115.86642456 92.81697845]
[-130.59385681 86.32734680]
[-140.98011780 74.10978699]
[-144.98516846 58.64239502]
[-159.75282288 56.01251984]
[-174.69578552 61.21046448]
[-185.86938477 51.36160278]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[115 204]
[117 202]
[118 201]
[125 195]
[126 194]
[127 193]
[131 189]
[132 188]
[137 185]
[138 184]
[139 183]
[141 181]
[142 180]
[143 179]
[144 178]
[146 176]
[147 175]
[148 174]
[151 171]
[153 170]
[154 169]
[155 168]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
