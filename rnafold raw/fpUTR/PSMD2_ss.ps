%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCGAGGGGGUGGGUGGGUCGCCGAGCGCCCCGGCUCGCCCCGGCGUUUCCGGUCGCAGGCGGGCUCUGGAGGAGGAGGGGCGCCGCGACCGACGCGCGCGAGUUGGUCUGGGAAAAAGGGCGGUGCGAGCGGGUGCGCGCGCAGCGGGCCGGCAGUGGCGGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[51.41237640 80.97530365]
[38.37604141 73.55546570]
[25.33970833 66.13562775]
[12.30337524 58.71579361]
[-0.73295933 51.29595566]
[-13.76929379 43.87611771]
[-26.80562782 36.45627975]
[-43.56599426 41.40129852]
[-58.43441772 32.87957382]
[-62.47681427 16.57304001]
[-78.29687500 16.76347733]
[-85.77006531 3.87935162]
[-98.94128418 -3.29832196]
[-112.11250305 -10.47599506]
[-127.93256378 -10.28555965]
[-135.40576172 -23.16968346]
[-148.57698059 -30.34735870]
[-164.39703369 -30.15692139]
[-171.87022400 -43.04104614]
[-185.04144287 -50.21871948]
[-198.21266174 -57.39639282]
[-211.38388062 -64.57406616]
[-224.55509949 -71.75173950]
[-237.72631836 -78.92941284]
[-246.79826355 -80.29802704]
[-251.07281494 -86.36336517]
[-260.11791992 -87.89938354]
[-264.27966309 -94.04267883]
[-277.17666626 -101.70214844]
[-290.07366943 -109.36161041]
[-302.97067261 -117.02108002]
[-315.86764526 -124.68054962]
[-328.76464844 -132.34001160]
[-341.66165161 -139.99948120]
[-355.26925659 -146.31083679]
[-369.44702148 -151.20890808]
[-383.62478638 -156.10699463]
[-397.80252075 -161.00506592]
[-411.98028564 -165.90315247]
[-426.15805054 -170.80123901]
[-440.33581543 -175.69931030]
[-454.51354980 -180.59739685]
[-472.48571777 -176.67118835]
[-483.48361206 -190.32502747]
[-497.74945068 -194.96028137]
[-512.01531982 -199.59553528]
[-526.28112793 -204.23078918]
[-539.44580078 -195.79125977]
[-554.94866943 -197.83952332]
[-565.46972656 -209.40849304]
[-566.04132080 -225.03562927]
[-556.39349365 -237.34226990]
[-541.08172607 -240.51762390]
[-527.33569336 -233.06236267]
[-521.64587402 -218.49664307]
[-507.38003540 -213.86138916]
[-493.11419678 -209.22613525]
[-478.84835815 -204.59088135]
[-467.90637207 -209.80572510]
[-455.96643066 -206.03083801]
[-449.61547852 -194.77514648]
[-435.43771362 -189.87707520]
[-421.25997925 -184.97898865]
[-407.08221436 -180.08091736]
[-392.90444946 -175.18283081]
[-378.72668457 -170.28474426]
[-364.54895020 -165.38667297]
[-350.37118530 -160.48858643]
[-358.98004150 -172.77221680]
[-361.00747681 -187.63456726]
[-356.00326538 -201.77522278]
[-345.07870483 -212.05401611]
[-330.65972900 -216.18840027]
[-315.94830322 -213.26023865]
[-304.21133423 -203.91981506]
[-298.05520630 -190.24128723]
[-298.84698486 -175.26219177]
[-306.41085815 -162.30888367]
[-319.06710815 -154.25784302]
[-334.00219727 -152.89648438]
[-321.10519409 -145.23701477]
[-308.20819092 -137.57754517]
[-295.31118774 -129.91807556]
[-282.41418457 -122.25861359]
[-269.51721191 -114.59914398]
[-256.62020874 -106.93967438]
[-243.65298462 -99.39970398]
[-230.54864502 -92.10063171]
[-217.37742615 -84.92295837]
[-204.20620728 -77.74528503]
[-191.03498840 -70.56761169]
[-177.86376953 -63.38993835]
[-164.69255066 -56.21226501]
[-149.81459045 -56.91609573]
[-141.39930725 -43.51857758]
[-128.22808838 -36.34090424]
[-113.35011292 -37.04473495]
[-104.93482971 -23.64721489]
[-91.76361084 -16.46953964]
[-78.59239197 -9.29186726]
[-63.71442795 -9.99569893]
[-55.29914093 3.40182185]
[-43.54687881 -1.93679571]
[-30.67582703 0.51683253]
[-21.44111443 10.08490753]
[-19.38578987 23.41994667]
[-6.34945583 30.83978271]
[6.68687820 38.25962067]
[19.72321320 45.67945862]
[32.75954819 53.09929657]
[45.79587936 60.51913452]
[58.83221436 67.93897247]
[66.91628265 59.64949036]
[76.62940979 53.34690094]
[87.49333191 49.34154510]
[98.97308350 47.83064651]
[110.50340271 48.88860703]
[121.51653290 52.46332932]
[131.47016907 58.37879562]
[139.87419128 66.34371948]
[146.31477356 75.96590424]
[150.47479248 86.77154541]
[152.14938354 98.22856140]
[151.25610352 109.77281189]
[165.43386841 114.67089081]
[181.00408936 111.86401367]
[190.50717163 123.33312988]
[204.68493652 128.23121643]
[218.86268616 133.12928772]
[233.04045105 138.02737427]
[248.61067200 135.22048950]
[258.11376953 146.68960571]
[272.29150391 151.58769226]
[286.46926880 156.48576355]
[302.45886230 152.84364319]
[313.40789795 165.05227661]
[308.05291748 180.55249023]
[291.90270996 183.39898682]
[281.57119751 170.66352844]
[267.39343262 165.76544189]
[253.21568298 160.86737061]
[238.65953064 164.02459717]
[228.14236450 152.20512390]
[213.96459961 147.30705261]
[199.78684998 142.40896606]
[185.60908508 137.51087952]
[171.05294800 140.66810608]
[160.53578186 128.84864807]
[146.35801697 123.95056915]
[138.88424683 134.79527283]
[128.93313599 143.42315674]
[135.36993408 156.97186279]
[141.80674744 170.52056885]
[148.24356079 184.06927490]
[161.15419006 193.21400452]
[159.62702942 208.03012085]
[171.88526917 219.74215698]
[164.02435303 234.76354980]
[147.41387939 231.36817932]
[146.07832336 214.46691895]
[133.62809753 206.29129028]
[134.69485474 190.50608826]
[128.25804138 176.95738220]
[121.82122803 163.40866089]
[115.38442230 149.85995483]
[96.11121368 152.03434753]
[77.37531281 147.01934814]
[61.76536942 135.50787354]
[51.43815994 119.09040833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 112]
[2 111]
[3 110]
[4 109]
[5 108]
[6 107]
[7 106]
[10 102]
[12 100]
[13 99]
[14 98]
[16 96]
[17 95]
[19 93]
[20 92]
[21 91]
[22 90]
[23 89]
[24 88]
[26 87]
[28 86]
[29 85]
[30 84]
[31 83]
[32 82]
[33 81]
[34 80]
[35 68]
[36 67]
[37 66]
[38 65]
[39 64]
[40 63]
[41 62]
[42 61]
[44 58]
[45 57]
[46 56]
[47 55]
[124 149]
[125 148]
[127 146]
[128 145]
[129 144]
[130 143]
[132 141]
[133 140]
[134 139]
[151 165]
[152 164]
[153 163]
[154 162]
[156 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
