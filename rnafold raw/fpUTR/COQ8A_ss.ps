%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGCCCGCGGGGCGGGGCUUGUGAGCUGGGGCUCCCCCGGAGCGGGCGAGUUGGUAAACAGAUCCGGAGCGCGUGGCGGGCGUCAGCGCGGUGGCCAGCGCGCAGAGGCGGGCGCGGAGGCGGCUAGAAGGUGACCGCGGAUCCCAGCUUCCUGCAGCCAGCCCUGAAGG\
) } def
/len { sequence length } bind def

/coor [
[95.68072510 342.38668823]
[83.59178925 352.56671143]
[67.85260010 351.13369751]
[57.80094528 338.93780518]
[59.40028763 323.21466064]
[71.70176697 313.29251099]
[73.06185913 298.35430908]
[63.36051941 287.11065674]
[64.52704620 271.94180298]
[76.38619232 261.84237671]
[77.74628448 246.90417480]
[79.10637665 231.96595764]
[80.46646881 217.02774048]
[81.82656097 202.08953857]
[83.18664551 187.15132141]
[75.67847443 177.63839722]
[76.71250153 165.16094971]
[86.27762604 156.47335815]
[87.90875244 141.56231689]
[89.53987122 126.65126038]
[91.17099762 111.74021149]
[85.38694000 106.96582794]
[82.90161896 121.75849915]
[68.84815979 127.00257111]
[57.27987289 117.45402527]
[59.76492310 102.66130829]
[73.81883240 97.41706848]
[68.03477478 92.64268494]
[53.70309830 97.07021332]
[39.37141800 101.49773407]
[25.03973961 105.92526245]
[10.70806122 110.35278320]
[-3.62361836 114.78031158]
[-16.97235489 125.23246765]
[-30.71133423 115.29885101]
[-24.96925545 99.34689331]
[-8.05114269 100.44863129]
[6.28053617 96.02111053]
[20.61221504 91.59358215]
[34.94389343 87.16606140]
[49.27557373 82.73853302]
[63.60725403 78.31101227]
[84.33720398 79.90974426]
[97.53713226 91.77787781]
[104.83969879 78.67549133]
[112.14226532 65.57310486]
[119.44483185 52.47071838]
[126.74739838 39.36833572]
[128.20124817 30.31329155]
[134.30339050 26.09607697]
[141.84266663 13.12845421]
[149.38195801 0.16083241]
[156.92123413 -12.80678940]
[164.46051025 -25.77441216]
[171.99980164 -38.74203491]
[179.53907776 -51.70965576]
[164.75706482 -49.16168976]
[152.40666199 -57.67446518]
[149.52774048 -72.39559937]
[157.76130676 -84.93386841]
[172.41415405 -88.14230347]
[185.13397217 -80.19206238]
[188.67001343 -65.61292267]
[197.57470703 -77.68381500]
[206.47940063 -89.75470734]
[215.38409424 -101.82559967]
[224.28878784 -113.89649200]
[233.19348145 -125.96738434]
[231.03549194 -141.39401245]
[240.23806763 -153.50875854]
[254.95829773 -155.47100830]
[263.75302124 -167.62225342]
[272.43707275 -179.85285950]
[281.12109375 -192.08345032]
[282.80172729 -207.81513977]
[296.47879028 -213.71322632]
[291.68386841 -228.35272217]
[296.37374878 -242.83921814]
[308.55047607 -251.68177795]
[323.42117310 -251.65888977]
[332.10519409 -263.88949585]
[333.78582764 -279.62118530]
[347.46289062 -285.51925659]
[356.14694214 -297.74984741]
[364.83096313 -309.98043823]
[373.51501465 -322.21102905]
[371.07723999 -337.59594727]
[380.05831909 -349.87579346]
[394.74047852 -352.10501099]
[403.42453003 -364.33560181]
[412.10855103 -376.56622314]
[420.79260254 -388.79681396]
[422.47320557 -404.52850342]
[436.15026855 -410.42657471]
[437.83090210 -426.15826416]
[451.50796509 -432.05633545]
[460.19201660 -444.28692627]
[468.87603760 -456.51754761]
[462.40365601 -470.44607544]
[463.77865601 -485.74328613]
[472.63116455 -498.29431152]
[486.57992554 -504.72302246]
[501.87274170 -503.30007935]
[514.39599609 -494.40826416]
[520.78094482 -480.43942261]
[519.31005859 -465.15112305]
[510.37902832 -452.65582275]
[496.39025879 -446.31472778]
[481.10662842 -447.83349609]
[472.42260742 -435.60290527]
[463.73855591 -423.37231445]
[462.67907715 -408.51544189]
[448.38088989 -401.74255371]
[447.32138062 -386.88565063]
[433.02319336 -380.11276245]
[424.33914185 -367.88217163]
[415.65512085 -355.65158081]
[406.97106934 -343.42098999]
[409.70669556 -328.82467651]
[401.07409668 -316.29742432]
[385.74560547 -313.52700806]
[377.06155396 -301.29641724]
[368.37753296 -289.06579590]
[359.69348145 -276.83520508]
[358.63400269 -261.97833252]
[344.33581543 -255.20544434]
[335.65176392 -242.97485352]
[340.57574463 -228.94300842]
[336.24179077 -214.53189087]
[324.11120605 -205.32847595]
[308.70938110 -205.02919006]
[307.64990234 -190.17230225]
[293.35168457 -183.39941406]
[284.66766357 -171.16882324]
[275.98361206 -158.93821716]
[274.67037964 -151.63778687]
[267.02920532 -146.56631470]
[269.49932861 -131.92274475]
[260.64065552 -119.55429840]
[245.26437378 -117.06269073]
[236.35968018 -104.99179840]
[227.45498657 -92.92090607]
[218.55029297 -80.85001373]
[209.64559937 -68.77912140]
[200.74090576 -56.70823288]
[192.50669861 -44.17037582]
[184.96742249 -31.20275307]
[177.42814636 -18.23513031]
[169.88885498 -5.26750755]
[162.34957886 7.70011425]
[154.81028748 20.66773605]
[147.27101135 33.63536072]
[139.84977722 46.67090225]
[132.54721069 59.77328491]
[125.24465179 72.87567139]
[117.94208527 85.97805786]
[110.63951874 99.08044434]
[106.08204651 113.37133026]
[104.45092773 128.28237915]
[102.81980133 143.19343567]
[101.18868256 158.10449219]
[109.00302124 174.76010132]
[98.12486267 188.51141357]
[96.76477051 203.44963074]
[95.40467834 218.38783264]
[94.04458618 233.32604980]
[92.68449402 248.26426697]
[91.32440186 263.20248413]
[101.16460419 275.27758789]
[99.57247925 290.40768433]
[88.00006866 299.71438599]
[86.63998413 314.65258789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 172]
[7 171]
[10 168]
[11 167]
[12 166]
[13 165]
[14 164]
[15 163]
[18 161]
[19 160]
[20 159]
[21 158]
[28 42]
[29 41]
[30 40]
[31 39]
[32 38]
[33 37]
[44 157]
[45 156]
[46 155]
[47 154]
[48 153]
[50 152]
[51 151]
[52 150]
[53 149]
[54 148]
[55 147]
[56 146]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[71 137]
[72 135]
[73 134]
[74 133]
[76 131]
[80 127]
[81 126]
[83 124]
[84 123]
[85 122]
[86 121]
[89 118]
[90 117]
[91 116]
[92 115]
[94 113]
[96 111]
[97 110]
[98 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
