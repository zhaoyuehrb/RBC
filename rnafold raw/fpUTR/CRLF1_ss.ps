%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCGGGCGGGGCCAGCGGCGCAUUAGCGCCUUGUCAAUUCGGCUGCUCAGACUUGCUCCGGCCUCCGCGUCCGCGCCCAGCGACGUGCGGGCGGCCUGGCCCGCGCCCUCCCGCGCCCGGCCUGCGUCCCGCGCCCUGCGCCACCGCCGCCGAGCCGCAGCCCGCCGCGCGCCCCCGGCAGCGCCGGCCCC\
) } def
/len { sequence length } bind def

/coor [
[71.12783813 201.66722107]
[71.12783813 186.66722107]
[71.12783813 171.66722107]
[71.12783813 156.66722107]
[71.12783813 141.66722107]
[71.12783813 126.66721344]
[62.40909576 114.46133423]
[48.21977234 109.59685516]
[34.03045273 104.73237610]
[19.84112930 99.86790466]
[5.65180635 95.00342560]
[-8.57624054 90.25340271]
[-22.84208870 85.61814880]
[-37.10793686 80.98289490]
[-51.37378311 76.34764099]
[-65.63963318 71.71238708]
[-79.90547943 67.07713318]
[-94.17132568 62.44187546]
[-108.47405243 57.92168808]
[-123.14626312 61.04036331]
[-134.45368958 70.89643860]
[-145.76110840 80.75251007]
[-157.06852722 90.60858917]
[-168.37594604 100.46466064]
[-173.17942810 116.14454651]
[-189.21888733 119.56036377]
[-199.99430847 107.19822693]
[-194.42085266 91.77523804]
[-178.23202515 89.15724182]
[-166.92460632 79.30117035]
[-155.61718750 69.44509125]
[-144.30975342 59.58901596]
[-133.00233459 49.73294067]
[-135.14692688 42.54609680]
[-149.52061462 46.83528137]
[-163.89430237 51.12446976]
[-176.23907471 59.64542007]
[-188.15771484 50.53794479]
[-183.17903137 36.38829041]
[-168.18348694 36.75078201]
[-153.80979919 32.46159744]
[-139.43611145 28.17241096]
[-141.58070374 20.98556709]
[-156.44027710 18.93786240]
[-171.29985046 16.89015770]
[-182.04067993 24.04715919]
[-194.38235474 22.02713013]
[-201.78938293 12.45295620]
[-216.61404419 10.16612911]
[-227.44596863 21.27688599]
[-242.74557495 23.86563873]
[-256.62985229 16.93696022]
[-263.76000977 3.15506744]
[-261.39434814 -12.18061924]
[-250.44252014 -23.17321587]
[-235.11573792 -25.59584618]
[-221.30744934 -18.51695633]
[-214.32722473 -4.65852642]
[-199.50256348 -2.37170005]
[-183.51860046 -9.60225010]
[-169.25215149 2.03058529]
[-154.39257812 4.07828951]
[-139.53300476 6.12599373]
[-131.51602173 -6.55185747]
[-139.73620605 -19.09890938]
[-147.95639038 -31.64596176]
[-156.17657471 -44.19301224]
[-170.21127319 -51.49630737]
[-170.71395874 -66.38243103]
[-178.93414307 -78.92948151]
[-187.15432739 -91.47653198]
[-195.37451172 -104.02358246]
[-203.59469604 -116.57064056]
[-211.81489563 -129.11769104]
[-219.14550781 -134.59031677]
[-220.06454468 -141.93374634]
[-228.08152771 -154.61160278]
[-243.35363770 -159.52505493]
[-248.89918518 -174.57917786]
[-240.46408081 -188.22573853]
[-224.51901245 -189.99626160]
[-213.29570007 -178.53254700]
[-215.40367126 -162.62858582]
[-207.38668823 -149.95074463]
[-199.26783752 -137.33787537]
[-191.04765320 -124.79082489]
[-182.82746887 -112.24377441]
[-174.60726929 -99.69672394]
[-166.38708496 -87.14966583]
[-158.16690063 -74.60261536]
[-144.72016907 -68.19676971]
[-143.62953186 -52.41320038]
[-135.40934753 -39.86614990]
[-127.18915558 -27.31909752]
[-118.96896362 -14.77204514]
[-95.74690247 16.85493088]
[-104.06922150 43.58301544]
[-96.74228668 42.54059982]
[-89.53607178 48.17602921]
[-75.27022552 52.81128311]
[-61.00437546 57.44653702]
[-46.73852921 62.08179474]
[-32.47267914 66.71704865]
[-18.20683289 71.35230255]
[-3.94098520 75.98755646]
[3.40179157 75.06331635]
[10.51628304 80.81410217]
[24.70560455 85.67858124]
[38.89492798 90.54306030]
[53.08425140 95.40753174]
[67.27357483 100.27201080]
[70.44944763 83.70750427]
[81.69062042 70.45169067]
[98.47804260 64.25447083]
[116.65178680 67.18891144]
[131.44059753 78.99530029]
[146.43621826 78.63284302]
[161.43183899 78.27038574]
[176.42745972 77.90793610]
[190.03663635 69.83942413]
[202.94715881 77.26692963]
[217.94276428 76.90447235]
[232.93838501 76.54201508]
[247.93400574 76.17956543]
[262.91650391 75.45486450]
[277.87710571 74.36833954]
[292.83767700 73.28181458]
[307.79827881 72.19529724]
[322.75888062 71.10877228]
[335.96234131 62.39218521]
[349.21664429 69.18726349]
[362.42010498 60.47067642]
[375.67440796 67.26575470]
[390.63500977 66.17922974]
[398.98046875 62.43211746]
[405.84503174 65.19769287]
[420.82119751 64.35232544]
[427.59722900 55.82239532]
[437.74276733 52.50530243]
[447.82519531 55.26887131]
[454.57153320 62.96519852]
[469.56713867 62.60274124]
[484.56274414 62.24028397]
[498.27316284 53.24266052]
[512.79681396 60.85806656]
[513.19311523 77.25242615]
[499.05429077 85.56063080]
[484.92520142 77.23590851]
[469.92959595 77.59835815]
[454.93395996 77.96081543]
[439.22225952 89.21829224]
[421.66653442 79.32849121]
[406.69039917 80.17385101]
[391.72152710 81.13983154]
[376.76092529 82.22634888]
[364.62753296 90.86522675]
[350.30316162 84.14785767]
[338.16976929 92.78673553]
[323.84539795 86.06937408]
[308.88479614 87.15589142]
[293.92422485 88.24241638]
[278.96362305 89.32893372]
[264.00302124 90.41545868]
[261.42755127 92.84201050]
[257.54382324 94.13489532]
[252.90063477 93.69065094]
[248.29646301 91.17517853]
[233.30084229 91.53763580]
[218.30522156 91.90009308]
[203.30960083 92.26255035]
[190.77301025 100.30513000]
[176.78990173 92.90355682]
[161.79429626 93.26600647]
[146.79867554 93.62846375]
[131.80305481 93.99092102]
[127.59242249 100.19741821]
[140.00529480 108.61886597]
[131.58364868 121.03160095]
[119.17116547 112.61041260]
[114.96054077 118.81691742]
[120.16646576 132.88455200]
[125.37238312 146.95217896]
[136.54005432 159.70834351]
[127.37393188 173.97082520]
[111.13139343 169.11117554]
[111.30474854 152.15811157]
[106.09883118 138.09046936]
[100.89290619 124.02283478]
[86.12783813 126.66721344]
[86.12783813 141.66722107]
[86.12783813 156.66722107]
[86.12783813 171.66722107]
[86.12783813 186.66722107]
[86.12783813 201.66722107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[4 191]
[5 190]
[6 189]
[7 111]
[8 110]
[9 109]
[10 108]
[11 107]
[12 105]
[13 104]
[14 103]
[15 102]
[16 101]
[17 100]
[18 99]
[19 97]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[43 63]
[44 62]
[45 61]
[48 59]
[49 58]
[64 95]
[65 94]
[66 93]
[67 92]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[74 85]
[76 84]
[77 83]
[116 175]
[117 174]
[118 173]
[119 172]
[121 170]
[122 169]
[123 168]
[124 167]
[125 163]
[126 162]
[127 161]
[128 160]
[129 159]
[131 157]
[133 155]
[134 154]
[136 153]
[137 152]
[141 150]
[142 149]
[143 148]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
