%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCCCAGCCGCCGCGCCGAGCCCAGCCGAGCCGAGCCGAGCCGAGCCGAGGCGAGCAUCUCCCACCGCCGCCGCCCCGCGCCCCAGGCGCCCGCCCCCCACCCGCUCCAGCGCCCUGCCGCGGGCCAAACCUCCCCACCAUGCCCCGCACCCCGCCCGCUCCUGCGACCCCCCAGCCCCGCUCAGUCCCGAGCGCCCGCAGUCGUCGCGCCGCCGCGCCAAGCAUGCAGUAAAGGCUGAAAAUCUGGGUCACAG\
CUGAGGAAGACCUCAGAC\
) } def
/len { sequence length } bind def

/coor [
[436.85708618 73.71387482]
[421.93685913 75.25899506]
[415.63110352 79.05952454]
[406.83688354 76.73529053]
[391.89993286 78.10924530]
[376.96298218 79.48319244]
[370.61407471 83.21117401]
[361.84707642 80.78626251]
[346.89535522 81.98886871]
[334.82937622 90.72164917]
[320.45330811 84.11566925]
[305.50158691 85.31826782]
[290.38909912 97.41487122]
[272.33758545 88.38815308]
[257.41738892 89.93327332]
[242.49716187 91.47839355]
[227.57696533 93.02351379]
[213.91566467 104.06401825]
[197.17201233 96.35906982]
[182.27050781 98.07515717]
[167.36898804 99.79123688]
[152.46748352 101.50732422]
[148.16018677 120.87353516]
[136.97259521 137.25769043]
[120.50298309 148.31910706]
[101.10424805 152.47750854]
[81.54776764 149.13882446]
[64.62741852 138.78001404]
[53.03908539 148.30421448]
[48.41911316 156.13980103]
[41.26284790 157.87026978]
[29.56607628 167.26098633]
[17.92333221 176.71859741]
[6.33499718 186.24281311]
[1.71502519 194.07838440]
[-5.44123840 195.80885315]
[-17.13801003 205.19956970]
[-25.70382881 219.83047485]
[-42.13419724 215.64964294]
[-42.66513824 198.70401001]
[-26.52872467 193.50280762]
[-14.83195305 184.11209106]
[-3.18920875 174.65446472]
[8.39912605 165.13026428]
[11.55933380 158.48046875]
[20.17536163 155.56420898]
[31.87213326 146.17349243]
[43.51487732 136.71588135]
[55.10321426 127.19167328]
[49.97004318 122.12002563]
[45.42995834 116.16719818]
[30.59627533 118.39473724]
[15.76259518 120.62226868]
[0.92891419 122.84980774]
[-7.05738783 127.20405579]
[-14.08751392 125.01683044]
[-28.94575882 127.07414246]
[-34.65390396 141.33291626]
[-46.73660278 150.81468201]
[-61.94367218 152.96890259]
[-76.18448639 147.21609497]
[-85.62833405 135.10372925]
[-87.73487091 119.88998413]
[-81.93745422 105.66727448]
[-69.79554749 96.26143646]
[-54.57527161 94.20259857]
[-40.37080383 100.04457092]
[-31.00307274 112.21589661]
[-16.14482880 110.15858459]
[-1.29862118 108.01612854]
[13.53505993 105.78858948]
[28.36874008 103.56105804]
[43.20242310 101.33351898]
[44.83304977 86.42241669]
[30.83139801 81.04154205]
[19.25812721 87.88776398]
[6.04691458 86.84573364]
[-4.01044607 78.51760101]
[-7.39513683 66.10736847]
[-21.33417320 60.56631851]
[-35.27320862 55.02526474]
[-49.21224594 49.48421478]
[-63.15128326 43.94316101]
[-80.10363770 43.71080780]
[-84.57324219 27.35663605]
[-70.09551239 18.53441811]
[-57.61022949 30.00412560]
[-43.67119598 35.54517746]
[-29.73215866 41.08623123]
[-15.79312134 46.62728119]
[-1.85408473 52.16833496]
[13.31111336 44.85936737]
[29.38041115 50.91633606]
[36.21226883 67.03989410]
[50.21392059 72.42076111]
[58.43617630 61.76993179]
[68.85601807 53.42366409]
[80.85497284 47.81403351]
[93.73545837 45.21259689]
[106.76132965 45.71762085]
[119.19987488 49.25123596]
[130.36309814 55.56661606]
[139.64573669 64.26455688]
[146.55802917 74.81840515]
[150.75140381 86.60581207]
[165.65290833 84.88972473]
[180.55442810 83.17364502]
[195.45593262 81.45755768]
[204.04962158 71.87210846]
[216.47073364 70.73139954]
[226.03184509 78.10330200]
[240.95204163 76.55818176]
[255.87225342 75.01306152]
[270.79244995 73.46794128]
[277.12048340 64.67920685]
[287.02871704 60.88248825]
[297.18130493 63.09883881]
[304.29898071 70.36655426]
[319.25070190 69.16395569]
[332.38613892 60.34514999]
[345.69274902 67.03715515]
[360.64447021 65.83454895]
[375.58905029 64.54624939]
[390.52597046 63.17230225]
[405.46292114 61.79834747]
[420.39175415 60.33879089]
[435.31195068 58.79367065]
[421.47747803 52.99650955]
[406.47753906 52.95415115]
[392.56158447 47.35533524]
[381.71185303 36.99757004]
[375.47378540 23.35622025]
[374.73590088 8.37438011]
[379.60336304 -5.81392479]
[389.38278198 -17.18769646]
[402.68121338 -24.12684441]
[417.60440063 -25.64295006]
[432.02667236 -21.52005386]
[443.89370728 -12.34542942]
[451.51513672 0.57408261]
[453.80535889 15.39821243]
[450.43685913 30.01833153]
[452.93759155 44.80841064]
[457.83374023 30.62999344]
[450.59356689 19.29901123]
[451.18063354 6.05977774]
[459.15795898 -4.27803993]
[471.44445801 -8.08751869]
[476.50286865 -22.20886803]
[470.97640991 -37.27000046]
[479.42877197 -50.90586472]
[495.37606812 -52.65619659]
[506.58486938 -41.17828751]
[504.45675659 -25.27700806]
[490.62423706 -17.15046120]
[485.56582642 -3.02911139]
[493.39199829 11.87575912]
[487.89123535 28.14385223]
[472.01217651 35.52616119]
[467.11599731 49.70458221]
[484.56808472 53.93014908]
[497.17538452 66.77020264]
[501.09777832 84.37164307]
[516.04949951 85.57424164]
[531.00122070 86.77684784]
[545.37725830 80.17086029]
[557.44323730 88.90364838]
[572.39495850 90.10624695]
[587.34667969 91.30885315]
[602.29840088 92.51145172]
[617.25012207 93.71405792]
[632.83447266 78.40782928]
[654.35137939 79.71514130]
[667.60980225 96.34642792]
[682.60589600 96.69036865]
[697.60192871 97.03430939]
[712.59802246 97.37825012]
[727.59405518 97.72219086]
[741.46771240 75.59425354]
[772.99597168 73.82878876]
[786.73620605 67.81164551]
[800.47644043 61.79450226]
[814.21667480 55.77736282]
[827.95690918 49.76022339]
[833.47662354 34.95116043]
[847.88574219 28.45867920]
[862.63562012 34.13465500]
[868.97540283 48.61162949]
[863.14379883 63.30067062]
[848.60058594 69.48703003]
[833.97406006 63.50045395]
[820.23382568 69.51759338]
[806.49359131 75.53473663]
[792.75335693 81.55187988]
[779.01312256 87.56901550]
[779.87115479 95.01977539]
[793.63439941 100.98406982]
[781.58721924 109.92128754]
[782.44525146 117.37203979]
[797.19354248 120.10839081]
[811.94189453 122.84474182]
[824.87561035 114.16394806]
[839.79351807 117.14908600]
[847.98962402 129.53292847]
[859.25592041 119.02689362]
[874.37152100 117.19077301]
[887.51446533 124.52066040]
[893.74652100 138.02250671]
[908.49481201 140.75885010]
[923.24310303 143.49520874]
[937.99139404 146.23156738]
[953.26202393 140.25326538]
[965.90405273 150.69886780]
[962.91247559 166.82284546]
[947.36474609 172.03820801]
[935.25506592 160.97985840]
[920.50677490 158.24351501]
[905.75842285 155.50715637]
[891.01013184 152.77081299]
[880.34942627 163.13842773]
[865.45184326 165.26576233]
[852.00091553 158.12951660]
[845.25323486 144.28121948]
[833.16027832 152.90068054]
[818.16442871 150.33573914]
[809.20550537 137.59304810]
[794.45721436 134.85668945]
[779.70892334 132.12034607]
[769.76745605 137.59713745]
[759.15374756 139.68788147]
[748.93621826 138.50393677]
[740.05377197 134.47157288]
[733.22930908 128.26469421]
[728.91168213 120.71617889]
[727.25012207 112.71824646]
[712.25408936 112.37430573]
[697.25799561 112.03036499]
[682.26196289 111.68642426]
[667.26586914 111.34248352]
[663.45281982 118.95507050]
[657.35833740 124.96237183]
[649.61364746 128.70306396]
[641.03356934 129.75262451]
[632.53082275 127.97123718]
[625.01904297 123.52182770]
[619.31445312 116.85545349]
[616.04748535 108.66577148]
[601.09582520 107.46316528]
[586.14410400 106.26056671]
[571.19238281 105.05796051]
[556.24066162 103.85536194]
[542.93402100 110.54736328]
[529.79858398 101.72856140]
[514.84686279 100.52595520]
[499.89517212 99.32335663]
[490.17309570 110.74618530]
[493.74996948 125.31346893]
[497.32687378 139.88075256]
[500.90374756 154.44804382]
[504.48065186 169.01533508]
[508.05752563 183.58262634]
[519.79156494 195.03881836]
[515.47558594 210.85983276]
[499.54953003 214.77035522]
[488.39672852 202.74758911]
[493.49023438 187.15951538]
[489.91336060 172.59222412]
[486.33645630 158.02493286]
[482.75958252 143.45764160]
[479.18267822 128.89035034]
[475.60580444 114.32306671]
[458.90136719 113.70213318]
[444.69393921 104.94538116]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 127]
[2 126]
[4 125]
[5 124]
[6 123]
[8 122]
[9 121]
[11 119]
[12 118]
[14 114]
[15 113]
[16 112]
[17 111]
[19 108]
[20 107]
[21 106]
[22 105]
[28 49]
[29 48]
[31 47]
[32 46]
[33 44]
[34 43]
[36 42]
[37 41]
[51 73]
[52 72]
[53 71]
[54 70]
[56 69]
[57 68]
[74 95]
[75 94]
[79 91]
[80 90]
[81 89]
[82 88]
[83 87]
[143 160]
[144 159]
[148 156]
[149 155]
[163 255]
[164 254]
[165 253]
[167 251]
[168 250]
[169 249]
[170 248]
[171 247]
[174 239]
[175 238]
[176 237]
[177 236]
[178 235]
[180 195]
[181 194]
[182 193]
[183 192]
[184 191]
[199 228]
[200 227]
[201 226]
[204 223]
[208 219]
[209 218]
[210 217]
[211 216]
[256 271]
[257 270]
[258 269]
[259 268]
[260 267]
[261 266]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
