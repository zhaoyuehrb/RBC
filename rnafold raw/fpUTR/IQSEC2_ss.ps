%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCAGCCUCAGCUCCUGCUCCCCGUGCCGCCGGCCCCAGCGCUGUCUCCCGGGCCCCCUAGGGCCCCCGGGCCCUCAAGCCCGGUGCGCGCCCUCGCGUCCCGCCGGCCCCCUCCCCCGGCUGGGCCCGGGGGAGGGUGGCGCCGUGAGAGAGCGGGGACAGGGCUCUCCUGCCCGUUCCCCUGCCCCUGGGCCGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[319.43041992 471.69406128]
[321.15640259 465.29974365]
[318.14428711 450.60528564]
[315.13220215 435.91082764]
[312.12008667 421.21636963]
[309.10797119 406.52188110]
[308.35214233 400.29534912]
[308.93112183 394.44122314]
[310.66723633 389.22558594]
[313.33328247 384.85916138]
[316.66735840 381.48886108]
[320.38897705 379.19277954]
[312.62124634 366.36071777]
[304.85348511 353.52865601]
[297.08575439 340.69656372]
[286.97518921 339.15698242]
[279.22085571 332.15658569]
[276.54840088 321.83035278]
[280.07522583 311.53137207]
[272.71032715 298.46392822]
[265.34539795 285.39648438]
[252.35594177 278.10794067]
[252.32058716 262.28677368]
[239.33113098 254.99821472]
[239.29577637 239.17704773]
[231.93086243 226.10960388]
[224.56594849 213.04216003]
[217.20103455 199.97471619]
[209.83613586 186.90727234]
[199.64984131 175.89639282]
[187.19401550 167.53860474]
[174.73820496 159.18083191]
[162.28237915 150.82304382]
[149.82655334 142.46525574]
[137.37074280 134.10748291]
[132.05503845 139.49211121]
[125.96511841 144.04963684]
[119.22947693 147.66900635]
[111.99250793 150.25914001]
[104.41139221 151.75111389]
[96.65267181 152.10006714]
[88.88861084 151.28631592]
[81.29336548 149.31613159]
[74.03907013 146.22190857]
[67.29193115 142.06159973]
[61.20846558 136.91770935]
[55.93181992 130.89569092]
[51.58843994 124.12183380]
[48.28506851 116.74052429]
[46.10611725 108.91127777]
[45.11157227 100.80522919]
[45.33538818 92.60142517]
[30.91932487 88.45689392]
[16.50326157 84.31237030]
[2.08719707 80.16784668]
[-12.32886696 76.02332306]
[-26.74493027 71.87879181]
[-42.52048874 76.35805511]
[-54.09735489 64.74305725]
[-49.56624222 48.98231125]
[-33.58837128 45.28912735]
[-22.60040474 57.46273041]
[-8.18434143 61.60725403]
[6.23172283 65.75177765]
[20.64778709 69.89630890]
[35.06385040 74.04083252]
[49.47991562 78.18535614]
[57.24766159 65.35328674]
[46.89136124 54.50215530]
[36.53506088 43.65102386]
[26.17875862 32.79989243]
[15.82245827 21.94876099]
[5.46615839 11.09762955]
[-10.33768940 10.97958088]
[-21.36955261 -0.33737651]
[-21.08442307 -16.13909340]
[-9.65146351 -27.05068970]
[6.14635563 -26.59851074]
[16.93646622 -15.05082607]
[16.31728935 0.74132913]
[26.67358971 11.59246063]
[37.02988815 22.44359207]
[47.38618851 33.29472351]
[57.74248886 44.14585495]
[68.09879303 54.99698257]
[74.67800140 53.57796097]
[81.13592529 53.05280685]
[77.66828156 38.45912933]
[74.20063782 23.86545181]
[70.73299408 9.27177429]
[67.26535034 -5.32190418]
[55.61747742 -16.86569405]
[60.05186081 -32.65392685]
[76.00678253 -36.44502258]
[87.06919098 -24.33902550]
[81.85902405 -8.78954887]
[85.32667542 5.80412912]
[88.79431915 20.39780807]
[92.26196289 34.99148560]
[95.72960663 49.58516312]
[121.54479218 54.22103500]
[141.57028198 71.15900421]
[150.42466736 95.84736633]
[145.72851562 121.65165710]
[158.18434143 130.00944519]
[170.64016724 138.36721802]
[183.09597778 146.72500610]
[195.55180359 155.08279419]
[208.00761414 163.44058228]
[215.23310852 148.21438599]
[230.29614258 145.86859131]
[240.30996704 134.70063782]
[250.32379150 123.53267670]
[260.33761597 112.36471558]
[270.35144043 101.19675446]
[280.36526489 90.02879333]
[290.37908936 78.86083221]
[300.39291382 67.69286346]
[310.40670776 56.52490616]
[320.42053223 45.35694504]
[330.43435669 34.18898392]
[329.32434082 18.42372131]
[339.75012207 6.54605150]
[355.52621460 5.60278130]
[367.29299927 16.15353775]
[368.06942749 31.93874359]
[357.39486694 43.59331512]
[341.60232544 44.20280457]
[331.58850098 55.37076569]
[321.57467651 66.53872681]
[311.56085205 77.70668793]
[301.54702759 88.87464905]
[291.53320312 100.04261017]
[281.51940918 111.21057129]
[271.50558472 122.37853241]
[261.49176025 133.54649353]
[251.47793579 144.71446228]
[241.46411133 155.88241577]
[239.76321411 172.36593628]
[222.90357971 179.54235840]
[230.26847839 192.60980225]
[237.63339233 205.67724609]
[244.99830627 218.74468994]
[252.36322021 231.81213379]
[265.87948608 240.03536987]
[265.38803101 254.92185974]
[278.90429688 263.14508057]
[278.41284180 278.03158569]
[285.77777100 291.09902954]
[293.14266968 304.16647339]
[310.93957520 313.62387085]
[309.91781616 332.92883301]
[317.68557739 345.76089478]
[325.45330811 358.59298706]
[333.22106934 371.42504883]
[343.82766724 382.03164673]
[356.65972900 389.79940796]
[369.49182129 397.56713867]
[382.32388306 405.33489990]
[395.15594482 413.10263062]
[407.98803711 420.87036133]
[416.95709229 422.63943481]
[420.95794678 428.86001587]
[433.66766357 436.82638550]
[446.37738037 444.79275513]
[459.08709717 452.75912476]
[474.43325806 448.98138428]
[487.91244507 457.23284912]
[491.52774048 472.61807251]
[483.13421631 486.00927734]
[467.71160889 489.46170044]
[454.40991211 480.92706299]
[451.12072754 465.46884155]
[438.41101074 457.50247192]
[425.70129395 449.53610229]
[412.99157715 441.56973267]
[400.22027588 433.70245361]
[387.38821411 425.93469238]
[374.55615234 418.16696167]
[361.72406006 410.39920044]
[348.89199829 402.63146973]
[336.05990601 394.86373901]
[323.80242920 403.50979614]
[326.81454468 418.20425415]
[329.82666016 432.89871216]
[332.83877563 447.59317017]
[335.85086060 462.28762817]
[339.09112549 476.93347168]
[342.55877686 491.52716064]
[346.02642822 506.12081909]
[349.49407959 520.71453857]
[352.96170044 535.30816650]
[364.60958862 546.85198975]
[360.17520142 562.64019775]
[344.22027588 566.43133545]
[333.15786743 554.32531738]
[338.36804199 538.77581787]
[334.90039062 524.18212891]
[331.43273926 509.58847046]
[327.96508789 494.99481201]
[324.49746704 480.40112305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 187]
[3 186]
[4 185]
[5 184]
[6 183]
[12 155]
[13 154]
[14 153]
[15 152]
[19 150]
[20 149]
[21 148]
[23 146]
[25 144]
[26 143]
[27 142]
[28 141]
[29 140]
[30 109]
[31 108]
[32 107]
[33 106]
[34 105]
[35 104]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[68 85]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
[111 138]
[112 137]
[113 136]
[114 135]
[115 134]
[116 133]
[117 132]
[118 131]
[119 130]
[120 129]
[121 128]
[156 182]
[157 181]
[158 180]
[159 179]
[160 178]
[161 177]
[163 176]
[164 175]
[165 174]
[166 173]
[188 201]
[189 200]
[190 199]
[191 198]
[192 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
