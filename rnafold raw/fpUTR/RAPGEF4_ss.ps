%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCCCUCUCCCCACCGCCCCAGGCCGCGGGAGCCCGCGGGGAGGGCGGGCCUGUCGCAGCCGCGCUGGUCGCCAGGCGUCCGGGAGGAGCGGGGUCCGCGCGGCGGACGAGGCGGGGGCGGAGGCGCAGGCAGAGCGAGCGCGGGAGGUCGCCGCAGCCAGGGACACCGCGCGCCGCCGCUCAAC\
) } def
/len { sequence length } bind def

/coor [
[252.80577087 233.98925781]
[254.24520874 223.38296509]
[242.47322083 214.08671570]
[230.70123291 204.79046631]
[218.85197449 195.59289551]
[206.85069275 186.59461975]
[194.77464294 177.69691467]
[182.69859314 168.79922485]
[170.62254333 159.90151978]
[158.54649353 151.00382996]
[146.39651489 142.20733643]
[134.17347717 133.51268005]
[121.95042419 124.81800842]
[109.72738647 116.12334442]
[92.93527985 121.14038086]
[76.11598969 109.62050629]
[62.72821045 116.38565826]
[49.34042740 123.15081024]
[35.95264435 129.91596985]
[22.56486130 136.68112183]
[9.17707920 143.44627380]
[7.99091864 157.19015503]
[0.22588196 168.46086121]
[-11.99873447 174.37104797]
[-25.43868256 173.47117615]
[-36.58555222 166.10346985]
[-50.08451080 172.64396667]
[-63.58346939 179.18447876]
[-77.08242798 185.72497559]
[-90.58138275 192.26547241]
[-104.08033752 198.80596924]
[-112.83312988 212.67395020]
[-129.20664978 211.75750732]
[-136.35722351 196.99942017]
[-126.92896271 183.58152771]
[-110.62084198 185.30702209]
[-97.12187958 178.76651001]
[-83.62292480 172.22601318]
[-70.12397003 165.68551636]
[-56.62501144 159.14501953]
[-43.12605286 152.60452271]
[-40.75807953 136.36964417]
[-29.06789780 124.62249756]
[-12.51629639 122.12606812]
[2.41192722 130.05848694]
[15.79970932 123.29333496]
[29.18749237 116.52818298]
[42.57527542 109.76303101]
[55.96305847 102.99787903]
[69.35083771 96.23272705]
[74.74195862 82.23501587]
[69.35083771 68.23730469]
[63.95972443 54.23960114]
[58.56860733 40.24188995]
[53.06072617 26.28971291]
[47.43646240 12.38404274]
[41.81219864 -1.52162707]
[35.68131256 -8.32034969]
[36.21227646 -15.70695019]
[30.19585228 -22.60717010]
[30.85017204 -29.98386574]
[25.69370842 -44.06970596]
[20.53724289 -58.15554428]
[15.38077831 -72.24138641]
[10.22431374 -86.32722473]
[5.06784916 -100.41306305]
[-0.08861566 -114.49890137]
[-5.98889875 -121.49869537]
[-5.21140718 -128.86341858]
[-10.13177967 -143.03346252]
[-21.96776772 -153.53202820]
[-18.83344078 -168.09312439]
[-30.66942978 -178.59169006]
[-27.53510284 -193.15277100]
[-32.45547485 -207.32281494]
[-37.22152328 -211.95126343]
[-38.69767761 -217.46517944]
[-37.29488373 -222.04933167]
[-41.73901749 -236.37586975]
[-47.28112411 -243.66252136]
[-46.13555527 -250.97904968]
[-50.33967590 -265.37783813]
[-54.54379272 -279.77664185]
[-66.76274109 -290.71417236]
[-63.13567734 -306.70718384]
[-47.39380646 -311.30343628]
[-35.73102570 -299.77471924]
[-40.14499664 -283.98077393]
[-35.94087601 -269.58197021]
[-31.73675728 -255.18316650]
[-27.41247940 -240.81999207]
[-22.96834564 -226.49345398]
[-18.28543854 -212.24317932]
[-13.36506557 -198.07315063]
[-1.88101602 -188.58811951]
[-4.66340494 -173.01348877]
[6.82064533 -163.52845764]
[4.03825617 -147.95384216]
[8.95862865 -133.78379822]
[13.99722385 -119.65536499]
[19.15368843 -105.56952667]
[24.31015396 -91.48368835]
[29.46661758 -77.39785004]
[34.62308121 -63.31201172]
[39.77954865 -49.22616959]
[44.93601227 -35.14033127]
[50.20998764 -21.09806633]
[55.71786880 -7.14589024]
[61.34213257 6.75977993]
[66.96639252 20.66545105]
[72.39984894 25.69748497]
[72.56631470 34.85077286]
[77.95743561 48.84848404]
[83.34854889 62.84619141]
[88.73966217 76.84390259]
[113.72612762 82.43811798]
[118.42205048 103.90029907]
[130.64509583 112.59496307]
[142.86813354 121.28963470]
[155.09118652 129.98429871]
[163.91712952 132.41596985]
[167.44418335 138.92778015]
[179.52023315 147.82546997]
[191.59628296 156.72317505]
[203.67233276 165.62086487]
[215.74838257 174.51855469]
[224.53247070 177.09736633]
[227.95022583 183.66720581]
[236.68998718 186.39244080]
[239.99748230 193.01847839]
[251.76947021 202.31472778]
[263.54147339 211.61096191]
[283.32168579 208.19334412]
[299.01626587 220.21365356]
[300.81433105 239.59480286]
[313.03738403 248.28945923]
[325.26043701 256.98413086]
[337.48348999 265.67880249]
[349.70651245 274.37344360]
[369.82821655 275.35116577]
[377.13970947 293.23925781]
[389.64645386 301.52062988]
[402.15319824 309.80200195]
[414.65997314 318.08337402]
[427.16671753 326.36477661]
[442.94476318 327.53250122]
[449.28485107 341.01034546]
[464.58224487 338.07315063]
[477.14791870 346.64981079]
[479.85379028 361.25164795]
[492.36053467 369.53305054]
[504.86730957 377.81442261]
[513.76959229 379.94979858]
[517.51226807 386.34011841]
[529.87884521 394.82934570]
[544.89593506 390.46792603]
[559.18218994 396.82696533]
[565.99206543 410.90386963]
[562.11022949 426.05197144]
[549.36944580 435.11880493]
[533.78564453 433.82327271]
[522.71691895 422.77709961]
[521.38964844 407.19595337]
[509.02304077 398.70675659]
[496.58590698 390.32116699]
[484.07916260 382.03979492]
[471.57241821 373.75842285]
[457.07287598 376.96762085]
[444.27130127 368.74731445]
[441.00347900 353.51708984]
[426.11999512 352.94171143]
[418.88534546 338.87152100]
[406.37857056 330.59014893]
[393.87182617 322.30877686]
[381.36508179 314.02737427]
[368.85833740 305.74600220]
[359.04425049 308.67752075]
[349.02963257 305.64941406]
[342.20285034 297.43328857]
[341.01184082 286.59649658]
[328.78881836 277.90182495]
[316.56576538 269.20718384]
[304.34271240 260.51251221]
[292.11968994 251.81784058]
[282.79968262 256.20083618]
[272.42019653 256.31011963]
[262.86218262 252.05862427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 132]
[3 131]
[4 130]
[5 128]
[6 126]
[7 125]
[8 124]
[9 123]
[10 122]
[11 120]
[12 119]
[13 118]
[14 117]
[16 50]
[17 49]
[18 48]
[19 47]
[20 46]
[21 45]
[26 41]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[51 115]
[52 114]
[53 113]
[54 112]
[55 110]
[56 109]
[57 108]
[59 107]
[61 106]
[62 105]
[63 104]
[64 103]
[65 102]
[66 101]
[67 100]
[69 99]
[70 98]
[72 96]
[74 94]
[75 93]
[78 92]
[79 91]
[81 90]
[82 89]
[83 88]
[135 184]
[136 183]
[137 182]
[138 181]
[139 180]
[141 176]
[142 175]
[143 174]
[144 173]
[145 172]
[147 170]
[150 167]
[151 166]
[152 165]
[154 164]
[155 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
