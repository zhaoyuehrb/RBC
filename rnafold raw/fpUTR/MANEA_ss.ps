%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAGCGCCCGGAACGCUGUGCGCGCGCCUUCGGGGAGGAGGGGCUGUCUGGGCUCGGGGCGCGGCGGCAGUCAGCUCUAUGUUCGCGGUCUUAACCUCUCCUCUGGCCGAGUCCUUGCAAGAAGUGAAUUACCCGACCCUGCAAAACACUUACUAUUUUGGAGUUUAAAGUAUGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[118.60357666 152.54872131]
[109.05129242 155.00486755]
[99.21566010 155.73908997]
[89.40458679 154.72839355]
[79.92519379 152.00445557]
[72.68976593 165.14402771]
[65.45433807 178.28361511]
[58.21890640 191.42318726]
[58.33988571 207.24392700]
[45.42307663 214.66049194]
[38.18764877 227.80006409]
[30.95221710 240.93965149]
[31.82506561 257.31555176]
[17.93384361 266.03140259]
[3.56864953 258.12106323]
[3.50716376 241.72204590]
[17.81263733 233.70422363]
[25.04806709 220.56463623]
[32.28349686 207.42506409]
[31.64498901 192.54414368]
[45.07932663 184.18775940]
[52.31475449 171.04818726]
[59.55018616 157.90859985]
[66.78561401 144.76901245]
[48.85742950 122.17877197]
[44.61800003 93.65218353]
[55.20205307 66.82463837]
[44.45828247 56.35700607]
[33.71450806 45.88937378]
[18.51037979 48.36740112]
[4.92128992 41.49790192]
[-1.93598783 28.10231590]
[0.38174957 13.41333675]
[-10.36202240 2.94570327]
[-21.10579491 -7.52193069]
[-31.84956741 -17.98956490]
[-42.59333801 -28.45719910]
[-53.33711243 -38.92483139]
[-64.08088684 -49.39246750]
[-82.01898193 -53.49702072]
[-86.14573669 -70.54208374]
[-97.06957245 -80.82167816]
[-107.99340057 -91.10126495]
[-118.91722870 -101.38085175]
[-129.84106445 -111.66043854]
[-140.76489258 -121.94002533]
[-151.68872070 -132.21961975]
[-162.61254883 -142.49920654]
[-168.99125671 -144.39704895]
[-172.85598755 -148.60987854]
[-173.72926331 -153.33018494]
[-184.28973389 -163.98271179]
[-194.85021973 -174.63523865]
[-205.41069031 -185.28776550]
[-220.98573303 -185.52404785]
[-231.54380798 -196.47766113]
[-231.22256470 -211.32463074]
[-241.78305054 -221.97715759]
[-252.34352112 -232.62968445]
[-262.90399170 -243.28221130]
[-273.46447754 -253.93473816]
[-286.35287476 -254.77578735]
[-294.93051147 -263.88836670]
[-294.98648071 -276.00167847]
[-305.36047363 -286.83590698]
[-315.73446655 -297.67010498]
[-331.62179565 -301.73519897]
[-335.78384399 -317.59738159]
[-323.93905640 -328.93902588]
[-308.27233887 -324.09283447]
[-304.90026855 -308.04409790]
[-294.52627563 -297.20989990]
[-284.15225220 -286.37570190]
[-267.07202148 -282.39700317]
[-262.81195068 -264.49520874]
[-252.25148010 -253.84268188]
[-241.69099426 -243.19015503]
[-231.13052368 -232.53762817]
[-220.57003784 -221.88510132]
[-205.72085571 -222.07748413]
[-194.85926819 -211.42475891]
[-194.75816345 -195.84825134]
[-184.19769287 -185.19572449]
[-173.63720703 -174.54319763]
[-163.07673645 -163.89067078]
[-152.33296204 -153.42303467]
[-141.40913391 -143.14344788]
[-130.48530579 -132.86386108]
[-119.56147003 -122.58426666]
[-108.63764191 -112.30467987]
[-97.71381378 -102.02509308]
[-86.78997803 -91.74550629]
[-75.86614990 -81.46591949]
[-63.75280762 -81.51507568]
[-54.56612015 -73.01683807]
[-53.61325073 -60.13623810]
[-42.86947632 -49.66860580]
[-32.12570572 -39.20096970]
[-21.38193321 -28.73333740]
[-10.63816071 -18.26570320]
[0.10561132 -7.79806900]
[10.84938335 2.66956496]
[25.47304726 -0.02977560]
[39.04260635 6.47645950]
[46.26353455 19.88211441]
[44.18214417 35.14559937]
[54.92591476 45.61323547]
[65.66968536 56.08086777]
[72.94290161 51.26219177]
[80.87889099 47.63738251]
[89.28327179 45.29522705]
[97.95015717 44.29309845]
[106.66725922 44.65554810]
[115.22104645 46.37369919]
[123.40197754 49.40545654]
[131.00967407 53.67655945]
[137.85775757 59.08238602]
[143.77848816 65.49051666]
[148.62684631 72.74398041]
[152.28405762 80.66509247]
[154.66052246 89.05982971]
[155.69805908 97.72255707]
[155.37123108 106.44106293]
[153.68804932 115.00180054]
[150.68974304 123.19505310]
[163.36581421 131.21485901]
[176.04188538 139.23466492]
[188.71794128 147.25447083]
[203.95104980 144.00016785]
[216.69213867 152.31398010]
[219.70072937 166.85646057]
[232.37680054 174.87626648]
[245.05287170 182.89607239]
[257.49395752 174.20729065]
[272.27398682 170.95242310]
[287.13397217 173.59706116]
[299.81500244 181.70750427]
[308.40139771 194.02166748]
[311.61032104 208.64521790]
[308.98318481 223.34307861]
[321.65927124 231.36289978]
[337.45816040 232.20263672]
[344.07684326 245.54589844]
[356.75289917 253.56570435]
[369.42898560 261.58551025]
[382.10504150 269.60531616]
[394.78109741 277.62512207]
[408.72479248 271.02380371]
[424.02093506 273.03158569]
[435.78863525 283.00781250]
[440.27282715 297.76910400]
[436.04263306 312.60516357]
[424.44790649 322.78189087]
[409.18844604 325.05191040]
[395.13354492 318.69088745]
[386.76800537 305.72854614]
[386.76129150 290.30120850]
[374.08523560 282.28137207]
[361.40917969 274.26156616]
[348.73309326 266.24176025]
[336.05703735 258.22195435]
[321.16479492 257.95584106]
[313.63946533 244.03895569]
[300.96337891 236.01914978]
[288.80697632 244.68809509]
[274.21817017 248.05149841]
[259.41311646 245.56649780]
[246.65301514 237.58105469]
[237.89883423 225.28561401]
[234.50991821 210.53575134]
[237.03306580 195.57214355]
[224.35699463 187.55233765]
[211.68092346 179.53253174]
[197.25119019 183.04223633]
[184.28160095 175.08958435]
[180.69813538 159.93054199]
[168.02206421 151.91073608]
[155.34600830 143.89093018]
[142.66993713 135.87112427]
[135.68019104 142.82972717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 24]
[6 23]
[7 22]
[8 21]
[10 19]
[11 18]
[12 17]
[27 108]
[28 107]
[29 106]
[33 102]
[34 101]
[35 100]
[36 99]
[37 98]
[38 97]
[39 96]
[41 93]
[42 92]
[43 91]
[44 90]
[45 89]
[46 88]
[47 87]
[48 86]
[51 85]
[52 84]
[53 83]
[54 82]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[64 73]
[65 72]
[66 71]
[125 179]
[126 178]
[127 177]
[128 176]
[131 173]
[132 172]
[133 171]
[140 164]
[141 163]
[143 161]
[144 160]
[145 159]
[146 158]
[147 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
