%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUUAAAGGCGCGCGAGCCGAGCGGCGAGGUGCCUCUGUGGCCGCAGGCGCAGGCCCGGGCGACAGCCGAGACGUGGAGCGCGCCGGCUCGCUGCAGCUCCGGGACUCAAC\
) } def
/len { sequence length } bind def

/coor [
[148.98852539 468.98272705]
[146.49797058 454.19091797]
[144.00740051 439.39913940]
[141.51683044 424.60736084]
[130.86659241 420.07839966]
[123.70267487 410.83572388]
[121.93685913 399.15365601]
[126.13386536 387.98040771]
[135.33843994 380.19384766]
[133.67376709 365.28649902]
[132.00909424 350.37918091]
[130.13737488 335.49639893]
[128.05895996 320.64108276]
[125.77424622 305.81610107]
[123.28367615 291.02432251]
[120.79311371 276.23254395]
[118.30255127 261.44073486]
[115.81198120 246.64895630]
[113.32141876 231.85716248]
[110.83084869 217.06536865]
[108.34028625 202.27357483]
[104.06635284 196.11355591]
[105.99205780 187.03645325]
[103.91363525 172.18113708]
[101.83522034 157.32583618]
[99.55050659 142.50085449]
[97.05993652 127.70906067]
[81.19176483 120.55933380]
[72.66140747 105.38861847]
[74.79689026 88.11559296]
[86.76507568 75.47913361]
[83.45630646 60.84861755]
[70.37431335 52.39289474]
[67.22717285 37.50833511]
[75.36903381 25.08876419]
[62.56306076 11.94814014]
[68.24800110 -4.59059525]
[64.53380585 -19.12348175]
[60.81961823 -33.65636826]
[57.10543060 -48.18925476]
[46.19197845 -59.64382553]
[50.53689957 -73.89060974]
[46.82271194 -88.42350006]
[43.10852432 -102.95638275]
[37.88235855 -110.62381744]
[39.49907303 -117.94491577]
[28.90825653 -129.69844055]
[33.64753342 -143.81893921]
[30.33876610 -158.44944763]
[27.02999878 -173.07997131]
[15.50832748 -184.74972534]
[20.11410904 -200.48881531]
[36.10931015 -204.10620117]
[47.03944016 -191.88064575]
[41.66051865 -176.38873291]
[44.96928406 -161.75822449]
[48.27804947 -147.12770081]
[58.63220215 -136.42065430]
[54.12959290 -121.25368500]
[57.64141083 -106.67057800]
[61.35559845 -92.13768768]
[65.06978607 -77.60479736]
[75.71757507 -67.18972015]
[71.63831329 -51.90344620]
[75.35250854 -37.37055969]
[79.06669617 -22.83767128]
[82.78088379 -8.30478382]
[93.08402252 -1.79983830]
[96.23839569 10.38601208]
[89.99954987 21.77999687]
[102.69325256 29.48749924]
[106.25723267 44.27779007]
[98.08682251 57.53985214]
[101.39559174 72.17037201]
[113.16619110 75.44216156]
[122.40589905 83.43461609]
[127.33859253 94.61138153]
[127.01609039 106.82398224]
[121.50038147 117.72483063]
[111.85173035 125.21849823]
[114.34229279 140.01028442]
[118.91152954 148.08645630]
[116.69052887 155.24742126]
[118.76894379 170.10272217]
[120.84736633 184.95802307]
[123.13208008 199.78300476]
[125.62264252 214.57479858]
[128.11320496 229.36659241]
[130.60377502 244.15838623]
[133.09434509 258.95016479]
[135.58489990 273.74197388]
[138.07546997 288.53375244]
[140.56604004 303.32556152]
[145.13526917 311.40170288]
[142.91426086 318.56268311]
[144.99269104 333.41799927]
[149.33564758 341.61804199]
[146.91644287 348.71450806]
[148.58111572 363.62185669]
[150.24577332 378.52917480]
[165.45100403 389.64236450]
[167.81132507 408.00933838]
[156.30862427 422.11679077]
[158.79919434 436.90856934]
[161.28976440 451.70034790]
[163.78031921 466.49215698]
[177.35285950 474.25878906]
[182.70918274 488.95040894]
[177.32022095 503.63009644]
[163.73046875 511.36651611]
[148.35659790 508.50683594]
[138.45765686 496.40124512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 106]
[2 105]
[3 104]
[4 103]
[9 100]
[10 99]
[11 98]
[12 96]
[13 95]
[14 93]
[15 92]
[16 91]
[17 90]
[18 89]
[19 88]
[20 87]
[21 86]
[23 85]
[24 84]
[25 83]
[26 81]
[27 80]
[31 74]
[32 73]
[35 70]
[37 67]
[38 66]
[39 65]
[40 64]
[42 62]
[43 61]
[44 60]
[46 59]
[48 57]
[49 56]
[50 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
