%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUCGCUCGGGUCGGGUGUCGCCUGAGAACCGGAUGAGGCGGCGACCGUGAGGCCGAGCCGGGAGCGGGCGUCUUGCCGAGGCCCGGGCGGGCGGGGAGCAACGGCUACAGACGCCGCGGGGCCAGGUCGUUGAGGGUCGGCGGCGGGCGAGGAGCGCAGGGCGCUCGGGCCGGGGGCCGCCGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[79.87143707 132.18179321]
[68.34996796 120.95477295]
[62.51322937 105.96400452]
[48.40665436 113.12745667]
[36.00820923 104.87349701]
[21.02089119 104.25686646]
[6.03357029 103.64023590]
[-8.95374966 103.02360535]
[-23.94107056 102.40697479]
[-38.92839050 101.79034424]
[-53.91571045 101.17371368]
[-68.90303040 100.55708313]
[-83.89035034 99.94045258]
[-98.87767029 99.32382202]
[-113.86499023 98.70719147]
[-129.96405029 107.62974548]
[-144.41567993 97.68674469]
[-159.41110229 97.31669617]
[-174.40653992 96.94664764]
[-189.40603638 96.82328796]
[-203.14210510 104.67382050]
[-215.93258667 97.04145050]
[-230.93208313 97.16481018]
[-245.93156433 97.28816986]
[-260.93106079 97.41152954]
[-275.93054199 97.53488922]
[-290.93005371 97.65824890]
[-298.08953857 109.44800568]
[-310.04693604 116.10390472]
[-323.62310791 115.97886658]
[-335.26858521 109.21264648]
[-341.99163818 97.66732788]
[-356.99111938 97.54396820]
[-371.99060059 97.42060852]
[-386.99011230 97.29725647]
[-394.34252930 108.96765900]
[-406.40780640 115.42599487]
[-419.98007202 115.07767487]
[-431.51269531 108.12083435]
[-438.04492188 96.46649933]
[-453.04037476 96.09645844]
[-468.03579712 95.72640991]
[-479.43429565 106.34300232]
[-494.63653564 105.75410461]
[-504.68759155 94.82195282]
[-515.96093750 105.89834595]
[-531.76367188 105.67552185]
[-542.72027588 94.28567505]
[-542.33038330 78.48619843]
[-530.82531738 67.65063477]
[-515.03082275 68.20754242]
[-504.31753540 79.82651520]
[-493.73950195 69.40342712]
[-478.52673340 69.56508636]
[-467.66574097 80.73097992]
[-452.67031860 81.10102081]
[-437.67489624 81.47106934]
[-428.13150024 68.12394714]
[-412.35693359 63.03839874]
[-396.50021362 68.40467834]
[-386.86676025 82.29776001]
[-371.86724854 82.42111969]
[-356.86776733 82.54447937]
[-341.86825562 82.66783905]
[-332.54571533 69.16555786]
[-316.85690308 63.82124710]
[-300.91406250 68.92600250]
[-291.05340576 82.65876007]
[-276.05392456 82.53540039]
[-261.05441284 82.41204071]
[-246.05493164 82.28868103]
[-231.05543518 82.16532135]
[-216.05593872 82.04196167]
[-203.39273071 74.20024872]
[-189.52938843 81.82379913]
[-185.59074402 79.09539795]
[-179.89273071 78.82379913]
[-174.03649902 81.95121765]
[-159.04106140 82.32125854]
[-144.04562378 82.69130707]
[-135.06050110 74.57636261]
[-122.55377960 74.77227783]
[-113.24835968 83.71986389]
[-98.26103973 84.33650208]
[-83.27371979 84.95313263]
[-68.28639984 85.56976318]
[-53.29907990 86.18639374]
[-38.31175995 86.80302429]
[-23.32443810 87.41965485]
[-8.33711910 88.03628540]
[6.65020132 88.65291595]
[21.63752174 89.26954651]
[36.62483978 89.88617706]
[49.65942383 82.67861938]
[63.12985992 90.97668457]
[66.86846924 81.47626495]
[73.00394440 73.31591797]
[81.09242249 67.08601379]
[90.54875183 63.23723221]
[100.68881989 62.04801941]
[110.77906036 63.60440826]
[120.08950043 67.79380035]
[130.38644409 56.88632965]
[140.68339539 45.97886276]
[150.98033142 35.07139206]
[161.27728271 24.16392326]
[171.57423401 13.25645542]
[181.87118530 2.34898663]
[192.16812134 -8.55848217]
[189.08277893 -17.79728127]
[189.58105469 -27.46684456]
[193.55184937 -36.23395157]
[200.40824890 -42.90529633]
[209.17379761 -46.58986282]
[218.62155151 -46.81781769]
[227.44567871 -43.59999084]
[238.43745422 -53.80688858]
[249.42924500 -64.01378632]
[253.73709106 -79.83700562]
[269.66116333 -83.75569153]
[280.82012939 -71.73863983]
[275.73458862 -56.14795303]
[259.63613892 -53.02200317]
[248.64434814 -42.81510544]
[237.65257263 -32.60820770]
[238.64187622 -12.20644760]
[224.07255554 2.52445960]
[203.07559204 1.73846531]
[192.77865601 12.64593410]
[182.48170471 23.55340195]
[172.18475342 34.46087265]
[161.88780212 45.36833954]
[151.59086609 56.27581024]
[141.29391479 67.18328094]
[130.99696350 78.09074402]
[137.82994080 96.88180542]
[134.16604614 116.53809357]
[149.83531189 118.72554779]
[155.28890991 132.58583069]
[167.23287964 141.66004944]
[179.17684937 150.73428345]
[191.12081909 159.80850220]
[203.06478882 168.88273621]
[215.00875854 177.95695496]
[226.95272827 187.03118896]
[238.89669800 196.10540771]
[250.84066772 205.17964172]
[272.21520996 206.54763794]
[279.44754028 225.86825562]
[291.82455444 234.34231567]
[304.20156860 242.81636047]
[317.07769775 238.82955933]
[329.71292114 242.93199158]
[337.55770874 253.41067505]
[337.92388916 266.30059814]
[350.15985107 274.97708130]
[362.39581299 283.65356445]
[374.63177490 292.33004761]
[386.86773682 301.00650024]
[399.10369873 309.68298340]
[415.52157593 313.91265869]
[416.00210571 330.85980225]
[399.85031128 336.01300049]
[390.42724609 321.91894531]
[378.19128418 313.24246216]
[365.95532227 304.56600952]
[353.71936035 295.88952637]
[341.48339844 287.21304321]
[329.24743652 278.53656006]
[312.81234741 282.06771851]
[298.62460327 272.43698120]
[295.72750854 255.19337463]
[283.35049438 246.71931458]
[270.97348022 238.24526978]
[262.60040283 241.28678894]
[253.63156128 240.10659790]
[246.10447693 234.84480286]
[241.78775024 226.58294678]
[241.76644897 217.12361145]
[229.82247925 208.04937744]
[217.87850952 198.97515869]
[205.93453979 189.90092468]
[193.99057007 180.82670593]
[182.04660034 171.75247192]
[170.10263062 162.67825317]
[158.15866089 153.60401917]
[146.21469116 144.52980042]
[131.39974976 142.99139404]
[125.09181976 128.48205566]
[111.04164124 136.31678772]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 95]
[5 93]
[6 92]
[7 91]
[8 90]
[9 89]
[10 88]
[11 87]
[12 86]
[13 85]
[14 84]
[15 83]
[17 80]
[18 79]
[19 78]
[20 75]
[22 73]
[23 72]
[24 71]
[25 70]
[26 69]
[27 68]
[32 64]
[33 63]
[34 62]
[35 61]
[40 57]
[41 56]
[42 55]
[45 52]
[102 135]
[103 134]
[104 133]
[105 132]
[106 131]
[107 130]
[108 129]
[109 128]
[116 125]
[117 124]
[118 123]
[137 189]
[139 187]
[140 186]
[141 185]
[142 184]
[143 183]
[144 182]
[145 181]
[146 180]
[147 179]
[149 174]
[150 173]
[151 172]
[155 169]
[156 168]
[157 167]
[158 166]
[159 165]
[160 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
