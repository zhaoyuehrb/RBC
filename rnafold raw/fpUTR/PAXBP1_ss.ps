%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUCUCUCUUUCUCCAAGUAUUGAGAGCGCGUGGGAGCAUAGGCGCAUGCGCGCUCGUGGGGUGCGCGGUAGCAACAGAGGACUCGACCCGGCUGGAGCUCCGGAGAGCGCGCGUGCGCCGUCACGAGCUCGGCGCUGCCGGGGCCGCGGUGUGGAAGCGAGUAUUCGACCGCCGUGCGGGCCGCGGGG\
) } def
/len { sequence length } bind def

/coor [
[96.14913177 123.78726196]
[89.26245117 137.11293030]
[82.37576294 150.43861389]
[75.48907471 163.76428223]
[68.60239410 177.08995056]
[76.39875793 192.09121704]
[73.75000000 208.62049866]
[61.89415741 220.20233154]
[45.63660431 222.41900635]
[38.97002411 235.85614014]
[32.30344391 249.29328918]
[36.04058456 264.89498901]
[26.05953598 277.45516968]
[10.01690483 277.33874512]
[0.21922466 264.63500977]
[4.18243647 249.08917236]
[18.86630440 242.62670898]
[25.53288460 229.18955994]
[32.19946671 215.75242615]
[24.93701744 204.53857422]
[24.16203308 191.09245300]
[30.18407249 178.92433167]
[41.52420807 171.26391602]
[55.27671814 170.20327759]
[62.16340637 156.87759399]
[69.05008698 143.55192566]
[75.93677521 130.22625732]
[82.82346344 116.90058136]
[75.92341614 99.00940704]
[84.26985931 81.74552155]
[78.50112915 67.89916229]
[72.73239899 54.05280304]
[66.96366882 40.20643997]
[55.34719467 34.57548141]
[50.83219910 22.91052055]
[55.33335114 11.67110348]
[49.79313660 -2.26826620]
[44.25292206 -16.20763588]
[38.71270752 -30.14700508]
[19.12251854 -34.03986359]
[5.93554258 -48.84889221]
[4.35432720 -68.47078705]
[14.84534359 -84.95757294]
[8.40067005 -98.50254059]
[1.95599663 -112.04750824]
[-4.48867655 -125.59247589]
[-10.93334961 -139.13745117]
[-17.37802315 -152.68241882]
[-23.82269669 -166.22738647]
[-30.26737022 -179.77235413]
[-36.71204376 -193.31732178]
[-43.15671539 -206.86228943]
[-49.60139084 -220.40725708]
[-56.04606247 -233.95222473]
[-62.49073792 -247.49719238]
[-68.93540955 -261.04217529]
[-75.38008118 -274.58712769]
[-83.64942169 -287.10183716]
[-93.58204651 -298.34210205]
[-108.51811981 -303.55978394]
[-111.14785767 -318.22039795]
[-121.08048248 -329.46063232]
[-131.01310730 -340.70086670]
[-140.94573975 -351.94113159]
[-155.88180542 -357.15881348]
[-158.51155090 -371.81942749]
[-173.85821533 -370.48297119]
[-186.89674377 -378.34747314]
[-192.73521423 -392.21743774]
[-189.32771301 -406.69247437]
[-199.26034546 -417.93273926]
[-214.97247314 -422.62963867]
[-218.49713135 -438.64550781]
[-206.20843506 -449.50463867]
[-190.74795532 -444.03604126]
[-188.02009583 -427.86535645]
[-178.08747864 -416.62512207]
[-163.30314636 -418.22558594]
[-150.25697327 -410.72482300]
[-144.05662537 -396.81765747]
[-147.27131653 -381.75207520]
[-133.04568481 -377.33834839]
[-129.70550537 -361.87374878]
[-119.77287292 -350.63351440]
[-109.84024811 -339.39328003]
[-99.90762329 -328.15304565]
[-85.68199921 -323.73931885]
[-82.34181213 -308.27471924]
[-72.40917969 -297.03448486]
[-58.21351242 -301.88040161]
[-57.22733688 -316.84793091]
[-56.24116135 -331.81549072]
[-55.25498581 -346.78305054]
[-67.26745605 -356.60546875]
[-71.17970276 -371.62124634]
[-65.48738098 -386.05651855]
[-52.37931061 -394.36062622]
[-36.89580536 -393.34045410]
[-24.99059486 -383.38830566]
[-21.24147224 -368.33093262]
[-27.09005356 -353.95828247]
[-40.28743744 -345.79687500]
[-41.27361298 -330.82931519]
[-42.25979233 -315.86175537]
[-43.24596786 -300.89422607]
[-50.43502426 -286.60375977]
[-61.83511353 -281.03179932]
[-55.39044189 -267.48684692]
[-48.94576645 -253.94186401]
[-42.50109482 -240.39689636]
[-36.05642319 -226.85192871]
[-29.61174774 -213.30696106]
[-23.16707420 -199.76199341]
[-16.72240067 -186.21702576]
[-10.27772808 -172.67205811]
[-3.83305454 -159.12709045]
[2.61161900 -145.58212280]
[9.05629253 -132.03715515]
[15.50096607 -118.49217987]
[21.94563866 -104.94721222]
[28.39031219 -91.40224457]
[38.76253891 -91.79041290]
[48.70697403 -88.68589783]
[57.07743454 -82.41978455]
[62.90025711 -73.68906403]
[65.48753357 -63.47919083]
[64.51828766 -52.95285034]
[60.07807159 -43.31757355]
[52.65207672 -35.68722153]
[58.19229126 -21.74785042]
[63.73250580 -7.80848122]
[69.27272034 6.13088799]
[83.60519409 16.24488449]
[80.81002808 34.43770981]
[86.57875824 48.28406906]
[92.34748840 62.13043213]
[98.11622620 75.97679138]
[113.47583008 80.02338409]
[122.98031616 92.74962616]
[122.50008392 108.62607574]
[134.13914490 118.08823395]
[145.77819824 127.55039215]
[157.49467468 136.91651917]
[169.28778076 146.18595886]
[184.91893005 148.63082886]
[190.14384460 162.57893372]
[201.93695068 171.84838867]
[213.73005676 181.11782837]
[225.52316284 190.38728333]
[237.31626892 199.65672302]
[252.80163574 197.97120667]
[264.62948608 207.53973389]
[266.14093018 222.31306458]
[277.93405151 231.58250427]
[289.72714233 240.85195923]
[301.52026367 250.12139893]
[312.24856567 248.20332336]
[322.05587769 252.42826843]
[327.79028320 261.17492676]
[327.75512695 271.41390991]
[339.23696899 281.06622314]
[350.71881104 290.71853638]
[366.95187378 293.04663086]
[372.80020142 308.36752319]
[362.24755859 320.92034912]
[346.14959717 317.79187012]
[341.06652832 302.20040894]
[329.58465576 292.54809570]
[318.10281372 282.89578247]
[298.87554932 280.94149780]
[292.25079346 261.91452026]
[280.45770264 252.64506531]
[268.66458130 243.37562561]
[256.87149048 234.10617065]
[242.15927124 236.12760925]
[230.06733704 226.89506531]
[228.04682922 211.44982910]
[216.25372314 202.18038940]
[204.46061707 192.91093445]
[192.66749573 183.64149475]
[180.87438965 174.37203979]
[166.08676147 172.59017944]
[160.01832581 157.97906494]
[148.22521973 148.70962524]
[141.01126099 147.04510498]
[136.31604004 139.18945312]
[124.67697906 129.72729492]
[113.03792572 120.26512909]
[109.13128662 122.29983521]
[104.91954041 123.58943176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[5 24]
[9 19]
[10 18]
[11 17]
[30 137]
[31 136]
[32 135]
[33 134]
[36 132]
[37 131]
[38 130]
[39 129]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[48 116]
[49 115]
[50 114]
[51 113]
[52 112]
[53 111]
[54 110]
[55 109]
[56 108]
[57 107]
[58 89]
[59 88]
[61 86]
[62 85]
[63 84]
[64 83]
[66 81]
[70 77]
[71 76]
[90 105]
[91 104]
[92 103]
[93 102]
[140 188]
[141 187]
[142 186]
[143 184]
[144 183]
[146 181]
[147 180]
[148 179]
[149 178]
[150 177]
[153 174]
[154 173]
[155 172]
[156 171]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
