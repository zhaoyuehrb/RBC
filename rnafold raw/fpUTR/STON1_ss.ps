%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGUGUGGCUGGCUGCGGCCAGAAUCGGAGCCCCAACCGCGCUGCCGCUCGGACCUUAGCCUGUGCCUGCAGCCCGGAGUCCCCUCCUGCCCUGGAAGGCAAGGAGCCAGGCCACGGGGCCACAGCCGCGGGGGCCACCACACUGGCCCAAAUAUUUCCUGCAGAGUCAACCUAUUUGAUUUCUUGACAAGACCACAAUCUGAUCCCAAAG\
) } def
/len { sequence length } bind def

/coor [
[77.29862976 279.93621826]
[87.21269226 267.32308960]
[86.77027893 252.32962036]
[86.32786560 237.33615112]
[85.00216675 222.39485168]
[82.79779053 207.55770874]
[80.59341431 192.72056580]
[78.38903809 177.88342285]
[76.18466187 163.04627991]
[73.87092590 148.22579956]
[71.44795990 133.42279053]
[62.73891449 121.20998383]
[49.53297806 114.09638977]
[36.32704163 106.98279572]
[23.12110710 99.86920166]
[9.91517067 92.75560760]
[-5.90377760 93.02290344]
[-13.43947887 80.17523956]
[-26.64541626 73.06163788]
[-39.85135269 65.94804382]
[-53.05728912 58.83444977]
[-57.38677597 59.11647415]
[-61.19795609 58.10835648]
[-64.14907837 56.13121796]
[-66.03768158 53.58414078]
[-66.81394958 50.89203644]
[-79.57747650 43.01215744]
[-92.34099579 35.13227844]
[-107.53737640 38.55395889]
[-120.36914825 30.38081932]
[-123.53755188 15.87231064]
[-136.30107117 7.99243259]
[-149.06459045 0.11255384]
[-162.11569214 10.38040066]
[-179.27777100 13.61680508]
[-196.81867981 8.31876183]
[-210.55538940 -5.07108641]
[-216.84631348 -24.10085297]
[-231.69931030 -26.19575310]
[-246.55230713 -28.29065132]
[-261.29782104 -22.55651283]
[-272.81976318 -31.99547386]
[-287.67276001 -34.09037399]
[-302.52575684 -36.18527222]
[-317.37875366 -38.28017044]
[-332.23175049 -40.37506866]
[-349.14486694 -33.09127808]
[-362.53543091 -44.43511581]
[-377.41769409 -46.31072235]
[-392.07702637 -40.35972977]
[-403.73693848 -49.62773132]
[-418.61923218 -51.50333786]
[-433.50149536 -53.37894821]
[-444.02172852 -41.97262573]
[-459.24383545 -38.96137619]
[-473.31454468 -45.50308609]
[-480.82345581 -59.08233643]
[-478.88317871 -74.47763062]
[-468.23983765 -85.76915741]
[-452.98599243 -88.61509705]
[-438.98703003 -81.92113495]
[-431.62588501 -68.26122284]
[-416.74362183 -66.38561249]
[-401.86132812 -64.51000214]
[-388.26647949 -70.59515381]
[-375.54208374 -61.19299698]
[-360.65982056 -59.31739044]
[-350.91574097 -66.48371887]
[-338.50259399 -65.04393768]
[-330.13684082 -55.22806168]
[-315.28384399 -53.13316345]
[-300.43084717 -51.03826523]
[-285.57785034 -48.94336319]
[-270.72488403 -46.84846497]
[-257.04174805 -52.73244858]
[-244.45741272 -43.14364624]
[-229.60441589 -41.04874420]
[-214.75141907 -38.95384598]
[-209.91641235 -44.68731308]
[-224.68208313 -47.32824707]
[-229.77789307 -61.43614197]
[-220.10807800 -72.90325165]
[-205.34234619 -70.26258850]
[-200.24636841 -56.15424347]
[-195.41136169 -61.88770676]
[-199.98344421 -76.17392731]
[-204.55552673 -90.46014404]
[-209.12762451 -104.74636078]
[-213.69970703 -119.03257751]
[-218.37701416 -133.28469849]
[-223.15931702 -147.50192261]
[-227.94160461 -161.71916199]
[-242.20634460 -168.52302551]
[-247.40315247 -183.44845581]
[-240.44885254 -197.64047241]
[-225.46929932 -202.67918396]
[-211.35160828 -195.57522583]
[-206.47154236 -180.54324341]
[-213.72438049 -166.50144958]
[-208.94207764 -152.28421021]
[-204.15979004 -138.06698608]
[-199.04862976 -132.73023987]
[-199.41348267 -123.60466766]
[-194.84140015 -109.31845093]
[-190.26931763 -95.03222656]
[-185.69721985 -80.74600983]
[-181.12513733 -66.45979309]
[-159.68864441 -62.45115662]
[-144.04704285 -48.99154663]
[-137.66926575 -30.60259056]
[-141.18472290 -12.65096855]
[-128.42118835 -4.77109051]
[-115.65766907 3.10878825]
[-101.26741028 -0.55944365]
[-88.21112823 7.25005245]
[-84.46112061 22.36875534]
[-71.69759369 30.24863434]
[-58.93407440 38.12851334]
[-45.94369125 45.62851334]
[-32.73775482 52.74210739]
[-19.53182030 59.85570526]
[-6.32588339 66.96929932]
[8.54848766 66.19319153]
[17.02876663 79.54966736]
[30.23470306 86.66326141]
[43.44063950 93.77685547]
[56.64657593 100.89045715]
[69.85250854 108.00405121]
[110.44173431 55.21681976]
[124.22470093 49.29820251]
[138.00765991 43.37958527]
[151.79061890 37.46096802]
[165.57357788 31.54235268]
[178.93365479 24.72264099]
[191.81199646 17.03186417]
[204.69035339 9.34108925]
[217.56871033 1.65031326]
[230.44705200 -6.04046249]
[234.06840515 -21.42426491]
[247.55085754 -29.67042160]
[262.89550781 -25.88663101]
[270.99865723 -12.31774998]
[267.05285645 2.98604441]
[253.39906311 10.94528294]
[238.13783264 6.83789015]
[225.25947571 14.52866554]
[212.38113403 22.21944237]
[199.50277710 29.91021729]
[186.62442017 37.60099411]
[201.49617004 39.55831528]
[213.01669312 49.16444778]
[217.61537170 63.44212723]
[213.86694336 77.96621704]
[202.93316650 88.23522186]
[188.20277405 91.06642914]
[174.24122620 85.58235931]
[165.37565613 73.48269653]
[164.35382080 58.51754379]
[171.49218750 45.32531357]
[157.70922852 51.24393082]
[143.92626953 57.16254425]
[130.14331055 63.08116150]
[116.36035156 68.99977875]
[116.30504608 76.49957275]
[116.13911438 98.99896240]
[129.83328247 105.12021637]
[143.52745056 111.24147034]
[157.22161865 117.36272430]
[170.91578674 123.48397827]
[184.60995483 129.60523987]
[198.30412292 135.72648621]
[213.74307251 131.36544800]
[226.69416809 140.83372498]
[227.22247314 156.86808777]
[214.92268372 167.16831970]
[199.23016357 163.83297729]
[192.18287659 149.42065430]
[178.48870850 143.29940796]
[164.79454041 137.17814636]
[151.10037231 131.05690002]
[137.40620422 124.93563843]
[123.71202850 118.81438446]
[110.01786041 112.69313049]
[104.07614136 117.26980591]
[113.22948456 129.15324402]
[125.60700989 137.62655640]
[121.37325287 152.01666260]
[106.37914276 152.43688965]
[101.34603882 138.30659485]
[92.19269562 126.42314911]
[86.25097656 130.99981689]
[88.67394257 145.80284119]
[93.14782715 153.76484680]
[91.02179718 160.84190369]
[93.22617340 175.67904663]
[95.43054962 190.51618958]
[97.63492584 205.35333252]
[99.83930206 220.19047546]
[107.93724823 207.56417847]
[121.86824799 202.00294495]
[136.43513489 205.58149719]
[146.20349121 216.96478271]
[147.52908325 231.90609741]
[139.91737366 244.83134460]
[126.20803833 250.91856384]
[111.51555634 247.89680481]
[101.32134247 236.89373779]
[101.76375580 251.88720703]
[102.20616913 266.88067627]
[112.84669495 278.88729858]
[109.95196533 294.66702271]
[95.74256897 302.11502075]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 198]
[6 197]
[7 196]
[8 195]
[9 194]
[10 192]
[11 191]
[12 128]
[13 127]
[14 126]
[15 125]
[16 124]
[18 122]
[19 121]
[20 120]
[21 119]
[26 118]
[27 117]
[28 116]
[31 113]
[32 112]
[33 111]
[38 78]
[39 77]
[40 76]
[42 74]
[43 73]
[44 72]
[45 71]
[46 70]
[48 67]
[49 66]
[51 64]
[52 63]
[53 62]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
[90 101]
[91 100]
[92 99]
[129 163]
[130 162]
[131 161]
[132 160]
[133 159]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[165 183]
[166 182]
[167 181]
[168 180]
[169 179]
[170 178]
[171 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
