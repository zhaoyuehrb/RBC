%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUUACUCCUACUGUUAACCCAACACAGGCAUGCCCACAAGGAAAGGUUAAAAAAAGUAAAAGGAACUCGGCAAAUCUUACCCCGCCUGUUUACCAAAAACAUCACCUCUAGCAUUACCAGUAUUAGAGGCACCGCCUGCCCAGUGACAUAUGUUUAACGGCCGUGGUACCCUAACCGUGCAAAGGUAGCAUGAUCACUUGUUCCUUAAAUAGGGACUUGUAUGA\
) } def
/len { sequence length } bind def

/coor [
[126.22971344 275.48504639]
[111.23297882 275.17181396]
[111.54596710 260.17556763]
[111.85871124 245.17883301]
[112.17146301 230.18208313]
[112.48420715 215.18534851]
[112.79695129 200.18861389]
[105.29858398 200.03224182]
[97.91928864 213.09156799]
[90.53999329 226.15089417]
[93.23527527 238.75708008]
[86.82879639 249.47940063]
[75.21969604 252.85455322]
[67.65958405 265.81005859]
[60.09947586 278.76553345]
[52.53936386 291.72100830]
[55.21275711 307.53976440]
[44.40507889 319.39614868]
[28.40705490 318.19494629]
[19.49100304 304.85766602]
[24.49655151 289.61547852]
[39.58387375 284.16091919]
[47.14398575 271.20541382]
[54.70409775 258.24993896]
[62.26420975 245.29444885]
[61.40463638 227.76193237]
[77.48066711 218.77159119]
[84.85996246 205.71226501]
[92.23925781 192.65293884]
[95.75107574 178.06982422]
[95.12571716 163.08287048]
[94.50035858 148.09591675]
[93.87500000 133.10894775]
[93.24964905 118.12199402]
[80.19032288 110.74269867]
[67.02967834 117.93975067]
[58.97014236 132.22177124]
[42.57136154 132.11242676]
[34.70299149 117.72420502]
[43.45934296 103.85847473]
[59.83262634 104.77911377]
[72.99327087 97.58206177]
[73.20175171 90.08496094]
[73.61872864 75.09075928]
[73.82720947 67.59365082]
[61.08688354 59.67632675]
[48.34655762 51.75899887]
[35.60623169 43.84166718]
[23.13519287 54.58819962]
[7.97149467 60.94926453]
[-8.39699364 62.31321335]
[-24.36804390 58.55810165]
[-38.38190079 50.06249237]
[-49.07361984 37.66734314]
[-55.40598679 22.59275436]
[-56.77016068 6.31787968]
[-53.04417038 -9.56420231]
[-65.99965668 -17.12431335]
[-78.95514679 -24.68442535]
[-91.91063690 -32.24453735]
[-104.86612701 -39.80464935]
[-117.87384796 -47.27453232]
[-130.93318176 -54.65382767]
[-143.99250793 -62.03312302]
[-148.30599976 -61.84132385]
[-152.07992554 -62.91797256]
[-154.98304749 -64.93941498]
[-156.82249451 -67.50790405]
[-157.55601501 -70.20287323]
[-170.18505859 -78.29653168]
[-182.81410217 -86.39019775]
[-196.08351135 -78.76253510]
[-211.37818909 -78.18676758]
[-225.18351746 -84.79520416]
[-234.32713318 -97.06927490]
[-236.70791626 -112.18848419]
[-231.77876282 -126.67855072]
[-220.67236328 -137.20976257]
[-205.94088745 -141.36212158]
[-190.96951294 -138.18145752]
[-179.19856262 -128.39865112]
[-173.33291626 -114.26171875]
[-174.72044373 -99.01923370]
[-162.09140015 -90.92557526]
[-149.46235657 -82.83191681]
[-136.61320496 -75.09244537]
[-123.55387878 -67.71315765]
[-110.49455261 -60.33385849]
[-103.13280487 -59.78044510]
[-97.30601501 -52.76013947]
[-84.35052490 -45.20002747]
[-71.39503479 -37.63991547]
[-58.43954468 -30.07980347]
[-45.48405838 -22.51969147]
[-35.70915222 -32.01197433]
[-23.79797363 -38.65453720]
[-10.56035900 -41.98819351]
[3.10171151 -41.77898788]
[16.25556946 -38.03459167]
[28.00153351 -31.00424957]
[37.53443527 -21.16217804]
[44.19881821 -9.17559814]
[47.53400803 4.14050102]
[47.30593109 17.87877464]
[43.52355957 31.10134315]
[56.26388550 39.01867294]
[69.00421143 46.93600082]
[81.74453735 54.85332870]
[74.35961914 41.79718018]
[86.46900940 32.94491196]
[101.40396881 31.54951096]
[114.94362640 38.00533676]
[123.26145935 50.48786926]
[124.00671387 65.46934509]
[116.96688843 78.71775055]
[108.69306946 91.22950745]
[121.95247650 84.21608734]
[135.21188354 77.20266724]
[148.47129822 70.18925476]
[158.42204285 52.64991379]
[177.69960022 54.23200607]
[190.75892639 46.85271072]
[203.81825256 39.47341537]
[216.87757874 32.09412003]
[229.78021240 24.44414711]
[242.52053833 16.52681732]
[255.26086426 8.60948944]
[260.89022827 1.42992210]
[268.23376465 0.67207897]
[281.08291626 -7.06738901]
[288.91210938 -20.81563759]
[303.80657959 -20.75460815]
[316.65573120 -28.49407768]
[329.50488281 -36.23354340]
[342.35403442 -43.97301102]
[355.20318604 -51.71247864]
[359.05825806 -64.01366425]
[369.91076660 -70.19705963]
[381.67831421 -67.42440796]
[394.63378906 -74.98451996]
[407.58929443 -82.54463196]
[407.62109375 -97.83993530]
[415.25415039 -110.97894287]
[428.35186768 -118.48331451]
[443.34695435 -118.42453766]
[456.21264648 -110.91854095]
[469.16812134 -118.47865295]
[482.12362671 -126.03876495]
[489.78302002 -140.53929138]
[506.17849731 -140.88584900]
[514.44378662 -126.72191620]
[506.07626343 -112.61814117]
[489.68371582 -113.08327484]
[476.72824097 -105.52316284]
[463.77273560 -97.96305084]
[463.97833252 -83.06931305]
[456.65261841 -69.98535919]
[443.67568970 -62.27397919]
[428.48147583 -62.09226227]
[415.14941406 -69.58914185]
[402.19390869 -62.02902985]
[389.23843384 -54.46891785]
[381.36160278 -38.78186035]
[362.94265747 -38.86333084]
[350.09350586 -31.12386322]
[337.24435425 -23.38439560]
[324.39520264 -15.64492798]
[311.54605103 -7.90545988]
[304.63592529 5.28920937]
[288.82238770 5.78176022]
[275.97323608 13.52122784]
[263.17819214 21.34981537]
[250.43786621 29.26714325]
[237.69754028 37.18447113]
[236.54318237 40.50535965]
[233.72903442 43.43506622]
[229.45503235 45.20227814]
[224.25686646 45.15344620]
[211.19754028 52.53274155]
[198.13821411 59.91203690]
[185.07888794 67.29132843]
[183.24366760 77.33003998]
[176.03855896 84.86374664]
[165.66392517 87.24295807]
[155.48472595 83.44866180]
[142.22531128 90.46208191]
[128.96589661 97.47550201]
[115.70648956 104.48891449]
[108.23660278 117.49663544]
[108.86196136 132.48359680]
[109.48731995 147.47055054]
[110.11267853 162.45751953]
[110.73802948 177.44447327]
[119.49783325 174.99220276]
[129.90974426 176.60066223]
[140.25842285 182.89558411]
[148.64767456 193.82929993]
[155.47610474 207.18492126]
[170.24446106 212.13806152]
[176.97920227 225.77983093]
[172.16612244 239.82867432]
[178.99455261 253.18428040]
[185.82298279 266.53991699]
[192.65141296 279.89553833]
[199.47984314 293.25112915]
[206.30827332 306.60675049]
[221.06915283 312.89135742]
[225.21987915 328.38818359]
[215.57638550 341.20935059]
[199.53633118 341.51959229]
[189.40428162 329.08090210]
[192.95265198 313.43518066]
[186.12422180 300.07955933]
[179.29580688 286.72396851]
[172.46737671 273.36834717]
[165.63894653 260.01272583]
[158.81051636 246.65710449]
[144.60362244 242.33273315]
[137.48837280 228.88551331]
[142.12049866 214.01335144]
[135.29206848 200.65773010]
[127.79369354 200.50135803]
[127.48094940 215.49809265]
[127.16819763 230.49484253]
[126.85545349 245.49157715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 29]
[9 28]
[10 27]
[13 25]
[14 24]
[15 23]
[16 22]
[30 193]
[31 192]
[32 191]
[33 190]
[34 189]
[35 42]
[36 41]
[45 108]
[46 107]
[47 106]
[48 105]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[62 88]
[63 87]
[64 86]
[69 85]
[70 84]
[71 83]
[116 188]
[117 187]
[118 186]
[119 185]
[121 181]
[122 180]
[123 179]
[124 178]
[125 174]
[126 173]
[127 172]
[129 171]
[130 170]
[132 168]
[133 167]
[134 166]
[135 165]
[136 164]
[139 162]
[140 161]
[141 160]
[146 155]
[147 154]
[148 153]
[197 221]
[198 220]
[201 217]
[202 216]
[203 215]
[204 214]
[205 213]
[206 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
