%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGCCGCGCGCGCCUGCGCAGGAGGCAGCAGCGCGCACCGGCGGCGGGAGGAGCGCGCGCGGGUGCUAAUUGGCCCGGGCGGCGGCCCCGCCCGCGAGUGGUGAGCGGUCACGUGACGCGACGGCUGGGGGCUCCCGGCGCGGGGGACGCUGGUGACCAAG\
) } def
/len { sequence length } bind def

/coor [
[101.87841034 575.47424316]
[101.01686096 560.49896240]
[100.15531158 545.52374268]
[91.69977570 533.26190186]
[98.63166809 519.04010010]
[97.77011871 504.06484985]
[96.90857697 489.08963013]
[96.04702759 474.11437988]
[92.50684357 467.58673096]
[95.31519318 458.84457397]
[94.74065399 443.85559082]
[94.16611481 428.86657715]
[93.44803619 413.88378906]
[84.99249268 401.62191772]
[91.92439270 387.40011597]
[91.06284332 372.42489624]
[90.20129395 357.44964600]
[89.33974457 342.47442627]
[88.47819519 327.49917603]
[87.61665344 312.52395630]
[86.75510406 297.54870605]
[76.33985901 283.44931030]
[84.69040680 267.06164551]
[83.54216766 252.10565186]
[82.39392853 237.14965820]
[81.24568939 222.19367981]
[72.55682373 210.09603882]
[79.21503448 195.74406433]
[67.77568817 186.27427673]
[66.39815521 171.12313843]
[76.40850830 159.18870544]
[75.26026917 144.23271179]
[74.11203003 129.27673340]
[72.96379852 114.32073975]
[69.40625763 99.74871826]
[63.53353882 85.94613647]
[51.01092529 76.27687836]
[53.14765549 61.53633118]
[47.27493668 47.73375320]
[41.40221405 33.93117523]
[35.52949524 20.12859726]
[29.65677452 6.32601976]
[23.38992882 -7.30213642]
[16.73413086 -20.74461937]
[10.07833385 -34.18710327]
[3.42253590 -47.62958527]
[-3.36170673 -61.00770569]
[-10.27377224 -74.32022858]
[-17.18583870 -87.63275909]
[-24.09790421 -100.94528198]
[-30.86157417 -107.15535736]
[-31.01210403 -114.57966614]
[-45.71541595 -119.72266388]
[-52.27384567 -133.45007324]
[-47.28017807 -147.43572998]
[-53.93597412 -160.87821960]
[-60.57945251 -167.21670532]
[-60.58774185 -174.64254761]
[-66.98482513 -188.21005249]
[-73.38191223 -201.77755737]
[-86.26570129 -210.96006775]
[-84.69513702 -225.77165222]
[-91.09223175 -239.33915710]
[-97.48931885 -252.90666199]
[-103.88640594 -266.47418213]
[-110.28349304 -280.04168701]
[-125.55249786 -282.80520630]
[-136.25668335 -294.03909302]
[-138.28005981 -309.42367554]
[-130.84460449 -323.04327393]
[-116.80939484 -329.66088867]
[-101.57126617 -326.73187256]
[-90.98958588 -315.38253784]
[-89.13321686 -299.97689819]
[-96.71598053 -286.43875122]
[-90.31889343 -272.87124634]
[-83.92180634 -259.30374146]
[-77.52471924 -245.73623657]
[-71.12763214 -232.16873169]
[-58.70140839 -223.95664978]
[-59.81440735 -208.17465210]
[-53.41732025 -194.60713196]
[-47.02023315 -181.03962708]
[-40.49349213 -167.53401184]
[-33.83769226 -154.09153748]
[-19.68770409 -149.58448792]
[-12.74628544 -136.04672241]
[-17.56962013 -121.23546600]
[-10.78537750 -107.85734558]
[-3.87331200 -94.54482269]
[3.03875375 -81.23229980]
[9.95081902 -67.91976929]
[15.85150433 -63.41144943]
[16.86501884 -54.28538513]
[23.52081680 -40.84289932]
[30.17661476 -27.40041733]
[36.83241272 -13.95793343]
[40.08650208 -12.48964596]
[42.77562332 -9.34694767]
[44.10905457 -4.82014084]
[43.45935059 0.45329964]
[49.33207321 14.25587749]
[55.20479202 28.05845451]
[61.07751465 41.86103439]
[66.95023346 55.66361237]
[79.05279541 64.34561920]
[77.33612061 80.07341766]
[83.20883942 93.87599945]
[96.67468262 83.97501373]
[110.78173828 89.77436066]
[125.38716888 86.35655975]
[139.99259949 82.93875885]
[151.66679382 72.26056671]
[165.82225037 76.89438629]
[180.42768860 73.47658539]
[194.47248840 63.98028946]
[207.48565674 74.84738922]
[200.64566040 90.36030579]
[183.84548950 88.08201599]
[169.24005127 91.49981689]
[158.61053467 101.93354797]
[143.41040039 97.54418945]
[128.80497742 100.96199036]
[114.19953918 104.37979126]
[104.28206635 115.79625702]
[87.91978455 113.17250061]
[89.06802368 128.12849426]
[90.21626282 143.08447266]
[91.36450195 158.04046631]
[103.07931519 168.30696106]
[104.03073883 183.49081421]
[94.17102051 194.59582520]
[102.94200897 207.76322937]
[96.20167542 221.04544067]
[97.34991455 236.00141907]
[98.49815369 250.95741272]
[99.64639282 265.91339111]
[108.92975616 274.91165161]
[109.55427551 287.42324829]
[101.73033905 296.68716431]
[102.59188843 311.66238403]
[103.45343781 326.63763428]
[104.31497955 341.61285400]
[105.17652893 356.58810425]
[106.03807831 371.56335449]
[106.89962769 386.53857422]
[115.41678619 399.87158203]
[108.42327118 413.02224731]
[112.05479431 421.45574951]
[109.15510559 428.29205322]
[109.72964478 443.28103638]
[110.30418396 458.27001953]
[111.02226257 473.25283813]
[111.88381195 488.22805786]
[112.74536133 503.20330811]
[113.60691071 518.17852783]
[122.12406921 531.51153564]
[115.13055420 544.66217041]
[115.99210358 559.63745117]
[116.85364532 574.61267090]
[126.30278015 588.01586914]
[119.17517853 602.78509521]
[102.80310059 603.72698975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 160]
[2 159]
[3 158]
[5 156]
[6 155]
[7 154]
[8 153]
[10 152]
[11 151]
[12 150]
[13 148]
[15 146]
[16 145]
[17 144]
[18 143]
[19 142]
[20 141]
[21 140]
[23 137]
[24 136]
[25 135]
[26 134]
[28 132]
[31 129]
[32 128]
[33 127]
[34 126]
[35 108]
[36 107]
[38 105]
[39 104]
[40 103]
[41 102]
[42 101]
[43 97]
[44 96]
[45 95]
[46 94]
[47 92]
[48 91]
[49 90]
[50 89]
[52 88]
[55 85]
[56 84]
[58 83]
[59 82]
[60 81]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[110 124]
[111 123]
[112 122]
[114 120]
[115 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
