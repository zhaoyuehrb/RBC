%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGCGAAGCCAUUCACCCAGCGCAUUCCGCCGCCCGCAGGCUUGCGGGGAAACUUCCUUAUUAUUGUGACGCCGAAAACGGAGAAACCCCGGGUCCGGCGAGAGGGGCUGUGACAGUCGGAGUCCCAAGCUGCGGUUCGGCUGCUGCCGAGAACUGCAAGGUGUGGAAUAUUUCUGGCUUCUAGUCCAAUGCCAAGUGUGUGACCUGUGGCUACAUGAUUCCCUGAAAGAUAAGAACA\
) } def
/len { sequence length } bind def

/coor [
[191.76411438 480.43856812]
[204.87663269 473.00048828]
[200.80503845 458.56365967]
[196.73342896 444.12683105]
[187.42562866 439.96896362]
[181.81614685 431.19534302]
[181.95368958 420.56335449]
[188.03373718 411.57424927]
[184.34144592 397.03579712]
[180.64913940 382.49734497]
[176.95684814 367.95886230]
[173.26454163 353.42041016]
[169.57225037 338.88192749]
[165.59521484 324.41876221]
[161.33499146 310.03646851]
[157.07475281 295.65417480]
[152.81452942 281.27188110]
[141.78111267 271.26623535]
[145.28031921 255.83685303]
[141.02009583 241.45455933]
[124.42858887 233.68569946]
[118.70542908 215.94577026]
[127.94017792 199.38645935]
[123.30492401 185.12060547]
[118.66967010 170.85476685]
[114.03441620 156.58891296]
[109.39916229 142.32305908]
[95.25953674 137.31596375]
[82.67948151 145.48554993]
[70.09942627 153.65513611]
[57.51936340 161.82472229]
[49.53099442 178.42596436]
[31.97494507 178.63780212]
[19.50290108 186.97135925]
[7.03085613 195.30491638]
[0.26693240 210.24417114]
[-16.07717896 211.58657837]
[-25.18805695 197.95118713]
[-17.69321251 183.36491394]
[-1.30269718 182.83287048]
[11.16934681 174.49931335]
[23.64139175 166.16575623]
[26.30197906 154.37806702]
[36.60742569 147.33058167]
[49.34977722 149.24465942]
[61.92983627 141.07507324]
[74.50989532 132.90548706]
[87.08995056 124.73590851]
[81.62289429 110.76767731]
[66.83955383 113.30792236]
[52.05621338 115.84816742]
[39.80072021 126.74472046]
[24.32362366 121.32332611]
[21.54643631 105.16104126]
[34.32609177 94.88424683]
[49.51597214 101.06482697]
[64.29931641 98.52458191]
[79.08265686 95.98433685]
[78.69000244 80.98947906]
[63.79397202 79.22641754]
[48.89794540 77.46335602]
[34.00191879 75.70029449]
[19.15632057 82.66738129]
[5.85633564 73.07350159]
[7.78384876 56.78802872]
[22.95599937 50.56405258]
[35.76498032 60.80427170]
[50.66100693 62.56733322]
[65.55703735 64.33039093]
[80.45306396 66.09345245]
[86.28388977 52.27312851]
[74.62670135 42.83332062]
[62.96951294 33.39351654]
[51.31232071 23.95370865]
[39.65513229 14.51390362]
[24.06114388 11.84218502]
[19.03943634 -2.18035817]
[3.53120899 -0.72000265]
[-8.15636539 -10.45936966]
[-9.45301914 -25.25309372]
[-21.11020851 -34.69289780]
[-32.76739883 -44.13270569]
[-48.08212280 -40.97150803]
[-61.82125092 -48.43946457]
[-67.49758148 -63.01043701]
[-62.43093109 -77.80445862]
[-49.01361084 -85.83624268]
[-33.58087540 -83.31342316]
[-23.41958427 -71.42720795]
[-23.32759285 -55.78989410]
[-11.67040253 -46.35009003]
[-0.01321307 -36.91028214]
[14.72682190 -38.71775055]
[26.68334389 -29.31050873]
[28.47924232 -13.83754730]
[43.23942947 -11.84102726]
[49.09494019 2.85671401]
[60.75212860 12.29652023]
[72.40931702 21.73632622]
[84.06650543 31.17613220]
[95.72369385 40.61593628]
[89.51100922 26.96300697]
[97.04298401 13.99113655]
[111.98004913 12.61857414]
[121.74989319 24.00058746]
[118.12931061 38.55715179]
[127.87102509 27.15106201]
[137.61274719 15.74497223]
[147.35446167 4.33888245]
[157.09619141 -7.06720686]
[166.83790588 -18.47329712]
[170.02265930 -27.01310158]
[176.78256226 -29.96385002]
[186.67276001 -41.24144745]
[189.96900940 -49.73883438]
[196.76696777 -52.60084152]
[206.80392456 -63.74801636]
[216.84088135 -74.89518738]
[226.87783813 -86.04235840]
[236.91479492 -97.18952942]
[246.95176697 -108.33670807]
[256.98870850 -119.48387909]
[267.02566528 -130.63104248]
[276.76739502 -142.03713989]
[286.20721436 -153.69433594]
[295.64700317 -165.35151672]
[305.01031494 -177.07023621]
[314.29672241 -188.84999084]
[310.24194336 -203.71151733]
[315.65231323 -217.94461060]
[328.25714111 -226.16545105]
[343.10800171 -225.39691162]
[352.39440918 -237.17666626]
[361.68081665 -248.95642090]
[370.96722412 -260.73617554]
[380.25363159 -272.51593018]
[389.54003906 -284.29568481]
[398.67144775 -296.19598389]
[407.64633179 -308.21478271]
[416.62118530 -320.23358154]
[425.59606934 -332.25241089]
[434.57092285 -344.27120972]
[435.96005249 -360.61141968]
[450.91860962 -367.33261108]
[464.05847168 -357.52059937]
[461.86251831 -341.26913452]
[446.58975220 -335.29632568]
[437.61486816 -323.27752686]
[428.64001465 -311.25872803]
[419.66513062 -299.23992920]
[410.69027710 -287.22109985]
[410.47277832 -282.46801758]
[407.28012085 -277.79638672]
[401.31979370 -275.00927734]
[392.03338623 -263.22952271]
[382.74697876 -251.44975281]
[373.46057129 -239.67001343]
[364.17416382 -227.89025879]
[354.88775635 -216.11050415]
[359.10192871 -201.84941101]
[354.05075073 -187.67373657]
[341.47393799 -179.09017944]
[326.07647705 -179.56358337]
[316.79006958 -167.78382874]
[315.12063599 -160.59938049]
[307.30419922 -155.91171265]
[297.86441040 -144.25451660]
[288.42459106 -132.59733582]
[288.57122803 -129.81655884]
[287.63610840 -126.81053162]
[285.52816772 -123.98699951]
[282.30407715 -121.77915955]
[278.17285156 -120.59409332]
[268.13589478 -109.44691467]
[258.09893799 -98.29974365]
[248.06198120 -87.15257263]
[238.02500916 -76.00540161]
[227.98805237 -64.85823059]
[217.95109558 -53.71105576]
[207.91413879 -42.56388474]
[197.95034790 -31.35125923]
[188.06016541 -20.07366180]
[178.24400330 -8.73157597]
[168.50227356 2.67451382]
[158.76055908 14.08060360]
[149.01884460 25.48669243]
[139.27711487 36.89278412]
[129.53540039 48.29887009]
[123.66500854 137.68780518]
[128.30026245 151.95365906]
[132.93551636 166.21951294]
[137.57077026 180.48535156]
[142.20602417 194.75120544]
[153.62478638 197.97483826]
[161.99040222 206.21917725]
[165.31195068 217.36015320]
[162.87734985 228.60548401]
[155.40238953 237.19432068]
[159.66261292 251.57661438]
[171.00076294 262.61099243]
[167.19682312 277.01165771]
[171.45704651 291.39395142]
[175.71728516 305.77624512]
[179.97750854 320.15853882]
[183.73536682 323.72494507]
[185.57836914 327.95111084]
[185.57431030 332.00213623]
[184.11071777 335.18963623]
[187.80300903 349.72811890]
[191.49531555 364.26657104]
[195.18760681 378.80502319]
[198.87991333 393.34350586]
[202.57220459 407.88195801]
[217.27171326 421.69506836]
[211.17025757 440.05523682]
[215.24186707 454.49206543]
[219.31346130 468.92889404]
[234.38012695 468.41961670]
[249.13069153 471.53152466]
[262.70761108 478.08367920]
[274.32153320 487.69515991]
[283.29721069 499.80715942]
[289.11285400 513.71545410]
[291.43032837 528.61157227]
[290.11489868 543.62933350]
[285.24304199 557.89562988]
[277.09799194 570.58111572]
[266.15332031 580.94824219]
[253.04530334 588.39428711]
[238.53604126 592.48632812]
[223.46907043 592.98645020]
[208.72038269 589.86560059]
[195.14744568 583.30523682]
[183.53936768 573.68670654]
[174.57101440 561.56927490]
[168.76380920 547.65740967]
[166.45536804 532.75994873]
[167.77990723 517.74298096]
[172.66041565 503.47961426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 217]
[3 216]
[4 215]
[8 213]
[9 212]
[10 211]
[11 210]
[12 209]
[13 208]
[14 204]
[15 203]
[16 202]
[17 201]
[19 199]
[20 198]
[23 193]
[24 192]
[25 191]
[26 190]
[27 189]
[28 48]
[29 47]
[30 46]
[31 45]
[33 42]
[34 41]
[35 40]
[49 58]
[50 57]
[51 56]
[59 70]
[60 69]
[61 68]
[62 67]
[71 101]
[72 100]
[73 99]
[74 98]
[75 97]
[77 95]
[80 92]
[81 91]
[82 90]
[106 188]
[107 187]
[108 186]
[109 185]
[110 184]
[111 183]
[113 182]
[114 181]
[116 180]
[117 179]
[118 178]
[119 177]
[120 176]
[121 175]
[122 174]
[123 173]
[124 168]
[125 167]
[126 166]
[127 164]
[128 163]
[132 159]
[133 158]
[134 157]
[135 156]
[136 155]
[137 154]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
