%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGGGCCGUCGCUCUUCCGGGCGCAUGCGUGCGGCAGCGGCGCCAGGACUGACUGCGCCGUGGAGGCUGCUGCAGUGUUGUGAGUUGGAAGCUGGGGAGCUCGGC\
) } def
/len { sequence length } bind def

/coor [
[85.81668854 399.28341675]
[73.55429840 389.77481079]
[69.25516510 374.86517334]
[74.57239532 360.28756714]
[87.46140289 351.64736938]
[87.89767456 336.65371704]
[88.33394623 321.66006470]
[88.77021790 306.66641235]
[88.98837280 291.66799927]
[81.25107574 278.94073486]
[88.98837280 265.14056396]
[88.98837280 250.14056396]
[88.98837280 235.14056396]
[80.61257935 226.27891541]
[80.58223724 213.68247986]
[89.46516418 204.19155884]
[89.90142822 189.19790649]
[90.33769989 174.20425415]
[90.77397156 159.21058655]
[91.21024323 144.21693420]
[91.64651489 129.22328186]
[92.08278656 114.22962952]
[83.71784210 99.76316833]
[92.50000000 85.54611969]
[92.50000000 70.54611969]
[92.50000000 55.54611969]
[92.50000000 40.54611969]
[89.33161163 31.80929184]
[92.72450256 25.11143494]
[93.16077423 10.11778164]
[93.59704590 -4.87587261]
[93.81520081 -19.87428665]
[93.81520081 -34.87428665]
[93.81520081 -49.87428665]
[93.81520081 -64.87428284]
[93.81520081 -79.87428284]
[93.81520081 -94.87428284]
[93.81520081 -109.87428284]
[93.81520081 -124.87428284]
[93.81520081 -139.87428284]
[92.50786591 -154.81719971]
[89.90314484 -169.58932495]
[87.29842377 -184.36143494]
[84.69370270 -199.13356018]
[82.08897400 -213.90567017]
[77.45159149 -221.95957947]
[79.62986755 -229.14485168]
[77.45588684 -243.98648071]
[64.63082886 -253.22192383]
[62.17508316 -268.83425903]
[71.54560089 -281.56094360]
[87.18302155 -283.85150146]
[99.80994415 -274.34695435]
[101.93502808 -258.68618774]
[92.29751587 -246.16046143]
[94.47148895 -231.31883240]
[96.86109161 -216.51039124]
[99.46581268 -201.73828125]
[102.07054138 -186.96615601]
[104.67526245 -172.19404602]
[107.27998352 -157.42193604]
[117.52368927 -168.37942505]
[132.50378418 -169.15185547]
[143.82020569 -159.30612183]
[145.12727356 -144.36317444]
[135.69204712 -132.70227051]
[120.80532837 -130.86225891]
[108.81520081 -139.87428284]
[108.81520081 -124.87428284]
[108.81520081 -109.87428284]
[108.81520081 -94.87428284]
[108.81520081 -79.87428284]
[108.81520081 -64.87428284]
[108.81520081 -49.87428665]
[108.81520081 -34.87428665]
[108.81520081 -19.87428665]
[112.01185608 -13.08058357]
[108.59069824 -4.43960190]
[108.15442657 10.55405235]
[107.71815491 25.54770660]
[107.50000000 40.54611969]
[107.50000000 55.54611969]
[107.50000000 70.54611969]
[107.50000000 85.54611969]
[115.27217865 94.34975433]
[115.10137939 106.09204865]
[107.07643890 114.66590118]
[106.64016724 129.65956116]
[106.20389557 144.65321350]
[105.76763153 159.64686584]
[105.33135986 174.64051819]
[104.89508820 189.63417053]
[104.45881653 204.62782288]
[113.59364319 220.53321838]
[103.98837280 235.14056396]
[103.98837280 250.14056396]
[103.98837280 265.14056396]
[111.72567749 278.94073486]
[103.98837280 291.66799927]
[107.15676117 300.40484619]
[103.76387024 307.10269165]
[103.32759857 322.09634399]
[102.89132690 337.08999634]
[102.45506287 352.08364868]
[114.81987762 361.45864868]
[119.28050232 376.32077026]
[114.12172699 390.95520020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 104]
[6 103]
[7 102]
[8 101]
[9 99]
[11 97]
[12 96]
[13 95]
[16 93]
[17 92]
[18 91]
[19 90]
[20 89]
[21 88]
[22 87]
[24 84]
[25 83]
[26 82]
[27 81]
[29 80]
[30 79]
[31 78]
[32 76]
[33 75]
[34 74]
[35 73]
[36 72]
[37 71]
[38 70]
[39 69]
[40 68]
[41 61]
[42 60]
[43 59]
[44 58]
[45 57]
[47 56]
[48 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
