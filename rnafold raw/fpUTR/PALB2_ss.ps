%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGCCGAAUGGUGGAUUUAAUUGGCCGGAGUUUAGGGCGCGCUUGGCCCGCGUGGGUCAGCUGAUCGCGCACUGAGGGUGCGAUCCCGGGCUCCCCAUUCCUUCCUGGGGCGCCUCCCCGGCCCAGGGCCAACUGGGUCCCGGUGUCGGCAGGCCUGGGGUCGGCGACGGCUGCUCUUUUCGUUCUGUCGCCUGCCCG\
) } def
/len { sequence length } bind def

/coor [
[340.65991211 407.35653687]
[331.13833618 395.76602173]
[316.33587646 394.57345581]
[306.51455688 382.95468140]
[307.86578369 367.43655396]
[298.34423828 355.84603882]
[288.82266235 344.25555420]
[279.30111694 332.66503906]
[269.77954102 321.07452393]
[260.16769409 309.55877686]
[250.46614075 298.11849976]
[236.33340454 293.41586304]
[233.30899048 277.88641357]
[226.57974243 274.81570435]
[223.54690552 266.19067383]
[214.02534485 254.60017395]
[204.50378418 243.00967407]
[194.98222351 231.41915894]
[185.46066284 219.82865906]
[175.93910217 208.23814392]
[166.41754150 196.64764404]
[152.36003113 191.72468567]
[149.57868958 176.14987183]
[140.05712891 164.55935669]
[130.53556824 152.96885681]
[121.01401520 141.37834167]
[111.49244690 129.78784180]
[101.97088623 118.19733429]
[70.70507812 105.41649628]
[57.48663330 98.32617188]
[44.26818848 91.23583984]
[31.04974556 84.14551544]
[17.83130264 77.05518341]
[7.60722256 80.79666901]
[-2.77347207 78.33972931]
[-9.93432426 70.73189545]
[-11.68352890 60.65442657]
[-24.67391014 53.15442657]
[-37.66429138 45.65442657]
[-53.48424149 45.45503616]
[-60.63773346 32.39070511]
[-73.62811279 24.89070320]
[-87.93679810 20.38943291]
[-102.88140869 19.10156250]
[-117.82601929 17.81369019]
[-126.65287781 20.19607544]
[-132.99353027 16.38711357]
[-147.91618347 14.86582661]
[-162.83883667 13.34453964]
[-177.76150513 11.82325268]
[-192.68415833 10.30196667]
[-207.41482544 17.50885773]
[-220.86863708 8.13190556]
[-219.20544434 -8.18268394]
[-204.13621521 -14.65186119]
[-191.16287231 -4.62069035]
[-176.24020386 -3.09940362]
[-161.31755066 -1.57811689]
[-146.39489746 -0.05683013]
[-131.47224426 1.46445668]
[-116.53814697 2.86907911]
[-101.59353638 4.15695095]
[-86.64892578 5.44482327]
[-83.41744995 -1.32330430]
[-73.72301483 -21.62768745]
[-84.12038422 -32.43947601]
[-94.51775360 -43.25126266]
[-104.91511536 -54.06305313]
[-115.31248474 -64.87483978]
[-125.70985413 -75.68663025]
[-136.10722351 -86.49841309]
[-146.50457764 -97.31020355]
[-162.09301758 -96.07144928]
[-174.80065918 -105.18462372]
[-178.62733459 -120.34676361]
[-171.76622009 -134.39877319]
[-157.45690918 -140.70571899]
[-142.45582581 -136.28965759]
[-133.84602356 -123.23572540]
[-135.69279480 -107.70757294]
[-125.29542542 -96.89578247]
[-114.89806366 -86.08399200]
[-104.50069427 -75.27220917]
[-94.10332489 -64.46041870]
[-83.70596313 -53.64862823]
[-73.30859375 -42.83684158]
[-62.91122818 -32.02505493]
[-57.23710632 -21.32497406]
[-55.23120117 -10.61297894]
[-56.51867294 -0.96057963]
[-60.44117355 6.75103521]
[-66.12811279 11.90032196]
[-53.13773346 19.40032196]
[-38.24694061 19.06325912]
[-30.16429138 32.66404343]
[-17.17391014 40.16404343]
[-4.18352890 47.66404343]
[15.09553528 46.24135971]
[24.92163086 63.83674240]
[38.14007187 70.92707062]
[51.35851669 78.01739502]
[64.57695770 85.10772705]
[77.79540253 92.19805145]
[72.33302307 78.22799683]
[82.45375824 67.15682983]
[96.85670471 71.34670258]
[99.45897675 86.12026215]
[107.06027222 73.18888855]
[114.66156006 60.25751877]
[122.26284790 47.32614517]
[129.86413574 34.39477158]
[130.18714905 18.57686424]
[143.30699158 11.52568722]
[150.90827942 -1.40568602]
[146.69515991 -16.63805771]
[154.55952454 -30.34671593]
[169.83558655 -34.39855194]
[183.46032715 -26.38969040]
[187.35043335 -11.07164001]
[179.19796753 2.46766758]
[163.83964539 6.19560242]
[156.23835754 19.12697601]
[156.45904541 34.01994705]
[142.79550171 41.99605942]
[135.19421387 54.92743301]
[127.59293365 67.85881042]
[119.99163818 80.79018402]
[112.39035034 93.72154999]
[113.56139374 108.67577362]
[123.08295441 120.26628113]
[132.60452271 131.85678101]
[142.12608337 143.44729614]
[151.64764404 155.03779602]
[161.16920471 166.62831116]
[175.90776062 172.38029480]
[178.00805664 187.12608337]
[187.52961731 198.71658325]
[197.05117798 210.30709839]
[206.57273865 221.89759827]
[216.09429932 233.48811340]
[225.61585999 245.07861328]
[235.13742065 256.66912842]
[244.74926758 268.18487549]
[259.57592773 273.70581055]
[261.90643311 288.41696167]
[271.60797119 299.85723877]
[279.55184937 304.38314819]
[281.37005615 311.55297852]
[290.89160156 323.14346313]
[300.41317749 334.73397827]
[309.93472290 346.32449341]
[319.45629883 357.91500854]
[334.94149780 359.60202026]
[344.43261719 371.49209595]
[342.72885132 386.24447632]
[352.25042725 397.83499146]
[365.72219849 397.59765625]
[376.70907593 405.05596924]
[381.32348633 417.29986572]
[378.08947754 429.77752686]
[387.42874146 441.51544189]
[396.76797485 453.25335693]
[406.10723877 464.99124146]
[420.75408936 470.97290039]
[422.62365723 485.74969482]
[431.96289062 497.48760986]
[441.30215454 509.22549438]
[450.64138794 520.96343994]
[459.98065186 532.70129395]
[469.31988525 544.43920898]
[478.65914917 556.17712402]
[487.99838257 567.91503906]
[500.70712280 570.14819336]
[508.24377441 580.12384033]
[507.00067139 592.16143799]
[516.15533447 604.04388428]
[531.78582764 604.51464844]
[543.42242432 614.96087646]
[545.57061768 630.45019531]
[537.21618652 643.66900635]
[522.30377197 648.37579346]
[507.87457275 642.34814453]
[500.74160767 628.43218994]
[504.27288818 613.19848633]
[495.11822510 601.31610107]
[478.55737305 595.52087402]
[476.26049805 577.25427246]
[466.92123413 565.51635742]
[457.58200073 553.77844238]
[448.24273682 542.04058838]
[438.90350342 530.30267334]
[429.56423950 518.56475830]
[420.22500610 506.82684326]
[410.88574219 495.08892822]
[396.90689087 489.94686890]
[394.36932373 474.33050537]
[385.03005981 462.59259033]
[375.69082642 450.85467529]
[366.35156250 439.11679077]
[349.57910156 437.93353271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[5 152]
[6 151]
[7 150]
[8 149]
[9 148]
[10 146]
[11 145]
[13 143]
[15 142]
[16 141]
[17 140]
[18 139]
[19 138]
[20 137]
[21 136]
[23 134]
[24 133]
[25 132]
[26 131]
[27 130]
[28 129]
[29 103]
[30 102]
[31 101]
[32 100]
[33 99]
[37 97]
[38 96]
[39 95]
[41 93]
[42 92]
[43 63]
[44 62]
[45 61]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[65 87]
[66 86]
[67 85]
[68 84]
[69 83]
[70 82]
[71 81]
[72 80]
[107 128]
[108 127]
[109 126]
[110 125]
[111 124]
[113 122]
[114 121]
[160 199]
[161 198]
[162 197]
[163 196]
[165 194]
[166 193]
[167 192]
[168 191]
[169 190]
[170 189]
[171 188]
[172 187]
[175 185]
[176 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
