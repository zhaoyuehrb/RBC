%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGCUGCCGAUCACCGGAUGCCCCAGAUUCCUGGGACCCAAUCCCGGAUUUCAGAACCUCAGGACCUUGCAAGUCCGAGCUAGGAUUUCUCCCUGGACUUUAGAUUCCUGGAACGGGACGUCAGGCCGUAUUCCGGAUCCCUAGAUCCCGUGGGAGAUUCUCCGAUUCCGAACGGAUUCCAGAUCCCAAGAUUCCUGAUCUGCCGGCCCAGGCUCCUGCCCCGCCCCCGGUUCCCAGUGCGCGGCGCCCCGCGC\
CUGAGCGCCCCCGC\
) } def
/len { sequence length } bind def

/coor [
[209.49441528 510.80227661]
[220.94665527 495.72799683]
[212.41464233 483.39086914]
[203.88261414 471.05374146]
[195.35060120 458.71661377]
[186.81858826 446.37948608]
[178.07255554 434.19314575]
[169.11517334 422.16128540]
[160.15780640 410.12945557]
[151.20042419 398.09759521]
[143.70854187 397.74865723]
[143.01043701 412.73239136]
[128.02670288 412.03405762]
[128.72479248 397.05078125]
[121.23291016 396.70184326]
[111.19594574 407.84899902]
[101.15898895 418.99618530]
[91.12203217 430.14334106]
[87.78598785 450.04718018]
[69.11116028 455.13882446]
[59.33630371 466.51654053]
[56.46430588 486.49258423]
[37.91301346 492.01739502]
[28.40554810 503.61947632]
[18.89808273 515.22155762]
[9.39061832 526.82360840]
[-0.11684614 538.42572021]
[-2.24105573 554.68670654]
[-17.48732567 560.72680664]
[-30.17160034 550.33251953]
[-27.24538612 534.19659424]
[-11.71891975 528.91821289]
[-2.21145558 517.31616211]
[7.29600906 505.71408081]
[16.80347443 494.11199951]
[26.31093788 482.50994873]
[24.39373207 472.51736450]
[28.35915565 462.90954590]
[37.12805557 456.93093872]
[47.95859909 456.74166870]
[57.73345947 445.36395264]
[56.04928589 435.32946777]
[60.23720169 425.81655884]
[69.14283752 420.04360962]
[79.97486115 420.10638428]
[90.01181793 408.95922852]
[100.04877472 397.81204224]
[110.08573914 386.66488647]
[105.95787048 374.85653687]
[106.33699799 363.10476685]
[110.64698029 352.97531128]
[117.82017517 345.63870239]
[126.49857330 341.73635864]
[124.06590271 326.93493652]
[121.63323212 312.13351440]
[119.20056915 297.33209229]
[116.59947205 295.00134277]
[114.98157501 291.30950928]
[114.96797943 286.72476196]
[116.95070648 281.97241211]
[115.03607941 267.09509277]
[113.12145996 252.21780396]
[111.20683289 237.34049988]
[109.29220581 222.46318054]
[107.37757874 207.58587646]
[96.00154877 194.20373535]
[103.28645325 177.27403259]
[101.19885254 162.42001343]
[99.11125946 147.56597900]
[97.02365875 132.71195984]
[78.51840210 127.42046356]
[65.19689941 112.01592255]
[62.31994247 90.72438049]
[48.00112534 86.25543213]
[33.68231201 81.78647614]
[19.36349678 77.31752014]
[5.04468298 72.84856415]
[-8.83446980 80.40797424]
[-23.96998787 75.85916901]
[-31.38223457 61.90086746]
[-26.67365837 46.81428909]
[-12.63777351 39.55002975]
[2.39818048 44.41784668]
[9.51363754 58.52975082]
[23.83245087 62.99870682]
[38.15126419 67.46765900]
[52.47008133 71.93661499]
[66.78889465 76.40557098]
[77.57899475 65.98569489]
[73.61248016 51.51963806]
[69.64596558 37.05358124]
[65.67945099 22.58752441]
[61.71294403 8.12146854]
[57.74642944 -6.34458780]
[53.69582367 -20.78732300]
[49.56126404 -35.20624924]
[45.42670441 -49.62517548]
[31.88548279 -57.32407379]
[27.89785385 -72.00581360]
[35.32102966 -84.86785126]
[31.18646812 -99.28678131]
[27.05190849 -113.70570374]
[22.91734695 -128.12463379]
[18.78278732 -142.54354858]
[3.31969714 -150.75970459]
[-1.30852079 -167.29632568]
[7.29749060 -181.76396179]
[2.99544191 -196.13380432]
[-1.30660653 -210.50364685]
[-6.74705172 -217.79588318]
[-5.57406521 -225.06576538]
[-9.70862579 -239.48469543]
[-13.84318542 -253.90361023]
[-18.14523506 -268.27346802]
[-22.61418915 -282.59228516]
[-27.08314323 -296.91110229]
[-31.55209732 -311.22988892]
[-46.45294571 -315.22592163]
[-56.81100082 -326.65896606]
[-59.32104111 -341.88076782]
[-53.18212128 -356.03411865]
[-40.35315323 -364.60272217]
[-24.92781067 -364.85238647]
[-11.82826328 -356.70343018]
[-5.23453140 -342.75616455]
[-7.25064993 -327.46112061]
[-17.23328209 -315.69885254]
[-12.76432800 -301.38003540]
[-8.29537392 -287.06121826]
[-3.82641983 -272.74240112]
[-0.11830553 -269.78396606]
[1.79129601 -264.47872925]
[0.57573974 -258.03817749]
[4.71029997 -243.61924744]
[8.84486008 -229.20033264]
[13.06323624 -214.80569458]
[17.36528397 -200.43585205]
[21.66733360 -186.06600952]
[33.73532486 -181.60940552]
[41.15284729 -170.86152649]
[41.03520966 -157.60870361]
[33.20171356 -146.67811584]
[37.33627319 -132.25918579]
[41.47083282 -117.84026337]
[45.60539246 -103.42134094]
[49.73995590 -89.00241089]
[62.85100555 -82.02846527]
[67.24944305 -67.46452332]
[59.84563065 -53.75973511]
[63.98019028 -39.34080887]
[68.11475372 -24.92188263]
[72.96195221 -19.37825775]
[72.21248627 -10.31110001]
[76.17900085 4.15495586]
[80.14550781 18.62101173]
[84.11202240 33.08706665]
[88.07853699 47.55312347]
[92.04505157 62.01918030]
[107.54193115 64.97682190]
[119.36936951 73.47154999]
[130.74707031 63.69668961]
[142.12477112 53.92183304]
[143.86788940 41.16546249]
[153.51573181 33.25759888]
[165.56690979 34.00400925]
[177.05757141 24.36219406]
[182.65567017 9.56449890]
[197.37876892 7.31068182]
[208.86944580 -2.33113217]
[220.36010742 -11.97294617]
[225.45744324 -27.55977631]
[241.55825806 -30.67353821]
[252.09942627 -18.11106300]
[246.23709106 -2.79554653]
[230.00192261 -0.48227978]
[218.51126099 9.15953445]
[207.02058411 18.80134773]
[202.24436951 32.90939713]
[186.69938660 35.85285950]
[175.20872498 45.49467468]
[170.08351135 62.29432678]
[151.89964294 65.29953766]
[140.52192688 75.07439423]
[129.14422607 84.84925079]
[132.78924561 98.05162048]
[130.73336792 111.59274292]
[123.33400726 123.11828613]
[111.87767792 130.62437439]
[113.96527863 145.47839355]
[116.05287170 160.33241272]
[118.14047241 175.18643188]
[127.93825531 183.53909302]
[129.38786316 195.92915344]
[122.25489044 205.67126465]
[124.16950989 220.54856873]
[126.08413696 235.42587280]
[127.99876404 250.30317688]
[129.91339111 265.18048096]
[131.82801819 280.05776978]
[134.00198364 294.89941406]
[136.43466187 309.70083618]
[138.86732483 324.50225830]
[141.29998779 339.30368042]
[166.54656982 354.34628296]
[163.23226929 389.14022827]
[172.18965149 401.17205811]
[181.14703369 413.20391846]
[190.10440063 425.23574829]
[194.83192444 427.27700806]
[198.00697327 430.58441162]
[199.40771484 434.36398315]
[199.15571594 437.84747314]
[207.68772888 450.18460083]
[216.21974182 462.52172852]
[224.75177002 474.85885620]
[233.28378296 487.19598389]
[243.95544434 483.19137573]
[255.21907043 481.49572754]
[266.58129883 482.17999268]
[277.54507446 485.21109009]
[287.63150024 490.45321655]
[296.40066528 497.67413330]
[303.47085571 506.55535889]
[308.53521729 516.70623779]
[311.37503052 527.68109131]
[311.86914062 538.99890137]
[309.99911499 550.16418457]
[305.84997559 560.68896484]
[299.60629272 570.11376953]
[291.54400635 578.02801514]
[299.19464111 590.93023682]
[306.84527588 603.83245850]
[320.53918457 611.75634766]
[320.37539673 626.65002441]
[334.06930542 634.57385254]
[333.90554810 649.46759033]
[341.55618286 662.36981201]
[349.20681763 675.27203369]
[356.24981689 681.03149414]
[356.87039185 688.36920166]
[364.37039185 701.35961914]
[371.87039185 714.34997559]
[379.37039185 727.34039307]
[386.87039185 740.33074951]
[394.37039185 753.32110596]
[408.83529663 761.04766846]
[409.10586548 777.44458008]
[394.90380859 785.64410400]
[380.83892822 777.21136475]
[381.38003540 760.82110596]
[373.88003540 747.83074951]
[366.38003540 734.84039307]
[358.88003540 721.84997559]
[351.38003540 708.85961914]
[343.88003540 695.86920166]
[336.30456543 682.92266846]
[328.65393066 670.02044678]
[321.00329590 657.11822510]
[307.85662842 650.11724854]
[307.47317505 634.30065918]
[294.32647705 627.29968262]
[293.94305420 611.48309326]
[286.29241943 598.58087158]
[278.64178467 585.67864990]
[260.33987427 589.86004639]
[241.68977356 587.52252197]
[224.94586182 578.93310547]
[212.13745117 565.11535645]
[204.82275391 547.72772217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 216]
[3 215]
[4 214]
[5 213]
[6 212]
[7 208]
[8 207]
[9 206]
[10 205]
[15 48]
[16 47]
[17 46]
[18 45]
[20 41]
[21 40]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[53 203]
[54 202]
[55 201]
[56 200]
[60 199]
[61 198]
[62 197]
[63 196]
[64 195]
[65 194]
[67 191]
[68 190]
[69 189]
[70 188]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[89 158]
[90 157]
[91 156]
[92 155]
[93 154]
[94 153]
[95 151]
[96 150]
[97 149]
[100 146]
[101 145]
[102 144]
[103 143]
[104 142]
[107 138]
[108 137]
[109 136]
[111 135]
[112 134]
[113 133]
[114 130]
[115 129]
[116 128]
[117 127]
[160 184]
[161 183]
[162 182]
[165 180]
[166 179]
[168 177]
[169 176]
[170 175]
[230 264]
[231 263]
[232 262]
[234 260]
[236 258]
[237 257]
[238 256]
[240 255]
[241 254]
[242 253]
[243 252]
[244 251]
[245 250]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
