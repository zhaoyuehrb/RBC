%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCCGCUGCCCCGGCUCCGCCGCUCGCAGAGAGAUUCGGAGGAGCCCGGGCGGGGGGGAGGAGGAGGGGGAGGAGGGAGCGGAGAUCUCGGGGCUCGGAGCCGGCCGCCGCUCCGCUCCGAUCGCUGUGGGGCUUGGUUUUUUGGGGGUGGGGGGGCGGGGGGGCUCAGAU\
) } def
/len { sequence length } bind def

/coor [
[71.75595856 105.20375824]
[58.14232254 111.50209045]
[44.52869415 117.80043030]
[35.25280380 130.61715698]
[20.45303726 128.93901062]
[6.83940506 135.23735046]
[-2.43648410 148.05407715]
[-17.23625183 146.37593079]
[-30.84988213 152.67427063]
[-44.46351242 158.97261047]
[-58.07714462 165.27095032]
[-71.69077301 171.56927490]
[-85.30440521 177.86761475]
[-94.58029938 190.68434143]
[-109.38006592 189.00619507]
[-122.99369812 195.30453491]
[-136.60733032 201.60287476]
[-150.22096252 207.90121460]
[-163.83459473 214.19955444]
[-177.44822693 220.49787903]
[-186.72410583 233.31460571]
[-201.52388000 231.63647461]
[-215.13751221 237.93479919]
[-228.75114441 244.23313904]
[-242.18922424 250.89781189]
[-255.44190979 257.92395020]
[-268.69458008 264.95007324]
[-274.75915527 279.80270386]
[-290.19259644 284.18322754]
[-303.15563965 274.73132324]
[-303.70419312 258.69763184]
[-291.41741943 248.38188171]
[-275.72070312 251.69738770]
[-262.46801758 244.67126465]
[-249.21534729 237.64514160]
[-247.83746338 234.36410522]
[-244.78291321 231.59837341]
[-240.31654358 230.13729858]
[-235.04946899 230.61950684]
[-221.43585205 224.32116699]
[-207.82221985 218.02284241]
[-199.52006531 205.65661621]
[-183.74655151 206.88424683]
[-170.13291931 200.58592224]
[-156.51928711 194.28758240]
[-142.90567017 187.98924255]
[-129.29203796 181.69090271]
[-115.67839813 175.39256287]
[-107.37625122 163.02633667]
[-91.60274506 164.25398254]
[-77.98911285 157.95564270]
[-64.37548065 151.65731812]
[-50.76185226 145.35897827]
[-37.14822006 139.06063843]
[-23.53458786 132.76229858]
[-15.23243713 120.39608002]
[0.54106855 121.62371826]
[14.15470028 115.32537842]
[22.45685005 102.95915222]
[38.23035431 104.18679810]
[51.84398651 97.88845825]
[65.45761871 91.59012604]
[72.00070953 78.09242249]
[68.51219940 63.50371933]
[65.02368927 48.91501617]
[50.39172745 44.45934296]
[40.02302933 33.35137939]
[36.62902451 18.64263535]
[41.02365112 4.30585670]
[51.93092728 -5.83795500]
[48.44241714 -20.42665863]
[44.95390701 -35.01536179]
[41.46539307 -49.60406876]
[24.54123116 -56.02998734]
[14.92379379 -71.18161011]
[16.28812408 -88.91863251]
[27.90308380 -102.18519592]
[15.83016205 -113.28369141]
[19.66886330 -129.22723389]
[35.47026062 -133.61447144]
[46.97923279 -121.93218994]
[42.35633469 -106.19812012]
[54.26969528 -103.67004395]
[64.02713776 -96.26205444]
[69.73040009 -85.33797455]
[70.23711395 -72.95275879]
[65.38906097 -61.46604538]
[56.05409622 -53.09257889]
[59.54261017 -38.50387573]
[63.03112030 -23.91517067]
[66.51963043 -9.32646656]
[80.83587646 -5.21420908]
[91.24080658 5.58363867]
[94.86790466 20.23664284]
[90.64587402 34.83360291]
[79.61238861 45.42650223]
[83.10090637 60.01520538]
[86.58941650 74.60391235]
[111.27272034 76.64585876]
[122.74809265 95.72988129]
[137.59188843 97.88896942]
[152.43568420 100.04805756]
[167.27947998 102.20714569]
[182.12327576 104.36623383]
[195.93174744 93.65328217]
[212.88479614 96.17472076]
[222.58799744 109.89195251]
[237.46835327 111.78269196]
[252.34870911 113.67343903]
[267.22906494 115.56418610]
[282.10943604 117.45493317]
[296.77481079 111.51885223]
[308.42529297 120.79870605]
[323.30563354 122.68945312]
[338.18600464 124.58020020]
[353.06637573 126.47094727]
[367.94671631 128.36169434]
[382.82708740 130.25244141]
[397.70742798 132.14318848]
[412.58779907 134.03393555]
[427.46817017 135.92466736]
[442.41867065 137.14205933]
[457.40890503 137.68359375]
[472.39910889 138.22512817]
[487.38934326 138.76666260]
[502.38690186 139.03747559]
[517.38690186 139.03747559]
[532.38690186 139.03747559]
[546.31072998 130.37377930]
[560.64611816 138.33790588]
[560.64611816 154.73704529]
[546.31072998 162.70117188]
[532.38690186 154.03747559]
[517.38690186 154.03747559]
[502.38690186 154.03747559]
[498.41522217 156.74606323]
[492.69274902 156.96484375]
[486.84780884 153.75688171]
[471.85757446 153.21534729]
[456.86737061 152.67381287]
[441.87713623 152.13227844]
[449.85861206 164.83251953]
[445.08084106 179.05128479]
[431.04974365 184.35488892]
[418.06124878 176.85160828]
[415.64627075 162.04728699]
[425.57742310 150.80503845]
[410.69705200 148.91429138]
[395.81671143 147.02354431]
[380.93634033 145.13279724]
[366.05596924 143.24205017]
[351.17562866 141.35130310]
[336.29525757 139.46055603]
[321.41491699 137.56980896]
[306.53454590 135.67906189]
[292.93350220 141.75038147]
[280.21868896 132.33529663]
[265.33831787 130.44454956]
[250.45796204 128.55380249]
[235.57760620 126.66305542]
[220.69725037 124.77230835]
[211.69692993 134.02116394]
[198.81881714 136.42268372]
[186.73573303 130.87702942]
[179.96418762 119.21003723]
[165.12039185 117.05094147]
[150.27659607 114.89185333]
[135.43280029 112.73276520]
[120.58900452 110.57367706]
[115.17897797 118.68624115]
[106.62197876 124.11057281]
[96.22426605 125.65606689]
[85.72525787 122.75450134]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 62]
[2 61]
[3 60]
[5 58]
[6 57]
[8 55]
[9 54]
[10 53]
[11 52]
[12 51]
[13 50]
[15 48]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[22 41]
[23 40]
[24 39]
[25 35]
[26 34]
[27 33]
[63 98]
[64 97]
[65 96]
[70 91]
[71 90]
[72 89]
[73 88]
[77 82]
[100 169]
[101 168]
[102 167]
[103 166]
[104 165]
[107 161]
[108 160]
[109 159]
[110 158]
[111 157]
[113 155]
[114 154]
[115 153]
[116 152]
[117 151]
[118 150]
[119 149]
[120 148]
[121 147]
[122 141]
[123 140]
[124 139]
[125 138]
[126 135]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
