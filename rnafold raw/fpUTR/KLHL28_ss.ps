%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUAGGCGAACUGAGAAUUUUGUGUGCAUUUUCUCCUCAUAAGUGAUACUUAAACGGACACAGUGGAAGAGCUGGAGUGUCUAGUGUGAGCCUGAAUGCUUUGGAGUGUGGAAGAGAUAUUUUUUUUUUUUGAAGGAAUAAUACUAUUACUUUUGAAUGACUCGUGCGAAAAGUCUAAGUUAUCAUUUGAAGACCCAAAUUU\
) } def
/len { sequence length } bind def

/coor [
[-41.64467621 141.56398010]
[-44.05010605 126.75852203]
[-48.57591629 141.05946350]
[-53.10172272 155.36041260]
[-57.62753296 169.66136169]
[-62.15334320 183.96231079]
[-66.67915344 198.26325989]
[-60.59230423 213.10676575]
[-68.52789307 227.04972839]
[-84.39840698 229.39628601]
[-96.02935028 218.34635925]
[-94.49845886 202.37651062]
[-80.98009491 193.73744202]
[-76.45428467 179.43649292]
[-71.92848206 165.13555908]
[-67.40267181 150.83460999]
[-62.87686157 136.53366089]
[-58.35105133 122.23271179]
[-69.17906189 132.61318970]
[-77.39579010 145.16250610]
[-91.31620789 150.75016785]
[-105.92916870 147.36470032]
[-115.97422791 136.22482300]
[-117.83531189 121.34072876]
[-110.84246063 108.07046509]
[-97.51299286 101.19112396]
[-82.64607239 103.17881775]
[-67.71214294 101.77251434]
[-81.49211884 95.84695435]
[-95.27209473 89.92139435]
[-109.05207825 83.99584198]
[-122.83205414 78.07028198]
[-136.61203003 72.14472198]
[-147.90563965 80.05165863]
[-161.52351379 81.33430481]
[-173.89743042 75.76403809]
[-181.83813477 64.89385986]
[-183.35714722 51.62717438]
[-197.04469299 45.49114609]
[-210.73225403 39.35511398]
[-224.41979980 33.21908569]
[-238.10736084 27.08305740]
[-251.79490662 20.94702721]
[-265.22039795 28.50100517]
[-280.34283447 26.72197914]
[-291.38739014 16.50033379]
[-294.26080322 1.90987754]
[-307.94836426 -4.22615194]
[-321.63592529 -10.36218166]
[-335.32348633 -16.49821091]
[-349.01101685 -22.63424110]
[-362.69857788 -28.77026939]
[-376.38613892 -34.90629959]
[-369.50811768 -21.57615852]
[-370.81958008 -6.63360214]
[-379.91452026 5.29461479]
[-393.97674561 10.51508522]
[-408.65213013 7.41136265]
[-419.39663696 -3.05552793]
[-422.88336182 -17.64465904]
[-418.03268433 -31.83870888]
[-406.34658813 -41.24268723]
[-391.44192505 -42.94451904]
[-404.15588379 -50.90413666]
[-416.86981201 -58.86375046]
[-429.58377075 -66.82337189]
[-444.92791748 -63.03747559]
[-458.41149902 -71.28178406]
[-462.03494263 -86.66509247]
[-453.64852905 -100.06075287]
[-438.22778320 -103.52136230]
[-424.92153931 -94.99379730]
[-421.62414551 -79.53731537]
[-408.91021729 -71.57769775]
[-396.19625854 -63.61808395]
[-383.48229980 -55.65847015]
[-370.25012207 -48.59385300]
[-356.56256104 -42.45782471]
[-342.87500000 -36.32179642]
[-329.18743896 -30.18576622]
[-315.49987793 -24.04973602]
[-301.81234741 -17.91370583]
[-288.12478638 -11.77767658]
[-275.32046509 -19.33992004]
[-260.34124756 -17.89530182]
[-248.95175171 -7.78922081]
[-245.65888977 7.25947285]
[-231.97132874 13.39550209]
[-218.28376770 19.53153229]
[-204.59622192 25.66756058]
[-190.90866089 31.80359077]
[-177.22111511 37.93962097]
[-163.25515747 29.31651306]
[-146.73570251 30.72945595]
[-134.18792725 41.81908035]
[-130.68647766 58.36474609]
[-116.90649414 64.29030609]
[-103.12651825 70.21585846]
[-89.34654236 76.14141846]
[-75.56656647 82.06697845]
[-61.78658676 87.99253082]
[-27.40074730 97.88149261]
[-12.43640232 96.84788513]
[2.52794433 95.81427765]
[17.49229050 94.78067017]
[32.45663834 93.74706268]
[38.91602325 90.14829254]
[47.65790176 92.81407166]
[62.63632965 92.00990295]
[74.93049622 83.60140228]
[89.12562561 90.58773041]
[102.13511658 83.12093353]
[110.38486481 70.59329987]
[118.63461304 58.06566238]
[126.88436127 45.53802490]
[135.13410950 33.01038742]
[143.38385010 20.48275185]
[151.63360596 7.95511484]
[159.88334656 -4.57252169]
[160.30548096 -20.96623421]
[174.84118652 -28.55870628]
[188.53735352 -19.53945160]
[187.30455017 -3.18670821]
[172.41098022 3.67722487]
[164.16123962 16.20486069]
[155.91148376 28.73249817]
[147.66174316 41.26013565]
[139.41200256 53.78777313]
[131.16224670 66.31540680]
[122.91250610 78.84304810]
[114.66275787 91.37068176]
[123.47953796 103.50593567]
[137.94334412 99.53121185]
[152.40713501 95.55648804]
[166.87094116 91.58177185]
[181.33474731 87.60704803]
[195.79855347 83.63232422]
[210.26234436 79.65760040]
[224.69526672 75.57216644]
[239.09646606 71.37626648]
[253.49766541 67.18036652]
[267.89886475 62.98446274]
[278.84335327 50.77175522]
[294.83428955 54.40794754]
[299.42156982 70.15243530]
[287.88619995 81.80863953]
[272.09475708 77.38565826]
[257.69357300 81.58155823]
[243.29237366 85.77745819]
[228.89117432 89.97336578]
[223.34608459 94.86486816]
[214.23707581 94.12140656]
[199.77326965 98.09613037]
[185.30946350 102.07084656]
[170.84567261 106.04557037]
[156.38186646 110.02029419]
[141.91806030 113.99501801]
[127.45425415 117.96974182]
[125.27817535 132.81105042]
[137.99212646 140.77067566]
[150.70606995 148.73028564]
[163.42002869 156.68991089]
[176.13397217 164.64952087]
[188.84791565 172.60913086]
[203.18447876 166.97271729]
[217.91873169 170.81398010]
[227.45304871 182.45704651]
[228.29319763 197.30400085]
[241.00714111 205.26361084]
[256.90142822 203.08378601]
[268.41571045 214.25518799]
[266.71725464 230.20808411]
[253.10896301 238.70477295]
[238.02993774 233.22732544]
[233.04753113 217.97756958]
[220.33357239 210.01794434]
[206.61114502 215.74795532]
[191.97279358 212.25761414]
[182.08091736 200.68159485]
[180.88830566 185.32308960]
[168.17436218 177.36346436]
[155.46040344 169.40385437]
[142.74645996 161.44424438]
[130.03250122 153.48461914]
[117.31855774 145.52500916]
[107.89908600 157.19862366]
[93.86028290 162.48181152]
[79.08160400 159.91458130]
[67.64695740 150.20639038]
[62.71618652 136.03997803]
[65.65184784 121.33004761]
[75.64270020 110.14153290]
[89.92979431 105.56616211]
[76.56427002 114.03218079]
[63.44049835 106.98832703]
[48.46207047 107.79249573]
[33.49024200 108.71141052]
[18.52589798 109.74501801]
[3.56155157 110.77862549]
[-11.40279484 111.81223297]
[-26.36714172 112.84584045]
[-12.54311275 118.66789246]
[-7.51760101 132.80097961]
[-14.56248760 146.04370117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[28 101]
[29 100]
[30 99]
[31 98]
[32 97]
[33 96]
[38 92]
[39 91]
[40 90]
[41 89]
[42 88]
[43 87]
[47 83]
[48 82]
[49 81]
[50 80]
[51 79]
[52 78]
[53 77]
[63 76]
[64 75]
[65 74]
[66 73]
[102 201]
[103 200]
[104 199]
[105 198]
[106 197]
[108 196]
[109 195]
[111 193]
[112 131]
[113 130]
[114 129]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
[132 158]
[133 157]
[134 156]
[135 155]
[136 154]
[137 153]
[138 152]
[139 150]
[140 149]
[141 148]
[142 147]
[159 185]
[160 184]
[161 183]
[162 182]
[163 181]
[164 180]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
