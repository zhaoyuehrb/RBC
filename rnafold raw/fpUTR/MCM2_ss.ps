%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGUCGCGUUCCGUAGGGCUCUUCCCGGGCUUUGGUGGGUCACGUGAACCACUUUUCGCGCGAAACCUGGUUGUUGCUGUAGUGGCGGAGAGGAUCGUGGUACUGCU\
) } def
/len { sequence length } bind def

/coor [
[137.33813477 343.61294556]
[134.80311584 328.82870483]
[125.02619171 317.59213257]
[130.31996155 302.68286133]
[127.78495026 287.89862061]
[125.24993896 273.11437988]
[122.50596619 258.36749268]
[119.55359650 243.66090393]
[115.08634949 237.63441467]
[116.73196411 228.49665833]
[106.95503998 217.26007080]
[112.24880981 202.35078430]
[109.71379089 187.56654358]
[107.17877960 172.78230286]
[104.64376831 157.99806213]
[102.10875702 143.21383667]
[99.57374573 128.42959595]
[96.20637512 113.81245422]
[86.24594116 104.00014496]
[89.39040375 90.37649536]
[85.20146179 75.97327423]
[81.01251984 61.57005310]
[66.01118469 58.97749710]
[53.67338181 50.16469193]
[46.41510391 36.92317963]
[45.62902451 21.90508652]
[51.41756821 8.09196949]
[62.58320618 -1.79711676]
[58.39426041 -16.20033646]
[54.20531845 -30.60355759]
[50.01637650 -45.00677872]
[45.82743073 -59.40999603]
[40.34970093 -66.90674591]
[41.72994995 -74.28032684]
[37.95027924 -88.79631805]
[34.17060852 -103.31231689]
[23.20562935 -114.71756744]
[27.48627663 -128.98379517]
[23.70660591 -143.49978638]
[19.92693329 -158.01577759]
[8.96195316 -169.42103577]
[13.24260044 -183.68727112]
[-1.47556961 -187.84931946]
[-12.06441784 -198.74763489]
[-15.75199986 -213.38552856]
[-11.64506912 -227.80735779]
[-0.94290996 -238.16734314]
[-4.72258091 -252.68333435]
[-8.50225163 -267.19934082]
[-18.34460831 -281.00384521]
[-7.80422306 -294.28302002]
[7.87387085 -287.83059692]
[6.01374245 -270.97900391]
[9.79341316 -256.46301270]
[13.57308388 -241.94702148]
[27.96873474 -238.12199402]
[38.58759689 -227.53445435]
[42.50711441 -212.95695496]
[38.57794952 -198.27844238]
[27.75859451 -187.46693420]
[38.45322800 -177.09996033]
[34.44292831 -161.79545593]
[38.22259903 -147.27946472]
[42.00226974 -132.76347351]
[52.69690323 -122.39649963]
[48.68660355 -107.09198761]
[52.46627426 -92.57598877]
[56.24594498 -78.05999756]
[60.23065186 -63.59894180]
[64.41959381 -49.19572067]
[68.60853577 -34.79249954]
[72.79748535 -20.38928032]
[76.98642731 -5.98606014]
[91.71405792 -3.62761235]
[104.00776672 4.92657518]
[111.39856720 18.02379036]
[112.37389374 33.09259796]
[106.68683624 47.14764404]
[95.41574097 57.38110733]
[99.60468292 71.78433228]
[103.79362488 86.18754578]
[113.75405884 95.99985504]
[110.60959625 109.62350464]
[114.12348938 112.71964264]
[116.16712189 116.42813873]
[116.73403931 120.17810059]
[116.01518250 123.46130371]
[114.35798645 125.89457703]
[116.89299774 140.67881775]
[119.42800903 155.46305847]
[121.96302032 170.24729919]
[124.49803162 185.03153992]
[127.03304291 199.81576538]
[136.99128723 212.10983276]
[131.51620483 225.96163940]
[134.26017761 240.70852661]
[137.21255493 255.41511536]
[142.03477478 263.34939575]
[140.03417969 270.57934570]
[142.56918335 285.36358643]
[145.10420227 300.14782715]
[155.06243896 312.44189453]
[149.58735657 326.29370117]
[152.12237549 341.07794189]
[165.71818542 348.80374146]
[171.11865234 363.47918701]
[165.77383423 378.17501831]
[152.20739746 385.95227051]
[136.82498169 383.13879395]
[126.88971710 371.06301880]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 104]
[2 103]
[4 101]
[5 100]
[6 99]
[7 97]
[8 96]
[10 95]
[12 93]
[13 92]
[14 91]
[15 90]
[16 89]
[17 88]
[18 83]
[20 81]
[21 80]
[22 79]
[28 73]
[29 72]
[30 71]
[31 70]
[32 69]
[34 68]
[35 67]
[36 66]
[38 64]
[39 63]
[40 62]
[42 60]
[47 55]
[48 54]
[49 53]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
