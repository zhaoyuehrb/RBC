%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAAGAAUGCGGAGCCGGGUUCACACACCCCGCGGCGGCGAGGCCUUAAAUAGGGAAACGGCCUGAGGCGCGCGCGGGCCUGGAGCCGGGAUCCGCCCUAGGGGCUCGGAUCGCCGCGCGCUCGCCGCUCGCCCGCCAGCCCGCCCGUGGUCCGUGGCGGCGCGCUCCACCCGGCACGGGGAGGCGCGGGGCGCACC\
) } def
/len { sequence length } bind def

/coor [
[246.60217285 196.94161987]
[259.81906128 189.84931946]
[246.45394897 183.03945923]
[232.41181946 187.87205505]
[218.76069641 181.15629578]
[213.78703308 166.39483643]
[200.42193604 159.58497620]
[186.37980652 164.41757202]
[172.72868347 157.70179749]
[167.75502014 142.94035339]
[154.38992310 136.13049316]
[141.02482605 129.32063293]
[127.65972900 122.51078033]
[114.29463196 115.70092773]
[97.82235718 123.39202881]
[79.44551849 115.51547241]
[72.46405792 94.85321045]
[57.58233643 92.97321320]
[42.70061493 91.09321594]
[27.81889534 89.21321869]
[13.15780163 95.15988159]
[1.50062847 85.88844299]
[-13.38109207 84.00844574]
[-28.26281166 82.12844849]
[-43.14453125 80.24845123]
[-49.68786240 88.69485474]
[-59.07756424 93.62133026]
[-69.58464050 94.19654846]
[-79.30555725 90.38352966]
[-86.50710297 82.93422699]
[-89.93535614 73.24229431]
[-104.71199036 70.66336060]
[-119.48863220 68.08441925]
[-134.26527405 65.50548553]
[-149.04191589 62.92654800]
[-163.81855774 60.34761047]
[-178.61499023 57.88480759]
[-193.43031311 55.53829193]
[-208.24563599 53.19177628]
[-223.08628845 58.67499542]
[-234.44648743 49.04196930]
[-251.47454834 56.04016876]
[-264.67526245 44.48271942]
[-279.52560425 42.36920166]
[-294.37597656 40.25568390]
[-309.22631836 38.14216232]
[-324.07669067 36.02864456]
[-331.78445435 49.13050842]
[-343.92236328 58.28142548]
[-358.63949585 62.08594894]
[-373.69158936 59.96391678]
[-386.78329468 52.23892212]
[-395.91824341 40.08897400]
[-399.70339966 25.36684799]
[-397.56158447 10.31756306]
[-389.81936646 -2.76397562]
[-377.65740967 -11.88292789]
[-362.93032837 -15.64871883]
[-347.88385010 -13.48709297]
[-334.81253052 -5.72768354]
[-325.70956421 6.44625711]
[-321.96316528 21.17829132]
[-307.11279297 23.29180908]
[-292.26245117 25.40532684]
[-277.41210938 27.51884651]
[-262.56173706 29.63236427]
[-252.69781494 22.62057495]
[-240.30346680 24.26589775]
[-232.09997559 34.22664261]
[-218.31901550 28.57558632]
[-205.89912415 38.37644958]
[-191.08380127 40.72296524]
[-176.26847839 43.06948471]
[-169.16384888 41.00897598]
[-161.23962402 45.57097244]
[-146.46298218 48.14990997]
[-131.68634033 50.72884369]
[-116.90969849 53.30778122]
[-102.13305664 55.88671875]
[-87.35641479 58.46565628]
[-72.29513550 46.12144852]
[-52.70735550 48.86192322]
[-41.26453400 65.36672974]
[-26.38281441 67.24672699]
[-11.50109386 69.12672424]
[3.38062692 71.00672150]
[16.97728157 64.92558289]
[29.69889450 74.33149719]
[44.58061600 76.21149445]
[59.46233368 78.09149170]
[74.34405518 79.97148895]
[86.05051422 70.59284973]
[87.46213531 55.65942001]
[88.87376404 40.72599030]
[90.28538513 25.79256248]
[91.69701385 10.85913181]
[92.87389374 -4.09462786]
[93.81575775 -19.06502914]
[94.75761414 -34.03543091]
[95.69947052 -49.00582886]
[90.65960693 -65.19335938]
[104.81935120 -74.51741791]
[117.69882965 -63.49219894]
[110.66986847 -48.06397247]
[109.72801208 -33.09357071]
[108.78615570 -18.12317085]
[107.84429932 -3.15277004]
[110.28069305 0.96435654]
[110.15043640 6.65716839]
[106.63043976 12.27075672]
[105.21881866 27.20418549]
[103.80718994 42.13761520]
[102.39556885 57.07104492]
[100.98394012 72.00447845]
[118.62953186 83.89916992]
[121.10448456 102.33582306]
[134.46958923 109.14568329]
[147.83468628 115.95554352]
[161.19978333 122.76539612]
[174.56488037 129.57525635]
[189.43058777 124.92247009]
[202.88769531 132.01902771]
[207.23179626 146.21987915]
[220.59689331 153.02973938]
[235.46260071 148.37695312]
[248.91970825 155.47351074]
[253.26380920 169.67436218]
[266.62890625 176.48422241]
[280.25106812 182.76411438]
[294.10925293 188.50436401]
[309.81988525 186.63713074]
[318.61740112 198.65599060]
[327.75250244 199.05017090]
[332.64706421 204.59677124]
[346.41339111 210.55398560]
[360.17968750 216.51121521]
[373.94601440 222.46842957]
[387.71234131 228.42564392]
[394.32733154 228.04541016]
[399.37872314 230.67381287]
[401.81286621 234.79228210]
[415.38525391 241.17897034]
[428.95767212 247.56565857]
[443.66989136 242.44822693]
[457.34326172 249.11857605]
[462.13128662 263.17596436]
[475.70370483 269.56265259]
[489.27609253 275.94934082]
[502.84851074 282.33602905]
[516.42089844 288.72274780]
[529.99334717 295.10943604]
[536.61700439 294.93716431]
[541.58337402 297.72293091]
[543.88690186 301.91583252]
[557.25201416 308.72567749]
[570.61712646 315.53552246]
[579.69311523 316.64523315]
[584.13739014 322.55874634]
[597.39385986 329.57769775]
[613.21051025 329.19726562]
[620.83789062 341.99069214]
[634.09442139 349.00964355]
[649.12445068 344.12356567]
[663.16912842 351.37078857]
[667.89599609 366.45162964]
[660.50073242 380.41891479]
[645.37072754 384.98611450]
[631.48242188 377.44354248]
[627.07543945 362.26611328]
[613.81896973 355.24716187]
[598.95056152 356.12966919]
[590.37493896 342.83419800]
[577.11846924 335.81524658]
[563.80725098 328.90063477]
[550.44213867 322.09075928]
[537.07702637 315.28091431]
[523.60662842 308.68182373]
[510.03424072 302.29513550]
[496.46182251 295.90844727]
[482.88940430 289.52175903]
[469.31701660 283.13507080]
[455.74459839 276.74838257]
[441.86117554 282.01965332]
[428.00585938 275.73599243]
[422.57098389 261.13806152]
[408.99856567 254.75137329]
[395.42617798 248.36468506]
[381.75512695 242.19197083]
[367.98880005 236.23474121]
[354.22247314 230.27752686]
[340.45617676 224.32031250]
[326.68984985 218.36309814]
[312.87716675 212.51417542]
[298.15774536 214.79199219]
[288.36898804 202.36256409]
[274.51080322 196.62231445]
[277.70135498 211.27906799]
[268.35708618 223.01300049]
[253.35807800 223.18460083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 128]
[3 127]
[6 124]
[7 123]
[10 120]
[11 119]
[12 118]
[13 117]
[14 116]
[17 91]
[18 90]
[19 89]
[20 88]
[22 86]
[23 85]
[24 84]
[25 83]
[31 80]
[32 79]
[33 78]
[34 77]
[35 76]
[36 75]
[37 73]
[38 72]
[39 71]
[41 69]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[92 114]
[93 113]
[94 112]
[95 111]
[96 110]
[97 107]
[98 106]
[99 105]
[100 104]
[129 196]
[130 195]
[132 193]
[134 192]
[135 191]
[136 190]
[137 189]
[138 188]
[141 187]
[142 186]
[143 185]
[146 182]
[147 181]
[148 180]
[149 179]
[150 178]
[151 177]
[154 176]
[155 175]
[156 174]
[158 173]
[159 172]
[161 170]
[162 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
