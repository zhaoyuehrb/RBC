%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACGGGCUCAGUUCGUAAAGGAGCCGGGUGACUUCAGAGGCGCCGGCCCGUCCGUCUGCCGCACCUGAGCACGGCCCCUGCCCGAGCCUGGCCCGCCGCGAUGCUGUAGGGACCGCCGUGUCCUCCCGCCGGACCGUUAUCCGCGCCGGGCGCCCGCCAGACCCGCUGGCAAG\
) } def
/len { sequence length } bind def

/coor [
[63.68535995 203.81398010]
[63.21969223 188.82119751]
[70.82405090 175.89163208]
[84.15351868 169.01229858]
[99.09775543 170.30453491]
[111.04930115 179.37098694]
[107.59971619 164.77304077]
[104.15012360 150.17507935]
[100.70053864 135.57711792]
[94.28359985 136.52259827]
[87.56546021 136.27865601]
[80.77140808 134.77108765]
[74.14299011 131.96902466]
[64.52398682 143.47879028]
[54.90497971 154.98855591]
[45.28597641 166.49832153]
[46.94409180 182.21537781]
[36.93810272 194.44877625]
[21.20438194 195.94062805]
[9.07747078 185.80584717]
[7.75204754 170.05723572]
[18.01446342 158.03816223]
[33.77621078 156.87931824]
[43.39521408 145.36955261]
[53.01422119 133.85977173]
[62.63322449 122.35001373]
[57.26604080 108.34310913]
[42.41871643 106.20838928]
[27.57139587 104.07366180]
[12.72407436 101.93894196]
[-2.12324739 99.80422211]
[-16.97056961 97.66949463]
[-25.94334030 99.54922485]
[-32.06291580 95.36187744]
[-44.79537582 104.33530426]
[-59.77745056 101.69104767]
[-68.25376892 89.49729919]
[-83.06062317 87.09790039]
[-97.86747742 84.69850922]
[-112.67433167 82.29911804]
[-127.50200653 80.03196716]
[-142.34933472 77.89724731]
[-157.21511841 75.89511871]
[-172.09817505 74.02574921]
[-184.42376709 83.91793060]
[-200.12478638 82.11422729]
[-209.88610840 69.68473053]
[-207.91650391 54.00365829]
[-195.38450623 44.37429810]
[-179.72512817 46.50958252]
[-170.22880554 59.14268875]
[-155.34573364 61.01206207]
[-148.29434204 58.71842194]
[-140.21461487 63.04992676]
[-125.36728668 65.18464661]
[-118.27606964 63.01723480]
[-110.27494049 67.49226379]
[-95.46808624 69.89165497]
[-80.66123199 72.29104614]
[-65.85437775 74.69044495]
[-53.96104431 65.79750824]
[-38.91060638 68.01990509]
[-29.66352463 80.55503082]
[-14.83584595 82.82217407]
[0.01147524 84.95689392]
[14.85879707 87.09162140]
[29.70611763 89.22634125]
[44.55344009 91.36106873]
[59.40076065 93.49578857]
[76.74499512 69.50468445]
[103.86878204 64.62692261]
[108.60578156 50.39453125]
[113.34277344 36.16214371]
[118.07976532 21.92975426]
[122.81675720 7.69736576]
[127.55375671 -6.53502321]
[132.29074097 -20.76741219]
[136.64501953 -35.12151718]
[140.61344910 -49.58704758]
[144.58186340 -64.05258179]
[148.55029297 -78.51811218]
[152.51872253 -92.98364258]
[156.48713684 -107.44917297]
[155.14479065 -112.56043243]
[155.84802246 -117.20306396]
[158.06898499 -120.67049408]
[161.07455444 -122.57184601]
[165.81155396 -136.80422974]
[170.54853821 -151.03662109]
[167.56527710 -166.57402039]
[178.92590332 -176.20655823]
[175.94264221 -191.74394226]
[187.30325317 -201.37648010]
[192.04025269 -215.60887146]
[186.17378235 -230.54084778]
[194.31488037 -244.36482239]
[210.21839905 -246.47621155]
[221.68449402 -235.25534058]
[219.91738892 -219.30990601]
[206.27264404 -210.87187195]
[201.53564453 -196.63948059]
[204.85772705 -182.12008667]
[193.15829468 -171.46955872]
[196.48037720 -156.95014954]
[184.78092957 -146.29963684]
[180.04394531 -132.06724548]
[175.30694580 -117.83485413]
[170.95268250 -103.48075104]
[166.98425293 -89.01522064]
[163.01582336 -74.54968262]
[159.04739380 -60.08415604]
[155.07897949 -45.61862183]
[151.11054993 -31.15309143]
[152.55325317 -27.90236855]
[152.47352600 -23.78540230]
[150.47892761 -19.53450203]
[146.52313232 -16.03041840]
[141.78614807 -1.79802918]
[137.04914856 12.43435955]
[132.31214905 26.66674805]
[127.57516479 40.89913559]
[122.83816528 55.13152695]
[118.10117340 69.36391449]
[125.69419098 75.38230896]
[131.38229370 83.22580719]
[134.74378967 92.31291199]
[135.52944946 101.96991730]
[149.99497986 105.93834686]
[164.46051025 109.90676880]
[178.92604065 113.87519836]
[193.42642212 117.71436310]
[207.99299622 121.29409790]
[222.59095764 124.74368286]
[237.18891907 128.19326782]
[251.78688049 131.64285278]
[265.09927368 123.12490082]
[280.51751709 126.59663391]
[288.89425659 139.99835205]
[285.25970459 155.37902832]
[271.77017212 163.61361694]
[256.42877197 159.81665039]
[248.33728027 146.24081421]
[233.73933411 142.79122925]
[219.14137268 139.34164429]
[204.54341125 135.89205933]
[197.28723145 137.41879272]
[189.71681213 132.24841309]
[182.43453979 133.64540100]
[174.95761108 128.34072876]
[160.49208069 124.37229919]
[146.02655029 120.40387726]
[131.56101990 116.43545532]
[124.70858002 125.60680389]
[115.29849243 132.12753296]
[118.74808502 146.72549438]
[122.19766998 161.32344055]
[125.64725494 175.92140198]
[130.25703430 190.19549561]
[135.99729919 204.05369568]
[141.73754883 217.91188049]
[147.47779846 231.77008057]
[153.21804810 245.62828064]
[167.42999268 253.07139587]
[170.33013916 268.85012817]
[159.69372559 280.86041260]
[143.68011475 279.88894653]
[134.57356262 266.68096924]
[139.35984802 251.36853027]
[133.61959839 237.51033020]
[127.87934875 223.65214539]
[122.13909912 209.79394531]
[116.39884949 195.93576050]
[112.00849152 210.27885437]
[100.64339447 220.06837463]
[85.80816650 222.28555298]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 157]
[7 156]
[8 155]
[9 154]
[13 26]
[14 25]
[15 24]
[16 23]
[27 69]
[28 68]
[29 67]
[30 66]
[31 65]
[32 64]
[34 63]
[37 60]
[38 59]
[39 58]
[40 57]
[41 55]
[42 54]
[43 52]
[44 51]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[78 113]
[79 112]
[80 111]
[81 110]
[82 109]
[83 108]
[87 107]
[88 106]
[89 105]
[91 103]
[93 101]
[94 100]
[127 152]
[128 151]
[129 150]
[130 149]
[131 147]
[132 145]
[133 144]
[134 143]
[135 142]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
