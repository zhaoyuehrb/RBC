%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGGGAGGGCGAGCCCAAGCGCGGGGGAGGGAGUGUAAAUAGAGCGAAGGCUGCUCUGUGUCAGCCCCGUCACCGCCGGGCGGCCCGCGCGGAGUCUGAGGGAG\
) } def
/len { sequence length } bind def

/coor [
[115.62547302 366.65307617]
[126.81831360 355.90597534]
[124.64434052 341.06436157]
[122.47035980 326.22274780]
[120.29637909 311.38110352]
[106.40377045 306.00888062]
[97.00295258 294.32638550]
[94.69667053 279.40835571]
[100.20326996 265.24594116]
[112.13720703 255.67890930]
[102.63701630 244.20739746]
[108.29254150 229.43154907]
[106.11856079 214.58992004]
[103.94458008 199.74830627]
[94.44438934 188.27679443]
[100.09991455 173.50094604]
[97.92593384 158.65931702]
[95.75195312 143.81768799]
[93.00115204 141.38237000]
[91.37075043 137.42695618]
[91.59299469 132.53129578]
[94.09442902 127.59355927]
[93.22225952 112.61894226]
[85.70028687 100.83286285]
[91.80311584 88.25323486]
[90.93094635 73.27861023]
[90.05877686 58.30398941]
[88.96890259 43.34363556]
[87.66156769 28.40071487]
[86.13703918 13.47838783]
[84.39564514 -1.42018735]
[82.43775177 -16.29186058]
[80.26377869 -31.13348389]
[78.08979797 -45.97510910]
[73.68862152 -54.16049194]
[76.07495880 -61.27936554]
[74.33356476 -76.17794037]
[60.33012390 -82.33026123]
[51.34565735 -94.58489227]
[49.71228409 -109.59150696]
[55.76912689 -123.30903625]
[67.79792786 -132.09388733]
[66.05653381 -146.99246216]
[64.31513977 -161.89103699]
[62.57374191 -176.78961182]
[60.83235168 -191.68818665]
[59.09095764 -206.58676147]
[57.34956360 -221.48535156]
[55.60816956 -236.38392639]
[43.96620941 -247.42222595]
[45.48117447 -263.39358521]
[58.99090958 -272.04614258]
[74.13190460 -266.74240112]
[79.28928375 -251.55090332]
[70.50674438 -238.12532043]
[72.24813843 -223.22673035]
[73.98953247 -208.32815552]
[75.73092651 -193.42958069]
[77.47232056 -178.53100586]
[79.21371460 -163.63243103]
[80.95510864 -148.73385620]
[82.69650269 -133.83528137]
[96.42698669 -128.06126404]
[105.48404694 -116.11029053]
[107.35546875 -101.13150024]
[101.43928528 -87.13523102]
[89.23213959 -77.91933441]
[90.97353363 -63.02075958]
[92.93142700 -48.14908600]
[95.10540009 -33.30746460]
[97.27938080 -18.46583748]
[101.42690277 -12.20716190]
[99.29421997 -3.16158104]
[101.03561401 11.73699474]
[104.99935150 18.11365128]
[102.60448456 27.09337807]
[103.91182709 42.03629684]
[107.68842316 48.52554321]
[105.03339386 57.43181610]
[105.90557098 72.40644073]
[106.77774048 87.38105774]
[114.29971313 99.16713715]
[108.19688416 111.74676514]
[109.06905365 126.72138977]
[110.59358215 141.64372253]
[112.76755524 156.48533630]
[114.94153595 171.32696533]
[124.59722900 183.86004639]
[118.78620911 197.57432556]
[120.96018219 212.41595459]
[123.13416290 227.25756836]
[132.78985596 239.79064941]
[126.97883606 253.50492859]
[141.15528870 259.24734497]
[150.49237061 271.23550415]
[152.56152344 286.18826294]
[146.90620422 300.07614136]
[135.13800049 309.20712280]
[137.31198120 324.04876709]
[139.48596191 338.89038086]
[141.65994263 353.73202515]
[155.46485901 360.81747437]
[162.43850708 374.67919922]
[159.89933777 389.98712158]
[148.82374573 400.85501099]
[133.47050476 403.10391235]
[119.74324799 395.86914062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 101]
[3 100]
[4 99]
[5 98]
[10 93]
[12 91]
[13 90]
[14 89]
[16 87]
[17 86]
[18 85]
[22 84]
[23 83]
[25 81]
[26 80]
[27 79]
[28 77]
[29 76]
[30 74]
[31 73]
[32 71]
[33 70]
[34 69]
[36 68]
[37 67]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
