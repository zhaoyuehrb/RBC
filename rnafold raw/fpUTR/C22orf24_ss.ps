%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUGUUCAGAGGAGCUCAGCUCUGGGGGAGAGCUCAAAGCCGACACCUAUUGAGUUGCAGUUAAAAUGAGGGCGAAAAAGGCUUUUGUUUCAGUUCUGCAGAUGGUCUGGGAGUUUGUGUUUCUUAGCAAGAAUUUUCUAGACGUUUUGGCUUGAACCAUCUGAAAAACUGCCUCAAGCUUUUGC\
) } def
/len { sequence length } bind def

/coor [
[100.72830200 235.48832703]
[99.47646332 220.54064941]
[98.22462463 205.59298706]
[96.97278595 190.64530945]
[95.72094727 175.69763184]
[84.11777496 185.20375061]
[69.41613007 182.22689819]
[62.42499924 168.95571899]
[68.28441620 155.14749146]
[82.68640900 150.95433044]
[95.04216003 159.45889282]
[95.04216003 144.45889282]
[95.04216003 129.45889282]
[95.04216003 114.45888519]
[83.19290924 105.26132202]
[68.66166687 108.98195648]
[54.13043213 112.70259094]
[39.59919357 116.42322540]
[25.09955025 120.26514435]
[10.63251209 124.22808075]
[-3.83452582 128.19100952]
[-18.30156326 132.15394592]
[-32.76860046 136.11686707]
[-47.23563766 140.07980347]
[-61.63443756 144.28392029]
[-75.96097565 148.72805786]
[-90.28751373 153.17219543]
[-104.61405182 157.61631775]
[-118.90295410 162.18000793]
[-126.07841492 176.00572205]
[-140.59693909 180.55184937]
[-153.73342896 173.62594604]
[-160.92646790 179.28903198]
[-168.26110840 178.26588440]
[-182.58764648 182.71002197]
[-196.91418457 187.15415955]
[-210.25079346 197.62178040]
[-224.00128174 187.70408630]
[-218.27769470 171.74548340]
[-201.35830688 172.82762146]
[-187.03176880 168.38348389]
[-172.70523071 163.93934631]
[-158.41633606 159.37567139]
[-151.94883728 146.00752258]
[-137.56375122 141.05538940]
[-123.58586121 147.92971802]
[-118.20214844 142.84451294]
[-109.05818176 143.28977966]
[-94.73164368 138.84565735]
[-80.40510559 134.40151978]
[-66.07856750 129.95738220]
[-63.09312057 126.20648193]
[-57.71178436 124.30289459]
[-51.19857025 125.61276245]
[-36.73153305 121.64983368]
[-22.26449394 117.68690491]
[-7.79745674 113.72396851]
[6.66958046 109.76103973]
[21.13661766 105.79811096]
[26.76839256 100.98905945]
[35.87855530 101.89199066]
[50.40979385 98.17135620]
[64.94103241 94.45072174]
[79.47226715 90.73007965]
[83.93296814 89.52247620]
[88.21347046 89.41905212]
[81.00474548 76.26480103]
[73.79602051 63.11055374]
[66.58729553 49.95630264]
[59.37856674 36.80205536]
[52.16984177 23.64780617]
[44.96111298 10.49355698]
[37.75238800 -2.66069198]
[30.54366112 -15.81494045]
[23.33493614 -28.96919060]
[7.96488762 -31.84940720]
[-1.91787505 -43.96819305]
[-1.64701450 -59.60343170]
[8.64957714 -71.37263489]
[24.11016464 -73.71875000]
[37.43473053 -65.53401184]
[42.33182144 -50.68300629]
[36.48918533 -36.17791748]
[43.69791031 -23.02366638]
[50.90663528 -9.86941814]
[58.11536407 3.28483057]
[65.32408905 16.43907928]
[72.53281403 29.59332848]
[79.74153900 42.74757767]
[86.95027161 55.90182495]
[94.15899658 69.05607605]
[101.36772156 82.21032715]
[115.17746735 88.06616211]
[129.64450073 84.10323334]
[144.11154175 80.14030457]
[158.57858276 76.17736816]
[173.04562378 72.21443939]
[178.60877991 57.84929276]
[191.41419983 49.61068726]
[206.43768311 50.48181152]
[217.92988586 59.91936874]
[232.39692688 55.95643997]
[246.86395264 51.99350739]
[261.33099365 48.03057480]
[275.79803467 44.06764603]
[290.26507568 40.10471344]
[306.74108887 13.41428757]
[319.89532471 6.20556116]
[333.04959106 -1.00316501]
[346.20382690 -8.21189117]
[359.35809326 -15.42061806]
[372.51232910 -22.62934494]
[385.66656494 -29.83806992]
[398.82083130 -37.04679489]
[411.97506714 -44.25552368]
[425.06863403 -51.57390594]
[438.10058594 -59.00143051]
[451.13253784 -66.42895508]
[459.29083252 -79.98450470]
[474.17950439 -79.56450653]
[487.21145630 -86.99202728]
[500.24340820 -94.41955566]
[513.27539062 -101.84707642]
[521.08233643 -116.26870728]
[537.48052979 -116.44794464]
[545.60083008 -102.20041656]
[537.08984375 -88.18275452]
[520.70288086 -88.81512451]
[507.67095947 -81.38759613]
[494.63897705 -73.96007538]
[481.60702515 -66.53254700]
[474.38088989 -53.50826263]
[458.56005859 -53.39699936]
[445.52810669 -45.96947479]
[432.49615479 -38.54194641]
[428.23321533 -32.48627090]
[419.18380737 -31.10127449]
[406.02954102 -23.89254761]
[392.87530518 -16.68382072]
[379.72103882 -9.47509480]
[366.56680298 -2.26636887]
[353.41256714 4.94235754]
[340.25830078 12.15108395]
[327.10406494 19.35980988]
[313.94979858 26.56853676]
[314.82662964 41.54288864]
[328.73229980 47.16715240]
[342.63796997 52.79141617]
[356.54364014 58.41567612]
[370.99417114 52.01588440]
[385.70727539 57.78648376]
[391.95394897 72.30387878]
[386.02810669 86.95516205]
[371.44546509 93.04798126]
[356.85766602 86.96758270]
[350.91937256 72.32135010]
[337.01370239 66.69708252]
[323.10803223 61.07282257]
[309.20236206 55.44855881]
[294.22799683 54.57175064]
[279.76095581 58.53468323]
[265.29391479 62.49761581]
[250.82688904 66.46054840]
[236.35984802 70.42347717]
[221.89280701 74.38640594]
[216.81445312 88.36310577]
[204.33215332 96.76884460]
[189.11582947 96.20619202]
[177.00854492 86.68148041]
[162.54151917 90.64440918]
[148.07447815 94.60733795]
[133.60743713 98.57026672]
[119.14040375 102.53320312]
[110.04216003 114.45888519]
[110.04216003 129.45889282]
[110.04216003 144.45889282]
[110.04216003 159.45889282]
[110.66862488 174.44580078]
[111.92046356 189.39347839]
[113.17229462 204.34114075]
[114.42413330 219.28881836]
[115.67597198 234.23648071]
[127.90525055 244.24749756]
[129.39064026 259.98184204]
[119.25090027 272.10458374]
[103.50174713 273.42355347]
[91.48687744 263.15618896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[3 180]
[4 179]
[5 178]
[11 177]
[12 176]
[13 175]
[14 174]
[15 64]
[16 63]
[17 62]
[18 61]
[19 59]
[20 58]
[21 57]
[22 56]
[23 55]
[24 54]
[25 51]
[26 50]
[27 49]
[28 48]
[29 46]
[32 43]
[34 42]
[35 41]
[36 40]
[66 92]
[67 91]
[68 90]
[69 89]
[70 88]
[71 87]
[72 86]
[73 85]
[74 84]
[75 83]
[93 173]
[94 172]
[95 171]
[96 170]
[97 169]
[101 165]
[102 164]
[103 163]
[104 162]
[105 161]
[106 160]
[107 145]
[108 144]
[109 143]
[110 142]
[111 141]
[112 140]
[113 139]
[114 138]
[115 137]
[116 135]
[117 134]
[118 133]
[120 131]
[121 130]
[122 129]
[123 128]
[146 159]
[147 158]
[148 157]
[149 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
