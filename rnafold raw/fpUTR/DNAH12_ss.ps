%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCUUCUCCAGCUACUCGUUUGAGAGCCGGUGGCGUUCCGGAGGUUUCUCCCUCGUUAUCCCCCUGCCUUUCACCUGAGGAGAGGCUCUGACUGUCUCUCUCUCUCUCUGGCGUCUGCGCAGCGGGGAAGUAGUGAGAAACAAUCAGAGUACAGAGUAUUUUAAUCUUUAGGGGAUCAAG\
) } def
/len { sequence length } bind def

/coor [
[87.52077484 189.32077026]
[99.32922363 179.25398254]
[98.03622437 164.30981445]
[96.74321747 149.36564636]
[95.45021057 134.42147827]
[94.15720367 119.47731781]
[80.32391357 113.67731476]
[68.75961304 123.23069763]
[57.19531631 132.78407288]
[45.63101959 142.33744812]
[39.42619705 163.85649109]
[17.98703384 166.75857544]
[7.10938978 177.08702087]
[-3.76825500 187.41546631]
[-14.64589977 197.74392700]
[-25.52354431 208.07237244]
[-36.40118790 218.40081787]
[-41.08112717 233.51402283]
[-55.63826370 236.66664124]
[-66.51590729 246.99508667]
[-77.39355469 257.32354736]
[-81.52525330 273.19366455]
[-97.40477753 277.28912354]
[-108.69663239 265.39685059]
[-103.78472137 249.75059509]
[-87.72200012 246.44589233]
[-76.84435272 236.11744690]
[-65.96671295 225.78900146]
[-62.06481552 211.41456604]
[-46.72963715 207.52317810]
[-35.85199356 197.19473267]
[-24.97434807 186.86627197]
[-14.09670353 176.53782654]
[-3.21905875 166.20938110]
[7.65858603 155.88093567]
[6.17009735 148.08709717]
[7.91838551 140.25093079]
[12.68902779 133.67646790]
[19.75849342 129.48797607]
[28.00314522 128.43800354]
[36.07764053 130.77314758]
[47.64193726 121.21977234]
[59.20623779 111.66639709]
[70.77053070 102.11302185]
[77.74137878 88.83117676]
[79.03438568 73.88700867]
[80.32739258 58.94284439]
[81.62039948 43.99867630]
[82.91340637 29.05451012]
[84.20641327 14.11034298]
[85.49941254 -0.83382463]
[78.98049164 -15.24958801]
[87.78609467 -27.26252937]
[89.07909393 -42.20669556]
[79.18477631 -54.23749542]
[80.70895386 -69.37458801]
[92.23945618 -78.73316956]
[89.77449799 -84.91307831]
[90.68303680 -90.55609894]
[93.84375000 -94.16783905]
[95.65180206 -109.05847168]
[97.45984650 -123.94910431]
[99.26789856 -138.83973694]
[101.07595062 -153.73036194]
[102.75541687 -168.63604736]
[104.30617523 -183.55567932]
[105.85693359 -198.47529602]
[107.40769196 -213.39492798]
[108.82962799 -228.32737732]
[97.28041077 -238.52157593]
[93.98687744 -253.38784790]
[100.00746155 -267.17974854]
[112.84120178 -274.69192505]
[106.32228088 -289.10769653]
[115.12788391 -301.12063599]
[116.42088318 -316.06481934]
[109.90196228 -330.48056030]
[118.70756531 -342.49349976]
[120.00056458 -357.43768311]
[121.29357147 -372.38183594]
[121.94068146 -387.36788940]
[121.94068146 -402.36788940]
[121.94068146 -417.36788940]
[121.94068146 -432.36788940]
[121.94068146 -447.36788940]
[121.94068146 -462.36788940]
[121.94068146 -477.36788940]
[109.84609985 -487.28024292]
[107.00347900 -502.65728760]
[114.75502014 -516.23846436]
[129.44067383 -521.61108398]
[144.12634277 -516.23846436]
[151.87788391 -502.65728760]
[149.03526306 -487.28024292]
[136.94067383 -477.36788940]
[136.94067383 -462.36788940]
[136.94067383 -447.36788940]
[136.94067383 -432.36788940]
[136.94067383 -417.36788940]
[136.94067383 -402.36788940]
[136.94067383 -387.36788940]
[149.31642151 -395.84378052]
[163.71012878 -391.62228394]
[169.54747009 -377.80471802]
[162.54002380 -364.54214478]
[147.83581543 -361.57794189]
[136.23774719 -371.08883667]
[134.94473267 -356.14468384]
[133.65173340 -341.20050049]
[140.26313782 -327.85363770]
[131.36505127 -314.77178955]
[130.07205200 -299.82763672]
[136.68345642 -286.48077393]
[127.78536987 -273.39892578]
[139.13810730 -263.79406738]
[142.70033264 -249.17303467]
[136.90232849 -235.09338379]
[123.77379608 -227.03436279]
[126.33632660 -220.08134460]
[122.32731628 -211.84416199]
[120.77655792 -196.92454529]
[119.22579956 -182.00491333]
[117.67504120 -167.08529663]
[120.11717224 -160.08908081]
[115.96658325 -151.92231750]
[114.15853119 -137.03169250]
[112.35048676 -122.14105225]
[110.54243469 -107.25041962]
[108.73438263 -92.35978699]
[107.18362427 -77.44016266]
[116.93534851 -66.24018860]
[115.83694458 -51.06626129]
[104.02326202 -40.91368866]
[102.73026276 -25.96952248]
[109.34166718 -12.62266636]
[100.44358063 0.45918107]
[99.15057373 15.40334797]
[97.85757446 30.34751511]
[96.56456757 45.29168320]
[95.27156067 60.23585129]
[93.97855377 75.18001556]
[92.68554688 90.12418365]
[95.63653564 81.67195129]
[104.29663086 74.97511292]
[117.33882141 73.17378998]
[131.91554260 78.48076630]
[144.23719788 91.51628113]
[156.28048706 100.45826721]
[168.32377625 109.40026093]
[180.36706543 118.34224701]
[192.41035461 127.28423309]
[204.45364380 136.22621155]
[216.49694824 145.16821289]
[232.81837463 149.75590515]
[232.92819214 166.70950317]
[216.66755676 171.50823975]
[207.55494690 157.21150208]
[195.51165771 148.26951599]
[183.46836853 139.32752991]
[171.42507935 130.38552856]
[159.38179016 121.44355011]
[147.33850098 112.50156403]
[135.29521179 103.55957031]
[128.74674988 107.21575928]
[136.05911255 120.31267548]
[147.06063843 130.50907898]
[140.76277161 144.12292480]
[125.86910248 142.34002686]
[122.96219635 127.62504578]
[115.64983368 114.52812958]
[109.10137177 118.18431091]
[110.39437866 133.12847900]
[111.68738556 148.07264709]
[112.98039246 163.01681519]
[114.27339172 177.96098328]
[127.63542175 185.84994507]
[133.77760315 200.09962463]
[130.33815002 215.23071289]
[118.63960266 225.42500305]
[103.18028259 226.76257324]
[89.90462494 218.72912598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 175]
[3 174]
[4 173]
[5 172]
[6 171]
[7 44]
[8 43]
[9 42]
[10 41]
[12 35]
[13 34]
[14 33]
[15 32]
[16 31]
[17 30]
[19 28]
[20 27]
[21 26]
[45 142]
[46 141]
[47 140]
[48 139]
[49 138]
[50 137]
[51 136]
[53 134]
[54 133]
[57 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[65 123]
[66 122]
[67 121]
[68 120]
[69 118]
[73 114]
[75 112]
[76 111]
[78 109]
[79 108]
[80 107]
[81 101]
[82 100]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[147 163]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
