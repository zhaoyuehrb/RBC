%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCACGUGGCGGCGGGGCGGGGACCGGGCGGGCCGGGCGCUGGGAGCUGGCUGUCCCAGGAGCAGAGCAGUCUCCCUGUCCAGAUCACCAGGAUCCCUGCUUGCUGGAGA\
) } def
/len { sequence length } bind def

/coor [
[65.45902252 376.99768066]
[58.44635391 363.73916626]
[53.09703064 377.75292969]
[47.74770737 391.76666260]
[50.87623215 407.86462402]
[38.32342911 418.41729736]
[23.00254250 412.56900024]
[20.67438889 396.33596802]
[33.73397064 386.41732788]
[39.08329391 372.40359497]
[44.43261719 358.38986206]
[48.38259506 343.91928101]
[50.89519119 329.13122559]
[53.40778351 314.34313965]
[55.92037582 299.55508423]
[58.43296814 284.76702881]
[60.94556427 269.97894287]
[58.93462372 262.75402832]
[63.74159241 254.81381226]
[66.66794586 240.10203552]
[69.59429932 225.39025879]
[72.52065277 210.67848206]
[75.44701385 195.96670532]
[78.37336731 181.25492859]
[81.09310913 166.50355530]
[83.60569763 151.71548462]
[78.10961914 137.87199402]
[88.04920959 125.56284332]
[90.56180573 110.77478027]
[85.87844086 97.60064697]
[94.65013123 86.71262360]
[97.16271973 71.92456055]
[86.48720551 60.81872559]
[84.42229462 45.73265839]
[91.55221558 32.48017883]
[104.95809174 26.04430580]
[107.47068787 11.25623989]
[109.98327637 -3.53182507]
[112.49587250 -18.31989098]
[115.00846863 -33.10795593]
[113.00083160 -39.65262604]
[114.48168945 -45.32818222]
[118.09896851 -48.64495468]
[121.43678284 -63.26887512]
[124.77459717 -77.89279175]
[128.11241150 -92.51670837]
[131.45022583 -107.14063263]
[134.58261108 -121.80992126]
[137.50897217 -136.52169800]
[140.43531799 -151.23347473]
[134.07862854 -168.44436646]
[145.99444580 -181.24359131]
[148.50704956 -196.03166199]
[151.01963806 -210.81973267]
[153.32458496 -225.64157104]
[155.42144775 -240.49429321]
[148.78923035 -255.49247742]
[158.67910767 -268.57385254]
[174.91723633 -266.28140259]
[180.79920959 -250.97341919]
[170.27416992 -238.39743042]
[168.17730713 -223.54472351]
[170.39009094 -216.37904358]
[165.80770874 -208.30712891]
[163.29510498 -193.51907349]
[160.78251648 -178.73100281]
[167.55332947 -168.59857178]
[165.48118591 -156.18104553]
[155.14710999 -148.30712891]
[152.22074890 -133.59535217]
[149.29438782 -118.88356781]
[151.10191345 -111.60509491]
[146.07414246 -103.80281830]
[142.73632812 -89.17889404]
[139.39851379 -74.55497742]
[136.06069946 -59.93106079]
[132.72288513 -45.30714035]
[129.79652405 -30.59536171]
[127.28393555 -15.80729675]
[124.77134705 -1.01923168]
[122.25875092 13.76883316]
[119.74615479 28.55689812]
[130.27410889 39.05929184]
[132.62690735 53.92295074]
[125.69525146 67.48043823]
[111.95079041 74.43715668]
[109.43819427 89.22521973]
[114.12155914 102.39935303]
[105.34986877 113.28737640]
[102.83728027 128.07543945]
[108.15364075 142.97666931]
[98.39376831 154.22807312]
[95.88117218 169.01614380]
[97.54042053 178.14855957]
[93.08514404 184.18127441]
[90.15879059 198.89305115]
[87.23243713 213.60482788]
[84.30607605 228.31661987]
[81.37972260 243.02839661]
[78.45336914 257.74017334]
[75.73362732 272.49154663]
[73.22103882 287.27960205]
[70.70844269 302.06768799]
[68.19584656 316.85574341]
[65.68325806 331.64379883]
[63.17066193 346.43188477]
[75.94828033 338.57485962]
[90.81945801 340.53652954]
[101.12264252 351.43811035]
[102.24250793 366.39624023]
[93.67741394 378.71041870]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 11]
[3 10]
[4 9]
[12 106]
[13 105]
[14 104]
[15 103]
[16 102]
[17 101]
[19 100]
[20 99]
[21 98]
[22 97]
[23 96]
[24 95]
[25 93]
[26 92]
[28 90]
[29 89]
[31 87]
[32 86]
[36 82]
[37 81]
[38 80]
[39 79]
[40 78]
[43 77]
[44 76]
[45 75]
[46 74]
[47 73]
[48 71]
[49 70]
[50 69]
[52 66]
[53 65]
[54 64]
[55 62]
[56 61]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
