%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGCCUCCUGCCCUAGGAGAAACGUUCGCUCUGGAGGCUUGGGCGGCAAGAGCCCCUUGUGGCCACCGAGUCCUCCGACGCCCUCGCCAGGCUGGCCUUUGGGUUGGCCCAGGCAGGACGGGCAGCCGAGAGCACUCGGGCCGCGUCGCCAGGAGCCGCCCAGGGUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[-15.28697491 472.79446411]
[-18.57358932 484.30838013]
[-25.54250908 494.00253296]
[-35.35229492 500.74667358]
[-46.83203506 503.76431274]
[-58.62108994 502.72201538]
[-65.44307709 516.08093262]
[-72.26506805 529.43981934]
[-79.08705902 542.79876709]
[-85.90904999 556.15765381]
[-92.73104095 569.51654053]
[-94.54983521 586.37268066]
[-111.25068665 589.29119873]
[-118.67840576 574.05096436]
[-106.08995056 562.69458008]
[-99.26795959 549.33569336]
[-92.44596863 535.97674561]
[-85.62397766 522.61785889]
[-78.80198669 509.25894165]
[-71.98000336 495.90002441]
[-82.51908112 481.20709229]
[-84.18181610 463.11672974]
[-76.42561340 446.59542847]
[-61.30558395 436.22253418]
[-42.93079758 434.92102051]
[-36.84634399 421.21047974]
[-30.76188660 407.49990845]
[-24.67743111 393.78933716]
[-18.59297562 380.07879639]
[-12.50852013 366.36822510]
[-6.42406464 352.65768433]
[-0.33960888 338.94711304]
[5.74484682 325.23657227]
[11.82930279 311.52600098]
[17.91375732 297.81542969]
[15.10642815 280.50787354]
[30.04077721 269.76364136]
[35.87526703 255.94485474]
[41.70975494 242.12606812]
[47.54424667 228.30729675]
[53.37873459 214.48851013]
[50.25758743 197.23477173]
[64.99437714 186.22111511]
[70.57697296 172.29867554]
[76.15957642 158.37622070]
[81.74217224 144.45378113]
[87.32476807 130.53132629]
[92.90737152 116.60887909]
[87.07288361 102.79009247]
[73.20169067 97.08131409]
[59.33050537 91.37253571]
[44.02896500 96.19356537]
[30.80035973 87.11701965]
[29.79254913 71.10565948]
[41.77863693 60.44201660]
[57.56392288 63.30633163]
[65.03928375 77.50135040]
[78.91047668 83.21012878]
[92.78166199 88.91890717]
[107.11334229 84.49138641]
[115.34754181 71.95352173]
[123.58174896 59.41566849]
[131.81594849 46.87780762]
[140.05015564 34.33995056]
[148.28436279 21.80209351]
[149.05136108 15.17708206]
[152.54319763 10.63639545]
[157.05213928 8.96599007]
[165.73617554 -3.26460719]
[174.42021179 -15.49520493]
[183.10424805 -27.72580338]
[191.78828430 -39.95640182]
[193.46890259 -55.68809128]
[207.14596558 -61.58616638]
[215.83000183 -73.81676483]
[224.51403809 -86.04736328]
[233.08666992 -98.35630035]
[241.54718018 -110.74257660]
[242.94186401 -126.50218964]
[256.50958252 -132.64764404]
[264.85726929 -145.11022949]
[273.09149170 -157.64808655]
[281.32568359 -170.18594360]
[289.55987549 -182.72380066]
[297.67990112 -195.33590698]
[305.68508911 -208.02120972]
[313.45858765 -220.84979248]
[320.99789429 -233.81741333]
[328.53717041 -246.78503418]
[328.15057373 -265.17861938]
[343.67156982 -273.33532715]
[350.97415161 -286.43771362]
[358.27670288 -299.54010010]
[365.57928467 -312.64248657]
[372.88183594 -325.74487305]
[380.18441772 -338.84725952]
[387.48696899 -351.94964600]
[394.78955078 -365.05203247]
[394.00048828 -381.43218994]
[407.93612671 -390.07684326]
[422.26068115 -382.09310913]
[422.23825073 -365.69396973]
[407.89193726 -357.74945068]
[400.58935547 -344.64706421]
[393.28680420 -331.54467773]
[385.98422241 -318.44229126]
[378.68167114 -305.33993530]
[371.37908936 -292.23754883]
[364.07653809 -279.13516235]
[356.77395630 -266.03277588]
[359.77798462 -254.29203796]
[353.77160645 -243.30662537]
[341.50479126 -239.24575806]
[333.96551514 -226.27813721]
[326.42620850 -213.31051636]
[326.77194214 -208.51455688]
[324.08380127 -203.45642090]
[318.37039185 -200.01603699]
[310.36523438 -187.33071899]
[309.45144653 -179.96961975]
[302.09774780 -174.48959351]
[293.86352539 -161.95173645]
[285.62933350 -149.41387939]
[277.39514160 -136.87602234]
[276.34783936 -129.53271484]
[268.89584351 -124.18713379]
[268.10629272 -109.31346893]
[253.93345642 -102.28205872]
[245.47293091 -89.89579010]
[244.29246521 -82.57271576]
[236.74462891 -77.36332703]
[228.06059265 -65.13272858]
[219.37655640 -52.90213013]
[218.31707764 -38.04525375]
[204.01887512 -31.27236366]
[195.33483887 -19.04176712]
[186.65080261 -6.81116915]
[177.96676636 5.41942883]
[169.28273010 17.65002632]
[160.82221985 30.03629684]
[152.58801270 42.57415390]
[144.35380554 55.11201096]
[136.11961365 67.64987183]
[127.88539886 80.18772888]
[119.65119934 92.72558594]
[106.82981873 122.19147491]
[101.24722290 136.11392212]
[95.66461945 150.03637695]
[90.08202362 163.95881653]
[84.49942017 177.88127136]
[78.91682434 191.80372620]
[83.26412201 203.97198486]
[78.30074310 215.46636963]
[67.19751740 220.32299805]
[61.36302567 234.14178467]
[55.52853775 247.96057129]
[49.69404984 261.77935791]
[43.85955811 275.59811401]
[47.98517990 287.84332275]
[42.81390381 299.24569702]
[31.62431526 303.89990234]
[25.53985977 317.61044312]
[19.45540428 331.32101440]
[13.37094879 345.03158569]
[7.28649330 358.74212646]
[1.20203781 372.45269775]
[-4.88241768 386.16323853]
[-10.96687317 399.87380981]
[-17.05132866 413.58435059]
[-23.13578415 427.29492188]
[-29.22023964 441.00549316]
[-20.92020607 449.77957153]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[11 15]
[25 171]
[26 170]
[27 169]
[28 168]
[29 167]
[30 166]
[31 165]
[32 164]
[33 163]
[34 162]
[35 161]
[37 158]
[38 157]
[39 156]
[40 155]
[41 154]
[43 151]
[44 150]
[45 149]
[46 148]
[47 147]
[48 146]
[49 59]
[50 58]
[51 57]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[74 133]
[75 132]
[76 131]
[77 129]
[78 128]
[80 126]
[81 124]
[82 123]
[83 122]
[84 121]
[85 119]
[86 118]
[87 115]
[88 114]
[89 113]
[91 110]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
