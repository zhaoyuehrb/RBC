%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUCAUUUGCAGACAUAUGGGUGAUUGGUACAGUAGGUUUAUAAACAGAAGUUUAAACUUGUAAGCUUAAGCUUCCGUUUAUAAACAGAAGUUUAAAAUUAUAGGUCCUGUUUAACAUUCAGCUCUGUUAACUCACUCAUCUUUUUGUGUUUUUACACUUUGUCAAGAUUUCUUUACAUAUUCAUCA\
) } def
/len { sequence length } bind def

/coor [
[123.36370850 202.49275208]
[119.37173462 188.03485107]
[116.15557098 202.68600464]
[124.88491821 215.86076355]
[121.65970612 231.33245850]
[108.39340210 239.92202759]
[92.95666504 236.53341675]
[84.50783539 223.17703247]
[88.05946350 207.77699280]
[101.50441742 199.46984863]
[104.72058105 184.81869507]
[101.82513428 177.02873230]
[104.99575806 168.26536560]
[102.26835632 153.51541138]
[99.54094696 138.76544189]
[96.81354523 124.01548767]
[77.16696167 108.09628296]
[82.39638519 83.35638428]
[75.22257233 70.18305969]
[68.04876709 57.00973511]
[60.87495422 43.83641434]
[53.70114517 30.66308975]
[46.52733612 17.48976517]
[39.35352707 4.31644249]
[32.17971420 -8.85688114]
[18.18652344 -8.48086262]
[5.45888233 -14.14733696]
[-3.53935456 -24.69689751]
[-7.09329367 -38.03104401]
[-4.56362009 -51.52948380]
[3.49924898 -62.56503296]
[-3.45461035 -75.85577393]
[-10.40846920 -89.14651489]
[-17.36232948 -102.43726349]
[-24.12649155 -108.60478973]
[-24.31923485 -116.00720978]
[-31.05122375 -129.41169739]
[-44.15903473 -138.27148438]
[-42.95671844 -153.11749268]
[-61.93989944 -155.39916992]
[-75.62038422 -168.54095459]
[-78.61475372 -187.12144470]
[-69.89531708 -203.63075256]
[-77.28709412 -216.68301392]
[-84.67887115 -229.73529053]
[-92.07064819 -242.78755188]
[-99.46242523 -255.83981323]
[-106.85420990 -268.89208984]
[-114.24598694 -281.94433594]
[-120.61399841 -281.86883545]
[-126.70848083 -283.57223511]
[-132.04589844 -286.89587402]
[-136.20944214 -291.55343628]
[-138.88148499 -297.15567017]
[-139.86779785 -303.24267578]
[-139.11154175 -309.32183838]
[-136.69593811 -314.90747070]
[-132.83589172 -319.55984497]
[-138.66241455 -333.38198853]
[-144.48893738 -347.20413208]
[-150.31546021 -361.02627563]
[-156.14198303 -374.84841919]
[-161.96850586 -388.67056274]
[-167.79502869 -402.49270630]
[-173.62155151 -416.31484985]
[-187.98512268 -422.34191895]
[-193.69714355 -436.44253540]
[-187.86271667 -450.09887695]
[-193.68923950 -463.92102051]
[-199.51576233 -477.74316406]
[-205.34228516 -491.56530762]
[-211.16880798 -505.38745117]
[-216.99531555 -519.20959473]
[-222.82183838 -533.03173828]
[-228.64836121 -546.85388184]
[-234.47488403 -560.67602539]
[-246.96508789 -570.38708496]
[-244.77906799 -585.12042236]
[-250.60559082 -598.94256592]
[-256.43212891 -612.76470947]
[-269.82400513 -622.22985840]
[-268.05361938 -638.53320312]
[-252.94219971 -644.90319824]
[-240.03506470 -634.78698730]
[-242.60997009 -618.59124756]
[-236.78344727 -604.76910400]
[-230.95692444 -590.94696045]
[-218.88346863 -582.22448730]
[-220.65274048 -566.50256348]
[-214.82621765 -552.68041992]
[-208.99969482 -538.85827637]
[-203.17318726 -525.03613281]
[-197.34666443 -511.21395874]
[-191.52014160 -497.39181519]
[-185.69361877 -483.56967163]
[-179.86709595 -469.74752808]
[-174.04057312 -455.92538452]
[-160.19065857 -450.56671143]
[-154.08482361 -436.63208008]
[-159.79940796 -422.14135742]
[-153.97288513 -408.31921387]
[-148.14636230 -394.49707031]
[-142.31983948 -380.67492676]
[-136.49331665 -366.85278320]
[-130.66679382 -353.03063965]
[-124.84027863 -339.20849609]
[-119.01375580 -325.38635254]
[-98.44031525 -313.59722900]
[-101.19371796 -289.33612061]
[-93.80194092 -276.28384399]
[-86.41016388 -263.23159790]
[-79.01838684 -250.17932129]
[-71.62660980 -237.12705994]
[-64.23483276 -224.07479858]
[-56.84305191 -211.02253723]
[-45.68846893 -211.88044739]
[-34.97320557 -208.48986816]
[-26.26328278 -201.30601501]
[-20.84666443 -191.34141541]
[-19.54287148 -180.02322388]
[-22.57920265 -168.98895264]
[-29.55222893 -159.84947205]
[-16.92593575 -151.94847107]
[-17.64673424 -136.14369202]
[-10.91474628 -122.73919678]
[-4.07158613 -109.39112091]
[2.88227296 -96.10037994]
[9.83613205 -82.80963135]
[16.78999138 -69.51889038]
[32.93795395 -69.24578094]
[46.82755661 -60.82260513]
[54.62350082 -46.46463013]
[54.11752701 -30.04065704]
[45.35303879 -16.03069115]
[52.52684784 -2.85736752]
[59.70066071 10.31595612]
[66.87446594 23.48928070]
[74.04827881 36.66260529]
[81.22209167 49.83592606]
[88.39589691 63.00925064]
[95.56970978 76.18257141]
[101.87807465 75.84694672]
[108.05873871 77.15368652]
[113.69142151 80.01394653]
[118.39310455 84.23323822]
[121.84408569 89.52463531]
[123.80969238 95.52835083]
[124.15628052 101.83612823]
[138.02636719 107.54757690]
[151.89645386 113.25901794]
[165.76655579 118.97046661]
[181.94032288 116.26103973]
[192.16346741 129.08366394]
[185.91928101 144.24749756]
[169.63125610 146.15330505]
[160.05509949 132.84056091]
[146.18501282 127.12910461]
[132.31492615 121.41766357]
[118.44483948 115.70621490]
[116.38552094 117.84410095]
[114.08020782 119.71408081]
[111.56350708 121.28808594]
[114.29090881 136.03804016]
[117.01831055 150.78800964]
[119.74571228 165.53796387]
[124.21649170 151.21971130]
[131.81369019 138.28593445]
[142.14253235 127.40866852]
[154.66633606 119.15311432]
[168.73435974 113.94822693]
[183.61560059 112.06446838]
[198.53683472 113.59971619]
[212.72271729 118.47419739]
[225.43615723 126.43463135]
[236.01654053 137.06738281]
[243.91410828 149.81997681]
[248.71849060 164.02975464]
[250.18005371 178.95837402]
[248.22285461 193.83013916]
[242.94857788 207.87228394]
[234.63128662 220.35519409]
[223.70315552 230.63020325]
[210.73202515 238.16345215]
[196.39187622 242.56347656]
[181.42785645 243.60166931]
[166.61747742 241.22407532]
[152.73033142 235.55422974]
[140.48799133 226.88676453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 11]
[3 10]
[13 165]
[14 164]
[15 163]
[16 162]
[18 141]
[19 140]
[20 139]
[21 138]
[22 137]
[23 136]
[24 135]
[25 134]
[31 129]
[32 128]
[33 127]
[34 126]
[36 125]
[37 124]
[39 122]
[43 115]
[44 114]
[45 113]
[46 112]
[47 111]
[48 110]
[49 109]
[58 107]
[59 106]
[60 105]
[61 104]
[62 103]
[63 102]
[64 101]
[65 100]
[68 97]
[69 96]
[70 95]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[78 87]
[79 86]
[80 85]
[148 159]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
