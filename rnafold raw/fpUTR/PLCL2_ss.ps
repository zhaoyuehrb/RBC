%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAACGUACCUAAGUAUUAUUGGACAGCCGGAGUAUUUUACAGUGGUUGCUGCUCAGGAAAUUUGAGUGAAGGACUGCAAAAGAGGAGCAAAGCAGACCCGAGAGAGAAGGCAGCAGUGCUCCCCUGUGACGUGCUCCAUCACCGGGCAGGGAAGACACCGCUGCCACCUCUCCACAGCCUUGUUCAAGAGCACUGGAAAUUGAUGGUACAAAACAGAAGAGGGAACGGAAAAAGACAGUCUCAUUCAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[263.63113403 674.18298340]
[257.88043213 668.02020264]
[253.08213806 661.08599854]
[249.33842468 653.52636719]
[246.72932434 645.50061035]
[245.31086731 637.17810059]
[245.11401367 628.73443604]
[246.14387512 620.34820557]
[248.37966919 612.19665527]
[251.77507019 604.45227051]
[256.25921631 597.27923584]
[261.73818970 590.82958984]
[268.09689331 585.24023438]
[275.20162964 580.63012695]
[269.76266479 566.65093994]
[264.32369995 552.67175293]
[258.88473511 538.69256592]
[253.44575500 524.71337891]
[248.00677490 510.73419189]
[242.56781006 496.75500488]
[237.12882996 482.77581787]
[231.68986511 468.79663086]
[226.25088501 454.81744385]
[213.09454346 452.63885498]
[202.64448547 444.18139648]
[197.69206238 431.56692505]
[199.62770081 418.04479980]
[208.05247498 407.15515137]
[202.78681946 393.10977173]
[197.52116394 379.06436157]
[192.25549316 365.01898193]
[180.54277039 355.81784058]
[182.94320679 340.17977905]
[177.67753601 326.13439941]
[165.96481323 316.93322754]
[168.36524963 301.29519653]
[163.09957886 287.24978638]
[157.83392334 273.20440674]
[143.69987488 262.78302002]
[146.91017151 244.63796997]
[141.47120667 230.65878296]
[136.03222656 216.67959595]
[130.59326172 202.70040894]
[125.25377655 197.62046814]
[125.17463684 188.51455688]
[119.90897369 174.46916199]
[114.64331818 160.42378235]
[109.37766266 146.37840271]
[104.11199951 132.33300781]
[90.25085449 134.99656677]
[75.12438965 131.40692139]
[61.61916351 121.10443878]
[46.67535019 122.40150452]
[31.73153305 123.69857025]
[16.78771782 124.99564362]
[1.84390295 126.29270935]
[-13.09991264 127.58977509]
[-24.47993279 138.89794922]
[-40.39911270 136.90815735]
[-48.64562225 123.14681244]
[-42.89344025 108.17043304]
[-27.55515480 103.46761322]
[-14.39698029 112.64595795]
[0.54683501 111.34889221]
[15.49065018 110.05182648]
[30.43446541 108.75475311]
[45.37828064 107.45768738]
[60.32209778 106.16062164]
[62.02328491 98.85610199]
[51.07266235 88.60506439]
[65.42566681 84.24707031]
[67.12685394 76.94255829]
[54.29383087 69.17638397]
[38.48134995 68.65094757]
[31.59867096 55.44193649]
[18.76564407 47.67576218]
[5.93261814 39.90959167]
[-6.90040779 32.14341736]
[-19.12754440 41.17478180]
[-33.88130569 44.83470154]
[-48.91184616 42.56506348]
[-61.92712021 34.71197128]
[-70.94239807 22.47296715]
[-74.58290100 7.71440506]
[-72.29349518 -7.31313801]
[-64.42328644 -20.31807137]
[-52.17243576 -29.31723785]
[-37.40909576 -32.93832779]
[-22.38457870 -30.62915421]
[-9.39000893 -22.74184799]
[-0.40696597 -10.47916508]
[3.19470119 4.28892374]
[0.86576498 19.31039238]
[13.69879150 27.07656479]
[26.53181648 34.84273911]
[39.36484146 42.60890961]
[54.25941849 42.57885742]
[62.06000137 56.34335709]
[74.89302826 64.10952759]
[82.24690247 63.04428101]
[89.25143433 63.34651947]
[95.66907501 64.87075806]
[101.30072021 67.43252563]
[105.33213806 52.98442459]
[109.36355591 38.53631973]
[113.39496613 24.08821678]
[117.42638397 9.64011383]
[109.92481995 -4.01141977]
[114.21907043 -18.60642242]
[127.27995300 -25.67388344]
[131.31137085 -40.12198639]
[135.34277344 -54.57009125]
[139.37419128 -69.01819611]
[143.40560913 -83.46629333]
[147.43702698 -97.91439819]
[143.69334412 -113.28630829]
[154.56655884 -123.46582031]
[158.59797668 -137.91392517]
[162.62939453 -152.36203003]
[166.57138062 -166.83477783]
[170.42379761 -181.33164978]
[166.49028015 -196.65606689]
[177.23677063 -206.96928406]
[181.08917236 -221.46614075]
[184.94158936 -235.96299744]
[188.79399109 -250.45986938]
[192.64640808 -264.95672607]
[196.49880981 -279.45358276]
[186.88198853 -291.48782349]
[186.20321655 -306.69940186]
[194.51344299 -319.24548340]
[208.45098877 -324.43035889]
[212.30340576 -338.92721558]
[216.15580750 -353.42407227]
[208.00967407 -366.96719360]
[211.90692139 -382.28344727]
[225.53541565 -390.28591919]
[240.80958557 -386.22695923]
[248.66754150 -372.51461792]
[244.44731140 -357.28424072]
[230.65266418 -349.57168579]
[226.80026245 -335.07482910]
[222.94784546 -320.57797241]
[232.47283936 -309.15811157]
[233.45858765 -294.14172363]
[225.31794739 -281.27380371]
[210.99566650 -275.60116577]
[207.14326477 -261.10430908]
[203.29084778 -246.60745239]
[199.43844604 -232.11059570]
[195.58602905 -217.61373901]
[191.73362732 -203.11688232]
[195.94268799 -188.82936096]
[184.92065430 -177.47923279]
[181.06823730 -162.98237610]
[182.38412476 -155.73086548]
[177.07749939 -148.33061218]
[173.04608154 -133.88250732]
[169.01466370 -119.43440247]
[173.04669189 -105.09592438]
[161.88513184 -93.88298798]
[157.85371399 -79.43488312]
[153.82229614 -64.98677826]
[149.79087830 -50.53867340]
[145.75946045 -36.09057236]
[141.72805786 -21.64246750]
[149.24295044 -8.83380413]
[145.36033630 5.87605667]
[131.87448120 13.67152882]
[127.84307098 28.11963272]
[123.81165314 42.56773376]
[119.78024292 57.01583862]
[115.74882507 71.46394348]
[130.21537781 87.77856445]
[131.15899658 109.56289673]
[118.15738678 127.06735229]
[123.42304230 141.11273193]
[128.68870544 155.15812683]
[133.95436096 169.20350647]
[139.22001648 183.24888611]
[144.57243347 197.26144409]
[150.01141357 211.24063110]
[155.45037842 225.21981812]
[160.88935852 239.19898987]
[172.34593201 245.08502197]
[176.59640503 256.81860352]
[171.87930298 267.93875122]
[177.14497375 281.98413086]
[182.41062927 296.02951050]
[194.49998474 306.23532104]
[191.72293091 320.86874390]
[196.98858643 334.91412354]
[209.07794189 345.11990356]
[206.30088806 359.75332642]
[211.56654358 373.79870605]
[216.83219910 387.84408569]
[222.09786987 401.88949585]
[238.47213745 406.18167114]
[248.94950867 419.26446533]
[249.54815674 435.84838867]
[240.23007202 449.37847900]
[245.66903687 463.35766602]
[251.10801697 477.33685303]
[256.54699707 491.31604004]
[261.98596191 505.29522705]
[267.42492676 519.27441406]
[272.86389160 533.25360107]
[278.30288696 547.23278809]
[283.74185181 561.21197510]
[289.18081665 575.19116211]
[311.55667114 574.17370605]
[332.63635254 581.66821289]
[349.30819702 596.54705811]
[359.11926270 616.59405518]
[360.63619995 638.83483887]
[353.65466309 659.97778320]
[339.22653198 676.90142822]
[346.99270630 689.73443604]
[354.75888062 702.56750488]
[367.05825806 706.39160156]
[373.26678467 717.21734619]
[370.53619385 728.98394775]
[378.14303589 741.91204834]
[385.74990845 754.84014893]
[393.35675049 767.76824951]
[408.39236450 771.83868408]
[415.92263794 785.05798340]
[411.94940186 799.36706543]
[427.40670776 800.72760010]
[439.09008789 810.93933105]
[442.50701904 826.07550049]
[436.34365845 840.31604004]
[422.96987915 848.18511963]
[407.52825928 846.65692139]
[395.95635986 836.31909180]
[392.70379639 821.14672852]
[399.02130127 806.97387695]
[384.58340454 803.49792480]
[376.68481445 790.49536133]
[380.42864990 775.37512207]
[372.82180786 762.44702148]
[365.21493530 749.51892090]
[357.60809326 736.59082031]
[341.88986206 728.76049805]
[341.92584229 710.33367920]
[334.15966797 697.50061035]
[326.39349365 684.66760254]
[318.48361206 687.50170898]
[310.24307251 689.15966797]
[301.84591675 689.60546875]
[293.46948242 688.82873535]
[285.29092407 686.84497070]
[277.48330688 683.69506836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[22 202]
[23 201]
[28 197]
[29 196]
[30 195]
[31 194]
[33 192]
[34 191]
[36 189]
[37 188]
[38 187]
[40 184]
[41 183]
[42 182]
[43 181]
[45 180]
[46 179]
[47 178]
[48 177]
[49 176]
[52 68]
[53 67]
[54 66]
[55 65]
[56 64]
[57 63]
[72 99]
[73 98]
[75 96]
[76 95]
[77 94]
[78 93]
[103 173]
[104 172]
[105 171]
[106 170]
[107 169]
[110 166]
[111 165]
[112 164]
[113 163]
[114 162]
[115 161]
[117 159]
[118 158]
[119 157]
[120 155]
[121 154]
[123 152]
[124 151]
[125 150]
[126 149]
[127 148]
[128 147]
[132 143]
[133 142]
[134 141]
[217 247]
[218 246]
[219 245]
[222 243]
[223 242]
[224 241]
[225 240]
[228 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
