%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAGGCCGACUAGCGCAGGCGGACGGGAGAGAAUGGGGGAGGGGUGGGAUGGGAGCAGGGGCAGAGACGGGCAGAGGGCAGAGGGCGGAGCGGCGCCGGAGCGGGCGUC\
) } def
/len { sequence length } bind def

/coor [
[84.69332123 144.90785217]
[70.17265320 136.89633179]
[59.29637146 124.37672424]
[53.39336395 108.87870026]
[53.18487549 92.29585266]
[58.69638062 76.65431976]
[43.08284378 74.09931946]
[37.95638657 60.11473083]
[26.22891617 50.76238251]
[14.50144386 41.41003799]
[-1.11209357 38.85503387]
[-6.23854780 24.87044525]
[-17.96602058 15.51809883]
[-36.17456818 13.26619720]
[-42.07683563 -3.19498324]
[-54.06199265 -12.21473980]
[-69.74105072 -14.33083534]
[-75.25769806 -28.16614532]
[-90.70426178 -26.15582085]
[-102.73043060 -35.47386932]
[-104.55177307 -50.21219635]
[-116.53692627 -59.23195267]
[-131.30372620 -54.84471512]
[-145.65464783 -59.93438339]
[-154.15625000 -72.35157776]
[-153.72111511 -87.21591949]
[-165.70626831 -96.23567963]
[-177.38516235 -86.70326233]
[-191.00624084 -80.24342346]
[-205.77760315 -77.23171997]
[-220.84045410 -77.84324646]
[-235.31906128 -82.04245758]
[-248.37165833 -89.58522034]
[-259.23937988 -100.03298950]
[-267.29040527 -112.77836609]
[-272.05664062 -127.08033752]
[-273.26098633 -142.10742188]
[-270.83343506 -156.98593140]
[-264.91510010 -170.85089111]
[-255.85008240 -182.89617920]
[-244.16542053 -192.42150879]
[-230.54042053 -198.87309265]
[-215.76724243 -201.87583923]
[-200.70475769 -201.25517273]
[-186.22869873 -197.04719543]
[-173.18067932 -189.49652100]
[-162.31929016 -179.04216003]
[-154.27600098 -166.29190063]
[-149.51844788 -151.98704529]
[-148.32321167 -136.95924377]
[-150.75978088 -122.08219147]
[-156.68650818 -108.22083282]
[-144.70135498 -99.20108032]
[-130.53840637 -103.73418427]
[-116.25296783 -99.00236511]
[-107.38937378 -86.62133026]
[-107.51717377 -71.21710968]
[-95.53201294 -62.19735336]
[-80.86548615 -64.52728271]
[-68.58234406 -55.55070114]
[-66.23794556 -40.15130234]
[-51.41614914 -38.68035889]
[-45.04223633 -24.19989777]
[-33.05707932 -15.18014050]
[-20.94728088 -16.54503441]
[-10.86606407 -9.00463390]
[-8.61367321 3.79062629]
[3.11379933 13.14297295]
[17.88850975 15.02903271]
[23.85379028 29.68256378]
[35.58126450 39.03491211]
[47.30873489 48.38725662]
[62.08344650 50.27331924]
[68.04872894 64.92684937]
[82.38547516 55.94618607]
[98.96175385 52.56655502]
[115.67002869 55.21763611]
[130.38600159 63.56237793]
[141.23869324 76.53981781]
[146.84826660 92.50000000]
[161.84826660 92.50000000]
[174.16348267 82.21823120]
[189.85098267 85.57711029]
[196.87664795 100.00000000]
[189.85098267 114.42288971]
[174.16348267 117.78176880]
[161.84826660 107.50000000]
[146.84826660 107.50000000]
[145.61273193 113.05710602]
[143.72052002 118.42622375]
[141.19886780 123.53005981]
[138.08406067 128.29513550]
[134.42095947 132.65283203]
[130.26229858 136.54043579]
[137.88342285 149.46012878]
[145.50454712 162.37982178]
[153.12568665 175.29949951]
[160.74681091 188.21919250]
[168.36795044 201.13888550]
[183.73196411 204.84323120]
[191.90521240 218.37001038]
[188.03862000 233.69401550]
[174.42619324 241.72378540]
[159.14392090 237.69540405]
[151.25852966 223.99884033]
[155.44825745 208.76000977]
[147.82711792 195.84031677]
[140.20599365 182.92063904]
[132.58486938 170.00094604]
[124.96372986 157.08125305]
[117.34260559 144.16156006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 74]
[8 72]
[9 71]
[10 70]
[12 68]
[13 67]
[15 64]
[16 63]
[18 61]
[21 58]
[22 57]
[26 53]
[27 52]
[80 88]
[81 87]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
