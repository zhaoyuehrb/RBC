%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCCAUUAGCCCCGCCCCUUUGGGCUGGAACCGGAGGUGUCGCUCUUCGGACCUCAAGGUUCCCCUUAACACAGAGCGCCCCGCAGUCUUCGCGGAAAGCGUUCGGGGUAGGCG\
) } def
/len { sequence length } bind def

/coor [
[100.92940521 260.97656250]
[86.12009430 264.21078491]
[71.09814453 262.18179321]
[57.67753220 255.13459778]
[47.47885132 243.92019653]
[41.73365402 229.89277649]
[41.13569260 214.74623108]
[45.75717926 200.30953979]
[55.04004669 188.32604980]
[67.86333466 180.24279785]
[82.67858124 177.03588867]
[84.68637848 162.17086792]
[86.69417572 147.30584717]
[88.70197296 132.44082642]
[90.70977020 117.57581329]
[78.71813202 108.56467438]
[64.99861908 114.62890625]
[51.27910233 120.69314575]
[37.55958557 126.75737762]
[28.32698059 140.31063843]
[11.99554443 138.82192993]
[5.36566067 123.82271576]
[15.25758553 110.74288940]
[31.49535370 113.03786469]
[45.21487045 106.97362518]
[58.93438339 100.90939331]
[72.65390015 94.84516144]
[81.01914215 92.20906830]
[89.04502106 92.62261200]
[80.35908508 80.39336395]
[71.67315674 68.16411591]
[62.98722076 55.93486404]
[54.30128479 43.70561600]
[45.61535263 31.47636414]
[28.73493958 24.27225113]
[27.62644958 6.81440306]
[18.61531448 -5.17723846]
[9.60418129 -17.16888046]
[0.59304738 -29.16052055]
[-8.41808701 -41.15216446]
[-16.17998695 -46.21746063]
[-17.50502586 -53.58890152]
[-26.19095993 -65.81814575]
[-34.87689590 -78.04740143]
[-50.39073181 -82.13401031]
[-56.73632812 -96.86876678]
[-49.04588318 -110.94841766]
[-33.21884918 -113.57226562]
[-21.39637375 -102.72751617]
[-22.64764595 -86.73332977]
[-13.96171093 -74.50408173]
[-5.27577686 -62.27483368]
[3.57355475 -50.16329575]
[12.58468914 -38.17165375]
[21.59582329 -26.18001366]
[30.60695648 -14.18837261]
[39.61809158 -2.19673109]
[51.62331772 -0.15087917]
[59.21710587 9.87971306]
[57.84460068 22.79043007]
[66.53053284 35.01968002]
[75.21646881 47.24892807]
[83.90240479 59.47817993]
[92.58834076 71.70742798]
[101.27426910 83.93667603]
[95.78868866 69.97572327]
[97.69490814 55.09733582]
[106.52288818 42.97023010]
[120.09584045 36.58470154]
[135.06695557 37.51529312]
[147.74464417 45.53253555]
[155.00285339 58.65954590]
[155.05186462 73.65946198]
[147.87957764 86.83361816]
[135.25454712 94.93354034]
[120.29104614 95.96215820]
[135.06317139 98.56687927]
[149.83528137 101.17160797]
[164.60739136 103.77632904]
[179.37951660 106.38105011]
[194.15162659 108.98577118]
[212.63298035 101.15622711]
[227.05024719 113.92526245]
[241.94088745 115.73330688]
[256.83151245 117.54135895]
[271.72213745 119.34941101]
[283.02008057 108.53781891]
[298.62765503 107.56941986]
[311.17544556 116.90146637]
[314.73876953 132.12765503]
[307.63513184 146.05863953]
[293.21865845 152.11663818]
[278.29635620 147.44125366]
[269.91409302 134.24003601]
[255.02346802 132.43199158]
[240.13282776 130.62394714]
[225.24220276 128.81588745]
[217.66639709 135.90847778]
[207.20753479 137.62614441]
[197.35835266 133.14617920]
[191.54690552 123.75788879]
[176.77479553 121.15316772]
[162.00267029 118.54844666]
[147.23056030 115.94371796]
[132.45845032 113.33899689]
[117.68632507 110.73427582]
[105.57479095 119.58361053]
[103.56699371 134.44862366]
[101.55919647 149.31364441]
[99.55139923 164.17866516]
[97.54360199 179.04368591]
[110.97718048 186.06611633]
[121.19651031 197.26170349]
[126.96755219 211.27851868]
[127.59342194 226.42395020]
[122.99855042 240.86912537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 111]
[12 110]
[13 109]
[14 108]
[15 107]
[16 27]
[17 26]
[18 25]
[19 24]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[34 60]
[36 57]
[37 56]
[38 55]
[39 54]
[40 53]
[42 52]
[43 51]
[44 50]
[76 106]
[77 105]
[78 104]
[79 103]
[80 102]
[81 101]
[83 97]
[84 96]
[85 95]
[86 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
