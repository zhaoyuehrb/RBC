%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAAAGCCAUGUCGGACUCGGCGCCCAGCGCCCAAGCGCUAACCCGCUGAAAGUUUCUCAGCGAAAUCUCAGGGACGAUCUGGACCCCGCUGAGAGGAACUGCUUUUGAGUGAG\
) } def
/len { sequence length } bind def

/coor [
[86.76417542 214.52915955]
[92.63702393 200.33743286]
[104.82868958 190.99618530]
[102.80368805 176.13349915]
[100.77868652 161.27081299]
[98.75369263 146.40812683]
[96.72869110 131.54545593]
[94.70368958 116.68276215]
[95.57437897 131.65747070]
[89.13460541 145.20477295]
[76.97229004 153.98417664]
[62.08639526 155.83085632]
[48.14749146 150.28947449]
[38.59262848 138.72639465]
[35.77783585 123.99286652]
[40.39718628 109.72186279]
[51.31164551 99.43232727]
[65.82992554 95.66143799]
[80.37104034 99.33845520]
[66.15624237 94.54892731]
[51.94144821 89.75940704]
[37.72665024 84.96987915]
[23.51185226 80.18035889]
[9.29705429 75.39083862]
[-4.29173899 85.35502625]
[-20.97685623 85.30635834]
[-34.24172211 75.46011353]
[-39.02207565 59.81985092]
[-53.36135864 55.41701126]
[-67.70063782 51.01417542]
[-82.03992462 46.61133575]
[-96.37920380 42.20849609]
[-112.23268890 46.40363312]
[-123.59902191 34.58253098]
[-118.78550720 18.90573120]
[-102.74386597 15.50017929]
[-91.97636414 27.86921501]
[-77.63708496 32.27205276]
[-63.29780197 36.67489243]
[-48.95851898 41.07773209]
[-34.61923599 45.48056793]
[-24.67296410 36.46504211]
[-11.45754337 33.55117798]
[1.56534052 37.61268616]
[10.92946911 47.68152618]
[14.08657646 61.17604065]
[28.30137444 65.96556091]
[42.51617050 70.75508118]
[56.73096848 75.54460907]
[70.94577026 80.33412933]
[85.16056824 85.12365723]
[98.72807312 82.14938354]
[108.84862518 88.16212463]
[121.90618134 80.77970123]
[134.96374512 73.39727783]
[148.02130127 66.01484680]
[160.87416077 58.28154373]
[173.51287842 50.20302200]
[186.15161133 42.12450409]
[198.79034424 34.04598236]
[211.42907715 25.96746445]
[224.06781006 17.88894463]
[236.70654297 9.81042576]
[249.34527588 1.73190641]
[250.39376831 -13.63711548]
[260.17663574 -25.30540276]
[274.78161621 -28.93289566]
[288.55718994 -23.33185577]
[301.19592285 -31.41037369]
[306.83544922 -38.76890945]
[314.28808594 -39.53113937]
[327.14093018 -47.26444626]
[339.99380493 -54.99775696]
[352.84664917 -62.73106384]
[358.09823608 -77.89023590]
[373.27188110 -83.09989929]
[386.72763062 -74.36364746]
[388.14340210 -58.38319016]
[376.43316650 -47.41735840]
[360.57995605 -49.87820435]
[347.72711182 -42.14489746]
[334.87423706 -34.41159058]
[322.02139282 -26.67828178]
[309.27441406 -18.77164268]
[296.63571167 -10.69312382]
[295.93484497 4.16106081]
[286.51016235 15.89303207]
[271.81259155 19.87233543]
[257.42379761 14.37063789]
[244.78506470 22.44915771]
[232.14633179 30.52767563]
[219.50759888 38.60619736]
[206.86886597 46.68471527]
[194.23013306 54.76323318]
[181.59140015 62.84175491]
[168.95266724 70.92027283]
[167.05293274 75.43477631]
[162.22396851 78.74043274]
[155.40371704 79.07241058]
[142.34616089 86.45483398]
[129.28860474 93.83725739]
[116.23104858 101.21968079]
[109.56637573 114.65776825]
[111.59136963 129.52044678]
[113.61637115 144.38313293]
[115.64137268 159.24581909]
[117.66637421 174.10850525]
[119.69137573 188.97119141]
[133.93769836 194.71032715]
[143.39317322 206.81361389]
[145.51431274 222.02532959]
[139.73056030 236.25360107]
[127.59768677 245.67108154]
[112.37939453 247.74453735]
[98.16932678 241.91619873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 108]
[4 107]
[5 106]
[6 105]
[7 104]
[8 103]
[19 51]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[53 102]
[54 101]
[55 100]
[56 99]
[57 96]
[58 95]
[59 94]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[68 85]
[69 84]
[71 83]
[72 82]
[73 81]
[74 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
