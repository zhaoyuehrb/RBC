%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAGACUGGACCUGAGGAGACCUCAGCCUCGGUGCUCGGGCCGCCCCGCCUCUGCCGGAAAGUCCGCGCCGCCGCUGCCGCCACCGUCCGCAGCCCGAGCGCCCCGGAGCCGCAGGCCGCCGCCGCGCAGAGACGCCGCGGCUGCGACUAGGCGCGCCCAGCCGCACGUGGCGGACCCGCCCCCAGGCCCGCAGUGUCCUGGACCCCGCAGGCCUCCGCUCUCCUGUCCUCGGCCCCGUCCCCAGGGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[103.46289062 222.11801147]
[102.39377594 213.46995544]
[104.18401337 204.89768982]
[108.66909790 197.32579041]
[115.39234924 191.58016968]
[111.71953583 177.03677368]
[108.04672241 162.49337769]
[97.42861176 152.04803467]
[101.55136108 136.77342224]
[97.87854004 122.23002625]
[90.43583679 121.30475616]
[75.55042267 119.45420837]
[68.10771942 118.52893829]
[60.98569107 131.73033142]
[53.86365891 144.93171692]
[46.74163055 158.13310242]
[39.61960220 171.33450317]
[32.49757004 184.53588867]
[30.29846001 201.34660339]
[13.53593540 203.88710022]
[6.45439100 188.48295593]
[19.29618073 177.41386414]
[26.41821098 164.21246338]
[33.54024124 151.01107788]
[40.66226959 137.80969238]
[47.78429794 124.60829926]
[54.90633011 111.40690613]
[51.42722321 104.76268005]
[38.13864899 111.72068024]
[31.18085289 98.43199921]
[44.46901703 91.47421265]
[40.98991394 84.82997894]
[26.08275223 83.16368103]
[11.17559147 81.49738312]
[-3.73157001 79.83108521]
[-18.63873100 78.16478729]
[-33.54589081 76.49848938]
[-48.45305252 74.83219147]
[-63.36021423 73.16589355]
[-78.26737213 71.49959564]
[-93.17453766 69.83329773]
[-108.08169556 68.16699982]
[-122.65596771 74.32339478]
[-134.44496155 65.22015381]
[-149.35211182 63.55385971]
[-156.99583435 78.33052063]
[-172.68457031 87.55294037]
[-192.44062805 86.99512482]
[-210.21276855 75.19682312]
[-225.20817566 75.56784058]
[-236.06842041 86.73442841]
[-251.28118896 86.89707947]
[-261.85989380 76.47467041]
[-275.46447754 84.55094910]
[-288.37924194 77.13081360]
[-303.37463379 77.50183105]
[-318.36746216 77.96557617]
[-333.35714722 78.52202606]
[-348.34683228 79.07848358]
[-363.33648682 79.63493347]
[-378.94042969 86.26469421]
[-389.63067627 73.10587311]
[-379.94546509 59.19066620]
[-363.89294434 64.64526367]
[-348.90325928 64.08880615]
[-333.91360474 63.53235245]
[-318.92391968 62.97589874]
[-312.37445068 59.59648514]
[-303.74566650 62.50642014]
[-288.75024414 62.13540268]
[-276.21823120 54.08567047]
[-262.23092651 61.47926331]
[-252.18057251 50.54645538]
[-236.97837830 49.95657730]
[-225.57919312 60.57242584]
[-210.58378601 60.20140839]
[-208.83744812 52.90755463]
[-219.72447205 42.58898926]
[-205.34478760 38.31984329]
[-203.59846497 31.02598763]
[-216.79985046 23.90395737]
[-233.16763306 24.91776848]
[-242.00276184 11.10210514]
[-234.21641541 -3.33066392]
[-217.81851196 -3.53334284]
[-209.67782593 10.70256710]
[-196.47644043 17.82459641]
[-177.61665344 15.36824036]
[-161.16746521 21.70718956]
[-150.66055298 34.09104538]
[-147.68582153 48.64669800]
[-132.77865601 50.31299591]
[-119.27065277 44.03741074]
[-106.41539764 53.25983810]
[-91.50823975 54.92613602]
[-76.60107422 56.59243393]
[-61.69391632 58.25873184]
[-46.78675461 59.92502975]
[-31.87959480 61.59132767]
[-16.97243309 63.25762558]
[-2.06527209 64.92391968]
[12.84188938 66.59021759]
[27.74905014 68.25651550]
[42.65621185 69.92281342]
[79.84449005 57.51297379]
[105.87318420 71.29680634]
[108.66670990 92.33436584]
[120.78012085 83.48759460]
[132.89352417 74.64082336]
[145.00692749 65.79405212]
[157.12034607 56.94728470]
[163.70147705 42.55981445]
[178.54286194 41.30180359]
[183.60929871 33.73508453]
[190.86123657 32.42162323]
[203.08314514 23.72534943]
[215.30503845 15.02907562]
[227.52694702 6.33280182]
[239.74884033 -2.36347151]
[247.35569763 -15.29156971]
[249.02200317 -30.19873047]
[250.68829346 -45.10589218]
[252.35459900 -60.01305389]
[254.02088928 -74.92021179]
[247.86448669 -89.49448395]
[256.96774292 -101.28347015]
[258.63403320 -116.19063568]
[260.30032349 -131.09779358]
[250.24102783 -143.28738403]
[251.83052063 -159.01153564]
[264.12576294 -168.94140625]
[279.83224487 -167.18576050]
[289.63156128 -154.78619385]
[287.70996094 -139.09916687]
[275.20748901 -129.43150330]
[273.54119873 -114.52433777]
[271.87487793 -99.61717224]
[278.15048218 -86.10916901]
[268.92803955 -73.25391388]
[267.26174927 -58.34675598]
[265.59545898 -43.43959427]
[263.92916870 -28.53243256]
[262.26284790 -13.62527180]
[273.92395020 -4.19027233]
[288.15499878 -8.93126678]
[302.38604736 -13.67226124]
[316.61709595 -18.41325569]
[329.88311768 -35.26478195]
[349.89517212 -30.15880394]
[363.94058228 -35.42446518]
[377.98596191 -40.69012451]
[392.03134155 -45.95578003]
[406.07672119 -51.22143936]
[420.08926392 -56.57386017]
[434.06845093 -62.01283264]
[448.04763794 -67.45180511]
[461.99291992 -72.97711945]
[475.90377808 -78.58857727]
[479.70373535 -91.49324799]
[490.08508301 -99.73974609]
[503.12667847 -100.49890137]
[514.06420898 -93.71740723]
[528.04339600 -99.15637970]
[542.02252197 -104.59535217]
[544.52252197 -118.13460541]
[553.31079102 -128.59220886]
[566.01458740 -133.31071472]
[579.28515625 -131.16014099]
[589.67999268 -122.80652618]
[596.59368896 -128.73316956]
[603.93176270 -128.04927063]
[618.04119873 -133.14080811]
[632.15063477 -138.23236084]
[646.26007080 -143.32389832]
[656.41644287 -156.19946289]
[672.60412598 -153.57414246]
[678.17053223 -138.14862061]
[667.38952637 -125.79136658]
[651.35162354 -129.21446228]
[637.24218750 -124.12291718]
[623.13275146 -119.03137970]
[609.02331543 -113.93983459]
[594.94567871 -108.76113892]
[591.07318115 -92.79572296]
[578.31329346 -82.18582916]
[561.57702637 -81.27313995]
[547.46154785 -90.61616516]
[533.48236084 -85.17719269]
[519.50317383 -79.73822021]
[513.38427734 -64.05973816]
[497.50134277 -57.54172134]
[481.51522827 -64.67772675]
[467.60437012 -59.06627655]
[462.59085083 -53.66437912]
[453.48660278 -53.47261810]
[439.50744629 -48.03364563]
[425.52825928 -42.59467697]
[420.44830322 -37.25519943]
[411.34237671 -37.17605591]
[397.29699707 -31.91039658]
[383.25161743 -26.64473724]
[369.20623779 -21.37907791]
[355.16085815 -16.11341858]
[352.86706543 -7.58554888]
[346.82565308 -0.95753843]
[338.28884888 2.21002197]
[329.11364746 1.09392691]
[321.35809326 -4.18219900]
[307.12704468 0.55879539]
[292.89599609 5.29978991]
[278.66494751 10.04078388]
[248.44511414 9.85842800]
[236.22322083 18.55470085]
[224.00131226 27.25097466]
[211.77941895 35.94724655]
[199.55751038 44.64352036]
[187.38963318 53.41521072]
[181.67492676 67.16989899]
[165.96711731 69.06069183]
[153.85369873 77.90746307]
[141.74029541 86.75423431]
[129.62689209 95.60100555]
[117.51348114 104.44777679]
[112.42194366 118.55721283]
[116.09475708 133.10061646]
[126.97556305 144.58619690]
[122.59011841 158.82055664]
[126.26293182 173.36395264]
[129.93574524 187.90734863]
[149.44499207 197.71490479]
[155.17602539 218.48806763]
[143.76281738 236.42802429]
[148.32743835 250.71662903]
[152.89205933 265.00524902]
[157.45668030 279.29385376]
[162.02130127 293.58245850]
[166.58592224 307.87106323]
[181.36132812 312.61099243]
[190.50163269 325.15032959]
[190.49218750 340.66738892]
[181.33665466 353.19558716]
[166.55549622 357.91754150]
[151.83238220 353.01760864]
[142.82864380 340.37988281]
[143.00640869 324.86380005]
[152.29731750 312.43566895]
[147.73269653 298.14706421]
[143.16807556 283.85845947]
[138.60345459 269.56985474]
[134.03883362 255.28125000]
[129.47421265 240.99264526]
[121.00827026 239.86637878]
[113.32102966 236.04679871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 229]
[6 228]
[7 227]
[9 225]
[10 224]
[13 27]
[14 26]
[15 25]
[16 24]
[17 23]
[18 22]
[32 104]
[33 103]
[34 102]
[35 101]
[36 100]
[37 99]
[38 98]
[39 97]
[40 96]
[41 95]
[42 94]
[44 92]
[45 91]
[49 76]
[50 75]
[53 72]
[55 70]
[56 69]
[57 67]
[58 66]
[59 65]
[60 64]
[80 87]
[81 86]
[107 223]
[108 222]
[109 221]
[110 220]
[111 219]
[113 217]
[115 216]
[116 215]
[117 214]
[118 213]
[119 212]
[120 143]
[121 142]
[122 141]
[123 140]
[124 139]
[126 137]
[127 136]
[128 135]
[144 211]
[145 210]
[146 209]
[147 208]
[149 203]
[150 202]
[151 201]
[152 200]
[153 199]
[154 197]
[155 196]
[156 195]
[157 193]
[158 192]
[162 189]
[163 188]
[164 187]
[169 183]
[171 182]
[172 181]
[173 180]
[174 179]
[232 251]
[233 250]
[234 249]
[235 248]
[236 247]
[237 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
