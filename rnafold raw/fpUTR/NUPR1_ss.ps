%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGCUGGGUGAGCCUGGGAGGGAGGAGGUGAGUUGGGCUGGACUCAGGGACCGACUCUUCCCGUCUCAUGACUGUGUUUACUGGGCUGGAUUUUGGGAAGGGGCCAGAUUGCAUCAGACAGGGCCUGAUGGGCUGGAGCCAGACUGUGGUCUGAGGAGGAGACACAGCCUUAUAAGCUGAGGGAGUGGAGAGGCCCGGGGCCAGGAAAGCAGAGACAGACAAAGCGUUAGGAGAAGAAGAGAGGCAGGGAAGAC\
AAGCCAGGCACG\
) } def
/len { sequence length } bind def

/coor [
[-24.41986275 355.53115845]
[-37.55428696 362.77593994]
[-50.68870544 370.02072144]
[-63.82312775 377.26553345]
[-76.95755005 384.51031494]
[-90.09197235 391.75509644]
[-98.43878937 405.19537354]
[-113.32015228 404.56747437]
[-126.45457458 411.81225586]
[-139.58898926 419.05706787]
[-152.72341919 426.30184937]
[-165.85783386 433.54663086]
[-178.99226379 440.79141235]
[-192.12667847 448.03619385]
[-200.47349548 461.47650146]
[-215.35485840 460.84860229]
[-228.48928833 468.09338379]
[-241.62370300 475.33816528]
[-246.11026001 490.25488281]
[-259.53363037 497.41500854]
[-273.72680664 493.04583740]
[-282.07360840 506.48614502]
[-296.95498657 505.85821533]
[-310.08941650 513.10302734]
[-323.22381592 520.34777832]
[-336.35824585 527.59259033]
[-344.70504761 541.03289795]
[-359.58642578 540.40496826]
[-372.72085571 547.64978027]
[-382.39099121 565.36285400]
[-401.70300293 564.05932617]
[-414.66397095 571.61004639]
[-427.62496948 579.16076660]
[-440.58593750 586.71142578]
[-453.54690552 594.26214600]
[-466.50787354 601.81286621]
[-479.46887207 609.36352539]
[-488.72109985 627.29852295]
[-508.05838013 626.44805908]
[-520.83880615 634.30047607]
[-533.61920166 642.15295410]
[-540.94720459 656.82373047]
[-557.33056641 657.54266357]
[-565.91552734 643.57012939]
[-557.87054443 629.27990723]
[-541.47167969 629.37255859]
[-528.69122314 621.52008057]
[-515.91082764 613.66760254]
[-514.45251465 603.59667969]
[-507.56033325 595.81488037]
[-497.31640625 593.03552246]
[-487.01956177 596.40258789]
[-474.05859375 588.85186768]
[-461.09762573 581.30114746]
[-448.13662720 573.75048828]
[-435.17565918 566.19976807]
[-422.21469116 558.64904785]
[-409.25369263 551.09838867]
[-407.55969238 541.06433105]
[-400.48696899 533.44628906]
[-390.18072510 530.90783691]
[-379.96563721 534.51531982]
[-366.83120728 527.27056885]
[-359.42385864 514.34844971]
[-343.60302734 514.45819092]
[-330.46862793 507.21337891]
[-317.33419800 499.96859741]
[-304.19976807 492.72381592]
[-296.79241943 479.80172729]
[-280.97158813 479.91143799]
[-277.09585571 465.57565308]
[-263.87887573 458.04132080]
[-248.86848450 462.20373535]
[-235.73406982 454.95895386]
[-222.59963989 447.71417236]
[-215.19229126 434.79208374]
[-199.37147522 434.90179443]
[-186.23704529 427.65698242]
[-173.10263062 420.41220093]
[-159.96820068 413.16741943]
[-146.83378601 405.92263794]
[-133.69935608 398.67785645]
[-120.56494141 391.43304443]
[-113.15758514 378.51095581]
[-97.33676147 378.62066650]
[-84.20233917 371.37588501]
[-71.06791687 364.13110352]
[-57.93349457 356.88632202]
[-44.79907227 349.64151001]
[-31.66465187 342.39672852]
[-13.47649956 329.86666870]
[3.60883880 332.37286377]
[8.94055653 318.35244751]
[14.27227497 304.33200073]
[19.60399246 290.31155396]
[24.93571091 276.29110718]
[30.26742935 262.27066040]
[20.75199890 250.81108093]
[18.23342323 236.02890015]
[23.48681641 221.87728882]
[35.19518661 212.19168091]
[50.27793884 209.65045166]
[55.60965729 195.63000488]
[60.94137192 181.60957336]
[66.27309418 167.58912659]
[71.60481262 153.56867981]
[54.06032944 144.11129761]
[39.80432129 128.84150696]
[30.76771545 108.94751740]
[28.44026756 86.25554657]
[33.66242599 63.06366730]
[46.47997665 41.90906143]
[66.08214569 25.29232979]
[61.91754532 10.88205147]
[57.75294495 -3.52822614]
[53.58834457 -17.93850327]
[49.42374420 -32.34878159]
[45.25914383 -46.75905991]
[30.88798714 -52.92378616]
[23.88784218 -66.90705872]
[27.56396103 -82.10640717]
[40.18059540 -91.34516144]
[55.78055573 -90.26106262]
[66.99801636 -79.36598969]
[68.53643799 -63.80426788]
[59.66942215 -50.92366028]
[63.83402252 -36.51338196]
[67.99861908 -22.10310364]
[72.16322327 -7.69282627]
[76.32781982 6.71745157]
[80.49242401 21.12772942]
[95.39950562 19.46074295]
[96.27818298 4.48650122]
[97.15685272 -10.48774147]
[89.32366180 -24.89513969]
[98.11386108 -38.73943329]
[114.48484802 -37.77879715]
[121.59555054 -23.00145531]
[112.13109589 -9.60906696]
[111.25241852 5.36517525]
[110.37374878 20.33941650]
[117.55398560 22.50603294]
[128.48669434 12.23589134]
[131.91445923 26.83926582]
[139.09468079 29.00588226]
[146.64538574 16.04490662]
[154.19609070 3.08393025]
[161.74679565 -9.87704563]
[169.29750061 -22.83802223]
[170.90348816 -31.79421997]
[177.01342773 -35.90592957]
[184.71554565 -48.77750778]
[192.41766357 -61.64908218]
[187.12898254 -76.36519623]
[192.58543396 -91.01992798]
[206.21064758 -98.69376373]
[221.57119751 -95.76335144]
[231.41432190 -83.61234283]
[231.09239197 -67.97807312]
[220.75740051 -56.24256897]
[205.28923035 -53.94696808]
[197.58712769 -41.07539368]
[189.88500977 -28.20381737]
[182.25846863 -15.28732014]
[174.70776367 -2.32634401]
[167.15707397 10.63463211]
[159.60636902 23.59560776]
[152.05566406 36.55658340]
[162.96850586 46.84783936]
[175.46492004 38.55087280]
[187.96133423 30.25390625]
[200.45774841 21.95693779]
[212.95414734 13.65997124]
[217.52673340 -1.71764612]
[232.45379639 -7.59662247]
[246.28457642 0.53288966]
[248.40928650 16.43462372]
[237.19802856 27.91013145]
[221.25111389 26.15638351]
[208.75471497 34.45335007]
[196.25830078 42.75031662]
[183.76188660 51.04728699]
[171.26547241 59.34425354]
[176.66880798 77.49021149]
[177.65515137 95.90279388]
[174.39764404 113.54944611]
[167.30131531 129.49223328]
[156.96885681 142.93769836]
[144.15620422 153.27604675]
[129.72106934 160.10780334]
[114.56769562 163.25688171]
[99.59121704 162.76954651]
[85.62525177 158.90040588]
[80.29353333 172.92083740]
[74.96181488 186.94128418]
[69.63009644 200.96173096]
[64.29837799 214.98216248]
[73.88134003 226.90332031]
[76.19536591 241.92138672]
[70.71794891 255.98780823]
[59.01345062 265.36120605]
[44.28786850 267.60238647]
[38.95615387 281.62283325]
[33.62443542 295.64328003]
[28.29271698 309.66372681]
[22.96099854 323.68414307]
[17.62928009 337.70458984]
[29.03006172 327.95666504]
[40.43084335 318.20874023]
[46.69115448 304.57757568]
[55.15594482 292.19421387]
[65.58380127 281.41183472]
[77.67734528 272.53793335]
[91.09166718 265.82556152]
[105.44422150 261.46615601]
[120.32567596 259.58407593]
[135.31163025 260.23294067]
[149.97471619 263.39428711]
[163.89674377 268.97796631]
[176.68066406 276.82467651]
[187.96192932 286.71069336]
[197.41877747 298.35406494]
[204.78150940 311.42272949]
[209.84017944 325.54397583]
[212.45048523 340.31512451]
[212.53799438 355.31484985]
[210.10023499 370.11544800]
[205.20669556 384.29476929]
[197.99694824 397.44845581]
[188.67660522 409.20138550]
[177.51148987 419.21838379]
[164.81999207 427.21374512]
[150.96406555 432.95947266]
[136.33886719 436.29171753]
[121.36150360 437.11541748]
[106.45909882 435.40707397]
[92.05666351 431.21548462]
[78.56492615 424.66009521]
[66.36865997 415.92788696]
[55.81568909 405.26794434]
[47.20697403 392.98419189]
[40.78968430 379.43145752]
[29.27541924 369.81784058]
[17.76115608 360.20422363]
[23.25685692 374.16119385]
[28.75255775 388.11816406]
[42.96851730 394.48559570]
[48.34311676 408.71826172]
[42.18512726 422.23175049]
[56.26400757 429.92361450]
[58.88626862 445.75091553]
[48.04033661 457.57229614]
[32.04627991 456.31942749]
[23.17337036 442.95339966]
[28.22814751 427.72744751]
[14.50977325 422.04046631]
[8.73752880 407.96438599]
[14.79557800 393.61386108]
[9.29987717 379.65689087]
[3.80417681 365.69992065]
[-3.25183320 363.15771484]
[-5.12023449 378.04089355]
[-4.93293333 393.03973389]
[-17.15192986 401.74008179]
[-31.26416016 396.65628052]
[-35.12764359 382.16238403]
[-25.41705704 370.72821045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 90]
[2 89]
[3 88]
[4 87]
[5 86]
[6 85]
[8 83]
[9 82]
[10 81]
[11 80]
[12 79]
[13 78]
[14 77]
[16 75]
[17 74]
[18 73]
[21 70]
[23 68]
[24 67]
[25 66]
[26 65]
[28 63]
[29 62]
[31 58]
[32 57]
[33 56]
[34 55]
[35 54]
[36 53]
[37 52]
[39 48]
[40 47]
[41 46]
[92 207]
[93 206]
[94 205]
[95 204]
[96 203]
[97 202]
[102 197]
[103 196]
[104 195]
[105 194]
[106 193]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[132 141]
[133 140]
[134 139]
[145 168]
[146 167]
[147 166]
[148 165]
[149 164]
[151 163]
[152 162]
[153 161]
[169 183]
[170 182]
[171 181]
[172 180]
[173 179]
[244 260]
[245 259]
[246 258]
[249 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
