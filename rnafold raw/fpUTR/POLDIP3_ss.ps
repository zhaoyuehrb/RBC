%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGAGUUGGUCCGCGGACGCCGGAAGUAGUUCGUCGCUCCCUAGCGGCCGAAGGGGCGGGCUCGCGGGGUCUCGACUGCUUUCGGCUUGCUCGGCGGAGCAAG\
) } def
/len { sequence length } bind def

/coor [
[70.34482574 498.49502563]
[58.36051941 508.20996094]
[43.02389526 509.88073730]
[29.22882080 502.97427368]
[21.37725067 489.69433594]
[21.97459221 474.27856445]
[30.83023643 461.64599609]
[45.11838150 455.82772827]
[47.77173615 441.06427002]
[50.42508698 426.30081177]
[45.06113052 412.40557861]
[55.11753464 400.19168091]
[57.77088928 385.42822266]
[60.42424393 370.66476440]
[63.07759857 355.90130615]
[65.73094940 341.13784790]
[60.36699677 327.24261475]
[70.42340088 315.02871704]
[73.07675171 300.26525879]
[75.51104736 285.46411133]
[77.28514099 270.56939697]
[78.61708069 255.62864685]
[79.94902039 240.68789673]
[81.28096008 225.74714661]
[82.61289978 210.80639648]
[83.94483948 195.86566162]
[85.27677155 180.92491150]
[86.60871124 165.98416138]
[87.94065094 151.04341125]
[89.27259064 136.10266113]
[90.60453033 121.16191864]
[91.93647003 106.22116852]
[89.42866516 98.41254425]
[93.53569031 90.85964203]
[95.30978394 75.96492004]
[85.80844879 63.62140656]
[87.81981659 48.54132080]
[99.64602661 39.55931854]
[101.42012787 24.66460228]
[103.19422150 9.76988506]
[104.96832275 -5.12483120]
[106.74241638 -20.01954842]
[108.29560852 -34.93891907]
[101.81427002 -49.37161636]
[110.65113068 -61.36157608]
[111.98307037 -76.30232239]
[113.31501007 -91.24307251]
[105.14644623 -107.66251373]
[115.60089874 -121.67140961]
[116.48950958 -136.64506531]
[117.37812042 -151.61871338]
[107.84396362 -164.52140808]
[112.12628937 -179.98237610]
[126.94004822 -186.14128113]
[140.92140198 -178.27352905]
[143.34504700 -162.41461182]
[132.35177612 -150.73010254]
[131.46316528 -135.75645447]
[130.57455444 -120.78279877]
[138.41226196 -111.43697357]
[137.69250488 -98.85726929]
[128.25575256 -89.91113281]
[126.92382050 -74.97038269]
[125.59188080 -60.02963638]
[132.16848755 -46.66559982]
[123.23635101 -33.60697937]
[125.81881714 -26.55201721]
[121.63713074 -18.24545097]
[119.86303711 -3.35073376]
[118.08893585 11.54398251]
[116.31484222 26.43869972]
[114.54074097 41.33341599]
[123.92634583 52.84193802]
[122.33933258 67.97257233]
[110.20449829 77.73902130]
[108.43040466 92.63373566]
[106.87721252 107.55310822]
[105.54527283 122.49385834]
[104.21334076 137.43460083]
[102.88140106 152.37535095]
[101.54946136 167.31610107]
[100.21752167 182.25685120]
[98.88558197 197.19760132]
[97.55364227 212.13833618]
[96.22171021 227.07908630]
[94.88977051 242.01983643]
[93.55783081 256.96057129]
[92.22589111 271.90133667]
[94.75685120 278.29266357]
[93.71521759 284.08761597]
[90.34664917 287.67880249]
[92.19094849 296.79385376]
[87.84020996 302.91860962]
[85.18685913 317.68206787]
[90.36103058 332.63327026]
[80.49440765 343.79119873]
[77.84105682 358.55465698]
[75.18770599 373.31811523]
[72.53434753 388.08157349]
[69.88099670 402.84503174]
[75.05516815 417.79623413]
[65.18854523 428.95416260]
[62.53519440 443.71762085]
[59.88183975 458.48107910]
[71.24988556 468.91040039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 104]
[9 103]
[10 102]
[12 100]
[13 99]
[14 98]
[15 97]
[16 96]
[18 94]
[19 93]
[20 91]
[21 88]
[22 87]
[23 86]
[24 85]
[25 84]
[26 83]
[27 82]
[28 81]
[29 80]
[30 79]
[31 78]
[32 77]
[34 76]
[35 75]
[38 72]
[39 71]
[40 70]
[41 69]
[42 68]
[43 66]
[45 64]
[46 63]
[47 62]
[49 59]
[50 58]
[51 57]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
