%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAGGCAUGCAGCUGGAGCGGACUGGACGGCUUCCGGGUUUGGCGGGGUCUUUGUCUCUCGCUGUAGCCGGAGCUCCAGGUUUUGCUCUCACUUCUCUGUGUCUUCUGCUCCUAGGGGCCUAGCCUGUGUGGCCCUCUGACCUGCAGAUAUUGGGAGAUCCACAGCUAAGACGCCAGGACCCCCUAGAAGCCUAGAA\
) } def
/len { sequence length } bind def

/coor [
[102.34112549 144.19131470]
[87.45944214 142.31106567]
[78.15153503 130.54829407]
[79.74282074 115.63293457]
[91.32221222 106.09885406]
[76.54557037 103.51991272]
[61.76893234 100.94097900]
[46.99229050 98.36204529]
[32.21565247 95.78310394]
[17.43901253 93.20417023]
[2.66237211 90.62522888]
[-12.26257324 95.87466431]
[-23.47006035 86.06439209]
[-38.24670029 83.48545837]
[-56.83655167 91.26650238]
[-71.12909698 78.25072479]
[-85.97945404 76.13720703]
[-100.84594727 74.14038086]
[-115.72766876 72.26038361]
[-130.60939026 70.38038635]
[-145.49110413 68.50038910]
[-160.37283325 66.62039185]
[-175.25454712 64.74039459]
[-190.13627625 62.86039352]
[-205.04568481 61.21437836]
[-219.97911072 59.80275345]
[-234.91255188 58.39112854]
[-249.84597778 56.97950363]
[-264.77941895 55.56787872]
[-270.95315552 57.97364426]
[-276.56951904 57.03486633]
[-280.15719604 53.87015533]
[-295.03890991 51.99015808]
[-309.92062378 50.11015701]
[-318.83596802 52.14044189]
[-325.02066040 48.08197403]
[-339.87100220 45.96845627]
[-354.72134399 43.85493469]
[-369.57171631 41.74141693]
[-384.32440186 47.45706558]
[-395.83450317 38.00366974]
[-410.58718872 43.71931839]
[-422.09732056 34.26591873]
[-436.94766235 32.15240097]
[-451.79800415 30.03888130]
[-466.64837646 27.92536354]
[-481.49871826 25.81184387]
[-496.34909058 23.69832611]
[-511.19943237 21.58480835]
[-526.04980469 19.47128868]
[-536.75122070 30.70780373]
[-552.01953125 33.47507858]
[-565.98376465 26.70904350]
[-573.27441406 13.01137066]
[-571.08807373 -2.35090089]
[-560.26538086 -13.47066498]
[-544.96789551 -16.07214546]
[-531.07788086 -9.15502167]
[-523.93627930 4.62093401]
[-509.08590698 6.73445272]
[-494.23556519 8.84797096]
[-479.38522339 10.96148968]
[-464.53485107 13.07500839]
[-449.68450928 15.18852615]
[-434.83413696 17.30204582]
[-419.98379517 19.41556358]
[-406.29330444 13.54874134]
[-393.72097778 23.15331268]
[-380.03048706 17.28649139]
[-367.45819092 26.89106178]
[-352.60784912 29.00458145]
[-337.75747681 31.11809921]
[-322.90713501 33.23161697]
[-308.04064941 35.22843933]
[-293.15890503 37.10843658]
[-278.27719116 38.98843384]
[-263.36776733 40.63444901]
[-248.43435669 42.04607391]
[-233.50091553 43.45769882]
[-218.56748962 44.86932373]
[-203.63406372 46.28094864]
[-199.44244385 43.97507858]
[-193.75653076 44.28408432]
[-188.25627136 47.97867203]
[-173.37455750 49.85866928]
[-158.49282837 51.73867035]
[-143.61111450 53.61866760]
[-128.72938538 55.49866486]
[-113.84767151 57.37866592]
[-98.96595001 59.25866318]
[-91.92954254 56.97600937]
[-83.86593628 61.28684998]
[-69.01557922 63.40036774]
[-61.42003632 56.54878616]
[-51.08947372 54.98086929]
[-41.40401459 59.45412445]
[-35.66776276 68.70881653]
[-20.89112473 71.28775024]
[-7.02310276 65.85385132]
[5.24130869 75.84859467]
[20.01794815 78.42752838]
[34.79459000 81.00646210]
[49.57122803 83.58540344]
[64.34786987 86.16433716]
[79.12451172 88.74327850]
[93.90114594 91.32221222]
[108.78286743 93.20220947]
[123.73662567 94.37909698]
[138.69038391 95.55598450]
[153.66078186 96.49784088]
[168.64413452 97.20443726]
[183.62748718 97.91103363]
[197.77680969 90.83239746]
[210.12548828 99.16064453]
[225.10882568 99.86724854]
[240.09217834 100.57384491]
[255.07553101 101.28044128]
[270.05886841 101.98703766]
[285.04223633 102.69363403]
[300.02557373 103.40023041]
[315.01815796 103.87139130]
[330.01632690 104.10700226]
[345.01446533 104.34261322]
[358.93447876 96.82302856]
[371.53863525 104.75928497]
[386.53677368 104.99489594]
[401.52523804 104.40599823]
[416.45864868 102.99436951]
[431.39208984 101.58274841]
[446.32550049 100.17111969]
[461.25894165 98.75949860]
[469.51666260 94.83329010]
[476.43774414 97.44487000]
[491.39151001 96.26798248]
[506.31338501 94.73912048]
[521.19506836 92.85912323]
[536.07684326 90.97911835]
[550.89215088 88.63260651]
[565.62646484 85.82188416]
[580.36077881 83.01116943]
[595.09509277 80.20044708]
[605.26556396 67.79315186]
[621.30456543 68.15299988]
[630.90838623 81.00393677]
[626.70971680 96.48783112]
[611.92950439 102.72676086]
[597.90576172 94.93475342]
[583.17150879 97.74547577]
[568.43719482 100.55619049]
[553.70288086 103.36691284]
[552.01641846 105.61673737]
[549.33319092 107.33098602]
[545.85388184 108.12517548]
[541.91491699 107.69491577]
[537.95678711 105.86083984]
[523.07507324 107.74084473]
[508.19338989 109.62084198]
[505.75198364 112.17652130]
[501.94787598 113.67232513]
[497.29470825 113.47907257]
[492.56838989 111.22174835]
[477.61462402 112.39863586]
[462.67056274 113.69292450]
[447.73715210 115.10455322]
[432.80371094 116.51617432]
[417.87026978 117.92780304]
[402.93685913 119.33942413]
[414.50778198 128.88475037]
[417.36636353 143.60984802]
[410.20733643 156.79121399]
[396.29953003 162.41018677]
[381.99328613 157.90113831]
[373.82089233 145.32290649]
[375.51385498 130.41874695]
[386.30117798 119.99304199]
[371.30303955 119.75743103]
[358.45578003 127.29386902]
[344.77886963 119.34075928]
[329.78070068 119.10514832]
[314.78256226 118.86953735]
[310.78475952 121.49716949]
[305.09213257 121.63523102]
[299.31896973 118.38357544]
[284.33563232 117.67697906]
[269.35226440 116.97038269]
[254.36892700 116.26378632]
[239.38557434 115.55718994]
[224.40223694 114.85059357]
[209.41888428 114.14399719]
[196.34126282 121.27317047]
[182.92088318 112.89438629]
[167.93754578 112.18778229]
[152.95419312 111.48118591]
[148.87583923 113.98194885]
[143.18168640 113.94113159]
[137.51350403 110.50974274]
[122.55974579 109.33285522]
[107.60597992 108.15596771]
[116.45072174 120.27085876]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 106]
[6 105]
[7 104]
[8 103]
[9 102]
[10 101]
[11 100]
[13 98]
[14 97]
[16 93]
[17 92]
[18 90]
[19 89]
[20 88]
[21 87]
[22 86]
[23 85]
[24 84]
[25 81]
[26 80]
[27 79]
[28 78]
[29 77]
[32 76]
[33 75]
[34 74]
[36 73]
[37 72]
[38 71]
[39 70]
[41 68]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[107 198]
[108 197]
[109 196]
[110 193]
[111 192]
[112 191]
[114 189]
[115 188]
[116 187]
[117 186]
[118 185]
[119 184]
[120 183]
[121 180]
[122 179]
[123 178]
[125 176]
[126 175]
[127 167]
[128 166]
[129 165]
[130 164]
[131 163]
[133 162]
[134 161]
[135 157]
[136 156]
[137 155]
[138 150]
[139 149]
[140 148]
[141 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
