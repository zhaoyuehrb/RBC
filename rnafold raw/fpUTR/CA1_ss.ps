%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUUUUGCUGUACAUAAGCUGCCCAUUCCCCCUCCAGCCUGUGGUACCCAGUCCUCAGGUGCAACCCCCUGCGUGGUCCUCUGUGGCAGCCUUCUCUCAUUCAGAGCUGGGUUGCAGCAGCUCAGACAAUCCUUACCAUGUGAAAGGAGGAAUGACUGUCAUGGCAUGAAAAAAGCAUCACUAUGAAAAAGAAAACUCAGUAGAAGAUA\
) } def
/len { sequence length } bind def

/coor [
[184.58912659 486.66134644]
[184.52091980 470.85720825]
[195.70707703 459.69274902]
[195.48373413 444.69439697]
[195.26040649 429.69604492]
[195.03707886 414.69772339]
[194.81375122 399.69937134]
[194.59042358 384.70104980]
[194.36709595 369.70269775]
[194.14376831 354.70437622]
[193.92044067 339.70602417]
[183.90003967 338.68807983]
[174.32017517 335.88369751]
[165.49346924 331.41854858]
[157.70164490 325.47192383]
[151.18664551 318.26968384]
[146.14305115 310.07589722]
[142.71244812 301.18310547]
[140.97950745 291.90197754]
[140.97027588 282.55050659]
[142.65225220 273.44311523]
[145.93664551 264.88003540]
[150.68240356 257.13742065]
[156.70196533 250.45851135]
[163.76853943 245.04600525]
[157.08834839 231.61563110]
[150.40815735 218.18525696]
[143.72796631 204.75486755]
[137.04776001 191.32449341]
[130.36756897 177.89411926]
[117.77187347 169.94442749]
[118.55367279 154.14254761]
[111.87347412 140.71217346]
[105.19328308 127.28179932]
[91.85954285 128.40176392]
[78.73493958 122.99295807]
[68.99593353 111.57024384]
[65.34468842 96.17024231]
[50.41487885 97.61965942]
[35.48506927 99.06907654]
[20.55526161 100.51850128]
[5.62545300 101.96791840]
[-7.36250353 111.00249481]
[-20.77785873 104.53121185]
[-35.70766830 105.98062897]
[-43.45628738 119.42453003]
[-57.64086533 125.71559143]
[-72.80713654 122.43476868]
[-83.12336731 110.84359741]
[-84.62274933 95.39913940]
[-76.72874451 82.04008484]
[-62.47675323 75.90326691]
[-47.34696579 79.34842682]
[-37.15708542 91.05081940]
[-22.22727776 89.60140228]
[-10.30720043 80.67049408]
[4.17603397 87.03810883]
[19.10584259 85.58869171]
[34.03565216 84.13927460]
[48.96546173 82.68984985]
[63.89526749 81.24043274]
[50.09823990 75.35468292]
[35.19124985 73.68685913]
[23.39775276 64.41790771]
[18.25427246 50.32732391]
[21.30318832 35.64045334]
[31.63021851 24.76146317]
[46.13858795 20.95263863]
[60.47766876 25.35613632]
[70.34758759 36.65147781]
[72.78885651 51.44971085]
[79.38526917 64.92143250]
[80.05505371 49.93639374]
[80.72483826 34.95135498]
[81.39463043 19.96631622]
[82.06441498 4.98127699]
[82.73419952 -10.00376225]
[83.40398407 -24.98880005]
[63.46031570 -37.89168167]
[55.28231812 -60.06613541]
[62.00439453 -82.60010529]
[80.80288696 -96.52818298]
[79.02042389 -111.42190552]
[77.23795319 -126.31562042]
[75.45549011 -141.20933533]
[66.13312531 -153.99229431]
[72.30320740 -167.54882812]
[70.52073669 -182.44253540]
[68.73827362 -197.33625793]
[66.95581055 -212.22998047]
[65.17333984 -227.12368774]
[63.39087677 -242.01741028]
[61.60840988 -256.91113281]
[50.23245239 -271.39108276]
[57.76292419 -287.24221802]
[55.75891113 -302.10775757]
[53.75489807 -316.97329712]
[51.75088501 -331.83880615]
[39.91596603 -342.66998291]
[41.14887238 -358.66558838]
[54.50382614 -367.55517578]
[69.73604584 -362.51940918]
[75.16068268 -347.42129517]
[66.61641693 -333.84283447]
[68.62042999 -318.97729492]
[70.62444305 -304.11175537]
[72.62845612 -289.24624634]
[82.05474091 -281.66525269]
[83.84598541 -269.29693604]
[76.50212860 -258.69360352]
[78.28459167 -243.79988098]
[80.06706238 -228.90615845]
[81.84952545 -214.01243591]
[83.63198853 -199.11872864]
[85.41445923 -184.22500610]
[87.19692230 -169.33128357]
[96.39179993 -157.61363220]
[90.34920502 -142.99180603]
[92.13167572 -128.09808350]
[93.91413879 -113.20436859]
[95.69660187 -98.31065369]
[102.71897125 -97.06797791]
[109.38071442 -94.49554443]
[115.43219757 -90.68573761]
[120.64587402 -85.77742004]
[124.82484436 -79.95081329]
[127.81031799 -73.42093658]
[129.48762512 -66.42961884]
[129.79060364 -59.23658752]
[128.70425415 -52.10979462]
[126.26538086 -45.31543732]
[122.56136322 -39.10802841]
[117.72706604 -33.72085190]
[111.93991089 -29.35719681]
[105.41334534 -26.18269157]
[98.38902283 -24.31901550]
[97.71923828 -9.33397675]
[97.04945374 5.65106201]
[96.37966919 20.63610077]
[95.70987701 35.62113953]
[95.04009247 50.60617828]
[94.37030792 65.59121704]
[115.28186798 70.64720154]
[128.22019958 86.41694641]
[128.99340820 105.68410492]
[118.62365723 120.60160828]
[125.30385590 134.03198242]
[131.98405457 147.46235657]
[145.05755615 156.37268066]
[143.79794312 171.21392822]
[150.47814941 184.64430237]
[157.15834045 198.07467651]
[163.83853149 211.50505066]
[170.51872253 224.93544006]
[177.19891357 238.36581421]
[199.93785095 235.41725159]
[222.13229370 243.35932922]
[238.72100830 261.00109863]
[245.64395142 284.87722778]
[240.82386780 309.92062378]
[254.30360413 316.50064087]
[267.78332520 323.08068848]
[281.26306152 329.66070557]
[294.74279785 336.24072266]
[308.22253418 342.82077026]
[314.83355713 342.74340820]
[319.75277710 345.58917236]
[322.00122070 349.80264282]
[335.27908325 356.78109741]
[348.55691528 363.75955200]
[362.41064453 356.76998901]
[377.72146606 359.29156494]
[388.60208130 370.35464478]
[390.86865234 385.70529175]
[383.64962769 399.44085693]
[369.72088623 406.27972412]
[354.43832397 403.59219360]
[343.67837524 392.41171265]
[341.57846069 377.03738403]
[328.30062866 370.05892944]
[315.02276611 363.08050537]
[301.64251709 356.30050659]
[288.16278076 349.72045898]
[274.68304443 343.14044189]
[261.20330811 336.56042480]
[247.72357178 329.98037720]
[234.24383545 323.40036011]
[227.91256714 327.42095947]
[236.58752441 339.65798950]
[245.26246643 351.89505005]
[253.93740845 364.13208008]
[264.14239502 375.12564087]
[258.01779175 388.81832886]
[243.02038574 388.53909302]
[237.40977478 374.62774658]
[230.02319336 361.57254028]
[222.63662720 348.51733398]
[215.25004578 335.46212769]
[208.91877747 339.48269653]
[209.14212036 354.48104858]
[209.36544800 369.47937012]
[209.58877563 384.47772217]
[209.81210327 399.47604370]
[210.03543091 414.47439575]
[210.25875854 429.47271729]
[210.48208618 444.47106934]
[210.70541382 459.46942139]
[222.21900940 470.29586792]
[222.62136841 486.09503174]
[211.67378235 497.49353027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 207]
[4 206]
[5 205]
[6 204]
[7 203]
[8 202]
[9 201]
[10 200]
[11 199]
[25 155]
[26 154]
[27 153]
[28 152]
[29 151]
[30 150]
[32 148]
[33 147]
[34 146]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[44 55]
[45 54]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
[77 137]
[78 136]
[82 121]
[83 120]
[84 119]
[85 118]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
[93 110]
[95 107]
[96 106]
[97 105]
[98 104]
[160 187]
[161 186]
[162 185]
[163 184]
[164 183]
[165 182]
[168 181]
[169 180]
[170 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
