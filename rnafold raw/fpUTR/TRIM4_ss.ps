%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUCUUGCGCGCUCAGGCCGGGCAACGUCCGUGCGUUCUUUUUGGGUCCUGAACCCCGGAAGAGAAACUGCGUUGUACCCUUUUACGUGAGGCGGUGACGGCGGUUCGGAAGUCGUCUGGCCUCCCCGCGGCCGCUCGCAGCUUGCUGGCCUCUCCCGCGCCUCACGUCGGACUCCGUCUCCGCGGCAGGGAAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[71.08713531 398.27862549]
[72.01484680 383.00128174]
[79.94596863 369.91098022]
[93.05797577 362.01577759]
[92.11611938 347.04537964]
[91.17426300 332.07498169]
[90.23240662 317.10458374]
[89.29055023 302.13418579]
[88.34869385 287.16378784]
[84.78797913 280.67974854]
[87.51148987 271.95120239]
[86.80489349 256.96783447]
[86.09829712 241.98449707]
[74.94325256 232.18139648]
[74.01322174 216.99623108]
[84.37123871 205.36225891]
[83.66464233 190.37890625]
[82.95804596 175.39555359]
[82.25144196 160.41221619]
[78.79301453 153.87303162]
[81.65329742 145.18833923]
[81.18213654 130.19573975]
[70.41024017 119.75704956]
[55.41024017 119.75704956]
[40.41024017 119.75704956]
[25.41024208 119.75704956]
[10.41024208 119.75704956]
[-4.58975792 119.75704956]
[-19.58975792 119.75704956]
[-29.25045586 128.31185913]
[-41.74959564 127.99801636]
[-50.39519501 119.52949524]
[-65.39334106 119.29388428]
[-73.92670441 129.72177124]
[-86.72188568 133.27627563]
[-99.04450989 128.87487793]
[-106.46810913 118.33669281]
[-121.46070862 117.86553192]
[-136.45330811 117.39437103]
[-151.44590759 116.92320251]
[-166.43850708 116.45204163]
[-181.43110657 115.98088074]
[-196.42370605 115.50971985]
[-210.46009827 122.80973053]
[-222.93806458 114.67647552]
[-237.93064880 114.20531464]
[-252.92324829 113.73415375]
[-267.91586304 113.26299286]
[-280.54797363 123.15285492]
[-296.12222290 119.30287170]
[-302.69137573 104.66641998]
[-295.21612549 90.47133636]
[-279.43087769 87.60686493]
[-267.44470215 98.27039337]
[-252.45208740 98.74155426]
[-237.45948792 99.21271515]
[-222.46690369 99.68387604]
[-209.50286865 92.35016632]
[-195.95254517 100.51712036]
[-180.95994568 100.98828888]
[-165.96734619 101.45944977]
[-150.97474670 101.93061066]
[-135.98214722 102.40177155]
[-120.98954773 102.87293243]
[-105.99694824 103.34409332]
[-94.24513245 91.31919861]
[-77.09477997 91.51384735]
[-65.15773010 104.29573822]
[-50.15958405 104.53134155]
[-35.31340790 95.18123627]
[-19.58975792 104.75704956]
[-4.58975792 104.75704956]
[10.41024208 104.75704956]
[25.41024208 104.75704956]
[40.41024017 104.75704956]
[55.41024017 104.75704956]
[70.41024017 104.75704956]
[76.65055084 84.57849121]
[93.71992493 74.77471924]
[111.49111938 78.92060852]
[122.42565155 68.65240479]
[121.46344757 59.25657272]
[124.88672638 50.60167313]
[131.80804443 44.58686829]
[140.58818054 42.46881104]
[149.22328186 44.60055542]
[160.62937927 34.85883713]
[172.03546143 25.11711502]
[183.44155884 15.37539387]
[194.84764099 5.63367367]
[206.25373840 -4.10804701]
[217.65982056 -13.84976768]
[229.06591797 -23.59148788]
[240.47200012 -33.33320999]
[251.87809753 -43.07492828]
[252.08299255 -89.00679016]
[260.12039185 -101.67170715]
[268.15777588 -114.33663177]
[276.19519043 -127.00154877]
[284.13287354 -139.72920227]
[291.97036743 -152.51879883]
[299.80783081 -165.30841064]
[307.64532471 -178.09800720]
[308.25875854 -193.90731812]
[321.50585938 -200.71636963]
[329.34335327 -213.50598145]
[325.87124634 -228.69091797]
[334.00177002 -241.54974365]
[348.49966431 -244.76626587]
[356.33715820 -257.55587769]
[364.17462158 -270.34548950]
[364.78805542 -286.15478516]
[378.03518677 -292.96383667]
[385.87265015 -305.75344849]
[393.71014404 -318.54302979]
[393.59829712 -334.94180298]
[407.87905884 -343.00354004]
[421.86163330 -334.43499756]
[421.16192627 -318.05078125]
[406.49975586 -310.70556641]
[398.66226196 -297.91595459]
[390.82479858 -285.12637329]
[390.77194214 -270.23184204]
[376.96423340 -262.50799561]
[369.12677002 -249.71839905]
[361.28927612 -236.92878723]
[365.00524902 -222.55078125]
[357.23913574 -209.46865845]
[342.13293457 -205.66850281]
[334.29547119 -192.87889099]
[334.24261475 -177.98437500]
[320.43490601 -170.26052856]
[312.59744263 -157.47093201]
[304.75994873 -144.68132019]
[296.92248535 -131.89172363]
[296.10733032 -124.53937531]
[288.86010742 -118.96414185]
[280.82272339 -106.29922485]
[272.78530884 -93.63430786]
[264.74789429 -80.96939087]
[268.71673584 -74.60556030]
[280.62326050 -55.51408386]
[295.53268433 -57.16009903]
[310.44210815 -58.80611038]
[323.33111572 -68.94541168]
[338.45391846 -62.60247040]
[340.25347900 -46.30235672]
[326.87854004 -36.81323242]
[312.08810425 -43.89669800]
[297.17871094 -42.25068283]
[282.26928711 -40.60466766]
[296.37771606 -35.51031876]
[305.18594360 -23.36885834]
[305.65011597 -8.37604046]
[297.60977173 4.28702784]
[283.84350586 10.24434185]
[269.10852051 7.43721581]
[258.49682617 -3.16428351]
[255.67550659 -17.89657021]
[261.61981201 -31.66884041]
[250.21371460 -21.92712021]
[238.80763245 -12.18539906]
[227.40155029 -2.44367838]
[215.99545288 7.29804230]
[204.58937073 17.03976250]
[193.18327332 26.78148460]
[181.77719116 36.52320480]
[170.37109375 46.26492691]
[158.96501160 56.00664520]
[153.81278992 75.98725891]
[132.69386292 79.58692932]
[121.75933075 89.85514069]
[125.37738037 102.48201752]
[121.78775024 115.92775726]
[111.24169159 126.16667175]
[96.17473602 129.72457886]
[96.64589691 144.71717834]
[97.23479462 159.70561218]
[97.94139099 174.68896484]
[98.64798737 189.67231750]
[99.35458374 204.65565491]
[110.76148224 215.26321411]
[111.26463318 230.46853638]
[101.08164215 241.27789307]
[101.78823853 256.26123047]
[102.49483490 271.24459839]
[103.31909180 286.22192383]
[104.26094818 301.19232178]
[105.20280457 316.16271973]
[106.14466095 331.13311768]
[107.08652496 346.10354614]
[108.02838135 361.07394409]
[122.02652740 367.26348877]
[131.53575134 379.25653076]
[134.37092590 394.29714966]
[129.88052368 408.92913818]
[119.09641266 419.79016113]
[104.49671173 424.38442993]
[89.43631744 421.65621948]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 192]
[5 191]
[6 190]
[7 189]
[8 188]
[9 187]
[11 186]
[12 185]
[13 184]
[16 181]
[17 180]
[18 179]
[19 178]
[21 177]
[22 176]
[23 77]
[24 76]
[25 75]
[26 74]
[27 73]
[28 72]
[29 71]
[32 69]
[33 68]
[37 65]
[38 64]
[39 63]
[40 62]
[41 61]
[42 60]
[43 59]
[45 57]
[46 56]
[47 55]
[48 54]
[80 172]
[81 171]
[86 169]
[87 168]
[88 167]
[89 166]
[90 165]
[91 164]
[92 163]
[93 162]
[94 161]
[95 160]
[96 140]
[97 139]
[98 138]
[99 137]
[100 135]
[101 134]
[102 133]
[103 132]
[105 130]
[106 129]
[109 126]
[110 125]
[111 124]
[113 122]
[114 121]
[115 120]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
