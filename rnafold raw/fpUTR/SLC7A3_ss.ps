%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAGGGGCGCUUGGCGCGCAACGACCCCAAGCCGCAGCUUUGAAGCCUGAGCGGCCGAACUCGGCAGCUCCAACCCAACUCGGCUUAACUCCGCCUCACCGAGCCCAGUCCAAGACUCUGUGCUCCCUAGGUUUGCAACAGCUCUCUGAUCAUCUUCUUCAAUUCCUGCUAGG\
) } def
/len { sequence length } bind def

/coor [
[76.72536469 200.00674438]
[75.94667053 184.66760254]
[82.95616150 171.00148010]
[95.86830902 162.68450928]
[95.06085968 147.70626831]
[94.25341034 132.72801208]
[93.44596100 117.74975586]
[79.45031738 112.35329437]
[68.79621887 122.91218567]
[58.14212036 133.47108459]
[47.58322906 144.12518311]
[37.12039185 154.87362671]
[26.65755272 165.62207031]
[16.19471550 176.37051392]
[5.73187733 187.11895752]
[1.65020871 202.40458679]
[-12.77161217 206.12753296]
[-23.13755226 216.96945190]
[-33.40575790 227.90399170]
[-39.84079742 243.58921814]
[-56.69444656 241.74777222]
[-59.59051132 225.04299927]
[-44.34028625 217.63577271]
[-34.07208252 206.70124817]
[-31.77769279 199.64920044]
[-23.52005577 195.66468811]
[-20.18675804 181.14785767]
[-5.01656532 176.65611267]
[5.44627237 165.90766907]
[15.90911007 155.15922546]
[26.37194824 144.41078186]
[36.83478546 133.66233826]
[39.25539398 126.65261841]
[47.58322906 122.81698608]
[58.23732376 112.25809479]
[68.89142609 101.69919586]
[75.39968109 88.18466949]
[77.01222992 73.27159882]
[78.62478638 58.35852432]
[80.23734283 43.44545364]
[81.71597290 28.51851082]
[83.06056213 13.57889652]
[84.40515137 -1.36071754]
[85.61559296 -16.31179810]
[86.69178009 -31.27314377]
[87.76797485 -46.23448563]
[88.84416962 -61.19583130]
[89.92035675 -76.15717316]
[90.99655151 -91.11851501]
[84.48829651 -104.63304901]
[72.12004852 -113.11989594]
[59.75180435 -121.60674286]
[47.38356018 -130.09358215]
[31.62694931 -131.52178955]
[25.51036644 -145.10253906]
[13.14212227 -153.58938599]
[0.77387816 -162.07623291]
[-11.59436607 -170.56306458]
[-27.97706604 -171.29736328]
[-35.29132080 -185.97502136]
[-26.01285362 -199.49693298]
[-9.68655491 -197.95291138]
[-3.10752177 -182.93132019]
[9.26072311 -174.44447327]
[21.62896729 -165.95762634]
[33.99721146 -157.47077942]
[48.86916351 -156.64961243]
[55.87040710 -142.46182251]
[68.23864746 -133.97499084]
[80.60689545 -125.48814392]
[92.97513580 -117.00129700]
[99.73240662 -120.25542450]
[92.94705963 -133.63298035]
[86.16171265 -147.01054382]
[79.37636566 -160.38810730]
[69.60667419 -171.77023315]
[76.94981384 -184.84992981]
[91.75426483 -182.43574524]
[94.56172943 -167.70098877]
[100.79013062 -154.05522156]
[107.01853943 -140.40945435]
[113.24694061 -126.76367950]
[120.00420380 -130.01780701]
[121.08039856 -144.97915649]
[122.15658569 -159.94049072]
[110.20342255 -169.83500671]
[106.38156891 -184.87405396]
[112.16062164 -199.27482605]
[125.31840515 -207.49992371]
[140.79548645 -206.38664246]
[152.64062500 -196.36303711]
[156.29910278 -181.28341675]
[150.36416626 -166.94618225]
[137.11793518 -158.86430359]
[136.04174805 -143.90295410]
[134.96554565 -128.94161987]
[141.50515747 -125.26961517]
[144.44804382 -139.97810364]
[159.34603882 -141.72439575]
[165.61058044 -128.09518433]
[154.58436584 -117.92562103]
[161.12396240 -114.25361633]
[173.33787537 -122.96112061]
[185.55177307 -131.66862488]
[197.76568604 -140.37611389]
[204.51110840 -154.68728638]
[219.36592102 -155.77529907]
[231.57983398 -164.48280334]
[243.79373169 -173.19029236]
[242.94859314 -188.59449768]
[250.58561707 -201.99894714]
[264.26785278 -209.12634277]
[279.62936401 -207.70236206]
[291.76834106 -198.18138123]
[296.81124878 -183.60151672]
[293.14898682 -168.61515808]
[281.95010376 -158.00437927]
[266.78814697 -155.15505981]
[252.50123596 -160.97639465]
[240.28732300 -152.26889038]
[228.07342529 -143.56138611]
[222.20161438 -129.87303162]
[206.47317505 -128.16221619]
[194.25927734 -119.45471191]
[182.04536438 -110.74721527]
[169.83146667 -102.03971863]
[153.17672729 -87.54629517]
[134.96243286 -81.26781464]
[118.34319305 -82.64187622]
[105.95789337 -90.04232788]
[104.88170624 -75.08098602]
[103.80551147 -60.11964035]
[102.72931671 -45.15829468]
[101.65312958 -30.19695091]
[100.57693481 -15.23560715]
[103.24221039 -8.31521416]
[99.34476471 -0.01612791]
[98.00017548 14.92348671]
[96.65558624 29.86310005]
[99.19620514 36.83022308]
[95.15041351 45.05801010]
[93.53785706 59.97108078]
[91.92530060 74.88414764]
[90.31275177 89.79721832]
[95.55516815 77.96694183]
[110.91916656 71.10987091]
[131.30357361 76.25147247]
[147.51333618 95.77957153]
[157.38241577 107.07564545]
[167.25149536 118.37171936]
[182.49736023 116.01222229]
[196.58935547 122.29069519]
[205.03076172 135.20372009]
[205.12799072 150.63076782]
[196.84999084 163.64915466]
[182.83824158 170.10473633]
[167.56385803 167.93757629]
[155.90081787 157.83918762]
[151.57077026 143.03195190]
[155.95542908 128.24079895]
[146.08633423 116.94472504]
[136.21725464 105.64865112]
[129.26899719 108.47206879]
[115.37247467 114.11889648]
[108.42421722 116.94231415]
[109.23166656 131.92056274]
[110.03910828 146.89881897]
[110.84655762 161.87705994]
[124.57798004 168.75773621]
[133.01600647 181.59111023]
[133.89083862 196.92506409]
[126.96716309 210.63485718]
[114.10740662 219.03260803]
[98.77078247 219.85937500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 168]
[5 167]
[6 166]
[7 165]
[8 36]
[9 35]
[10 34]
[11 32]
[12 31]
[13 30]
[14 29]
[15 28]
[17 26]
[18 24]
[19 23]
[37 144]
[38 143]
[39 142]
[40 141]
[41 139]
[42 138]
[43 137]
[44 135]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[50 71]
[51 70]
[52 69]
[53 68]
[55 66]
[56 65]
[57 64]
[58 63]
[83 96]
[84 95]
[85 94]
[102 126]
[103 125]
[104 124]
[105 123]
[107 121]
[108 120]
[109 119]
[148 162]
[149 161]
[150 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
