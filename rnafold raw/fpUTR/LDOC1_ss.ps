%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGCGCACCGUCCGUCCGAAUGGCCUCGUGGGCGGAGCUUGCGUAGCCUCCCGGACCCCGGCGCACACCGCCCCCCGCCCCCCGCCCCUGGCCACCAAGCGCCUCCGUGGACACGCACUUCCUGCGAGGCCUCCGUGCGCACCUUGGCCGAGCCGAACCGAGCCGAGUCCUGUCCUUCCAGGCCGUUCGCA\
) } def
/len { sequence length } bind def

/coor [
[224.91682434 288.00860596]
[216.25798035 275.76013184]
[207.50027466 263.58218384]
[198.64422607 251.47555542]
[189.78819275 239.36892700]
[180.93215942 227.26228333]
[174.43634033 223.71475220]
[172.03262329 214.88714600]
[163.37379456 202.63868713]
[148.69624329 200.37922668]
[139.74047852 188.08090210]
[142.20991516 172.70106506]
[133.55108643 160.45260620]
[119.88619232 154.52638245]
[118.23796844 138.79125977]
[109.57913971 126.54280090]
[100.92031097 114.29434967]
[88.30358887 108.26857758]
[86.83123779 94.36447906]
[78.17240906 82.11602783]
[64.71507263 81.37799835]
[54.29484558 73.14066315]
[50.58093262 60.59045410]
[54.71565247 48.37788391]
[46.25629807 35.99082184]
[37.79693985 23.60376167]
[29.33758545 11.21669865]
[20.87822914 -1.17036295]
[12.41887474 -13.55742455]
[3.95951915 -25.94448662]
[-4.49983644 -38.33155060]
[-12.95919132 -50.71861267]
[-21.41854668 -63.10567474]
[-29.87790298 -75.49273682]
[-44.05010223 -82.52546692]
[-44.83824158 -97.39920807]
[-53.29759598 -109.78627014]
[-57.30629730 -111.53727722]
[-60.24613190 -114.20918274]
[-61.95838165 -117.35005188]
[-62.44842529 -120.50296021]
[-61.87299347 -123.26032257]
[-69.51279449 -136.16897583]
[-77.15259552 -149.07763672]
[-84.79240417 -161.98628235]
[-92.43220520 -174.89494324]
[-107.47813416 -178.92704773]
[-115.04209137 -192.12709045]
[-111.10537720 -206.44622803]
[-118.74517822 -219.35488892]
[-129.43717957 -221.44789124]
[-137.04991150 -228.93156433]
[-139.23330688 -239.15647888]
[-135.50115967 -248.68748474]
[-142.71894836 -261.83676147]
[-149.93673706 -274.98605347]
[-157.15452576 -288.13531494]
[-160.97445679 -290.26696777]
[-163.64123535 -293.21145630]
[-165.04071045 -296.50360107]
[-165.22257996 -299.68917847]
[-164.38237000 -302.37771606]
[-170.73387146 -315.96661377]
[-177.08537292 -329.55554199]
[-183.43687439 -343.14443970]
[-189.78837585 -356.73333740]
[-206.05223083 -356.78890991]
[-220.61308289 -363.90289307]
[-230.58081055 -376.60684204]
[-234.00158691 -392.32846069]
[-230.24075317 -407.91238403]
[-220.09980774 -420.25347900]
[-226.67051697 -433.73776245]
[-233.24124146 -447.22201538]
[-248.49137878 -448.39688110]
[-261.02316284 -456.99053955]
[-267.52767944 -470.61248779]
[-266.34838867 -485.56124878]
[-257.90182495 -497.82995605]
[-264.47256470 -511.31423950]
[-279.11001587 -517.88110352]
[-282.96243286 -533.45477295]
[-273.07452393 -546.08843994]
[-257.03146362 -546.09057617]
[-247.14012146 -533.45965576]
[-250.98828125 -517.88494873]
[-244.41755676 -504.40066528]
[-229.55010986 -503.49255371]
[-217.05024719 -495.20950317]
[-210.33029175 -481.69250488]
[-211.28465271 -466.52722168]
[-219.75695801 -453.79275513]
[-213.18624878 -440.30847168]
[-206.61552429 -426.82418823]
[-192.75486755 -427.56985474]
[-179.61631775 -422.95928955]
[-169.19636536 -413.65811157]
[-163.09170532 -401.04730225]
[-162.25466919 -387.01821899]
[-166.84474182 -373.68902588]
[-176.19946289 -363.08486938]
[-169.84796143 -349.49594116]
[-163.49645996 -335.90704346]
[-157.14495850 -322.31811523]
[-150.79345703 -308.72921753]
[-144.00524902 -295.35311890]
[-136.78746033 -282.20382690]
[-129.56967163 -269.05456543]
[-122.35188293 -255.90527344]
[-105.13014984 -247.13143921]
[-105.83652496 -226.99468994]
[-98.19672394 -214.08602905]
[-83.75000000 -210.64685059]
[-75.81826782 -197.66447449]
[-79.52354431 -182.53474426]
[-71.88374329 -169.62609863]
[-64.24394226 -156.71743774]
[-56.60414124 -143.80877686]
[-48.96433640 -130.90011597]
[-40.91053391 -118.24562836]
[-32.45117950 -105.85856628]
[-18.88405037 -99.71183777]
[-17.49084091 -83.95208740]
[-9.03148556 -71.56502533]
[-0.57212973 -59.17796707]
[7.88722563 -46.79090500]
[16.34658051 -34.40384293]
[24.80593681 -22.01678085]
[33.26529312 -9.62971878]
[41.72464752 2.75734353]
[50.18400192 15.14440536]
[58.64336014 27.53146744]
[67.10271454 39.91852951]
[83.74195099 42.31826401]
[93.69891357 56.28059769]
[90.42086029 73.45719910]
[99.07968903 85.70565033]
[111.69641113 91.73142242]
[113.16876221 105.63552094]
[121.82759094 117.88397217]
[130.48641968 130.13243103]
[144.77064514 136.93475342]
[145.79953003 151.79377747]
[154.45835876 164.04223633]
[169.78111267 166.84419250]
[178.38792419 179.38922119]
[175.62223816 193.97985840]
[184.28108215 206.22831726]
[193.03880310 218.40625000]
[201.89483643 230.51289368]
[210.75086975 242.61952209]
[219.60690308 254.72616577]
[227.21058655 259.81423950]
[228.50643921 267.10131836]
[237.16526794 279.34976196]
[249.59356689 277.86227417]
[261.40466309 281.78274536]
[270.37188721 290.30731201]
[274.83233643 301.77035522]
[273.99508667 313.96972656]
[268.08068848 324.58972168]
[276.33834839 337.11212158]
[284.59600830 349.63455200]
[292.85366821 362.15698242]
[301.11132812 374.67938232]
[308.45895386 380.13070679]
[309.39941406 387.47213745]
[316.65780640 393.04171753]
[317.47924805 400.39736938]
[324.64648438 406.08377075]
[325.34872437 413.45178223]
[332.98852539 426.36044312]
[340.62832642 439.26910400]
[348.26812744 452.17776489]
[363.63748169 455.85989380]
[371.83029175 469.37484741]
[367.98587036 484.70440674]
[354.38504028 492.75387573]
[339.09698486 488.74758911]
[331.19177246 475.06243896]
[335.35946655 459.81756592]
[327.71966553 446.90890503]
[320.07986450 434.00024414]
[312.44006348 421.09158325]
[304.69598389 408.24520874]
[296.74490356 395.52593994]
[288.58892822 382.93704224]
[280.33126831 370.41464233]
[272.07357788 357.89221191]
[263.81591797 345.36978149]
[255.55827332 332.84738159]
[237.90962219 332.87493896]
[223.64540100 322.21768188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 155]
[2 154]
[3 152]
[4 151]
[5 150]
[6 149]
[8 148]
[9 147]
[12 144]
[13 143]
[15 141]
[16 140]
[17 139]
[19 137]
[20 136]
[24 133]
[25 132]
[26 131]
[27 130]
[28 129]
[29 128]
[30 127]
[31 126]
[32 125]
[33 124]
[34 123]
[36 121]
[37 120]
[42 119]
[43 118]
[44 117]
[45 116]
[46 115]
[49 112]
[50 111]
[54 109]
[55 108]
[56 107]
[57 106]
[62 105]
[63 104]
[64 103]
[65 102]
[66 101]
[72 94]
[73 93]
[74 92]
[79 87]
[80 86]
[161 191]
[162 190]
[163 189]
[164 188]
[165 187]
[167 186]
[169 185]
[171 184]
[172 183]
[173 182]
[174 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
