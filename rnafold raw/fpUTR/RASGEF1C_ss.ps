%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCGGCGGCGGCGGGCGGCGCCCCGGUCCGCGGCGCCGAGGCUCGCACCGGGAGCUGCCCAUGGGCCGGGCCCGGAGUUCCGGCGCGCCGGGAGCCGGCAGAC\
) } def
/len { sequence length } bind def

/coor [
[137.41258240 424.59249878]
[128.27491760 412.83016968]
[134.38868713 398.23797607]
[132.67881775 383.33575439]
[130.96894836 368.43353271]
[129.25907898 353.53131104]
[115.68292236 343.72042847]
[113.28430939 326.80377197]
[124.01123810 313.07623291]
[121.87651825 298.22891235]
[119.74179077 283.38159180]
[117.60707092 268.53427124]
[115.47234344 253.68695068]
[111.34391785 247.42092896]
[113.49494934 238.38580322]
[111.78507996 223.48358154]
[102.64741516 211.72125244]
[108.76117706 197.12904358]
[107.05130768 182.22682190]
[105.34143829 167.32460022]
[103.63156128 152.42236328]
[101.07373047 137.64205933]
[97.67627716 123.03188324]
[94.27883148 108.42170715]
[89.46453094 101.79473877]
[90.99929047 93.34590912]
[88.02043152 78.64466858]
[85.04157257 63.94342804]
[82.06272125 49.24219131]
[77.22495270 41.31398392]
[79.21501923 34.07889175]
[76.65718842 19.29858398]
[74.09935760 4.51827621]
[71.54152679 -10.26203156]
[68.98368835 -25.04233932]
[66.42585754 -39.82264709]
[56.44864273 -52.10131836]
[61.90233994 -65.96156311]
[59.34450531 -80.74187469]
[54.73511505 -88.80499268]
[56.93097687 -95.98030853]
[54.79625320 -110.82762909]
[51.36741638 -115.15765381]
[50.17161179 -119.90013123]
[50.97201920 -124.09505463]
[53.17113876 -127.03114319]
[52.31480408 -142.00668335]
[51.45847321 -156.98222351]
[50.60214233 -171.95774841]
[49.74580765 -186.93328857]
[41.23329163 -200.26924133]
[48.23138809 -213.41746521]
[41.29067230 -228.88558960]
[54.23291397 -239.83706665]
[68.33916473 -230.43228149]
[63.20692444 -214.27380371]
[71.65818787 -202.00900269]
[64.72134399 -187.78962708]
[65.57767487 -172.81408691]
[66.43401337 -157.83854675]
[67.29034424 -142.86300659]
[68.14667511 -127.88747406]
[69.64357758 -112.96234894]
[71.77829742 -98.11502838]
[74.12481689 -83.29970551]
[76.68264771 -68.51940155]
[86.47690582 -57.29791260]
[81.20616150 -42.38047791]
[83.76399994 -27.60017204]
[86.32183075 -12.81986427]
[88.87966156 1.96044326]
[91.43750000 16.74075127]
[93.99533081 31.52105904]
[96.76395416 46.26333618]
[99.74281311 60.96457291]
[102.72167206 75.66580963]
[105.70053101 90.36705017]
[108.88900757 105.02425385]
[112.28646088 119.63442993]
[115.68390656 134.24461365]
[119.02899170 137.53202820]
[120.86878204 141.35208130]
[121.22818756 145.13229370]
[120.32667542 148.37394714]
[118.53379059 150.71249390]
[120.24365997 165.61473083]
[121.95352936 180.51695251]
[123.66340637 195.41917419]
[132.92337036 208.24740601]
[126.68730164 221.77371216]
[128.39717102 236.67593384]
[130.31967163 251.55223083]
[132.45439148 266.39953613]
[134.58911133 281.24685669]
[136.72383118 296.09417725]
[138.85856628 310.94149780]
[150.56687927 317.77825928]
[156.07522583 329.95285034]
[153.55593872 342.87680054]
[144.16130066 351.82144165]
[145.87117004 366.72366333]
[147.58103943 381.62588501]
[149.29090881 396.52810669]
[158.55088806 409.35632324]
[152.31481934 422.88262939]
[163.93339539 433.94555664]
[162.38464355 449.91366577]
[148.85662842 458.53762817]
[133.72689819 453.20184326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[3 103]
[4 102]
[5 101]
[6 100]
[9 96]
[10 95]
[11 94]
[12 93]
[13 92]
[15 91]
[16 90]
[18 88]
[19 87]
[20 86]
[21 85]
[22 80]
[23 79]
[24 78]
[26 77]
[27 76]
[28 75]
[29 74]
[31 73]
[32 72]
[33 71]
[34 70]
[35 69]
[36 68]
[38 66]
[39 65]
[41 64]
[42 63]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[52 56]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
