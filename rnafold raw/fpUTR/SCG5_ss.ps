%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCAGUCUGGGGAGUCCUGGCGAGGCAGCUUCCACCUGCUGGAGGAGGGGCCGGGGCGGAGCUAAGAUGCGGAGGAGGGUGACGCACUAGCUCUCCAGUUCGCCCGUUCCUGGCCUGACCCCCACCAAGGCCCAUACCGCAGUAGGCUCCUCGGGCUGCCCCUCGGUUGACA\
) } def
/len { sequence length } bind def

/coor [
[136.29118347 319.67068481]
[145.76940918 307.84109497]
[158.72360229 299.96932983]
[155.76405334 285.26419067]
[152.80450439 270.55905151]
[149.84495544 255.85391235]
[146.88540649 241.14878845]
[143.92585754 226.44364929]
[140.96629333 211.73851013]
[138.00674438 197.03337097]
[135.04719543 182.32823181]
[132.08764648 167.62309265]
[129.12809753 152.91795349]
[126.16854858 138.21281433]
[123.20899963 123.50768280]
[116.26702118 120.66886139]
[104.40824890 129.85415649]
[102.38305664 114.99121857]
[95.44107819 112.15240479]
[83.02574158 120.57020569]
[70.61040497 128.98800659]
[65.23996735 136.42068481]
[57.89406586 137.44334412]
[45.32877731 145.63563538]
[32.76348877 153.82792664]
[25.83141899 168.68989563]
[9.47319984 169.84779358]
[0.51676643 156.11045837]
[8.17572880 141.60969543]
[24.57120323 141.26263428]
[37.13648987 133.07034302]
[49.70177841 124.87806702]
[62.19260025 116.57267761]
[74.60793304 108.15487671]
[87.02326965 99.73706818]
[95.10179138 87.09833527]
[97.52851868 72.29593658]
[99.95524597 57.49354172]
[102.38198090 42.69114304]
[104.80870819 27.88874435]
[107.23543549 13.08634663]
[109.66217041 -1.71605110]
[100.71227264 -14.46505642]
[103.38418579 -29.44222260]
[115.59357452 -37.89601135]
[104.85378265 -48.93970490]
[102.70135498 -64.01354218]
[109.75424957 -77.30717468]
[123.12255096 -83.82073212]
[125.54927826 -98.62313080]
[127.97600555 -113.42552948]
[130.40274048 -128.22793579]
[132.82946777 -143.03031921]
[134.45124817 -157.94239807]
[135.26333618 -172.92039490]
[136.07542419 -187.89839172]
[136.88749695 -202.87640381]
[137.56434631 -217.86111450]
[138.10588074 -232.85134888]
[138.64741516 -247.84156799]
[135.82240295 -256.56539917]
[139.33647156 -263.09683228]
[140.14855957 -278.07482910]
[140.96063232 -293.05282593]
[141.77272034 -308.03082275]
[134.79389954 -322.22964478]
[143.20889282 -334.51937866]
[144.02098083 -349.49737549]
[133.14393616 -367.93490601]
[145.01972961 -384.79220581]
[145.01972961 -399.79220581]
[145.01972961 -414.79220581]
[145.01972961 -429.79220581]
[145.01972961 -444.79220581]
[144.74891663 -459.78976440]
[144.20738220 -474.77999878]
[143.66584778 -489.77020264]
[143.12431335 -504.76043701]
[142.58277893 -519.75067139]
[142.04124451 -534.74090576]
[141.49971008 -549.73107910]
[128.17658997 -557.50915527]
[121.19396210 -571.26580811]
[122.77996063 -586.61145020]
[132.42849731 -598.64929199]
[147.06077576 -603.53808594]
[162.00765991 -599.71783447]
[172.49966431 -588.40765381]
[175.18884277 -573.21643066]
[169.21707153 -558.99176025]
[156.48992920 -550.27264404]
[157.03146362 -535.28240967]
[157.57299805 -520.29217529]
[158.11453247 -505.30197144]
[158.65606689 -490.31176758]
[159.19760132 -475.32153320]
[159.73915100 -460.33129883]
[162.58934021 -456.45999146]
[163.01458740 -450.74917603]
[160.01972961 -444.79220581]
[160.01972961 -429.79220581]
[160.01972961 -414.79220581]
[160.01972961 -399.79220581]
[160.01972961 -384.79220581]
[167.28329468 -379.58212280]
[171.37916565 -371.48193359]
[171.26651001 -362.26788330]
[166.84346008 -354.02716064]
[158.99897766 -348.68530273]
[158.18688965 -333.70730591]
[165.22380066 -320.57980347]
[156.75071716 -307.21875000]
[155.93864441 -292.24075317]
[155.12655640 -277.26275635]
[154.31446838 -262.28475952]
[153.63763428 -247.30003357]
[153.09609985 -232.30981445]
[152.55456543 -217.31958008]
[155.46548462 -210.49795532]
[151.86550903 -202.06431580]
[151.05342102 -187.08631897]
[150.24133301 -172.10830688]
[149.42926025 -157.13031006]
[161.42785645 -166.13217163]
[176.30014038 -164.17887878]
[185.56736755 -152.38403320]
[183.94625854 -137.47187805]
[172.36102295 -127.94390869]
[157.41642761 -129.23202515]
[147.63186646 -140.60359192]
[145.20513916 -125.80120087]
[142.77841187 -110.99880219]
[140.35166931 -96.19640350]
[137.92494202 -81.39400482]
[148.51367188 -70.95288849]
[150.95268250 -56.10313416]
[144.09983826 -42.50564194]
[130.39596558 -35.46928406]
[139.26692200 -23.55954742]
[137.01673889 -8.51324177]
[124.46456909 0.71067888]
[122.03783417 15.51307678]
[119.61110687 30.31547546]
[117.18437958 45.11787415]
[114.75764465 59.92026901]
[112.33091736 74.72267151]
[109.90419006 89.52506256]
[137.91413879 120.54813385]
[140.87368774 135.25326538]
[143.83323669 149.95840454]
[146.79278564 164.66354370]
[149.75233459 179.36868286]
[152.71188354 194.07382202]
[155.67143250 208.77896118]
[158.63098145 223.48410034]
[161.59054565 238.18922424]
[164.55009460 252.89436340]
[167.50964355 267.59951782]
[170.46919250 282.30465698]
[173.42874146 297.00976562]
[188.41954041 299.25735474]
[201.73609924 306.49926758]
[211.77035522 317.86102295]
[217.31063843 331.97061157]
[217.68794250 347.12426758]
[212.85667419 361.49212646]
[203.40025330 373.33914185]
[190.46060181 381.23477173]
[175.60021973 384.22555542]
[160.61357117 381.95037842]
[147.31039429 374.68392944]
[137.29708862 363.30371094]
[131.78280640 349.18392944]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 160]
[4 159]
[5 158]
[6 157]
[7 156]
[8 155]
[9 154]
[10 153]
[11 152]
[12 151]
[13 150]
[14 149]
[15 148]
[19 35]
[20 34]
[21 33]
[23 32]
[24 31]
[25 30]
[36 147]
[37 146]
[38 145]
[39 144]
[40 143]
[41 142]
[42 141]
[45 138]
[49 134]
[50 133]
[51 132]
[52 131]
[53 130]
[54 123]
[55 122]
[56 121]
[57 120]
[58 118]
[59 117]
[60 116]
[62 115]
[63 114]
[64 113]
[65 112]
[67 110]
[68 109]
[70 104]
[71 103]
[72 102]
[73 101]
[74 100]
[75 97]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
