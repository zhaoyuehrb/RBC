%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAACCCGGAAGUGGAACUCUGAGCCAUUCAGCGUUUGGGUGAAGACGGAGGCGGGUUCUACAGAGACGUAGGCUGUCAGGGAGUGUUUAUUUCGCGUCCGCUUCUGUUUCUCCGCGCCCCUGUGCUGCCCCGACUCACAUACUCGUCCAGAACCGGCCUCAGCCUCUCCGCGCAGAAGUUUCCCGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[75.63302612 407.47262573]
[62.46751785 399.56283569]
[55.03480148 386.12219238]
[55.33423615 370.76623535]
[63.28527069 357.62557983]
[76.74912262 350.23504639]
[76.99455261 335.23703003]
[77.23997498 320.23904419]
[77.48540497 305.24105835]
[75.61816406 303.12979126]
[74.48165894 300.14581299]
[74.41472626 296.56622314]
[75.64874268 292.78637695]
[78.26958466 289.27874756]
[79.49539948 274.32891846]
[80.72121429 259.37908936]
[81.94702911 244.42924500]
[83.17284393 229.47943115]
[84.39865875 214.52960205]
[85.50212860 199.57023621]
[86.48317719 184.60235596]
[87.46422577 169.63447571]
[80.57588959 156.42840576]
[89.19920349 143.16381836]
[90.18025208 128.19593811]
[77.70820618 119.86238861]
[64.25511169 126.49671936]
[50.80202103 133.13104248]
[37.34893036 139.76538086]
[23.89583969 146.39970398]
[10.44274902 153.03404236]
[3.94506907 167.70236206]
[-11.61021233 171.62826538]
[-24.29041481 161.80015564]
[-24.36837196 145.75727844]
[-11.78428173 135.80639648]
[3.80841851 139.58094788]
[17.26150894 132.94660950]
[30.71460152 126.31228638]
[44.16769028 119.67795563]
[57.62078476 113.04362488]
[71.07387543 106.40929413]
[79.85941315 84.33782959]
[99.34041595 78.61054230]
[104.16200256 64.40658569]
[108.98359680 50.20263672]
[99.95893097 33.55945969]
[105.84828186 15.90220165]
[122.47702026 8.27493858]
[126.83129120 -6.07916689]
[131.18556213 -20.43327141]
[135.53982544 -34.78737640]
[139.89410400 -49.14148331]
[136.49594116 -64.59344482]
[147.59461975 -74.52666473]
[151.94888306 -88.88076782]
[156.30314636 -103.23487091]
[160.65742493 -117.58898163]
[165.01168823 -131.94308472]
[169.36596680 -146.29719543]
[168.16999817 -151.41122437]
[168.98417664 -156.00857544]
[171.27166748 -159.40730286]
[174.30213928 -161.23918152]
[174.24832153 -170.38993835]
[179.55543518 -175.55093384]
[184.83917236 -189.58952332]
[190.12292480 -203.62811279]
[195.40667725 -217.66670227]
[193.36790466 -225.48091125]
[195.54458618 -232.40431213]
[200.46903992 -236.55972290]
[202.91247559 -251.35935974]
[205.35591125 -266.15902710]
[199.96994019 -281.03524780]
[209.67710876 -292.33215332]
[212.12054443 -307.13180542]
[214.44281006 -321.95092773]
[216.64376831 -336.78857422]
[218.84472656 -351.62622070]
[221.04568481 -366.46386719]
[223.24664307 -381.30151367]
[221.40864563 -390.26596069]
[225.60691833 -396.36315918]
[228.05035400 -411.16281128]
[230.49377441 -425.96246338]
[232.93721008 -440.76208496]
[220.62109375 -447.93154907]
[211.51309204 -458.85311890]
[206.69274902 -472.20050049]
[206.72050476 -486.36172485]
[211.57261658 -499.63394165]
[220.64645386 -510.42825317]
[232.83528137 -517.45977783]
[246.66322327 -519.90063477]
[249.34848022 -534.65832520]
[252.03373718 -549.41601562]
[241.21873474 -560.54321289]
[239.04296875 -575.90704346]
[246.34306335 -589.59967041]
[260.31198120 -596.35601807]
[275.57839966 -593.57824707]
[286.27203369 -582.33435059]
[288.28100586 -566.94787598]
[280.83282471 -553.33520508]
[266.79141235 -546.73077393]
[264.10617065 -531.97308350]
[261.42092896 -517.21539307]
[274.86462402 -508.83929443]
[284.08978271 -495.91607666]
[287.66125488 -480.40533447]
[285.00387573 -464.67306519]
[276.49502563 -451.13067627]
[263.41125488 -441.86541748]
[247.73686218 -438.31866455]
[245.29342651 -423.51901245]
[242.84999084 -408.71936035]
[240.40657043 -393.91970825]
[238.08428955 -379.10058594]
[235.88333130 -364.26290894]
[233.68237305 -349.42526245]
[231.48141479 -334.58761597]
[229.28047180 -319.74996948]
[231.41232300 -312.66079712]
[226.92019653 -304.68835449]
[224.47676086 -289.88870239]
[230.03750610 -276.07107544]
[220.15556335 -263.71557617]
[217.71212769 -248.91593933]
[215.26869202 -234.11628723]
[225.37954712 -245.19647217]
[238.88246155 -251.72882080]
[253.84565735 -252.77882385]
[268.12850952 -248.19622803]
[279.68768311 -238.63667297]
[286.86953735 -225.46771240]
[288.64657593 -210.57334900]
[284.76461792 -196.08438110]
[275.77902222 -184.07360840]
[262.97521973 -176.25930786]
[248.18501282 -173.75941467]
[233.52426147 -176.93154907]
[221.09037781 -185.32191467]
[212.66213989 -197.73016357]
[209.44526672 -212.38294983]
[204.16151428 -198.34436035]
[198.87776184 -184.30577087]
[193.59400940 -170.26718140]
[188.42529297 -156.18583679]
[183.72006226 -141.94291687]
[179.36579895 -127.58881378]
[175.01152039 -113.23471069]
[170.65725708 -98.88059998]
[166.30299377 -84.52649689]
[161.94871521 -70.17239380]
[165.65832520 -55.74713516]
[154.24819946 -44.78721237]
[149.89393616 -30.43310738]
[145.53967285 -16.07900238]
[141.18539429 -1.72489679]
[136.83113098 12.62920856]
[144.27259827 21.30212212]
[146.62045288 32.60870743]
[143.17646790 43.75659561]
[134.68760681 51.93520737]
[123.18754578 55.02422714]
[118.36595917 69.22817993]
[113.54436493 83.43212891]
[123.95415497 96.99172211]
[121.63463593 115.96076202]
[105.14813232 129.17698669]
[104.16708374 144.14486694]
[110.98524475 158.42153931]
[102.43210602 170.61552429]
[101.45105743 185.58340454]
[100.47001648 200.55128479]
[103.03444672 209.33552551]
[99.34848785 215.75541687]
[98.12267303 230.70524597]
[96.89685822 245.65507507]
[95.67104340 260.60488892]
[94.44522858 275.55471802]
[93.21940613 290.50454712]
[92.48339081 305.48648071]
[92.23796844 320.48446655]
[91.99254608 335.48248291]
[91.74711609 350.48046875]
[104.96195221 358.30758667]
[112.47878265 371.70135498]
[112.27561951 387.05889893]
[104.40711212 400.24911499]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[9 184]
[14 183]
[15 182]
[16 181]
[17 180]
[18 179]
[19 178]
[20 176]
[21 175]
[22 174]
[24 172]
[25 171]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[44 168]
[45 167]
[46 166]
[49 161]
[50 160]
[51 159]
[52 158]
[53 157]
[55 155]
[56 154]
[57 153]
[58 152]
[59 151]
[60 150]
[64 149]
[66 148]
[67 147]
[68 146]
[69 145]
[72 130]
[73 129]
[74 128]
[76 126]
[77 125]
[78 123]
[79 122]
[80 121]
[81 120]
[82 119]
[84 118]
[85 117]
[86 116]
[87 115]
[95 108]
[96 107]
[97 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
