%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACCGACCGCCGGGAAUGGCCCCCGCCGGCCGCCGUCGGGGGCUUCCCAGUGCCAAGCCUGGACGCCGGGGCCCGCGAGGGGGCGGGCUGAGGGUGGGGGUCUGUGGGCAGGACCGAGAGUUGGGGUGGCUUCCGUCCUCAGGAGUUCGGAACUAUAUAAAGUUCAGAAAAC\
) } def
/len { sequence length } bind def

/coor [
[99.82211304 158.10031128]
[97.93136597 143.21995544]
[96.04061890 128.33959961]
[94.14987183 113.45924377]
[86.76762390 126.51689911]
[72.14803314 129.87361145]
[59.80924988 121.34398651]
[57.78450394 106.48126984]
[67.39200592 94.96189880]
[82.37634277 94.28546143]
[69.96100616 85.86765289]
[57.54566956 77.44984436]
[41.78134537 76.10944366]
[35.58919525 62.56298828]
[24.53331947 67.04472351]
[12.80858040 65.63121033]
[3.32940483 58.79083252]
[-1.60467076 48.32626343]
[-0.86637437 36.90072250]
[-12.96971226 28.04018021]
[-25.07305145 19.17963791]
[-37.17638779 10.31909657]
[-49.27972794 1.45855474]
[-61.38306427 -7.40198708]
[-73.48640442 -16.26252937]
[-85.58974457 -25.12307167]
[-97.69307709 -33.98361206]
[-109.79641724 -42.84415436]
[-122.21175385 -51.26195908]
[-138.01419067 -52.03235626]
[-144.69136047 -65.34643555]
[-157.40251160 -73.31052399]
[-170.11364746 -81.27462006]
[-182.82479858 -89.23871613]
[-195.53594971 -97.20281219]
[-215.67054749 -96.98607635]
[-224.04586792 -114.39197540]
[-237.03625488 -121.89197540]
[-250.02662659 -129.39196777]
[-265.84658813 -129.59136963]
[-273.00006104 -142.65570068]
[-285.99044800 -150.15570068]
[-298.98083496 -157.65570068]
[-311.97122192 -165.15570068]
[-318.62750244 -165.54055786]
[-323.36062622 -168.76423645]
[-325.28817749 -173.16824341]
[-337.99932861 -181.13233948]
[-350.71044922 -189.09643555]
[-366.51290894 -189.86682129]
[-373.19006348 -203.18090820]
[-385.90121460 -211.14500427]
[-398.61236572 -219.10910034]
[-411.39486694 -226.95811462]
[-424.24774170 -234.69142151]
[-437.10058594 -242.42472839]
[-453.49792480 -242.17964172]
[-461.67538452 -256.39443970]
[-453.22076416 -270.44616699]
[-436.83139038 -269.87960815]
[-429.36727905 -255.27758789]
[-416.51443481 -247.54428101]
[-403.66156006 -239.81097412]
[-396.28353882 -239.05416870]
[-390.64825439 -231.82023621]
[-377.93713379 -223.85614014]
[-365.22598267 -215.89204407]
[-350.33273315 -215.69129944]
[-342.74636841 -201.80757141]
[-330.03521729 -193.84347534]
[-317.32406616 -185.87937927]
[-304.47122192 -178.14607239]
[-291.48083496 -170.64607239]
[-278.49044800 -163.14607239]
[-265.50006104 -155.64607239]
[-250.60928345 -155.98313904]
[-242.52662659 -142.38235474]
[-229.53625488 -134.88235474]
[-216.54586792 -127.38235474]
[-206.91200256 -130.91314697]
[-196.71559143 -128.48945618]
[-189.39987183 -120.68040466]
[-187.57185364 -109.91395569]
[-174.86070251 -101.94985962]
[-162.14956665 -93.98576355]
[-149.43841553 -86.02167511]
[-136.72726440 -78.05757904]
[-121.83401489 -77.85682678]
[-114.24765778 -63.97310638]
[-111.45969391 -64.49352264]
[-108.29444885 -63.92147446]
[-105.17423248 -62.10641098]
[-102.56832886 -59.05591965]
[-100.93587494 -54.94749451]
[-88.83253479 -46.08695221]
[-76.72920227 -37.22640991]
[-64.62586212 -28.36586761]
[-52.52252197 -19.50532532]
[-40.41918564 -10.64478397]
[-28.31584740 -1.78424156]
[-16.21250916 7.07630014]
[-4.10917091 15.93684196]
[7.99416780 24.79738426]
[25.85447121 20.89751244]
[41.17584991 31.44264793]
[44.00700378 50.14765167]
[58.88329697 50.88595581]
[65.96347809 65.03451538]
[78.37881470 73.45231628]
[90.79414368 81.87012482]
[131.20928955 75.03684235]
[146.14820862 76.38914490]
[158.21817017 66.54264069]
[173.34909058 68.12686920]
[182.66184998 79.69441986]
[197.60076904 81.04671478]
[212.53968811 82.39900970]
[227.47860718 83.75130463]
[242.41752625 85.10359955]
[255.62574768 73.65879059]
[272.69046021 75.25870514]
[283.12203979 88.43049622]
[298.08294678 89.51286316]
[313.04385376 90.59523010]
[328.00473022 91.67759705]
[342.96563721 92.75996399]
[357.92654419 93.84233093]
[372.89660645 94.78958893]
[387.87460327 95.60167694]
[402.85260010 96.41375732]
[418.99584961 91.23380280]
[428.44226074 105.31221008]
[417.52908325 118.28674316]
[402.04052734 111.39176178]
[387.06253052 110.57967377]
[372.08450317 109.76759338]
[365.21145630 112.55488586]
[356.84417725 108.80323029]
[341.88327026 107.72086334]
[326.92236328 106.63849640]
[311.96148682 105.55612946]
[297.00057983 104.47376251]
[282.03967285 103.39139557]
[273.55328369 113.11395264]
[260.82406616 116.20915222]
[248.45848083 111.32580566]
[241.06523132 100.04251862]
[226.12631226 98.69022369]
[211.18739319 97.33792877]
[196.24847412 95.98563385]
[181.30955505 94.63333893]
[170.07096863 104.34054565]
[154.90151978 103.18193817]
[144.79591370 91.32806396]
[129.85699463 89.97576141]
[124.65029907 95.37394714]
[139.58389282 96.78385925]
[147.79266357 109.33837891]
[143.09539795 123.58393097]
[129.02914429 128.79357910]
[116.18582153 121.04444885]
[114.23692322 106.17031097]
[109.03022766 111.56849670]
[110.92097473 126.44885254]
[112.81172180 141.32920837]
[114.70246887 156.20957947]
[128.36985779 163.55682373]
[135.07806396 177.54895020]
[132.24763489 192.80569458]
[120.96694183 203.46052551]
[105.57363129 205.41645813]
[91.98674774 197.92137146]
[85.43072510 183.85729980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[10 110]
[11 109]
[12 108]
[14 106]
[19 103]
[20 102]
[21 101]
[22 100]
[23 99]
[24 98]
[25 97]
[26 96]
[27 95]
[28 94]
[29 89]
[31 87]
[32 86]
[33 85]
[34 84]
[35 83]
[37 79]
[38 78]
[39 77]
[41 75]
[42 74]
[43 73]
[44 72]
[47 71]
[48 70]
[49 69]
[51 67]
[52 66]
[53 65]
[54 63]
[55 62]
[56 61]
[111 155]
[112 154]
[115 151]
[116 150]
[117 149]
[118 148]
[119 147]
[122 143]
[123 142]
[124 141]
[125 140]
[126 139]
[127 138]
[128 136]
[129 135]
[130 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
