%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCUCCCCAACCCCGGUCCCGCCUCUCCACCCCUCACCAACAUGGCCGCCUCAGCAACAGCCCCCCUCCUGUGCGUCACGGACGCGGCGACUCCUGACGUCAUAGGAAGGCGCCGGUUUCGGCGGGGGCUGCACGUGCGCAGGGGUGUGGAAACUUACCGGCUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[55.61395264 711.79254150]
[41.18734741 716.23956299]
[26.09591103 716.62823486]
[11.45952225 712.92974854]
[-1.63570154 705.41857910]
[-12.21800613 694.65209961]
[-19.50211525 681.42919922]
[-22.94749832 666.73120117]
[-22.29848671 651.64874268]
[-17.60324097 637.30096436]
[-9.21017933 624.75274658]
[2.25787830 614.93505859]
[15.94992447 608.57659912]
[30.84992027 606.14910889]
[32.50970840 591.24121094]
[34.16949844 576.33331299]
[35.82928848 561.42541504]
[37.48907852 546.51751709]
[25.36829376 539.72631836]
[16.72983932 528.78930664]
[12.90736103 515.34161377]
[14.51132965 501.40985107]
[21.33182144 489.10678101]
[32.36531448 480.31085205]
[45.96222687 476.37945557]
[47.89721680 461.50476074]
[49.83220673 446.63009644]
[43.80136108 433.01107788]
[53.25422287 420.32431030]
[55.18921280 405.44964600]
[57.12420273 390.57495117]
[59.05918884 375.70028687]
[60.99417877 360.82562256]
[62.92916489 345.95095825]
[64.86415100 331.07629395]
[55.40546036 325.03833008]
[48.86845779 315.85421753]
[46.23704910 304.83972168]
[47.93214035 293.59078979]
[53.74486923 283.75225830]
[62.86146545 276.77725220]
[73.97701263 273.71270752]
[76.73325348 258.96810913]
[79.48949432 244.22352600]
[82.24574280 229.47892761]
[84.86562347 214.70948792]
[87.34893799 199.91648865]
[81.82545471 186.08389282]
[91.74065399 173.75509644]
[94.22396088 158.96208191]
[96.70727539 144.16908264]
[99.19058228 129.37606812]
[101.67388916 114.58305359]
[82.79980469 122.08624268]
[59.05718613 105.48547363]
[46.60442352 97.12313080]
[30.21518326 96.55323029]
[22.75405121 81.94968414]
[31.89640427 68.33537292]
[48.23736954 69.71553040]
[54.96676636 84.67037201]
[67.41952515 93.03271484]
[74.22332764 89.87703705]
[87.83093262 83.56569672]
[94.63473511 80.41001892]
[96.29452515 65.50213623]
[90.13176727 50.93055344]
[99.22985840 39.13759232]
[100.88964844 24.22970390]
[102.54943848 9.32181740]
[104.20922852 -5.58607006]
[105.86901855 -20.49395752]
[107.52880859 -35.40184402]
[109.18859863 -50.30973053]
[110.71057129 -65.23231506]
[112.09459686 -80.16832733]
[113.47862244 -95.10433960]
[114.86264801 -110.04035950]
[116.24667358 -124.97637177]
[113.91621399 -133.85005188]
[117.79677582 -140.17471313]
[119.45656586 -155.08261108]
[121.11635590 -169.99049377]
[118.95026398 -178.90573120]
[122.94703674 -185.15760803]
[113.10930634 -197.52670288]
[114.98223877 -213.21961975]
[127.45465088 -222.92602539]
[143.12689209 -220.88728333]
[152.70089722 -208.31294250]
[150.49656677 -192.66314697]
[137.82170105 -183.22262573]
[136.02424622 -168.33070374]
[134.36445618 -153.42282104]
[132.70466614 -138.51492310]
[131.18269348 -123.59234619]
[129.79866028 -108.65633392]
[128.41464233 -93.72032166]
[127.03060913 -78.78430176]
[125.64658356 -63.84829330]
[128.17041016 -56.87043381]
[124.09648895 -48.64994049]
[122.43669891 -33.74205399]
[120.77690887 -18.83416748]
[119.11711884 -3.92627978]
[117.45732880 10.98160744]
[115.79753876 25.88949394]
[114.13774872 40.79738235]
[120.41922760 54.30265045]
[111.20241547 67.16192627]
[109.54262543 82.06980896]
[121.25774384 91.43762970]
[135.43550110 86.53955078]
[149.61325073 81.64147186]
[163.79101562 76.74338531]
[177.96876526 71.84530640]
[188.30029297 59.10985565]
[204.45050049 61.95634842]
[209.80546570 77.45655823]
[198.85644531 89.66519928]
[182.86685181 86.02306366]
[168.68908691 90.92114258]
[154.51133728 95.81922913]
[140.33357239 100.71730804]
[126.15582275 105.61538696]
[116.46690369 117.06636047]
[113.98358917 131.85937500]
[111.50028229 146.65238953]
[109.01697540 161.44538879]
[106.53366852 176.23840332]
[111.87952423 191.12908936]
[102.14194489 202.39979553]
[99.65863800 217.19281006]
[101.32739258 226.21437073]
[96.99033356 232.23516846]
[94.23409271 246.97976685]
[91.47785187 261.72436523]
[88.72161102 276.46896362]
[102.44559479 289.75015259]
[105.41555786 308.46472168]
[96.61749268 325.07827759]
[79.73882294 333.01126099]
[77.80383301 347.88592529]
[75.86885071 362.76062012]
[73.93386078 377.63528442]
[71.99887085 392.50994873]
[70.06388092 407.38461304]
[68.12889862 422.25927734]
[74.02133942 436.94226074]
[64.70687866 448.56509399]
[62.77188873 463.43975830]
[60.83689880 478.31442261]
[74.52132416 487.08197021]
[82.99016571 500.88513184]
[84.59543610 516.94104004]
[79.06693268 532.03851318]
[67.55618286 543.18011475]
[52.39696884 548.17730713]
[50.73717880 563.08520508]
[49.07738876 577.99310303]
[47.41759491 592.90100098]
[45.75780487 607.80889893]
[59.75901031 613.45410156]
[71.71723938 622.66845703]
[80.74510956 634.76800537]
[86.17269897 648.85504150]
[87.59723663 663.88409424]
[84.91301727 678.73999023]
[78.31922150 692.32031250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 162]
[15 161]
[16 160]
[17 159]
[18 158]
[25 152]
[26 151]
[27 150]
[29 148]
[30 147]
[31 146]
[32 145]
[33 144]
[34 143]
[35 142]
[42 138]
[43 137]
[44 136]
[45 135]
[46 133]
[47 132]
[49 130]
[50 129]
[51 128]
[52 127]
[53 126]
[55 62]
[56 61]
[65 111]
[66 110]
[68 108]
[69 107]
[70 106]
[71 105]
[72 104]
[73 103]
[74 102]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[81 95]
[82 94]
[83 93]
[85 92]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
