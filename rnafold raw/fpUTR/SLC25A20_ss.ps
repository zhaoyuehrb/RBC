%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGAAGCGGGGCCGAGGCCGGAAGCAGCCCCGGGCGGAAGCCCUACCGUGCCAACUGGGCCCUCCUCCCGACCUGCCCCGGGCUCGUGCCCCGCCCACCCAAAAGUGGGUGAAAGGUCGGCGGCGCCGGCACUGCAGCUGGGGCUGAGAAGCCAGGACGGCCCGAGAACUGACAGACGGAGUGACAGACGGACUGACC\
) } def
/len { sequence length } bind def

/coor [
[2.39029312 102.34426880]
[-8.86316013 106.27770233]
[-20.75254059 106.50650787]
[-32.09260178 103.02626038]
[-41.75859070 96.20139313]
[-48.79779816 86.72708130]
[-52.52346420 75.55850983]
[-67.51606750 75.08734894]
[-82.50865936 74.61618805]
[-97.50125885 74.14502716]
[-112.49385834 73.67386627]
[-127.48645782 73.20270538]
[-142.47904968 72.73154449]
[-157.47489929 72.37815094]
[-172.47303772 72.14253998]
[-187.47119141 71.90692902]
[-202.46934509 71.67131805]
[-216.38934326 79.19090271]
[-228.99351501 71.25464630]
[-243.99166870 71.01903534]
[-258.98980713 70.78342438]
[-273.98797607 70.54781342]
[-283.78182983 78.94982147]
[-296.27450562 78.43969727]
[-304.78601074 69.83641815]
[-319.77862549 69.36525726]
[-334.77120972 68.89409637]
[-349.76382446 68.42293549]
[-358.45993042 78.71549225]
[-371.30935669 82.06858826]
[-383.56134033 77.47418213]
[-390.81848145 66.82068634]
[-405.80181885 66.11408997]
[-420.78518677 65.40748596]
[-435.76852417 64.70088959]
[-449.91784668 71.77952576]
[-462.26651001 63.45127869]
[-477.24987793 62.74468231]
[-492.23321533 62.03808594]
[-508.39050293 70.86258698]
[-522.77972412 60.82350159]
[-537.77233887 60.35234070]
[-552.76495361 59.88117981]
[-567.75750732 59.41001892]
[-574.34759521 73.13921356]
[-585.95629883 82.99607849]
[-600.57238770 87.27285767]
[-615.66345215 85.22857666]
[-628.61492920 77.21740723]
[-637.18292236 64.62734222]
[-639.88293457 49.63968277]
[-636.24719238 34.85113525]
[-626.90557861 22.82390404]
[-613.47662354 15.64177608]
[-598.28692627 14.54910088]
[-583.96826172 19.73519135]
[-573.00140381 30.30152512]
[-567.28637695 44.41741943]
[-552.29376221 44.88858032]
[-537.30120850 45.35974503]
[-522.30859375 45.83090591]
[-513.27368164 37.77904892]
[-500.77362061 38.05435181]
[-491.52661133 47.05473709]
[-476.54327393 47.76133347]
[-461.55993652 48.46792984]
[-448.48229980 41.33875656]
[-435.06192017 49.71754456]
[-420.07858276 50.42414093]
[-405.09524536 51.13073730]
[-390.11187744 51.83733368]
[-378.17263794 39.99851608]
[-361.02746582 40.46252441]
[-349.29266357 53.43033600]
[-334.30004883 53.90149689]
[-319.30746460 54.37265778]
[-304.31484985 54.84381866]
[-289.32363892 45.72805786]
[-273.75234985 55.54966736]
[-258.75421143 55.78527451]
[-243.75605774 56.02088547]
[-228.75790405 56.25649643]
[-215.91067505 48.72006226]
[-202.23373413 56.67316818]
[-187.23558044 56.90877914]
[-172.23742676 57.14439011]
[-157.23928833 57.38000107]
[-150.49584961 54.33899307]
[-142.00788879 57.73894501]
[-127.01529694 58.21010971]
[-112.02269745 58.68127060]
[-97.03009796 59.15243149]
[-82.03749847 59.62359238]
[-67.04489899 60.09475327]
[-52.05230331 60.56591415]
[-39.78774261 40.69459915]
[-18.10368919 32.02912140]
[-15.99017048 17.17876816]
[-13.87665176 2.32841301]
[-11.76313305 -12.52194214]
[-9.64961529 -27.37229729]
[-7.53609657 -42.22265244]
[-14.15148640 -57.22827148]
[-4.24692965 -70.29853821]
[11.98861408 -67.98787689]
[17.85341072 -52.67330170]
[7.31425858 -40.10913467]
[5.20073986 -25.25877762]
[3.08722138 -10.40842342]
[0.97370297 4.44193172]
[-1.13981557 19.29228592]
[-3.25333405 34.14264297]
[7.13351917 39.63423157]
[15.34046936 48.12393570]
[20.52862167 58.79651642]
[22.15140915 70.61117554]
[36.73695755 74.11285400]
[51.32250595 77.61453247]
[65.90805817 81.11621094]
[80.49360657 84.61789703]
[95.07915497 88.11957550]
[109.96087646 86.23957825]
[123.21736145 79.22062683]
[136.47384644 72.20168304]
[149.73033142 65.18273163]
[158.30593872 51.88726044]
[173.17437744 52.76975250]
[186.43086243 45.75080490]
[199.68733215 38.73185730]
[212.94381714 31.71291161]
[226.20030212 24.69396400]
[230.60726929 9.51653767]
[244.49559021 1.97398269]
[259.62557983 6.54116201]
[267.02087402 20.50844955]
[262.29397583 35.58930206]
[248.24928284 42.83651352]
[233.21925354 37.95044708]
[219.96276855 44.96939468]
[206.70628357 51.98834229]
[193.44979858 59.00728989]
[180.19331360 66.02623749]
[172.56590271 78.81966400]
[156.74926758 78.43921661]
[143.49278259 85.45816803]
[130.23631287 92.47711182]
[116.97982025 99.49606323]
[117.97823334 106.92930603]
[132.84475708 104.93273163]
[134.84107971 119.79930115]
[119.97505188 121.79580688]
[120.97345734 129.22904968]
[135.61221313 132.50120544]
[150.25096130 135.77334595]
[164.51249695 128.42568970]
[179.08946228 135.12579346]
[182.79966736 150.73393250]
[172.79695129 163.27687073]
[156.75454712 163.13273621]
[146.97882080 150.41209412]
[132.34005737 147.13995361]
[117.70130920 143.86779785]
[109.96452332 156.71856689]
[119.70624542 168.12464905]
[129.44796753 179.53074646]
[138.87869263 179.01222229]
[147.36271667 182.83938599]
[153.04481506 190.03636169]
[154.74691772 198.90652466]
[152.21076965 207.43162537]
[161.40437317 219.28395081]
[170.59797668 231.13627625]
[185.16987610 237.29830933]
[186.85684204 252.09707642]
[196.05044556 263.94940186]
[211.68240356 264.36886597]
[223.35321045 274.77682495]
[225.55227661 290.25903320]
[217.24125671 303.50518799]
[202.34437561 308.26092529]
[187.89547729 302.28067017]
[180.71688843 288.38815308]
[184.19812012 273.14300537]
[175.00451660 261.29067993]
[161.09020996 255.97640991]
[158.74565125 240.32987976]
[149.55204773 228.47755432]
[140.35844421 216.62522888]
[120.64271545 210.53752136]
[118.04187775 189.27246094]
[108.30015564 177.86637878]
[98.55843353 166.46028137]
[77.48309326 130.18853760]
[91.57747650 102.70512390]
[76.99192047 99.20344543]
[62.40637589 95.70175934]
[47.82082748 92.20008087]
[33.23527908 88.69840240]
[18.64972878 85.19672394]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 95]
[8 94]
[9 93]
[10 92]
[11 91]
[12 90]
[13 89]
[14 87]
[15 86]
[16 85]
[17 84]
[19 82]
[20 81]
[21 80]
[22 79]
[25 77]
[26 76]
[27 75]
[28 74]
[32 71]
[33 70]
[34 69]
[35 68]
[37 66]
[38 65]
[39 64]
[41 61]
[42 60]
[43 59]
[44 58]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
[102 107]
[116 199]
[117 198]
[118 197]
[119 196]
[120 195]
[121 194]
[122 147]
[123 146]
[124 145]
[125 144]
[127 142]
[128 141]
[129 140]
[130 139]
[131 138]
[152 162]
[153 161]
[154 160]
[163 192]
[164 191]
[165 190]
[170 188]
[171 187]
[172 186]
[174 184]
[175 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
