%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAUUGUAAACAGGCAGAGGCUGGGCGGGGUGGGAAUGGGGCGCCCGAGGCCGGCCUGGGGCGCAGCGCAGGAGGCGGCUCCGGUGGCUGCGGCGGCAGCGUGAGCGCGAGGAGGCGGAGGCUGCGGCGGGGCGGACGGUCGCGCGGCGGCAGGCACAGGUGUAAUGGAUAGGUAACAGAGAAGACCUCGUCCCUUCCUAGUCAGGGCAUCAGC\
) } def
/len { sequence length } bind def

/coor [
[0.12969740 439.72436523]
[-2.11448240 443.12133789]
[-5.10779667 444.97805786]
[-2.33022761 460.55355835]
[-13.81721210 470.03503418]
[-18.74197006 484.20355225]
[-23.66672707 498.37207031]
[-28.59148598 512.54058838]
[-21.47997093 526.65447998]
[-26.51066971 541.63671875]
[-40.69895935 548.59863281]
[-55.62717819 543.40979004]
[-62.43867874 529.14868164]
[-57.09231567 514.27618408]
[-42.75999832 507.61581421]
[-37.83523941 493.44729614]
[-32.91048431 479.27877808]
[-27.98572540 465.11029053]
[-31.11554527 450.54821777]
[-19.27630997 440.05331421]
[-14.66180801 425.78073120]
[-10.35976028 411.41088867]
[-6.05771160 397.04104614]
[-1.75566304 382.67120361]
[2.54638553 368.30136108]
[6.74382067 353.90063477]
[10.83642101 339.46972656]
[4.74843121 321.11468506]
[19.43128967 307.29895020]
[23.10243988 292.75512695]
[18.71536255 278.52127075]
[29.59485626 267.03442383]
[33.26600647 252.49061584]
[36.93715668 237.94679260]
[40.60830688 223.40298462]
[44.27945709 208.85916138]
[47.95060730 194.31533813]
[46.54037476 187.06336975]
[51.78235626 179.58747864]
[55.66464233 165.09858704]
[59.54692841 150.60969543]
[50.32920456 138.77612305]
[35.33079147 138.99427795]
[20.33237839 139.21243286]
[5.33396530 139.43058777]
[-9.66444778 139.64875793]
[-24.66286087 139.86691284]
[-38.34904480 147.80409241]
[-51.18750000 140.25271606]
[-66.18591309 140.47088623]
[-81.18432617 140.68904114]
[-94.98065186 149.55433655]
[-109.43040466 141.79954529]
[-109.66890717 125.40212250]
[-95.45082092 117.23034668]
[-81.40248871 125.69062805]
[-66.40407562 125.47246552]
[-51.40565872 125.25431061]
[-38.79226303 117.33272552]
[-24.88101959 124.86849213]
[-9.88260651 124.65033722]
[5.11580706 124.43218231]
[20.11421967 124.21401978]
[35.11263275 123.99586487]
[50.11104584 123.77770233]
[52.57342529 116.69344330]
[57.49818420 102.52493286]
[59.96056366 95.44067383]
[48.33088303 85.96700287]
[36.70120239 76.49332428]
[21.11504936 73.77626038]
[16.13415337 59.73916626]
[4.50447273 50.26549149]
[-7.12520790 40.79181671]
[-18.75488853 31.31814194]
[-35.02198792 29.24124146]
[-41.10645294 14.01260662]
[-30.74910545 1.29814982]
[-14.60469913 4.17741489]
[-9.28121376 19.68846130]
[2.34846711 29.16213608]
[13.97814846 38.63581085]
[25.60782814 48.10948563]
[40.36214828 50.14893341]
[46.17487717 64.86364746]
[57.80455780 74.33731842]
[69.43423462 83.81099701]
[81.46608734 74.85361481]
[75.72583771 60.99542618]
[69.98558044 47.13722992]
[64.24533081 33.27903748]
[58.50508118 19.42084503]
[45.17245483 9.87238407]
[47.04441452 -6.41957045]
[62.19525146 -12.69525242]
[75.03908539 -2.49877810]
[72.36327362 13.68059444]
[78.10352325 27.53878784]
[83.84377289 41.39698029]
[89.58403015 55.25517273]
[95.32427979 69.11336517]
[102.76011658 68.13442230]
[100.80222321 53.26274490]
[106.54218292 39.40443420]
[115.67389679 51.30485535]
[117.63179016 66.17652893]
[125.06762695 65.19757843]
[127.02552032 50.32590866]
[128.98341370 35.45423508]
[119.16474152 23.07000160]
[121.06183624 7.37998629]
[133.54917908 -2.30720329]
[149.21826172 -0.24432969]
[158.77288818 12.34474087]
[156.54446411 27.99113655]
[143.85508728 37.41212845]
[141.89718628 52.28380203]
[139.93930054 67.15547180]
[146.56651306 70.66687775]
[159.27565002 62.69956589]
[159.82095337 77.68967438]
[166.44818115 81.20108032]
[177.65356445 71.22914124]
[188.85893250 61.25720215]
[200.06431580 51.28526688]
[211.26968384 41.31332779]
[216.43502808 26.35907173]
[231.08634949 23.67799187]
[242.29173279 13.70605373]
[253.49710083 3.73411608]
[258.66244507 -11.22013855]
[273.31378174 -13.90121937]
[284.51913452 -23.87315750]
[295.72451782 -33.84509659]
[298.08901978 -49.71294403]
[312.04095459 -57.63275528]
[326.87756348 -51.52912903]
[331.21749878 -36.08423996]
[321.73150635 -23.14609146]
[305.69647217 -22.63971901]
[294.49108887 -12.66778088]
[283.28570557 -2.69584298]
[278.92184448 11.54515171]
[263.46905518 14.93949223]
[252.26367188 24.91143036]
[241.05828857 34.88336945]
[236.69442749 49.12436295]
[221.24162292 52.51870346]
[210.03625488 62.49064255]
[198.83087158 72.46257782]
[187.62550354 82.43451691]
[176.42012024 92.40645599]
[177.77615356 99.78284454]
[192.52899170 97.07101440]
[195.24057007 111.82389069]
[180.48823547 114.53562927]
[181.84428406 121.91202545]
[195.86355591 127.24678802]
[209.92126465 132.47946167]
[224.01666260 137.60975647]
[238.11204529 142.74005127]
[252.20744324 147.87036133]
[267.82165527 145.31961060]
[277.13507080 156.94328308]
[293.99087524 148.28837585]
[311.51818848 154.59799194]
[318.73782349 171.42332458]
[332.97647095 176.14149475]
[344.91116333 166.36566162]
[360.23907471 164.61677551]
[374.06912231 171.45292664]
[381.98822021 184.69268799]
[381.46939087 200.11132812]
[372.67819214 212.78880310]
[358.41986084 218.67977905]
[343.24417114 215.90446472]
[331.99365234 205.34844971]
[328.25830078 190.38012695]
[314.01965332 185.66195679]
[305.18011475 192.86810303]
[293.84255981 194.93537903]
[282.80123901 191.23675537]
[274.83425903 182.58093262]
[272.00479126 171.03866577]
[257.39874268 173.95637512]
[247.07713318 161.96574402]
[232.98175049 156.83544922]
[218.88635254 151.70513916]
[204.79096985 146.57484436]
[197.43321228 147.24072266]
[190.52879333 141.26606750]
[176.50952148 135.93130493]
[74.03581238 154.49198914]
[70.15352631 168.98086548]
[66.27124023 183.46975708]
[62.49442291 197.98649597]
[58.82327652 212.53031921]
[55.15212631 227.07412720]
[51.48097610 241.61795044]
[47.80982590 256.16177368]
[44.13867569 270.70559692]
[48.26316833 285.97970581]
[37.64625931 296.42626953]
[33.97510910 310.97009277]
[40.07814407 319.96777344]
[40.22098160 330.61953735]
[34.59778214 339.40765381]
[25.26731110 343.56231689]
[21.17471123 357.99322510]
[21.84408569 367.09924316]
[16.91622734 372.60342407]
[12.61417961 386.97326660]
[8.31213093 401.34310913]
[4.01008272 415.71295166]
[-0.29196581 430.08279419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 20]
[5 18]
[6 17]
[7 16]
[8 15]
[21 215]
[22 214]
[23 213]
[24 212]
[25 211]
[26 209]
[27 208]
[29 204]
[30 203]
[32 201]
[33 200]
[34 199]
[35 198]
[36 197]
[37 196]
[39 195]
[40 194]
[41 193]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[49 58]
[50 57]
[51 56]
[68 87]
[69 86]
[70 85]
[72 83]
[73 82]
[74 81]
[75 80]
[88 101]
[89 100]
[90 99]
[91 98]
[92 97]
[107 118]
[108 117]
[109 116]
[122 152]
[123 151]
[124 150]
[125 149]
[126 148]
[128 146]
[129 145]
[130 144]
[132 142]
[133 141]
[134 140]
[157 192]
[158 191]
[159 189]
[160 188]
[161 187]
[162 186]
[164 184]
[167 179]
[168 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
