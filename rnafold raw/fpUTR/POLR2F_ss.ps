%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGAUUUCCUCUGGGUUACGGCGCAGGCGCAAGAUAAGCUAGGAGCCGCGCGAGUCGUAGUGUCGCUGUUUGCGGGUCUCCGCGCGGGACCGGGGCGCAGCGGGGUCGCUGAGGCGAGGGUGUCAUGUCAGACAACGAGGACAAUUUUGAUGGCGACGACUUUGAUGAUGUGGAGGAGGAUGAAGGGCUAGAUGACUUGGAGAAUGCCGAAGAGUUUUAGUAGUGACGGGGUUCACCGUGUUAGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[273.28057861 324.13854980]
[263.72299194 315.49246216]
[256.71652222 304.65924072]
[252.74281311 292.37072754]
[252.07833862 279.45935059]
[254.77519226 266.80151367]
[260.65704346 255.25823975]
[249.75598145 244.95449829]
[238.85491943 234.65075684]
[227.95385742 224.34703064]
[217.05281067 214.04328918]
[206.15174866 203.73954773]
[195.25068665 193.43582153]
[184.34963989 183.13208008]
[169.78538513 180.01249695]
[165.07115173 164.90995789]
[154.17010498 154.60623169]
[143.26904297 144.30249023]
[132.36799622 133.99876404]
[121.40266418 123.76344299]
[110.37350464 113.59695435]
[95.39229584 112.84629059]
[83.40209961 121.85934448]
[71.41190338 130.87240601]
[59.42171097 139.88546753]
[54.45910645 147.52265930]
[47.22457123 148.93518066]
[35.12250519 157.79745483]
[23.02044296 166.65974426]
[16.45774841 181.05563354]
[1.61798871 182.33265686]
[-5.43031025 199.35743713]
[-22.94997597 200.54666138]
[-34.94017029 209.55972290]
[-38.60628891 225.17826843]
[-53.16428375 231.91950989]
[-67.44651031 224.61213684]
[-70.49685669 208.86175537]
[-59.97537231 196.75068665]
[-43.95322800 197.56951904]
[-31.96303368 188.55647278]
[-29.96265030 176.64294434]
[-20.06978416 169.03372192]
[-7.24429417 170.23059082]
[-1.54722059 156.46859741]
[14.15816021 154.55767822]
[26.26022339 145.69538879]
[38.36228561 136.83311462]
[50.40865326 127.89526367]
[62.39884567 118.88220978]
[74.38904572 109.86914825]
[86.37923431 100.85609436]
[90.00402069 86.30065155]
[83.64112091 72.71707153]
[77.27822113 59.13349533]
[70.91532898 45.54991913]
[64.55242920 31.96634293]
[61.59940720 46.67279434]
[49.54704666 55.60255432]
[34.61801529 54.14517593]
[24.52019882 43.05310059]
[24.46712685 28.05319405]
[34.48619843 16.88994026]
[49.40652466 15.32748699]
[36.47917557 7.71935511]
[23.55182838 0.11122288]
[10.62448025 -7.49690914]
[-2.30286741 -15.10504150]
[-15.23021507 -22.71317291]
[-28.15756416 -30.32130432]
[-43.97529984 -30.65268898]
[-51.01953125 -43.77626038]
[-66.83726501 -44.10764313]
[-73.88150024 -57.23121262]
[-89.69923401 -57.56259537]
[-96.74346161 -70.68616486]
[-109.67081451 -78.29429626]
[-122.59815979 -85.90242767]
[-135.52551270 -93.51055908]
[-148.45285034 -101.11869049]
[-161.38020325 -108.72682190]
[-177.20875549 -106.11215210]
[-189.02494812 -116.96374512]
[-187.76440430 -132.95719910]
[-174.39411926 -141.82369995]
[-159.17060852 -136.76162720]
[-153.77207947 -121.65417480]
[-140.84472656 -114.04604340]
[-127.91737366 -106.43791199]
[-114.99002838 -98.82978058]
[-102.06268311 -91.22164154]
[-89.13533020 -83.61351013]
[-74.24224854 -83.82631683]
[-66.27336884 -70.15856171]
[-51.38027954 -70.37136078]
[-43.41139984 -56.70360565]
[-28.51831245 -56.91640854]
[-20.54943085 -43.24865341]
[-7.62208319 -35.64052200]
[5.30526447 -28.03238869]
[18.23261261 -20.42425728]
[31.15995979 -12.81612492]
[44.08730698 -5.20799303]
[57.01465607 2.40013885]
[59.24046326 5.29622746]
[61.27545929 8.31546497]
[63.70538330 -6.48640919]
[66.13530731 -21.28828239]
[68.56523132 -36.09015656]
[70.99515533 -50.89202881]
[73.42507935 -65.69390106]
[64.76486969 -73.79347992]
[61.11556625 -84.94966125]
[63.27052689 -96.36624908]
[70.58324432 -105.23976135]
[81.15530396 -109.44789124]
[83.95496368 -124.18431091]
[86.75461578 -138.92073059]
[89.55426788 -153.65713501]
[92.35391998 -168.39355469]
[87.32830048 -183.39533997]
[97.30509949 -194.45484924]
[100.10475159 -209.19126892]
[102.90440369 -223.92767334]
[105.70406342 -238.66409302]
[99.23958588 -255.91902161]
[111.23536682 -268.74298096]
[113.85036469 -283.51327515]
[116.46535492 -298.28359985]
[107.20512390 -311.09075928]
[109.79564667 -326.68130493]
[122.70001221 -335.80560303]
[138.26228333 -333.05038452]
[147.24964905 -320.05029297]
[144.33006287 -304.51800537]
[131.23565674 -295.66857910]
[128.62066650 -280.89828491]
[126.00566864 -266.12799072]
[132.67259216 -256.05398560]
[130.63287354 -243.74102783]
[120.44047546 -235.86444092]
[117.64082336 -221.12802124]
[114.84117126 -206.39161682]
[112.04151154 -191.65519714]
[117.26738739 -177.70745850]
[107.09033966 -165.59390259]
[104.29067993 -150.85748291]
[101.49102783 -136.12106323]
[98.69137573 -121.38465118]
[95.89172363 -106.64823914]
[107.08229828 -92.13726044]
[104.03394318 -73.74320984]
[88.22695923 -63.26398087]
[85.79703522 -48.46210480]
[83.36710358 -33.66023254]
[80.93717957 -18.85835838]
[78.50725555 -4.05648470]
[76.07733154 10.74538898]
[78.13600922 25.60344696]
[84.49890137 39.18702316]
[90.86180115 52.77059937]
[97.22470093 66.35417175]
[103.58759308 79.93775177]
[120.53999329 102.56778717]
[131.56915283 112.73428345]
[139.97662354 116.23693085]
[142.67172241 123.09770203]
[153.57278442 133.40144348]
[164.47383118 143.70516968]
[175.37489319 154.00891113]
[190.71887207 157.86547852]
[194.65336609 172.23103333]
[205.55442810 182.53475952]
[216.45549011 192.83850098]
[227.35653687 203.14222717]
[238.25759888 213.44596863]
[249.15866089 223.74971008]
[260.05972290 234.05343628]
[270.96075439 244.35717773]
[286.28540039 236.31687927]
[303.41329956 234.02127075]
[320.26593018 237.73182678]
[334.80407715 246.98214722]
[345.27450562 260.63659668]
[350.42144775 277.02966309]
[349.63717651 294.16900635]
[343.03369141 309.97784424]
[354.31387329 319.86508179]
[365.59402466 329.75231934]
[376.87420654 339.63955688]
[388.15438843 349.52682495]
[392.38241577 350.21582031]
[395.83468628 352.02081299]
[398.25765991 354.56552124]
[399.54431152 357.43011475]
[399.73565674 360.20223999]
[410.50692749 370.64160156]
[425.80142212 374.68991089]
[429.55581665 389.10357666]
[440.32705688 399.54296875]
[451.09829712 409.98233032]
[466.39279175 414.03063965]
[470.14718628 428.44430542]
[480.91842651 438.88366699]
[491.68966675 449.32302856]
[502.46090698 459.76239014]
[517.75543213 463.81069946]
[521.50982666 478.22436523]
[532.28106689 488.66375732]
[543.05230713 499.10311890]
[556.54034424 492.22192383]
[571.53228760 490.09561157]
[586.40185547 492.95480347]
[599.53607178 500.48941040]
[609.51031494 511.88208008]
[615.24267578 525.89703369]
[616.11120605 541.01403809]
[612.02185059 555.59338379]
[603.41815186 568.05346680]
[591.23327637 577.04284668]
[576.78906250 581.58630371]
[561.65228271 581.19110107]
[547.46484375 575.90008545]
[535.76568604 566.28710938]
[527.82385254 553.39501953]
[524.50085449 538.62219238]
[526.15710449 523.57110596]
[532.61291504 509.87435913]
[521.84167480 499.43499756]
[511.07046509 488.99560547]
[496.54638672 485.69400024]
[492.02154541 470.53363037]
[481.25030518 460.09426880]
[470.47906494 449.65490723]
[459.70782471 439.21554565]
[445.18374634 435.91390991]
[440.65893555 420.75357056]
[429.88769531 410.31420898]
[419.11645508 399.87481689]
[404.59237671 396.57321167]
[400.06753540 381.41284180]
[389.29629517 370.97348022]
[378.26715088 360.80700684]
[366.98696899 350.91973877]
[355.70678711 341.03250122]
[344.42660522 331.14526367]
[333.14645386 321.25799561]
[322.36181641 328.19070435]
[310.13931274 332.10565186]
[297.30688477 332.73034668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[16 170]
[17 169]
[18 168]
[19 167]
[20 165]
[21 164]
[22 52]
[23 51]
[24 50]
[25 49]
[27 48]
[28 47]
[29 46]
[31 44]
[33 41]
[34 40]
[53 163]
[54 162]
[55 161]
[56 160]
[57 159]
[64 104]
[65 103]
[66 102]
[67 101]
[68 100]
[69 99]
[70 98]
[72 96]
[74 94]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[106 158]
[107 157]
[108 156]
[109 155]
[110 154]
[111 153]
[116 150]
[117 149]
[118 148]
[119 147]
[120 146]
[122 144]
[123 143]
[124 142]
[125 141]
[127 138]
[128 137]
[129 136]
[187 247]
[188 246]
[189 245]
[190 244]
[191 243]
[196 242]
[197 241]
[199 239]
[200 238]
[201 237]
[203 235]
[204 234]
[205 233]
[206 232]
[208 230]
[209 229]
[210 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
