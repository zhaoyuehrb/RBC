%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUUCUUUGAAUUUCUCACCCUAAGAUCUGGCCUGUACAUUUUCAAGGAAUUCUUGAGAGGUUCUUGGAGAGAUUCUGGGAGCCAAACACUCCAUUGGGAUCCUAGCUGGAAUAUAAAGAAUGGCUUAUCAGUGGAGACCAUCGACAGUUGAGAAAAGAAGAAGCCCAAAAAGUACAAGAAUGAAAAUCGAGAGUUUUUAGAGAACAACUUGUA\
) } def
/len { sequence length } bind def

/coor [
[122.92253113 602.21984863]
[125.26773834 587.13800049]
[133.93153381 574.57214355]
[147.19374084 567.01721191]
[146.10888672 552.05651855]
[145.02403259 537.09576416]
[143.93917847 522.13507080]
[142.85430908 507.17434692]
[141.76945496 492.21362305]
[140.68460083 477.25289917]
[139.59974670 462.29217529]
[138.51489258 447.33145142]
[137.43003845 432.37075806]
[126.81159210 418.39639282]
[134.98478699 401.89315796]
[133.68345642 386.94970703]
[132.38212585 372.00625610]
[131.08081055 357.06280518]
[129.77947998 342.11938477]
[115.10590363 339.21017456]
[101.83322906 332.27709961]
[91.04106903 321.87445068]
[83.60997772 308.83914185]
[80.14961243 294.22332764]
[80.94873047 279.20953369]
[85.95111084 265.01501465]
[94.75939178 252.79293823]
[106.66667938 243.53881836]
[120.71321869 238.00938416]
[119.41189575 223.06593323]
[118.11056519 208.12249756]
[116.05793762 206.21960449]
[114.63364410 203.39079285]
[114.19345093 199.87069702]
[115.00193024 196.01805115]
[117.19214630 192.28056335]
[116.75788116 177.28684998]
[116.32362366 162.29313660]
[115.88935852 147.29943848]
[115.45510101 132.30572510]
[92.07572937 138.90740967]
[67.29989624 128.83869934]
[52.64164352 103.58670807]
[37.67346191 104.56324005]
[22.70528412 105.53977966]
[7.73710489 106.51631165]
[-7.23107386 107.49284363]
[-22.19925308 108.46937561]
[-37.16743088 109.44590759]
[-48.78716660 120.50761414]
[-64.66004944 118.17714691]
[-72.60977173 104.24224091]
[-66.53797150 89.39256287]
[-51.10242844 85.01951599]
[-38.14396286 94.47772980]
[-23.17578506 93.50119019]
[-8.20760632 92.52465820]
[6.76057243 91.54812622]
[21.72875214 90.57159424]
[36.69692993 89.59506226]
[51.66511154 88.61853027]
[55.42489624 74.09737396]
[42.81143570 65.97946167]
[30.19797134 57.86154556]
[17.58450699 49.74363327]
[4.97104311 41.62571716]
[-7.64242029 33.50780106]
[-20.25588417 25.38988876]
[-32.86934662 17.27197456]
[-45.48281097 9.15405941]
[-58.09627533 1.03614497]
[-74.01655579 3.01712990]
[-85.39031982 -8.29732800]
[-83.49259949 -24.22774506]
[-69.77915192 -32.55366898]
[-54.76976776 -26.88816261]
[-49.97835922 -11.57731819]
[-37.36489487 -3.45940423]
[-24.75143242 4.65851021]
[-12.13796902 12.77642441]
[0.47549415 20.89433861]
[13.08895779 29.01225281]
[25.70242119 37.13016891]
[38.31588364 45.24808121]
[50.92934799 53.36599731]
[63.54281235 61.48391342]
[70.45622253 58.57621002]
[60.65286636 47.22305298]
[68.42111206 34.39128494]
[83.02532959 37.81427383]
[84.28305054 52.76080704]
[91.19646454 49.85310745]
[94.21594238 35.16015625]
[97.23542023 20.46720695]
[100.25489807 5.77425861]
[103.27437592 -8.91869068]
[106.29385376 -23.61163902]
[109.31333160 -38.30458832]
[112.33280945 -52.99753952]
[115.35228729 -67.69049072]
[103.77999115 -80.02947235]
[101.86328125 -96.66973877]
[110.16091156 -111.02871704]
[125.23021698 -117.54493713]
[128.03666687 -132.28005981]
[117.58432770 -143.59619141]
[115.82011414 -158.72038269]
[123.21241760 -171.82830811]
[136.74374390 -177.99606323]
[139.55020142 -192.73118591]
[128.29101562 -203.27795410]
[124.54336548 -218.24320984]
[129.50311279 -232.85157776]
[141.58761597 -242.44158936]
[156.94075012 -243.95310974]
[170.66339111 -236.90380859]
[178.37669373 -223.54310608]
[177.61936951 -208.13433838]
[168.63308716 -195.59439087]
[154.28532410 -189.92472839]
[151.47886658 -175.18960571]
[161.79568481 -164.47973633]
[163.85214233 -149.57218933]
[156.65200806 -136.15536499]
[142.77178955 -129.47360229]
[139.96533203 -114.73848724]
[149.96920776 -105.90116882]
[154.33612061 -93.17297363]
[151.82467651 -79.84278870]
[142.98554993 -69.41114044]
[130.04522705 -64.67101288]
[127.02575684 -49.97806168]
[124.00627899 -35.28511047]
[120.98680115 -20.59216118]
[117.96732330 -5.89921284]
[114.94784546 8.79373646]
[111.92836761 23.48668480]
[108.90888977 38.17963409]
[105.88941193 52.87258530]
[124.56022644 63.97552872]
[134.87672424 81.02120972]
[135.80171204 99.13002014]
[149.36300659 92.71976471]
[158.53300476 79.82706451]
[173.34609985 81.38323975]
[182.23196411 67.60016632]
[198.59591675 68.67416382]
[205.60409546 83.50040436]
[196.04710388 96.82691956]
[179.75634766 94.94453430]
[171.55635071 107.37872314]
[155.77326965 106.28105164]
[142.21197510 112.69130707]
[157.18637085 113.56740570]
[172.16075134 114.44350433]
[186.20146179 109.16538239]
[201.16705322 108.15000916]
[215.79202271 111.48323822]
[228.83964539 118.88321686]
[239.20657349 129.72418213]
[246.01618958 143.08940125]
[248.69264221 157.84869385]
[247.00961304 172.75398254]
[241.10942078 186.54483032]
[231.49098206 198.05506897]
[218.96766663 206.31138611]
[204.59846497 210.61558533]
[189.59848022 210.60371399]
[175.23611450 206.27676392]
[162.72589111 198.00064087]
[153.12568665 186.47517395]
[147.24732971 172.67500305]
[145.58775330 157.77151489]
[138.01828003 144.82148743]
[130.44880676 131.87145996]
[130.88307190 146.86517334]
[131.31733704 161.85888672]
[131.75158691 176.85260010]
[132.18585205 191.84631348]
[133.05401611 206.82116699]
[134.35534668 221.76460266]
[135.65666199 236.70805359]
[150.44755554 239.72622681]
[163.77523804 246.78280640]
[174.56359863 257.29833984]
[181.94427490 270.41452026]
[185.32659912 285.06414795]
[184.44474792 300.05810547]
[179.37875366 314.18170166]
[170.54721069 326.29324341]
[158.67274475 335.41622925]
[144.72293091 340.81805420]
[146.02424622 355.76147461]
[147.32557678 370.70492554]
[148.62690735 385.64837646]
[149.92823792 400.59182739]
[159.28375244 409.46655273]
[160.06227112 421.93676758]
[152.39076233 431.28588867]
[153.47561646 446.24661255]
[154.56047058 461.20733643]
[155.64532471 476.16802979]
[156.73017883 491.12875366]
[157.81503296 506.08947754]
[158.89988708 521.05017090]
[159.98474121 536.01092529]
[161.06959534 550.97161865]
[162.15446472 565.93237305]
[176.36785889 571.49493408]
[186.75389099 582.67944336]
[191.25039673 597.26519775]
[188.96459961 612.35614014]
[180.35034180 624.95605469]
[167.11799622 632.56317139]
[151.89485168 633.66705322]
[137.70347595 628.04852295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 208]
[5 207]
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[13 199]
[15 196]
[16 195]
[17 194]
[18 193]
[19 192]
[29 182]
[30 181]
[31 180]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[62 86]
[63 85]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
[92 139]
[93 138]
[94 137]
[95 136]
[96 135]
[97 134]
[98 133]
[99 132]
[100 131]
[104 126]
[105 125]
[109 121]
[110 120]
[142 153]
[143 152]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
