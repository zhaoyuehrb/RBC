%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGGCGUCUCCGCCAUUUUGUGAGUCUAUAACUCGGAGCCGUUGGGUCGGUUCCUGCUAUUCCGGCGCCUCCACUCCGUCCCCCGCGGGUCUGCUCUGUGUGCC\
) } def
/len { sequence length } bind def

/coor [
[122.72050476 388.40396118]
[133.57031250 377.14270020]
[131.81271362 362.24603271]
[130.05513000 347.34936523]
[128.29753113 332.45266724]
[126.32144928 317.58340454]
[124.12729645 302.74475098]
[121.93314362 287.90609741]
[109.85792542 279.26174927]
[107.42136383 264.24450684]
[116.57021332 251.63752747]
[114.37606049 236.79885864]
[112.18191528 221.96020508]
[109.98776245 207.12155151]
[107.79361725 192.28289795]
[92.51305389 187.86415100]
[80.62081909 177.21336365]
[74.50674438 162.40345764]
[75.42867279 146.34970093]
[83.25407410 132.23588562]
[96.47633362 122.88285828]
[93.84751892 108.11500549]
[89.38280487 101.23850250]
[91.36496735 92.87549591]
[89.17082214 78.03684235]
[86.97666931 63.19818497]
[84.78252411 48.35953140]
[76.08003998 60.57701111]
[62.23245239 66.34278870]
[47.43074799 63.91184235]
[36.15469360 54.01989365]
[31.81701088 39.66076660]
[35.73050690 25.18027878]
[46.71075821 14.96097755]
[61.43456268 12.09575462]
[75.44573975 17.45177460]
[84.50430298 29.40940285]
[86.26190186 14.51272964]
[88.01949310 -0.38394368]
[89.77708435 -15.28061676]
[83.71009064 -29.89232826]
[92.88538361 -41.62532806]
[94.64298248 -56.52199936]
[96.40057373 -71.41867065]
[98.15816498 -86.31534576]
[99.91576385 -101.21202087]
[101.67335510 -116.10868835]
[103.43094635 -131.00537109]
[93.91594696 -143.33834839]
[95.91060638 -158.42065430]
[107.72685242 -167.41575623]
[109.48444366 -182.31242371]
[111.24204254 -197.20909119]
[104.26950836 -212.05213928]
[113.85850525 -225.35563660]
[130.14468384 -223.43411255]
[136.37423706 -208.26423645]
[126.13871765 -195.45150757]
[124.38111877 -180.55482483]
[122.62352753 -165.65815735]
[132.02186584 -154.16003418]
[130.45162964 -139.02766418]
[118.32762146 -129.24777222]
[116.57003021 -114.35109711]
[114.81243134 -99.45442200]
[113.05484009 -84.55775452]
[111.29724884 -69.66107941]
[109.53964996 -54.76440811]
[107.78205872 -39.86773300]
[113.97476959 -26.32153130]
[104.67375946 -13.52302265]
[102.91616821 1.37365019]
[101.15857697 16.27032280]
[99.40097809 31.16699600]
[99.62117767 46.16537857]
[101.81532288 61.00403595]
[104.00947571 75.84268951]
[106.20362854 90.68135071]
[108.61537170 105.48619080]
[111.24418640 120.25404358]
[125.06871796 123.56867218]
[136.53350830 131.90100098]
[143.90878296 143.95266724]
[146.09762573 157.86735535]
[142.79898071 171.51669312]
[134.54858398 182.82582092]
[122.63227081 190.08874512]
[124.82642365 204.92739868]
[127.02056885 219.76605225]
[129.21472168 234.60472107]
[131.40887451 249.44337463]
[143.81475830 258.86312866]
[145.82855225 273.94290161]
[136.77180481 285.71194458]
[138.96595764 300.55059814]
[141.16009521 315.38925171]
[145.57357788 323.57150269]
[143.19419861 330.69509888]
[144.95179749 345.59176636]
[146.70939636 360.48843384]
[148.46697998 375.38510132]
[161.63970947 383.81204224]
[166.26452637 398.75009155]
[160.15773010 413.14593506]
[146.20275879 420.20236206]
[130.98872375 416.58746338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 101]
[3 100]
[4 99]
[5 98]
[6 96]
[7 95]
[8 94]
[11 91]
[12 90]
[13 89]
[14 88]
[15 87]
[21 80]
[22 79]
[24 78]
[25 77]
[26 76]
[27 75]
[37 74]
[38 73]
[39 72]
[40 71]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[51 60]
[52 59]
[53 58]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
