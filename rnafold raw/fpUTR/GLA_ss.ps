%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAAUAACGUCAUUAUUUAAUAAGUCAUCGGUGAUUGGUCCGCCCCUGAGGUUAAUCUUAAAAGCCCAGGUUACCCGCGGAAAUUUAUGCUGUCCGGUCACCGUGACA\
) } def
/len { sequence length } bind def

/coor [
[-5.21364307 299.73852539]
[-4.83412600 314.79409790]
[-7.70042801 329.57916260]
[-13.67848682 343.40222168]
[-22.48869705 355.61672974]
[-33.71899033 365.65139771]
[-46.84410477 373.03689575]
[-61.25015259 377.42776489]
[-76.26334381 378.61868286]
[-91.18148041 376.55389404]
[-105.30680847 371.32998657]
[-117.97866821 363.19131470]
[-128.60437012 352.51852417]
[-136.68693542 339.81079102]
[-141.84832764 325.66250610]
[-143.84712219 310.73538208]
[-142.58985901 295.72760010]
[-138.13533020 281.34109497]
[-130.69186401 268.24877930]
[-120.60763550 257.06295776]
[-108.35429382 248.30685425]
[-94.50493622 242.38998413]
[-79.70733643 239.58908081]
[-64.65359497 240.03517151]
[-50.04780579 243.70736694]
[-36.57311630 250.43394470]
[-27.14981461 238.76341248]
[-17.72651482 227.09286499]
[-8.30321503 215.42233276]
[-6.52375221 208.13479614]
[1.55563223 203.55982971]
[11.30542088 192.16062927]
[21.05521011 180.76144409]
[30.80499840 169.36224365]
[40.55478668 157.96304321]
[50.30457687 146.56385803]
[60.05436707 135.16465759]
[69.80415344 123.76546478]
[79.55393982 112.36627197]
[89.30373383 100.96707916]
[96.98680878 88.08412933]
[102.38213348 74.08804321]
[107.77746582 60.09196091]
[113.17279816 46.09587479]
[118.56813049 32.09978867]
[112.63417816 9.72126579]
[129.91049194 -4.59366417]
[133.27786255 -19.21080589]
[136.64523315 -33.82794571]
[140.01260376 -48.44508743]
[138.88659668 -57.66131592]
[143.68763733 -63.42541122]
[147.46730042 -77.94140625]
[151.24697876 -92.45740509]
[155.02664185 -106.97339630]
[144.49339294 -118.24522400]
[141.74874878 -133.42648315]
[147.66851807 -147.67288208]
[160.36373901 -156.43844604]
[175.78338623 -156.92611694]
[189.00712585 -148.98028564]
[195.81530762 -135.13642883]
[194.03546143 -119.81208038]
[184.23553467 -107.89717865]
[169.54263306 -103.19372559]
[165.76296997 -88.67773438]
[161.98329163 -74.16173553]
[158.20362854 -59.64574051]
[154.62974548 -45.07771683]
[151.26237488 -30.46057510]
[147.89500427 -15.84343433]
[144.52763367 -1.22629285]
[149.95773315 3.92258024]
[153.21795654 10.73469639]
[153.83290100 18.33090591]
[151.67216492 25.71114159]
[146.97402954 31.88607216]
[140.32022095 36.00970459]
[132.56420898 37.49512100]
[127.16888428 51.49120712]
[121.77355194 65.48728943]
[116.37821960 79.48337555]
[110.98288727 93.47946167]
[124.00640106 86.03714752]
[138.95695496 84.82024384]
[153.01260376 90.05845642]
[163.52029419 100.76305389]
[168.49668884 114.91351318]
[167.00245667 129.83891296]
[159.31965637 142.72201538]
[146.89843750 151.13113403]
[132.08332825 153.47900391]
[117.67071533 149.32247925]
[106.38103485 139.44609070]
[100.34522247 125.71404266]
[100.70292664 110.71687317]
[90.95314026 122.11606598]
[81.20334625 133.51525879]
[71.45355988 144.91444397]
[61.70376968 156.31364441]
[51.95397949 167.71284485]
[42.20419312 179.11203003]
[32.45440292 190.51123047]
[22.70461464 201.91041565]
[12.95482635 213.30961609]
[3.36732149 224.84562683]
[-6.05597830 236.51617432]
[-15.47927856 248.18670654]
[-24.90257835 259.85723877]
[-15.48814774 271.61233521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 109]
[27 108]
[28 107]
[29 106]
[31 105]
[32 104]
[33 103]
[34 102]
[35 101]
[36 100]
[37 99]
[38 98]
[39 97]
[40 96]
[41 83]
[42 82]
[43 81]
[44 80]
[45 79]
[47 72]
[48 71]
[49 70]
[50 69]
[52 68]
[53 67]
[54 66]
[55 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
