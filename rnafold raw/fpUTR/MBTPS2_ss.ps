%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCGGUACUAGCAAAUCCUCCUGUAUGUCCCCACUGGAAGAGUCCGGUGGGAAACCGUGCCACCGCAAGGAAGGAGCCGGCGGUAGCUUGGUUCCUGAGCGGAUGCUGGGGCUGUAAGGCGCGCGCGGUCAGCUGUUGGCGGUGCAGGGAGGAGGACGCCGGGGCUCGCCUUCCCUCCUCUGCCGCCGCUGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[290.10067749 189.33059692]
[277.13446045 185.31704712]
[267.77267456 175.34008789]
[264.54052734 161.93446350]
[250.28945923 157.25396729]
[236.03839111 152.57345581]
[221.78732300 147.89295959]
[207.28120422 151.27261353]
[196.58436584 139.61550903]
[182.33329773 134.93501282]
[168.08222961 130.25450134]
[153.83116150 125.57400513]
[139.58009338 120.89350128]
[125.32902527 116.21299744]
[121.39697266 121.13269043]
[116.52653503 125.12557983]
[110.93130493 128.01655579]
[104.85666656 129.67884827]
[98.56903839 130.03953552]
[92.34416962 129.08279419]
[86.45505524 126.85060883]
[81.15996552 123.44085693]
[76.69112396 119.00308228]
[73.24452209 113.73191071]
[58.61307526 117.03656769]
[43.98162842 120.34122467]
[29.35018158 123.64588165]
[14.71873474 126.95053864]
[5.23177576 143.33947754]
[-12.90837002 147.52873230]
[-28.09131241 137.31541443]
[-42.61054230 141.08262634]
[-57.12977219 144.84985352]
[-71.64900208 148.61706543]
[-86.16823578 152.38429260]
[-100.68746185 156.15150452]
[-115.20669556 159.91873169]
[-129.72592163 163.68594360]
[-144.24516296 167.45317078]
[-155.54681396 179.33612061]
[-171.42295837 175.22756958]
[-175.54156494 159.35403442]
[-163.66577148 148.04486084]
[-148.01237488 152.93394470]
[-133.49314880 149.16671753]
[-118.97391510 145.39950562]
[-104.45468140 141.63227844]
[-89.93545532 137.86506653]
[-75.41622162 134.09783936]
[-60.89699173 130.33062744]
[-46.37776184 126.56340027]
[-31.85853195 122.79618073]
[-28.33948135 111.93032074]
[-19.92173958 104.03435516]
[-8.62076759 101.15763092]
[2.77987075 104.12825012]
[11.41407681 112.31909180]
[26.04552460 109.01443481]
[40.67697144 105.70977783]
[55.30841827 102.40512085]
[69.93986511 99.10046387]
[71.23052216 91.23997498]
[74.53961182 83.99407959]
[79.63497162 77.87113953]
[72.55090332 64.64933777]
[65.46684265 51.42753601]
[58.38277435 38.20573425]
[47.70457458 37.76128006]
[38.24890900 32.95597076]
[31.69577980 24.71890259]
[29.17804146 14.58189487]
[31.08595657 4.39484072]
[37.00839233 -4.01184177]
[30.56147003 -17.55574036]
[24.11454582 -31.09963799]
[17.66762161 -44.64353561]
[11.22069836 -58.18743515]
[4.77377510 -71.73133087]
[-1.67314875 -85.27523041]
[-8.12007236 -98.81912994]
[-14.67424011 -112.31145477]
[-21.33523941 -125.75135803]
[-35.28096008 -134.37974548]
[-34.51103592 -150.76080322]
[-19.81750298 -158.04312134]
[-6.31580496 -148.73526001]
[-7.89533281 -132.41235352]
[-1.23433352 -118.97245789]
[4.55895329 -114.37042236]
[5.42382574 -105.26605225]
[11.87074947 -91.72215271]
[18.31767273 -78.17825317]
[24.76459694 -64.63436127]
[31.21152115 -51.09045792]
[37.65844345 -37.54656219]
[44.10536957 -24.00266266]
[50.55229187 -10.45876503]
[69.33414459 -5.32001305]
[78.43672180 12.23770905]
[71.60457611 31.12166977]
[78.68864441 44.34347153]
[85.77270508 57.56526947]
[92.85677338 70.78707123]
[119.33093262 76.96229553]
[130.00952148 101.96193695]
[144.26058960 106.64243317]
[158.51165771 111.32293701]
[172.76272583 116.00344086]
[187.01379395 120.68393707]
[201.26486206 125.36444092]
[216.79029846 122.31957245]
[226.46781921 133.64189148]
[240.71888733 138.32238770]
[254.96995544 143.00289917]
[269.22100830 147.68339539]
[282.79519653 137.60044861]
[299.53833008 137.59124756]
[312.85659790 147.46145630]
[317.62283325 163.16496277]
[331.94635010 167.61877441]
[346.26989746 172.07258606]
[360.59341431 176.52638245]
[369.72821045 176.08676147]
[375.10787964 181.16615295]
[389.35894775 185.84664917]
[403.64669800 190.41395569]
[417.97021484 194.86775208]
[432.29376221 199.32156372]
[446.61727905 203.77536011]
[460.94082642 208.22917175]
[453.16702271 195.40077209]
[454.29583740 180.44329834]
[463.90695190 168.92692566]
[478.42114258 165.14033508]
[492.43334961 170.49363708]
[500.72543335 182.99328613]
[500.20947266 197.98440552]
[491.07754517 209.88432312]
[476.73046875 214.26152039]
[490.37493896 220.49273682]
[504.01940918 226.72396851]
[517.66387939 232.95520020]
[531.30834961 239.18641663]
[547.07562256 237.88111877]
[555.43859863 250.20631409]
[571.20587158 248.90101624]
[579.56878662 261.22622681]
[593.21325684 267.45742798]
[606.85778809 273.68865967]
[620.50225830 279.91989136]
[634.14672852 286.15112305]
[647.79119873 292.38235474]
[661.43566895 298.61355591]
[676.08850098 293.32839966]
[689.83715820 299.84213257]
[694.78546143 313.84390259]
[708.42993164 320.07513428]
[717.54687500 320.79544067]
[722.24023438 326.51498413]
[735.78417969 332.96191406]
[752.07995605 331.12359619]
[761.60083008 344.47592163]
[754.55255127 359.28314209]
[738.18579102 360.31286621]
[729.33721924 346.50579834]
[715.79333496 340.05886841]
[702.19873047 333.71960449]
[688.55426025 327.48837280]
[674.73193359 332.91793823]
[660.80572510 326.79293823]
[655.20446777 312.25805664]
[641.55999756 306.02682495]
[627.91552734 299.79559326]
[614.27099609 293.56436157]
[600.62652588 287.33316040]
[586.98205566 281.10192871]
[573.33758545 274.87069702]
[558.54626465 276.62170410]
[549.20733643 263.85079956]
[534.41601562 265.60180664]
[525.07714844 252.83090210]
[511.43267822 246.59967041]
[497.78820801 240.36845398]
[484.14370728 234.13722229]
[470.49923706 227.90600586]
[456.48703003 222.55270386]
[442.16348267 218.09890747]
[427.83993530 213.64509583]
[413.51641846 209.19128418]
[399.19287109 204.73748779]
[391.86441040 205.75451660]
[384.67843628 200.09771729]
[370.42736816 195.41722107]
[356.13961792 190.84991455]
[341.81607056 186.39611816]
[327.49255371 181.94230652]
[313.16900635 177.48851013]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 115]
[5 114]
[6 113]
[7 112]
[9 110]
[10 109]
[11 108]
[12 107]
[13 106]
[14 105]
[24 61]
[25 60]
[26 59]
[27 58]
[28 57]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[64 103]
[65 102]
[66 101]
[67 100]
[73 97]
[74 96]
[75 95]
[76 94]
[77 93]
[78 92]
[79 91]
[80 90]
[81 88]
[82 87]
[119 197]
[120 196]
[121 195]
[122 194]
[124 193]
[125 192]
[126 190]
[127 189]
[128 188]
[129 187]
[130 186]
[139 185]
[140 184]
[141 183]
[142 182]
[143 181]
[145 179]
[147 177]
[148 176]
[149 175]
[150 174]
[151 173]
[152 172]
[153 171]
[156 168]
[157 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
