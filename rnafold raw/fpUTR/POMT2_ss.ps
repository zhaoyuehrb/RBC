%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCUCCUGCCGCCUCCUAGCGGCCCGGGCCGCGACCACGCUGCCCGCCCCGCCCCGAGCCCGGGGCCCCGCGCUCCGCUGCAGUGAAGGGCGUUGCAUUUCCCGGGGUACCCCGAGCUGCCCUCUUGUGACUCCUUGGCGGGGCGGCUGGUCAGACAAAGUGUGCCUCCGGGCCGGAGGGCGACCCAGAGGAGGGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[103.67485809 246.36737061]
[95.16127777 234.14573669]
[102.02565765 219.89123535]
[101.09311676 204.92025757]
[100.16056824 189.94926453]
[99.22802734 174.97828674]
[98.29547882 160.00730896]
[97.36293793 145.03631592]
[82.74273682 141.68226624]
[75.37782288 154.74971008]
[68.01290894 167.81715393]
[60.64800262 180.88459778]
[53.28308868 193.95204163]
[57.77247238 209.10528564]
[50.15865707 222.95466614]
[34.95878983 227.28358459]
[21.19067955 219.52377319]
[17.02270317 204.27899170]
[24.92764473 190.59368896]
[40.21564484 186.58712769]
[47.58055878 173.51968384]
[54.94546890 160.45223999]
[62.31037903 147.38479614]
[69.67529297 134.31735229]
[68.09315491 128.84498596]
[67.32856750 123.47259521]
[53.72847748 129.80010986]
[40.12838745 136.12763977]
[26.52829742 142.45516968]
[12.92820930 148.78269958]
[3.67983556 161.61929321]
[-11.12349796 159.97290039]
[-24.72358704 166.30043030]
[-38.32367706 172.62794495]
[-47.29335403 186.35664368]
[-63.65044785 185.18296814]
[-70.56818390 170.31431580]
[-60.93018341 157.04626465]
[-44.65119934 159.02786255]
[-31.05111122 152.70033264]
[-17.45102310 146.37280273]
[-9.17541885 133.98880005]
[6.60068369 135.18260193]
[20.20077324 128.85507202]
[33.80086136 122.52754974]
[47.40095139 116.20002747]
[61.00104141 109.87250519]
[61.38550568 88.71699524]
[72.45212555 70.68276978]
[91.13947296 60.75874329]
[112.27795410 61.69025040]
[119.43875122 48.50984955]
[126.59955597 35.32944870]
[133.76034546 22.14904594]
[140.92114258 8.96864510]
[147.97923279 -4.26704025]
[143.48857117 -19.18252182]
[150.73120117 -32.56156921]
[164.97850037 -36.75082016]
[171.93345642 -50.04099274]
[178.88841248 -63.33116150]
[185.84336853 -76.62133026]
[192.79832458 -89.91149902]
[199.75326538 -103.20167542]
[206.70822144 -116.49184418]
[213.66317749 -129.78201294]
[209.81776428 -139.96632385]
[212.16778564 -150.37066650]
[219.70062256 -157.60884094]
[229.75843811 -159.46211243]
[237.12333679 -172.52955627]
[244.48825073 -185.59700012]
[251.85316467 -198.66444397]
[259.21807861 -211.73188782]
[266.58297729 -224.79933167]
[272.69824219 -238.49618530]
[277.51062012 -252.70324707]
[282.32302856 -266.91033936]
[287.13540649 -281.11740112]
[291.94778442 -295.32446289]
[289.04693604 -310.87747192]
[300.45846558 -320.44964600]
[300.24829102 -329.58905029]
[305.45776367 -334.83920288]
[310.49050903 -348.96972656]
[307.83187866 -364.56594849]
[319.39089966 -373.95950317]
[324.42364502 -388.08999634]
[329.45639038 -402.22052002]
[334.48916626 -416.35104370]
[339.52191162 -430.48153687]
[339.45388794 -439.62313843]
[344.74435425 -444.79165649]
[349.99624634 -458.84219360]
[355.24813843 -472.89273071]
[360.50006104 -486.94326782]
[365.75195312 -500.99380493]
[371.00384521 -515.04431152]
[364.58663940 -522.34271240]
[361.29202271 -531.42395020]
[361.53390503 -541.02343750]
[365.23678589 -549.82043457]
[371.85186768 -556.62023926]
[380.43814087 -560.51599121]
[389.79589844 -561.00982666]
[395.91116333 -574.70666504]
[402.02642822 -588.40350342]
[408.14166260 -602.10034180]
[414.25692749 -615.79718018]
[420.37219238 -629.49401855]
[412.51116943 -642.87255859]
[414.04867554 -658.31323242]
[424.39349365 -669.87890625]
[439.56781006 -673.12231445]
[453.73681641 -666.79626465]
[461.45223999 -653.33325195]
[459.74731445 -637.91009521]
[449.27764893 -626.45733643]
[434.06903076 -623.37878418]
[427.95376587 -609.68194580]
[421.83853149 -595.98510742]
[415.72326660 -582.28826904]
[409.60800171 -568.59136963]
[403.49276733 -554.89453125]
[412.38409424 -536.49645996]
[404.71130371 -517.24145508]
[385.05438232 -509.79241943]
[379.80249023 -495.74188232]
[374.55059814 -481.69134521]
[369.29867554 -467.64080811]
[364.04678345 -453.59027100]
[358.79489136 -439.53976440]
[353.65240479 -425.44879150]
[348.61965942 -411.31829834]
[343.58691406 -397.18777466]
[338.55416870 -383.05725098]
[333.52142334 -368.92672729]
[336.54000854 -354.34121704]
[324.62100220 -343.93698120]
[319.58825684 -329.80645752]
[314.66555786 -315.63723755]
[317.91061401 -301.10043335]
[306.15484619 -290.51208496]
[301.34246826 -276.30502319]
[296.53009033 -262.09793091]
[291.71771240 -247.89086914]
[286.90530396 -233.68379211]
[298.70025635 -242.95091248]
[313.32821655 -246.27090454]
[327.96801758 -243.00344849]
[339.79614258 -233.77871704]
[346.53137207 -220.37585449]
[346.87472534 -205.37979126]
[340.75994873 -191.68272400]
[329.36639404 -181.92634583]
[314.89147949 -177.99229431]
[300.12689209 -180.63934326]
[287.92019653 -189.35693359]
[280.62561035 -202.46377563]
[279.65042114 -217.43441772]
[272.28552246 -204.36697388]
[264.92059326 -191.29953003]
[257.55569458 -178.23208618]
[250.19078064 -165.16464233]
[242.82588196 -152.09719849]
[244.44750977 -132.83335876]
[226.95335388 -122.82706451]
[219.99839783 -109.53688812]
[213.04344177 -96.24671936]
[206.08848572 -82.95655060]
[199.13352966 -69.66638184]
[192.17858887 -56.37620926]
[185.22363281 -43.08604050]
[178.26867676 -29.79586792]
[182.94812012 -15.70195389]
[176.08413696 -2.12475538]
[161.26940918 2.68791270]
[160.95315552 10.07726574]
[154.10154724 16.12944412]
[146.94075012 29.30984497]
[139.77995300 42.49024582]
[132.61915588 55.67064667]
[125.45835876 68.85105133]
[134.45783997 77.73658752]
[140.39602661 89.18124390]
[142.56106567 102.14178467]
[140.59313965 115.38311768]
[134.53376770 127.59600067]
[124.83610535 137.52639771]
[112.33392334 144.10377502]
[113.26646423 159.07475281]
[114.19901276 174.04574585]
[115.13155365 189.01672363]
[116.06410217 203.98770142]
[116.99664307 218.95869446]
[125.57692719 232.25114441]
[118.64584351 245.43482971]
[129.67335510 257.08700562]
[127.29625702 272.95297241]
[113.33805084 280.86172485]
[98.50628662 274.74630737]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[3 195]
[4 194]
[5 193]
[6 192]
[7 191]
[8 190]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[32 41]
[33 40]
[34 39]
[51 183]
[52 182]
[53 181]
[54 180]
[55 179]
[56 177]
[59 174]
[60 173]
[61 172]
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[70 165]
[71 164]
[72 163]
[73 162]
[74 161]
[75 160]
[76 147]
[77 146]
[78 145]
[79 144]
[80 143]
[82 141]
[84 140]
[85 139]
[87 137]
[88 136]
[89 135]
[90 134]
[91 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
[105 124]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
