%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCGGCUGAGCCAGCGGCUCUUGGGAGGCUGCGUCCGCGCGCCGGCGAGGCGAGGCGGCCGGGCCCUGCGCGUCAGGCCUGAGACCUGGGAGGAAGCUGGAGAAAAG\
) } def
/len { sequence length } bind def

/coor [
[66.14179993 387.05349731]
[62.32852554 401.56069946]
[67.16790771 417.22952271]
[55.82109833 429.06936646]
[39.96071625 424.90042114]
[35.90256119 409.01132202]
[47.82132339 397.74743652]
[51.63459778 383.24023438]
[37.56537247 370.91098022]
[31.50462151 353.12878418]
[35.14630127 334.61727905]
[47.59579468 320.33590698]
[65.58800507 314.15115356]
[67.72272491 299.30383301]
[69.85745239 284.45651245]
[71.99217224 269.60919189]
[74.12689209 254.76187134]
[63.49086761 241.82199097]
[65.47158051 224.85134888]
[79.33588409 214.30178833]
[81.04575348 199.39955139]
[82.75562286 184.49732971]
[84.46549988 169.59510803]
[86.17536926 154.69288635]
[87.88523865 139.79064941]
[89.59510803 124.88842773]
[91.30498505 109.98620605]
[92.16131592 95.01066589]
[92.16131592 80.01066589]
[92.16131592 65.01066589]
[92.16131592 50.01066589]
[92.16131592 35.01066589]
[81.02690125 28.96319389]
[73.61225891 18.77831078]
[71.30448151 6.46753311]
[74.48961639 -5.57069206]
[82.48969269 -15.01824856]
[93.70586395 -20.08371544]
[94.56219482 -35.05924988]
[95.41852570 -50.03478622]
[96.27485657 -65.01032257]
[97.13118744 -79.98586273]
[97.98752594 -94.96139526]
[89.95648193 -105.17847443]
[91.06778717 -117.72211456]
[100.16918182 -125.83133698]
[101.45281219 -140.77632141]
[102.73643494 -155.72128296]
[92.83456421 -167.74588013]
[94.34923553 -182.88392639]
[105.87386322 -192.24974060]
[107.15749359 -207.19471741]
[108.44111633 -222.13969421]
[98.07266235 -234.06741333]
[99.25855255 -249.82714844]
[111.29523468 -260.06890869]
[127.04154968 -258.71646118]
[137.15548706 -246.57217407]
[135.63662720 -230.84104919]
[123.38609314 -220.85606384]
[122.10247040 -205.91108704]
[120.81884003 -190.96611023]
[130.57760620 -179.77226257]
[129.48872375 -164.59765625]
[117.68141174 -154.43766785]
[116.39778900 -139.49269104]
[115.11415863 -124.54771423]
[123.43298340 -109.16850281]
[112.96305847 -94.10506439]
[112.10672760 -79.12953186]
[111.25039673 -64.15399170]
[110.39406586 -49.17845535]
[109.53772736 -34.20291901]
[108.68139648 -19.22738266]
[122.80476379 -8.82537079]
[128.01037598 8.08749008]
[122.07736969 24.92385483]
[107.16131592 35.01066589]
[107.16131592 50.01066589]
[107.16131592 65.01066589]
[107.16131592 80.01066589]
[107.16131592 95.01066589]
[109.28111267 97.42904663]
[110.50887299 100.71620178]
[110.50476074 104.51988220]
[109.07318878 108.36157990]
[106.20720673 111.69607544]
[104.49733734 126.59829712]
[102.78746796 141.50051880]
[101.07759857 156.40275574]
[99.36772156 171.30497742]
[97.65785217 186.20719910]
[95.94798279 201.10943604]
[94.23811340 216.01165771]
[103.82373810 225.60026550]
[106.05612946 238.77520752]
[100.33409882 250.63412476]
[88.97421265 256.89660645]
[86.83949280 271.74392700]
[84.70477295 286.59124756]
[82.57004547 301.43856812]
[80.43532562 316.28588867]
[90.53350067 321.97024536]
[98.34875488 330.48989868]
[103.12049103 340.99090576]
[104.39202118 352.42782593]
[102.05420685 363.66778564]
[96.35462952 373.60250854]
[87.87145233 381.25784302]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 8]
[2 7]
[13 102]
[14 101]
[15 100]
[16 99]
[17 98]
[20 94]
[21 93]
[22 92]
[23 91]
[24 90]
[25 89]
[26 88]
[27 87]
[28 82]
[29 81]
[30 80]
[31 79]
[32 78]
[38 74]
[39 73]
[40 72]
[41 71]
[42 70]
[43 69]
[46 67]
[47 66]
[48 65]
[51 62]
[52 61]
[53 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
