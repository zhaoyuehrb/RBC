%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCAUCUCUCAGCACCUCCUCGGCAGCCCCUCGGCUCCUUCUCGGUCACGCGCCUGCCCCAACCUCUGGCUGGCUUCGGAGCCUGCAGGCACUGAAGGGAGUGCAGGGUGUGGAUCGCUGCCCCAGCCCGGGCCGCCGCCUCCGAGCAGUCGGCACCCGGAGGCAGGAGGCACA\
) } def
/len { sequence length } bind def

/coor [
[107.28137970 266.36001587]
[100.16810608 279.66653442]
[89.85251617 290.67794800]
[77.03794861 298.64346313]
[62.59812164 303.01995850]
[47.51756668 303.50906372]
[32.82449722 300.07742310]
[19.52071571 292.95901489]
[8.51329327 282.63919067]
[0.55273521 269.82153320]
[-3.81819463 255.38002014]
[-4.30147839 240.29927063]
[-0.86416578 225.60752869]
[6.25938225 212.30650330]
[16.58346939 201.30307007]
[29.40418434 193.34745789]
[43.84738541 188.98210144]
[58.92831802 188.50463867]
[62.33983231 173.89773560]
[65.75134277 159.29083252]
[69.16286469 144.68394470]
[72.57437897 130.07704163]
[75.98589325 115.47013855]
[80.84165955 98.71231842]
[92.51742554 93.61368561]
[89.10591125 79.00678253]
[85.69439697 64.39987946]
[75.02123260 52.72109222]
[79.66114807 38.56763077]
[76.24963379 23.96072960]
[72.83811188 9.35382843]
[69.42659760 -5.25307274]
[59.83952332 -10.47074795]
[54.82495499 -19.91728210]
[55.83309555 -30.34369850]
[62.28800201 -38.31245422]
[59.39411163 -53.03065491]
[56.50022125 -67.74885559]
[53.60633087 -82.46705627]
[37.83715820 -85.53108978]
[24.47976494 -94.38545227]
[15.55920410 -107.65236664]
[12.41427612 -123.28781128]
[15.49666977 -138.89646912]
[24.30635643 -152.09863281]
[37.47242737 -160.89306641]
[34.31923294 -175.55789185]
[31.16603851 -190.22273254]
[28.01284409 -204.88755798]
[24.85964966 -219.55239868]
[21.57716751 -234.18882751]
[18.16565132 -248.79573059]
[14.75413704 -263.40264893]
[11.34262180 -278.00955200]
[6.32922745 -285.68212891]
[8.00220680 -292.90429688]
[4.84901237 -307.56912231]
[1.69581807 -322.23397827]
[-1.45737600 -336.89880371]
[-4.61056995 -351.56362915]
[-7.89305258 -366.20007324]
[-11.43333435 -380.77630615]
[-15.10210800 -395.32070923]
[-23.32258606 -392.31158447]
[-33.57506561 -393.54864502]
[-43.81531906 -399.88015747]
[-52.71754837 -411.95288086]
[-68.33465576 -412.75289917]
[-79.74852753 -423.44201660]
[-81.56989288 -438.97317505]
[-72.93875122 -452.01303101]
[-57.93046570 -456.40454102]
[-43.63148880 -450.07418823]
[-36.79336548 -436.01095581]
[-40.64484024 -420.85510254]
[-31.74261093 -408.78240967]
[-17.53511810 -413.59353638]
[-17.79984474 -428.59121704]
[-18.06457138 -443.58886719]
[-18.32929802 -458.58651733]
[-18.59402657 -473.58419800]
[-18.85875320 -488.58184814]
[-26.83839989 -502.24331665]
[-19.32692337 -515.10516357]
[-19.59165001 -530.10284424]
[-19.85637665 -545.10052490]
[-28.76446342 -558.86926270]
[-21.05457497 -573.34301758]
[-4.65798092 -573.63238525]
[3.55790639 -559.43975830]
[-4.85871315 -545.36523438]
[-4.59398603 -530.36755371]
[-4.32925844 -515.36987305]
[3.63145351 -502.78115845]
[-3.86108947 -488.84658813]
[-3.59636235 -473.84893799]
[-3.33163524 -458.85125732]
[-3.06690788 -443.85360718]
[-2.80218077 -428.85592651]
[-2.53745341 -413.85827637]
[-0.55768973 -398.98950195]
[3.11108351 -384.44506836]
[7.81003189 -378.71109009]
[6.71384859 -369.61157227]
[11.31086922 -363.79559326]
[10.05426407 -354.71682739]
[13.20745850 -340.05200195]
[16.36065292 -325.38714600]
[19.51384735 -310.72232056]
[22.66703987 -296.05749512]
[25.94952393 -281.42105103]
[29.36103821 -266.81414795]
[32.77255249 -252.20724487]
[36.18406677 -237.60035706]
[40.78108978 -231.78434753]
[39.52448273 -222.70559692]
[42.67767715 -208.04075623]
[45.83087158 -193.37591553]
[48.98406601 -178.71109009]
[52.13726044 -164.04624939]
[66.04275513 -162.04428101]
[78.45376587 -155.39758301]
[87.86685181 -144.88815308]
[93.13384247 -131.76727295]
[93.60184479 -117.60655212]
[89.19412231 -104.10970306]
[80.42176819 -92.90753937]
[68.32453156 -85.36094666]
[71.21842194 -70.64274597]
[74.11231232 -55.92454529]
[77.00620270 -41.20634460]
[90.76486206 -27.64498711]
[84.03350067 -8.66458797]
[87.44501495 5.94231367]
[90.85652924 20.54921532]
[94.26804352 35.15611649]
[104.69719696 45.79012299]
[100.30130005 60.98836517]
[103.71281433 75.59526825]
[107.12432861 90.20217133]
[114.81456757 103.08084106]
[126.05572510 113.01242828]
[137.29687500 122.94401550]
[148.53804016 132.87561035]
[159.77919006 142.80718994]
[171.02033997 152.73878479]
[182.26150513 162.67036438]
[202.16378784 165.74700928]
[207.57670593 184.29185486]
[219.16136169 193.82054138]
[235.20399475 193.70301819]
[245.18588257 206.26252747]
[241.44979858 221.86450195]
[226.86174011 228.54042053]
[212.61241150 221.16909790]
[209.63267517 205.40519714]
[198.04803467 195.87651062]
[187.97103882 197.77944946]
[178.31390381 193.72158813]
[172.37605286 184.82637024]
[172.32991028 173.91151428]
[161.08876038 163.97993469]
[149.84761047 154.04833984]
[138.60644531 144.11676025]
[127.36529541 134.18516541]
[116.12413788 124.25358582]
[104.88298035 114.32199860]
[90.59279633 118.88165283]
[87.18127441 133.48855591]
[83.76976013 148.09545898]
[80.35824585 162.70236206]
[76.94673157 177.30924988]
[73.53521729 191.91615295]
[86.84449005 199.02429199]
[97.85987854 209.33563232]
[105.83033752 222.14712524]
[110.21241760 236.58525085]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 173]
[19 172]
[20 171]
[21 170]
[22 169]
[23 168]
[25 140]
[26 139]
[27 138]
[29 136]
[30 135]
[31 134]
[32 133]
[36 131]
[37 130]
[38 129]
[39 128]
[46 120]
[47 119]
[48 118]
[49 117]
[50 116]
[51 114]
[52 113]
[53 112]
[54 111]
[56 110]
[57 109]
[58 108]
[59 107]
[60 106]
[61 104]
[62 102]
[63 101]
[66 76]
[67 75]
[77 100]
[78 99]
[79 98]
[80 97]
[81 96]
[82 95]
[84 93]
[85 92]
[86 91]
[141 167]
[142 166]
[143 165]
[144 164]
[145 163]
[146 162]
[147 161]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
