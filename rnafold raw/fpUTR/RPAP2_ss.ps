%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCGUCUUAGCCCGCUCUUCUGGCCCCGCCCCGCGCUACGCGUAGGGAGGCGGGGCCUCGGGGCGAGACGCCGGAGCGUGUCCCCGUCCGGCAGACUACUCUCCCCC\
) } def
/len { sequence length } bind def

/coor [
[67.83072662 119.09609985]
[75.12166595 105.98723602]
[89.47116089 101.62085724]
[77.33590698 92.80408478]
[65.20065308 83.98730469]
[53.06539536 75.17052460]
[40.93014145 66.35374451]
[28.79488564 57.53696442]
[16.65962982 48.72018814]
[4.52437544 39.90340805]
[-4.40065908 37.33354187]
[-7.82668257 30.65752220]
[-19.70521545 21.49780464]
[-31.58374977 12.33808517]
[-43.46228409 3.17836738]
[-52.40710449 8.28996563]
[-62.46285629 10.38879204]
[-72.64613342 9.28841686]
[-81.96685791 5.11436367]
[-89.52451324 -1.70990562]
[-94.59519196 -10.50588417]
[-96.70085144 -20.40745354]
[-95.65439606 -30.44615364]
[-91.57610321 -39.64591217]
[-102.03016663 -50.40288925]
[-112.48423004 -61.15986633]
[-122.93829346 -71.91683960]
[-133.39236450 -82.67382050]
[-143.84642029 -93.43079376]
[-154.30049133 -104.18777466]
[-164.75454712 -114.94474792]
[-175.20861816 -125.70172882]
[-185.81521606 -136.30833435]
[-196.57218933 -146.76239014]
[-207.62330627 -156.90501404]
[-218.95954895 -166.72793579]
[-230.29579163 -176.55084229]
[-241.63203430 -186.37374878]
[-257.56195068 -192.17665100]
[-256.39569092 -209.09043884]
[-239.82003784 -212.65193176]
[-231.80912781 -197.70999146]
[-220.47288513 -187.88708496]
[-209.13664246 -178.06417847]
[-197.80039978 -168.24125671]
[-192.91688538 -167.70489502]
[-188.36354065 -163.99601746]
[-186.11813354 -157.51936340]
[-175.36114502 -147.06530762]
[-168.26550293 -144.62425232]
[-164.45162964 -136.15579224]
[-153.99757385 -125.39881134]
[-143.54350281 -114.64183807]
[-133.08944702 -103.88485718]
[-122.63538361 -93.12788391]
[-112.18132019 -82.37090302]
[-101.72724915 -71.61392975]
[-91.27318573 -60.85695267]
[-80.81912231 -50.09997559]
[-61.21592712 -54.67593384]
[-42.58635330 -46.70170212]
[-32.22860336 -29.12822342]
[-34.30256653 -8.70016670]
[-22.42403221 0.45955196]
[-10.54549789 9.61927032]
[1.33303571 18.77898788]
[13.34115410 27.76815414]
[25.47640991 36.58493042]
[37.61166382 45.40171051]
[49.74691772 54.21849060]
[61.88217545 63.03526688]
[74.01742554 71.85205078]
[86.15268707 80.66882324]
[98.28794098 89.48560333]
[111.13317108 97.23156738]
[124.59415436 103.84988403]
[138.05513000 110.46820068]
[151.51609802 117.08651733]
[167.31420898 116.23200226]
[175.32179260 128.79098511]
[188.78276062 135.40930176]
[202.33688354 141.83473206]
[215.98135376 148.06594849]
[229.62583923 154.29718018]
[247.83441162 152.06684875]
[257.55416870 166.60125732]
[271.37103271 172.44030762]
[287.56909180 169.88009644]
[297.67358398 182.79640198]
[291.28988647 197.90203857]
[274.98498535 199.65762329]
[265.53198242 186.25717163]
[251.71511841 180.41812134]
[240.29573059 184.68338013]
[228.68310547 179.81254578]
[223.39460754 167.94165039]
[209.75013733 161.71043396]
[196.10565186 155.47920227]
[188.60234070 155.56460571]
[182.16444397 148.87028503]
[168.70347595 142.25196838]
[153.86817932 143.57986450]
[144.89778137 130.54748535]
[131.43681335 123.92917633]
[117.97583771 117.31085968]
[104.51485443 110.69254303]
[107.34934235 125.42229462]
[99.15727234 137.98773193]
[84.53601074 141.33714294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 74]
[4 73]
[5 72]
[6 71]
[7 70]
[8 69]
[9 68]
[10 67]
[12 66]
[13 65]
[14 64]
[15 63]
[24 59]
[25 58]
[26 57]
[27 56]
[28 55]
[29 54]
[30 53]
[31 52]
[32 51]
[33 49]
[34 48]
[35 45]
[36 44]
[37 43]
[38 42]
[75 106]
[76 105]
[77 104]
[78 103]
[80 101]
[81 100]
[82 98]
[83 97]
[84 96]
[86 93]
[87 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
