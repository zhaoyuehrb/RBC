%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGUUUCACUUUGUUUUUGGACAUAGCUGAGCCAUGUACUUCAAACAGAAGGCAGCCAAUUACUAACUUCUGGUUGCUAGGUGUGGCUUCCUUUAAAAUCCUAUAAAAUCAGAAGCCCAAGUCUCCACUGCCAGUGUGAAAUCUUCAGAGAAGAAUUUCUCUUUAGUUCUUUGCAAGAAGGUAGAGAUAAAGACACUUUUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[180.61424255 240.88348389]
[174.20401001 228.92207336]
[171.41894531 215.62297058]
[172.49383545 202.06109619]
[177.35107422 189.33534241]
[165.58355713 180.03344727]
[153.81602478 170.73155212]
[142.04849243 161.42965698]
[130.28096008 152.12776184]
[118.51343536 142.82586670]
[106.74590302 133.52397156]
[91.74971771 133.18579102]
[79.57482910 141.94775391]
[67.39993286 150.70971680]
[55.22504425 159.47167969]
[43.05015564 168.23365784]
[30.87526512 176.99562073]
[18.70037460 185.75758362]
[16.02791595 201.10345459]
[3.55602813 209.81590271]
[-11.05744362 207.17353821]
[-23.23233414 215.93551636]
[-35.34103012 224.78872681]
[-47.38284302 233.73271179]
[-59.42465591 242.67668152]
[-71.46646881 251.62066650]
[-77.93159485 266.06063843]
[-92.76237488 267.43804932]
[-104.80418396 276.38201904]
[-113.91442871 290.68026733]
[-130.17585754 285.88421631]
[-130.06884766 268.93060303]
[-113.74816132 264.34020996]
[-101.70635223 255.39624023]
[-96.10253906 241.59599304]
[-80.41044617 239.57884216]
[-68.36862946 230.63487244]
[-56.32682037 221.69088745]
[-44.28500366 212.74691772]
[-40.78914642 206.23399353]
[-31.99430084 203.76062012]
[-19.81941032 194.99865723]
[-17.68399620 180.30255127]
[-5.46174383 171.24322510]
[9.93840790 173.58268738]
[22.11329842 164.82072449]
[34.28818893 156.05876160]
[46.46307755 147.29679871]
[58.63796997 138.53483582]
[70.81285858 129.77285767]
[82.98774719 121.01089478]
[75.78831482 100.10089874]
[86.40229034 83.48951721]
[81.53179932 69.30225372]
[76.66130829 55.11499786]
[71.79081726 40.92773819]
[66.92032623 26.74048042]
[52.83143997 25.61208344]
[40.27494812 19.21819496]
[31.13182449 8.55368423]
[26.75756645 -4.74967241]
[27.78129768 -18.67282104]
[34.01550674 -31.11585617]
[44.48933792 -40.21473312]
[39.83264160 -54.47359848]
[35.17594910 -68.73246002]
[17.96868515 -76.65575409]
[12.11598969 -94.33668518]
[20.89122963 -110.40123749]
[15.80803967 -124.51368713]
[10.72484970 -138.62612915]
[5.64165926 -152.73858643]
[0.55846930 -166.85102844]
[-4.52472067 -180.96347046]
[-9.60791111 -195.07592773]
[-14.69110107 -209.18836975]
[-19.77429199 -223.30081177]
[-35.73711395 -230.45494080]
[-41.47477722 -246.62187195]
[-33.89738846 -261.63513184]
[-39.19213104 -275.66958618]
[-44.48686981 -289.70404053]
[-49.78160858 -303.73849487]
[-64.89228821 -303.01559448]
[-79.48625183 -306.99948120]
[-92.13373566 -315.29986572]
[-101.59565735 -327.10354614]
[-106.94505310 -341.25415039]
[-107.65782928 -356.36529541]
[-103.66415405 -370.95660400]
[-95.35529327 -383.59851074]
[-83.54526520 -393.05252075]
[-69.39109802 -398.39242554]
[-54.27946472 -399.09509277]
[-39.69085312 -395.09164429]
[-27.05450439 -386.77432251]
[-17.60840416 -374.95794678]
[-12.27798271 -360.80020142]
[-11.58545971 -345.68811035]
[-15.59868145 -331.10217285]
[-23.92447472 -318.47140503]
[-35.74716187 -309.03323364]
[-30.45242119 -294.99877930]
[-25.15768242 -280.96432495]
[-19.86294174 -266.92987061]
[-7.49401045 -263.31570435]
[0.65614241 -253.08432007]
[1.43638945 -239.83192444]
[-5.66184378 -228.38400269]
[-0.57865363 -214.27156067]
[4.50453663 -200.15911865]
[9.58772659 -186.04666138]
[14.67091656 -171.93421936]
[19.75410652 -157.82176208]
[24.83729744 -143.70932007]
[29.92048836 -129.59687805]
[35.00367737 -115.48442841]
[46.13646317 -112.98068237]
[54.76704407 -105.33406067]
[58.67404556 -94.35808563]
[56.77761841 -82.74137115]
[49.43481445 -73.38915253]
[54.09150696 -59.13029099]
[58.74819946 -44.87142944]
[74.62351227 -43.05423355]
[88.16654968 -34.46488571]
[96.63904572 -20.77996254]
[98.30182648 -4.71223068]
[92.77155304 10.52706528]
[81.10758209 21.86998749]
[85.97807312 36.05724716]
[90.84856415 50.24450684]
[95.71906281 64.43176270]
[100.58955383 78.61901855]
[113.74752808 81.81021118]
[123.10185242 92.75290680]
[124.35739899 107.95425415]
[116.04779816 121.75643921]
[127.81533051 131.05833435]
[139.58285522 140.36022949]
[151.35038757 149.66212463]
[163.11791992 158.96401978]
[174.88545227 168.26591492]
[186.65296936 177.56781006]
[200.69926453 168.65156555]
[216.92407227 165.08798218]
[233.36306763 167.29048157]
[248.03211975 174.97552490]
[259.16677856 187.19888306]
[265.43453979 202.47166443]
[266.09429932 218.94165039]
[261.08386230 234.61793518]
[273.12567139 243.56192017]
[285.16748047 252.50588989]
[297.20932007 261.44985962]
[309.25112915 270.39382935]
[321.29293823 279.33782959]
[334.10388184 274.24914551]
[347.64883423 276.14047241]
[358.40420532 284.41180420]
[363.62561035 296.81762695]
[362.04763794 310.07565308]
[373.95364380 319.19961548]
[385.85964966 328.32357788]
[397.76568604 337.44754028]
[409.67169189 346.57150269]
[421.57769775 355.69549561]
[428.07507324 356.93194580]
[432.33261108 360.69927979]
[433.69900513 365.27700806]
[445.32537842 374.75473022]
[456.95175171 384.23245239]
[468.57815552 393.71017456]
[480.20452881 403.18789673]
[491.83090210 412.66561890]
[503.45730591 422.14334106]
[519.15295410 420.29339600]
[531.50762939 430.14923096]
[533.19152832 445.86355591]
[523.20562744 458.11334229]
[507.47433472 459.63101196]
[495.33084106 449.51614380]
[493.97958374 433.76971436]
[482.35317993 424.29199219]
[470.72680664 414.81427002]
[459.10043335 405.33654785]
[447.47402954 395.85882568]
[435.84765625 386.38110352]
[424.22128296 376.90338135]
[412.45373535 367.60150146]
[400.54772949 358.47753906]
[388.64172363 349.35357666]
[376.73568726 340.22961426]
[364.82968140 331.10562134]
[352.92364502 321.98165894]
[337.34533691 327.15560913]
[321.59475708 321.97314453]
[311.94061279 308.28833008]
[312.34896851 291.37963867]
[300.30715942 282.43566895]
[288.26531982 273.49166870]
[276.22351074 264.54769897]
[264.18170166 255.60372925]
[252.13989258 246.65974426]
[241.29026794 254.64250183]
[228.61566162 259.25186157]
[215.13914490 260.10568237]
[201.95135498 257.12539673]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 144]
[6 143]
[7 142]
[8 141]
[9 140]
[10 139]
[11 138]
[12 51]
[13 50]
[14 49]
[15 48]
[16 47]
[17 46]
[18 45]
[21 42]
[22 41]
[23 39]
[24 38]
[25 37]
[26 36]
[28 34]
[29 33]
[53 134]
[54 133]
[55 132]
[56 131]
[57 130]
[64 124]
[65 123]
[66 122]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
[75 111]
[76 110]
[77 109]
[80 105]
[81 104]
[82 103]
[83 102]
[152 204]
[153 203]
[154 202]
[155 201]
[156 200]
[157 199]
[162 195]
[163 194]
[164 193]
[165 192]
[166 191]
[167 190]
[170 189]
[171 188]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
