%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCUCAGGCCACCGUUCCCGGCGCGCAGUCGCAGCUGACCCUCGCUCCCGCCCCCGCCUGGAGUCCGACGUGGAAGUUGCUGGCUGACUGGGCUUGCGAGGAAACCGCCUCGGAGCUGCAGCCGAAGGCCAAGGAAUCACUGAAGAUCGGCGAGGGAGGACAGGGGGUUCAUC\
) } def
/len { sequence length } bind def

/coor [
[80.86536407 339.60952759]
[80.86536407 324.60952759]
[80.86536407 309.60952759]
[80.86536407 294.60952759]
[78.94651794 292.52395630]
[77.75201416 289.54052734]
[77.63262939 285.93637085]
[78.83047485 282.11190796]
[81.43897247 278.54898071]
[82.50905609 263.58718872]
[83.57914734 248.62542725]
[84.64923096 233.66363525]
[77.83959961 220.41682434]
[86.54167938 207.20378113]
[87.61176300 192.24200439]
[77.69416046 181.18864441]
[78.56624603 166.00003052]
[90.22727203 155.67247009]
[91.29735565 140.71069336]
[92.36744690 125.74891663]
[79.74864197 117.63929749]
[66.58345795 124.82803345]
[53.41827393 132.01676941]
[40.25308990 139.20550537]
[27.15258598 146.51144409]
[14.11781025 153.93402100]
[1.08303452 161.35659790]
[-6.72941017 175.77526855]
[-23.12764549 175.94827271]
[-31.24257088 161.69766235]
[-22.72624969 147.68322754]
[-6.33954048 148.32182312]
[6.69523525 140.89924622]
[19.73001099 133.47666931]
[24.00042152 127.41477203]
[33.06435394 126.04032135]
[46.22953796 118.85158539]
[59.39472198 111.66284943]
[72.55990601 104.47411346]
[82.28991699 85.01237488]
[99.91609192 81.40109253]
[105.90278625 67.64756012]
[111.88947296 53.89403534]
[117.87616730 40.14050674]
[123.86286163 26.38698006]
[129.84954834 12.63345242]
[135.83624268 -1.12007535]
[154.51853943 -32.68946075]
[156.91793823 -47.49631500]
[159.31732178 -62.30316925]
[151.29576111 -80.77377319]
[164.08479309 -95.25142670]
[165.95416260 -110.13449097]
[167.82353210 -125.01754761]
[158.40138245 -137.42161560]
[160.50920105 -152.48851013]
[172.39263916 -161.39465332]
[174.26202393 -176.27772522]
[168.30488586 -190.93457031]
[177.56799316 -202.59835815]
[179.43736267 -217.48141479]
[181.30674744 -232.36447144]
[175.34960938 -247.02131653]
[184.61271667 -258.68511963]
[186.48208618 -273.56817627]
[188.21856689 -288.46731567]
[189.82199097 -303.38137817]
[191.42541504 -318.29541016]
[193.02883911 -333.20947266]
[194.63226318 -348.12353516]
[188.41447449 -362.67172241]
[197.46792603 -374.49899292]
[199.07135010 -389.41302490]
[200.67477417 -404.32708740]
[202.27819824 -419.24114990]
[188.48637390 -430.97027588]
[184.50645447 -448.47152710]
[191.74211121 -464.72491455]
[207.13661194 -473.32614136]
[208.20669556 -488.28793335]
[209.27677917 -503.24969482]
[210.34686279 -518.21148682]
[203.61376953 -532.52844238]
[212.23931885 -544.67132568]
[213.30940247 -559.63311768]
[214.37948608 -574.59490967]
[215.44958496 -589.55670166]
[206.07257080 -602.57403564]
[210.54202271 -617.98193359]
[225.42936707 -623.96075439]
[239.31430054 -615.92407227]
[241.54548645 -600.03692627]
[230.41136169 -588.48657227]
[229.34127808 -573.52484131]
[228.27117920 -558.56304932]
[227.20109558 -543.60125732]
[234.01072693 -530.35443115]
[225.30865479 -517.14141846]
[224.23855591 -502.17962646]
[223.16847229 -487.21783447]
[222.09838867 -472.25604248]
[232.47053528 -465.87823486]
[239.17576599 -455.62814331]
[240.88407898 -443.42642212]
[237.20874023 -431.59091187]
[228.79168701 -422.39648438]
[217.19226074 -417.63772583]
[215.58883667 -402.72366333]
[213.98539734 -387.80960083]
[212.38197327 -372.89556885]
[218.71446228 -359.41412354]
[209.54632568 -346.52011108]
[207.94290161 -331.60604858]
[206.33947754 -316.69198608]
[204.73603821 -301.77795410]
[203.13261414 -286.86389160]
[205.55175781 -279.85455322]
[201.36515808 -271.69879150]
[199.49577332 -256.81573486]
[205.58662415 -243.22341919]
[196.18980408 -230.49510193]
[194.32043457 -215.61204529]
[192.45104980 -200.72897339]
[198.54190063 -187.13667297]
[189.14508057 -174.40834045]
[187.27571106 -159.52528381]
[196.58746338 -147.95693970]
[194.90367126 -132.83677673]
[182.70658875 -123.14817047]
[180.83721924 -108.26511383]
[178.96784973 -93.38205719]
[185.95980835 -85.87644196]
[187.68528748 -75.54174805]
[183.33213806 -65.76978302]
[174.12417603 -59.90377426]
[171.72477722 -45.09692383]
[169.32539368 -30.29006767]
[176.51412964 -17.12488365]
[190.26765442 -11.13819122]
[204.02117920 -5.15149975]
[218.63444519 -11.17045975]
[233.19131470 -5.01632547]
[239.05543518 9.65976429]
[232.74774170 24.15074539]
[218.01046753 29.85937691]
[203.58699036 23.39882851]
[198.03448486 8.60202789]
[184.28096008 2.61533570]
[170.52743530 -3.37135625]
[172.35542297 11.51684189]
[158.39700317 17.00884819]
[149.58976746 4.86661673]
[143.60307312 18.62014389]
[137.61637878 32.37367249]
[131.62969971 46.12720108]
[125.64300537 59.88072586]
[119.65631104 73.63425446]
[113.66961670 87.38777924]
[122.30094910 106.39871979]
[107.32922363 126.81900024]
[106.25914001 141.78077698]
[105.18904877 156.74256897]
[115.26161957 168.62452698]
[113.96326447 183.78266907]
[102.57354736 193.31208801]
[101.50345612 208.27388000]
[108.23655701 222.59085083]
[99.61101532 234.73373413]
[98.54092407 249.69551086]
[97.47084045 264.65728760]
[96.40074921 279.61907959]
[95.86536407 294.60952759]
[95.86536407 309.60952759]
[95.86536407 324.60952759]
[95.86536407 339.60952759]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[3 173]
[4 172]
[9 171]
[10 170]
[11 169]
[12 168]
[14 166]
[15 165]
[18 162]
[19 161]
[20 160]
[21 39]
[22 38]
[23 37]
[24 36]
[25 34]
[26 33]
[27 32]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[47 152]
[48 137]
[49 136]
[50 135]
[52 131]
[53 130]
[54 129]
[57 126]
[58 125]
[60 123]
[61 122]
[62 121]
[64 119]
[65 118]
[66 116]
[67 115]
[68 114]
[69 113]
[70 112]
[72 110]
[73 109]
[74 108]
[75 107]
[79 101]
[80 100]
[81 99]
[82 98]
[84 96]
[85 95]
[86 94]
[87 93]
[138 149]
[139 148]
[140 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
