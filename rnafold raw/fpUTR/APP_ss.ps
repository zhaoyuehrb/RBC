%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUCAGCUGACUCGCCUGGCUCUGAGCCCCGCCGCCGCGCUCGGGCUCCGUCAGUUUCCUCGGCAGCGGUAGGCGAGAGCACGCGGAGGAGCGUGCGCGGGGGCCCCGGGAGACGGCGGCGGUGGCGGCGCGGGCAGAGCAAGGACGCGGCGGAUCCCACUCGCACAGCAGCGCACUCGGUGCCCCGCGCAGGGUCGCG\
) } def
/len { sequence length } bind def

/coor [
[567.16522217 658.47613525]
[558.01055908 646.59368896]
[548.85589600 634.71124268]
[539.70129395 622.82879639]
[530.54663086 610.94635010]
[516.64984131 605.58642578]
[514.35662842 589.93231201]
[505.20199585 578.04986572]
[496.04733276 566.16741943]
[486.89266968 554.28497314]
[483.45364380 553.47308350]
[480.23876953 550.95031738]
[478.05001831 546.84112549]
[477.60305786 541.62420654]
[469.01544189 529.32574463]
[460.33193970 517.09472656]
[451.55313110 504.93197632]
[442.77435303 492.76922607]
[429.05187988 486.97760010]
[427.24905396 471.25942993]
[418.47027588 459.09667969]
[409.69146729 446.93392944]
[400.91265869 434.77117920]
[392.13385010 422.60839844]
[383.35504150 410.44564819]
[360.68502808 403.52511597]
[358.04345703 379.25759888]
[347.98907471 368.12612915]
[337.93472290 356.99465942]
[327.79367065 345.94210815]
[317.56655884 334.96914673]
[307.33941650 323.99615479]
[297.11230469 313.02319336]
[286.88519287 302.05023193]
[276.65808105 291.07727051]
[266.43096924 280.10427856]
[256.20385742 269.13131714]
[245.97673035 258.15835571]
[235.66416931 247.26564026]
[221.26522827 243.45516968]
[217.27645874 228.14503479]
[206.87910461 217.33323669]
[196.48173523 206.52145386]
[186.08436584 195.70967102]
[175.68699646 184.89787292]
[165.28962708 174.08609009]
[154.72454834 163.43812561]
[143.99435425 152.95658875]
[133.26414490 142.47503662]
[122.53394318 131.99349976]
[111.80373383 121.51195526]
[101.07353210 111.03041840]
[110.08710480 123.02022552]
[111.56356812 137.94738770]
[105.07351685 151.47067261]
[92.50444794 159.65715027]
[77.51177216 160.12597656]
[64.45578003 152.74078369]
[57.13349152 139.64941406]
[57.67503357 124.65729523]
[45.17861938 116.36032867]
[32.68220901 108.06336212]
[20.18579483 99.76639557]
[4.40921021 98.57898712]
[-1.91406405 85.09323883]
[-16.86189270 89.68632507]
[-31.24476242 83.54897308]
[-38.27151871 69.57904816]
[-34.62434769 54.37273407]
[-22.02532578 45.10997391]
[-6.42333031 46.16436768]
[4.81485510 57.03805923]
[6.38290310 72.59682465]
[21.26566124 73.19078064]
[28.48276329 87.26998138]
[40.97917557 95.56694794]
[53.47558975 103.86391449]
[65.97200012 112.16088867]
[71.80428314 107.44554138]
[89.30112457 93.29949951]
[83.80542755 79.34252167]
[78.30972290 65.38554382]
[72.81402588 51.42856216]
[67.31832123 37.47158051]
[61.82262421 23.51460266]
[47.23181534 17.44139481]
[41.28628922 2.79809284]
[47.51342010 -11.72769070]
[62.21876526 -17.51806641]
[76.67789459 -11.13770771]
[82.31247711 3.62803197]
[75.77960205 18.01890182]
[81.27530670 31.97588158]
[86.77100372 45.93286133]
[92.26670837 59.88983917]
[97.76240540 73.84681702]
[103.25811005 87.80379486]
[111.55507660 100.30020905]
[122.28527832 110.78175354]
[133.01548767 121.26329041]
[143.74568176 131.74484253]
[154.47589111 142.22637939]
[165.20610046 152.70791626]
[171.51919556 154.71524048]
[175.29818726 158.97341919]
[176.10142517 163.68872070]
[186.49877930 174.50050354]
[196.89614868 185.31230164]
[207.29351807 196.12408447]
[217.69088745 206.93588257]
[228.08825684 217.74766541]
[243.23088074 222.33146667]
[246.47595215 236.86827087]
[254.68708801 240.88903809]
[256.94970703 247.93122864]
[267.17681885 258.90420532]
[277.40393066 269.87716675]
[287.63104248 280.85012817]
[297.85815430 291.82312012]
[308.08529663 302.79608154]
[318.31240845 313.76904297]
[328.53952026 324.74203491]
[338.76663208 335.71499634]
[346.91390991 339.86358643]
[349.06619263 346.94030762]
[359.12054443 358.07177734]
[369.17492676 369.20324707]
[375.34036255 367.75506592]
[381.62451172 368.08679199]
[387.52700806 370.14938354]
[392.58428955 373.75692749]
[396.40588379 378.60321045]
[398.70446777 384.28744507]
[399.31759644 390.34753418]
[398.21875000 396.29760742]
[395.51782227 401.66683960]
[404.29660034 413.82962036]
[413.07540894 425.99237061]
[421.85421753 438.15512085]
[430.63302612 450.31787109]
[439.41180420 462.48062134]
[453.76220703 469.14224243]
[454.93710327 483.99041748]
[463.71591187 496.15316772]
[472.49468994 508.31594849]
[480.06100464 513.44824219]
[481.31390381 520.73809814]
[489.90155029 533.03656006]
[498.77511597 545.13037109]
[507.92977905 557.01275635]
[517.08441162 568.89520264]
[526.23907471 580.77764893]
[540.79064941 586.98748779]
[542.42907715 601.79168701]
[551.58367920 613.67413330]
[560.73834229 625.55657959]
[569.89300537 637.43902588]
[579.04766846 649.32147217]
[578.12548828 634.34985352]
[583.17718506 620.22607422]
[593.38537598 609.23553467]
[607.09832764 603.15643311]
[622.09722900 602.97253418]
[635.95507812 608.71356201]
[646.42968750 619.45050049]
[651.82617188 633.44616699]
[651.27136230 648.43591309]
[644.85498047 661.99432373]
[633.61529541 671.92755127]
[619.37091064 676.62835693]
[604.42663574 675.33612061]
[591.19860840 668.25830078]
[598.18542480 681.53173828]
[605.17224121 694.80517578]
[611.94427490 700.94763184]
[612.16271973 708.34112549]
[618.94122314 721.72216797]
[625.71972656 735.10321045]
[632.49822998 748.48425293]
[645.63671875 757.29846191]
[644.48596191 772.14849854]
[651.26446533 785.52954102]
[658.04296875 798.91058350]
[664.82147217 812.29162598]
[677.37292480 823.68884277]
[669.89569092 838.90484619]
[653.20440674 835.93206787]
[651.44049072 819.07012939]
[644.66198730 805.68908691]
[637.88348389 792.30804443]
[631.10498047 778.92700195]
[618.45129395 771.06994629]
[619.11718750 755.26275635]
[612.33868408 741.88171387]
[605.56018066 728.50067139]
[598.78167725 715.11962891]
[591.89880371 701.79199219]
[584.91198730 688.51855469]
[577.92517090 675.24511719]
[571.80651855 672.81335449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[3 156]
[4 155]
[5 154]
[7 152]
[8 151]
[9 150]
[10 149]
[14 148]
[15 147]
[16 145]
[17 144]
[18 143]
[20 141]
[21 140]
[22 139]
[23 138]
[24 137]
[25 136]
[27 127]
[28 126]
[29 125]
[30 123]
[31 122]
[32 121]
[33 120]
[34 119]
[35 118]
[36 117]
[37 116]
[38 115]
[39 113]
[41 111]
[42 110]
[43 109]
[44 108]
[45 107]
[46 106]
[47 103]
[48 102]
[49 101]
[50 100]
[51 99]
[52 98]
[60 78]
[61 77]
[62 76]
[63 75]
[65 73]
[80 97]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[172 199]
[173 198]
[174 197]
[176 196]
[177 195]
[178 194]
[179 193]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
