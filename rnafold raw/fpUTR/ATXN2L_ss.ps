%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGCGAGACCCCCUCCCCUUCCGCCUCGCGGCGCUUCCUCGCGCCGCGGUCUUCUCUCUCCACCCCCGACACCGCGGGGCUCCCCCCGCCCGCCCACGGCGGGCCCCGGCUGCCCGAUCCCCCUCGCUUCCCGCGCUCUCCAGCGGGGCCCCAGCCCCGGCCCCCUCUCUCCCUCCCUUCUCUCUAAUUCCCCUUCCGGACGCUGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[137.45523071 246.86619568]
[129.04379272 244.25849915]
[121.44819641 257.19320679]
[113.85260010 270.12792969]
[106.25700378 283.06265259]
[98.66141510 295.99737549]
[91.06581879 308.93209839]
[83.47022247 321.86679077]
[75.87462616 334.80151367]
[85.75074005 346.27938843]
[91.36256409 360.34301758]
[92.10137939 375.46694946]
[87.88703918 390.01058960]
[79.17668152 402.39642334]
[66.91514587 411.28085327]
[52.43246841 415.70022583]
[37.29962158 415.17514038]
[23.15810776 409.76254272]
[11.54188824 400.04953003]
[3.71100521 387.08975220]
[0.51489449 372.28897095]
[2.30024576 357.25262451]
[8.87339783 343.61178589]
[19.52134323 332.84609985]
[33.08907318 326.12335205]
[48.10486221 324.17276001]
[62.93991089 327.20593262]
[70.53550720 314.27120972]
[78.13110352 301.33648682]
[85.72669220 288.40176392]
[93.32228851 275.46704102]
[100.91788483 262.53234863]
[108.51348114 249.59761047]
[116.10906982 236.66290283]
[108.49871826 229.23326111]
[102.55786896 220.39666748]
[98.54074097 210.52226257]
[96.62107849 200.02374268]
[96.88462067 189.34210205]
[99.32528687 178.92706299]
[103.84524536 169.21812439]
[110.25881195 160.62606812]
[118.30006409 153.51553345]
[111.48035431 140.15545654]
[104.66064453 126.79538727]
[97.84092712 113.43531036]
[86.23262787 103.93545532]
[71.78756714 99.89313507]
[57.34251404 95.85081482]
[42.89745712 91.80849457]
[28.45240021 87.76617432]
[14.00734425 83.72385406]
[2.40541410 89.35699463]
[-9.54199696 85.69384003]
[-15.59074974 75.21929932]
[-29.97461510 70.96437073]
[-39.82859802 82.57553101]
[-53.55615234 89.16902161]
[-68.77890015 89.60248566]
[-82.85940552 83.80081940]
[-93.35813141 72.76920319]
[-98.45612335 58.41892624]
[-97.27011108 43.23626328]
[-90.00557709 29.85170174]
[-77.92115784 20.58419609]
[-63.11054230 17.03940010]
[-48.13976288 19.83146858]
[-35.60259628 28.47665977]
[-27.67118454 41.47714233]
[-25.71968842 56.58050537]
[-11.33582306 60.83543396]
[5.48171520 55.81944656]
[18.04966545 69.27880096]
[32.49472046 73.32112122]
[46.93977737 77.36344147]
[61.38483429 81.40576172]
[75.82988739 85.44808197]
[90.27494812 89.49040222]
[100.99822235 79.00177002]
[97.27645111 64.47082520]
[93.55467224 49.93988037]
[89.83289337 35.40893555]
[76.51668549 27.32708549]
[72.94927216 12.53762245]
[80.73614502 -0.10754292]
[77.01437378 -14.63848877]
[62.74373627 -20.43979454]
[54.71923828 -33.38046265]
[55.84010696 -48.38738251]
[65.46749115 -59.72102737]
[61.74571228 -74.25196838]
[58.02393723 -88.78292084]
[54.30216217 -103.31386566]
[50.58038330 -117.84481049]
[46.85860825 -132.37574768]
[43.13683319 -146.90670776]
[33.34958267 -160.75033569]
[43.94281769 -173.98738098]
[59.59506607 -167.47251892]
[57.66777802 -150.62847900]
[61.38955307 -136.09753418]
[65.11132812 -121.56658173]
[68.83310699 -107.03563690]
[72.55488586 -92.50469208]
[76.27665710 -77.97374725]
[79.99843597 -63.44280243]
[93.88874054 -58.13268661]
[102.08571625 -45.51232529]
[101.27007294 -30.30745316]
[91.54531860 -18.36026382]
[95.26708984 -3.82931900]
[108.17398071 3.51560473]
[112.15538788 18.19903183]
[104.36384583 31.68716049]
[108.08561707 46.21810532]
[111.80739594 60.74905014]
[115.52917480 75.27999878]
[119.22951508 60.74357605]
[128.75193787 49.15377808]
[141.40855408 41.10330582]
[155.94213867 37.39184189]
[170.90901184 38.38805389]
[184.82247925 43.99299240]
[196.30047607 53.64989471]
[204.20283508 66.39950562]
[207.74459839 80.97537994]
[206.57395935 95.92962646]
[200.80717468 109.77680206]
[191.01710510 121.14141846]
[178.17622375 128.89459229]
[163.56005859 132.26617432]
[148.62046814 130.92126465]
[134.84147644 124.99343109]
[123.59101868 115.07062531]
[111.20100403 106.61560059]
[118.02071381 119.97566986]
[124.84042358 133.33573914]
[131.66014099 146.69581604]
[154.40133667 144.33940125]
[175.93008423 151.89392090]
[192.14517212 167.87757874]
[199.97584534 189.20686340]
[197.96331787 211.79147339]
[211.47099304 218.31396484]
[224.97866821 224.83645630]
[238.48632812 231.35894775]
[253.25199890 233.99996948]
[268.18310547 232.56413269]
[283.11422729 231.12828064]
[298.04534912 229.69242859]
[312.97647095 228.25657654]
[327.90759277 226.82072449]
[335.66842651 213.38386536]
[349.85873413 207.10569763]
[365.02200317 210.40029907]
[375.32769775 222.00083923]
[376.81304932 237.44665527]
[368.90689087 250.79853821]
[354.64935303 256.92239380]
[339.52267456 253.46348572]
[329.34344482 241.75184631]
[314.41232300 243.18769836]
[299.48120117 244.62355042]
[284.55007935 246.05938721]
[269.61895752 247.49523926]
[254.68785095 248.93109131]
[251.13105774 255.53405762]
[264.92272949 261.43234253]
[278.71438599 267.33062744]
[292.50607300 273.22891235]
[306.29776001 279.12719727]
[320.08941650 285.02548218]
[333.88110352 290.92376709]
[347.67276001 296.82205200]
[361.46444702 302.72033691]
[376.33944702 304.65277100]
[387.06195068 315.14215088]
[389.32083130 329.97109985]
[382.20785522 343.17736816]
[368.58288574 349.45117188]
[353.92407227 346.26998901]
[344.12445068 334.91091919]
[331.61108398 326.63955688]
[319.09768677 318.36819458]
[306.58432007 310.09683228]
[294.07095337 301.82546997]
[281.55758667 293.55410767]
[269.04418945 285.28274536]
[256.53082275 277.01135254]
[244.01745605 268.73999023]
[240.46066284 275.34295654]
[247.47666931 288.60101318]
[254.49269104 301.85903931]
[269.66912842 306.26934814]
[277.20861816 320.15936279]
[272.63809204 335.28833008]
[258.66915894 342.68054199]
[243.58937073 337.95031738]
[236.34526062 323.90402222]
[241.23464966 308.87506104]
[234.21864319 295.61703491]
[227.20262146 282.35897827]
[222.82728577 259.93850708]
[231.96383667 244.86662292]
[218.45617676 238.34413147]
[204.94850159 231.82164001]
[191.44082642 225.29914856]
[185.90205383 232.14561462]
[179.28379822 237.95518494]
[171.77726746 242.56001282]
[163.59931946 245.82707214]
[154.98622131 247.66197205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[3 33]
[4 32]
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[43 138]
[44 137]
[45 136]
[46 135]
[47 78]
[48 77]
[49 76]
[50 75]
[51 74]
[52 73]
[55 71]
[56 70]
[79 117]
[80 116]
[81 115]
[82 114]
[85 111]
[86 110]
[90 106]
[91 105]
[92 104]
[93 103]
[94 102]
[95 101]
[96 100]
[143 207]
[144 206]
[145 205]
[146 204]
[147 166]
[148 165]
[149 164]
[150 163]
[151 162]
[152 161]
[191 202]
[192 201]
[193 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
