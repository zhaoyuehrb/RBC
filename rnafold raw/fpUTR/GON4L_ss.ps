%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCGCAUAGUGUUAGGCGCAUGCUCCUUGAUGCACUGCGGCGCGGCGCUCCGAGGCUCGGGGACGCGCACGCAAUUCGCUGUUGUUGGCUGACUUCCGGUGGUGCCAAAGCCGUUUCCGUGGAAUCAGGCCGGCUGGUGAGGGUACAGAAUGGAACAAAAGUGGGACUUUUAAA\
) } def
/len { sequence length } bind def

/coor [
[92.72571564 134.37127686]
[97.20787048 120.05971527]
[89.78529358 133.09449768]
[89.68003845 148.91534424]
[76.65850067 156.14645386]
[69.23592377 169.18122864]
[61.81335068 182.21600342]
[54.39077377 195.25077820]
[52.85475540 204.28872681]
[46.71759796 208.45025635]
[39.06354904 221.35047913]
[31.40949821 234.25068665]
[23.75544739 247.15089417]
[20.87315178 263.85803223]
[4.02102852 265.71337891]
[-2.42693853 250.03346252]
[10.85523415 239.49685669]
[18.50928497 226.59663391]
[26.16333580 213.69642639]
[33.81738663 200.79620361]
[41.35599899 187.82820129]
[48.77857208 174.79342651]
[56.20114899 161.75865173]
[63.62372589 148.72387695]
[63.19806671 133.83535767]
[76.75051880 125.67192078]
[84.17309570 112.63714600]
[81.80459595 105.52095032]
[69.04147339 113.40146637]
[59.03121185 124.57262421]
[44.03134918 124.63703918]
[33.92551422 113.55226898]
[35.37258911 98.62223053]
[47.41907501 89.68454742]
[62.12757492 92.62854004]
[77.06760406 91.28855896]
[74.69910431 84.17236328]
[60.94557953 78.18567657]
[47.19205475 72.19898224]
[33.43852615 66.21228790]
[19.63211632 60.34858322]
[5.77392244 54.60833359]
[-8.08427048 48.86808014]
[-21.94246292 43.12783051]
[-35.80065536 37.38757706]
[-45.63041306 42.13860703]
[-56.23186111 40.70659256]
[-64.11749268 33.80731964]
[-66.82849121 23.91427803]
[-80.47296906 17.68305397]
[-94.11745453 11.45182800]
[-107.76193237 5.22060299]
[-121.40641022 -1.01062214]
[-135.05088806 -7.24184752]
[-151.97041321 -8.32171631]
[-155.61653137 -24.87895393]
[-140.71571350 -32.96608353]
[-128.81967163 -20.88632774]
[-115.17518616 -14.65510178]
[-101.53070831 -8.42387676]
[-87.88622284 -2.19265175]
[-74.24174500 4.03857374]
[-60.59726715 10.26979923]
[-41.55898285 6.99785757]
[-30.06040573 23.52938652]
[-16.20221138 29.26963806]
[-2.34401894 35.00988770]
[11.51417351 40.75014114]
[25.37236786 46.49039078]
[32.77932739 46.14400864]
[39.42521667 52.45876312]
[53.17874527 58.44545364]
[66.93227386 64.43214417]
[80.68579865 70.41883850]
[96.41133118 72.66907501]
[106.17875671 81.18578339]
[108.33980560 91.31598663]
[122.19799805 85.57572937]
[136.05619812 79.83547974]
[149.91438293 74.09523010]
[163.77258301 68.35498047]
[173.56134033 55.92554855]
[188.28074646 58.20336533]
[202.13893127 52.46311188]
[215.99713135 46.72286224]
[229.85531616 40.98261261]
[243.71351624 35.24235916]
[250.36415100 16.31514168]
[268.49050903 8.45363235]
[286.29724121 16.28755760]
[299.82830811 9.81378460]
[313.35940552 3.34001136]
[326.83218384 -3.25426698]
[340.24554443 -9.96852493]
[353.65893555 -16.68278313]
[367.07229614 -23.39704132]
[380.30111694 -30.46799278]
[393.33590698 -37.89056778]
[406.37066650 -45.31314087]
[419.40545654 -52.73571777]
[432.44021606 -60.15829468]
[440.60366821 -73.71074677]
[455.49218750 -73.28508759]
[461.42498779 -80.27407837]
[468.82653809 -80.72144318]
[481.99169922 -87.91017914]
[495.15689087 -95.09891510]
[495.37460327 -111.61671448]
[503.83590698 -125.69512177]
[518.15539551 -133.54849243]
[534.38763428 -133.12078857]
[548.11419678 -124.62293243]
[561.14898682 -132.04550171]
[574.18377686 -139.46807861]
[578.12274170 -154.77363586]
[591.77301025 -162.73896790]
[607.03607178 -158.63838196]
[614.85662842 -144.90469360]
[610.59490967 -129.68585205]
[596.77929688 -122.01091766]
[581.60632324 -126.43330383]
[568.57159424 -119.01072693]
[555.53680420 -111.58815002]
[556.35382080 -97.93820190]
[551.17877197 -85.20938873]
[540.97076416 -75.91282654]
[527.68798828 -71.90906525]
[513.91192627 -74.03587341]
[502.34564209 -81.93373108]
[489.18045044 -74.74499512]
[476.01525879 -67.55625916]
[462.91476440 -60.25031281]
[455.68365479 -47.22877502]
[439.86279297 -47.12351608]
[426.82803345 -39.70094299]
[413.79324341 -32.27836609]
[400.75848389 -24.85579109]
[387.72369385 -17.43321609]
[386.44525146 -14.11445904]
[383.47772217 -11.25970554]
[379.06149292 -9.66425514]
[373.78656006 -9.98366261]
[360.37319946 -3.26940417]
[346.95980835 3.44485402]
[333.54641724 10.15911198]
[328.95767212 15.98375225]
[319.83319092 16.87109566]
[306.30209351 23.34486961]
[292.77099609 29.81864166]
[292.08181763 40.11614227]
[287.12686157 49.26158905]
[278.74777222 55.56012726]
[268.42739868 57.81273651]
[258.02767944 55.54401016]
[249.45376587 49.10055161]
[235.59556580 54.84080505]
[221.73738098 60.58105469]
[207.87918091 66.32130432]
[194.02099609 72.06156158]
[185.22346497 84.08040619]
[169.51283264 82.21317291]
[155.65463257 87.95342255]
[141.79644775 93.69367218]
[127.93824768 99.43392944]
[114.08005524 105.17417908]
[128.84169006 102.51065826]
[143.35906982 106.28499603]
[154.95417786 115.80094910]
[161.48808289 129.30310059]
[161.75544739 144.30072021]
[155.70697021 158.02719116]
[144.45841980 167.95039368]
[130.08479309 172.23979187]
[115.23760986 170.10412598]
[102.65571594 161.93736267]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 27]
[3 26]
[5 24]
[6 23]
[7 22]
[8 21]
[10 20]
[11 19]
[12 18]
[13 17]
[37 74]
[38 73]
[39 72]
[40 71]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[54 58]
[77 165]
[78 164]
[79 163]
[80 162]
[81 161]
[83 159]
[84 158]
[85 157]
[86 156]
[87 155]
[90 149]
[91 148]
[92 147]
[93 145]
[94 144]
[95 143]
[96 142]
[97 138]
[98 137]
[99 136]
[100 135]
[101 134]
[103 132]
[105 131]
[106 130]
[107 129]
[112 123]
[113 122]
[114 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
