%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCCGAGCCCCGCCUCCUCCCCCUGCCCCGCCUCUCCCAUCCCCGCCCCGCCCCGCCCGGCGACUUAACGCGCCCCCGCCCCGCGCCCGGCCUCGGCAGCCGCCUGUCGCCGCGGGAGCAGCCGCUAUCUCUGUGUGUCCGCGUGUGCGCCCGGUCCCCGCCUGCCGCACC\
) } def
/len { sequence length } bind def

/coor [
[115.83993530 167.60791016]
[104.20252991 177.07209778]
[91.60549927 168.92871094]
[95.45718384 154.43232727]
[94.64041138 139.45457458]
[87.15153503 139.86296082]
[81.06708527 153.57353210]
[74.98262787 167.28408813]
[80.89739990 181.93983459]
[74.63978577 196.45251465]
[59.92232132 202.21200562]
[45.47661209 195.80130005]
[39.87304306 181.02377319]
[46.43611526 166.64663696]
[61.27206802 161.19963074]
[67.35652161 147.48907471]
[73.44097900 133.77850342]
[67.11913300 125.22583771]
[63.30280304 115.70338440]
[62.06671524 105.89872742]
[63.30660248 96.47379303]
[66.75693512 88.02042389]
[72.01916504 81.02320862]
[78.59796143 75.83196259]
[71.53451538 62.59912872]
[64.47106934 49.36629868]
[57.40763092 36.13347244]
[50.22432709 22.96532059]
[42.92176437 9.86293411]
[35.61919785 -3.23945212]
[28.31662941 -16.34183884]
[21.01406288 -29.44422531]
[26.58964729 -15.51896477]
[26.22716141 -0.52334493]
[19.98526001 13.11625481]
[8.87391949 23.19286537]
[-5.30898094 28.07603455]
[-20.26856422 26.97563553]
[-33.58428192 20.06971741]
[-43.10157013 8.47570229]
[-47.28047943 -5.93043280]
[-45.44483185 -20.81768990]
[-37.89165497 -33.77722168]
[-25.84308815 -42.71210098]
[-11.24866486 -46.17661285]
[3.53256536 -43.60922623]
[-10.79911327 -48.03675079]
[-23.13767242 -38.62720108]
[-38.65131378 -38.30080032]
[-51.37472916 -47.18305206]
[-56.41550064 -61.85855103]
[-51.83535004 -76.68426514]
[-39.39544296 -85.95941162]
[-23.87917137 -86.11750031]
[-11.25286293 -77.09774780]
[-6.37158918 -62.36842728]
[7.96009016 -57.94090271]
[13.95486164 -62.44786835]
[25.94440460 -71.46179199]
[31.93917656 -75.96875763]
[31.66679955 -90.96628571]
[31.39442062 -105.96380615]
[31.12204361 -120.96133423]
[30.84966660 -135.95886230]
[30.57728958 -150.95639038]
[16.77777100 -157.38558960]
[7.17724371 -169.12088013]
[3.63845634 -183.80070496]
[6.81123686 -198.50085449]
[16.01392555 -210.31694031]
[29.37896156 -216.93821716]
[29.10658264 -231.93574524]
[28.69804573 -246.93017578]
[28.15337944 -261.92028809]
[27.60871506 -276.91040039]
[14.89927101 -285.61535645]
[9.81203747 -299.96713257]
[14.10039806 -314.39190674]
[25.91888046 -323.41748047]
[25.37421608 -338.40759277]
[24.82955170 -353.39770508]
[11.87840843 -361.94448853]
[6.45592022 -376.48327637]
[10.64714241 -391.42361450]
[22.84046555 -401.02059937]
[38.34730911 -401.58404541]
[51.20497131 -392.89727783]
[56.46942520 -378.30050659]
[52.11637497 -363.40655518]
[39.81966019 -353.94238281]
[40.36432266 -338.95227051]
[40.90898895 -323.96215820]
[53.35133362 -315.81808472]
[58.67524719 -301.74255371]
[54.64299774 -287.05944824]
[42.59882355 -277.45504761]
[43.14348984 -262.46496582]
[43.68815231 -247.47483826]
[47.08551788 -240.88099670]
[44.10411072 -232.20811462]
[44.37648773 -217.21060181]
[57.97313309 -211.07897949]
[67.59880829 -199.60484314]
[71.30327606 -185.02958679]
[68.29985809 -170.23095703]
[59.13178253 -158.15480042]
[45.57481766 -151.22875977]
[45.84719467 -136.23124695]
[46.11957169 -121.23371124]
[46.39194870 -106.23618317]
[46.66432571 -91.23866272]
[46.93670273 -76.24113464]
[34.11644745 -36.74679184]
[41.41901398 -23.64440536]
[48.72158051 -10.54201889]
[56.02414703 2.56036758]
[63.32671356 15.66275406]
[69.35126495 19.99007797]
[70.64045715 29.07002831]
[77.70390320 42.30285645]
[84.76734161 55.53568649]
[91.83078766 68.76851654]
[118.68933105 73.67794800]
[132.17868042 97.41654968]
[147.00033569 99.72270203]
[161.82200623 102.02885437]
[172.77790833 91.19952393]
[187.83370972 88.92445374]
[201.18432617 95.86889648]
[207.80648804 109.18373108]
[219.46047974 98.75691223]
[235.09173584 98.31221008]
[247.31967163 108.05960083]
[250.37062073 123.39667511]
[242.80401611 137.08172607]
[228.19258118 142.65309143]
[213.43539429 137.48014832]
[205.50033569 124.00539398]
[195.14576721 134.67875671]
[180.31636047 137.23858643]
[166.66352844 130.49664307]
[159.51585388 116.85051727]
[144.69418335 114.54436493]
[129.87252808 112.23821259]
[131.21920776 121.00150299]
[130.07464600 130.69013977]
[137.61393738 143.65776062]
[145.15321350 156.62538147]
[152.69250488 169.59300232]
[160.23178101 182.56062317]
[173.85696411 190.60208130]
[173.56497192 205.49382019]
[187.19015503 213.53526306]
[186.89816284 228.42701721]
[194.43745422 241.39463806]
[201.97673035 254.36225891]
[216.46493530 262.04495239]
[216.78514099 278.44097900]
[202.60794067 286.68350220]
[188.51762390 278.29330444]
[189.00910950 261.90155029]
[181.46981812 248.93391418]
[173.93054199 235.96629333]
[160.84461975 228.85237122]
[160.59735107 213.03309631]
[147.51142883 205.91918945]
[147.26416016 190.09991455]
[139.72488403 177.13229370]
[132.18559265 164.16465759]
[124.64630890 151.19703674]
[117.10703278 138.22941589]
[109.61815643 138.63780212]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 17]
[7 16]
[8 15]
[24 122]
[25 121]
[26 120]
[27 119]
[28 117]
[29 116]
[30 115]
[31 114]
[32 113]
[46 57]
[47 56]
[60 112]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[71 101]
[72 100]
[73 98]
[74 97]
[75 96]
[79 92]
[80 91]
[81 90]
[124 144]
[125 143]
[126 142]
[130 138]
[146 171]
[147 170]
[148 169]
[149 168]
[150 167]
[152 165]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
