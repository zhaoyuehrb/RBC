%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUCCCUGCCGCCCGGCCCGGCUCGCCCAGUCCAGUGGCUCCAGUCCGGAUCUCGCCGCCGCCCGGCCCAGGUGCGAGUCCCCACUGCUGGGGAGGCGGCGGGCCCCGGCUCCCCUCGGCCGCCUAGCCCGCCUCGCCCGCCCGGGGUUGGCGGGGAGGGAACAGCUGGGCGGCCCCAGAGCCCCUCGGAGGACA\
) } def
/len { sequence length } bind def

/coor [
[85.69651031 209.30284119]
[95.58032990 196.66600037]
[95.10199738 181.67362976]
[94.62365723 166.68125916]
[94.14532471 151.68888855]
[93.66699219 136.69651794]
[84.82957458 134.00881958]
[76.92556000 129.22860718]
[70.44127655 122.65001678]
[65.77569580 114.67781067]
[63.21586990 105.80250549]
[62.91931152 96.57017517]
[48.56737518 92.20875549]
[34.21544266 87.84733582]
[19.86351013 83.48590851]
[5.51157713 79.12448883]
[-1.02208304 80.25143433]
[-6.34088516 78.20867157]
[-9.22443199 74.38837433]
[-23.42998505 69.57150269]
[-37.63553619 64.75463104]
[-53.18944931 67.65055847]
[-62.75800705 56.23600769]
[-76.96356201 51.41913605]
[-91.16911316 46.60226440]
[-100.31303406 46.80920029]
[-105.56172180 41.59365463]
[-119.68865967 36.55086899]
[-133.81559753 31.50807762]
[-147.94252014 26.46529007]
[-162.06945801 21.42250061]
[-168.64953613 22.23569870]
[-173.86456299 19.94090843]
[-176.56211853 15.98708344]
[-190.52105713 10.49636650]
[-204.47999573 5.00564909]
[-218.43893433 -0.48506793]
[-232.39787292 -5.97578526]
[-246.35681152 -11.46650219]
[-238.91812134 1.55908501]
[-239.58876038 16.54408646]
[-248.16127014 28.85310936]
[-261.98388672 34.67854309]
[-276.78076172 32.21836853]
[-287.97470093 22.23361206]
[-292.10305786 7.81290674]
[-287.88876343 -6.58291388]
[-276.63543701 -16.50071335]
[-261.82626343 -18.87282944]
[-274.85632324 -26.30366898]
[-287.88638306 -33.73451233]
[-296.90274048 -35.27052307]
[-301.06362915 -41.38916397]
[-313.97354126 -49.02684402]
[-326.88345337 -56.66452408]
[-339.79336548 -64.30220032]
[-352.70327759 -71.93988037]
[-361.69400024 -73.61948395]
[-365.75677490 -79.80369568]
[-378.54327393 -87.64627075]
[-391.32974243 -95.48884583]
[-404.79187012 -88.09516907]
[-420.14691162 -88.43917084]
[-433.26443481 -96.42831421]
[-440.61587524 -109.91355896]
[-440.22375488 -125.26744080]
[-432.19351196 -138.35984802]
[-418.68530273 -145.66899109]
[-403.33273315 -145.22872925]
[-390.26553345 -137.15751648]
[-382.99877930 -123.62644958]
[-383.48715210 -108.27532196]
[-370.70068359 -100.43274689]
[-357.91421509 -92.59017181]
[-345.06561279 -84.84980011]
[-332.15570068 -77.21212006]
[-319.24578857 -69.57444000]
[-306.33587646 -61.93675613]
[-293.42596436 -54.29907608]
[-280.45556641 -46.76457596]
[-267.42547607 -39.33373642]
[-254.39541626 -31.90289307]
[-240.86610413 -25.42544365]
[-226.90715027 -19.93472672]
[-212.94821167 -14.44400883]
[-198.98927307 -8.95329094]
[-185.03033447 -3.46257424]
[-171.07139587 2.02814317]
[-157.02667236 7.29556608]
[-142.89973450 12.33835506]
[-128.77279663 17.38114357]
[-114.64586639 22.42393303]
[-100.51893616 27.46672249]
[-86.35224152 32.39670944]
[-72.14668274 37.21358109]
[-57.94113159 42.03045654]
[-43.40329742 38.78998947]
[-32.81866455 50.54907608]
[-18.61311150 55.36594772]
[-4.40755892 60.18282318]
[9.87300014 64.77255249]
[24.22493362 69.13397980]
[38.57686615 73.49539948]
[52.92879868 77.85681915]
[67.28073120 82.21824646]
[83.04527283 66.84462738]
[104.73797607 63.06366348]
[124.77405548 72.19734955]
[136.14797974 91.05212402]
[151.13606262 90.45426941]
[166.12414551 89.85640717]
[181.11222839 89.25854492]
[196.10031128 88.66068268]
[201.61486816 77.42735291]
[211.32876587 69.65329742]
[223.35708618 66.76831055]
[235.39904785 69.26103210]
[245.17800903 76.59745026]
[250.87197876 87.33380890]
[265.87149048 87.21420288]
[280.87103271 87.09460449]
[295.87054443 86.97499847]
[310.87005615 86.85540009]
[325.86959839 86.73579407]
[340.86911011 86.61619568]
[355.86862183 86.49658966]
[370.86816406 86.37699127]
[385.86767578 86.25738525]
[400.86721802 86.13778687]
[410.95297241 71.08159637]
[427.90606689 65.13728333]
[444.88619995 70.50354767]
[455.16140747 84.85522461]
[470.14947510 84.25736237]
[485.13757324 83.65950012]
[500.12564087 83.06164551]
[508.58715820 79.58930969]
[515.35711670 82.57568359]
[530.35278320 82.21690369]
[545.34851074 81.85812378]
[560.34423828 81.49935150]
[575.33990479 81.14057159]
[590.33563232 80.78179169]
[599.95587158 68.45358276]
[615.26055908 65.24398041]
[629.02319336 72.66846466]
[634.74560547 87.22142029]
[629.72570801 102.03138733]
[616.33386230 110.10554504]
[600.89324951 107.63153839]
[590.69439697 95.77750397]
[575.69873047 96.13628387]
[560.70300293 96.49505615]
[545.70727539 96.85383606]
[530.71160889 97.21260834]
[515.71588135 97.57138824]
[500.72351074 98.04972076]
[485.73541260 98.64758301]
[470.74734497 99.24544525]
[455.75924683 99.84330750]
[450.58526611 110.83968353]
[441.16833496 118.63536835]
[429.25936890 121.70112610]
[417.10684204 119.39466858]
[407.03225708 112.09406281]
[400.98681641 101.13730621]
[385.98727417 101.25691223]
[370.98776245 101.37651062]
[355.98825073 101.49611664]
[340.98870850 101.61571503]
[325.98919678 101.73532104]
[310.98965454 101.85491943]
[295.99014282 101.97452545]
[280.99063110 102.09412384]
[265.99108887 102.21372986]
[250.99157715 102.33332825]
[241.41445923 117.15998077]
[224.71040344 123.33214569]
[207.49243164 118.20538330]
[196.69816589 103.64876556]
[181.71008301 104.24662781]
[166.72200012 104.84448242]
[151.73393250 105.44234467]
[136.74584961 106.04020691]
[134.33465576 114.41778564]
[130.04182434 122.00522614]
[124.10260773 128.38671875]
[116.84249878 133.21252441]
[108.65936279 136.21818542]
[109.13769531 151.21055603]
[109.61602783 166.20292664]
[110.09436798 181.19529724]
[110.57270050 196.18766785]
[121.24195862 208.16874695]
[118.38504028 223.95538330]
[104.19353485 231.43739319]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[3 192]
[4 191]
[5 190]
[6 189]
[12 105]
[13 104]
[14 103]
[15 102]
[16 101]
[19 100]
[20 99]
[21 98]
[23 96]
[24 95]
[25 94]
[27 93]
[28 92]
[29 91]
[30 90]
[31 89]
[34 88]
[35 87]
[36 86]
[37 85]
[38 84]
[39 83]
[49 82]
[50 81]
[51 80]
[53 79]
[54 78]
[55 77]
[56 76]
[57 75]
[59 74]
[60 73]
[61 72]
[109 184]
[110 183]
[111 182]
[112 181]
[113 180]
[119 176]
[120 175]
[121 174]
[122 173]
[123 172]
[124 171]
[125 170]
[126 169]
[127 168]
[128 167]
[129 166]
[133 160]
[134 159]
[135 158]
[136 157]
[138 156]
[139 155]
[140 154]
[141 153]
[142 152]
[143 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
