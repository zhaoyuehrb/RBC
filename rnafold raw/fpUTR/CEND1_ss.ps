%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGUGCAUUGUGGGAAACUCCCGAGCUCUCCUCCGCGUUCGCAGCCGCCGUCAUCCCGCGGAGGAGCGCGCAGCCCCGGGGAGGCCGGAGGACGCGCCCAUAGAAUGCCCAGGGGCGACAAACUGUCCUGAGCCCCUCUGGUGCAGCCACCUGCCUGUCCCAUACGCCCCGCCCACC\
) } def
/len { sequence length } bind def

/coor [
[94.33655548 330.46383667]
[105.71022034 319.73193359]
[104.66387939 304.76849365]
[96.05761719 292.61193848]
[102.81341553 278.30566406]
[94.20715332 266.14910889]
[100.96295166 251.84283447]
[99.91661072 236.87937927]
[90.98639679 228.69384766]
[90.00748444 216.21691895]
[98.05072021 206.11038208]
[97.26567841 191.13093567]
[96.48063660 176.15150452]
[95.69560242 161.17205811]
[94.91056061 146.19261169]
[94.12551880 131.21316528]
[93.34048462 116.23372650]
[85.56262207 111.72839355]
[80.67288208 103.57614899]
[80.31790161 93.55812836]
[85.08206177 84.15332031]
[70.52762604 80.52449799]
[55.97319031 76.89566803]
[41.41875458 73.26683807]
[26.86431694 69.63800812]
[9.30197906 75.13065338]
[-2.85118484 62.48750305]
[-17.46673584 59.11323929]
[-32.08228683 55.73897171]
[-46.83111191 53.00543976]
[-61.68513107 50.91784286]
[-76.53915405 48.83024597]
[-91.39317322 46.74264908]
[-106.24719238 44.65505219]
[-121.10121918 42.56745529]
[-135.95523071 40.47985840]
[-150.80926514 38.39226151]
[-165.66328430 36.30466843]
[-180.51730347 34.21707153]
[-187.91693115 46.27568436]
[-199.32223511 54.57381439]
[-212.98855591 57.88300323]
[-226.84088135 55.73484039]
[-238.78894043 48.48694992]
[-247.04258728 37.26394653]
[-250.37998962 23.78306007]
[-265.19531250 21.43654251]
[-280.30300903 27.81541824]
[-293.21606445 17.70678520]
[-290.65069580 1.50953853]
[-275.24588013 -4.11398268]
[-262.84878540 6.62121820]
[-248.03347778 8.96773529]
[-239.19682312 -4.33086538]
[-225.39859009 -12.47993946]
[-209.37039185 -13.80738831]
[-194.31106567 -7.99745655]
[-183.24826050 3.83608079]
[-178.42970276 19.36304855]
[-163.57568359 21.45064545]
[-148.72166443 23.53824234]
[-133.86764526 25.62583923]
[-119.01361847 27.71343613]
[-104.15959930 29.80103111]
[-89.30558014 31.88862801]
[-74.45155334 33.97622299]
[-59.59753418 36.06381989]
[-44.74351501 38.15141678]
[-51.40392685 24.71122169]
[-45.21144867 11.04911327]
[-30.71399879 7.19891834]
[-18.55890465 15.98832417]
[-17.67319298 30.96215248]
[-28.70802116 41.12342072]
[-14.09247017 44.49768829]
[0.52308095 47.87195206]
[10.96187496 41.72515869]
[23.17983627 44.43693161]
[30.49314499 55.08357239]
[45.04758072 58.71240234]
[59.60201645 62.34123230]
[74.15645599 65.97006226]
[88.71089172 69.59888458]
[103.59908295 67.77085114]
[116.84329224 60.72877502]
[130.08750916 53.68669891]
[143.33172607 46.64462662]
[151.88410950 33.33420944]
[166.75405884 34.19074631]
[179.99827576 27.14867401]
[188.55065918 13.83825397]
[203.42062378 14.69479275]
[216.66484070 7.65271902]
[221.38012695 -7.19328594]
[234.91195679 -14.14628124]
[249.03628540 -9.55948830]
[262.28051758 -16.60156250]
[275.52471924 -23.64363480]
[288.76892090 -30.68570900]
[302.01315308 -37.72778320]
[304.80496216 -42.20448303]
[308.65695190 -44.87726212]
[312.69677734 -45.64515686]
[316.13995361 -44.77115250]
[329.73458862 -51.11042786]
[343.32919312 -57.44969940]
[329.27606201 -62.69460297]
[321.75448608 -75.67250824]
[324.18966675 -90.47351837]
[335.47268677 -100.35752106]
[350.46545410 -100.82353210]
[362.34051514 -91.65933990]
[365.69024658 -77.03813934]
[358.98947144 -63.61845016]
[373.25534058 -68.25370789]
[387.52117920 -72.88896179]
[401.78701782 -77.52421570]
[416.05285645 -82.15946960]
[430.14825439 -87.28977203]
[444.05603027 -92.90886688]
[457.96377563 -98.52796936]
[471.87152100 -104.14707184]
[484.29232788 -115.68657684]
[498.81927490 -106.94565582]
[494.44140625 -90.56668854]
[477.49063110 -90.23931122]
[463.58288574 -84.62020874]
[449.67510986 -79.00111389]
[435.76736450 -73.38201141]
[434.55200195 -70.82643127]
[432.23690796 -68.60545349]
[428.94699097 -67.14571381]
[424.96105957 -66.81975555]
[420.68811035 -67.89362335]
[406.42227173 -63.25836563]
[392.15643311 -58.62311172]
[377.89059448 -53.98785782]
[363.62472534 -49.35260010]
[349.66845703 -43.85508347]
[336.07385254 -37.51580811]
[322.47924805 -31.17653465]
[309.05520630 -24.48356819]
[295.81100464 -17.44149399]
[282.56680298 -10.39942169]
[269.32257080 -3.35734797]
[256.07836914 3.68472552]
[251.98275757 17.95923424]
[238.65156555 25.28956604]
[223.70690918 20.89693260]
[210.46269226 27.93900681]
[202.85762024 40.74572754]
[187.04035950 40.39288712]
[173.79614258 47.43495941]
[166.19107056 60.24168396]
[150.37379456 59.88883972]
[137.12957764 66.93091583]
[123.88536835 73.97298431]
[110.64115143 81.01506042]
[119.65448761 100.16570282]
[108.31992340 115.44868469]
[109.10496521 130.42813110]
[109.88999939 145.40757751]
[110.67504120 160.38700867]
[111.46008301 175.36645508]
[112.24511719 190.34590149]
[113.03015900 205.32534790]
[123.41752625 220.51440430]
[114.88006592 235.83302307]
[115.92641449 250.79649353]
[124.60752106 264.02331543]
[117.77687836 277.25930786]
[126.45797729 290.48614502]
[119.62733459 303.72213745]
[120.67368317 318.68560791]
[133.43025208 327.73013306]
[137.33860779 342.87142944]
[130.55331421 356.96023560]
[116.27820587 363.34420776]
[101.25354004 359.00906372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 174]
[3 173]
[5 171]
[7 169]
[8 168]
[11 166]
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[21 83]
[22 82]
[23 81]
[24 80]
[25 79]
[27 76]
[28 75]
[29 74]
[30 68]
[31 67]
[32 66]
[33 65]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[46 53]
[47 52]
[84 158]
[85 157]
[86 156]
[87 155]
[89 153]
[90 152]
[92 150]
[93 149]
[96 146]
[97 145]
[98 144]
[99 143]
[100 142]
[104 141]
[105 140]
[106 139]
[114 138]
[115 137]
[116 136]
[117 135]
[118 134]
[119 129]
[120 128]
[121 127]
[122 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
