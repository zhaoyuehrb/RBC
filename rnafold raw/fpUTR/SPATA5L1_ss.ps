%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGCGCAUGCGCGCAAUCUGCUUCCGGCCUGCGAGCUCGGUGUUCCGCUUUUUGUGGGCCGGGUGGGUUUCCUAAUCUGGUUUCGUCUGCCUGGUUCAUCUGUGUGCG\
) } def
/len { sequence length } bind def

/coor [
[98.52875519 246.30436707]
[90.02510834 259.03018188]
[76.57598114 266.33633423]
[61.27188110 266.54385376]
[47.62957764 259.60513306]
[38.78397369 247.11457825]
[36.76771927 231.94245911]
[42.04413986 217.57519531]
[53.40075302 207.31431580]
[68.22789001 203.51765442]
[71.62534332 188.90747070]
[75.02279663 174.29730225]
[78.42024231 159.68711853]
[81.81769562 145.07693481]
[85.21514893 130.46676636]
[88.61260223 115.85658264]
[85.21514893 101.24639893]
[75.71996307 89.63427734]
[66.22477722 78.02215576]
[56.72958755 66.41002655]
[47.23440170 54.79790497]
[37.73921204 43.18577957]
[31.47847748 40.39436340]
[28.17285156 35.54033279]
[28.05636406 30.62883949]
[19.23958588 18.49358368]
[10.42280674 6.35832930]
[1.60602832 -5.77692604]
[-7.21075058 -17.91217995]
[-16.02752876 -30.04743576]
[-24.84430885 -42.18268967]
[-33.66108704 -54.31794739]
[-42.47786713 -66.45320129]
[-51.29464340 -78.58845520]
[-60.11142349 -90.72370911]
[-68.92819977 -102.85896301]
[-86.18806458 -105.22742462]
[-96.25778198 -119.03057098]
[-93.35946655 -135.52799988]
[-102.51918030 -147.40652466]
[-111.67890167 -159.28506470]
[-127.04225159 -165.02087402]
[-129.48933411 -181.23641968]
[-116.50281525 -191.25051880]
[-101.44210052 -184.76153564]
[-99.80036926 -168.44477844]
[-90.64064789 -156.56623840]
[-81.48093414 -144.68771362]
[-68.50989532 -144.82072449]
[-57.69603729 -137.30831909]
[-53.16133118 -124.73855591]
[-56.79294586 -111.67574310]
[-47.97616959 -99.54048920]
[-39.15938950 -87.40523529]
[-30.34261131 -75.26998138]
[-21.52583122 -63.13472366]
[-12.70905304 -50.99946976]
[-3.89227438 -38.86421585]
[4.92450428 -26.72896004]
[13.74128342 -14.59370422]
[22.55806160 -2.45844984]
[31.37484169 9.67680550]
[40.19161987 21.81205940]
[49.35133743 33.69059372]
[58.84652328 45.30271912]
[68.34171295 56.91484070]
[77.83689880 68.52696991]
[87.33208466 80.13909149]
[96.82727051 91.75121307]
[98.90722656 88.30982208]
[102.63289642 85.59425354]
[107.70758820 84.23575592]
[113.61868286 84.74325562]
[119.68588257 87.43503571]
[125.12983704 92.38837433]
[139.83108521 95.36723328]
[154.53231812 98.34609222]
[169.23355103 101.32494354]
[184.29541016 96.48233795]
[195.23263550 106.59304047]
[209.93388367 109.57189941]
[224.63511658 112.55075836]
[236.75192261 102.66557312]
[252.38722229 102.93330383]
[264.15847778 113.22753906]
[266.50769043 128.68765259]
[258.32562256 142.01385498]
[243.47558594 146.91392517]
[228.96932983 141.07418823]
[221.65626526 127.25199890]
[206.95501709 124.27313995]
[192.25378418 121.29428101]
[178.24345398 126.34996033]
[166.25469971 116.02618408]
[151.55346680 113.04732513]
[136.85221863 110.06847382]
[122.15098572 107.08961487]
[133.96224976 116.33589935]
[133.26512146 131.31968689]
[120.64633179 139.42933655]
[106.72696686 133.83905029]
[103.22277832 119.25402832]
[99.82532501 133.86421204]
[96.42787170 148.47439575]
[93.03042603 163.08456421]
[89.63297272 177.69474792]
[86.23551941 192.30493164]
[82.83806610 206.91510010]
[94.46875000 216.86425781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 108]
[11 107]
[12 106]
[13 105]
[14 104]
[15 103]
[16 102]
[17 69]
[18 68]
[19 67]
[20 66]
[21 65]
[22 64]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[32 56]
[33 55]
[34 54]
[35 53]
[36 52]
[39 48]
[40 47]
[41 46]
[75 97]
[76 96]
[77 95]
[78 94]
[80 92]
[81 91]
[82 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
