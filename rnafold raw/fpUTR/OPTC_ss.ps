%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGCCUCCACCAGAGUCCCCACCUUUCUGGAAGCUGCAGGGCUCUCCAUCCAGGAUCCAGAAGCAUUGAAGGGGACCAGCCGCUGAAGGGAUUCUCAGUCCCAUCUGACUCCCC\
) } def
/len { sequence length } bind def

/coor [
[172.49554443 223.30447388]
[169.50025940 211.76356506]
[172.53819275 200.10902405]
[162.59135437 188.88136292]
[152.64451599 177.65370178]
[142.69767761 166.42604065]
[132.11422729 170.47746277]
[120.76949310 171.05215454]
[109.77893066 168.07691956]
[100.22832489 161.82846069]
[93.06655884 152.90765381]
[89.01132202 142.18188477]
[88.47720337 130.70065308]
[91.53340149 119.59288025]
[97.89524078 109.95599365]
[90.93991089 105.66071320]
[89.14547729 97.27976990]
[80.79100800 84.82173157]
[72.43653107 72.36368561]
[64.08206177 59.90564728]
[55.72758865 47.44760513]
[47.37311554 34.98956299]
[32.12403870 31.81098557]
[23.82888412 19.05774689]
[26.95314789 4.53967047]
[17.94201469 -7.45197105]
[8.30020046 -18.94263840]
[-1.34161341 -30.43330383]
[-10.98342800 -41.92396927]
[-20.62524223 -53.41463852]
[-30.26705551 -64.90530396]
[-39.90887070 -76.39597321]
[-49.55068588 -87.88663483]
[-65.05262756 -89.41222382]
[-74.66711426 -101.20274353]
[-73.11716461 -115.97207642]
[-82.75897980 -127.46274567]
[-92.40079498 -138.95341492]
[-107.77662659 -138.01000977]
[-120.60969543 -146.20549011]
[-126.09140778 -160.22029114]
[-122.31471252 -174.60342407]
[-131.95652771 -186.09408569]
[-147.54335022 -191.19142151]
[-150.65711975 -207.29225159]
[-138.09463501 -217.83341980]
[-122.77912140 -211.97108459]
[-120.46585846 -195.73590088]
[-110.82404327 -184.24523926]
[-96.00360107 -185.46694946]
[-83.15360260 -177.63487244]
[-77.31107330 -163.57363892]
[-80.91012573 -148.59523010]
[-71.26831818 -137.10455322]
[-61.62649918 -125.61389160]
[-46.81240082 -124.57562256]
[-36.87054062 -113.05980682]
[-38.06001663 -97.52845001]
[-28.41820335 -86.03778839]
[-18.77639008 -74.54711914]
[-9.13457489 -63.05645370]
[0.50723904 -51.56578445]
[10.14905357 -40.07511902]
[19.79086685 -28.58445168]
[29.43268204 -17.09378624]
[32.34408188 -16.77708435]
[35.29443741 -15.21102333]
[37.77705002 -12.37884331]
[39.29071045 -8.45867157]
[39.41119003 -3.81480217]
[54.02862549 -1.19446540]
[62.67871857 11.32074738]
[59.83115768 26.63509178]
[68.18563080 39.09313202]
[76.54010010 51.55117416]
[84.89457703 64.00921631]
[93.24904633 76.46725464]
[101.60351562 88.92530060]
[110.12448883 101.27005768]
[128.98274231 98.55779266]
[146.59350586 105.61560822]
[158.26048279 120.47524261]
[160.91554260 139.09956360]
[153.92533875 156.47920227]
[163.87217712 167.70686340]
[173.81901550 178.93452454]
[183.76585388 190.16218567]
[202.60475159 190.49629211]
[215.10551453 204.16912842]
[213.79948425 222.33251953]
[224.33465576 233.01008606]
[234.86981201 243.68763733]
[245.40498352 254.36520386]
[256.43267822 253.81477356]
[265.71456909 259.37557983]
[270.24227905 268.95880127]
[268.70874023 279.22262573]
[278.65557861 290.45028687]
[288.60241699 301.67794800]
[298.54925537 312.90560913]
[314.33786011 313.60952759]
[324.94253540 325.32775879]
[324.07168579 341.10803223]
[312.24200439 351.58822632]
[296.47183228 350.55059814]
[286.11730957 338.61077881]
[287.32159424 322.85244751]
[277.37475586 311.62478638]
[267.42791748 300.39712524]
[257.48107910 289.16946411]
[238.78242493 284.55792236]
[234.72741699 264.90036011]
[224.19224548 254.22280884]
[213.65708923 243.54524231]
[203.12191772 232.86767578]
[191.81463623 235.27706909]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 87]
[4 86]
[5 85]
[6 84]
[15 79]
[17 78]
[18 77]
[19 76]
[20 75]
[21 74]
[22 73]
[25 70]
[26 65]
[27 64]
[28 63]
[29 62]
[30 61]
[31 60]
[32 59]
[33 58]
[36 55]
[37 54]
[38 53]
[42 49]
[43 48]
[90 115]
[91 114]
[92 113]
[93 112]
[97 110]
[98 109]
[99 108]
[100 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
