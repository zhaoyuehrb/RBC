%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUGACGUCACGGCGCUCGUCGGCGCCGCCUGUGGCGUCACAGGCCGGGCCCGCAGGGCUUUCUAGGGGUCCGUCGCUCUUGAAGCCGCCGGCGGCGGGCGCGUGCGCGGCCCGAUGAAGAAGGAGGUUUCCAAGCCGUCUCCGCCCAAGUUGAUCGGUGG\
) } def
/len { sequence length } bind def

/coor [
[247.12887573 381.88726807]
[239.42120361 369.01901245]
[231.71353149 356.15075684]
[218.53599548 349.20800781]
[218.08256531 333.39331055]
[210.37489319 320.52505493]
[202.66722107 307.65679932]
[189.48968506 300.71405029]
[189.03623962 284.89935303]
[181.32858276 272.03109741]
[175.16421509 267.88888550]
[173.59912109 258.83975220]
[159.20199585 255.19853210]
[151.45289612 242.10632324]
[155.36973572 227.02998352]
[143.75521851 223.54341125]
[137.44439697 212.72100830]
[140.30688477 200.11238098]
[133.10084534 186.95664978]
[125.89482117 173.80093384]
[118.68879700 160.64520264]
[111.48276520 147.48947144]
[104.27673340 134.33375549]
[97.07070923 121.17802429]
[78.64260864 96.62425232]
[68.19042969 85.86544037]
[57.73824692 75.10663605]
[47.28607178 64.34782410]
[36.83389282 53.58901596]
[26.38171196 42.83020782]
[15.92953396 32.07139969]
[0.76380098 27.56461525]
[-2.55510473 13.04448700]
[-13.00728321 2.28567815]
[-23.45946121 -8.47313023]
[-33.91164017 -19.23193932]
[-44.36381912 -29.99074745]
[-59.52955246 -34.49753189]
[-62.84845734 -49.01766205]
[-73.30063629 -59.77647018]
[-83.75281525 -70.53527832]
[-99.32466888 -70.92910004]
[-109.77140045 -81.98896027]
[-109.29998779 -96.83191681]
[-119.75216675 -107.59072113]
[-130.20434570 -118.34953308]
[-140.86192322 -128.90490723]
[-151.72096252 -139.25291443]
[-162.58000183 -149.60093689]
[-173.43902588 -159.94894409]
[-184.29806519 -170.29696655]
[-195.15708923 -180.64497375]
[-206.01612854 -190.99299622]
[-221.59159851 -190.78642273]
[-232.45678711 -201.43547058]
[-232.55773926 -216.28556824]
[-243.41676331 -226.63357544]
[-254.27580261 -236.98159790]
[-270.33255005 -240.31521606]
[-275.21627808 -255.97027588]
[-263.90304565 -267.84219360]
[-248.03091431 -263.71817017]
[-243.92778015 -247.84062195]
[-233.06875610 -237.49261475]
[-222.20971680 -227.14459229]
[-207.37199402 -227.75903320]
[-196.21197510 -217.41935730]
[-195.66810608 -201.85202026]
[-184.80908203 -191.50401306]
[-173.95004272 -181.15599060]
[-163.09101868 -170.80798340]
[-152.23197937 -160.45996094]
[-141.37295532 -150.11195374]
[-130.51391602 -139.76393127]
[-125.75756836 -138.98619080]
[-121.45476532 -135.18182373]
[-119.44553375 -128.80171204]
[-108.99335480 -118.04290009]
[-98.54117584 -107.28409576]
[-83.69079590 -107.32625580]
[-72.93753815 -96.56418610]
[-72.99400330 -80.98745728]
[-62.54182816 -70.22864532]
[-52.08964920 -59.46984100]
[-37.67152786 -55.73259735]
[-33.60501099 -40.44292450]
[-23.15283203 -29.68411827]
[-12.70065308 -18.92530823]
[-2.24847484 -8.16650009]
[8.20370388 2.59230804]
[22.62182808 6.32955074]
[26.68834305 21.61922073]
[37.14052200 32.37802887]
[47.59270096 43.13683701]
[58.04487991 53.89564514]
[68.49705505 64.65445709]
[78.94923401 75.41326141]
[89.40141296 86.17207336]
[104.35685730 87.32733917]
[110.72329712 72.84358978]
[125.54432678 71.36499786]
[137.52482605 62.33905411]
[149.50532532 53.31311035]
[155.41305542 38.01504898]
[171.65502930 35.74994278]
[181.52287292 48.84794235]
[174.86541748 63.83494568]
[158.53126526 65.29360962]
[146.55076599 74.31954956]
[134.57026672 83.34549713]
[129.06076050 97.18365479]
[113.38280487 99.30783844]
[110.22643280 113.97199249]
[117.43246460 127.12771606]
[124.63848877 140.28344727]
[131.84451294 153.43917847]
[139.05055237 166.59489441]
[146.25657654 179.75062561]
[153.46260071 192.90635681]
[169.40742493 202.07305908]
[168.38414001 219.57174683]
[183.37211609 223.81420898]
[190.75042725 237.11891174]
[186.61352539 251.38150024]
[194.19683838 264.32342529]
[201.90449524 277.19168091]
[215.63334656 285.05484009]
[215.53547668 299.94912720]
[223.24314880 312.81738281]
[230.95080566 325.68563843]
[244.67965698 333.54879761]
[244.58178711 348.44308472]
[252.28945923 361.31134033]
[259.99713135 374.17959595]
[278.03195190 383.11492920]
[277.62173462 402.41885376]
[285.81958008 414.98052979]
[294.01742554 427.54217529]
[302.21527100 440.10385132]
[310.53381348 452.58590698]
[318.97222900 464.98724365]
[334.24243164 468.06274414]
[342.62353516 480.75967407]
[339.59738159 495.29852295]
[355.16830444 498.00439453]
[364.19683838 510.97595215]
[361.32650757 526.51739502]
[348.26022339 535.40826416]
[332.75000000 532.37377930]
[323.99774170 519.21423340]
[327.19604492 503.73693848]
[312.56124878 501.21539307]
[303.82684326 488.75888062]
[306.57089233 473.42565918]
[298.13247681 461.02432251]
[291.73904419 457.24526978]
[289.65362549 448.30169678]
[281.45578003 435.74002075]
[273.25790405 423.17837524]
[265.06005859 410.61672974]
[254.85467529 409.40774536]
[246.84838867 402.61917114]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 134]
[2 133]
[3 132]
[5 130]
[6 129]
[7 128]
[9 126]
[10 125]
[12 124]
[15 121]
[18 119]
[19 118]
[20 117]
[21 116]
[22 115]
[23 114]
[24 113]
[25 98]
[26 97]
[27 96]
[28 95]
[29 94]
[30 93]
[31 92]
[33 90]
[34 89]
[35 88]
[36 87]
[37 86]
[39 84]
[40 83]
[41 82]
[44 79]
[45 78]
[46 77]
[47 74]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[56 65]
[57 64]
[58 63]
[99 112]
[101 110]
[102 109]
[103 108]
[136 160]
[137 159]
[138 158]
[139 157]
[140 155]
[141 154]
[144 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
