%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCCGGGGGCUUUUGCCAGCGGCGCCGCGGGCCUGCGUGCUGGGGCAGCGGGCACUUCUUCGACCUCGUCCUCCUCGUCCUGUGCGGCCGGCCGGGUGAGGCCGGGCCCGCGUAGGGGGCAGUCGGCGGCUGCCUCCGGCGGAGGUGCCUCGCGGCGCCCGGGCCGGCCCGCGCCUCGGCGGCGUGCUCC\
) } def
/len { sequence length } bind def

/coor [
[199.02578735 804.95703125]
[197.32908630 790.05328369]
[195.63237000 775.14959717]
[193.93566895 760.24584961]
[192.23895264 745.34210205]
[190.54225159 730.43835449]
[188.36381531 715.59741211]
[185.70596313 700.83477783]
[175.83593750 689.67987061]
[181.00553894 674.72705078]
[178.34767151 659.96441650]
[175.68980408 645.20178223]
[173.03193665 630.43914795]
[170.37406921 615.67651367]
[161.47833252 610.61340332]
[156.74542236 601.29058838]
[157.95771790 590.68444824]
[164.95431519 582.33294678]
[162.77587891 567.49200439]
[160.59745789 552.65100098]
[151.09382629 541.18237305]
[156.74491882 526.40484619]
[152.65713501 520.23468018]
[154.65339661 511.30609131]
[152.71557617 496.43179321]
[150.77774048 481.55749512]
[148.83992004 466.68319702]
[146.90209961 451.80886841]
[144.96427917 436.93457031]
[143.02645874 422.06027222]
[141.08863831 407.18597412]
[139.15081787 392.31167603]
[137.09262085 377.45355225]
[134.91419983 362.61257935]
[132.73576355 347.77160645]
[130.43724060 332.94876099]
[128.01878357 318.14501953]
[116.60163879 312.15402222]
[110.63460541 300.50518799]
[112.49812317 287.35369873]
[121.73317719 277.53747559]
[119.55474854 262.69650269]
[117.37631989 247.85551453]
[115.19789124 233.01454163]
[113.01946259 218.17358398]
[110.84103394 203.33261108]
[108.54251099 188.50975037]
[106.12404633 173.70600891]
[103.70558167 158.90225220]
[101.28711700 144.09851074]
[98.86865234 129.29475403]
[96.45018768 114.49100494]
[87.20676422 102.67749023]
[73.41931152 96.76935577]
[59.63185120 90.86122131]
[45.79701233 85.06491089]
[32.67078781 93.34028625]
[17.18955421 92.28620911]
[5.30616570 82.30799866]
[1.59002614 67.24247742]
[7.47006702 52.88264847]
[20.68529320 44.75015259]
[36.15417862 45.97211075]
[47.92862320 56.07864380]
[51.48111343 71.18359375]
[58.87299347 70.80832672]
[65.53998566 77.07376862]
[79.32744598 82.98190308]
[93.11489868 88.89003754]
[106.08499146 81.35500336]
[107.78170013 66.45127106]
[109.47840881 51.54754257]
[111.17510986 36.64381409]
[101.60979462 24.34981537]
[103.54280090 9.25948334]
[115.32219696 0.21617477]
[105.75687408 -12.07782269]
[107.68988800 -27.16815376]
[119.46928406 -36.21146393]
[113.34262848 -50.79826355]
[122.46990204 -62.56865692]
[124.16661072 -77.47238922]
[125.86331940 -92.37611389]
[127.56002808 -107.27984619]
[129.25672913 -122.18357849]
[130.95344543 -137.08731079]
[132.65014648 -151.99104309]
[134.34686279 -166.89477539]
[136.04356384 -181.79849243]
[137.74026489 -196.70222473]
[139.19541931 -211.63148499]
[140.40863037 -226.58233643]
[141.62182617 -241.53320312]
[142.83503723 -256.48403931]
[144.04824829 -271.43490601]
[145.26145935 -286.38577271]
[134.83691406 -298.26452637]
[135.94856262 -314.02966309]
[147.93685913 -324.32803345]
[163.68937683 -323.04977417]
[173.86041260 -310.95324707]
[172.41567993 -295.21514893]
[160.21231079 -285.17254639]
[158.99909973 -270.22171021]
[157.78590393 -255.27084351]
[156.57269287 -240.31999207]
[155.35948181 -225.36912537]
[154.14627075 -210.41827393]
[156.51113892 -206.25410461]
[156.27532959 -200.55799866]
[152.64399719 -195.00552368]
[150.94729614 -180.10179138]
[149.25057983 -165.19805908]
[147.55387878 -150.29432678]
[145.85717773 -135.39059448]
[144.16046143 -120.48686981]
[142.46376038 -105.58313751]
[140.76704407 -90.67941284]
[139.07034302 -75.77568054]
[137.37364197 -60.87194824]
[143.62164307 -47.35116196]
[134.37301636 -34.51475525]
[143.81826782 -23.05513763]
[142.30987549 -7.91646624]
[130.22593689 1.91288221]
[139.67117310 13.37249947]
[138.16278076 28.51117134]
[126.07884216 38.34051895]
[124.38213348 53.24425125]
[122.68543243 68.14797974]
[120.98872375 83.05171204]
[111.25394440 112.07254028]
[113.67240143 126.87628937]
[116.09086609 141.68003845]
[118.50933075 156.48379517]
[120.92779541 171.28753662]
[123.34626007 186.09129333]
[127.82418823 194.06956482]
[125.68200684 201.15417480]
[127.86043549 215.99514771]
[130.03886414 230.83612061]
[132.21728516 245.67709351]
[134.39572144 260.51806641]
[136.57414246 275.35903931]
[150.79479980 285.53518677]
[153.21539307 302.51248169]
[142.82252502 315.72653198]
[145.24099731 330.53030396]
[149.71891785 338.50857544]
[147.57673645 345.59317017]
[149.75517273 360.43414307]
[151.93359375 375.27511597]
[156.28173828 383.32485962]
[154.02511597 390.37384033]
[155.96293640 405.24816895]
[157.90075684 420.12246704]
[159.83857727 434.99676514]
[161.77639771 449.87106323]
[163.71423340 464.74536133]
[165.65205383 479.61965942]
[167.58987427 494.49395752]
[169.52769470 509.36825562]
[171.58589172 524.22637939]
[181.24533081 536.75659180]
[175.43843079 550.47259521]
[177.61685181 565.31353760]
[179.79528809 580.15454102]
[193.00849915 595.36633301]
[185.13671875 613.01861572]
[187.79458618 627.78125000]
[190.45245361 642.54394531]
[193.11032104 657.30657959]
[195.76817322 672.06921387]
[205.82832336 684.28002930]
[200.46859741 698.17687988]
[203.12646484 712.93957520]
[206.06942749 716.17602539]
[207.66047668 719.81610107]
[207.93948364 723.38250732]
[207.09811401 726.46032715]
[205.44598389 728.74169922]
[207.14268494 743.64538574]
[208.83940125 758.54913330]
[210.53610229 773.45288086]
[212.23281860 788.35662842]
[213.92951965 803.26031494]
[227.50001526 810.78503418]
[234.02534485 824.86334229]
[230.99638367 840.08197021]
[219.57781982 850.58892822]
[204.16033936 852.34411621]
[190.67225647 844.67260742]
[184.30003357 830.52435303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 186]
[2 185]
[3 184]
[4 183]
[5 182]
[6 181]
[7 176]
[8 175]
[10 173]
[11 172]
[12 171]
[13 170]
[14 169]
[18 167]
[19 166]
[20 165]
[22 163]
[24 162]
[25 161]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[33 152]
[34 151]
[35 150]
[36 148]
[37 147]
[41 144]
[42 143]
[43 142]
[44 141]
[45 140]
[46 139]
[47 137]
[48 136]
[49 135]
[50 134]
[51 133]
[52 132]
[53 69]
[54 68]
[55 67]
[56 65]
[70 131]
[71 130]
[72 129]
[73 128]
[76 125]
[79 122]
[81 120]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
[88 113]
[89 112]
[90 111]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
