%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAUCUGCGGAAUUCGGCCUUCGGAAAGAGCCCCCGGGCCGGGGCACGGAGAGAGCCGAGCGCCGCAGCCGUGAGCCGAAUAGAGCCGGAGAGACCCGAGUAUGACCGGAGAAGCCCAGGCCGGCCGGAAGAGGAGCCGAGCGCGGCCGGAAGGAACCGAGCCCGUCCGAAGGGAGCGGAGCGCAGCCUGGCCUGGGGCCCGGUCGAGCCCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[35.79800797 210.58312988]
[25.30602646 221.30311584]
[10.77591801 225.02816772]
[-3.57950282 220.67823792]
[-13.59807396 209.51454163]
[-16.37504196 194.77383423]
[-11.10670948 180.73196411]
[-24.50582886 187.47463989]
[-37.90494919 194.21730042]
[-51.30406952 200.95997620]
[-64.70319366 207.70263672]
[-78.10231018 214.44531250]
[-83.15002441 229.18159485]
[-96.83469391 235.82875061]
[-110.85238647 230.92570496]
[-124.25150299 237.66838074]
[-137.65061951 244.41104126]
[-151.04974365 251.15371704]
[-164.44886780 257.89639282]
[-177.84799194 264.63903809]
[-186.69732666 277.75390625]
[-201.54428101 276.56344604]
[-214.94340515 283.30609131]
[-228.34252930 290.04876709]
[-228.71517944 302.53713989]
[-234.32740784 313.61880493]
[-244.06034851 321.22027588]
[-256.03082275 323.94860840]
[-267.95547485 321.34625244]
[-277.58630371 313.96652222]
[-286.80822754 326.82214355]
[-301.61492920 325.20623779]
[-315.20193481 331.56176758]
[-328.78897095 337.91729736]
[-342.37600708 344.27279663]
[-355.96304321 350.62832642]
[-361.11434937 365.56951904]
[-375.35830688 372.41680908]
[-390.24423218 367.10778809]
[-396.94052124 352.79223633]
[-391.47442627 337.96328735]
[-377.08886719 331.41873169]
[-362.31854248 337.04129028]
[-348.73153687 330.68579102]
[-335.14450073 324.33026123]
[-321.55746460 317.97473145]
[-307.97042847 311.61923218]
[-299.72036743 299.21820068]
[-283.94183350 300.37951660]
[-281.39913940 282.89889526]
[-268.75762939 270.33657837]
[-250.94973755 267.86035156]
[-235.08518982 276.64965820]
[-221.68606567 269.90698242]
[-208.28695679 263.16430664]
[-200.39601135 250.53172302]
[-184.59065247 251.23992920]
[-171.19152832 244.49726868]
[-157.79241943 237.75459290]
[-144.39329529 231.01193237]
[-130.99417114 224.26925659]
[-117.59505463 217.52659607]
[-113.17970276 203.34771729]
[-99.68714142 196.31881714]
[-84.84497833 201.04618835]
[-71.44586182 194.30351257]
[-58.04673767 187.56085205]
[-44.64761734 180.81817627]
[-31.24849701 174.07551575]
[-17.84937668 167.33283997]
[-12.00435352 158.15466309]
[0.14621793 156.94308472]
[12.68510056 148.71043396]
[25.22398186 140.47779846]
[37.76286316 132.24514771]
[44.15535355 118.79206848]
[59.93783188 117.68575287]
[72.47671509 109.45310211]
[84.95622253 101.13073730]
[71.48313141 107.72434998]
[56.79302979 104.69103241]
[47.03349686 93.30017853]
[46.28873444 78.31867981]
[54.87041092 66.01605225]
[69.18724060 61.54073334]
[83.24785614 66.76558685]
[91.16840363 79.50531769]
[85.10669708 65.78469086]
[78.94673157 52.10788727]
[72.68882751 38.47562408]
[66.43092346 24.84335899]
[51.52705765 19.58499527]
[44.78212357 5.29229164]
[50.19776535 -9.55514431]
[64.56098175 -16.14859200]
[79.35033417 -10.57627678]
[85.79155731 3.85584641]
[80.06318665 18.58545494]
[86.32109070 32.21772003]
[92.57899475 45.84998322]
[98.22288513 50.61466217]
[98.82732391 59.72297668]
[104.88903809 73.44360352]
[105.85529327 80.17319489]
[105.48335266 86.74546814]
[103.82380676 92.95636749]
[118.45452881 89.64852905]
[133.08526611 86.34069061]
[147.71598816 83.03285217]
[162.34671021 79.72501373]
[176.97744751 76.41717529]
[184.65226746 71.47512817]
[191.84173584 73.16841888]
[197.23794556 63.73301697]
[206.73890686 58.92114639]
[217.10205078 60.10462952]
[224.93646240 66.65341949]
[239.69595337 63.97809219]
[254.45545959 61.30276108]
[269.21493530 58.62743378]
[283.97442627 55.95210648]
[298.73391724 53.27677536]
[313.49340820 50.60144806]
[328.25289917 47.92611694]
[342.99282837 45.14499664]
[357.71243286 42.25822067]
[372.43203735 39.37144852]
[385.42242432 31.87144852]
[395.28222656 20.56728935]
[405.14205933 9.26313210]
[401.54565430 -5.83141899]
[407.53952026 -20.14411163]
[420.81887817 -28.17142487]
[436.27758789 -26.82669067]
[447.97140503 -16.62698746]
[451.40386963 -1.49431050]
[445.25509644 12.75251865]
[431.88940430 20.63530159]
[416.44619751 19.12294960]
[406.58639526 30.42710876]
[396.72656250 41.73126602]
[402.88681030 55.40866852]
[409.04650879 69.08486176]
[424.04611206 69.19245148]
[439.04571533 69.30004120]
[454.04534912 69.40763092]
[468.94668579 67.68997955]
[483.52844238 64.17261505]
[498.11022949 60.65524292]
[512.66638184 57.03337479]
[527.19622803 53.30719376]
[541.72601318 49.58101273]
[549.55828857 35.85397339]
[564.82476807 31.76636124]
[578.46826172 39.74328995]
[582.39422607 55.05218506]
[574.27349854 68.61054993]
[558.92395020 72.37445068]
[545.45220947 64.11083221]
[530.92236328 67.83701324]
[516.39257812 71.56318665]
[510.69766235 76.26678467]
[501.62759399 75.23701477]
[487.04580688 78.75438690]
[472.46405029 82.27175903]
[472.35644531 97.27136993]
[486.88629150 100.99755096]
[501.44244385 104.61941528]
[516.02423096 108.13678741]
[530.60601807 111.65415955]
[546.17315674 106.49703217]
[558.24133301 117.60063934]
[554.39587402 133.54255676]
[538.59265137 137.92308044]
[527.08862305 126.23593140]
[512.50683594 122.71855927]
[497.92507935 119.20119476]
[490.69000244 120.68754578]
[483.16009521 115.52736664]
[468.63027954 111.80118561]
[458.21978760 103.77662659]
[453.38827515 93.71768188]
[453.93774414 84.40724182]
[438.93814087 84.29965210]
[423.93853760 84.19206238]
[408.93890381 84.08448029]
[381.71563721 74.02476501]
[375.31881714 54.09104538]
[360.59921265 56.97781754]
[345.87960815 59.86459351]
[339.92434692 64.23384857]
[330.92825317 62.68561172]
[316.16876221 65.36093903]
[301.40927124 68.03627014]
[286.64978027 70.71159363]
[271.89025879 73.38692474]
[257.13076782 76.06225586]
[242.37129211 78.73758698]
[227.61180115 81.41291046]
[213.80601501 94.95616913]
[194.93936157 87.84508514]
[180.28527832 91.04790497]
[165.65455627 94.35574341]
[151.02381897 97.66357422]
[136.39309692 100.97141266]
[121.76236725 104.27925110]
[107.13164520 107.58708954]
[93.36788940 113.55023193]
[88.02154541 120.94911194]
[80.70935822 121.99198914]
[68.17047882 130.22462463]
[60.88112259 144.26657104]
[45.99551010 144.78402710]
[33.45662689 153.01667786]
[20.91774368 161.24932861]
[8.37886238 169.48196411]
[23.17585754 171.94142151]
[34.55234146 181.71769714]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 70]
[8 69]
[9 68]
[10 67]
[11 66]
[12 65]
[15 62]
[16 61]
[17 60]
[18 59]
[19 58]
[20 57]
[22 55]
[23 54]
[24 53]
[30 49]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[72 216]
[73 215]
[74 214]
[75 213]
[77 211]
[78 210]
[79 208]
[87 103]
[88 102]
[89 100]
[90 99]
[91 98]
[106 207]
[107 206]
[108 205]
[109 204]
[110 203]
[111 202]
[113 201]
[117 199]
[118 198]
[119 197]
[120 196]
[121 195]
[122 194]
[123 193]
[124 192]
[125 190]
[126 189]
[127 188]
[128 141]
[129 140]
[130 139]
[143 186]
[144 185]
[145 184]
[146 183]
[147 165]
[148 164]
[149 163]
[150 161]
[151 160]
[152 159]
[166 180]
[167 179]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
