%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGGCAGCGGCUCGGGGACUGGGCGAGGGCCCUGGGCCUGAGGAGGCGCGGCCGCCACUGCGCCCAGCGCCUGCGCGACGCCUGGCUGCUGGGCCCCGGGGCAGUUCAGCCCGCGCCGCUCCUGCGGGUCGGACUGGGGCUGUGGCGGGAGAGAAGAUGCCGCAGCCCGAGUCCCAGAAGGCGGCGAUCCUGGGCUGCGGGCAAGGCGGAAAUUGACAAUGGCCCUUCAGCUAUGCUAGGUCUAUA\
) } def
/len { sequence length } bind def

/coor [
[234.18557739 24.39188766]
[221.52064514 32.42928696]
[208.85572815 40.46669006]
[202.25559998 53.81912231]
[186.45787048 54.68080521]
[173.79295349 62.71820831]
[161.12803650 70.75560760]
[148.46311951 78.79301453]
[144.50968933 85.01477051]
[135.58816528 86.85067749]
[122.82324219 94.72829437]
[125.40087891 111.93084717]
[114.68101501 129.22189331]
[92.56119537 136.59317017]
[82.43119812 147.65586853]
[72.30120850 158.71856689]
[62.17121506 169.78126526]
[52.04122543 180.84396362]
[41.91123199 191.90666199]
[42.42754364 207.47492981]
[31.99669838 218.54977417]
[17.15154648 218.94606018]
[13.53819752 234.34912109]
[-0.76330715 238.51039124]
[-10.89329910 249.57308960]
[-21.02329063 260.63580322]
[-31.15328407 271.69848633]
[-34.16688919 287.81835938]
[-49.72172928 293.01248169]
[-61.81631470 281.93762207]
[-58.00877380 265.98660278]
[-42.21598053 261.56848145]
[-32.08598709 250.50579834]
[-21.95599556 239.44309998]
[-11.82600403 228.38040161]
[-8.93721962 213.76861572]
[6.08884954 208.81607056]
[5.17943478 193.99349976]
[15.29509544 182.63005066]
[30.84853554 181.77667236]
[40.97852707 170.71397400]
[51.10852051 159.65127563]
[61.23851013 148.58857727]
[71.36850739 137.52587891]
[81.49849701 126.46318817]
[78.05164337 119.80216217]
[71.15795135 106.48011780]
[67.71109772 99.81909180]
[52.82938004 101.69908905]
[37.94765854 103.57908630]
[23.06593895 105.45908356]
[8.18421841 107.33908844]
[-6.69750261 109.21908569]
[-21.57922363 111.09908295]
[-31.06652641 123.73896790]
[-46.72437668 125.88542938]
[-59.26324463 116.26502228]
[-61.24404907 100.58535767]
[-51.49160767 88.14889526]
[-35.79187393 86.33398438]
[-23.45922089 96.21736145]
[-8.57750130 94.33736420]
[6.30421972 92.45736694]
[21.18593979 90.57736969]
[36.06766129 88.69736481]
[50.94938278 86.81736755]
[65.83110046 84.93737030]
[83.19362640 71.94653320]
[102.13368225 72.01791382]
[114.94562531 81.96337891]
[127.71054077 74.08576202]
[140.42572021 66.12808990]
[153.09063721 58.09069061]
[165.75555420 50.05328751]
[178.42047119 42.01588821]
[185.92648315 28.08856583]
[200.81832886 27.80177116]
[213.48324585 19.76436996]
[226.14816284 11.72696781]
[226.55812073 -7.43521166]
[238.36514282 -22.34151268]
[256.63262939 -27.05261421]
[273.89804077 -19.83192253]
[286.25103760 -28.34095573]
[298.60400391 -36.84999084]
[310.95700073 -45.35902405]
[323.30999756 -53.86806107]
[335.66299438 -62.37709427]
[348.01596069 -70.88613129]
[373.58496094 -93.98416138]
[382.55352783 -106.00766754]
[391.52209473 -118.03117371]
[400.49066162 -130.05467224]
[398.41452026 -145.49252319]
[407.68121338 -157.55831909]
[422.41162109 -159.44247437]
[431.38018799 -171.46598816]
[440.34878540 -183.48948669]
[449.31735229 -195.51300049]
[449.67138672 -199.78337097]
[451.19961548 -203.36788940]
[453.54663086 -205.98400879]
[456.30197144 -207.49188232]
[459.05105591 -207.90010071]
[468.61242676 -219.45780945]
[478.17376709 -231.01550293]
[487.73513794 -242.57319641]
[497.29647827 -254.13090515]
[506.85784912 -265.68859863]
[516.41918945 -277.24630737]
[525.98059082 -288.80398560]
[535.54193115 -300.36169434]
[531.13238525 -313.40588379]
[533.71697998 -326.82034302]
[542.51708984 -337.12780762]
[555.15692139 -341.71014404]
[568.30468750 -339.47302246]
[578.01049805 -350.90966797]
[587.71636963 -362.34628296]
[597.42218018 -373.78292847]
[607.12805176 -385.21957397]
[616.83386230 -396.65621948]
[626.53973389 -408.09283447]
[629.42980957 -426.29064941]
[646.19061279 -431.52713013]
[655.75195312 -443.08483887]
[665.31329346 -454.64254761]
[650.32159424 -454.14410400]
[639.28906250 -464.30694580]
[638.55773926 -479.28912354]
[648.54791260 -490.47824097]
[663.51690674 -491.44235229]
[674.85992432 -481.62725830]
[676.05651855 -466.67507935]
[686.46136475 -477.47973633]
[696.86614990 -488.28436279]
[707.27093506 -499.08898926]
[717.67572021 -509.89364624]
[721.67504883 -525.20104980]
[736.07659912 -529.00158691]
[746.48138428 -539.80621338]
[756.88616943 -550.61083984]
[767.29101562 -561.41552734]
[777.69580078 -572.22015381]
[788.10058594 -583.02478027]
[798.50537109 -593.82940674]
[808.91021729 -604.63403320]
[819.31500244 -615.43865967]
[829.71978760 -626.24328613]
[840.12457275 -637.04797363]
[835.79345703 -651.78350830]
[839.42596436 -666.70666504]
[850.04498291 -677.80316162]
[864.79406738 -682.08807373]
[879.70574951 -678.40881348]
[890.76885986 -667.75506592]
[895.00756836 -652.99261475]
[891.28155518 -638.09252930]
[880.59320068 -627.06286621]
[865.81756592 -622.87048340]
[850.92919922 -626.64312744]
[840.52441406 -615.83850098]
[830.11962891 -605.03387451]
[819.71484375 -594.22924805]
[809.30999756 -583.42462158]
[798.90521240 -572.61999512]
[788.50042725 -561.81530762]
[778.09564209 -551.01068115]
[767.69079590 -540.20605469]
[757.28601074 -529.40142822]
[746.88122559 -518.59680176]
[743.62615967 -504.06222534]
[728.48034668 -499.48883057]
[718.07556152 -488.68420410]
[707.67077637 -477.87957764]
[697.26599121 -467.07492065]
[686.86120605 -456.27029419]
[676.87097168 -445.08117676]
[667.30963135 -433.52346802]
[657.74829102 -421.96578979]
[658.57745361 -409.91363525]
[650.72833252 -400.20956421]
[637.97631836 -398.38699341]
[628.27050781 -386.95037842]
[618.56469727 -375.51373291]
[608.85882568 -364.07708740]
[599.15301514 -352.64044189]
[589.44714355 -341.20382690]
[579.74133301 -329.76718140]
[584.13031006 -313.93701172]
[578.15039062 -298.45825195]
[563.97705078 -289.51300049]
[547.09960938 -290.80032349]
[537.53826904 -279.24264526]
[527.97692871 -267.68493652]
[518.41552734 -256.12722778]
[508.85418701 -244.56953430]
[499.29281616 -233.01184082]
[489.73147583 -221.45414734]
[480.17010498 -209.89643860]
[470.60876465 -198.33874512]
[461.34085083 -186.54441833]
[452.37228394 -174.52091980]
[443.40371704 -162.49740601]
[434.43511963 -150.47390747]
[436.82757568 -135.81744385]
[427.90344238 -123.49613953]
[412.51419067 -121.08610535]
[403.54559326 -109.06259918]
[394.57702637 -97.03909302]
[385.60845947 -85.01558685]
[395.21841431 -96.53292084]
[409.18359375 -102.00771332]
[424.06051636 -100.08999634]
[436.18078613 -91.25263977]
[442.55581665 -77.67475891]
[441.61364746 -62.70437622]
[433.58660889 -50.03288651]
[420.45401001 -42.78482056]
[405.45404053 -42.74740219]
[392.28543091 -49.92985916]
[384.19567871 -62.55998611]
[391.58657837 -49.50723267]
[398.97747803 -36.45447540]
[406.36840820 -23.40171814]
[413.75930786 -10.34896183]
[429.05526733 -6.37283754]
[436.98742676 7.29669857]
[432.84979248 22.54975128]
[419.09716797 30.33695793]
[403.88870239 26.03830338]
[396.24734497 12.20410538]
[400.70654297 -2.95805216]
[393.31564331 -16.01080894]
[385.92474365 -29.06356430]
[378.53381348 -42.11632156]
[371.14291382 -55.16907883]
[356.52499390 -58.53313828]
[344.17202759 -50.02410507]
[331.81903076 -41.51507187]
[319.46603394 -33.00603485]
[307.11303711 -24.49700165]
[294.76007080 -15.98796749]
[282.40707397 -7.47893333]
[284.23471069 3.48287320]
[281.84039307 14.38745117]
[275.53091431 23.65994835]
[266.18124390 29.94673347]
[255.11334229 32.31294250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 79]
[2 78]
[3 77]
[5 75]
[6 74]
[7 73]
[8 72]
[10 71]
[11 70]
[14 45]
[15 44]
[16 43]
[17 42]
[18 41]
[19 40]
[22 37]
[24 35]
[25 34]
[26 33]
[27 32]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[83 244]
[84 243]
[85 242]
[86 241]
[87 240]
[88 239]
[89 238]
[90 211]
[91 210]
[92 209]
[93 208]
[96 205]
[97 204]
[98 203]
[99 202]
[104 201]
[105 200]
[106 199]
[107 198]
[108 197]
[109 196]
[110 195]
[111 194]
[112 193]
[117 189]
[118 188]
[119 187]
[120 186]
[121 185]
[122 184]
[123 183]
[125 180]
[126 179]
[127 178]
[134 177]
[135 176]
[136 175]
[137 174]
[138 173]
[140 171]
[141 170]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[148 163]
[149 162]
[150 161]
[222 237]
[223 236]
[224 235]
[225 234]
[226 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
