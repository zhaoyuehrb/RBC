%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACAAAGGAGGCCCAGAAGCCUUCAGGCAGCCUCAACUCAGCCCCAAGCCACUGCUCUCCCAUCCCAGUCCCUGGAAAUCCACCCACUUGGCCCAGCUCACCCCAACUCCAACCCACUGGGACCCAGUCUCCAGGGGCCUGACUGUGGGCGGCAGCCACUCCUGAGUGAGCAAAGGUUCCUCCGCGGUGCUCUCCCGUCCAGAGCCCUGCUG\
) } def
/len { sequence length } bind def

/coor [
[121.06509399 161.59645081]
[125.38655853 175.96046448]
[113.06095886 184.50912476]
[101.12189484 175.42845154]
[106.06869507 161.26771545]
[106.39743805 146.27131653]
[106.72618866 131.27491760]
[107.05493164 116.27851868]
[99.55673218 116.11414337]
[92.21546173 129.19488525]
[84.87419891 142.27563477]
[77.53292847 155.35636902]
[70.19166565 168.43710327]
[62.85039520 181.51785278]
[67.36717224 196.66296387]
[59.77841568 210.52609253]
[44.58640289 214.88249207]
[30.80428123 207.14758301]
[26.60874176 191.91036987]
[34.48892212 178.21078491]
[49.76965332 174.17658997]
[57.11091995 161.09584045]
[64.45218658 148.01510620]
[71.79345703 134.93435669]
[79.13472748 121.85362244]
[86.47599030 108.77288055]
[89.73744202 94.13173676]
[88.64251709 79.17175293]
[87.54758453 64.21176910]
[83.80108643 55.88440704]
[86.54757690 49.02548218]
[85.67135620 34.05109406]
[84.79512787 19.07670975]
[83.91890717 4.10232401]
[83.04267883 -10.87206173]
[70.14373016 -19.29365540]
[64.74017334 -33.52935028]
[68.70830536 -48.04547882]
[80.32418060 -57.33037949]
[79.44795227 -72.30476379]
[78.57173157 -87.27915192]
[77.69550323 -102.25354004]
[66.16921234 -112.73124695]
[65.49391174 -127.92988586]
[75.55384064 -138.85386658]
[62.65489197 -147.27546692]
[57.25133514 -161.51115417]
[61.21946335 -176.02728271]
[72.83534241 -185.31219482]
[71.95911407 -200.28657532]
[59.06016541 -208.70817566]
[53.65660858 -222.94386292]
[57.62473679 -237.45999146]
[69.24060822 -246.74490356]
[68.36438751 -261.71926880]
[67.48815918 -276.69366455]
[66.61193848 -291.66806030]
[62.98751450 -300.04928589]
[65.83393097 -306.86734009]
[57.49931335 -320.31518555]
[64.67144775 -333.36929321]
[64.01411438 -348.35488892]
[63.35678101 -363.34048462]
[62.69944763 -378.32608032]
[62.04211807 -393.31164551]
[48.92750168 -404.89080811]
[48.25958633 -422.03482056]
[59.96363449 -434.11370850]
[59.08740997 -449.08810425]
[58.21118546 -464.06246948]
[57.22558212 -479.03005981]
[56.13065338 -493.99005127]
[55.03572083 -508.95004272]
[53.94079208 -523.91003418]
[52.84586334 -538.86999512]
[51.75093460 -553.83001709]
[50.65600204 -568.78997803]
[49.56107330 -583.74993896]
[40.20291138 -572.02709961]
[26.12220955 -566.85662842]
[11.40148067 -569.73760986]
[0.30880266 -579.83477783]
[-3.93964767 -594.22058105]
[-0.11208907 -608.72399902]
[10.68172836 -619.14001465]
[25.31228065 -622.44866943]
[39.53763580 -617.69055176]
[49.23231506 -606.24755859]
[49.88964462 -621.23315430]
[50.54697800 -636.21875000]
[43.42186356 -650.34472656]
[51.70946884 -662.72070312]
[52.36679840 -677.70629883]
[52.91463089 -692.69628906]
[53.35292816 -707.68988037]
[53.79122925 -722.68347168]
[54.22952652 -737.67706299]
[54.66782761 -752.67065430]
[40.30046463 -757.33496094]
[27.82993698 -765.85919189]
[18.26717949 -777.55236816]
[12.38739967 -791.46655273]
[10.66724396 -806.47381592]
[13.24615955 -821.35754395]
[19.91508293 -834.91125488]
[30.13339806 -846.03613281]
[43.07275009 -853.83032227]
[57.68420029 -857.66204834]
[72.78327179 -857.22064209]
[87.14594269 -852.54193115]
[99.60789490 -844.00518799]
[109.15890503 -832.30242920]
[115.02470398 -818.38232422]
[116.72978210 -803.37335205]
[114.13591003 -788.49218750]
[107.45337677 -774.94525146]
[97.22389221 -763.83062744]
[84.27671814 -756.04943848]
[69.66142273 -752.23236084]
[69.22312164 -737.23876953]
[68.78482056 -722.24517822]
[68.34652710 -707.25158691]
[67.90822601 -692.25799561]
[70.85396576 -685.48223877]
[67.35238647 -677.04895020]
[66.69506073 -662.06335449]
[73.86718750 -649.00927734]
[65.53256989 -635.56140137]
[64.87523651 -620.57580566]
[64.21790314 -605.59020996]
[69.36671448 -596.02862549]
[64.52105713 -584.84490967]
[65.61598969 -569.88488770]
[66.71091461 -554.92492676]
[67.80584717 -539.96490479]
[68.90077972 -525.00494385]
[69.99570465 -510.04495239]
[71.09063721 -495.08499146]
[72.18556213 -480.12500000]
[75.80775452 -473.68545532]
[73.18556976 -464.93872070]
[74.06179810 -449.96432495]
[74.93801880 -434.98992920]
[85.66813660 -427.85910034]
[90.40353394 -415.66845703]
[87.20695496 -402.78649902]
[77.02770996 -393.96899414]
[77.68503571 -378.98339844]
[78.34236908 -363.99780273]
[78.99970245 -349.01220703]
[79.65703583 -334.02661133]
[87.94464111 -321.65063477]
[80.81952667 -307.52465820]
[81.58632660 -292.54428101]
[82.46254730 -277.56988525]
[83.33877563 -262.59552002]
[84.21499634 -247.62112427]
[96.83450317 -239.75434875]
[102.46856689 -225.80009460]
[98.76220703 -211.03132629]
[86.93350220 -201.16279602]
[87.80972290 -186.18841553]
[100.42922974 -178.32164001]
[106.06329346 -164.36738586]
[102.35693359 -149.59863281]
[90.52822876 -139.73010254]
[101.79357147 -130.05395508]
[102.89550018 -114.88027954]
[92.66989136 -103.12976074]
[93.54611969 -88.15538025]
[94.42234039 -73.18099213]
[95.29856873 -58.20660400]
[107.91806793 -50.33983231]
[113.55213928 -36.38557816]
[109.84577179 -21.61681747]
[98.01706696 -11.74828625]
[98.89329529 3.22609973]
[99.76951599 18.20048523]
[100.64574432 33.17486954]
[101.52196503 48.14925766]
[102.50756836 63.11684036]
[103.60250092 78.07682800]
[104.69742584 93.03681183]
[117.03061676 88.95864105]
[131.71276855 94.45579529]
[142.93940735 110.01064301]
[149.70040894 123.40052795]
[156.46139526 136.79042053]
[163.22238159 150.18029785]
[176.34933472 159.01170349]
[175.17916870 173.86026001]
[181.94015503 187.25015259]
[188.70114136 200.64002991]
[195.46212769 214.02992249]
[202.22312927 227.41979980]
[217.48728943 230.81674194]
[226.95571899 243.26194763]
[226.15769958 258.87915039]
[215.47004700 270.29440308]
[199.93911743 272.11776733]
[186.89817810 263.48831177]
[182.50473022 248.48059082]
[188.83323669 234.18080139]
[182.07225037 220.79090881]
[175.31126404 207.40101624]
[168.55026245 194.01113892]
[161.78927612 180.62124634]
[149.14591980 172.74758911]
[149.83248901 156.94128418]
[143.07150269 143.55140686]
[136.31051636 130.16151428]
[129.54953003 116.77163696]
[122.05133057 116.60726166]
[121.72258759 131.60365295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[27 183]
[28 182]
[29 181]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[39 172]
[40 171]
[41 170]
[42 169]
[45 166]
[49 162]
[50 161]
[54 157]
[55 156]
[56 155]
[57 154]
[59 153]
[61 151]
[62 150]
[63 149]
[64 148]
[65 147]
[68 143]
[69 142]
[70 141]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[76 134]
[77 133]
[78 132]
[88 130]
[89 129]
[90 128]
[92 126]
[93 125]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
[186 212]
[187 211]
[188 210]
[189 209]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
