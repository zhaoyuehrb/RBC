%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGUUGAGUUAGCGCCUCGCCUUCCGGGGCGGAUUGUCUGUCGUUGCAGUAGCUGUAGGAAGGGGAGGCCAUUUUCCGUUUCUGGGAGGAGUGAGGGGCAACGGGUCGGAGAAAAAGGAAAAAAGAAGGGCUCAGCGCCUCCCCGCCGGGCCGUGGACAGAGGGGCACAGUUUCGGCAGGCGGGUGAGGUCGCUGAGGGCCCGCCGGAG\
) } def
/len { sequence length } bind def

/coor [
[224.77619934 138.41844177]
[221.83352661 119.35237122]
[206.90371704 117.90294647]
[191.97390747 116.45352936]
[183.42620850 128.65199280]
[169.82987976 134.97619629]
[154.79415894 133.63688660]
[142.36599731 124.89402771]
[135.94075012 111.01371002]
[121.01093292 109.56428528]
[106.08112335 108.11486816]
[98.39163208 110.53235626]
[90.94039917 106.53111267]
[76.03382111 104.85957336]
[61.45738983 111.01084137]
[49.67160416 101.90345764]
[34.76502991 100.23191833]
[19.85845566 98.56037903]
[4.95188141 96.88883209]
[-9.95469284 95.21729279]
[-24.86126709 93.54575348]
[-39.77987289 91.98522949]
[-54.70967865 90.53581238]
[-69.63948822 89.08639526]
[-84.56929779 87.63697815]
[-99.49910736 86.18755341]
[-113.98233795 92.55516815]
[-125.90242004 83.62426758]
[-140.83222961 82.17484283]
[-155.78195190 80.94786835]
[-170.74830627 79.94361115]
[-185.71464539 78.93934631]
[-200.68098450 77.93508911]
[-215.64733887 76.93083191]
[-230.05148315 90.93797302]
[-249.80815125 89.85272980]
[-262.20275879 74.82316589]
[-277.19900513 74.48818970]
[-292.19528198 74.15321350]
[-307.19152832 73.81823730]
[-321.16104126 81.24542236]
[-333.71237183 73.22583008]
[-348.70861816 72.89085388]
[-362.67813110 80.31804657]
[-375.22946167 72.29845428]
[-390.22946167 72.29845428]
[-405.22570801 72.63343048]
[-420.22195435 72.96840668]
[-435.21823120 73.30338287]
[-450.21447754 73.63835907]
[-465.91464233 80.03690338]
[-476.40936279 66.72161102]
[-466.51968384 52.95098114]
[-450.54946899 58.64209747]
[-435.55319214 58.30712128]
[-420.55694580 57.97214508]
[-405.56069946 57.63716888]
[-390.56442261 57.30219269]
[-387.87640381 55.02032852]
[-383.94961548 53.92705917]
[-379.35467529 54.59044647]
[-374.89447021 57.30219269]
[-361.99758911 49.85104370]
[-348.37365723 57.89459610]
[-333.37738037 58.22957230]
[-320.48049927 50.77842331]
[-306.85656738 58.82197571]
[-291.86029053 59.15695190]
[-276.86404419 59.49192810]
[-261.86776733 59.82690430]
[-256.63430786 50.99617386]
[-248.14112854 45.08844376]
[-237.88249207 43.22474289]
[-227.69750977 45.80730438]
[-219.44041443 52.43509674]
[-214.64308167 61.96448517]
[-199.67672729 62.96874619]
[-184.71038818 63.97300720]
[-169.74404907 64.97726440]
[-154.77769470 65.98152924]
[-150.65632629 63.56835556]
[-144.97526550 63.71858597]
[-139.38281250 67.24503326]
[-124.45299530 68.69445801]
[-111.03764343 62.22317123]
[-98.04969025 71.25774384]
[-83.11988068 72.70716858]
[-68.19007111 74.15658569]
[-53.26026154 75.60600281]
[-38.33045197 77.05541992]
[-31.36919212 74.57295990]
[-23.18972588 78.63918304]
[-8.28315163 80.31072235]
[6.62342215 81.98226166]
[21.52999687 83.65380096]
[36.43656921 85.32534027]
[51.34314346 86.99688721]
[64.85336304 80.72605133]
[77.70536804 89.95299530]
[92.61193848 91.62453461]
[107.53054047 93.18505859]
[122.46035004 94.63448334]
[137.39016724 96.08390045]
[146.36534119 83.69868469]
[160.24311829 77.50965881]
[175.25567627 79.08750916]
[187.38163757 87.90889740]
[193.42333984 101.52371979]
[208.35313416 102.97314453]
[223.28294373 104.42256165]
[226.44566345 93.72583008]
[231.28039551 83.67737579]
[237.66111755 74.53649902]
[245.42199707 66.53891754]
[254.36158752 59.89061356]
[264.24807739 54.76259995]
[274.82537842 51.28647614]
[285.81967163 49.55106354]
[296.94653320 49.60014343]
[307.91830444 51.43134308]
[318.45147705 54.99622726]
[328.27410889 60.20159149]
[337.13275146 66.91187286]
[344.79904175 74.95271301]
[351.07556152 84.11545563]
[355.80093384 94.16258240]
[358.85403442 104.83387756]
[360.15695190 115.85311890]
[359.67709351 126.93530273]
[374.27941895 130.36636353]
[388.88174438 133.79742432]
[403.48406982 137.22848511]
[418.13586426 140.44175720]
[432.83386230 143.43653870]
[447.53186035 146.43130493]
[462.22985840 149.42608643]
[476.92785645 152.42085266]
[491.62588501 155.41563416]
[506.34576416 158.30090332]
[521.08673096 161.07652283]
[535.82769775 163.85212708]
[550.56866455 166.62773132]
[565.32989502 169.29353333]
[580.11053467 171.84936523]
[594.89117432 174.40519714]
[609.67181396 176.96102905]
[624.45245361 179.51686096]
[639.23315430 182.07269287]
[650.20458984 175.29112244]
[662.46282959 177.72416687]
[669.54254150 187.53254700]
[684.28350830 190.30815125]
[699.02447510 193.08377075]
[713.76544189 195.85937500]
[722.77795410 194.37196350]
[728.70446777 198.78761292]
[743.40246582 201.78237915]
[758.10046387 204.77716064]
[772.79852295 207.77192688]
[782.42437744 195.87229919]
[796.48223877 189.81970215]
[811.74182129 191.00500488]
[824.69647217 199.15580750]
[832.36932373 212.39913940]
[832.99725342 227.69175720]
[826.43591309 241.51954651]
[814.19311523 250.70497131]
[799.08209229 253.13729858]
[784.57531738 248.25758362]
[774.00628662 237.18716431]
[769.80371094 222.46994019]
[755.10571289 219.47515869]
[740.40771484 216.48037720]
[725.70971680 213.48561096]
[710.98980713 210.60034180]
[696.24884033 207.82472229]
[681.50787354 205.04911804]
[666.76690674 202.27349854]
[650.54504395 208.96809387]
[636.67730713 196.85334778]
[621.89666748 194.29751587]
[607.11602783 191.74168396]
[592.33532715 189.18585205]
[577.55468750 186.63002014]
[562.77404785 184.07418823]
[555.64739990 186.03202820]
[547.79302979 181.36869812]
[533.05206299 178.59309387]
[518.31109619 175.81747437]
[503.57015991 173.04187012]
[496.41516113 174.89338684]
[488.63110352 170.11363220]
[473.93310547 167.11886597]
[459.23507690 164.12408447]
[444.53707886 161.12931824]
[429.83908081 158.13453674]
[415.14108276 155.13977051]
[410.73425293 156.98068237]
[405.12420654 156.07279968]
[400.05300903 151.83081055]
[385.45068359 148.39974976]
[370.84835815 144.96868896]
[356.24603271 141.53762817]
[347.43304443 158.58432007]
[334.25805664 172.55256653]
[317.73565674 182.35755920]
[299.14083862 187.23544312]
[279.91040039 186.80287170]
[261.53210449 181.08706665]
[245.42950439 170.52426147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 110]
[3 109]
[4 108]
[9 103]
[10 102]
[11 101]
[13 100]
[14 99]
[16 97]
[17 96]
[18 95]
[19 94]
[20 93]
[21 92]
[22 90]
[23 89]
[24 88]
[25 87]
[26 86]
[28 84]
[29 83]
[30 80]
[31 79]
[32 78]
[33 77]
[34 76]
[37 70]
[38 69]
[39 68]
[40 67]
[42 65]
[43 64]
[45 62]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[129 203]
[130 202]
[131 201]
[132 200]
[133 197]
[134 196]
[135 195]
[136 194]
[137 193]
[138 192]
[139 190]
[140 189]
[141 188]
[142 187]
[143 185]
[144 184]
[145 183]
[146 182]
[147 181]
[148 180]
[151 178]
[152 177]
[153 176]
[154 175]
[156 174]
[157 173]
[158 172]
[159 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
