%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAGCGCUGGGAGCCGGAGGGGAGCGCAGCGAGUUUUGGCCAGUGGUCGUGCAGUCCAAGGGGCUGGAUGGCAUGCUGGACCCAAGCUCAGCUCAGCGUCCGGACCCAAUAACAGUUUUACCAAGGGAGCAGCUUUCUAUCCUGGCCACACUGAGGUGCAUAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[105.88862610 219.33393860]
[90.84629059 223.60734558]
[76.59751129 217.16479492]
[69.87014771 203.04826355]
[73.84063721 187.92314148]
[86.63423920 178.93106079]
[87.74202728 163.97201538]
[88.84981537 149.01298523]
[89.95760345 134.05393982]
[91.06539154 119.09490204]
[84.88005066 105.42956543]
[72.90979004 96.39004517]
[60.93953323 87.35052490]
[48.05466080 88.35300446]
[38.26442719 80.54511261]
[36.49366379 68.55403137]
[24.69248772 59.29485703]
[12.89131355 50.03568268]
[1.09013987 40.77651215]
[-10.71103382 31.51733780]
[-26.34431648 29.08607292]
[-31.58136749 15.14252377]
[-49.85041809 12.98490620]
[-55.78693008 -3.51171803]
[-67.75718689 -12.55123711]
[-79.72744751 -21.59075737]
[-91.69770813 -30.63027573]
[-99.69044495 -27.93477058]
[-108.00188446 -28.63374329]
[-115.26610565 -32.53712082]
[-120.31924438 -38.93443298]
[-122.38578033 -46.72298431]
[-121.19692993 -54.59755325]
[-132.46690369 -64.49642181]
[-143.73689270 -74.39528656]
[-155.00686646 -84.29415894]
[-166.27684021 -94.19302368]
[-177.54682922 -104.09189606]
[-193.02136230 -107.38568115]
[-197.47773743 -121.59800720]
[-208.74771118 -131.49687195]
[-220.10867310 -141.29118347]
[-231.55964661 -150.98010254]
[-243.01062012 -160.66902161]
[-254.46159363 -170.35794067]
[-265.91256714 -180.04687500]
[-284.08941650 -182.87808228]
[-289.41229248 -199.58280945]
[-301.04037476 -209.05847168]
[-312.66842651 -218.53413391]
[-324.29647827 -228.00979614]
[-335.92453003 -237.48545837]
[-351.51022339 -240.20520020]
[-356.48870850 -254.24313354]
[-368.11679077 -263.71881104]
[-379.74484253 -273.19445801]
[-391.37289429 -282.67013550]
[-403.00094604 -292.14581299]
[-414.62902832 -301.62145996]
[-430.72711182 -306.94006348]
[-430.07275391 -323.88137817]
[-413.61236572 -327.94241333]
[-405.15335083 -313.24951172]
[-393.52529907 -303.77386475]
[-381.89724731 -294.29818726]
[-370.26916504 -284.82254028]
[-358.64111328 -275.34686279]
[-347.01306152 -265.87121582]
[-332.25909424 -263.82922363]
[-326.44888306 -249.11352539]
[-314.82083130 -239.63786316]
[-303.19274902 -230.16218567]
[-291.56469727 -220.68652344]
[-279.93664551 -211.21086121]
[-267.84973145 -212.12084961]
[-258.07971191 -204.28767395]
[-256.22366333 -191.49784851]
[-244.77267456 -181.80892944]
[-233.32170105 -172.11999512]
[-221.87072754 -162.43107605]
[-210.41975403 -152.74215698]
[-203.25424194 -150.81457520]
[-198.84884644 -142.76684570]
[-187.57887268 -132.86798096]
[-172.91043091 -130.28222656]
[-167.64794922 -115.36186981]
[-156.37797546 -105.46300507]
[-145.10800171 -95.56413269]
[-133.83801270 -85.66526794]
[-122.56803894 -75.76639557]
[-111.29806519 -65.86753082]
[-89.76404572 -63.83196640]
[-82.65818787 -42.60053635]
[-70.68792725 -33.56101608]
[-58.71766663 -24.52149582]
[-46.74740982 -15.48197651]
[-34.70237350 -16.83797836]
[-24.64957619 -9.37117004]
[-22.32219315 3.34134936]
[-7.53300953 5.11033535]
[-1.45186090 19.71616364]
[10.34931278 28.97533607]
[22.15048790 38.23450851]
[33.95166016 47.49368286]
[45.75283432 56.75285721]
[63.21923828 58.27124786]
[69.97904968 75.38026428]
[81.94931030 84.41978455]
[93.91957092 93.45930481]
[94.54075623 87.61675262]
[98.52349091 81.92417145]
[105.67454529 77.98059082]
[115.11946869 77.21913910]
[125.40852356 80.63881683]
[134.72158813 88.59325409]
[149.14897156 92.69819641]
[163.57635498 96.80313873]
[178.00373840 100.90808868]
[189.05567932 90.33444214]
[203.81877136 86.73614502]
[218.30451965 90.98228455]
[228.65072632 101.83641052]
[232.15126038 116.31438446]
[246.57864380 120.41932678]
[261.00604248 124.52427673]
[275.57525635 128.09330750]
[290.26638794 131.12153625]
[304.95755005 134.14978027]
[319.64868164 137.17800903]
[334.33984375 140.20625305]
[349.03097534 143.23448181]
[365.76464844 140.51028442]
[373.01470947 155.83584595]
[360.29510498 167.04512024]
[346.00274658 157.92562866]
[331.31161499 154.89739990]
[316.62045288 151.86915588]
[301.92932129 148.84092712]
[287.23815918 145.81268311]
[272.54702759 142.78445435]
[270.11346436 144.24954224]
[266.94183350 144.81947327]
[263.37741089 144.20399475]
[259.86538696 142.24577332]
[256.90109253 138.95166016]
[242.47370911 134.84671021]
[228.04632568 130.74177551]
[217.44842529 141.20840454]
[202.93794250 144.99017334]
[188.38661194 140.97456360]
[177.72903442 130.14346313]
[173.89880371 115.33547211]
[159.47142029 111.23052979]
[145.04403687 107.12557983]
[130.61665344 103.02063751]
[124.46858978 107.31615448]
[135.16180420 117.83543396]
[147.74481201 126.00046539]
[148.00164795 140.99826050]
[135.70559692 149.58935547]
[121.71111298 144.18984985]
[118.37205505 129.56607056]
[112.17248535 115.90718079]
[106.02442932 120.20269012]
[104.91664124 135.16172791]
[103.80885315 150.12077332]
[102.70106506 165.07980347]
[101.59327698 180.03884888]
[112.92278290 190.81735229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 168]
[7 167]
[8 166]
[9 165]
[10 164]
[11 109]
[12 108]
[13 107]
[16 105]
[17 104]
[18 103]
[19 102]
[20 101]
[22 99]
[24 96]
[25 95]
[26 94]
[27 93]
[33 91]
[34 90]
[35 89]
[36 88]
[37 87]
[38 86]
[40 84]
[41 83]
[42 81]
[43 80]
[44 79]
[45 78]
[46 77]
[48 74]
[49 73]
[50 72]
[51 71]
[52 70]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[59 63]
[115 155]
[116 154]
[117 153]
[118 152]
[123 147]
[124 146]
[125 145]
[126 140]
[127 139]
[128 138]
[129 137]
[130 136]
[131 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
