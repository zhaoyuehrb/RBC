%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUGGAGCGCGCUUGGAAUCCAGCAGGCGGUUGCUGCCGCGUCUUCCACAACCUCCGCGGUCUGGAGCUGGCCUCCCCCACCGCCGCCCCAACCACCGGCCCCGCCGCCAUCACCACCACCGUCACCUCCGCCGCUGCCUCCUUGGGGCCCUCCUCCUUCACCGCCCCCUUAGCCACCUCUACACAUUCUAGGCUUUCUGUCCUGGAGAAGAAGCUAUAAUCGGUUUCCUUGUGGGCCCGGUGCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[368.59277344 366.40524292]
[353.34033203 365.83453369]
[339.84997559 358.69497681]
[330.80026245 346.40411377]
[327.98797607 331.40231323]
[331.97152710 316.66818237]
[341.95999146 305.12722778]
[355.97009277 299.07089233]
[356.53097534 284.08139038]
[357.09182739 269.09185791]
[357.65270996 254.10235596]
[358.21356201 239.11285400]
[358.77444458 224.12333679]
[359.33529663 209.13383484]
[338.67712402 198.01100159]
[334.14236450 177.21705627]
[320.39392090 171.21867371]
[306.64550781 165.22029114]
[295.44274902 171.55529785]
[282.44183350 170.27018738]
[272.40158081 161.61064148]
[269.12622070 148.56228638]
[255.45362854 142.39297485]
[241.78105164 136.22366333]
[228.10845947 130.05436707]
[220.73860168 130.16775513]
[214.30462646 123.72197723]
[200.71000671 117.38270569]
[187.11538696 111.04342651]
[173.52076721 104.70415497]
[159.92616272 98.36488342]
[146.06123352 103.68460083]
[132.18405151 97.44933319]
[126.69824982 82.87045288]
[135.54139709 109.59531403]
[119.08996582 137.30619812]
[83.39205170 143.96760559]
[69.23380280 148.92178345]
[55.07555008 153.87597656]
[40.91730118 158.83015442]
[26.75905037 163.78434753]
[12.60080147 168.73852539]
[11.78341866 183.91748047]
[5.21501684 197.62603760]
[-6.10277081 207.77374268]
[-20.44406319 212.81317139]
[-35.62191772 211.97581482]
[-49.32182312 205.38938904]
[-59.45464325 194.05825806]
[-64.47518921 179.71035767]
[-63.61787796 164.53361511]
[-57.01343155 150.84237671]
[-45.66898727 140.72447205]
[-31.31448555 135.72280884]
[-16.13888550 136.60008240]
[-2.45635653 143.22253418]
[7.64661551 154.58027649]
[21.80486488 149.62609863]
[35.96311569 144.67190552]
[50.12136459 139.71772766]
[64.27961731 134.76353455]
[78.43786621 129.80935669]
[78.57810974 122.31066132]
[78.99883270 99.81459808]
[65.03572845 94.33448029]
[51.07262039 88.85436249]
[35.39964676 91.01504517]
[26.37891769 79.16280365]
[12.41581059 73.68268585]
[3.31107712 73.46397400]
[-1.68650758 68.04624176]
[-15.58021164 62.39247894]
[-29.47391701 56.73872375]
[-41.55102158 66.22761536]
[-56.75681686 68.39080048]
[-71.00102234 62.64639282]
[-80.45201111 50.53960419]
[-82.56752014 35.32710266]
[-76.77849579 21.10097504]
[-64.64213562 11.68797874]
[-49.42308044 9.62016106]
[-35.21517181 15.45375538]
[-25.84026146 27.61955452]
[-23.82015800 42.84501648]
[-9.92645359 48.49877548]
[3.96725035 54.15253448]
[17.89592552 59.71957779]
[31.85903168 65.19969177]
[46.53326797 62.64703751]
[56.55273438 74.89125824]
[70.51583862 80.37137604]
[84.47894287 85.85148621]
[89.22785950 80.04650116]
[77.61788177 70.54868317]
[72.31197357 56.51845551]
[87.11569977 58.93871307]
[98.72567749 68.43653107]
[103.47458649 62.63154602]
[95.33638763 50.03115845]
[87.19819641 37.43076706]
[79.06000519 24.83037949]
[65.38745880 14.80551624]
[71.23561096 -1.10785782]
[88.14601135 0.10648435]
[91.66039276 16.69218445]
[99.79858398 29.29257393]
[107.93677521 41.89296341]
[116.07497406 54.49335098]
[109.28388214 41.11870956]
[106.84301758 26.31863403]
[108.97971344 11.47159672]
[115.49496460 -2.03956509]
[125.78194427 -12.95643425]
[138.88253784 -20.26222420]
[153.57655334 -23.27647972]
[168.49542236 -21.71845436]
[182.24960327 -15.73326302]
[193.55804443 -5.87836075]
[201.36749268 6.92837667]
[204.95057678 21.49414062]
[203.97358704 36.46228790]
[198.52749634 50.43870163]
[189.11956787 62.12163162]
[176.62603760 70.42293549]
[162.21054077 74.56944275]
[147.21572876 74.17494965]
[133.03752136 69.27584076]
[147.73179626 64.10707855]
[161.42835999 70.72966766]
[166.26542664 84.77026367]
[179.86004639 91.10954285]
[193.45466614 97.44881439]
[207.04928589 103.78808594]
[220.64389038 110.12736511]
[234.27777100 116.38177490]
[247.95034790 122.55107880]
[261.62292480 128.72038269]
[275.29553223 134.88969421]
[291.55651855 128.40577698]
[307.16284180 135.55967712]
[312.64389038 151.47186279]
[326.39230347 157.47023010]
[340.14074707 163.46861267]
[353.33666992 154.46130371]
[370.13327026 155.38945007]
[383.54364014 166.89195251]
[387.37387085 185.00469971]
[402.27954102 186.68417358]
[417.18524170 188.36363220]
[432.09091187 190.04310608]
[446.99658203 191.72256470]
[461.90228271 193.40203857]
[467.60427856 180.19607544]
[476.78439331 169.14263916]
[488.69259644 161.13073730]
[502.35995483 156.80149841]
[516.67749023 156.49679565]
[530.48596191 160.23234558]
[542.66998291 167.69711304]
[552.24798584 178.27923584]
[558.45129395 191.11607361]
[560.78582764 205.16464233]
[575.66943359 207.02978516]
[590.55303955 208.89494324]
[605.43664551 210.76010132]
[612.20306396 199.79472351]
[622.57098389 192.22294617]
[634.98492432 189.13705444]
[647.59899902 190.95960999]
[658.55126953 197.38600159]
[666.23846436 207.43464661]
[669.55072021 219.59683228]
[684.38317871 221.83245850]
[699.21563721 224.06809998]
[714.04809570 226.30372620]
[726.68066406 217.19017029]
[741.69104004 219.66871643]
[750.30157471 231.76805115]
[765.10076904 226.17398071]
[776.53271484 235.72177124]
[791.36517334 237.95739746]
[782.22949219 226.06037903]
[782.77325439 211.07023621]
[792.74688721 199.86639404]
[807.57324219 197.59060669]
[820.44805908 205.28730774]
[825.46270752 219.42427063]
[820.31579590 233.51361084]
[807.37023926 241.08918762]
[821.95141602 244.60903931]
[836.53259277 248.12890625]
[851.11376953 251.64875793]
[865.69494629 255.16862488]
[880.27612305 258.68847656]
[894.87890625 262.11740112]
[909.17327881 254.83380127]
[923.72003174 261.59927368]
[927.36016846 277.22390747]
[917.30126953 289.72180176]
[901.25964355 289.50567627]
[891.54113770 276.74130249]
[884.33984375 278.31277466]
[876.75622559 273.26965332]
[862.17504883 269.74978638]
[847.59387207 266.22994995]
[833.01269531 262.71008301]
[818.43151855 259.19021606]
[803.85034180 255.67034912]
[789.12951660 252.78987122]
[774.29705811 250.55422974]
[760.55877686 256.30819702]
[748.06591797 246.60052490]
[736.27160645 255.62432861]
[721.19750977 253.56837463]
[711.81250000 241.13618469]
[696.98004150 238.90055847]
[682.14758301 236.66491699]
[667.31512451 234.42929077]
[657.05511475 248.28269958]
[641.10357666 255.05158997]
[623.83459473 252.78149414]
[610.03369141 242.01014709]
[603.57147217 225.64369202]
[588.68786621 223.77853394]
[573.80426025 221.91337585]
[558.92071533 220.04821777]
[552.40832520 234.30635071]
[541.79241943 245.86566162]
[528.10504150 253.58456421]
[512.68237305 256.69570923]
[497.03430176 254.88224792]
[482.69659424 248.31004333]
[471.08013916 237.61257935]
[463.33215332 223.82995605]
[460.22280884 208.30772400]
[445.31713867 206.62825012]
[430.41143799 204.94879150]
[415.50576782 203.26931763]
[400.60006714 201.58985901]
[385.69439697 199.91038513]
[374.32482910 209.69470215]
[373.76394653 224.68420410]
[373.20309448 239.67372131]
[372.64221191 254.66322327]
[372.08135986 269.65274048]
[371.52047729 284.64224243]
[370.95962524 299.63177490]
[384.47796631 306.71813965]
[393.57601929 318.97326660]
[396.44735718 333.96386719]
[392.52185059 348.71356201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 247]
[9 246]
[10 245]
[11 244]
[12 243]
[13 242]
[14 241]
[16 143]
[17 142]
[18 141]
[22 138]
[23 137]
[24 136]
[25 135]
[27 134]
[28 133]
[29 132]
[30 131]
[31 130]
[34 127]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[64 92]
[65 91]
[66 90]
[68 88]
[69 87]
[71 86]
[72 85]
[73 84]
[98 108]
[99 107]
[100 106]
[101 105]
[147 240]
[148 239]
[149 238]
[150 237]
[151 236]
[152 235]
[162 226]
[163 225]
[164 224]
[165 223]
[172 218]
[173 217]
[174 216]
[175 215]
[178 212]
[180 210]
[181 209]
[189 208]
[190 207]
[191 206]
[192 205]
[193 204]
[194 203]
[195 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
