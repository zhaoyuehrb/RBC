%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGGGGCGCUGUUGCUGUGGCUGAGAUUUGGCCGCCGCCUCCCCCACCCGGCCUGCGCCCUCCCUCUCCCUCGGCGCCCGCCCGCCCGCUCGCGGCCCGCGCUCGCUCCUCUCCCUCGCAGCCGGCAGGGCCCCCGACCCCCGUCCGGGCCCUCGCCGGCCCGGCCGCCCGUGCCCGGGGCUGUUUUCGCGAGCAGGUGAAA\
) } def
/len { sequence length } bind def

/coor [
[105.29624176 132.39228821]
[95.51506042 137.61807251]
[85.11357117 148.42590332]
[81.41515350 156.78344727]
[74.46891022 159.31809998]
[63.90302277 169.96527100]
[53.33713531 180.61242676]
[42.77124786 191.25958252]
[38.54252625 206.50518799]
[24.08551407 210.08905029]
[38.86180878 212.66995239]
[46.19445801 225.75552368]
[40.68155289 239.70571899]
[26.38440895 244.24353027]
[13.83562946 236.02598572]
[12.27951241 221.10772705]
[0.92959470 230.91482544]
[-4.45375729 245.79199219]
[-19.14269257 248.25866699]
[-30.49260902 258.06576538]
[-41.84252930 267.87289429]
[-53.19244385 277.67999268]
[-64.54236603 287.48709106]
[-75.89228058 297.29421997]
[-87.24219513 307.10131836]
[-98.59211731 316.90841675]
[-106.62383270 331.83920288]
[-123.19450378 328.25460815]
[-124.33721924 311.33920288]
[-108.39922333 305.55850220]
[-97.04930878 295.75140381]
[-85.69938660 285.94427490]
[-74.34947205 276.13717651]
[-62.99955368 266.33007812]
[-51.64963531 256.52294922]
[-40.29971695 246.71585083]
[-28.94980049 236.90875244]
[-24.37827110 222.73304749]
[-8.87751389 219.56491089]
[2.47240400 209.75779724]
[13.43835354 199.52316284]
[16.91133118 185.03910828]
[32.12408829 180.69369507]
[42.68997574 170.04653931]
[53.25586319 159.39938354]
[63.82175064 148.75221252]
[74.30574799 138.02441406]
[84.70723724 127.21659088]
[83.61919403 119.79592896]
[69.67807770 114.26010132]
[81.44310760 104.95461273]
[80.35506439 97.53395844]
[67.28874207 90.16706085]
[54.22241592 82.80017090]
[39.17387772 86.82251740]
[26.02770805 79.16530609]
[22.28575325 64.79403687]
[9.21942711 57.42714310]
[-3.84689927 50.06024933]
[-16.91322517 42.69335556]
[-29.97955132 35.32645798]
[-42.18271255 44.43704605]
[-57.03789139 47.79017639]
[-71.97134399 44.80489731]
[-84.39575958 35.99843216]
[-92.15852356 22.89655113]
[-93.91470337 7.76923323]
[-89.36002350 -6.76262045]
[-79.28360748 -18.18127823]
[-65.43125916 -24.50839043]
[-50.20298386 -24.64774513]
[-36.23716354 -18.57519913]
[-25.95347023 -7.34285593]
[-21.13361168 7.10321093]
[-22.61265755 22.26013374]
[-9.54633141 29.62702751]
[3.51999474 36.99392319]
[16.58632088 44.36081696]
[29.65264702 51.72771072]
[43.88591766 47.49100876]
[57.24197388 54.77595139]
[61.58930969 69.73384094]
[74.65563202 77.10073853]
[87.72196198 84.46762848]
[102.65859222 85.84492493]
[116.85173798 80.99160004]
[131.04487610 76.13827515]
[145.23802185 71.28495026]
[155.79243469 59.49872971]
[170.33853149 62.70186615]
[184.53167725 57.84854126]
[198.72482300 52.99521637]
[212.91795349 48.14189529]
[227.11109924 43.28857040]
[241.30424500 38.43524551]
[268.60354614 18.13986778]
[280.39218140 8.86474514]
[292.18084717 -0.41037717]
[303.96948242 -9.68549919]
[306.89172363 -29.11302757]
[323.48849487 -38.55082703]
[327.35226440 -53.04466248]
[331.21603394 -67.53849792]
[318.93582153 -76.45816803]
[310.71029663 -89.21376038]
[307.65188599 -104.08018494]
[310.17425537 -119.04689026]
[317.93624878 -132.08973694]
[329.88812256 -141.44479370]
[344.41348267 -145.84686279]
[359.54791260 -144.70062256]
[373.24456787 -138.16105652]
[383.65112305 -127.11260986]
[389.36016846 -113.04949188]
[389.59957886 -97.87361908]
[384.33700562 -83.63740540]
[374.28414917 -72.26618195]
[360.80059814 -65.29781342]
[345.70986938 -63.67471695]
[341.84609985 -49.18088150]
[337.98233032 -34.68704987]
[340.10955811 -32.96781540]
[342.00177002 -30.99285698]
[356.11886597 -36.06311035]
[370.23599243 -41.13336182]
[384.35308838 -46.20361710]
[398.47018433 -51.27386856]
[412.58728027 -56.34412384]
[426.66513062 -61.52239609]
[440.70285034 -66.80838776]
[454.74060059 -72.09438324]
[468.77835083 -77.38037109]
[482.81610107 -82.66636658]
[496.85385132 -87.95235443]
[510.89160156 -93.23834991]
[516.91607666 -104.64662170]
[528.72070312 -108.75888824]
[539.79516602 -103.88495636]
[553.91223145 -108.95520782]
[568.02935791 -114.02546692]
[578.20513916 -126.88570404]
[594.38879395 -124.23596191]
[599.93194580 -108.80206299]
[589.13232422 -96.46109009]
[573.09960938 -99.90836334]
[558.98248291 -94.83811188]
[544.86541748 -89.76786041]
[534.26928711 -75.78148651]
[516.17761230 -79.20059967]
[502.13983154 -73.91461182]
[488.10208130 -68.62861633]
[474.06436157 -63.34262848]
[460.02661133 -58.05663681]
[445.98886108 -52.77064514]
[431.95111084 -47.48465347]
[426.79672241 -42.18302917]
[417.65753174 -42.22702408]
[403.54043579 -37.15676880]
[389.42333984 -32.08651733]
[375.30624390 -27.01626205]
[361.18914795 -21.94601059]
[347.07202148 -16.87575722]
[342.03771973 -2.61963534]
[328.67123413 5.05403709]
[313.24459839 2.10314369]
[301.45596313 11.37826633]
[289.66732788 20.65338898]
[277.87866211 29.92851067]
[277.76373291 44.92807007]
[289.40887451 54.38275528]
[301.05398560 63.83744049]
[312.69909668 73.29212952]
[328.01785278 70.15048981]
[341.74743652 77.63598633]
[347.40515137 92.21419525]
[342.31961060 107.00173187]
[328.89205933 115.01637268]
[313.46255493 112.47385406]
[303.31643677 100.57466888]
[303.24441528 84.93724823]
[291.59930420 75.48256683]
[279.95416260 66.02787781]
[268.30905151 56.57319641]
[276.25930786 69.29300690]
[274.75985718 84.21787262]
[264.43820190 95.10198212]
[249.61381531 97.39050293]
[236.49043274 90.12574005]
[230.55999756 76.34786224]
[234.30427551 61.82270432]
[246.15756226 52.62838745]
[231.96441650 57.48170853]
[217.77128601 62.33503342]
[203.57814026 67.18835449]
[189.38499451 72.04167938]
[175.19186401 76.89500427]
[165.65263367 88.33408356]
[150.09133911 85.47808838]
[135.89819336 90.33141327]
[121.70506287 95.18473816]
[107.51191711 100.03806305]
[112.06404877 103.54494476]
[114.88083649 109.46547699]
[115.02707672 117.01168823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 48]
[3 47]
[5 46]
[6 45]
[7 44]
[8 43]
[10 41]
[16 40]
[17 39]
[19 37]
[20 36]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[26 30]
[52 84]
[53 83]
[54 82]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[85 201]
[86 200]
[87 199]
[88 198]
[90 196]
[91 195]
[92 194]
[93 193]
[94 192]
[95 191]
[96 168]
[97 167]
[98 166]
[99 165]
[101 121]
[102 120]
[103 119]
[123 162]
[124 161]
[125 160]
[126 159]
[127 158]
[128 157]
[129 155]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[138 147]
[139 146]
[140 145]
[169 183]
[170 182]
[171 181]
[172 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
