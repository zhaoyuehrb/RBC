%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUGCUUCCUGUGCCGGGGGAGGUGGGUACAGGGAAGUCUCGCCUGUUGGAACUGGCUGUGGGGCUGCGGCGGUGGGGACGGGCCACGGCGUUCUGUGACAUCCCCCCGCCUCCCCUCGUCUUCUCCCGGCUGGCGGCGACCGGCCUCAGCUGCAGCGGGCCCGGGGCGUGGGGCCUGGGUUUUUUGUGACAUCGUAAAC\
) } def
/len { sequence length } bind def

/coor [
[93.03481293 152.06008911]
[90.19480896 137.33139038]
[87.35480499 122.60269928]
[80.22908783 124.94239807]
[75.66011047 139.22961426]
[71.09114075 153.51681519]
[66.52217102 167.80403137]
[72.56416321 182.66586304]
[64.58650970 196.58479309]
[48.70898056 198.88340759]
[37.11145782 187.79841614]
[38.69057083 171.83326721]
[52.23495483 163.23506165]
[56.80392456 148.94784546]
[61.37289810 134.66062927]
[65.94187164 120.37342072]
[61.92894745 105.92017365]
[50.64815903 96.03362274]
[39.36737442 86.14707184]
[28.08658981 76.26052094]
[16.80580521 66.37397003]
[5.52501965 56.48741913]
[-5.75576591 46.60086823]
[-17.03655052 36.71431732]
[-28.31733704 26.82776642]
[-39.67428589 17.02880096]
[-51.10671616 7.31800652]
[-62.53914642 -2.39278769]
[-73.97158051 -12.10358238]
[-78.28269196 -12.73167133]
[-81.81209564 -14.52197075]
[-84.28988647 -17.08485222]
[-85.60085297 -19.98299980]
[-85.78666687 -22.78616524]
[-96.59645844 -33.18561172]
[-107.40624237 -43.58506012]
[-118.21602631 -53.98450851]
[-131.92549133 -60.07141495]
[-146.88914490 -61.11519241]
[-161.85278320 -62.15896606]
[-176.81642151 -63.20273972]
[-191.78005981 -64.24651337]
[-206.74369812 -65.29028320]
[-221.70733643 -66.33406067]
[-236.67097473 -67.37783813]
[-246.90202332 -59.51674652]
[-259.34753418 -60.69804001]
[-267.38360596 -69.74488068]
[-282.32931519 -71.02009583]
[-297.27499390 -72.29531097]
[-309.19689941 -61.92014313]
[-324.95730591 -63.09716797]
[-335.20584106 -75.12808228]
[-333.86224365 -90.87516022]
[-321.72366333 -100.99592590]
[-305.99166870 -99.48592377]
[-295.99978638 -87.24100494]
[-281.05410767 -85.96578979]
[-266.10839844 -84.69057465]
[-250.64799500 -92.98799896]
[-235.62721252 -82.34147644]
[-220.66355896 -81.29769897]
[-205.69992065 -80.25392914]
[-190.73628235 -79.21015167]
[-175.77264404 -78.16638184]
[-160.80900574 -77.12260437]
[-145.84536743 -76.07883453]
[-130.88172913 -75.03505707]
[-126.20555115 -80.89879608]
[-116.85320282 -92.62626648]
[-112.17703247 -98.48999786]
[-116.52436066 -112.84621429]
[-120.87168121 -127.20242310]
[-125.21900940 -141.55862427]
[-129.56634521 -155.91484070]
[-135.05198669 -163.22685242]
[-133.86801147 -170.52694702]
[-137.99264526 -184.94871521]
[-142.11729431 -199.37046814]
[-146.24192810 -213.79223633]
[-150.36657715 -228.21400452]
[-161.24684143 -235.14874268]
[-164.38301086 -247.25044250]
[-158.62110901 -257.89111328]
[-169.39276123 -264.99340820]
[-172.34126282 -277.14218140]
[-166.41539001 -287.69244385]
[-170.09175110 -302.23492432]
[-173.76811218 -316.77743530]
[-177.44447327 -331.31994629]
[-181.12083435 -345.86245728]
[-192.93289185 -357.23818970]
[-188.72514343 -373.08831787]
[-172.82617188 -377.10760498]
[-161.59146118 -365.16131592]
[-166.57832336 -349.53881836]
[-162.90196228 -334.99630737]
[-159.22560120 -320.45379639]
[-155.54925537 -305.91128540]
[-151.87289429 -291.36880493]
[-138.98078918 -279.46646118]
[-144.13723755 -261.79208374]
[-131.06250000 -250.09071350]
[-135.94480896 -232.33865356]
[-131.82017517 -217.91688538]
[-127.69552612 -203.49511719]
[-123.57088470 -189.07334900]
[-119.44624329 -174.65158081]
[-115.21012878 -160.26216125]
[-110.86280060 -145.90596008]
[-106.51547241 -131.54974365]
[-102.16814423 -117.19353485]
[-97.82082367 -102.83732605]
[-107.81658173 -64.79429626]
[-97.00679779 -54.39484787]
[-86.19700623 -43.99539948]
[-75.38722229 -33.59595108]
[-64.26078033 -23.53601265]
[-52.82835007 -13.82521820]
[-41.39591980 -4.11442423]
[-29.96348953 5.59636974]
[-22.82577324 7.53188276]
[-18.43078613 15.54698086]
[-7.15000010 25.43353271]
[4.13078499 35.32008362]
[15.41157055 45.20663452]
[26.69235611 55.09318542]
[37.97314072 64.97973633]
[49.25392532 74.86628723]
[60.53470993 84.75283813]
[71.81549835 94.63938904]
[117.92511749 59.50779724]
[132.24725342 55.04951477]
[146.56939697 50.59122849]
[160.89154053 46.13294601]
[175.21366882 41.67466354]
[182.48301697 36.13260651]
[189.79205322 37.26005936]
[204.18147278 33.02394485]
[218.57089233 28.78783417]
[227.48117065 15.44667816]
[243.47866821 14.23857021]
[254.29148865 26.09026909]
[251.62493896 41.91016388]
[237.52458191 49.56258774]
[222.80700684 43.17725372]
[208.41758728 47.41336441]
[194.02816772 51.64947510]
[179.67196655 55.99680328]
[165.34982300 60.45508575]
[151.02767944 64.91336823]
[136.70553589 69.37165070]
[122.38339996 73.82994080]
[121.17003632 81.23114014]
[117.52993774 103.43473053]
[129.67881775 112.23271942]
[141.82771301 121.03070831]
[153.97659302 129.82870483]
[169.69187927 131.65631104]
[175.46185303 145.38790894]
[187.61073303 154.18589783]
[199.75962830 162.98388672]
[211.90850830 171.78187561]
[224.05738831 180.57986450]
[236.20628357 189.37785339]
[248.35516357 198.17582703]
[260.50405884 206.97381592]
[272.65292358 215.77180481]
[288.36822510 217.59942627]
[294.13818359 231.33102417]
[310.49697876 232.48081970]
[317.43640137 247.33937073]
[307.81774902 260.62145996]
[291.53591919 258.66363525]
[285.34020996 243.47990417]
[270.49386597 242.28158569]
[263.85494995 227.92070007]
[251.70605469 219.12271118]
[239.55717468 210.32472229]
[227.40829468 201.52673340]
[215.25939941 192.72874451]
[203.11051941 183.93075562]
[190.96163940 175.13276672]
[178.81274414 166.33477783]
[166.66386414 157.53678894]
[151.81753540 156.33847046]
[145.17860413 141.97758484]
[133.02972412 133.17959595]
[120.88083649 124.38160706]
[108.73194885 115.58361816]
[101.60623169 117.92330933]
[108.04990387 131.46876526]
[114.49357605 145.01420593]
[120.93724060 158.55964661]
[127.38091278 172.10510254]
[138.17236328 182.52357483]
[139.93058777 197.42018127]
[131.86126709 210.06477356]
[117.61000824 214.74470520]
[103.61537170 209.34561157]
[96.19997406 196.30676270]
[98.71482086 181.51747131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 16]
[5 15]
[6 14]
[7 13]
[17 131]
[18 130]
[19 129]
[20 128]
[21 127]
[22 126]
[23 125]
[24 124]
[25 123]
[26 121]
[27 120]
[28 119]
[29 118]
[34 117]
[35 116]
[36 115]
[37 114]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[45 61]
[48 59]
[49 58]
[50 57]
[71 113]
[72 112]
[73 111]
[74 110]
[75 109]
[77 108]
[78 107]
[79 106]
[80 105]
[81 104]
[84 102]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
[132 153]
[133 152]
[134 151]
[135 150]
[136 149]
[138 148]
[139 147]
[140 146]
[155 190]
[156 189]
[157 188]
[158 187]
[160 185]
[161 184]
[162 183]
[163 182]
[164 181]
[165 180]
[166 179]
[167 178]
[168 177]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
