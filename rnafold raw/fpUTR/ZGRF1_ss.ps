%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGCGAUUUGAAAGCGGCGGUUUUUGGCUUAGGCGGAGGUGGGCGGGCCAAGUUUUGGGUCCUCAUCUGGUGAGGUCCCGCGUUAAUGACGUCACGUUGUUUCGCGGGAGAAAUUCGAAAGUGGAUUUUGUGCAAUUUGACAGGUGGUAUAAAUAGUUGAAUAUUUCCUAUUUUCUGGACCCAGCUGGUUUAUAACUUCAGAAGAAAUA\
) } def
/len { sequence length } bind def

/coor [
[93.50619507 360.47128296]
[101.77193451 347.64004517]
[114.79084778 339.67318726]
[113.23766327 324.75384521]
[111.68447113 309.83447266]
[102.67090607 297.97677612]
[108.93766785 283.44961548]
[105.11877441 277.12274170]
[107.47368622 268.29788208]
[106.14174652 253.35714722]
[94.58689880 244.02864075]
[93.02328491 228.89556885]
[102.88623047 216.83903503]
[101.55429077 201.89828491]
[100.22235107 186.95753479]
[91.38548279 174.96757507]
[97.86682129 160.53488159]
[96.53488159 145.59413147]
[95.20294189 130.65338135]
[93.87100983 115.71263123]
[87.44161987 111.85090637]
[79.71796417 124.70957184]
[66.85942078 116.98571777]
[74.58283234 104.12744904]
[68.15344238 100.26572418]
[54.33816147 106.10849762]
[40.52288055 111.95127106]
[26.70760155 117.79404449]
[12.89231968 123.63682556]
[-0.92296118 129.47959900]
[-14.73824215 135.32237244]
[-28.55352402 141.16514587]
[-32.83652878 146.20011902]
[-38.21228409 148.04058838]
[-42.86582565 146.96963501]
[-56.84818268 152.40045166]
[-60.67467117 167.43832397]
[-72.63089752 177.32914734]
[-88.11943817 178.26968384]
[-101.18464661 169.89830017]
[-106.80266571 155.43394470]
[-102.81327057 140.43847656]
[-90.75045013 130.67793274]
[-75.25261688 129.90547180]
[-62.27899551 138.41809082]
[-48.29664230 132.98727417]
[-34.39629745 127.34986115]
[-20.58101654 121.50708771]
[-6.76573515 115.66431427]
[7.04954576 109.82154083]
[20.86482620 103.97876740]
[34.68010712 98.13599396]
[48.49538803 92.29322052]
[62.31066895 86.45044708]
[73.46820068 82.37417603]
[83.99486542 82.58198547]
[92.56402588 86.44938660]
[98.12953186 92.98636627]
[104.78047180 79.54147339]
[111.43141174 66.09658813]
[118.08235168 52.65169907]
[124.73329163 39.20681000]
[131.38423157 25.76192284]
[138.03517151 12.31703472]
[144.20762634 -23.99411011]
[144.65213013 -38.98752213]
[145.09663391 -53.98093414]
[145.54112244 -68.97434998]
[145.98562622 -83.96775818]
[146.43013000 -98.96117401]
[146.87463379 -113.95458221]
[136.31477356 -125.40566254]
[136.97914124 -140.60478210]
[147.96107483 -150.60142517]
[148.40557861 -165.59483337]
[148.85006714 -180.58825684]
[128.81834412 -199.61203003]
[137.20373535 -229.61712646]
[132.18965149 -243.75427246]
[127.17556000 -257.89141846]
[122.16147614 -272.02856445]
[117.14739227 -286.16571045]
[112.13330078 -300.30285645]
[107.11921692 -314.44000244]
[95.83213806 -320.68112183]
[91.94668579 -332.55862427]
[97.02731323 -343.53598022]
[92.22326660 -357.74588013]
[87.41921997 -371.95578003]
[82.61517334 -386.16564941]
[77.81111908 -400.37554932]
[73.00707245 -414.58544922]
[68.20302582 -428.79534912]
[57.40237427 -441.86370850]
[66.97010803 -455.85995483]
[83.06798553 -450.54067993]
[82.41292572 -433.59939575]
[87.21697235 -419.38949585]
[92.02101898 -405.17959595]
[96.82506561 -390.96969604]
[101.62911224 -376.75982666]
[106.43315887 -362.54992676]
[111.23720551 -348.34002686]
[125.02220154 -337.47943115]
[121.25636292 -319.45410156]
[126.27044678 -305.31695557]
[131.28453064 -291.17980957]
[136.29862976 -277.04266357]
[141.31271362 -262.90548706]
[146.32679749 -248.76835632]
[151.34088135 -234.63121033]
[166.31454468 -233.74259949]
[172.96548462 -247.18748474]
[179.61640930 -260.63238525]
[186.26734924 -274.07727051]
[192.91828918 -287.52215576]
[199.56922913 -300.96704102]
[206.22016907 -314.41192627]
[200.92173767 -329.30160522]
[207.77912903 -343.54067993]
[222.72398376 -348.68139648]
[236.88978577 -341.67382812]
[241.87220764 -326.67547607]
[234.71527100 -312.58456421]
[219.66505432 -307.76098633]
[213.01411438 -294.31610107]
[206.36317444 -280.87121582]
[199.71224976 -267.42633057]
[193.06130981 -253.98143005]
[186.41036987 -240.53654480]
[179.75942993 -227.09165955]
[184.54614258 -218.96978760]
[186.64250183 -210.07888794]
[186.02699280 -201.25830078]
[182.92631531 -193.29090881]
[177.78018188 -186.83363342]
[171.18806458 -182.36351013]
[163.84349060 -180.14375305]
[163.39898682 -165.15032959]
[162.95448303 -150.15692139]
[173.32492065 -139.52726746]
[173.08772278 -124.31548309]
[161.86804199 -113.51008606]
[161.42353821 -98.51667023]
[160.97903442 -83.52326202]
[160.53454590 -68.52984619]
[160.09004211 -53.53643417]
[159.64553833 -38.54302216]
[159.20103455 -23.54961014]
[169.69789124 -34.26483917]
[183.94763184 -29.58030510]
[186.03887939 -14.72679806]
[173.63536072 -6.28982067]
[188.47096252 -4.07512236]
[203.30656433 -1.86042392]
[218.14216614 0.35427460]
[232.97776794 2.56897306]
[247.81338501 4.78367138]
[254.09295654 2.71920037]
[259.64001465 3.95055532]
[263.05319214 7.29010916]
[277.81665039 9.94346333]
[292.58010864 12.59681702]
[309.23901367 9.44761372]
[316.87677002 24.58368874]
[304.44656372 36.11305618]
[289.92675781 27.36027527]
[275.16329956 24.70692253]
[260.39984131 22.05356789]
[245.59867859 19.61927414]
[230.76307678 17.40457535]
[215.92747498 15.18987751]
[201.09187317 12.97517872]
[186.25627136 10.76048088]
[171.42066956 8.54578209]
[179.65130615 21.08597946]
[172.03611755 34.00917435]
[157.07829285 32.88521957]
[151.48005676 18.96797371]
[144.82911682 32.41286087]
[138.17817688 45.85774994]
[131.52723694 59.30263901]
[124.87629700 72.74752808]
[118.22536469 86.19241333]
[111.57442474 99.63729858]
[108.81175232 114.38069916]
[110.14369202 129.32144165]
[111.47563171 144.26219177]
[112.80757141 159.20294189]
[121.73970795 172.26155090]
[115.16310120 185.62559509]
[116.49503326 200.56634521]
[117.82697296 215.50709534]
[129.66706848 225.62884521]
[130.80500793 240.79986572]
[121.08249664 252.02520752]
[122.41442871 266.96594238]
[123.85703278 281.89642334]
[132.98168945 294.82125854]
[126.60384369 308.28128052]
[128.15702820 323.20065308]
[129.71022034 338.12002563]
[144.09095764 343.23440552]
[154.82241821 354.08792114]
[159.77383423 368.52557373]
[157.96211243 383.68078613]
[149.74696350 396.54446411]
[136.75952148 404.56253052]
[121.57844543 406.14294434]
[107.21795654 400.97198486]
[96.52932739 390.07629395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[4 201]
[5 200]
[7 198]
[9 197]
[10 196]
[13 193]
[14 192]
[15 191]
[17 189]
[18 188]
[19 187]
[20 186]
[25 54]
[26 53]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[32 47]
[35 46]
[36 45]
[58 185]
[59 184]
[60 183]
[61 182]
[62 181]
[63 180]
[64 179]
[65 149]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[74 140]
[75 139]
[76 138]
[78 111]
[79 110]
[80 109]
[81 108]
[82 107]
[83 106]
[84 105]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[112 131]
[113 130]
[114 129]
[115 128]
[116 127]
[117 126]
[118 125]
[153 175]
[154 174]
[155 173]
[156 172]
[157 171]
[158 170]
[161 169]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
