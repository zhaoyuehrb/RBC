%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUGCCCCGUCCACGCCGCCCGCGCCCCGCAGUCCCACCCGCAGGACCCCCGGCCGCGCCAGGGUCUCGCCUGCGCCCCCCGCGCCCGCCCGCGGACUACAAGUCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[111.29351807 350.46466064]
[122.54203033 339.77584839]
[120.44517517 324.92312622]
[118.34832001 310.07043457]
[105.30501556 305.77099609]
[95.36029816 296.20306396]
[90.51408386 283.21093750]
[91.77540588 269.33517456]
[98.95297241 257.31570435]
[110.68152618 249.55101013]
[109.00205994 234.64532471]
[107.32259369 219.73963928]
[105.64311981 204.83396912]
[96.52947235 193.05302429]
[102.67298889 178.47331238]
[100.99352264 163.56764221]
[89.81410217 150.12042236]
[97.12582397 133.29302979]
[95.02896881 118.44031525]
[83.51510620 109.64388275]
[81.48960876 95.29663086]
[90.11831665 83.65653992]
[88.02146149 68.80382538]
[85.92460632 53.95111084]
[83.82775116 39.09839249]
[67.64499664 31.19131851]
[59.42063904 15.34232998]
[62.22256088 -2.13494992]
[74.76701355 -14.40143013]
[71.84066010 -29.11320877]
[68.91430664 -43.82498932]
[65.98795319 -58.53676605]
[63.06159592 -73.24855042]
[54.57144547 -60.88257217]
[40.50775909 -55.66598892]
[26.00710106 -59.50407410]
[16.36562729 -70.99502563]
[15.10474873 -85.94194031]
[22.68498230 -98.88566589]
[36.33775711 -105.09869385]
[51.07659149 -102.31181335]
[61.51852036 -91.54251862]
[61.93921280 -106.53662109]
[54.59199905 -120.54836273]
[62.68320847 -133.05361938]
[63.10390472 -148.04772949]
[63.52459717 -163.04182434]
[63.94528961 -178.03591919]
[64.36598206 -193.03002930]
[64.78667450 -208.02412415]
[56.46380234 -218.00018311]
[57.20677185 -230.56745911]
[66.06250763 -238.93920898]
[66.90356445 -253.91560364]
[67.74462128 -268.89199829]
[62.59589767 -285.04525757]
[76.69255066 -294.46441650]
[89.64595795 -283.52615356]
[82.72102356 -268.05096436]
[81.87996674 -253.07455444]
[81.03890991 -238.09814453]
[89.80788422 -222.96830750]
[79.78077698 -207.60342407]
[79.36008453 -192.60932922]
[78.93939209 -177.61523438]
[78.51869965 -162.62112427]
[78.09799957 -147.62702942]
[77.67730713 -132.63293457]
[85.05461121 -119.69366455]
[76.93331146 -106.11592102]
[76.51261902 -91.12182617]
[77.77337646 -76.17490387]
[80.69972992 -61.46312332]
[83.62608337 -46.75134277]
[86.55244446 -32.03956223]
[89.47879791 -17.32778549]
[101.28369141 -13.87046719]
[110.51486969 -5.63102055]
[115.34232330 5.84085321]
[114.77324677 18.34685326]
[108.85551453 29.46128273]
[98.68046570 37.00153732]
[100.77732086 51.85425568]
[102.87417603 66.70697021]
[104.97103119 81.55968475]
[116.48489380 90.35611725]
[118.51039124 104.70336914]
[109.88168335 116.34346008]
[111.97853851 131.19616699]
[121.85487366 139.63714600]
[123.22750092 152.15132141]
[115.89920807 161.88816833]
[117.57867432 176.79385376]
[126.81245422 189.64094543]
[120.54880524 203.15449524]
[122.22827148 218.06018066]
[123.90773773 232.96586609]
[125.58721161 247.87155151]
[140.75544739 254.27919006]
[150.60006714 267.36163330]
[152.53448486 283.52563477]
[146.12884521 298.39013672]
[133.20103455 307.97357178]
[135.29789734 322.82629395]
[137.39474487 337.67898560]
[151.16267395 344.83605957]
[158.06422424 358.73385620]
[155.44557190 374.02838135]
[144.31367493 384.83856201]
[128.94895935 387.00772095]
[115.25947571 379.70172119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 105]
[3 104]
[4 103]
[10 98]
[11 97]
[12 96]
[13 95]
[15 93]
[16 92]
[18 89]
[19 88]
[22 85]
[23 84]
[24 83]
[25 82]
[29 76]
[30 75]
[31 74]
[32 73]
[33 72]
[42 71]
[43 70]
[45 68]
[46 67]
[47 66]
[48 65]
[49 64]
[50 63]
[53 61]
[54 60]
[55 59]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
