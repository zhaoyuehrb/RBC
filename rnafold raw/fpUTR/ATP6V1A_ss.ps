%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCCCCCCAACCUGUGCAGCUGAGGACUUCCCCUCCGUGGUGACAGCCUCUGGGUCCUCGGUCGGUACAGUCUCUGCACCUCGCGCCCCAGCAGGUAAACUAACAUU\
) } def
/len { sequence length } bind def

/coor [
[161.46641541 277.88513184]
[154.16572571 271.20660400]
[147.84378052 263.59228516]
[142.61941528 255.18437195]
[138.59094238 246.13998413]
[135.83435059 236.62828064]
[134.40179443 226.82717896]
[134.32069397 216.92015076]
[135.59312439 207.09268188]
[138.19586182 197.52890015]
[142.08071899 188.40802002]
[147.17547607 179.90107727]
[153.38525391 172.16766357]
[143.48829651 160.89599609]
[133.59133911 149.62434387]
[123.69438171 138.35269165]
[113.79742432 127.08103180]
[103.90046692 115.80937958]
[87.92001343 110.91896820]
[84.66379547 94.52726746]
[74.44612122 83.54550171]
[64.22844696 72.56373596]
[54.01077652 61.58197021]
[43.79310226 50.60020447]
[33.57542801 39.61844254]
[23.35775566 28.63667488]
[13.14008331 17.65491104]
[8.59584332 16.46701622]
[5.09489059 14.06485939]
[2.90140390 10.95937729]
[2.07304478 7.69439268]
[2.46959782 4.77163696]
[-6.41698647 -7.31259298]
[-15.30357075 -19.39682388]
[-26.32220650 -20.44607925]
[-34.71753311 -27.31451797]
[-37.79981613 -37.48311615]
[-34.76003265 -47.43312454]
[-48.76872253 -54.78615570]
[-49.21859741 -69.67396545]
[-57.39422607 -82.25009918]
[-65.56985474 -94.82623291]
[-80.42263794 -101.77799225]
[-81.55885315 -118.13773346]
[-67.80966187 -127.07595062]
[-53.31904984 -119.39778137]
[-52.99372101 -103.00186157]
[-44.81809235 -90.42572784]
[-36.64246750 -77.84959412]
[-23.21854973 -71.39608765]
[-22.18389893 -55.60874939]
[-4.37711763 -48.30669022]
[-3.21934056 -28.28340721]
[5.66724396 -16.19917679]
[14.55382824 -4.11494732]
[24.12184906 7.43723822]
[34.33952332 18.41900253]
[44.55719376 29.40076828]
[54.77486801 40.38253403]
[64.99253845 51.36429596]
[75.21021271 62.34606171]
[85.42788696 73.32782745]
[95.64556122 84.30959320]
[107.33078003 85.46006012]
[115.20426941 94.17074585]
[115.17212677 105.91242218]
[125.06908417 117.18407440]
[134.96603394 128.45573425]
[144.86299133 139.72738647]
[154.75994873 150.99903870]
[164.65690613 162.27070618]
[184.39447021 152.44300842]
[206.15927124 149.00849915]
[227.93475342 152.27638245]
[247.70605469 161.93527222]
[263.64651489 177.08288574]
[274.28631592 196.31025696]
[278.64816284 217.83283997]
[276.33688354 239.65612793]
[290.37390137 244.94409180]
[304.41088867 250.23205566]
[318.44790649 255.52001953]
[327.73779297 255.63470459]
[332.80957031 261.16793823]
[346.68835449 266.85821533]
[361.16915894 260.52719116]
[375.85467529 266.36764526]
[382.03225708 280.91455078]
[376.03686523 295.53750610]
[361.42544556 301.56094360]
[346.86669922 295.41128540]
[340.99807739 280.73699951]
[327.11929321 275.04672241]
[313.15994263 269.55703735]
[299.12292480 264.26904297]
[285.08593750 258.98107910]
[271.04891968 253.69313049]
[266.04904175 262.19943237]
[259.93338013 269.94515991]
[252.81599426 276.78494263]
[244.82974243 282.59024048]
[236.12384033 287.25192261]
[226.86103821 290.68218994]
[217.21459961 292.81619263]
[207.36499023 293.61346436]
[197.49664307 293.05850220]
[187.79437256 291.16107178]
[178.43995667 287.95614624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 71]
[14 70]
[15 69]
[16 68]
[17 67]
[18 66]
[20 63]
[21 62]
[22 61]
[23 60]
[24 59]
[25 58]
[26 57]
[27 56]
[32 55]
[33 54]
[34 53]
[38 51]
[40 49]
[41 48]
[42 47]
[79 97]
[80 96]
[81 95]
[82 94]
[84 93]
[85 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
