%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUACUCAGCCCGGUGGCUGUCGCGCGUGGAAUCGCGUAAGAAAAGCCGAGUUUGUGGCUGGGGAGAGAAGGCCACCGUGCUGAGCUGGAUUUAGCGAAGACUGGUUUUGGGGACCGGAGAGCCCAGGACUCCCUUUGUUGGAGUUUUGCCCACGCGUUGUAAUUAAGCCUCGCACAAUAUGGUUGAUGAUAAUUAGAAGCAUGCUUUCCACUGAACUUCCCGACAACAUUUGUUAUGCAGA\
) } def
/len { sequence length } bind def

/coor [
[410.14364624 -16.75020599]
[396.17718506 -11.27865314]
[382.21072388 -5.80709982]
[368.24426270 -0.33554649]
[354.27777100 5.13600683]
[340.34683228 10.69735813]
[326.45196533 16.34827614]
[312.55712891 21.99919510]
[298.66226196 27.65011406]
[284.76739502 33.30103302]
[270.87252808 38.95195007]
[261.99780273 50.91391373]
[246.29953003 48.94557953]
[232.40467834 54.59649658]
[218.50981140 60.24741364]
[204.61494446 65.89833069]
[190.72009277 71.54925537]
[176.82522583 77.20017242]
[162.93037415 82.85108948]
[149.03550720 88.50200653]
[140.16079712 100.46397400]
[124.46250916 98.49563599]
[110.56764984 104.14655304]
[97.96310425 112.27830505]
[87.08692169 122.60829926]
[76.21073914 132.93827820]
[65.33454895 143.26826477]
[54.45837021 153.59825134]
[54.30204391 169.40177917]
[42.95839691 180.40618896]
[27.15741920 180.08279419]
[16.27354431 168.62344360]
[16.76398659 152.82675171]
[28.33777237 142.06465149]
[44.12837982 142.72207642]
[55.00456619 132.39208984]
[65.88074493 122.06210327]
[76.75692749 111.73211670]
[87.63311768 101.40212250]
[84.19381714 94.73719788]
[70.86396790 101.61579895]
[57.53400421 108.49417877]
[50.65584564 95.16410065]
[63.98536682 88.28594971]
[77.31521606 81.40734863]
[73.87591553 74.74242401]
[59.15479279 77.62141418]
[44.43367004 80.50039673]
[29.71254921 83.37937927]
[14.99142647 86.25836945]
[6.37783480 99.50908661]
[-9.09968567 102.70626068]
[-22.25859833 93.95305634]
[-25.29195213 78.44259644]
[-16.40011215 65.37696075]
[-0.85845071 62.50776291]
[12.11244106 71.53724670]
[26.83356285 68.65825653]
[41.55468750 65.77927399]
[56.27581024 62.90029144]
[70.99693298 60.02130508]
[76.65422058 46.12903976]
[88.70551300 37.19783401]
[103.64278412 35.82748032]
[117.11795044 42.41686630]
[125.20851135 55.04789352]
[125.55938721 70.04379272]
[118.06843567 83.03939819]
[104.91672516 90.25169373]
[118.81158447 84.60077667]
[128.68016052 72.23461914]
[143.38459778 74.60714722]
[157.27944946 68.95623016]
[171.17431641 63.30530930]
[185.06916809 57.65439224]
[198.96403503 52.00347519]
[212.85888672 46.35255432]
[226.75375366 40.70163727]
[240.64860535 35.05072021]
[250.51718140 22.68456268]
[265.22161865 25.05709076]
[279.11648560 19.40617180]
[293.01135254 13.75525379]
[306.90618896 8.10433483]
[320.80105591 2.45341682]
[334.69592285 -3.19750142]
[341.44812012 -9.31589699]
[348.80624390 -8.83045673]
[362.77270508 -14.30200958]
[376.73916626 -19.77356339]
[390.70562744 -25.24511719]
[404.67208862 -30.71667099]
[417.83358765 -50.60060120]
[440.55072021 -46.33689499]
[454.05325317 -52.86999512]
[467.55578613 -59.40309906]
[481.05831909 -65.93620300]
[494.56085205 -72.46930695]
[508.06341553 -79.00241089]
[521.56591797 -85.53551483]
[524.47430420 -89.81734467]
[528.34234619 -92.31935883]
[532.33721924 -92.97323608]
[535.71844482 -92.04885101]
[549.46319580 -98.05565643]
[552.89770508 -113.07266235]
[564.38189697 -123.07099915]
[579.37402344 -124.37443542]
[592.10656738 -116.69189453]
[605.85131836 -122.69870758]
[619.59606934 -128.70552063]
[633.34082031 -134.71232605]
[647.08557129 -140.71913147]
[660.83032227 -146.72593689]
[674.57507324 -152.73274231]
[688.20123291 -159.00387573]
[698.78839111 -176.17510986]
[717.99981689 -173.87400818]
[731.32965088 -180.75260925]
[744.65954590 -187.63121033]
[757.98937988 -194.50981140]
[771.31921387 -201.38839722]
[784.64904785 -208.26699829]
[797.97894287 -215.14559937]
[799.00793457 -238.07586670]
[822.09576416 -254.03202820]
[828.10260010 -267.77679443]
[834.10937500 -281.52154541]
[840.11621094 -295.26629639]
[846.12298584 -309.01104736]
[852.12982178 -322.75579834]
[858.13659668 -336.50054932]
[864.14343262 -350.24530029]
[870.15020752 -363.99005127]
[863.03723145 -377.91625977]
[866.59027100 -393.14483643]
[879.13177490 -402.48535156]
[894.73999023 -401.52746582]
[906.04522705 -390.72348022]
[907.70941162 -375.17471313]
[898.94689941 -362.22280884]
[883.89495850 -357.98324585]
[877.88818359 -344.23849487]
[871.88134766 -330.49374390]
[865.87457275 -316.74899292]
[859.86773682 -303.00424194]
[853.86096191 -289.25949097]
[847.85412598 -275.51473999]
[841.84735107 -261.76998901]
[835.84051514 -248.02522278]
[840.26452637 -241.96896362]
[849.05017090 -254.12677002]
[863.32781982 -249.52790833]
[863.36584473 -234.52796936]
[849.11248779 -229.85646057]
[853.53649902 -223.80020142]
[868.45703125 -225.34251404]
[876.65014648 -229.32994080]
[883.57934570 -226.80737305]
[898.51849365 -228.15745544]
[911.56622314 -237.10543823]
[924.93823242 -230.54507446]
[939.87738037 -231.89515686]
[954.81646729 -233.24523926]
[969.75561523 -234.59532166]
[984.69470215 -235.94541931]
[999.63385010 -237.29550171]
[1014.52178955 -239.12567139]
[1029.34313965 -241.43402100]
[1044.16442871 -243.74238586]
[1058.98571777 -246.05075073]
[1063.86779785 -260.55673218]
[1074.94006348 -271.12393188]
[1089.65795898 -275.32406616]
[1104.63952637 -272.19198608]
[1116.44213867 -262.44744873]
[1122.35363770 -248.32962036]
[1121.01562500 -233.08271790]
[1112.73547363 -220.21034241]
[1099.41601562 -212.67050171]
[1084.11779785 -212.19575500]
[1070.35644531 -218.89523315]
[1061.29406738 -231.22943115]
[1046.47277832 -228.92106628]
[1031.65148926 -226.61271667]
[1016.83013916 -224.30435181]
[1027.30932617 -213.57182312]
[1025.58325195 -198.67146301]
[1012.92803955 -190.61880493]
[998.69934082 -195.36700439]
[993.41625977 -209.40583801]
[1000.98394775 -222.35638428]
[986.04479980 -221.00630188]
[971.10571289 -219.65620422]
[956.16656494 -218.30612183]
[941.22747803 -216.95603943]
[926.28833008 -215.60595703]
[914.30914307 -206.75453186]
[899.86859131 -213.21833801]
[884.92944336 -211.86824036]
[869.99932861 -210.42201233]
[855.07885742 -208.87969971]
[838.85314941 -192.77113342]
[818.76959229 -191.33041382]
[804.85754395 -201.81575012]
[791.52764893 -194.93714905]
[778.19781494 -188.05854797]
[764.86798096 -181.17996216]
[751.53814697 -174.30136108]
[738.20825195 -167.42276001]
[724.87841797 -160.54415894]
[722.66851807 -150.59524536]
[715.19836426 -143.34413147]
[704.75738525 -141.34857178]
[694.73437500 -145.50134277]
[693.23724365 -142.33184814]
[690.14221191 -139.72274780]
[685.72589111 -138.41207886]
[680.58184814 -138.98799133]
[666.83709717 -132.98118591]
[653.09234619 -126.97438049]
[639.34759521 -120.96756744]
[625.60284424 -114.96076202]
[611.85809326 -108.95395660]
[598.11334229 -102.94714355]
[595.10260010 -88.38440704]
[583.96221924 -78.26726532]
[568.82373047 -76.63078308]
[555.46997070 -84.31090546]
[541.72521973 -78.30410004]
[528.09906006 -72.03297424]
[514.59649658 -65.49987030]
[501.09396362 -58.96676636]
[487.59143066 -52.43366241]
[474.08889771 -45.90055847]
[460.58636475 -39.36745834]
[447.08380127 -32.83435440]
[446.74368286 -26.42058754]
[444.43139648 -20.37338638]
[440.34106445 -15.28879833]
[434.84362793 -11.67829132]
[428.45333862 -9.91738129]
[421.77972412 -10.20678043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 92]
[2 91]
[3 90]
[4 89]
[5 88]
[6 86]
[7 85]
[8 84]
[9 83]
[10 82]
[11 81]
[13 79]
[14 78]
[15 77]
[16 76]
[17 75]
[18 74]
[19 73]
[20 72]
[22 70]
[23 69]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[94 237]
[95 236]
[96 235]
[97 234]
[98 233]
[99 232]
[100 231]
[104 230]
[105 229]
[109 225]
[110 224]
[111 223]
[112 222]
[113 221]
[114 220]
[115 219]
[116 215]
[118 211]
[119 210]
[120 209]
[121 208]
[122 207]
[123 206]
[124 205]
[126 150]
[127 149]
[128 148]
[129 147]
[130 146]
[131 145]
[132 144]
[133 143]
[134 142]
[156 202]
[157 201]
[159 200]
[160 199]
[162 197]
[163 196]
[164 195]
[165 194]
[166 193]
[167 192]
[168 186]
[169 185]
[170 184]
[171 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
