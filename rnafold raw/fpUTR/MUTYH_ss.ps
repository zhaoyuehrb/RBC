%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCGGAGCCGCGGUGUACAACGGAACUUGUAGUCUCCUCGUGGCUAGUUCAGGCGGAAGGAGCAGUCCUCUGAAGCUUGAGGAGCCUCUAGAACUAUGAGCCCGAGGCCUUCCCCUCUCCCAGAGCGCAGAGGCUUUGAAGGCUACCUCUGGGAAGCCGCUCACCGUCGGAAGCUGCGGGAGCUGAAACUGCGCCAUCGUCACUGUCGGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[50.31978607 763.04528809]
[42.56402206 748.59600830]
[51.42839050 734.79913330]
[51.64554214 719.80065918]
[51.86269760 704.80224609]
[49.68542480 702.03424072]
[48.73829651 698.07556152]
[49.56568527 693.51477051]
[52.42905426 689.16107178]
[53.29721069 674.18621826]
[54.16536713 659.21136475]
[55.03352737 644.23651123]
[55.79326248 629.25573730]
[56.44454193 614.26989746]
[57.09581757 599.28405762]
[57.74709702 584.29821777]
[58.39837265 569.31231689]
[55.54965591 562.49645996]
[59.16910934 554.11474609]
[60.03726959 539.13983154]
[48.41639328 529.86120605]
[44.44044495 515.34722900]
[49.83633041 501.10861206]
[62.73074341 492.68008423]
[63.59889984 477.70523071]
[61.84227371 475.52612305]
[60.84098816 472.52142334]
[60.91323853 468.97463989]
[62.26907349 465.27893066]
[64.97557831 461.89654541]
[66.70898438 446.99703979]
[68.44239044 432.09753418]
[70.17578888 417.19802856]
[71.90919495 402.29852295]
[73.64260101 387.39898682]
[74.83572388 372.44653320]
[75.48699951 357.46066284]
[76.13827515 342.47482300]
[76.78955841 327.48895264]
[73.94084167 320.67306519]
[77.56029510 312.29135132]
[78.42845154 297.31646729]
[79.29660797 282.34161377]
[80.16476440 267.36676025]
[81.03292084 252.39190674]
[81.90108490 237.41705322]
[82.76924133 222.44219971]
[80.71420288 219.58224487]
[79.93984985 215.58618164]
[80.96447754 211.06564331]
[84.01417542 206.84036255]
[85.53170013 191.91732788]
[79.12169647 178.47257996]
[88.21543884 165.52598572]
[89.73296356 150.60293579]
[91.25048828 135.67990112]
[92.76801300 120.75685883]
[94.28553772 105.83382416]
[87.20370483 107.32042694]
[79.31085205 105.14048004]
[72.12065887 99.09165955]
[59.99818039 90.25731659]
[47.87570572 81.42298126]
[35.75322723 72.58863831]
[22.77851295 76.19403076]
[10.27827358 71.73491669]
[2.73921061 61.04961777]
[2.72976828 48.16698837]
[-9.26354504 39.15808105]
[-21.25685883 30.14917183]
[-33.25017166 21.14026260]
[-45.24348831 12.13135529]
[-60.03546143 16.81933022]
[-74.74727631 11.88554382]
[-83.72193146 -0.77285916]
[-83.50849152 -16.28846550]
[-74.18903351 -28.69520950]
[-59.34706879 -33.22244263]
[-44.68964767 -28.12935448]
[-35.85284042 -15.37433720]
[-36.23457718 0.13804154]
[-24.24126434 9.14694977]
[-12.24795151 18.15585709]
[-0.25463742 27.16476631]
[11.73867607 36.17367554]
[28.27515221 33.09929276]
[42.19138336 43.13547516]
[44.58756638 60.46616364]
[56.71004105 69.30049896]
[68.83251953 78.13484192]
[80.95500183 86.96917725]
[69.53709412 77.24131012]
[66.46299744 62.55969238]
[73.01917267 49.06834030]
[86.46196747 42.41316986]
[101.16578674 45.37926102]
[110.97732544 56.72534943]
[111.79060364 71.70328522]
[103.26427460 84.04579926]
[112.70127106 72.38632965]
[122.13825989 60.72686386]
[131.57525635 49.06739426]
[141.01225281 37.40792847]
[125.64604950 23.96874046]
[126.04656982 -3.89137411]
[131.96191406 -17.67574120]
[137.87724304 -31.46010780]
[143.79258728 -45.24447632]
[149.70791626 -59.02884293]
[155.62326050 -72.81320953]
[161.53860474 -86.59757996]
[167.45393372 -100.38194275]
[173.36927795 -114.16631317]
[167.74804688 -128.69351196]
[173.94340515 -142.58856201]
[187.82751465 -147.85800171]
[193.64292908 -161.68482971]
[199.35809326 -175.55339050]
[205.07324219 -189.42195129]
[210.78840637 -203.29051208]
[211.23303223 -220.23861694]
[227.64189148 -224.50308228]
[236.28211975 -209.91601562]
[224.65696716 -197.57534790]
[218.94180298 -183.70678711]
[213.22663879 -169.83822632]
[207.51147461 -155.96966553]
[207.86909485 -148.59106445]
[201.61189270 -141.94267273]
[207.35832214 -128.24908447]
[201.55569458 -114.18551636]
[187.15364075 -108.25097656]
[181.23829651 -94.46660614]
[175.32296753 -80.68223572]
[169.40762329 -66.89787292]
[163.49229431 -53.11350632]
[157.57695007 -39.32913589]
[151.66162109 -25.54477119]
[145.74627686 -11.76040363]
[139.83093262 2.02396393]
[144.91896057 7.53414583]
[155.09498596 18.55451012]
[160.18299866 24.06469154]
[174.39421082 19.26452637]
[188.60540771 14.46435928]
[202.81661987 9.66419315]
[213.41506958 -2.08243966]
[227.94908142 1.17511737]
[242.16029358 -3.62504864]
[252.57942200 -16.28893089]
[268.70962524 -13.33110332]
[273.95751953 2.20567513]
[262.92453003 14.33849907]
[246.96046448 10.58615875]
[232.74925232 15.38632488]
[223.16728210 26.78961754]
[207.61679077 23.87540054]
[193.40557861 28.67556572]
[179.19436646 33.47573090]
[164.98316956 38.27589798]
[152.67170715 46.84492111]
[143.23472595 58.50438690]
[133.79772949 70.16385651]
[124.36073303 81.82331848]
[114.92374420 93.48278809]
[109.20858002 107.35134888]
[107.69105530 122.27438354]
[106.17353058 137.19743347]
[104.65600586 152.12046814]
[103.13848114 167.04350281]
[109.43994141 181.55564880]
[100.45474243 193.43484497]
[98.93721771 208.35787964]
[97.74409485 223.31036377]
[96.87593842 238.28521729]
[96.00778198 253.26007080]
[95.13961792 268.23492432]
[94.27146149 283.20977783]
[93.40330505 298.18463135]
[92.53514862 313.15948486]
[91.77541351 328.14022827]
[91.12413025 343.12609863]
[90.47285461 358.11193848]
[89.82157898 373.09780884]
[102.45988464 365.01861572]
[116.70365143 369.72128296]
[122.04711151 383.73727417]
[114.54907990 396.72879028]
[99.73989105 399.11370850]
[88.54210663 389.13241577]
[86.80870056 404.03192139]
[85.07530212 418.93142700]
[83.34189606 433.83093262]
[81.60848999 448.73043823]
[79.87508392 463.62994385]
[78.57375336 478.57339478]
[77.70559692 493.54824829]
[89.53961945 503.41040039]
[93.25393677 518.17718506]
[87.62738800 532.13446045]
[75.01212311 540.00799561]
[74.14396667 554.98284912]
[73.38423157 569.96362305]
[72.73294830 584.94946289]
[72.08167267 599.93530273]
[71.43039703 614.92120361]
[70.77912140 629.90704346]
[73.53203583 638.61193848]
[70.00838470 645.10467529]
[69.14022064 660.07952881]
[68.27206421 675.05438232]
[67.40390778 690.02923584]
[66.86112213 705.01940918]
[66.64397430 720.01782227]
[66.42681885 735.01629639]
[74.88803864 749.06402588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 215]
[4 214]
[5 213]
[9 212]
[10 211]
[11 210]
[12 209]
[13 207]
[14 206]
[15 205]
[16 204]
[17 203]
[19 202]
[20 201]
[24 197]
[25 196]
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[35 190]
[36 184]
[37 183]
[38 182]
[39 181]
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[51 173]
[52 172]
[54 170]
[55 169]
[56 168]
[57 167]
[58 166]
[61 91]
[62 90]
[63 89]
[64 88]
[68 85]
[69 84]
[70 83]
[71 82]
[72 81]
[99 165]
[100 164]
[101 163]
[102 162]
[103 161]
[105 140]
[106 139]
[107 138]
[108 137]
[109 136]
[110 135]
[111 134]
[112 133]
[113 132]
[116 129]
[117 127]
[118 126]
[119 125]
[120 124]
[143 160]
[144 159]
[145 158]
[146 157]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
