%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGUGCGGUUAAAAGGCGCCACGGCGGGAGACAGGUGUUGCGGCCCCGCAGCGCCCGCGCGCUCCUCUCCCCGACUCGGAGCCCCUCGGCGGCGCCCGGCCCAGGACCCGCCUAGGAGCGCAGGAGCCCCAGCGCAGAGACCCCAACGCCGAGACCCCCGCCCCGGCCCCGCCGCGCUUCCUCCCGACGCAGAGCAAACCGCCCAGAGUAGAAG\
) } def
/len { sequence length } bind def

/coor [
[132.20147705 456.58389282]
[141.03796387 444.18078613]
[154.15856934 436.44973755]
[152.41717529 421.55114746]
[148.51997375 415.27487183]
[150.76042175 406.42343140]
[149.23590088 391.50112915]
[147.71136475 376.57879639]
[146.18684387 361.65646362]
[144.66232300 346.73413086]
[143.13778687 331.81179810]
[132.11160278 317.76013184]
[129.88668823 301.68652344]
[135.49569702 288.20788574]
[145.91549683 280.46688843]
[141.40490723 266.16113281]
[136.89431763 251.85539246]
[132.38374329 237.54963684]
[127.87315369 223.24388123]
[123.36256409 208.93812561]
[120.42451477 206.99513245]
[118.28009033 203.53431702]
[117.63160706 198.94349670]
[118.98199463 193.90908813]
[115.09970856 179.42019653]
[111.21742249 164.93130493]
[107.33513641 150.44241333]
[103.45285034 135.95353699]
[99.57056427 121.46464539]
[99.19089508 136.45983887]
[87.86386871 146.29338074]
[72.96400452 144.56309509]
[64.19191742 132.39549255]
[67.25872803 117.71234131]
[80.16732025 110.07324219]
[65.62350464 113.74439240]
[51.07968521 117.41554260]
[36.53586578 121.08669281]
[21.99204826 124.75784302]
[7.44823027 128.42898560]
[-7.09558821 132.10014343]
[-21.63940620 135.77128601]
[-36.18322372 139.44244385]
[-47.56319427 151.25042725]
[-63.41182327 147.03700256]
[-67.42540741 131.13658142]
[-55.47510910 119.90615845]
[-39.85437393 124.89862061]
[-25.31055641 121.22747040]
[-10.76673889 117.55632019]
[3.77708006 113.88516998]
[18.32089806 110.21401978]
[32.86471558 106.54286957]
[47.40853500 102.87171936]
[61.95235443 99.20056915]
[76.49617004 95.52941895]
[81.12186432 87.81269836]
[87.92246246 82.80175781]
[83.20429230 68.56311798]
[78.48612213 54.32448196]
[73.76794434 40.08584213]
[68.63764954 25.99045181]
[63.09955215 12.05023956]
[57.56146240 -1.88997316]
[52.02336884 -15.83018589]
[46.48527527 -29.77039909]
[40.94718552 -43.71061325]
[29.75482750 -44.99982834]
[20.05997658 -50.57492447]
[13.41534424 -59.46735382]
[10.85501194 -70.18367004]
[12.73390484 -80.95616150]
[0.70205659 -89.91354370]
[-11.32979107 -98.87091827]
[-27.64534950 -103.47948456]
[-27.73348618 -120.43320465]
[-11.46672440 -125.21115112]
[-2.37241244 -110.90276337]
[9.65943527 -101.94538879]
[21.69128418 -92.98800659]
[23.49348450 -94.24221802]
[25.39182472 -95.34551239]
[22.35856247 -110.03562164]
[11.99047184 -121.98607635]
[16.99424553 -136.01502991]
[13.96098328 -150.70513916]
[10.92771912 -165.39524841]
[0.55962938 -177.34570312]
[5.56340361 -191.37464905]
[2.53014016 -206.06475830]
[-0.50312334 -220.75486755]
[-3.53638697 -235.44497681]
[-6.56965065 -250.13508606]
[-11.36807919 -257.90313721]
[-9.53856659 -265.06085205]
[-19.73175430 -277.16082764]
[-14.52447319 -291.11550903]
[-17.34376526 -305.84817505]
[-30.55946159 -314.51541138]
[-33.69387054 -330.00576782]
[-24.88739967 -343.12908936]
[-9.36477470 -346.09954834]
[3.66470861 -337.15481567]
[6.47088766 -321.60165405]
[-2.61109352 -308.66748047]
[0.20819779 -293.93481445]
[10.19972992 -282.88861084]
[5.19410419 -267.88012695]
[8.12045860 -253.16835022]
[11.15372276 -238.47824097]
[14.18698597 -223.78813171]
[17.22024918 -209.09802246]
[20.25351334 -194.40791321]
[30.40464401 -183.50819397]
[25.61782837 -168.42851257]
[28.65109253 -153.73840332]
[31.68435478 -139.04829407]
[41.83548737 -128.14857483]
[37.04867172 -113.06888580]
[40.08193588 -98.37877655]
[59.05030441 -88.84071350]
[65.40782166 -68.30345917]
[54.88739777 -49.24870300]
[60.42549133 -35.30849075]
[65.96358490 -21.36827850]
[71.50167084 -7.42806530]
[77.03976440 6.51214743]
[82.57785797 20.45236015]
[85.09130859 21.68553543]
[87.26869202 23.98674965]
[88.70145416 27.23332596]
[89.03282166 31.15732574]
[88.00658417 35.36767197]
[92.72476196 49.60631180]
[97.44293213 63.84495163]
[102.16110229 78.08358765]
[104.84688568 63.32599640]
[101.79706573 48.63931274]
[105.72947693 34.16394806]
[115.79127502 23.03919220]
[129.80035400 17.67768288]
[144.71853638 19.24217987]
[157.31051636 27.39338684]
[164.84542847 40.36354446]
[165.68919373 55.33979416]
[159.65881348 69.07421875]
[148.06208801 78.58821869]
[133.41366577 81.81846619]
[121.04899597 90.31050873]
[135.97131348 88.78598022]
[150.89364624 87.26145935]
[165.81597900 85.73693085]
[178.75830078 76.63711548]
[192.20605469 83.04080963]
[199.88691711 69.55809021]
[214.03965759 63.19573593]
[229.22225952 66.40019989]
[239.59667969 77.93930817]
[241.17375183 93.37602997]
[233.34707642 106.77463531]
[219.12614441 112.98308563]
[203.97921753 109.61410522]
[193.73057556 97.96313477]
[181.85559082 106.95391083]
[167.34049988 100.65925598]
[152.41816711 102.18378448]
[137.49584961 103.70831299]
[122.57351685 105.23283386]
[114.05945587 117.58235931]
[117.94174194 132.07124329]
[121.82402802 146.56013489]
[125.70631409 161.04902649]
[129.58859253 175.53790283]
[133.47088623 190.02679443]
[137.66831970 204.42753601]
[142.17890930 218.73329163]
[146.68949890 233.03904724]
[151.20007324 247.34480286]
[155.71066284 261.65057373]
[160.22125244 275.95632935]
[183.05841064 280.56274414]
[195.51330566 306.45489502]
[206.27304077 316.90612793]
[217.03277588 327.35733032]
[232.29830933 324.57470703]
[246.26936340 331.32669067]
[253.57379150 345.01702881]
[251.40286255 360.38146973]
[240.59138489 371.51211548]
[225.29655457 374.12899780]
[211.39956665 367.22586060]
[204.24409485 353.45709229]
[206.58155823 338.11706543]
[195.82182312 327.66586304]
[185.06208801 317.21463013]
[178.31158447 320.48278809]
[164.81060791 327.01913452]
[158.06011963 330.28729248]
[159.58464050 345.20962524]
[161.10917664 360.13192749]
[162.63369751 375.05426025]
[164.15821838 389.97659302]
[165.68275452 404.89892578]
[167.31575012 419.80975342]
[169.05714417 434.70834351]
[183.60699463 439.20520020]
[195.06564331 449.23611450]
[201.44778442 463.06320190]
[201.64770508 478.29080200]
[195.63073730 492.28063965]
[184.43939209 502.60894775]
[170.01260376 507.48620605]
[154.84991455 506.06744385]
[141.57835388 498.59848022]
[132.49729919 486.37332153]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 205]
[4 204]
[6 203]
[7 202]
[8 201]
[9 200]
[10 199]
[11 198]
[15 180]
[16 179]
[17 178]
[18 177]
[19 176]
[20 175]
[24 174]
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[43 48]
[58 136]
[59 135]
[60 134]
[61 133]
[62 128]
[63 127]
[64 126]
[65 125]
[66 124]
[67 123]
[72 80]
[73 79]
[74 78]
[82 120]
[83 119]
[85 117]
[86 116]
[87 115]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[95 108]
[97 106]
[98 105]
[149 168]
[150 167]
[151 166]
[152 165]
[154 163]
[182 195]
[183 194]
[184 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
