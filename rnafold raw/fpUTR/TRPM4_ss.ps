%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCUGGAAAGUGGAGGAUCCGGUUUGCUCUGGGCGGGUCUGGAAGCAGAGCCGGCGGAGGGAGCGCCGGGGCCCUGGGCUGCAGGAGGUUGCGGCGGCCGCGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[103.37535858 113.56525421]
[99.72293091 116.22216034]
[94.93070221 117.76088715]
[84.40079498 128.44363403]
[73.87089539 139.12638855]
[63.34099579 149.80914307]
[52.81109238 160.49189758]
[42.28119278 171.17465210]
[46.44045639 185.95964050]
[42.63443756 200.83949280]
[31.88693428 211.81158447]
[17.08897400 215.92446899]
[2.22113204 212.07183838]
[-8.71721649 201.28999329]
[-12.78371048 186.47921753]
[-8.88448429 171.62351990]
[1.93159020 160.71902466]
[16.75504303 156.69897461]
[31.59844208 160.64474487]
[42.12834167 149.96199036]
[52.65824509 139.27923584]
[63.18814468 128.59649658]
[73.71804810 117.91373444]
[84.24794769 107.23098755]
[85.54331970 92.28702545]
[77.00866699 79.95172119]
[62.79389572 73.00543976]
[61.91517258 58.13677979]
[53.38051987 45.80147552]
[44.84587097 33.46617126]
[36.31121826 21.13086510]
[27.77656937 8.79556084]
[15.15867519 5.67732048]
[8.32101727 -4.89956141]
[10.51356983 -16.89252472]
[2.33794212 -29.46865654]
[-5.83768559 -42.04478836]
[-19.84637833 -49.39782333]
[-20.29625320 -64.28563690]
[-28.47187996 -76.86176300]
[-36.64750671 -89.43789673]
[-44.82313538 -102.01403046]
[-59.67591476 -108.96578979]
[-60.81212997 -125.32553101]
[-47.06294250 -134.26374817]
[-32.57233429 -126.58557892]
[-32.24700165 -110.18965912]
[-24.07137489 -97.61352539]
[-15.89574718 -85.03739166]
[-7.72011995 -72.46125793]
[5.70379686 -66.00775909]
[6.73844719 -50.22041702]
[14.91407490 -37.64428329]
[23.08970261 -25.06815147]
[39.10506439 -18.05474854]
[40.11187363 0.26091048]
[48.64652252 12.59621525]
[57.18117523 24.93152046]
[65.71582794 37.26682281]
[74.25047302 49.60212708]
[87.85479736 55.66610336]
[89.34397125 71.41706848]
[97.87862396 83.75237274]
[110.21392822 92.28702545]
[124.76603699 95.92517090]
[139.36906433 99.35324097]
[154.01997375 102.57051849]
[168.67088318 105.78779602]
[183.32179260 109.00507355]
[198.46032715 104.40776825]
[209.23187256 114.69481659]
[223.88278198 117.91209412]
[238.53369141 121.12936401]
[253.18460083 124.34664154]
[257.59744263 122.73794556]
[261.84323120 122.72140503]
[265.41400146 124.02716827]
[267.95291138 126.24082184]
[269.28979492 128.86999512]
[283.47335815 133.75125122]
[297.65692139 138.63249207]
[311.84048462 143.51374817]
[326.02401733 148.39500427]
[340.20758057 153.27624512]
[354.39114380 158.15750122]
[370.37640381 154.49639893]
[381.33990479 166.69203186]
[376.00335693 182.19859314]
[359.85653687 185.06423950]
[349.50988770 172.34106445]
[335.32635498 167.45980835]
[321.14279175 162.57855225]
[306.95922852 157.69731140]
[292.77566528 152.81605530]
[278.59210205 147.93479919]
[264.40853882 143.05355835]
[249.96731567 138.99755859]
[235.31640625 135.78027344]
[220.66549683 132.56300354]
[206.01458740 129.34571838]
[191.92398071 134.17314148]
[180.10450745 123.65598297]
[165.45359802 120.43870544]
[150.80268860 117.22142792]
[136.15177917 114.00415039]
[128.83270264 115.66870880]
[121.12789154 110.47727966]
[106.57578278 106.83913422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 24]
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[25 63]
[26 62]
[28 60]
[29 59]
[30 58]
[31 57]
[32 56]
[35 54]
[36 53]
[37 52]
[39 50]
[40 49]
[41 48]
[42 47]
[64 108]
[65 107]
[66 105]
[67 104]
[68 103]
[69 102]
[71 100]
[72 99]
[73 98]
[74 97]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
