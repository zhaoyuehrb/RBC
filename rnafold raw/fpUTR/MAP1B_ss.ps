%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCUCCUCCUCCCGGCUCCCUGCCUAGUCUCCAUAUAAAAGCGGCGCCGCCUCCCCGCCCUCUCUCACUCCCCGCUCCUCUCCGCCGCGCACUCUCCGCGGCGCUGGGAGAGGGCGGAGGGGGAGGCGGCGCGCGGCGCCAGAGGAGGGGGGACGCAGGGGGCGGAGCGGAGACAGUACCUUCGGAGAUAAUCCUUUCUCCUGCCGCAGUGGAGAGGAGCGGCCGGAGCGAGACACUUCGCCGAGGCACAGCA\
GCCGGCAGG\
) } def
/len { sequence length } bind def

/coor [
[105.90105438 399.11386108]
[104.31330872 414.39044189]
[95.28699493 426.81707764]
[81.25013733 433.05105591]
[65.97858429 431.41543579]
[53.58030701 422.35018921]
[47.39037704 408.29388428]
[49.07385635 393.02752686]
[58.17789841 380.65771484]
[72.25355530 374.51187134]
[73.85095978 359.59716797]
[75.44835663 344.68246460]
[69.11042786 331.20361328]
[78.27335358 318.30587769]
[79.87075043 303.39117432]
[81.46814728 288.47647095]
[83.06555176 273.56176758]
[84.66294861 258.64706421]
[86.26034546 243.73237610]
[87.76931000 228.80847168]
[78.11351013 217.52569580]
[79.34135437 202.36169434]
[91.24123383 192.31028748]
[92.66171265 177.37770081]
[94.08218384 162.44511414]
[95.50266266 147.51252747]
[96.92314148 132.57992554]
[73.48809814 112.91805267]
[77.89071655 85.83376312]
[68.09838104 74.47109222]
[58.30604935 63.10842514]
[48.51371765 51.74575806]
[38.72138596 40.38308716]
[28.92905426 29.02042007]
[29.09477615 44.01950455]
[20.48765564 56.30435181]
[6.33363581 61.27061081]
[-8.06236744 57.05693054]
[-17.30474472 45.24259949]
[-17.92945862 30.25561333]
[-9.70236683 17.71308708]
[4.29302120 12.31594753]
[18.81009483 16.08630943]
[10.13779640 3.84738612]
[-5.18802881 1.06227660]
[-13.80862427 -11.47327232]
[-11.05900002 -26.06694031]
[-19.73129845 -38.30586243]
[-28.40359688 -50.54478836]
[-37.07589340 -62.78371048]
[-51.36759186 -69.57031250]
[-52.41282272 -84.42819977]
[-61.08512115 -96.66712189]
[-70.04514313 -108.69700623]
[-79.28784943 -120.51107788]
[-88.53054810 -132.32516479]
[-97.77325439 -144.13923645]
[-107.01596069 -155.95330811]
[-121.61329651 -162.05482483]
[-123.36164856 -176.84646606]
[-132.67422485 -188.60554504]
[-142.05633545 -200.30921936]
[-151.43844604 -212.01289368]
[-160.82054138 -223.71656799]
[-170.20265198 -235.42024231]
[-215.48841858 -237.81246948]
[-226.79283142 -247.67198181]
[-238.09725952 -257.53149414]
[-246.59120178 -260.79837036]
[-249.47636414 -267.57553101]
[-260.66311646 -277.56835938]
[-271.84985352 -287.56118774]
[-283.03662109 -297.55401611]
[-294.28240967 -307.48034668]
[-305.58682251 -317.33987427]
[-316.89123535 -327.19937134]
[-328.19567871 -337.05889893]
[-336.68960571 -340.32577515]
[-339.57476807 -347.10290527]
[-350.76153564 -357.09573364]
[-361.94827271 -367.08856201]
[-373.13500977 -377.08142090]
[-384.32177734 -387.07424927]
[-395.50851440 -397.06707764]
[-406.69525146 -407.05990601]
[-418.11578369 -416.78469849]
[-429.76364136 -426.23602295]
[-441.41149902 -435.68734741]
[-453.05935669 -445.13867188]
[-464.70721436 -454.58996582]
[-476.35507202 -464.04129028]
[-491.67291260 -460.89523315]
[-505.40466309 -468.37677002]
[-511.06658936 -482.95333862]
[-505.98532104 -497.74234009]
[-492.56005859 -505.76086426]
[-477.12982178 -503.22280884]
[-466.98028564 -491.32653809]
[-466.90374756 -475.68914795]
[-455.25588989 -466.23782349]
[-443.60803223 -456.78652954]
[-431.96017456 -447.33520508]
[-420.31231689 -437.88388062]
[-408.66445923 -428.43255615]
[-405.89590454 -428.56842041]
[-402.90725708 -427.63412476]
[-400.09933472 -425.54071045]
[-397.89764404 -422.34353638]
[-396.70242310 -418.24664307]
[-385.51568604 -408.25381470]
[-374.32894897 -398.26098633]
[-363.14218140 -388.26815796]
[-351.95544434 -378.27532959]
[-340.76867676 -368.28250122]
[-329.58193970 -358.28967285]
[-318.33615112 -348.36331177]
[-307.03173828 -338.50381470]
[-295.72729492 -328.64428711]
[-284.42288208 -318.78479004]
[-277.33996582 -316.76336670]
[-273.04379272 -308.74075317]
[-261.85702515 -298.74792480]
[-250.67028809 -288.75509644]
[-239.48353577 -278.76226807]
[-228.23774719 -268.83590698]
[-216.93331909 -258.97640991]
[-205.62890625 -249.11689758]
[-198.67872620 -251.93560791]
[-184.77838135 -257.57302856]
[-177.82821655 -260.39172363]
[-176.58485413 -275.34011841]
[-175.34150696 -290.28848267]
[-174.09814453 -305.23687744]
[-172.85479736 -320.18524170]
[-177.56741333 -336.47103882]
[-163.22265625 -345.50787354]
[-150.56797791 -334.22534180]
[-157.90641785 -318.94189453]
[-159.14976501 -303.99349976]
[-160.39312744 -289.04513550]
[-161.63647461 -274.09674072]
[-162.87983704 -259.14837646]
[-158.49897766 -244.80235291]
[-149.11686707 -233.09867859]
[-139.73475647 -221.39500427]
[-130.35266113 -209.69132996]
[-120.97054291 -197.98765564]
[-114.35689545 -194.74522400]
[-111.54757690 -186.08917236]
[-97.61134338 -180.83267212]
[-95.20188141 -165.19601440]
[-85.95918274 -153.38194275]
[-76.71647644 -141.56785583]
[-67.47377014 -129.75378418]
[-58.23106384 -117.93971252]
[-55.50209045 -117.45379639]
[-52.79763794 -115.87559509]
[-50.52820206 -113.20791626]
[-49.09618378 -109.59975433]
[-48.84619904 -105.33942413]
[-40.17390060 -93.10050201]
[-26.50250435 -87.18930054]
[-24.83697128 -71.45600891]
[-16.16467285 -59.21708679]
[-7.49237537 -46.97816086]
[1.17992318 -34.73923874]
[15.85994911 -32.49593353]
[24.82924080 -20.20746422]
[22.37672043 -4.82491207]
[31.04901886 7.41401100]
[40.29172134 19.22808838]
[50.08405304 30.59075546]
[59.87638855 41.95342636]
[69.66871643 53.31609344]
[79.46105194 64.67876434]
[89.25337982 76.04142761]
[95.77189636 73.35650635]
[102.95468903 72.46266937]
[110.30554199 73.52085876]
[117.29064178 76.55368042]
[123.37731171 81.43721008]
[128.07424927 87.90354156]
[130.97045898 95.55447388]
[131.76966858 103.88560486]
[130.31745911 112.31951904]
[144.21780396 117.95693207]
[158.11814880 123.59435272]
[173.81451416 121.61075592]
[182.70085144 133.56410217]
[196.60119629 139.20150757]
[207.93180847 129.03398132]
[222.49400330 124.81144714]
[237.38450623 127.31997681]
[249.65881348 136.00920105]
[256.91329956 149.11193848]
[257.75595093 164.00338745]
[271.65631104 169.64080811]
[285.55664062 175.27821350]
[301.25302124 173.29463196]
[310.13934326 185.24795532]
[324.03970337 190.88537598]
[337.94003296 196.52278137]
[351.84039307 202.16020203]
[367.53674316 200.17660522]
[376.42309570 212.12994385]
[390.32342529 217.76736450]
[404.22378540 223.40476990]
[418.12411499 229.04219055]
[432.02447510 234.67959595]
[443.66790771 224.74536133]
[458.59689331 221.37132263]
[473.38082886 225.33279419]
[484.62252808 235.71946716]
[489.73867798 250.14456177]
[487.55364990 265.29330444]
[478.56954956 277.68460083]
[464.85086060 284.47106934]
[449.55001831 284.09317017]
[436.18304443 276.63778687]
[427.82159424 263.81808472]
[426.38705444 248.57994080]
[412.48672485 242.94253540]
[398.58636475 237.30511475]
[384.68603516 231.66770935]
[370.78567505 226.03028870]
[356.08355713 228.41711426]
[346.20297241 216.06054688]
[332.30264282 210.42312622]
[318.40228271 204.78572083]
[304.50195312 199.14830017]
[289.79980469 201.53512573]
[279.91921997 189.17855835]
[266.01889038 183.54115295]
[252.11854553 177.90373230]
[241.14128113 188.00151062]
[226.80940247 192.34970093]
[211.95001221 190.03459167]
[199.51864624 181.46247864]
[192.01138306 168.28947449]
[190.96379089 153.10185242]
[177.06344604 147.46443176]
[162.36132812 149.85125732]
[152.48074341 137.49468994]
[138.58039856 131.85728455]
[124.68004608 126.21986389]
[111.85572815 134.00041199]
[110.43524933 148.93299866]
[109.01477814 163.86558533]
[107.59429932 178.79817200]
[106.17382050 193.73077393]
[115.96512604 205.84556580]
[114.31184387 220.96910095]
[102.70190430 230.22894287]
[104.99939728 239.03469849]
[101.17504883 245.32977295]
[99.57765198 260.24447632]
[97.98024750 275.15917969]
[96.38285065 290.07388306]
[94.78545380 304.98858643]
[93.18804932 319.90328979]
[99.41172791 334.44894409]
[90.36306000 346.27987671]
[88.76565552 361.19458008]
[87.16825867 376.10928345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 264]
[11 263]
[12 262]
[14 260]
[15 259]
[16 258]
[17 257]
[18 256]
[19 255]
[20 253]
[23 250]
[24 249]
[25 248]
[26 247]
[27 246]
[29 176]
[30 175]
[31 174]
[32 173]
[33 172]
[34 171]
[43 170]
[44 169]
[47 166]
[48 165]
[49 164]
[50 163]
[52 161]
[53 160]
[54 155]
[55 154]
[56 153]
[57 152]
[58 151]
[60 149]
[61 147]
[62 146]
[63 145]
[64 144]
[65 143]
[66 127]
[67 126]
[68 125]
[70 124]
[71 123]
[72 122]
[73 121]
[74 119]
[75 118]
[76 117]
[77 116]
[79 115]
[80 114]
[81 113]
[82 112]
[83 111]
[84 110]
[85 109]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[130 142]
[131 141]
[132 140]
[133 139]
[134 138]
[185 245]
[186 244]
[187 243]
[189 241]
[190 240]
[196 234]
[197 233]
[198 232]
[200 230]
[201 229]
[202 228]
[203 227]
[205 225]
[206 224]
[207 223]
[208 222]
[209 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
