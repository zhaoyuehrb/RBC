%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGAUGACGCGCUUCCGGCACGGGAUGUUUUCGGUUGUUUGACCGAGAGAGUUGUAGGCGCAAAGCUGAGGAAAGGAGAGUGUGGAGAGGGGCCUGGUGUGGUGGGGCCCGGUGUUUGGGACCGGAGGGUGUUGACGGCUGAUGAGUUCCUUGGGUUUGCUCUUUCUUCACCUGAAAAGAAGACUCCAGGAAGGGCAGCACAUGCCGGAGAAAG\
) } def
/len { sequence length } bind def

/coor [
[-103.35344696 255.74398804]
[-118.12557220 258.34869385]
[-132.90927124 255.81054688]
[-145.96670532 248.42791748]
[-155.76295471 237.06861877]
[-161.14645386 223.06797791]
[-161.48437500 208.07179260]
[-156.73696899 193.84286499]
[-147.46232605 182.05384827]
[-134.75076294 174.09057617]
[-149.72538757 174.96275330]
[-163.05232239 183.48937988]
[-176.20794678 176.50518799]
[-191.18257141 177.37736511]
[-206.15719604 178.24952698]
[-221.13182068 179.12170410]
[-236.09970093 180.10275269]
[-249.30122375 188.82229614]
[-262.55703735 182.03018188]
[-277.51739502 183.12005615]
[-292.47772217 184.20991516]
[-307.43807983 185.29978943]
[-321.98190308 188.97094727]
[-331.40502930 201.67982483]
[-346.18444824 199.83106995]
[-359.86981201 205.97195435]
[-373.55520630 212.11283875]
[-382.97830200 224.82171631]
[-397.75775146 222.97297668]
[-411.44311523 229.11386108]
[-425.12847900 235.25474548]
[-438.81387329 241.39562988]
[-452.49923706 247.53651428]
[-466.18463135 253.67739868]
[-479.86999512 259.81829834]
[-493.55538940 265.95916748]
[-507.24075317 272.10006714]
[-516.39739990 285.70474243]
[-532.73687744 284.30743408]
[-539.45056152 269.34552002]
[-529.63195801 256.21057129]
[-513.38165283 258.41467285]
[-499.69625854 252.27378845]
[-486.01089478 246.13290405]
[-472.32550049 239.99201965]
[-458.64013672 233.85113525]
[-444.95474243 227.71025085]
[-431.26937866 221.56936646]
[-417.58398438 215.42848206]
[-403.89862061 209.28759766]
[-395.45437622 197.01795959]
[-379.69607544 198.42745972]
[-366.01071167 192.28657532]
[-352.32531738 186.14569092]
[-343.88110352 173.87605286]
[-328.12280273 175.28556824]
[-328.72210693 167.80955505]
[-330.52005005 145.38150024]
[-345.00894165 141.49922180]
[-359.49783325 137.61692810]
[-374.05453491 144.36094666]
[-388.33816528 137.05628967]
[-391.39151001 121.30647278]
[-380.87231445 109.19341278]
[-364.85003662 110.00920105]
[-355.61553955 123.12804413]
[-341.12667847 127.01033020]
[-326.63778687 130.89260864]
[-337.49169922 120.53924561]
[-332.63446045 106.34745026]
[-322.57235718 95.22294617]
[-308.93768311 88.97031403]
[-293.94216919 88.60383606]
[-280.01831055 94.18294525]
[-269.42480469 104.80262756]
[-263.88009644 118.74020386]
[-264.28359985 133.73477173]
[-270.56985474 147.35398865]
[-281.71914673 157.38858032]
[-295.92153931 162.21061707]
[-308.52795410 170.33943176]
[-293.56759644 169.24957275]
[-278.60723877 168.15969849]
[-263.64691162 167.06982422]
[-251.51544189 158.42823792]
[-237.18957520 165.14239502]
[-230.74926758 161.52267456]
[-222.00398254 164.14707947]
[-207.02935791 163.27491760]
[-192.05474854 162.40274048]
[-177.08012390 161.53056335]
[-164.82426453 153.06632996]
[-150.59754944 159.98812866]
[-135.62294006 159.11596680]
[-120.85081482 156.51123047]
[-106.48097229 152.20918274]
[-92.11112976 147.90713501]
[-77.74128723 143.60508728]
[-63.37144852 139.30303955]
[-49.00160599 135.00099182]
[-34.63176346 130.69894409]
[-20.26191902 126.39689636]
[-14.75773048 121.46903992]
[-5.65172243 122.13841248]
[8.77916908 118.04581451]
[15.79122257 104.95510101]
[30.36789703 100.59905243]
[44.05109406 108.04270172]
[58.48198700 103.95009613]
[72.91287994 99.85749817]
[87.34377289 95.76490021]
[99.24407196 86.63347626]
[106.93220520 73.75354767]
[114.62034607 60.87362289]
[110.97180939 45.73011017]
[118.95214844 32.77755356]
[133.41165161 29.39255333]
[141.09979248 16.51262474]
[148.78793335 3.63269758]
[156.47607422 -9.24723053]
[156.90551758 -25.06260681]
[170.07250977 -32.02533340]
[177.76065063 -44.90526199]
[185.44879150 -57.78519058]
[185.14613342 -74.18154144]
[199.33215332 -82.40888214]
[213.41346741 -74.00362396]
[212.90444946 -57.61237717]
[198.32872009 -50.09705353]
[190.64057922 -37.21712494]
[182.95243835 -24.33719635]
[183.07290649 -9.44307899]
[169.35600281 -1.55909264]
[161.66786194 11.32083511]
[153.97972107 24.20076370]
[146.29158020 37.08069229]
[150.17459106 51.41448975]
[142.56120300 64.58609009]
[127.50027466 68.56175995]
[119.81213379 81.44168854]
[112.12400055 94.32161713]
[114.99412537 101.25070953]
[124.12563324 89.35047913]
[138.99726868 91.30858612]
[144.73722839 105.16690063]
[135.60545349 117.06694031]
[120.73437500 115.10890198]
[123.60449982 122.03800201]
[138.14831543 125.70915222]
[152.69213867 129.38029480]
[167.23596191 133.05145264]
[181.77976990 136.72259521]
[197.05390930 132.59811401]
[207.50045776 143.21501160]
[222.04428101 146.88616943]
[236.58810425 150.55731201]
[251.13191223 154.22846985]
[265.67575073 157.89961243]
[280.21954346 161.57077026]
[295.49368286 157.44627380]
[305.94024658 168.06318665]
[320.48406982 171.73432922]
[329.56674194 170.80039978]
[335.21194458 175.56608582]
[349.70083618 179.44836426]
[364.18969727 183.33065796]
[378.67858887 187.21293640]
[391.38351440 178.09597778]
[406.97232056 179.33009338]
[418.08447266 190.33256531]
[419.47311401 205.90837097]
[410.48260498 218.70307922]
[395.35797119 222.67543030]
[381.24063110 215.94979858]
[374.79632568 201.70182800]
[360.30743408 197.81953430]
[345.81854248 193.93725586]
[331.32965088 190.05496216]
[316.81292725 186.27815247]
[302.26910400 182.60699463]
[288.03524780 186.99407959]
[276.54840088 176.11457825]
[262.00457764 172.44343567]
[247.46076965 168.77227783]
[232.91694641 165.10113525]
[218.37313843 161.42997742]
[203.82931519 157.75883484]
[189.59545898 162.14591980]
[178.10862732 151.26641846]
[163.56480408 147.59527588]
[149.02098083 143.92411804]
[134.47717285 140.25297546]
[119.93334961 136.58181763]
[91.43637085 110.19579315]
[77.00547791 114.28839111]
[62.57458496 118.38098907]
[48.14369583 122.47358704]
[40.40543747 135.99235535]
[25.71216011 139.93725586]
[12.87176895 132.47669983]
[-1.55912268 136.56930542]
[-15.95987034 140.76673889]
[-30.32971382 145.06878662]
[-44.69955444 149.37083435]
[-59.06939697 153.67288208]
[-73.43923950 157.97492981]
[-87.80908203 162.27697754]
[-102.17892456 166.57902527]
[-116.54876709 170.88107300]
[-101.88012695 174.01652527]
[-89.13274384 181.92248535]
[-79.80509949 193.66961670]
[-74.99365997 207.87701416]
[-75.26402283 222.87457275]
[-80.58441162 236.89932251]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 94]
[11 93]
[13 91]
[14 90]
[15 89]
[16 88]
[17 86]
[19 84]
[20 83]
[21 82]
[22 81]
[23 56]
[25 54]
[26 53]
[27 52]
[29 50]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[58 68]
[59 67]
[60 66]
[95 209]
[96 208]
[97 207]
[98 206]
[99 205]
[100 204]
[101 203]
[102 202]
[104 201]
[105 200]
[108 197]
[109 196]
[110 195]
[111 194]
[112 141]
[113 140]
[114 139]
[117 136]
[118 135]
[119 134]
[120 133]
[122 131]
[123 130]
[124 129]
[148 193]
[149 192]
[150 191]
[151 190]
[152 189]
[154 187]
[155 186]
[156 185]
[157 184]
[158 183]
[159 182]
[161 180]
[162 179]
[164 178]
[165 177]
[166 176]
[167 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
