%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGAUGAAGAGCAUGAAUGCGAAUGUACAGCACUGAGCUCGCGUCUGCCACAUGAGAUGGGCCUCUUUCUGUCGCCCAGGCUGGAGUGCAAUGGUGUGAUCAUAGCUCACUGCAGCCUCAACCUCCUGAGCUCAAAUAGUCCUCCUGCCUCAGCUUCCUGAGUUGCGACUACAGCC\
) } def
/len { sequence length } bind def

/coor [
[184.02052307 519.45568848]
[179.86347961 505.04321289]
[175.70643616 490.63076782]
[171.54937744 476.21829224]
[167.39233398 461.80584717]
[163.23527527 447.39340210]
[158.34623718 441.82168579]
[159.13412476 432.69143677]
[146.13626099 425.50872803]
[141.97126770 410.87631226]
[149.59327698 397.29165649]
[145.68980408 382.80847168]
[141.78633118 368.32528687]
[137.75592041 353.87689209]
[133.59886169 339.46444702]
[122.63743591 329.37997437]
[126.24713898 313.97607422]
[122.09008789 299.56359863]
[110.27297211 297.83728027]
[99.92012024 291.88391113]
[87.73860931 300.63665771]
[75.55709839 309.38943481]
[76.45938873 324.79037476]
[68.87216187 338.22308350]
[55.21646118 345.40121460]
[39.84978104 344.03424072]
[27.67556572 334.55834961]
[22.57856750 319.99731445]
[26.18522072 304.99746704]
[37.34465408 294.34521484]
[52.49592972 291.43963623]
[66.80433655 297.20791626]
[78.98584747 288.45513916]
[91.16735840 279.70239258]
[91.14315033 254.66209412]
[109.35807037 236.98881531]
[107.51986694 222.10188293]
[105.68167114 207.21493530]
[103.84346771 192.32800293]
[102.00526428 177.44105530]
[100.16706085 162.55410767]
[98.32886505 147.66717529]
[96.49066162 132.78022766]
[67.85325623 122.39231873]
[55.99467468 88.88954163]
[41.54629517 84.85912323]
[27.09791183 80.82870483]
[12.64953041 76.79829407]
[0.57528508 86.54468536]
[-14.92344475 87.29899597]
[-27.88708305 78.77117920]
[-33.33084488 64.24034882]
[-29.16149330 49.29390335]
[-16.98222923 39.67906570]
[-1.47622764 39.09292984]
[11.39413643 47.76087952]
[16.67994690 62.34991074]
[31.12832832 66.38032532]
[45.57670975 70.41074371]
[60.02509308 74.44115448]
[68.23511505 61.88745117]
[58.75104904 50.26624298]
[49.26698303 38.64503479]
[39.78291702 27.02382469]
[24.30323792 25.28677750]
[14.85059547 13.36611557]
[16.60199928 -1.38068604]
[0.84966701 -4.42100811]
[-6.46679640 -18.69857407]
[0.26517400 -33.26086044]
[15.88138676 -36.93692398]
[28.40242004 -26.90680504]
[28.22320938 -10.86475182]
[43.02175522 -9.62436295]
[52.80549622 2.02609086]
[51.40412521 17.53975868]
[60.88819122 29.16096878]
[70.37225342 40.78217697]
[79.85632324 52.40338516]
[94.66958618 50.04386902]
[100.07376099 36.05119705]
[105.47794342 22.05852890]
[110.88212585 8.06585789]
[116.28630829 -5.92681217]
[121.69049072 -19.91948318]
[119.44470215 -35.58048630]
[131.24777222 -44.66546631]
[136.65194702 -58.65813828]
[142.05613708 -72.65081024]
[147.21391296 -86.73616791]
[152.12370300 -100.90987396]
[149.32968140 -116.48241425]
[160.80664062 -125.97602081]
[165.71643066 -140.14973450]
[170.62622070 -154.32344055]
[175.53601074 -168.49714661]
[180.44580078 -182.67085266]
[179.91697693 -199.61654663]
[196.05404663 -204.81573486]
[205.51722717 -190.74859619]
[194.61950684 -177.76106262]
[189.70971680 -163.58735657]
[184.79992676 -149.41365051]
[179.89013672 -135.23994446]
[174.98034668 -121.06623077]
[178.12554932 -106.50749207]
[166.29740906 -96.00008392]
[161.38761902 -81.82637787]
[162.64433289 -77.19139099]
[160.98205566 -71.71858215]
[156.04879761 -67.24662781]
[150.64462280 -53.25395584]
[145.24043274 -39.26128387]
[147.87277222 -24.60113335]
[135.68316650 -14.51530075]
[130.27897644 -0.52263033]
[124.87480164 13.47003937]
[119.47061920 27.46270943]
[114.06643677 41.45537949]
[108.66225433 55.44805145]
[120.34511566 60.97900009]
[129.64901733 69.37390900]
[135.93664551 79.75534058]
[138.86680603 91.12674713]
[138.40786743 102.46629333]
[134.82289124 112.81810760]
[128.62934875 121.37281799]
[120.53797150 127.53063202]
[111.37760162 130.94203186]
[113.21580505 145.82897949]
[115.05400085 160.71591187]
[116.89220428 175.60285950]
[118.73040771 190.48979187]
[120.56861115 205.37673950]
[122.40680695 220.26367188]
[124.24501038 235.15061951]
[133.05268860 237.47882080]
[140.85321045 242.13259888]
[147.04879761 248.73805237]
[151.16946411 256.77236938]
[152.90863037 265.60525513]
[152.14591980 274.54830933]
[148.95530701 282.90878296]
[143.59831238 290.04312134]
[136.50254822 295.40655518]
[140.65959167 309.81900024]
[151.91836548 320.93435669]
[148.01132202 335.30740356]
[152.16836548 349.71984863]
[157.56857300 357.12393188]
[156.26953125 364.42181396]
[160.17300415 378.90499878]
[164.07646179 393.38818359]
[177.49285889 401.30264282]
[181.24520874 416.04626465]
[173.61732483 428.78796387]
[177.64773560 443.23632812]
[181.80479431 457.64880371]
[185.96183777 472.06124878]
[190.11888123 486.47372437]
[194.27593994 500.88616943]
[198.43298340 515.29864502]
[211.99029541 527.73992920]
[207.14515686 544.59393311]
[211.55450439 558.93121338]
[215.96385193 573.26849365]
[220.37319946 587.60577393]
[234.45538330 594.77990723]
[239.26060486 609.83593750]
[231.93801880 623.84149170]
[216.83198547 628.48730469]
[202.90464783 621.01702881]
[198.41883850 605.86273193]
[206.03591919 592.01513672]
[201.62657166 577.67785645]
[197.21722412 563.34057617]
[192.80787659 549.00329590]
[182.25483704 543.05340576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[3 160]
[4 159]
[5 158]
[6 157]
[8 156]
[11 153]
[12 152]
[13 151]
[14 149]
[15 148]
[17 146]
[18 145]
[20 34]
[21 33]
[22 32]
[36 136]
[37 135]
[38 134]
[39 133]
[40 132]
[41 131]
[42 130]
[43 129]
[45 60]
[46 59]
[47 58]
[48 57]
[61 79]
[62 78]
[63 77]
[64 76]
[67 73]
[80 120]
[81 119]
[82 118]
[83 117]
[84 116]
[85 115]
[87 113]
[88 112]
[89 111]
[90 108]
[91 107]
[93 105]
[94 104]
[95 103]
[96 102]
[97 101]
[164 177]
[165 176]
[166 175]
[167 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
