%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAGCCGCUGCUGCCGCAGCAUCGGCAUCGCAGACGCGCUCGGGCGGCGGGUCCGAGGCCGGCGUGCGCGGAGGCUGGGCGGGCAGCCCGAGCGGUGGCCGCAGCGCAGUGCCCCCACUCCCAACUCCCGCCCCAAGCCGCCCACCAGCCCCCUUCCCCUCCGGCCGGAGCCUGAACCGAGCCCGGCUGGCUGUGCUGCGCGGUGCCGCCGGGAAAG\
) } def
/len { sequence length } bind def

/coor [
[43.20009995 244.70863342]
[29.51076508 238.57658386]
[21.22419167 226.07327271]
[20.90981865 211.07879639]
[11.88545799 223.06048584]
[2.86109710 235.04217529]
[-6.07709265 247.08828735]
[-14.92865181 259.19818115]
[-23.69312477 271.37127686]
[-32.37005997 283.60690308]
[-41.04699326 295.84255981]
[-49.72393036 308.07818604]
[-58.22445679 320.43704224]
[-66.54682159 332.91653442]
[-74.86919403 345.39605713]
[-83.19155884 357.87554932]
[-91.51393127 370.35507202]
[-88.17138672 385.80184937]
[-96.80048370 399.04248047]
[-112.28173828 402.22152710]
[-125.43039703 393.45291138]
[-128.44558716 377.93890381]
[-119.53845215 364.88369751]
[-103.99343872 362.03271484]
[-95.67107391 349.55319214]
[-87.34870148 337.07369995]
[-79.02633667 324.59417725]
[-70.70396423 312.11465454]
[-70.74330902 307.34432983]
[-67.79039001 302.49743652]
[-61.95956802 299.40124512]
[-53.28263092 287.16561890]
[-44.60569763 274.92999268]
[-35.92876053 262.69433594]
[-34.62437439 255.42425537]
[-27.03856087 250.34663391]
[-18.18700218 238.23672485]
[-16.77846336 230.98608398]
[-9.12059402 226.01780701]
[-0.09623262 214.03611755]
[8.92812824 202.05442810]
[17.16077232 189.51554871]
[16.71691322 174.62756348]
[30.25937653 166.44757080]
[37.66600800 153.40371704]
[45.07264328 140.35987854]
[52.47927475 127.31604004]
[59.88591003 114.27220154]
[67.29254150 101.22836304]
[70.17931366 86.50876617]
[68.24809265 71.63360596]
[66.31687164 56.75844193]
[57.33613586 50.63534927]
[53.28806686 40.78468704]
[55.28465652 30.54706383]
[62.43055725 23.25317574]
[60.92684555 8.32873726]
[59.42313004 -6.59570026]
[57.91941833 -21.52013779]
[48.44504547 -30.26650047]
[47.49690247 -42.72401428]
[55.03940201 -52.17638016]
[53.74992752 -67.12084961]
[52.46045685 -82.06532288]
[48.60691452 -90.34040833]
[51.26124954 -97.23316956]
[50.18628311 -112.19460297]
[46.45183945 -120.52410889]
[49.20477676 -127.37808228]
[40.68878174 -140.71182251]
[47.68344879 -153.86186218]
[46.82320786 -168.83718872]
[36.36276627 -183.99507141]
[44.86391830 -199.35038757]
[43.78895187 -214.31182861]
[42.71398544 -229.27325439]
[41.63901901 -244.23469543]
[40.34954834 -259.17916870]
[38.84583664 -274.10360718]
[37.34212112 -289.02804565]
[35.83840942 -303.95248413]
[34.33469772 -318.87692261]
[32.83098221 -333.80136108]
[31.32727051 -348.72579956]
[27.35541916 -356.94473267]
[29.91060638 -363.87487793]
[28.62113571 -378.81933594]
[14.01386929 -387.35278320]
[7.43855429 -402.75927734]
[11.30528259 -418.88693237]
[23.89685440 -429.42349243]
[22.39314079 -444.34793091]
[20.88942719 -459.27236938]
[11.80767059 -472.22738647]
[18.23011780 -485.66619873]
[16.72640419 -500.59063721]
[7.64464712 -513.54565430]
[14.06709385 -526.98443604]
[12.56338024 -541.90887451]
[11.05966759 -556.83331299]
[9.44894695 -571.74658203]
[-4.13211298 -579.25219727]
[-10.67721462 -593.32135010]
[-7.66963339 -608.54418945]
[3.73415542 -619.06719971]
[19.14916229 -620.84399414]
[32.64799881 -613.19152832]
[39.04009247 -599.05218506]
[35.86754990 -583.86285400]
[24.35027885 -573.46423340]
[28.23656654 -567.18310547]
[25.98410606 -558.33703613]
[27.48781776 -543.41259766]
[28.99153137 -528.48815918]
[37.96573257 -516.60064697]
[31.65084267 -502.09432983]
[33.15455627 -487.16989136]
[42.12875748 -475.28237915]
[35.81386566 -460.77609253]
[37.31757736 -445.85165405]
[38.82129288 -430.92721558]
[50.92610168 -425.30334473]
[58.73520660 -414.34555054]
[60.12264633 -400.85278320]
[54.61982727 -388.33694458]
[43.56560898 -380.10882568]
[44.85507965 -365.16433716]
[46.25170898 -350.22949219]
[47.75542068 -335.30505371]
[49.25913620 -320.38061523]
[50.76284790 -305.45617676]
[52.26655960 -290.53173828]
[53.77027512 -275.60729980]
[55.27398682 -260.68286133]
[58.33558655 -257.02444458]
[59.13534927 -251.40548706]
[56.60045242 -245.30966187]
[57.67541885 -230.34822083]
[58.75038528 -215.38679504]
[59.82534790 -200.42535400]
[68.75951385 -192.27568054]
[69.78075409 -179.82394409]
[61.79852295 -169.69741821]
[62.65876007 -154.72210693]
[71.11322784 -142.45950317]
[64.18009186 -128.23832703]
[65.14771271 -113.26956177]
[66.22267914 -98.30813599]
[67.40493011 -83.35479736]
[68.69440460 -68.41032410]
[69.98387146 -53.46585083]
[80.79238892 -39.63719940]
[72.84385681 -23.02385139]
[74.34757233 -8.09941292]
[75.85128021 6.82502460]
[77.35499573 21.74946213]
[89.76799774 36.57972336]
[81.19203186 54.82722092]
[83.12325287 69.70237732]
[85.05447388 84.57753754]
[106.96599579 76.24565125]
[127.29128265 93.59282684]
[141.37435913 98.75681305]
[155.45744324 103.92079926]
[169.54052734 109.08478546]
[183.62361145 114.24877930]
[197.70669556 119.41276550]
[211.78977966 124.57675171]
[225.87286377 129.74073792]
[235.00120544 129.75636292]
[240.12004089 135.08113098]
[254.12759399 140.44660950]
[268.17327881 145.71147156]
[282.40557861 138.83998108]
[297.30047607 144.12367249]
[304.02108765 158.42782593]
[298.58023071 173.26603699]
[284.20581055 179.83505249]
[269.42596436 174.23760986]
[263.00927734 159.79455566]
[255.65159607 160.44264221]
[248.76211548 154.45416260]
[234.75456238 149.08868408]
[220.70887756 143.82382202]
[206.62579346 138.65983582]
[192.54270935 133.49584961]
[178.45962524 128.33186340]
[164.37654114 123.16786957]
[150.29345703 118.00388336]
[136.21037292 112.83989716]
[122.12729645 107.67591095]
[112.93199158 119.52691650]
[121.43251801 131.88575745]
[129.93304443 144.24459839]
[138.43356323 156.60345459]
[146.93409729 168.96229553]
[160.89187622 178.58604431]
[155.50811768 194.66247559]
[138.56959534 193.93951416]
[134.57525635 177.46282959]
[126.07472229 165.10397339]
[117.57419586 152.74513245]
[109.07366943 140.38629150]
[100.57314301 128.02743530]
[86.67736816 120.86388397]
[80.33638000 108.63499451]
[72.92974854 121.67883301]
[65.52311707 134.72267151]
[58.11648178 147.76651001]
[50.70985031 160.81036377]
[43.30321503 173.85420227]
[43.21730423 189.67517090]
[30.20461273 196.92218018]
[44.09058380 191.24945068]
[58.85745621 193.88374329]
[69.92535400 204.00805664]
[73.86163330 218.48236084]
[69.44546509 232.81755066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 41]
[5 40]
[6 39]
[7 37]
[8 36]
[9 34]
[10 33]
[11 32]
[12 31]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[42 213]
[44 211]
[45 210]
[46 209]
[47 208]
[48 207]
[49 206]
[50 160]
[51 159]
[52 158]
[56 156]
[57 155]
[58 154]
[59 153]
[62 151]
[63 150]
[64 149]
[66 148]
[67 147]
[69 146]
[71 144]
[72 143]
[74 140]
[75 139]
[76 138]
[77 137]
[78 134]
[79 133]
[80 132]
[81 131]
[82 130]
[83 129]
[84 128]
[86 127]
[87 126]
[91 121]
[92 120]
[93 119]
[95 117]
[96 116]
[98 114]
[99 113]
[100 112]
[101 110]
[162 191]
[163 190]
[164 189]
[165 188]
[166 187]
[167 186]
[168 185]
[169 184]
[171 183]
[172 182]
[173 180]
[192 204]
[193 203]
[194 202]
[195 201]
[196 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
