%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGUUGCGGUGCAUUGUGGGUUCUCCUGGAGCUGUGGAGUUGAUCCUGAAUGAAAGUGGCGCGCCGCCCCUGACGUUACCCGGAUCGGAGAGGUUGGAAUUCAGAUUACGGCUGCGAUUCGGGUGUCUCGGACCCCGGUGUGCACCGGACCACGGGGAGGCGGCUCCAAAGGCGCGGUGAACGUUGGUGAGGGAGGGCAGCUCUGCGCAGCCCCAAGAC\
) } def
/len { sequence length } bind def

/coor [
[-83.33812714 789.59826660]
[-88.55738068 803.66094971]
[-93.77663422 817.72363281]
[-91.32458496 833.35369873]
[-103.00686646 842.59350586]
[-108.22612000 856.65618896]
[-113.44537354 870.71887207]
[-118.66461945 884.78155518]
[-123.88387299 898.84423828]
[-117.06833649 913.10345459]
[-122.41048431 927.97747803]
[-136.74092102 934.64190674]
[-151.55764771 929.14276123]
[-158.07015991 914.74267578]
[-152.41471863 899.98492432]
[-137.94656372 893.62500000]
[-132.72732544 879.56231689]
[-127.50806427 865.49963379]
[-122.28881073 851.43695068]
[-117.06955719 837.37420654]
[-119.89492035 822.75006104]
[-107.83933258 812.50439453]
[-102.62007904 798.44171143]
[-97.40082550 784.37902832]
[-92.38199615 770.24353027]
[-87.56461334 756.03814697]
[-90.80455780 741.50024414]
[-79.04508209 730.91601562]
[-74.22769928 716.71063232]
[-69.41031647 702.50524902]
[-72.65025330 687.96728516]
[-60.89078522 677.38311768]
[-56.07340240 663.17773438]
[-51.25601578 648.97235107]
[-46.43863297 634.76696777]
[-41.62124634 620.56158447]
[-36.80385971 606.35620117]
[-32.18888855 592.08380127]
[-27.77726555 577.74719238]
[-23.36564255 563.41058350]
[-18.95401764 549.07403564]
[-14.54239464 534.73742676]
[-10.13077068 520.40087891]
[-15.80714703 501.91223145]
[-0.81331700 488.43112183]
[3.18897986 473.97491455]
[7.19127655 459.51870728]
[11.19357395 445.06253052]
[3.65288234 432.26901245]
[7.50584650 417.55136108]
[20.97597122 409.72872925]
[24.97826767 395.27255249]
[20.91736031 380.94223022]
[32.05631638 369.70681763]
[36.05861282 355.25061035]
[31.99770546 340.92028809]
[43.13665771 329.68490601]
[47.13895798 315.22869873]
[37.17652893 299.86447144]
[41.69305038 281.78909302]
[58.27063751 272.60681152]
[61.86037064 258.04266357]
[65.45010376 243.47854614]
[69.03984070 228.91441345]
[72.62957764 214.35029602]
[76.21931458 199.78616333]
[79.18486786 185.08224487]
[81.52085114 170.26524353]
[83.85684204 155.44825745]
[86.08745575 140.61503601]
[88.21258545 125.76634216]
[90.33770752 110.91764832]
[62.91775513 81.33320618]
[58.71036911 66.93536377]
[54.50298309 52.53752136]
[50.73973465 48.94136810]
[48.91018677 44.68758392]
[48.94162369 40.62097168]
[50.43725204 37.43559265]
[46.84751892 22.87146568]
[43.25778198 8.30733871]
[39.66804886 -6.25678873]
[36.07831192 -20.82091713]
[32.48857880 -35.38504410]
[28.89884377 -49.94916916]
[25.30910873 -64.51329803]
[21.71937370 -79.07742310]
[18.12963867 -93.64155579]
[7.31457281 -105.18905640]
[11.78120613 -119.39815521]
[8.19147110 -133.96228027]
[-5.05083752 -142.16465759]
[-8.48386765 -156.98590088]
[-0.58254498 -169.55986023]
[-4.17227983 -184.12399292]
[-19.17006111 -186.76718140]
[-31.79250526 -195.28738403]
[-39.85269928 -208.20841980]
[-41.95415878 -223.29164124]
[-37.73280334 -237.92379761]
[-27.92000008 -249.56977844]
[-14.21587944 -256.21182251]
[1.00523651 -256.69921875]
[15.10619736 -250.94744873]
[25.64392662 -239.95307922]
[30.79269981 -225.62094116]
[29.66045952 -210.43417358]
[22.44337463 -197.02397156]
[10.39184761 -187.71372986]
[13.98158264 -173.14959717]
[26.82126999 -165.68783569]
[30.66924477 -150.96887207]
[22.75559807 -137.55201721]
[26.34533310 -122.98789215]
[36.90363693 -112.48210907]
[32.69376755 -97.23128510]
[36.28350067 -82.66716003]
[39.87323761 -68.10303497]
[43.46297073 -53.53890610]
[47.05270386 -38.97477722]
[50.64244080 -24.41065025]
[54.23217392 -9.84652424]
[57.82191086 4.71760321]
[61.41164398 19.28173065]
[65.00138092 33.84585953]
[68.90082550 48.33013535]
[73.10821533 62.72798157]
[77.31559753 77.12582397]
[84.32821655 79.78536224]
[85.05310822 64.80288696]
[99.52633667 60.86263657]
[107.74605560 73.40999603]
[98.35346222 85.10443115]
[105.36608887 87.76396942]
[118.06289673 79.77703857]
[130.75970459 71.79011536]
[143.45651245 63.80318451]
[156.15332031 55.81625748]
[159.77606201 40.66655350]
[172.76622009 32.74754333]
[187.18681335 36.29463959]
[199.88362122 28.30771065]
[207.44502258 14.41037750]
[222.33789062 14.18285847]
[232.52554321 0.63117611]
[248.36784363 6.66921091]
[246.95135498 23.56388283]
[230.32481384 26.87966919]
[223.67158508 40.20572281]
[207.87055969 41.00452042]
[195.17373657 48.99145126]
[192.12745667 63.52608871]
[179.36486816 71.80683899]
[164.14025879 68.51306915]
[151.44343567 76.49999237]
[138.74662781 84.48692322]
[126.04981995 92.47385406]
[113.35301208 100.46077728]
[105.18640900 113.04277039]
[103.06127930 127.89147186]
[100.93614960 142.74017334]
[102.81739044 151.67108154]
[98.67382812 157.78424072]
[96.33784485 172.60124207]
[94.00185394 187.41822815]
[106.71051025 179.45014954]
[121.36002350 182.67376709]
[129.55000305 195.24055481]
[126.58409882 209.94441223]
[114.16303253 218.35377502]
[99.40937042 215.64648438]
[90.78343964 203.37590027]
[87.19370270 217.94003296]
[83.60396576 232.50415039]
[80.01423645 247.06828308]
[76.42449951 261.63241577]
[72.83476257 276.19653320]
[80.84252930 284.97171021]
[83.59523010 296.40490723]
[80.52217102 307.63201904]
[72.49739075 315.89758301]
[61.59515381 319.23098755]
[57.59285736 333.68719482]
[61.36749268 349.05151367]
[50.51480865 359.25292969]
[46.51251221 373.70910645]
[50.28714752 389.07345581]
[39.43446350 399.27484131]
[35.43216705 413.73104858]
[42.96121597 427.36743164]
[38.69638443 441.97106934]
[25.64977074 449.06481934]
[21.64747238 463.52102661]
[17.64517593 477.97720337]
[13.64287949 492.43341064]
[19.53671455 501.56411743]
[19.43869019 512.21191406]
[13.62230873 520.86804199]
[4.20581102 524.81250000]
[-0.20581274 539.14904785]
[-4.61743641 553.48565674]
[-9.02906036 567.82226562]
[-13.44068432 582.15881348]
[-17.85230827 596.49542236]
[-16.75340652 603.00286865]
[-18.79464531 608.29675293]
[-22.59848213 611.17358398]
[-27.41586685 625.37896729]
[-32.23325348 639.58435059]
[-37.05063629 653.78973389]
[-41.86802292 667.99511719]
[-46.68540955 682.20050049]
[-43.79003906 697.75451660]
[-55.20493698 707.32263184]
[-60.02231979 721.52801514]
[-64.83970642 735.73339844]
[-61.94433594 751.28741455]
[-73.35923767 760.85552979]
[-78.17662048 775.06091309]
[-77.26314545 781.59698486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[25 219]
[26 218]
[28 216]
[29 215]
[30 214]
[32 212]
[33 211]
[34 210]
[35 209]
[36 208]
[37 207]
[38 204]
[39 203]
[40 202]
[41 201]
[42 200]
[43 199]
[45 195]
[46 194]
[47 193]
[48 192]
[51 189]
[52 188]
[54 186]
[55 185]
[57 183]
[58 182]
[61 177]
[62 176]
[63 175]
[64 174]
[65 173]
[66 172]
[67 165]
[68 164]
[69 163]
[70 161]
[71 160]
[72 159]
[73 128]
[74 127]
[75 126]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[90 114]
[91 113]
[94 110]
[95 109]
[134 158]
[135 157]
[136 156]
[137 155]
[138 154]
[141 151]
[142 150]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
