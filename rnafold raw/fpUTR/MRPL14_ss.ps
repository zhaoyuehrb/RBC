%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUUCUUGACACUUCAGGUGUACACACACGUGUGAGUGUACUAGGAGGUGUUCUACAGUGUGUUUCUGUAGGUCGCAGUGAGAAAAAUUUGAAAAGCGUUGUCUCCUGUGCCCUUCUAUUUGCCCUCUUGCCUUUCUUUGCCUGAGUUUUCAGUCACUUAAAAUUGUCUGAGG\
) } def
/len { sequence length } bind def

/coor [
[96.86116791 179.38095093]
[100.05464935 194.03706360]
[91.80698395 206.56607056]
[77.08232880 209.42692566]
[64.74325562 200.89773560]
[62.21648026 186.11209106]
[71.02243805 173.96951294]
[76.83051300 160.13960266]
[82.63858032 146.30969238]
[75.29784393 144.77232361]
[63.57036972 154.12466431]
[51.84289551 163.47700500]
[40.11542511 172.82936096]
[28.38795280 182.18170166]
[16.66048050 191.53405762]
[5.01742554 200.99128723]
[-6.54027271 210.55264282]
[-12.24154758 225.31089783]
[-26.98002052 227.46186829]
[-38.53771973 237.02323914]
[-50.09541702 246.58459473]
[-61.65311432 256.14596558]
[-66.85913849 271.69680786]
[-82.98130798 274.69808960]
[-93.43451691 262.06234741]
[-87.46540070 246.78813171]
[-71.21447754 244.58825684]
[-59.65677643 235.02690125]
[-48.09907913 225.46553040]
[-36.54137802 215.90417480]
[-31.66679001 201.82981873]
[-16.10163307 198.99494934]
[-4.54393435 189.43359375]
[-1.38378251 182.72471619]
[7.30813313 179.80657959]
[19.03560448 170.45423889]
[30.76307678 161.10188293]
[42.49055099 151.74954224]
[54.21802139 142.39718628]
[65.94549561 133.04484558]
[55.64518356 105.87679291]
[63.25232697 79.59433746]
[83.77612305 64.17897797]
[80.30718231 49.58560944]
[76.83824158 34.99223709]
[73.36930084 20.39886856]
[69.90035248 5.80549908]
[66.43141174 -8.78787041]
[62.96247101 -23.38124084]
[58.81891251 -21.96043205]
[54.05946350 -21.55300903]
[48.93082047 -22.33029175]
[43.72016144 -24.40470123]
[38.74140167 -27.82104111]
[27.18370438 -37.38240051]
[15.62600517 -46.94375992]
[4.06830645 -56.50511932]
[-7.48939180 -66.06648254]
[-19.04709053 -75.62783813]
[-34.39408112 -72.62718964]
[-48.05425262 -80.23860931]
[-53.57769012 -94.86822510]
[-48.35639572 -109.60837555]
[-34.85570526 -117.49921417]
[-19.45022964 -114.81493378]
[-9.41396713 -102.82295990]
[-9.48573112 -87.18553925]
[2.07196784 -77.62417603]
[13.62966633 -68.06282043]
[25.18736458 -58.50146103]
[36.74506378 -48.94010162]
[48.30276108 -39.37873840]
[62.39302826 -44.52309799]
[60.84389877 -53.55997086]
[65.25420380 -59.52191162]
[68.19706726 -74.23040009]
[71.13992310 -88.93888855]
[74.08278656 -103.64736938]
[77.02564240 -118.35585785]
[75.63898468 -127.41908264]
[80.15560150 -133.30090332]
[83.36202240 -147.95417786]
[86.56843567 -162.60746765]
[89.77485657 -177.26075745]
[83.47794342 -188.54244995]
[86.47312164 -200.69763184]
[96.61936188 -207.32241821]
[100.08830261 -221.91578674]
[103.55724335 -236.50917053]
[92.78577423 -247.55357361]
[89.71769714 -262.67279053]
[95.33200836 -277.04229736]
[107.83721161 -286.07687378]
[123.24294281 -286.89358521]
[136.63328552 -279.23184204]
[143.73542786 -265.53646851]
[142.28311157 -250.17762756]
[132.73976135 -238.05624390]
[118.15061188 -233.04022217]
[114.68167114 -218.44685364]
[111.21273041 -203.85348511]
[117.14348602 -187.35217285]
[104.42814636 -174.05435181]
[101.22172546 -159.40106201]
[98.01531219 -144.74777222]
[94.80889130 -130.09448242]
[91.73413086 -115.41300201]
[88.79126740 -100.70451355]
[85.84841156 -85.99602509]
[82.90554810 -71.28753662]
[79.96269226 -56.57905197]
[77.15196991 -41.84474564]
[77.55583954 -26.85018158]
[81.02478027 -12.25681210]
[84.49372864 2.33655739]
[87.96266937 16.92992783]
[91.43161011 31.52329636]
[94.90055084 46.11666870]
[98.36949158 60.71003723]
[107.36341095 61.37177277]
[115.97005463 64.06510162]
[123.73678589 68.64836884]
[130.25511169 74.88053131]
[135.18222046 82.43380737]
[138.25897217 90.91095734]
[139.32354736 99.86612701]
[154.05786133 102.67684937]
[168.79217529 105.48756409]
[181.76953125 96.87212372]
[196.67218018 99.93249512]
[204.80570984 112.35751343]
[219.54002380 115.16823578]
[230.75886536 104.44830322]
[246.14059448 102.40333557]
[259.77062988 109.81966400]
[266.40792847 123.84556580]
[263.50030518 139.08779907]
[252.16583252 149.68539429]
[236.76281738 151.56338501]
[223.21405029 143.99961853]
[216.72929382 129.90254211]
[201.99499512 127.09182739]
[189.85867310 135.65017700]
[174.87594604 133.00959778]
[165.98144531 120.22187805]
[151.24714661 117.41115570]
[136.51283264 114.60043335]
[133.51237488 125.37132263]
[127.26117706 135.47836304]
[117.93299866 143.93266296]
[124.92218018 157.20486450]
[131.91136169 170.47706604]
[138.90054321 183.74926758]
[145.88972473 197.02146912]
[159.16592407 205.62687683]
[158.25007629 220.49330139]
[165.23925781 233.76550293]
[180.61528015 235.85298157]
[191.80444336 246.60389709]
[194.50431824 261.88427734]
[187.67671204 275.81854248]
[173.94699097 283.04864502]
[158.59451294 280.79449463]
[147.52262878 269.92285156]
[144.98869324 254.61405945]
[151.96705627 240.75468445]
[144.97787476 227.48248291]
[132.20158386 219.82638550]
[132.61752319 204.01065063]
[125.62834930 190.73844910]
[118.63916779 177.46624756]
[111.64997864 164.19404602]
[104.66079712 150.92184448]
[97.32006073 149.38446045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 40]
[11 39]
[12 38]
[13 37]
[14 36]
[15 35]
[16 33]
[17 32]
[19 30]
[20 29]
[21 28]
[22 27]
[43 119]
[44 118]
[45 117]
[46 116]
[47 115]
[48 114]
[49 113]
[54 72]
[55 71]
[56 70]
[57 69]
[58 68]
[59 67]
[73 112]
[75 111]
[76 110]
[77 109]
[78 108]
[79 107]
[81 106]
[82 105]
[83 104]
[84 103]
[87 101]
[88 100]
[89 99]
[126 147]
[127 146]
[128 145]
[131 142]
[132 141]
[150 173]
[151 172]
[152 171]
[153 170]
[154 169]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
