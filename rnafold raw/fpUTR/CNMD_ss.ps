%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGUGCACCGUGUGUGCGCGCGGCGUUGAAAUGCCCUGCACGUCGGGGCAGCGGGACAGAUCCCAGGGUGCCCAGGGAGUCUCCAAGUGCCUCACUCCUCCCGCCGCAAAC\
) } def
/len { sequence length } bind def

/coor [
[61.81102371 257.49276733]
[49.90891266 248.36369324]
[46.43017960 233.77384949]
[37.75011063 246.00726318]
[29.07003975 258.24066162]
[20.38997078 270.47409058]
[11.70990086 282.70748901]
[3.02983141 294.94091797]
[4.28877258 310.93447876]
[-7.52850294 321.78491211]
[-23.35679245 319.16864014]
[-31.05398750 305.09268188]
[-24.71545792 290.35488892]
[-9.20358181 286.26083374]
[-0.52351218 274.02743530]
[8.15655708 261.79400635]
[16.83662605 249.56060791]
[25.51669693 237.32719421]
[34.19676590 225.09378052]
[41.63595581 212.06848145]
[47.76261902 198.37672424]
[53.88928223 184.68498230]
[60.01594543 170.99322510]
[66.14260864 157.30148315]
[72.26927185 143.60972595]
[63.17089462 136.25491333]
[55.95994186 127.04209900]
[51.00596619 116.44342041]
[48.56284332 105.00205231]
[48.75578308 93.30433655]
[51.57489777 81.94976044]
[56.87571335 71.52022552]
[45.69108200 61.52502823]
[34.50644684 51.52982712]
[23.32181549 41.53462982]
[12.13718319 31.53943062]
[0.95255095 21.54423141]
[-10.23208141 11.54903316]
[-26.26605415 11.00934601]
[-35.72513199 -1.94848669]
[-31.35311890 -17.38432312]
[-16.50384903 -23.45711136]
[-2.56841254 -15.50832844]
[-0.23688287 0.36440080]
[10.94774914 10.35959911]
[22.13238144 20.35479736]
[33.31701279 30.34999657]
[44.50164795 40.34519577]
[55.68627930 50.34039307]
[66.87091064 60.33559418]
[85.31849670 50.44947052]
[106.17404938 48.69032288]
[126.01697540 55.34668350]
[135.36932373 43.61920929]
[144.72166443 31.89173698]
[154.07402039 20.16426468]
[163.42636108 8.43679333]
[164.23010254 2.98401403]
[166.85760498 -1.13001728]
[170.45216370 -3.42221689]
[174.09127808 -3.83952403]
[184.39624023 -14.73942852]
[194.70118713 -25.63933372]
[205.00614929 -36.53923798]
[208.86444092 -51.88277817]
[223.23042297 -55.81568146]
[233.53536987 -66.71558380]
[236.80541992 -82.78540039]
[252.44102478 -87.73105621]
[264.35763550 -76.46488953]
[260.29644775 -60.57656860]
[244.43527222 -56.41062927]
[234.13032532 -45.51072693]
[231.00910950 -30.94682121]
[215.90605164 -26.23428535]
[205.60110474 -15.33438015]
[195.29614258 -4.43447495]
[184.99119568 6.46542978]
[175.15383911 17.78914070]
[165.80148315 29.51661301]
[156.44914246 41.24408340]
[147.09678650 52.97155762]
[137.74444580 64.69902802]
[147.21029663 78.97645569]
[151.48904419 95.56378937]
[150.11056519 112.63853455]
[163.96876526 118.37878418]
[177.82695007 124.11904144]
[191.68515015 129.85928345]
[208.63243103 130.33457947]
[212.86720276 146.75112915]
[198.26451111 155.36494446]
[185.94490051 143.71748352]
[172.08670044 137.97723389]
[158.22851562 132.23698425]
[144.37031555 126.49672699]
[137.59205627 135.46319580]
[129.03552246 142.75207520]
[119.10544586 148.01856995]
[108.27159119 151.01354980]
[97.04644775 151.59533691]
[85.96102142 149.73638916]
[79.83435822 163.42814636]
[73.70769501 177.11988831]
[67.58103180 190.81164551]
[61.45436859 204.50338745]
[55.32770157 218.19514465]
[69.66281128 213.77873230]
[83.57264709 219.39266968]
[90.82630157 232.52220154]
[88.17447662 247.28593445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[20 107]
[21 106]
[22 105]
[23 104]
[24 103]
[25 102]
[32 50]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[53 83]
[54 82]
[55 81]
[56 80]
[57 79]
[61 78]
[62 77]
[63 76]
[64 75]
[66 73]
[67 72]
[86 96]
[87 95]
[88 94]
[89 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
