%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUGAACAGCGCGCGUGGGUUUCCCGCAGCCCUGGCGCAGACGCGUGGGCUCCGUGGCGAUGCGGGGUGUUGCCUGAGGCUCCACUGAAGCUAUGGCAUAAUUUGCAGAAUUUGCACUUCAUUACUUUUCUGAAAUUCAAACAAAUUCUGAAACUGCACGAGUUCUGGCUGAGAGCUGUGGAUCUGUGCAUUUUGAUGGUGACAGUGCCUACGUGGGG\
) } def
/len { sequence length } bind def

/coor [
[180.85479736 685.90332031]
[175.60345459 700.23461914]
[164.64807129 710.86206055]
[150.16381836 715.67553711]
[135.02658081 713.71929932]
[122.24185944 705.38183594]
[114.34806824 692.31848145]
[112.91252899 677.12304688]
[118.22026825 662.81250000]
[129.21742249 652.22833252]
[143.72052002 647.47192383]
[137.67823792 633.85797119]
[147.12043762 621.16326904]
[149.04292297 606.28698730]
[150.96542358 591.41070557]
[152.88790894 576.53442383]
[154.81040955 561.65808105]
[156.73289490 546.78179932]
[158.65539551 531.90551758]
[160.57788086 517.02923584]
[162.50038147 502.15295410]
[150.79637146 492.68862915]
[145.97036743 478.27917480]
[149.68318176 463.39471436]
[160.92089844 452.74127197]
[158.15226746 437.99899292]
[155.38363647 423.25671387]
[152.61502075 408.51446533]
[149.84638977 393.77218628]
[147.07775879 379.02990723]
[144.30912781 364.28762817]
[134.35563660 353.20715332]
[139.41282654 338.21597290]
[136.64419556 323.47369385]
[133.77038574 308.75155640]
[130.79153442 294.05032349]
[127.81266785 279.34909058]
[123.40655518 273.42169189]
[124.89781952 264.41671753]
[122.12918854 249.67443848]
[119.36056519 234.93215942]
[116.59193420 220.18989563]
[113.71812439 205.46775818]
[103.60741425 194.53053284]
[108.45001984 179.46867371]
[105.47116852 164.76742554]
[102.49230957 150.06619263]
[99.51345062 135.36495972]
[75.89940643 125.88586426]
[64.75985718 103.00821686]
[49.88357162 101.08572388]
[35.00727844 99.16323090]
[20.13098907 97.24073792]
[5.25469828 95.31824493]
[-9.62159252 93.39575195]
[-24.49788284 91.47325897]
[-39.37417221 89.55076599]
[-54.29353714 96.35845184]
[-67.49001312 86.62268829]
[-65.38819122 70.35879517]
[-50.15025711 64.29766083]
[-37.45167923 74.67447662]
[-22.57538986 76.59696960]
[-7.69909954 78.51946259]
[7.17719078 80.44195557]
[22.05348206 82.36444855]
[36.92977142 84.28694153]
[51.80606461 86.20943451]
[66.68235016 88.13192749]
[66.38652039 81.32865143]
[67.49324036 74.14712524]
[70.11097717 66.87464905]
[60.45094681 55.39929581]
[50.79091263 43.92394257]
[41.13087845 32.44858551]
[25.62653160 30.94760132]
[15.99335384 19.17234993]
[17.51986313 4.40057373]
[7.85982943 -7.07478046]
[-7.64451838 -8.57576656]
[-17.27769470 -20.35101891]
[-15.75118637 -35.12279510]
[-25.41122055 -46.59814835]
[-41.00611877 -51.67074203]
[-44.14542389 -67.76660156]
[-31.59968948 -78.32769012]
[-16.27488899 -72.48966217]
[-13.93586636 -56.25818253]
[-4.27583218 -44.78282928]
[10.53989697 -43.76806259]
[20.50001526 -32.26803207]
[19.33518410 -16.73481369]
[28.99521637 -5.25945997]
[43.81094742 -4.24469614]
[53.77106476 7.25533342]
[52.60623169 22.78855324]
[62.26626587 34.26390839]
[71.92630005 45.73926163]
[81.58633423 57.21461487]
[89.06321716 56.62617111]
[86.08731842 41.92433548]
[81.82411957 27.54291725]
[93.56264496 18.20444679]
[106.61740112 25.59181786]
[104.65636444 40.46291733]
[104.01697540 55.44928360]
[111.49385071 54.86084366]
[119.23981476 42.01560593]
[126.98577881 29.17037201]
[134.73173523 16.32513618]
[142.47770691 3.47990036]
[150.22366333 -9.36533546]
[157.96961975 -22.21057129]
[165.71559143 -35.05580521]
[173.46154785 -47.90104294]
[164.71961975 -65.89087677]
[168.60134888 -85.36464691]
[183.35659790 -98.43597412]
[202.86814880 -99.91913605]
[209.86816406 -113.18562317]
[216.86817932 -126.45211792]
[223.86817932 -139.71861267]
[216.19267273 -153.10107422]
[216.99354553 -168.50762939]
[226.01524353 -181.02212524]
[240.37898254 -186.65121460]
[255.50132751 -183.59869385]
[266.55682373 -172.83859253]
[270.01766968 -157.80442810]
[264.77954102 -143.29354858]
[252.51391602 -133.93632507]
[237.13467407 -132.71859741]
[230.13467407 -119.45211029]
[223.13465881 -106.18561554]
[216.13464355 -92.91912079]
[222.61900330 -84.88144684]
[226.07589722 -75.10947418]
[226.08830261 -64.70587158]
[222.62942505 -54.85358047]
[216.06861877 -46.68128204]
[207.13204956 -41.13412476]
[196.82250977 -38.86442947]
[186.30677795 -40.15507889]
[178.56082153 -27.30984497]
[170.81486511 -14.46460819]
[163.06889343 -1.61937308]
[155.32293701 11.22586250]
[147.57698059 24.07109833]
[139.83100891 36.91633224]
[132.08505249 49.76156998]
[124.33908844 62.60680389]
[133.48748779 72.55766296]
[138.99209595 84.46121216]
[140.54791260 97.07803345]
[138.24761963 109.17140961]
[132.55055237 119.62837219]
[124.21676636 127.56205750]
[114.21469116 132.38609314]
[117.19355011 147.08734131]
[120.17240143 161.78857422]
[123.15126038 176.48980713]
[133.47503662 188.47856140]
[128.41935730 202.48889160]
[133.18771362 210.27197266]
[131.33421326 217.42126465]
[134.10284424 232.16354370]
[136.87145996 246.90580750]
[139.64009094 261.64810181]
[142.51391602 276.37020874]
[145.49276733 291.07147217]
[148.47161865 305.77270508]
[153.23997498 313.55578613]
[151.38647461 320.70504761]
[154.15510559 335.44732666]
[164.30664062 347.58227539]
[159.05140686 361.51901245]
[161.82003784 376.26126099]
[164.58866882 391.00354004]
[167.35728455 405.74581909]
[170.12591553 420.48809814]
[172.89454651 435.23037720]
[175.66317749 449.97265625]
[192.48161316 458.09753418]
[200.18028259 474.85974121]
[195.50384521 492.46224976]
[205.16387939 503.93762207]
[214.82391357 515.41296387]
[224.48394775 526.88830566]
[232.39904785 531.43414307]
[234.19856262 538.59716797]
[243.69375610 550.20935059]
[253.18893433 561.82147217]
[262.68411255 573.43359375]
[278.43936157 576.45880127]
[285.76950073 590.72937012]
[279.05145264 605.29809570]
[263.43878174 608.98907471]
[250.90814209 598.97094727]
[251.07200623 582.92877197]
[241.57681274 571.31665039]
[232.08163452 559.70452881]
[222.58644104 548.09240723]
[213.00859070 536.54833984]
[203.34855652 525.07299805]
[193.68852234 513.59765625]
[184.02848816 502.12228394]
[180.76611328 503.31524658]
[177.37667847 504.07543945]
[175.45417786 518.95172119]
[173.53169250 533.82800293]
[171.60919189 548.70428467]
[169.68670654 563.58062744]
[167.76420593 578.45690918]
[165.84172058 593.33319092]
[163.91921997 608.20947266]
[161.99673462 623.08575439]
[167.90150452 637.76379395]
[158.59680176 649.39440918]
[171.41426086 657.68151855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 218]
[13 216]
[14 215]
[15 214]
[16 213]
[17 212]
[18 211]
[19 210]
[20 209]
[21 208]
[25 182]
[26 181]
[27 180]
[28 179]
[29 178]
[30 177]
[31 176]
[33 174]
[34 173]
[35 171]
[36 170]
[37 169]
[39 168]
[40 167]
[41 166]
[42 165]
[43 163]
[45 161]
[46 160]
[47 159]
[48 158]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[72 99]
[73 98]
[74 97]
[75 96]
[78 93]
[79 92]
[82 89]
[83 88]
[107 151]
[108 150]
[109 149]
[110 148]
[111 147]
[112 146]
[113 145]
[114 144]
[115 143]
[119 135]
[120 134]
[121 133]
[122 132]
[185 206]
[186 205]
[187 204]
[188 203]
[190 202]
[191 201]
[192 200]
[193 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
