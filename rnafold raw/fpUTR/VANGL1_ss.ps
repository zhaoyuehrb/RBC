%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGCGGAAAGCAGCAGUGCAGCGGCGGCGGCGGCGGGGCUCUGCCUCUCCAGGAGCCCAGCGCAGGCCGCAGAGCCGGGGCCGCUGUGAGCCGAGACCGCGGGCCGCGGAGCUCGGGCGGCCGGCGCGGAGAAUUUGUUCCUGUUGAAGAGUGGCUCCUCUUCUAAUUUCCAGACUCCUUGAGGUUUUAGGAGUCUGGUAGGUGAAAUUUUCUACCUCUAAGGAGAAACAGUACCUGCUCCUUCCUCAAGCG\
CAAGCCCUCCAUUGCU\
) } def
/len { sequence length } bind def

/coor [
[100.75730896 481.51818848]
[109.00181580 494.04928589]
[106.07590485 508.76113892]
[93.66403961 517.18408203]
[78.91182709 514.46893311]
[70.31195068 502.17764282]
[66.87769318 516.77923584]
[74.06678009 531.12133789]
[67.20545959 545.62310791]
[51.55714035 549.16003418]
[39.12588501 539.01885986]
[39.44787979 522.97906494]
[52.27612305 513.34497070]
[55.71038055 498.74337769]
[58.63673401 484.03161621]
[61.05167389 469.22729492]
[63.46661377 454.42294312]
[65.88155365 439.61862183]
[68.29648590 424.81430054]
[70.71142578 410.00997925]
[73.12636566 395.20565796]
[67.53903961 381.39874268]
[77.39717865 369.02426147]
[79.81211090 354.21994019]
[77.79480743 347.13845825]
[82.34138489 339.25897217]
[84.92714691 324.48352051]
[87.51290894 309.70806885]
[80.61994934 293.55267334]
[92.60110474 279.54724121]
[95.01604462 264.74291992]
[97.43098450 249.93858337]
[91.19496155 245.77180481]
[78.72291565 237.43824768]
[72.48689270 233.27146912]
[59.73363876 241.16795349]
[52.07365799 255.01119995]
[37.17955017 255.13285828]
[24.42629433 263.02932739]
[11.67303658 270.92581177]
[-1.08022022 278.82229614]
[-13.83347702 286.71878052]
[-24.11719131 300.19772339]
[-39.91617584 294.04724121]
[-38.37965012 277.16305542]
[-21.72995949 273.96551514]
[-8.97670269 266.06903076]
[3.77655435 258.17257690]
[16.52981186 250.27607727]
[29.28306770 242.37959290]
[36.03084946 229.10116577]
[51.83715439 228.41470337]
[64.59041595 220.51821899]
[73.83595276 208.70635986]
[78.43824005 194.42984009]
[83.04052734 180.15332031]
[87.64281464 165.87680054]
[92.24510193 151.60028076]
[96.84738922 137.32377625]
[72.73890686 134.74647522]
[51.78370285 116.22159576]
[44.30362320 85.39465332]
[56.96892166 52.23846436]
[45.10386658 43.06129456]
[33.23881149 33.88412476]
[21.37375450 24.70695686]
[5.72399807 22.38408852]
[0.39044604 8.47716618]
[-11.47461033 -0.70000374]
[-23.33966637 -9.87717342]
[-35.20472336 -19.05434227]
[-47.06977844 -28.23151207]
[-58.93483353 -37.40868378]
[-77.24951935 -39.47578812]
[-83.23052216 -55.99055099]
[-95.20078278 -65.03006744]
[-107.17103577 -74.06958771]
[-119.14129639 -83.10910797]
[-131.21516418 -92.00977325]
[-143.39102173 -100.77039337]
[-155.61726379 -109.46055603]
[-167.89349365 -118.07996368]
[-183.63383484 -119.67758942]
[-189.60395813 -133.32334900]
[-201.88018799 -141.94276428]
[-214.15641785 -150.56216431]
[-226.43264771 -159.18157959]
[-242.17298889 -160.77920532]
[-248.14311218 -174.42497253]
[-260.41934204 -183.04437256]
[-275.05325317 -177.88415527]
[-289.91583252 -182.34329224]
[-299.29205322 -194.70718384]
[-299.57662964 -210.22164917]
[-290.66009521 -222.92106628]
[-275.97103882 -227.92224121]
[-261.15774536 -223.30212402]
[-251.91618347 -210.83724976]
[-251.79994202 -195.32060242]
[-239.52371216 -186.70120239]
[-224.66145325 -185.72007751]
[-217.81324768 -171.45780945]
[-205.53701782 -162.83839417]
[-193.26078796 -154.21899414]
[-180.98455811 -145.59957886]
[-166.12229919 -144.61846924]
[-159.27409363 -130.35618591]
[-146.99786377 -121.73678589]
[-139.74447632 -120.46981049]
[-134.63040161 -112.94625092]
[-122.45454407 -104.18563080]
[-117.71368408 -104.04862976]
[-113.00031281 -100.95618439]
[-110.10177612 -95.07936859]
[-98.13152313 -86.03984833]
[-86.16126251 -77.00032806]
[-74.19100189 -67.96080780]
[-62.19460678 -69.32468414]
[-52.15386963 -61.92308426]
[-49.75766373 -49.27373886]
[-37.89260864 -40.09656906]
[-26.02755165 -30.91939926]
[-14.16249657 -21.74222946]
[-2.29744029 -12.56505966]
[9.56761551 -3.38789010]
[24.36870384 -1.72143471]
[30.55092430 12.84189987]
[42.41598129 22.01906967]
[54.28103638 31.19623947]
[66.14609528 40.37340927]
[79.72439575 33.99926376]
[80.24404144 19.00826645]
[80.76367950 4.01727104]
[81.28332520 -10.97372532]
[70.31996155 -22.35705185]
[70.70044708 -38.15676117]
[82.19905090 -48.99916458]
[97.99385071 -48.45165634]
[108.71407318 -36.83906174]
[107.99960327 -21.05093193]
[96.27432251 -10.45408058]
[95.75467682 4.53691578]
[95.23503113 19.52791214]
[94.71538544 34.51890945]
[101.95230865 36.48792648]
[105.89058685 22.01416016]
[120.36428833 25.95267868]
[116.42613983 40.42596817]
[123.66305542 42.39498520]
[130.81028748 29.20722198]
[137.95751953 16.01945877]
[145.10473633 2.83169436]
[152.25196838 -10.35606956]
[159.39920044 -23.54383278]
[154.65917969 -38.62056351]
[162.04231262 -52.59428406]
[177.16831970 -57.17463684]
[191.06320190 -49.64418030]
[195.48336792 -34.47059631]
[187.80642700 -20.65610886]
[172.58695984 -16.39660454]
[165.43974304 -3.20884061]
[158.29251099 9.97892284]
[151.14527893 23.16668701]
[143.99804688 36.35445023]
[136.85081482 49.54221344]
[141.87144470 55.11386871]
[153.01475525 45.07262039]
[164.15823364 35.03155518]
[174.19911194 46.17519379]
[163.05599976 56.21592712]
[151.91268921 66.25717926]
[156.93331909 71.82882690]
[170.79151917 66.08857727]
[184.64970398 60.34832764]
[198.50790405 54.60807419]
[212.36608887 48.86782455]
[226.22428894 43.12757111]
[240.08247375 37.38732147]
[253.94067383 31.64706993]
[267.79885864 25.90681839]
[281.65704346 20.16656685]
[284.29498291 4.96640491]
[294.74877930 -6.37914467]
[309.68270874 -10.24975777]
[324.33135986 -5.41033745]
[334.02044678 6.59487629]
[335.65820312 21.93506241]
[328.72201538 35.71522522]
[315.42520142 43.53816223]
[300.01074219 42.90760422]
[287.39730835 34.02476120]
[273.53912354 39.76501083]
[259.68090820 45.50526428]
[245.82272339 51.24551392]
[231.96453857 56.98576355]
[218.10633850 62.72601700]
[204.24815369 68.46627045]
[190.38995361 74.20652008]
[176.53176880 79.94676971]
[162.67356873 85.68701935]
[149.87918091 110.00093842]
[130.47904968 121.77223969]
[144.33723450 127.51248932]
[158.19543457 133.25274658]
[172.05361938 138.99299622]
[185.91181946 144.73324585]
[197.07702637 136.68589783]
[210.65182495 135.20858765]
[223.08816528 140.58012390]
[231.18847656 151.30313110]
[232.92759705 164.51976013]
[246.71856689 170.41969299]
[260.50955200 176.31961060]
[274.30050659 182.21954346]
[288.09149170 188.11947632]
[297.17526245 188.61184692]
[302.00704956 194.16799927]
[315.72894287 200.22682190]
[329.45086670 206.28562927]
[346.38262939 207.15223694]
[350.23709106 223.66221619]
[335.43933105 231.93646240]
[323.39202881 220.00753784]
[309.67013550 213.94873047]
[295.94821167 207.88990784]
[282.19155884 201.91044617]
[268.40057373 196.01051331]
[254.60961914 190.11059570]
[240.81864929 184.21066284]
[227.02767944 178.31072998]
[213.19128418 187.17521667]
[196.63261414 186.02099609]
[183.90716553 175.10594177]
[180.17156982 158.59144592]
[166.31336975 152.85118103]
[152.45518494 147.11093140]
[138.59698486 141.37068176]
[124.73879242 135.63043213]
[111.12390900 141.92605591]
[106.52162170 156.20257568]
[101.91933441 170.47909546]
[97.31704712 184.75561523]
[92.71475220 199.03211975]
[88.11246490 213.30863953]
[96.19109344 200.66998291]
[109.37487030 193.51539612]
[124.37442780 193.62997437]
[137.44737244 200.98510742]
[145.33198547 213.74571228]
[146.06105042 228.72798157]
[139.45266724 242.19383240]
[127.15563202 250.78352356]
[112.23531342 252.35351562]
[109.82037354 267.15783691]
[107.40543365 281.96215820]
[114.28258514 292.84576416]
[111.99028015 305.10729980]
[102.28836060 312.29385376]
[99.70259857 327.06927490]
[97.11682892 341.84472656]
[94.61643982 356.63485718]
[92.20149994 371.43917847]
[97.61609650 386.30502319]
[87.93069458 397.62057495]
[85.51575470 412.42492676]
[83.10081482 427.22924805]
[80.68587494 442.03356934]
[78.27093506 456.83789062]
[75.85600281 471.64221191]
[73.44106293 486.44653320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 14]
[7 13]
[15 271]
[16 270]
[17 269]
[18 268]
[19 267]
[20 266]
[21 265]
[23 263]
[24 262]
[26 261]
[27 260]
[28 259]
[30 256]
[31 255]
[32 254]
[35 53]
[36 52]
[38 50]
[39 49]
[40 48]
[41 47]
[42 46]
[54 245]
[55 244]
[56 243]
[57 242]
[58 241]
[59 240]
[63 130]
[64 129]
[65 128]
[66 127]
[68 125]
[69 124]
[70 123]
[71 122]
[72 121]
[73 120]
[75 117]
[76 116]
[77 115]
[78 114]
[79 111]
[80 110]
[81 108]
[82 107]
[84 105]
[85 104]
[86 103]
[87 102]
[89 100]
[90 99]
[131 144]
[132 143]
[133 142]
[134 141]
[149 166]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[173 201]
[174 200]
[175 199]
[176 198]
[177 197]
[178 196]
[179 195]
[180 194]
[181 193]
[182 192]
[203 239]
[204 238]
[205 237]
[206 236]
[207 235]
[212 231]
[213 230]
[214 229]
[215 228]
[216 227]
[218 226]
[219 225]
[220 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
