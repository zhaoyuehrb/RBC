%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGACGCUCCCUCAGCAAGGACAGCAGAGGACCAGCUAAGAGGGAGAGAAGCAACUACAGACCCCCCCUGAAAACAACCCUCAGACGCCACAUCCCCUGACAAGCUGCCAGGCAGGUUCUCUUCCUCUCACAUACUGACCCACGGCUCCACCCUCUCUCCCCUGGAAAGGACACC\
) } def
/len { sequence length } bind def

/coor [
[110.37447357 741.24481201]
[95.29441833 742.96423340]
[80.61255646 739.11621094]
[68.31448364 730.22113037]
[60.06341553 717.48205566]
[56.97524261 702.62176514]
[59.46761703 687.65002441]
[67.20346069 674.59167480]
[79.13656616 665.21270752]
[93.65308380 660.78149414]
[94.72316742 645.81976318]
[95.79325867 630.85797119]
[84.29860687 621.42340088]
[80.51881409 606.85711670]
[86.10628510 592.69256592]
[99.11322784 584.43872070]
[100.18331146 569.47698975]
[97.51554108 562.55841064]
[101.40837097 554.25842285]
[102.74534607 539.31811523]
[93.02661133 528.08953857]
[94.16965485 512.91888428]
[106.01316071 502.80111694]
[107.35012817 487.86083984]
[104.80627441 480.89578247]
[108.84663391 472.66659546]
[110.45005798 457.75256348]
[112.05348206 442.83850098]
[113.65691376 427.92443848]
[115.26033783 413.01037598]
[102.74750519 402.40753174]
[98.97092438 386.27679443]
[105.60819244 370.91650391]
[120.23064423 362.44549561]
[121.56761169 347.50518799]
[122.90458679 332.56491089]
[124.24155426 317.62460327]
[119.93987274 309.05389404]
[123.57192230 298.87530518]
[121.17253113 284.06845093]
[118.77313995 269.26159668]
[116.37374115 254.45474243]
[113.97434998 239.64788818]
[111.57495880 224.84103394]
[109.17556763 210.03417969]
[106.77617645 195.22732544]
[104.37677765 180.42047119]
[101.97738647 165.61361694]
[99.57799530 150.80676270]
[97.17860413 135.99990845]
[87.50508118 124.67417908]
[92.93528748 109.81404877]
[90.60661316 124.63218689]
[83.22244263 137.68875122]
[71.72339630 147.32057190]
[57.57424927 152.30070496]
[42.57736969 151.99476624]
[28.64310074 146.44174194]
[17.54643250 136.34896851]
[10.70088863 123.00212097]
[8.97847557 108.10134125]
[12.59860134 93.54473114]
[21.10012054 81.18657684]
[33.40008926 72.60107422]
[47.93169403 68.88188171]
[62.84386444 70.50275421]
[76.23703766 77.25722504]
[86.40388489 88.28289032]
[80.17265320 74.63841248]
[73.94142914 60.99392700]
[67.71020508 47.34944916]
[52.42557526 45.25573730]
[40.71413422 35.21353912]
[36.31296158 20.42728996]
[40.62645340 5.61522245]
[52.27819061 -4.49618387]
[67.55014801 -6.68041706]
[81.56909943 -0.24049555]
[89.86164856 12.76862431]
[89.78166962 28.19578171]
[81.35468292 41.11822510]
[87.58591461 54.76270294]
[93.81713867 68.40718079]
[100.04836273 82.05166626]
[107.52925110 82.58670807]
[108.59934235 67.62492371]
[109.66942596 52.66314316]
[110.73951721 37.70136261]
[107.13396454 23.14114189]
[119.86748505 15.21286392]
[131.34246826 24.87332726]
[125.70129395 38.77145004]
[124.63121033 53.73323059]
[123.56111908 68.69501495]
[122.49103546 83.65679169]
[129.97192383 84.19184113]
[138.08154297 71.57303619]
[146.19114685 58.95423126]
[154.30076599 46.33543015]
[155.25267029 30.54288673]
[168.64257812 24.01912308]
[176.75219727 11.40032101]
[180.22897339 -5.19330311]
[197.13658142 -6.44597244]
[203.02078247 9.45410538]
[189.37100220 19.50993347]
[181.26138306 32.12873459]
[180.88952637 47.01869965]
[166.91957092 54.44504166]
[158.80995178 67.06384277]
[150.70034790 79.68264771]
[142.59072876 92.30145264]
[132.13055420 104.37664795]
[119.42977142 109.37577820]
[107.74214172 107.41464996]
[117.58728027 119.79947662]
[111.98545837 133.60052490]
[114.38484955 148.40737915]
[116.78424072 163.21423340]
[119.18363190 178.02108765]
[121.58303070 192.82792664]
[123.98242188 207.63478088]
[126.38181305 222.44163513]
[128.78120422 237.24848938]
[131.18060303 252.05534363]
[133.57998657 266.86221313]
[135.97938538 281.66906738]
[138.37876892 296.47592163]
[144.42250061 282.74734497]
[154.90246582 272.01562500]
[168.48371887 265.64773560]
[183.43620300 264.45486450]
[197.85525513 268.58898926]
[209.90412903 277.52343750]
[218.04800415 290.12017822]
[221.24948120 304.77453613]
[219.10075378 319.61984253]
[211.87553406 332.76504517]
[200.49418640 342.53564453]
[186.40649414 347.68707275]
[171.40701294 347.56311035]
[157.40640259 342.17953491]
[146.18809509 332.22213745]
[139.18185425 318.96157837]
[137.84487915 333.90188599]
[136.50791931 348.84216309]
[135.17094421 363.78247070]
[146.21397400 372.06176758]
[151.67298889 384.62023926]
[150.21707153 398.12731934]
[142.33393860 409.05819702]
[130.17439270 414.61380005]
[128.57096863 429.52786255]
[126.96753693 444.44192505]
[125.36411285 459.35598755]
[123.76068878 474.27001953]
[122.29042816 489.19781494]
[120.95346069 504.13809204]
[130.81233215 516.19793701]
[129.24363708 531.33050537]
[117.68563843 540.65509033]
[116.34867096 555.59539795]
[115.14509583 570.54705811]
[114.07500458 585.50885010]
[125.77490997 595.52972412]
[129.28968811 610.34527588]
[123.47537231 624.22534180]
[110.75503540 631.92803955]
[109.68495178 646.88983154]
[108.61486053 661.85162354]
[122.35299683 668.30358887]
[132.82987976 679.28540039]
[138.62858582 693.31176758]
[138.96488953 708.48577881]
[133.79330444 722.75531006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 170]
[11 169]
[12 168]
[16 164]
[17 163]
[19 162]
[20 161]
[23 158]
[24 157]
[26 156]
[27 155]
[28 154]
[29 153]
[30 152]
[34 147]
[35 146]
[36 145]
[37 144]
[39 128]
[40 127]
[41 126]
[42 125]
[43 124]
[44 123]
[45 122]
[46 121]
[47 120]
[48 119]
[49 118]
[50 117]
[52 115]
[68 84]
[69 83]
[70 82]
[71 81]
[96 112]
[97 111]
[98 110]
[99 109]
[101 107]
[102 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
