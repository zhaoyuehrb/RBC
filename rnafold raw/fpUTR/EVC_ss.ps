%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCCGGCUCGGCGAAGCAGGGAAGGGGAGAGAAGCAGGAGUCGGGAGACUGCACAGGCCAGAAAGUCUGCGGAGCGGGCCGCGCCCCUGGCCCGCCCGGGCUCCAAGUCCCGCGUCGCCGCCCUGGCGGGGACGGUGCAGCAGGCGGCGGGAUGCGGCGGGGCGGCAGCCUGAGCGCCCCGG\
) } def
/len { sequence length } bind def

/coor [
[434.14471436 388.15951538]
[422.55459595 378.63745117]
[410.96450806 369.11541748]
[396.21881104 367.01449585]
[390.46743774 352.27569580]
[378.87734985 342.75363159]
[367.28723145 333.23159790]
[355.69711304 323.70953369]
[340.94467163 325.41265869]
[329.05502319 315.92105103]
[327.36865234 300.43579102]
[315.77853394 290.91372681]
[304.18841553 281.39169312]
[292.59832764 271.86962891]
[281.00820923 262.34756470]
[269.41812134 252.82553101]
[254.67242432 250.72462463]
[248.92105103 235.98580933]
[237.33094788 226.46376038]
[230.15034485 224.64285278]
[225.62667847 216.68028259]
[214.19993591 206.96279907]
[202.77319336 197.24531555]
[191.34645081 187.52783203]
[176.93869019 191.20945740]
[162.96038818 185.63531494]
[154.84983826 172.74839783]
[155.89476013 157.37913513]
[144.46801758 147.66165161]
[133.04127502 137.94415283]
[121.61453247 128.22666931]
[113.87644958 132.73190308]
[105.25814819 135.16084290]
[96.30630493 135.35943604]
[87.58876038 133.31507874]
[79.65850067 129.15744019]
[73.01856232 123.15026855]
[68.09013367 115.67461395]
[65.18583679 107.20466614]
[51.32046890 114.82450867]
[38.65935135 106.97942352]
[23.65989113 106.85206604]
[8.66043186 106.72470856]
[-6.33902740 106.59734344]
[-20.33588982 115.14251709]
[-34.60318756 107.05695343]
[-34.46394730 90.65840149]
[-20.06140709 82.81627655]
[-6.21166706 91.59788513]
[8.78779221 91.72525024]
[23.78725243 91.85260773]
[38.78671265 91.97996521]
[51.57921982 84.35101318]
[65.31320190 92.20520782]
[63.46865463 87.75639343]
[62.19966888 82.85902405]
[49.70115280 74.56522369]
[37.20264053 66.27142334]
[24.70412445 57.97762299]
[12.20560837 49.68382263]
[-3.23348331 53.06169128]
[-16.49381256 44.46290207]
[-19.70826149 28.98895836]
[-10.96975422 15.82028198]
[4.53730774 12.76961327]
[17.61285973 21.64685822]
[20.49940872 37.18530655]
[32.99792480 45.47910690]
[45.49643707 53.77290726]
[57.99495316 62.06670761]
[70.49346924 70.36050415]
[82.84934998 61.85566711]
[79.56477356 47.21969986]
[76.28019714 32.58373260]
[71.33698273 24.87460899]
[73.06633759 17.67140007]
[70.03076935 2.98176837]
[66.99519348 -11.70786381]
[63.95962143 -26.39749527]
[60.92404556 -41.08712769]
[57.88847351 -55.77676010]
[54.85290146 -70.46639252]
[51.81732559 -85.15602112]
[38.47563934 -93.62803650]
[35.11384583 -109.07063293]
[43.72643661 -122.32200623]
[59.20371628 -125.52033997]
[72.36328888 -116.76812744]
[75.39781189 -101.25790405]
[66.50695801 -88.19159698]
[69.54253387 -73.50196838]
[72.57810211 -58.81233215]
[75.61367798 -44.12269974]
[78.64925385 -29.43306923]
[81.68482208 -14.74343681]
[84.72039795 -0.05380502]
[87.75597382 14.63582706]
[90.91616058 29.29915619]
[94.20073700 43.93512344]
[97.48531342 58.57109070]
[123.83054352 68.47235870]
[136.66653442 91.96652222]
[131.33201599 116.79992676]
[142.75875854 126.51741791]
[154.18550110 136.23490906]
[165.61224365 145.95239258]
[180.61410522 142.45233154]
[194.63644409 148.38758850]
[202.38349915 161.28903198]
[201.06393433 176.10108948]
[212.49067688 185.81857300]
[223.91741943 195.53605652]
[235.34416199 205.25354004]
[246.85299683 214.87365723]
[258.44311523 224.39570618]
[274.01779175 227.17770386]
[278.94015503 241.23542786]
[290.53027344 250.75747681]
[302.12036133 260.27951050]
[313.71047974 269.80157471]
[325.30059814 279.32363892]
[336.89068604 288.84567261]
[352.40887451 287.49508667]
[364.02722168 297.31689453]
[365.21917725 312.11944580]
[376.80929565 321.64147949]
[388.39938354 331.16354370]
[399.98950195 340.68557739]
[415.56417847 343.46759033]
[420.48654175 357.52529907]
[432.07666016 367.04736328]
[443.66674805 376.56939697]
[459.18493652 375.21881104]
[470.80331421 385.04064941]
[471.99523926 399.84317017]
[483.58535767 409.36520386]
[495.17547607 418.88726807]
[493.79632568 403.95080566]
[502.22283936 391.54135132]
[516.61486816 387.31414795]
[530.41375732 393.19555664]
[537.33111572 406.50534058]
[534.21453857 421.17800903]
[522.48437500 430.52697754]
[507.48678589 430.29199219]
[517.86584473 441.12133789]
[528.24493408 451.95065308]
[538.62402344 462.77999878]
[556.41247559 467.49850464]
[559.94903564 484.67752075]
[570.51049805 495.32904053]
[581.07196045 505.98059082]
[591.63342285 516.63214111]
[606.84442139 520.98382568]
[610.31140137 535.46929932]
[620.87286377 546.12084961]
[631.43432617 556.77239990]
[646.64526367 561.12408447]
[650.11224365 575.60961914]
[660.67376709 586.26110840]
[676.11956787 593.25134277]
[673.67840576 610.02856445]
[656.88098145 612.32720947]
[650.02221680 596.82263184]
[639.46075439 586.17108154]
[625.00518799 582.58123779]
[620.78277588 567.33386230]
[610.22131348 556.68231201]
[599.65985107 546.03082275]
[585.20428467 542.44097900]
[580.98193359 527.19360352]
[570.42041016 516.54205322]
[559.85894775 505.89053345]
[549.29748535 495.23898315]
[537.19226074 494.86965942]
[528.30535889 486.06210327]
[527.79467773 473.15908813]
[517.41558838 462.32974243]
[507.03652954 451.50039673]
[496.65744019 440.67108154]
[485.65341187 430.47738647]
[474.06329346 420.95532227]
[462.47320557 411.43325806]
[447.72073364 413.13641357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 132]
[2 131]
[3 130]
[5 128]
[6 127]
[7 126]
[8 125]
[11 122]
[12 121]
[13 120]
[14 119]
[15 118]
[16 117]
[18 115]
[19 114]
[21 113]
[22 112]
[23 111]
[24 110]
[28 106]
[29 105]
[30 104]
[31 103]
[39 54]
[41 52]
[42 51]
[43 50]
[44 49]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[72 100]
[73 99]
[74 98]
[76 97]
[77 96]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[135 183]
[136 182]
[137 181]
[145 180]
[146 179]
[147 178]
[148 177]
[150 174]
[151 173]
[152 172]
[153 171]
[155 169]
[156 168]
[157 167]
[159 165]
[160 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
