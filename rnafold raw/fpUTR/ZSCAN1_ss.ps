%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGGGGAUGGGGUCCGCCCGCGGCGUUGGGCGCGCUCGCCAGCCCAGGGGUCGCCAUGACCGAGUGGCCCAGGCCCGAGCGAAGCCCGCGCGCGGUCACAUGGGAGCCCGACACCAUUUGGAGGAGAUUCAGAGAAGCCCCUGAUUGCUGAUUCUGUCCGCCUGCCACACCGGCUCUGUCCGGAGCCACUGGGACUCGGGAUCCAGUCCACACACACCCCUCAGAGGGGCACUGUGGCCAGAGAA\
) } def
/len { sequence length } bind def

/coor [
[242.91143799 259.26449585]
[239.59793091 244.63504028]
[244.63427734 230.50581360]
[256.45428467 221.27070618]
[271.38409424 219.80200195]
[256.49041748 219.63594055]
[248.87173462 205.76992798]
[236.14205933 197.83547974]
[223.41239929 189.90101624]
[210.68273926 181.96655273]
[197.95306396 174.03208923]
[185.22340393 166.09762573]
[172.49374390 158.16317749]
[159.76408386 150.22871399]
[147.03440857 142.29425049]
[134.30474854 134.35978699]
[119.41107178 134.19374084]
[111.79238892 120.32772827]
[99.06272888 112.39326477]
[84.47275543 108.91006470]
[69.53168488 110.23843384]
[54.59062195 111.56680298]
[39.64955521 112.89517212]
[24.70849037 114.22353363]
[16.46125412 118.09239197]
[9.56993961 115.47286987]
[-5.38675404 116.61186981]
[-20.34344673 117.75086212]
[-28.63903046 121.51493835]
[-35.49660873 118.80833435]
[-50.46652985 119.75777435]
[-65.43645477 120.70722198]
[-80.40637207 121.65666199]
[-95.51309204 132.20562744]
[-110.91563416 123.77412415]
[-125.87232971 124.91311646]
[-140.82902527 126.05211639]
[-155.78572083 127.19110870]
[-170.74241638 128.33010864]
[-185.69909668 129.46910095]
[-192.27476501 138.09495544]
[-202.30084229 141.61827087]
[-212.40139771 139.10775757]
[-219.31347656 131.62236023]
[-234.29421997 132.38209534]
[-249.27496338 133.14183044]
[-256.06701660 141.59834290]
[-266.17913818 144.86653137]
[-276.21286011 142.10095215]
[-282.93310547 134.44285583]
[-297.92828369 134.82284546]
[-312.92346191 135.20283508]
[-327.91867065 135.58282471]
[-342.91384888 135.96281433]
[-357.90902710 136.34280396]
[-372.90420532 136.72279358]
[-387.89669800 137.19775391]
[-398.45416260 148.95851135]
[-414.23980713 149.72590637]
[-425.88827515 139.04469299]
[-426.48876953 123.25180817]
[-415.68496704 111.71691132]
[-399.88662720 111.28345490]
[-388.46661377 122.20858765]
[-381.91802979 118.82209778]
[-373.28421021 121.72760773]
[-358.28903198 121.34761810]
[-343.29382324 120.96762848]
[-328.29864502 120.58763885]
[-313.30346680 120.20764923]
[-298.30828857 119.82765961]
[-283.31307983 119.44766235]
[-267.57357788 108.19185638]
[-250.03469849 118.16108704]
[-235.05395508 117.40134430]
[-220.07321167 116.64160919]
[-204.62388611 104.99068451]
[-186.83810425 114.51241302]
[-171.88140869 113.37341309]
[-156.92471313 112.23442078]
[-141.96801758 111.09542084]
[-127.01132202 109.95642853]
[-112.05463409 108.81742859]
[-103.95336151 99.85483551]
[-91.51875305 98.77040863]
[-81.35581970 106.68674469]
[-66.38589478 105.73729706]
[-51.41597366 104.78785706]
[-36.44605255 103.83840942]
[-21.48244476 102.79417419]
[-6.52575064 101.65517426]
[8.43094349 100.51617432]
[23.38012314 99.28247070]
[38.32118988 97.95410156]
[53.26225281 96.62573242]
[68.20331573 95.29737091]
[83.14438629 93.96900177]
[91.23945618 81.34086609]
[86.20848083 67.20972443]
[81.17750549 53.07857895]
[69.25981903 42.67284012]
[72.28023529 28.08769989]
[67.24925995 13.95655441]
[62.21828079 -0.17459048]
[57.18730545 -14.30573559]
[42.06660843 -17.00020409]
[30.32928085 -26.90629768]
[25.13260269 -41.35932922]
[27.87445450 -56.47150421]
[37.81729126 -68.17772675]
[52.28654099 -73.32907104]
[67.39004517 -70.53986359]
[79.06504059 -60.56038666]
[84.17101288 -46.07506180]
[81.33448029 -30.98037148]
[71.31845093 -19.33671379]
[76.34942627 -5.20556831]
[81.38040161 8.92557621]
[86.41138458 23.05672073]
[97.96921539 32.45170593]
[95.30864716 48.04759979]
[100.33963013 62.17874527]
[105.37060547 76.30989075]
[112.87000275 76.40489197]
[113.06001282 61.40609741]
[108.60601807 47.08262253]
[120.85220337 38.42057800]
[132.87446594 47.39082336]
[128.05880737 61.59610748]
[127.86879730 76.59490204]
[135.36819458 76.68991089]
[140.75553894 62.69075012]
[146.14288330 48.69158554]
[151.53022766 34.69242477]
[142.97734070 21.74531746]
[143.70164490 6.24515629]
[153.42465210 -5.84792995]
[168.40766907 -9.88390255]
[182.88940430 -4.31084824]
[191.30134583 8.72828007]
[190.40892029 24.21967125]
[180.55529785 36.20656967]
[165.52938843 40.07976913]
[160.14204407 54.07892990]
[154.75469971 68.07809448]
[149.36735535 82.07725525]
[136.20416260 90.82568359]
[121.93408203 96.72737885]
[106.99718475 99.66360474]
[119.72685242 107.59806061]
[135.53103638 108.33164215]
[142.23921204 121.63012695]
[154.96887207 129.56459045]
[167.69854736 137.49905396]
[180.42820740 145.43350220]
[193.15786743 153.36796570]
[205.88752747 161.30242920]
[218.61720276 169.23689270]
[231.34686279 177.17134094]
[244.07652283 185.10580444]
[256.80618286 193.04026794]
[272.61038208 193.77384949]
[279.31854248 207.07232666]
[292.47958374 214.26864624]
[306.02926636 220.70343018]
[319.57891846 227.13822937]
[333.16906738 233.48706055]
[346.79916382 239.74969482]
[360.42926025 246.01232910]
[374.05935669 252.27496338]
[387.68945312 258.53759766]
[400.99337769 239.63038635]
[428.30612183 232.27386475]
[459.08853149 245.62428284]
[473.99114990 243.91784668]
[488.89376831 242.21141052]
[503.79638672 240.50497437]
[518.69903564 238.79853821]
[533.60162354 237.09208679]
[546.44946289 226.90063477]
[561.59783936 233.18222046]
[563.46343994 249.47489929]
[550.12707520 259.01815796]
[535.30810547 251.99470520]
[520.40545654 253.70115662]
[505.50283813 255.40759277]
[490.60021973 257.11401367]
[475.69760132 258.82046509]
[460.79498291 260.52691650]
[459.61233521 267.93307495]
[457.24703979 282.74542236]
[456.06442261 290.15158081]
[469.69451904 296.41421509]
[483.36398315 302.59039307]
[497.07232666 308.67987061]
[510.78063965 314.76934814]
[524.48895264 320.85882568]
[538.19732666 326.94830322]
[547.28582764 327.56799316]
[552.03997803 333.20272827]
[565.67004395 339.46536255]
[582.58703613 340.58419800]
[586.19500732 357.14978027]
[571.27557373 365.20257568]
[559.40740967 353.09545898]
[545.77734375 346.83279419]
[532.10784912 340.65661621]
[518.39947510 334.56716919]
[504.69116211 328.47769165]
[490.98284912 322.38821411]
[477.27450562 316.29873657]
[469.90377808 316.45516968]
[463.43188477 310.04431152]
[449.80178833 303.78167725]
[444.91647339 309.47235107]
[456.29769897 319.24313354]
[446.52673340 330.62417603]
[435.14590454 320.85372925]
[430.26058960 326.54443359]
[438.51498413 339.06900024]
[446.76937866 351.59356689]
[455.02377319 364.11816406]
[463.27816772 376.64273071]
[477.04284668 386.54071045]
[471.34213257 402.50747681]
[454.42123413 401.44961548]
[450.75360107 384.89712524]
[442.49920654 372.37255859]
[434.24481201 359.84796143]
[425.99041748 347.32339478]
[417.73602295 334.79882812]
[393.79367065 325.23983765]
[379.26272583 307.66882324]
[375.69259644 288.13537598]
[381.42681885 272.16769409]
[367.79672241 265.90505981]
[354.16662598 259.64242554]
[340.53652954 253.37979126]
[326.90643311 247.11715698]
[319.53433228 247.18022156]
[313.14413452 240.68789673]
[299.59448242 234.25309753]
[286.04479980 227.81831360]
[292.86517334 241.17805481]
[291.47033691 256.11306763]
[282.29412842 267.97885132]
[268.19012451 273.08541870]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 163]
[7 161]
[8 160]
[9 159]
[10 158]
[11 157]
[12 156]
[13 155]
[14 154]
[15 153]
[16 152]
[18 150]
[19 149]
[20 97]
[21 96]
[22 95]
[23 94]
[24 93]
[26 92]
[27 91]
[28 90]
[30 89]
[31 88]
[32 87]
[33 86]
[35 83]
[36 82]
[37 81]
[38 80]
[39 79]
[40 78]
[44 76]
[45 75]
[46 74]
[50 72]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[56 66]
[57 64]
[98 123]
[99 122]
[100 121]
[102 119]
[103 118]
[104 117]
[105 116]
[131 146]
[132 145]
[133 144]
[134 143]
[164 243]
[165 242]
[166 241]
[167 239]
[168 238]
[169 237]
[170 236]
[171 235]
[174 189]
[175 188]
[176 187]
[177 186]
[178 185]
[179 184]
[192 214]
[193 213]
[194 211]
[195 210]
[196 209]
[197 208]
[198 207]
[200 206]
[201 205]
[219 231]
[220 230]
[221 229]
[222 228]
[223 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
