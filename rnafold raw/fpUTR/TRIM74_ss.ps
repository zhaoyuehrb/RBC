%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCAUGAUGGGGCAUGUGCGGGAGCGCCAGGCGGGGCAUGUAACCAGAGCGUGCGGGGCAUGAUGGGGCACGGACAUGGGGGGUUAGGUGGGGCACGUAAUUGGAGCUCGCGGGGCAGGAUGGGGCAUCUAACUGGAGCGACAGAGAGCACGAUGGGGCACUUACAGGGGCCGGAGGCUGGCCCGGGCAGUGAGUGUGG\
) } def
/len { sequence length } bind def

/coor [
[99.60398865 162.99610901]
[101.49813843 148.11683655]
[94.12966919 149.51528931]
[89.29420471 163.71452332]
[84.45874023 177.91375732]
[79.62327576 192.11299133]
[74.78781128 206.31222534]
[81.98803711 220.38107300]
[77.05175781 235.39468384]
[62.90757370 242.44577026]
[47.94698715 237.35102844]
[41.04584503 223.13308716]
[46.29846954 208.22720337]
[60.58857727 201.47676086]
[65.42404175 187.27752686]
[70.25950623 173.07829285]
[75.09497070 158.87905884]
[79.93043518 144.67982483]
[59.20265961 117.93915558]
[61.88539886 87.36563110]
[48.77938461 80.06957245]
[32.95825195 80.11746216]
[25.60144997 67.16652679]
[12.49543762 59.87047577]
[-0.61057562 52.57442093]
[-13.71658897 45.27836609]
[-29.53772354 45.32625198]
[-36.89452362 32.37531662]
[-50.00053787 25.07926369]
[-63.10655212 17.78320885]
[-76.21256256 10.48715305]
[-89.43100739 3.39682579]
[-102.75865173 -3.48604250]
[-116.08629608 -10.36891079]
[-132.02882385 -1.74618363]
[-149.80107117 -4.39011288]
[-162.32220459 -17.05666924]
[-164.71804810 -34.54686356]
[-178.25430298 -41.00981903]
[-191.79055786 -47.47277451]
[-207.57778931 -46.43650055]
[-215.72937012 -58.90248871]
[-229.26562500 -65.36544800]
[-242.80187988 -71.82839966]
[-256.33813477 -78.29135895]
[-269.87438965 -84.75431824]
[-281.47201538 -77.29695129]
[-295.13174438 -76.55199432]
[-307.27774048 -82.60729218]
[-314.78341675 -93.78450775]
[-315.77590942 -107.10279083]
[-329.20950317 -113.77651215]
[-342.64309692 -120.45024109]
[-356.07669067 -127.12397003]
[-369.56201172 -133.69252014]
[-385.34924316 -132.65623474]
[-393.50082397 -145.12222290]
[-409.28805542 -144.08595276]
[-417.43963623 -156.55194092]
[-430.97589111 -163.01489258]
[-444.55075073 -155.49803162]
[-459.94717407 -157.42924500]
[-471.24496460 -168.06596375]
[-474.09985352 -183.31816101]
[-467.41409302 -197.32102966]
[-453.75851440 -204.69020081]
[-438.38394165 -202.59207153]
[-427.20220947 -191.83340454]
[-424.51293945 -176.55114746]
[-410.97668457 -170.08819580]
[-396.15765381 -171.58674622]
[-387.03787231 -158.65847778]
[-372.21884155 -160.15702820]
[-363.09906006 -147.22877502]
[-355.70245361 -147.18370056]
[-349.40295410 -140.55755615]
[-335.96936035 -133.88383484]
[-322.53576660 -127.21010590]
[-309.10217285 -120.53637695]
[-294.80709839 -128.59902954]
[-278.35791016 -126.53456116]
[-266.25848389 -114.95970154]
[-263.41143799 -98.29057312]
[-249.87518311 -91.82761383]
[-236.33892822 -85.36465454]
[-222.80267334 -78.90170288]
[-209.26641846 -72.43874359]
[-194.44738770 -73.93729401]
[-185.32759094 -61.00903320]
[-171.79133606 -54.54607391]
[-158.25508118 -48.08311844]
[-148.55226135 -55.39415741]
[-136.59034729 -57.89779282]
[-124.62946320 -55.05821609]
[-114.95632172 -47.35516739]
[-109.44704437 -36.20413971]
[-109.20343018 -23.69655609]
[-95.87578583 -16.81368828]
[-82.54814148 -9.93081951]
[-77.79954529 -10.50544643]
[-72.64060974 -8.09750652]
[-68.91651154 -2.61886001]
[-55.81049728 4.67719507]
[-42.70448303 11.97325039]
[-29.59846878 19.26930428]
[-14.71476555 18.69955254]
[-6.42053366 32.17235184]
[6.68547916 39.46840668]
[19.79149246 46.76446152]
[32.89750671 54.06051636]
[47.78120804 53.49076462]
[56.07544327 66.96356201]
[69.18145752 74.25962067]
[75.93871307 67.85339355]
[83.98980713 63.17576981]
[92.90181732 60.47828674]
[102.19551086 59.90598679]
[111.37113953 61.48964691]
[119.93532562 65.14411163]
[127.42752838 70.67286682]
[133.44488525 77.77861786]
[147.26919556 71.95723724]
[156.98493958 59.47064972]
[171.71743774 61.66215515]
[181.43318176 49.17556381]
[196.16567993 51.36706924]
[209.98999023 45.54569244]
[216.69116211 39.32608795]
[224.07614136 39.74323273]
[237.98974609 34.13862610]
[251.90335083 28.53402328]
[256.28164673 23.56259155]
[261.70059204 21.81683731]
[266.34045410 22.97918892]
[280.42242432 17.81218719]
[294.50442505 12.64518452]
[300.91799927 -1.79924297]
[315.69665527 -7.39985847]
[330.07244873 -0.83391660]
[335.51651001 14.00312614]
[328.79895020 28.30871391]
[313.90518188 33.59559631]
[299.67141724 26.72716141]
[285.58944702 31.89416313]
[271.50744629 37.06116867]
[257.50796509 42.44762802]
[243.59434509 48.05223083]
[229.68074036 53.65683746]
[215.81137085 59.37000275]
[201.98706055 65.19138336]
[193.26011658 77.26158905]
[177.53881836 75.48646545]
[168.81187439 87.55667114]
[153.09057617 85.78154755]
[139.26626587 91.60292816]
[142.33415222 101.49793243]
[142.81410217 112.37693787]
[140.41670227 123.54306793]
[135.04382324 134.21994019]
[144.74537659 145.66021729]
[154.44692993 157.10049438]
[164.14846802 168.54077148]
[173.85002136 179.98104858]
[183.55157471 191.42132568]
[193.25311279 202.86160278]
[202.95466614 214.30187988]
[223.03074646 214.87591553]
[236.02180481 229.79080200]
[233.90164185 249.14938354]
[244.12876892 260.12234497]
[254.35588074 271.09533691]
[264.58300781 282.06829834]
[274.81011963 293.04125977]
[285.03723145 304.01422119]
[295.26434326 314.98721313]
[310.48669434 322.45159912]
[307.52798462 339.14535522]
[290.66754150 340.92358398]
[284.29138184 325.21432495]
[274.06427002 314.24136353]
[263.83715820 303.26837158]
[253.61003113 292.29541016]
[243.38290405 281.32244873]
[233.15579224 270.34948730]
[222.92868042 259.37649536]
[212.93821716 261.79455566]
[202.76686096 259.82794189]
[194.26618958 253.76631165]
[189.01194763 244.65086365]
[188.01216125 234.09597778]
[191.51438904 224.00343323]
[181.81283569 212.56315613]
[172.11129761 201.12287903]
[162.40974426 189.68260193]
[152.70819092 178.24232483]
[143.00665283 166.80203247]
[133.30509949 155.36175537]
[123.60354614 143.92147827]
[116.23507690 145.31993103]
[123.44889069 158.47138977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[20 113]
[21 112]
[23 110]
[24 109]
[25 108]
[26 107]
[28 105]
[29 104]
[30 103]
[31 102]
[32 99]
[33 98]
[34 97]
[38 91]
[39 90]
[40 89]
[42 87]
[43 86]
[44 85]
[45 84]
[46 83]
[51 79]
[52 78]
[53 77]
[54 76]
[55 74]
[57 72]
[59 70]
[60 69]
[121 155]
[122 154]
[124 152]
[126 150]
[127 149]
[129 148]
[130 147]
[131 146]
[134 145]
[135 144]
[136 143]
[159 198]
[160 197]
[161 196]
[162 195]
[163 194]
[164 193]
[165 192]
[166 191]
[169 185]
[170 184]
[171 183]
[172 182]
[173 181]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
