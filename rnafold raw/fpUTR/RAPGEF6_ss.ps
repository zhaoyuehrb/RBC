%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGCAGACUUGUCUCCGGCCAGUCGCGCGUGGGUAGAGGCCUUAGGCGGGCGUUGCGAAGGGUUGUUUGCUAGAGUUCGGACCUUGUUACGGCGCGAAGUUCCCUCCUUGGGGCGGGGGAAAGGUACCGCACCCGCUACCUAGUGUGAAUGAACUGUGGCGUGGGCUGCUAAGGGCAGGCUGCGGAGUACCCGGGCCGUGGCC\
) } def
/len { sequence length } bind def

/coor [
[-185.41375732 225.53553772]
[-193.40112305 238.23207092]
[-201.38847351 250.92860413]
[-209.37583923 263.62515259]
[-217.36320496 276.32168579]
[-225.35057068 289.01821899]
[-233.33793640 301.71475220]
[-233.60784912 320.12548828]
[-249.43264771 327.70809937]
[-257.22640991 340.52438354]
[-265.02017212 353.34066772]
[-272.81393433 366.15698242]
[-273.37338257 381.96829224]
[-286.59716797 388.82254028]
[-294.39093018 401.63882446]
[-302.18466187 414.45510864]
[-305.24832153 431.12994385]
[-322.11959839 432.80209351]
[-328.39685059 417.05303955]
[-315.00097656 406.66134644]
[-307.20721436 393.84506226]
[-299.41345215 381.02877808]
[-299.41146851 366.13415527]
[-285.63021851 358.36322021]
[-277.83645630 345.54690552]
[-270.04269409 332.73062134]
[-262.24893188 319.91433716]
[-264.80725098 308.08938599]
[-258.41638184 297.34738159]
[-246.03446960 293.72738647]
[-238.04710388 281.03085327]
[-230.05973816 268.33432007]
[-222.07237244 255.63777161]
[-214.08502197 242.94123840]
[-206.09765625 230.24470520]
[-198.11029053 217.54817200]
[-201.85984802 209.28239441]
[-200.86985779 199.60919189]
[-194.77027893 191.22065735]
[-208.82633972 185.98353577]
[-222.88238525 180.74642944]
[-236.93844604 175.50930786]
[-251.03382874 170.37901306]
[-265.16775513 165.35581970]
[-279.44760132 160.76388550]
[-293.86022949 156.60745239]
[-309.26397705 160.21780396]
[-319.34890747 149.25680542]
[-333.76156616 145.10035706]
[-348.17419434 140.94392395]
[-362.58682251 136.78747559]
[-376.99945068 132.63104248]
[-391.41207886 128.47460938]
[-405.82470703 124.31816864]
[-420.23736572 120.16172791]
[-426.74093628 121.37913513]
[-432.08026123 119.42120361]
[-435.02075195 115.65425873]
[-449.30059814 111.06232452]
[-464.17211914 117.08042145]
[-478.07821655 109.08040619]
[-480.35128784 93.19920349]
[-469.24768066 81.61951447]
[-453.28509521 83.22428131]
[-444.70864868 96.78247070]
[-430.42880249 101.37440491]
[-416.08090210 105.74909210]
[-401.66827393 109.90553284]
[-387.25564575 114.06197357]
[-372.84301758 118.21840668]
[-358.43038940 122.37484741]
[-344.01776123 126.53128815]
[-329.60510254 130.68772888]
[-315.19247437 134.84416199]
[-300.81961060 130.93650818]
[-289.70379639 142.19480896]
[-275.29116821 146.35125732]
[-272.77307129 145.11265564]
[-269.61190796 144.79849243]
[-266.15783691 145.65896606]
[-262.84527588 147.81282043]
[-260.14456177 151.22190857]
[-246.01063538 156.24510193]
[-238.65298462 155.52273560]
[-231.70132446 161.45326233]
[-217.64527893 166.69036865]
[-203.58921814 171.92749023]
[-189.53317261 177.16459656]
[-174.55432129 177.96101379]
[-160.02218628 174.24389648]
[-145.49005127 170.52677917]
[-130.95790100 166.80966187]
[-116.42576599 163.09254456]
[-101.89363098 159.37542725]
[-87.36149597 155.65830994]
[-72.82935333 151.94119263]
[-62.41641998 141.29130554]
[-47.12932205 145.36747742]
[-32.59718323 141.65036011]
[-26.16086388 131.40596008]
[-14.08189392 128.19152832]
[-2.69705892 134.25793457]
[11.88981724 130.76179504]
[16.42918777 121.60289001]
[25.45081902 116.34555817]
[36.09581375 116.93537140]
[44.83433533 123.41866302]
[59.52059937 120.36682129]
[74.20685577 117.31497955]
[88.89311981 114.26313782]
[77.38291931 102.62213898]
[78.61940002 82.76932526]
[96.83137512 68.00602722]
[105.94020844 56.08842087]
[115.04903412 44.17081833]
[124.06716919 32.18444061]
[132.99407959 20.12997437]
[141.92100525 8.07550716]
[150.84791565 -3.97895956]
[144.65541077 -18.03415108]
[146.33607483 -33.30081177]
[155.43785095 -45.67228317]
[169.51239014 -51.82070923]
[184.77369690 -50.09218597]
[197.11657715 -40.95168304]
[203.22085571 -26.85794830]
[201.44450378 -11.60212517]
[192.26536560 0.71204674]
[178.15255737 6.77211666]
[162.90238953 4.94795656]
[153.97546387 17.00242233]
[145.04855347 29.05689049]
[136.12162781 41.11135483]
[134.66674805 48.35981369]
[126.96663666 53.27964783]
[117.85781097 65.19725037]
[108.74897766 77.11485291]
[116.34733582 90.04795074]
[131.19169617 87.89273834]
[146.03605652 85.73753357]
[160.88043213 83.58232880]
[175.72479248 81.42712402]
[181.14802551 77.63672638]
[186.81968689 77.21924591]
[191.05165100 79.43888092]
[205.95458984 77.73517609]
[220.85751343 76.03147125]
[228.37583923 62.45743942]
[242.45112610 55.92550278]
[257.67111206 58.94732666]
[268.18344116 70.36095428]
[269.94586182 85.77761841]
[262.28073120 99.26928711]
[248.13540649 105.64815521]
[232.94909668 102.46140289]
[222.56121826 90.93440247]
[207.65827942 92.63810730]
[192.75535583 94.34181213]
[177.87998962 96.27148438]
[163.03562927 98.42669678]
[148.19126892 100.58190155]
[133.34690857 102.73710632]
[118.50254059 104.89231110]
[115.11718750 119.50529480]
[127.50160217 127.96852875]
[139.88601685 136.43176270]
[152.27043152 144.89498901]
[168.02973938 146.29313660]
[174.17222595 159.86218262]
[186.55664062 168.32540894]
[198.94105530 176.78865051]
[211.32546997 185.25187683]
[223.70988464 193.71510315]
[240.19854736 197.65975952]
[240.97256470 214.59603882]
[224.91242981 220.02822876]
[215.24664307 206.09951782]
[202.86222839 197.63629150]
[190.47781372 189.17306519]
[178.09339905 180.70982361]
[165.70898438 172.24659729]
[150.83549500 171.45379639]
[143.80720520 157.27940369]
[131.42279053 148.81617737]
[119.03836823 140.35293579]
[106.65395355 131.88970947]
[91.94496155 128.94940186]
[77.25869751 132.00123596]
[62.57243729 135.05308533]
[47.88617706 138.10491943]
[33.46899414 152.19125366]
[15.38596344 145.34866333]
[0.79908723 148.84481812]
[-12.26326752 161.82183838]
[-28.88006783 156.18251038]
[-43.41220474 159.89962769]
[-54.86457443 170.81538391]
[-69.11223602 166.47332764]
[-83.64437866 170.19044495]
[-98.17651367 173.90756226]
[-112.70865631 177.62467957]
[-127.24079132 181.34179688]
[-141.77293396 185.05891418]
[-156.30506897 188.77603149]
[-170.83720398 192.49314880]
[-164.27838135 207.89143372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 36]
[2 35]
[3 34]
[4 33]
[5 32]
[6 31]
[7 30]
[9 27]
[10 26]
[11 25]
[12 24]
[14 22]
[15 21]
[16 20]
[39 88]
[40 87]
[41 86]
[42 85]
[43 83]
[44 82]
[45 77]
[46 76]
[48 74]
[49 73]
[50 72]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[58 66]
[59 65]
[89 205]
[90 204]
[91 203]
[92 202]
[93 201]
[94 200]
[95 199]
[96 198]
[98 196]
[99 195]
[102 193]
[103 192]
[107 190]
[108 189]
[109 188]
[110 187]
[113 137]
[114 136]
[115 135]
[116 133]
[117 132]
[118 131]
[119 130]
[138 163]
[139 162]
[140 161]
[141 160]
[142 159]
[145 158]
[146 157]
[147 156]
[164 186]
[165 185]
[166 184]
[167 183]
[169 181]
[170 180]
[171 179]
[172 178]
[173 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
