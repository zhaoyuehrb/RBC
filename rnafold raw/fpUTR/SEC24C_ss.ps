%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACCGGAAGUGGAGCCUGGGAGCCUUGACGUUAGGAACGAAGUCUAACCUGGAUCUGGAGCCGGGAGAUAAUCUGAAUGCUGGCUGGGGCAGAAAAUUACUAAGAUCCUGUGGAAGUGUGAGGAUUAUUAAACUGAUCACUGUCUGAUAAGGUGAGAUCAAAUUGGGAAUGCUUUCAUA\
) } def
/len { sequence length } bind def

/coor [
[129.00503540 142.18060303]
[117.66114807 148.04768372]
[105.21798706 150.92414856]
[92.45004272 150.63095093]
[88.08798981 164.98269653]
[83.72592926 179.33444214]
[87.96611786 195.17593384]
[76.17738342 206.57583618]
[60.48696136 201.80690002]
[57.03581619 185.77500916]
[69.37419128 174.97238159]
[73.73624420 160.62063599]
[78.09830475 146.26890564]
[55.15831375 124.69248199]
[49.18965912 93.77064514]
[34.72922516 89.78367615]
[20.26879501 85.79670715]
[5.80836296 81.80974579]
[-3.35427642 87.73379517]
[-14.04472446 87.62406158]
[-22.71928215 81.75925446]
[-26.63590050 72.28576660]
[-40.94924545 67.79932404]
[-55.26259232 63.31288528]
[-69.57593536 58.82644653]
[-81.36483765 64.10276031]
[-93.20566559 60.05179596]
[-98.91310883 49.36719894]
[-108.07147980 49.62612915]
[-113.35112762 44.42535782]
[-127.50013733 39.44485092]
[-141.64915466 34.46434402]
[-155.79817200 29.48383713]
[-171.38446045 32.20005798]
[-180.82064819 20.67582893]
[-194.96965027 15.69532108]
[-209.11866760 10.71481419]
[-217.32319641 17.60791206]
[-227.57469177 20.43783760]
[-237.99378967 18.75566292]
[-246.69932556 12.93332672]
[-252.14799500 4.08403635]
[-253.40774536 -6.15001678]
[-267.27835083 -11.86018753]
[-281.14898682 -17.57035828]
[-295.01959229 -23.28053093]
[-301.65579224 -22.77982521]
[-306.76840210 -25.33821869]
[-309.26696777 -29.43711853]
[-322.93106079 -35.62525177]
[-336.59512329 -41.81338882]
[-350.25921631 -48.00152206]
[-363.92327881 -54.18965912]
[-377.34347534 -46.40003967]
[-392.77578735 -48.01977921]
[-404.28616333 -58.42605972]
[-407.44863892 -73.61744690]
[-401.04721069 -87.75254822]
[-387.54330444 -95.39612579]
[-372.12945557 -93.60906982]
[-360.73263550 -83.07853699]
[-357.73513794 -67.85373688]
[-344.07107544 -61.66559982]
[-330.40698242 -55.47746277]
[-316.74291992 -49.28932953]
[-303.07882690 -43.10119247]
[-289.30941772 -37.15114594]
[-275.43881226 -31.44097328]
[-261.56817627 -25.73080254]
[-247.69757080 -20.02063179]
[-230.34794617 -28.83078766]
[-211.81251526 -21.97543144]
[-204.13815308 -3.43419790]
[-189.98915100 1.54630911]
[-175.84013367 6.52681589]
[-161.26586914 3.45435667]
[-150.81765747 15.33482361]
[-136.66864014 20.31533051]
[-122.51963043 25.29583740]
[-108.37062073 30.27634430]
[-94.17891693 35.13387299]
[-77.21798706 30.67393303]
[-65.08950043 44.51309967]
[-50.77615356 48.99953842]
[-36.46280670 53.48598099]
[-22.14946175 57.97241974]
[-3.66103339 52.36339188]
[9.79533005 67.34931183]
[24.25576210 71.33628082]
[38.71619415 75.32324219]
[53.17662430 79.31021118]
[56.86603928 72.43267822]
[61.55808258 66.19593811]
[67.14368439 60.74495697]
[73.49302673 56.20643997]
[80.45850372 52.68588638]
[87.87821198 50.26512527]
[95.57968903 49.00042725]
[103.38391876 48.92119217]
[111.10948181 50.02925873]
[118.57681274 52.29887390]
[125.61234283 55.67727661]
[132.05252075 60.08594513]
[137.74765015 65.42239380]
[142.56535339 71.56258392]
[146.39364624 78.36378479]
[149.14353943 85.66791534]
[150.75111389 93.30519104]
[151.17900085 101.09807587]
[150.41725159 108.86544037]
[164.65057373 113.59962463]
[178.88389587 118.33381653]
[193.11721802 123.06800079]
[207.35054016 127.80218506]
[221.58386230 132.53637695]
[235.81718445 137.27055359]
[250.05052185 142.00474548]
[264.28384399 146.73893738]
[278.51715088 151.47311401]
[292.75048828 156.20730591]
[306.35430908 146.17752075]
[323.08975220 146.22207642]
[336.37374878 156.12571716]
[341.09866333 171.83392334]
[355.41198730 176.32035828]
[369.72534180 180.80680847]
[384.03869629 185.29324341]
[398.42773438 189.53059387]
[412.88818359 193.51754761]
[427.34860229 197.50451660]
[440.97702026 189.96101379]
[455.58514404 194.21037292]
[462.69274902 207.24945068]
[477.15316772 211.23641968]
[491.61361694 215.22338867]
[509.30676270 210.16619873]
[521.14355469 223.10661316]
[535.67102051 226.84201050]
[550.19848633 230.57739258]
[564.72595215 234.31278992]
[579.21362305 227.42173767]
[593.57043457 234.58140564]
[596.78308105 250.29949951]
[586.38708496 262.51843262]
[570.35736084 261.86489868]
[560.99053955 248.84024048]
[546.46307373 245.10484314]
[531.93560791 241.36946106]
[517.40820312 237.63406372]
[506.82095337 243.52014160]
[494.67443848 240.50723267]
[487.62664795 229.68382263]
[473.16619873 225.69685364]
[458.70578003 221.70988464]
[445.92028809 229.26412964]
[431.19854736 225.42677307]
[423.36163330 211.96495056]
[408.90121460 207.97798157]
[394.44076538 203.99101257]
[389.89797974 205.54243469]
[384.33190918 204.23741150]
[379.55224609 199.60659790]
[365.23889160 195.12014771]
[350.92556763 190.63371277]
[336.61221313 186.14727783]
[326.66522217 195.07460022]
[313.49890137 197.93742371]
[300.53622437 193.88180542]
[291.20159912 183.86691284]
[288.01629639 170.44062805]
[273.78295898 165.70643616]
[259.54965210 160.97225952]
[245.31632996 156.23806763]
[231.08300781 151.50389099]
[216.84968567 146.76969910]
[202.61636353 142.03550720]
[188.38304138 137.30133057]
[174.14971924 132.56713867]
[159.91639709 127.83295441]
[145.68307495 123.09876251]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 13]
[5 12]
[6 11]
[15 91]
[16 90]
[17 89]
[18 88]
[22 86]
[23 85]
[24 84]
[25 83]
[28 81]
[30 80]
[31 79]
[32 78]
[33 77]
[35 75]
[36 74]
[37 73]
[43 70]
[44 69]
[45 68]
[46 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[110 180]
[111 179]
[112 178]
[113 177]
[114 176]
[115 175]
[116 174]
[117 173]
[118 172]
[119 171]
[120 170]
[124 165]
[125 164]
[126 163]
[127 162]
[128 159]
[129 158]
[130 157]
[133 154]
[134 153]
[135 152]
[137 149]
[138 148]
[139 147]
[140 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
