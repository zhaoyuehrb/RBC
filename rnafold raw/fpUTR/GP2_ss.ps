%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:56:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAAGCCCAGUGUAUGGCCUAGAACUCCCAUCAUACCUGUGCACCAAUUGAGGAGAGACACAUGGGUGGGAAAUUGCAAUAAAAAGACGGCCCACAGCAGGCUGCAUUCCCAUGGCUGGCCAGAGGAGGAACGCUUUGUGUUCUCAUCGGAGCUGCAUGGGAAGUCUGCAUACAGCAAAGUGACCUGC\
) } def
/len { sequence length } bind def

/coor [
[92.61281586 148.12518311]
[85.42343903 161.29002380]
[73.12827301 169.88240051]
[58.29435349 172.10835266]
[44.01877594 167.50314331]
[33.28206253 157.02825928]
[28.32587242 142.87071228]
[30.18498039 127.98636627]
[38.47123337 115.48284912]
[51.45458984 107.97069550]
[66.42480469 107.01840973]
[80.84909821 102.90263367]
[66.21737671 99.59918976]
[51.58565903 96.29574585]
[46.56989670 97.85952759]
[41.92417908 97.37974548]
[38.36817169 95.34294891]
[36.32220459 92.45159912]
[21.87123489 88.43048096]
[7.42026329 84.40935516]
[-7.03070831 80.38823700]
[-14.75644207 83.14469147]
[-21.93633842 81.50296783]
[-26.49743652 76.82718658]
[-41.43610001 75.47206879]
[-53.50792694 85.31629181]
[-68.63854980 83.72919464]
[-77.94911957 72.15988922]
[-92.88777924 70.80476379]
[-107.82644653 69.44964600]
[-122.76510620 68.09452820]
[-137.70376587 66.73940277]
[-152.64244080 65.38428497]
[-167.58110046 64.02916718]
[-173.83189392 72.71167755]
[-183.05708313 77.96816254]
[-193.55220032 78.90478516]
[-203.40994263 75.41882324]
[-210.86692810 68.20519257]
[-214.61892700 58.61904144]
[-229.47257996 56.52872849]
[-244.32621765 54.43841934]
[-259.17984009 52.34810638]
[-274.05017090 50.38002396]
[-292.22460938 59.07506943]
[-307.15185547 46.79974365]
[-322.09051514 45.44462585]
[-334.06771851 55.75588989]
[-349.82159424 54.49459839]
[-360.00564575 42.40904999]
[-358.57788086 26.66938782]
[-346.38534546 16.61367226]
[-330.66165161 18.20778275]
[-320.73541260 30.50596046]
[-305.79675293 31.86108208]
[-298.55172729 24.62586784]
[-288.30337524 22.53802681]
[-278.39739990 26.52611923]
[-272.20446777 35.49401093]
[-265.16757202 33.19309235]
[-257.08953857 37.49446869]
[-242.23590088 39.58477783]
[-227.38226318 41.67509079]
[-212.52862549 43.76539993]
[-197.89363098 30.92900276]
[-178.23094177 32.99932480]
[-166.22598267 49.09049988]
[-151.28730774 50.44562149]
[-136.34864807 51.80074310]
[-121.40998840 53.15586090]
[-106.47132111 54.51098251]
[-91.53266144 55.86610413]
[-76.59400177 57.22122574]
[-65.35358429 47.51613998]
[-50.18434906 48.67761993]
[-40.08097839 60.53340530]
[-25.14231682 61.88852310]
[-36.71196747 52.34163284]
[-43.58383179 39.00830841]
[-44.64599228 24.04596329]
[-39.72658920 9.87559032]
[-29.62161064 -1.20995998]
[-15.96610355 -7.41697979]
[-0.96960622 -7.74113655]
[12.94135761 -2.12998033]
[23.51591301 8.50857067]
[29.04303360 22.45313835]
[28.62840080 37.44740677]
[22.33910179 51.06521606]
[11.19278431 61.10312271]
[-3.00958633 65.93726349]
[11.44138527 69.95838165]
[25.89235687 73.97950745]
[40.34332657 78.00062561]
[54.88910294 81.66402435]
[69.52082062 84.96746826]
[84.15254211 88.27091217]
[98.22923279 76.86792755]
[118.78208160 81.04603577]
[133.23304749 77.02491760]
[147.68402100 73.00379181]
[162.13499451 68.98267365]
[176.58596802 64.96154785]
[191.03694153 60.94042587]
[205.48791504 56.91930389]
[208.44012451 53.68272781]
[211.92146301 51.75796127]
[215.45112610 51.14969254]
[218.59678650 51.70488739]
[221.02209473 53.14255142]
[235.70617676 50.08020782]
[250.39024353 47.01786804]
[265.07431030 43.95552444]
[279.75839233 40.89318466]
[294.44247437 37.83084106]
[309.12655640 34.76849747]
[316.90432739 29.94533920]
[324.07723999 31.77864075]
[331.93328857 27.08405685]
[339.07507324 29.03508568]
[353.85192871 26.45736504]
[368.62878418 23.87964439]
[383.38394165 21.18048477]
[395.48315430 10.98637676]
[409.43823242 16.19259453]
[424.17068481 13.37218189]
[436.26989746 3.17807341]
[450.22497559 8.38429165]
[464.95745850 5.56387854]
[479.68991089 2.74346542]
[487.54595947 -1.95111871]
[494.68774414 -0.00008878]
[509.46459961 -2.57781005]
[524.24145508 -5.15553141]
[539.01831055 -7.73325253]
[553.79516602 -10.31097412]
[568.35961914 -18.98929024]
[580.73059082 -7.39642143]
[573.01544189 7.70034456]
[556.37286377 4.46587801]
[541.59600830 7.04359961]
[526.81915283 9.62132072]
[512.04229736 12.19904232]
[497.26547241 14.77676296]
[482.51031494 17.47592163]
[467.77786255 20.29633522]
[453.04541016 23.11674881]
[441.99996948 33.10912323]
[426.99111938 28.10463905]
[412.25863647 30.92505074]
[401.21319580 40.91742325]
[386.20434570 35.91294098]
[380.21575928 40.26591492]
[371.20651245 38.65649414]
[356.42965698 41.23421860]
[341.65280151 43.81193924]
[326.89764404 46.51109695]
[312.18890381 49.45257568]
[297.50482178 52.51491547]
[282.82073975 55.57725906]
[268.13665771 58.63959885]
[253.45259094 61.70194244]
[238.76850891 64.76428223]
[224.08444214 67.82662964]
[209.50903320 71.37027740]
[195.05805969 75.39139557]
[180.60708618 79.41252136]
[166.15611267 83.43363953]
[151.70513916 87.45476532]
[137.25418091 91.47588348]
[122.80319977 95.49700928]
[137.79995728 95.80873108]
[147.68472290 107.09108734]
[146.02195740 121.99864197]
[133.89422607 130.82577515]
[119.19734192 127.82551575]
[111.49982452 114.95166779]
[115.16322327 129.49743652]
[118.82662201 144.04321289]
[133.27717590 149.69660950]
[141.61656189 162.78227234]
[140.63812256 178.26846313]
[130.71807861 190.20043945]
[115.67088318 193.99012756]
[101.28250122 188.18029785]
[93.08555603 175.00494385]
[94.23194122 159.53027344]
[104.28084564 147.70660400]
[100.61745453 133.16084290]
[96.95405579 118.61506653]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 97]
[13 96]
[14 95]
[18 94]
[19 93]
[20 92]
[21 91]
[24 77]
[25 76]
[28 73]
[29 72]
[30 71]
[31 70]
[32 69]
[33 68]
[34 67]
[40 64]
[41 63]
[42 62]
[43 61]
[44 59]
[46 55]
[47 54]
[99 171]
[100 170]
[101 169]
[102 168]
[103 167]
[104 166]
[105 165]
[110 164]
[111 163]
[112 162]
[113 161]
[114 160]
[115 159]
[116 158]
[118 157]
[120 156]
[121 155]
[122 154]
[123 152]
[125 150]
[126 149]
[128 147]
[129 146]
[130 145]
[132 144]
[133 143]
[134 142]
[135 141]
[136 140]
[177 190]
[178 189]
[179 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
