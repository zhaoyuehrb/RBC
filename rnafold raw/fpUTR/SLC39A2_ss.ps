%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGCUGGGGCAGGAUCUGUCAGCUCUGCAAUGCUGCAGAAGCAGAAGCAACACAGAAAGAAGAUACCAACAGCCUCCUGAAACUCACGAGAGUGGACACUCCAGUGUUGACCACCUAAGAUACCACUCCUGCUCCAAAGAUUACAGCUCCCUUGUCAUUCUGACUCCUGGGCUUACCCUACACCCCAGAG\
) } def
/len { sequence length } bind def

/coor [
[191.88029480 298.56646729]
[191.71315002 289.20498657]
[192.74134827 279.89666748]
[194.94859314 270.79351807]
[198.29934692 262.04434204]
[202.73936462 253.79216003]
[208.19657898 246.17192078]
[197.63322449 235.52224731]
[187.06987000 224.87257385]
[176.50651550 214.22288513]
[165.94317627 203.57321167]
[155.37982178 192.92353821]
[144.81646729 182.27386475]
[134.25311279 171.62419128]
[123.68976593 160.97450256]
[113.12641144 150.32482910]
[98.17606354 149.10534668]
[86.02647400 157.90235901]
[73.87688446 166.69938660]
[61.72729492 175.49639893]
[56.60167313 183.07595825]
[49.30758667 184.33581543]
[37.01641464 192.93389893]
[24.72524643 201.53199768]
[12.43407726 210.13008118]
[12.29090595 225.64649963]
[3.02772713 238.09532166]
[-11.79357910 242.68971252]
[-26.47391701 237.66305542]
[-35.36839676 224.94819641]
[-35.05691147 209.43424988]
[-25.65923119 197.08663940]
[-10.78895664 192.65328979]
[3.83598733 197.83891296]
[16.12715721 189.24082947]
[28.41832733 180.64273071]
[40.70949554 172.04464722]
[52.93028259 163.34680176]
[65.07987213 154.54978943]
[77.22946167 145.75277710]
[89.37905121 136.95576477]
[84.35062408 122.82299805]
[79.32266235 108.69149017]
[64.34700012 109.54560852]
[50.93910599 118.98809052]
[36.17344666 111.85315704]
[35.23965836 95.48061371]
[49.09835052 86.71313477]
[63.49288177 94.56994629]
[78.46854401 93.71582794]
[82.41068268 87.33541870]
[68.85881042 80.90526581]
[55.30694962 74.47510529]
[41.75508118 68.04494476]
[28.20321655 61.61479187]
[14.65135002 55.18463135]
[1.09948432 48.75447464]
[-12.45238113 42.32431793]
[-26.00424767 35.89415741]
[-40.84605026 33.72139740]
[-52.21398544 23.93518257]
[-56.56972504 9.58152199]
[-52.55751801 -4.87192726]
[-41.42618942 -14.92645359]
[-26.64042091 -17.45252991]
[-12.80236435 -11.66390419]
[-4.21984291 0.63575369]
[7.59450579 9.87811089]
[19.40885353 19.12046814]
[31.22320366 28.36282539]
[43.03755188 37.60518265]
[54.85190201 46.84753799]
[66.66625214 56.08989716]
[78.48059845 65.33225250]
[90.29494476 74.57460785]
[94.23708344 68.19420624]
[88.30003357 54.41917038]
[82.36299133 40.64413834]
[69.79540253 31.03339958]
[71.86334991 16.28304672]
[65.92630768 2.50801563]
[59.98926163 -11.26701641]
[48.16751862 -23.41949463]
[56.57248688 -38.14337921]
[73.04768372 -34.14285660]
[73.76429749 -17.20406151]
[79.70133972 -3.42902875]
[85.63838196 10.34600353]
[97.78131104 18.97146225]
[96.13802338 34.70709610]
[102.07506561 48.48212814]
[108.01211548 62.25716019]
[115.48207855 61.58660126]
[137.89196777 59.57492828]
[141.28076172 44.96274185]
[136.86125183 29.77134895]
[147.27384949 19.12114334]
[150.66265869 4.50895548]
[154.05145264 -10.10323238]
[157.44026184 -24.71541977]
[160.82907104 -39.32760620]
[155.53501892 -54.84872437]
[166.53190613 -67.01427460]
[182.50706482 -63.30937195]
[187.02662659 -47.54531097]
[175.44125366 -35.93880463]
[172.05244446 -21.32661629]
[168.66365051 -6.71442890]
[165.27484131 7.89775801]
[161.88604736 22.50994492]
[166.54795837 36.65617752]
[155.89295959 48.35154343]
[152.50415039 62.96372986]
[162.48356628 51.76501083]
[177.47573853 51.28041077]
[191.99453735 55.04924774]
[204.85810852 62.76472473]
[215.01930237 73.79877472]
[221.65095520 87.25318146]
[224.21324158 102.03272247]
[222.49755859 116.93428040]
[216.64358521 130.74482727]
[207.12786865 142.34011841]
[194.72499084 150.77627563]
[180.44461060 155.36656189]
[165.44918823 155.73730469]
[150.95941162 151.85833740]
[138.15202332 144.04310608]
[123.77609253 139.76147461]
[134.33944702 150.41116333]
[144.90278625 161.06083679]
[155.46614075 171.71051025]
[166.02949524 182.36018372]
[176.59284973 193.00985718]
[187.15620422 203.65954590]
[197.71954346 214.30921936]
[208.28289795 224.95889282]
[218.84625244 235.60856628]
[237.60810852 224.65812683]
[258.74246216 219.68725586]
[280.39321899 221.12490845]
[300.66110229 228.83757019]
[317.77038574 242.14154053]
[330.22442627 259.86364746]
[336.93646240 280.44461060]
[337.32464600 302.07626343]
[331.36230469 322.86047363]
[344.31179810 330.43084717]
[357.26129150 338.00122070]
[370.21078491 345.57159424]
[383.16027832 353.14196777]
[396.49829102 345.65567017]
[411.69235229 345.84942627]
[424.66317749 353.57107544]
[431.97851562 366.66082764]
[431.76113892 381.55441284]
[444.71063232 389.12478638]
[457.66012573 396.69515991]
[470.60961914 404.26553345]
[487.33508301 407.03958130]
[489.29949951 423.87936401]
[473.66162109 430.42868042]
[463.03924561 417.21502686]
[450.08975220 409.64465332]
[437.14025879 402.07427979]
[424.19076538 394.50390625]
[411.31915283 401.99969482]
[396.32403564 402.04660034]
[383.23223877 394.53182983]
[375.60961914 381.38677979]
[375.58990479 366.09146118]
[362.64041138 358.52108765]
[349.69091797 350.95071411]
[336.74142456 343.38034058]
[323.79193115 335.80996704]
[317.82516479 342.97692871]
[310.99172974 349.32583618]
[303.40289307 354.75265503]
[295.18228149 359.16839600]
[286.46383667 362.50048828]
[277.38973999 364.69409180]
[268.10806274 365.71286011]
[258.77026367 365.53973389]
[249.52883911 364.17694092]
[240.53475952 361.64633179]
[231.93499756 357.98864746]
[223.87016296 353.26324463]
[216.47218323 347.54678345]
[209.86218262 340.93222046]
[204.14842224 333.52722168]
[199.42457581 325.45233154]
[195.76824951 316.83920288]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 138]
[8 137]
[9 136]
[10 135]
[11 134]
[12 133]
[13 132]
[14 131]
[15 130]
[16 129]
[17 41]
[18 40]
[19 39]
[20 38]
[22 37]
[23 36]
[24 35]
[25 34]
[43 50]
[44 49]
[76 92]
[77 91]
[78 90]
[80 88]
[81 87]
[82 86]
[94 113]
[95 112]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[147 175]
[148 174]
[149 173]
[150 172]
[151 171]
[156 166]
[157 165]
[158 164]
[159 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
