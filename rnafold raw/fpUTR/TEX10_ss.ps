%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAUCACGUGAGCACAGCAGGGAGGGGGAGGGGCCCUGAUUUCCGGGCGGCGGAAGGAGACGCGGCCGCGUGAGGACGAGGCUAUUUGAAAACACGCUCCGGGAGCUAGAGCCUGAGGUCGGCGGCGCACGCUGUUGCCCCGUGGGCUUCUGCUCCCUCGCUUGUCUUCUCGGGCUUCUCGCCCCGGCCGCGGCCGGGUCCUCAGUAGUCGAGA\
) } def
/len { sequence length } bind def

/coor [
[99.78524780 645.14276123]
[109.70448303 632.53375244]
[109.26821136 617.54010010]
[108.83193970 602.54638672]
[108.39566803 587.55273438]
[100.29147339 575.05590820]
[107.62412262 561.03656006]
[107.18785095 546.04290771]
[103.85249329 539.45080566]
[106.85587311 530.82836914]
[106.63771057 515.82995605]
[106.41955566 500.83151245]
[106.20139313 485.83309937]
[98.27980804 473.21969604]
[105.81558228 459.30847168]
[105.59742737 444.31005859]
[94.50090790 428.47216797]
[104.60453796 411.02572632]
[103.95024109 396.04000854]
[92.39778137 380.53158569]
[101.98970795 362.79867554]
[100.89984131 347.83831787]
[89.49753571 338.32394409]
[88.17913818 323.16754150]
[98.23598480 311.27227783]
[97.14611816 296.31192017]
[96.05624390 281.35156250]
[94.96637726 266.39120483]
[93.76773834 251.43917847]
[92.46040344 236.49626160]
[91.15306854 221.55334473]
[89.84573364 206.61042786]
[88.53839874 191.66749573]
[87.23105621 176.72457886]
[85.92372131 161.78166199]
[84.61638641 146.83874512]
[83.30905151 131.89581299]
[82.33343506 146.86405945]
[72.39946747 158.10310364]
[57.66435242 160.90960693]
[44.29450226 154.10908508]
[37.88497543 140.54745483]
[41.11806107 125.90002441]
[52.64076233 116.29651642]
[67.63222504 115.75620270]
[52.73365021 114.01481628]
[37.82280350 112.38181305]
[22.90047646 110.85728455]
[7.97815084 109.33275604]
[-6.53694201 115.62741089]
[-18.41192818 106.63663483]
[-33.33425522 105.11211395]
[-48.25658035 103.58758545]
[-58.50521469 115.23855591]
[-73.65214539 118.60753632]
[-87.87307739 112.39908600]
[-95.69976044 99.00048065]
[-94.12268066 83.56375885]
[-83.74826050 72.02465057]
[-68.56566620 68.82018280]
[-54.41292953 75.18254089]
[-46.73205566 88.66526031]
[-31.80972862 90.18978882]
[-16.88740158 91.71430969]
[-3.43965340 85.31061554]
[9.50267696 94.41043091]
[24.42500305 95.93495941]
[39.34732819 97.45948029]
[46.31834412 95.01309967]
[54.47504044 99.11623383]
[69.37361908 100.85762787]
[81.43450928 80.94721985]
[101.21577454 77.46642303]
[106.95602417 63.60823059]
[112.69627380 49.75003815]
[118.43652344 35.89184570]
[124.17678070 22.03365326]
[129.91702271 8.17545986]
[135.65728760 -5.68273354]
[141.39753723 -19.54092598]
[147.13778687 -33.39912033]
[146.15673828 -48.36700439]
[138.65673828 -61.35738373]
[123.51571655 -59.72356796]
[109.02116394 -64.39558411]
[97.68434143 -74.56399536]
[91.46942902 -88.46704102]
[91.45320129 -103.69594574]
[97.63845825 -117.61221313]
[108.95358276 -127.80476379]
[123.43814087 -132.50765991]
[138.58261108 -130.90612793]
[151.76312256 -123.27761841]
[160.69606018 -110.94382477]
[163.83374023 -96.04164886]
[160.63255310 -81.15298462]
[151.64710999 -68.85738373]
[159.14710999 -55.86700439]
[166.63442993 -55.43091583]
[174.87704468 -67.96324921]
[181.60905457 -54.55874634]
[189.09635925 -54.12265778]
[198.05374146 -66.15450287]
[207.01112366 -78.18635559]
[215.96850586 -90.21820068]
[224.92587280 -102.25005341]
[233.88325500 -114.28189850]
[231.79272461 -129.71780396]
[241.04817200 -141.79222107]
[255.77684021 -143.69009399]
[264.73422241 -155.72193909]
[273.69158936 -167.75378418]
[282.64898682 -179.78562927]
[291.60635376 -191.81748962]
[300.56375122 -203.84933472]
[309.52111816 -215.88117981]
[311.55575562 -231.57101440]
[325.36221313 -237.15945435]
[334.31958008 -249.19129944]
[336.03408813 -267.52722168]
[352.40979004 -273.84066772]
[361.19122314 -286.00152588]
[369.97265625 -298.16238403]
[378.75411987 -310.32324219]
[387.53555298 -322.48406982]
[396.31698608 -334.64492798]
[405.09844971 -346.80578613]
[406.22598267 -363.16610718]
[421.07507324 -370.12576294]
[434.37023926 -360.52520752]
[432.43457031 -344.24069214]
[417.25927734 -338.02435303]
[408.47784424 -325.86349487]
[399.69641113 -313.70263672]
[390.91494751 -301.54177856]
[382.13351440 -289.38095093]
[373.35208130 -277.22009277]
[364.57064819 -265.05923462]
[366.18783569 -253.07365417]
[358.97460938 -242.87104797]
[346.35144043 -240.23393250]
[337.39404297 -228.20207214]
[336.00012207 -213.37284851]
[321.55297852 -206.92379761]
[312.59558105 -194.89195251]
[303.63821411 -182.86010742]
[294.68081665 -170.82826233]
[285.72344971 -158.79640198]
[276.76608276 -146.76455688]
[267.80868530 -134.73271179]
[270.21478271 -120.07848358]
[261.30212402 -107.74887848]
[245.91510010 -105.32451630]
[236.95771790 -93.29267120]
[228.00035095 -81.26082611]
[219.04296875 -69.22897339]
[210.08558655 -57.19712830]
[201.12820435 -45.16527939]
[192.85533142 -32.80348206]
[181.69297791 -25.83435440]
[170.30075073 -24.43669319]
[160.99597168 -27.65886879]
[155.25572205 -13.80067444]
[149.51547241 0.05751808]
[143.77522278 13.91571140]
[138.03497314 27.77390480]
[132.29472351 41.63209534]
[126.55446625 55.49029160]
[120.81421661 69.34848022]
[115.07396698 83.20667267]
[125.25341797 99.57302094]
[119.36105347 120.15500641]
[98.25196838 130.58848572]
[99.55931091 145.53140259]
[100.86664581 160.47431946]
[102.17398071 175.41723633]
[103.48131561 190.36016846]
[104.78865051 205.30308533]
[106.09598541 220.24600220]
[107.40332794 235.18891907]
[108.71066284 250.13185120]
[112.57482910 258.40441895]
[109.92672729 265.30133057]
[111.01660156 280.26168823]
[112.10646820 295.22204590]
[113.19633484 310.18240356]
[124.87100220 320.49453735]
[125.76317596 335.68197632]
[115.86019135 346.74844360]
[116.95006561 361.70880127]
[125.57350159 368.33010864]
[129.05953979 378.39627075]
[126.48601532 388.50708008]
[118.93596649 395.38571167]
[119.59025574 410.37145996]
[128.01747131 417.24078369]
[131.20925903 427.40408325]
[128.34275818 437.43576050]
[120.59584045 444.09188843]
[120.81399536 459.09030151]
[128.75119019 472.77648926]
[121.19980621 485.61495972]
[121.41796875 500.61337280]
[121.63612366 515.61175537]
[121.85428619 530.61016846]
[122.18151093 545.60662842]
[122.61777496 560.60028076]
[130.75317383 574.16955566]
[123.38932037 587.11651611]
[123.82559204 602.11016846]
[124.26186371 617.10382080]
[124.69813538 632.09747314]
[135.33374023 644.10839844]
[132.43254089 659.88696289]
[118.22010040 667.32916260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 212]
[3 211]
[4 210]
[5 209]
[7 207]
[8 206]
[10 205]
[11 204]
[12 203]
[13 202]
[15 200]
[16 199]
[18 195]
[19 194]
[21 190]
[22 189]
[25 186]
[26 185]
[27 184]
[28 183]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[34 176]
[35 175]
[36 174]
[37 173]
[45 71]
[46 70]
[47 68]
[48 67]
[49 66]
[51 64]
[52 63]
[53 62]
[73 170]
[74 169]
[75 168]
[76 167]
[77 166]
[78 165]
[79 164]
[80 163]
[81 162]
[82 98]
[83 97]
[102 158]
[103 157]
[104 156]
[105 155]
[106 154]
[107 153]
[110 150]
[111 149]
[112 148]
[113 147]
[114 146]
[115 145]
[116 144]
[118 142]
[119 141]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
