%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCAUUUUCUAGCUGAGGAAUGAAGUGACUUGGAACCAAACUGGGCUUUUCUACUGAGCAUGUCCCUCUCCAGCAGGGUCUGGCUUGGGUGGAGCCAGUCUUGCUCGUUAAGCUUUUGGACGCUGGAUUUCCAUCAGCUUUCCACAGUUUUCCAAUGACAGGAAAUAGCAGACAGCGGGCUUGAUGUGCUUAAAAGCUGCCAUAAGCUGUGGCC\
) } def
/len { sequence length } bind def

/coor [
[474.76995850 463.32208252]
[462.29678345 471.65393066]
[447.62127686 474.75717163]
[432.84298706 472.18780518]
[420.07604980 464.31344604]
[411.14694214 452.26058960]
[407.33309937 437.75354004]
[409.18011475 422.86767578]
[416.42373657 409.73263550]
[428.02770996 400.22747803]
[442.33190918 395.71203613]
[457.29174805 396.83276367]
[445.25988770 387.87539673]
[433.22805786 378.91802979]
[421.19619751 369.96063232]
[409.16436768 361.00326538]
[397.13250732 352.04586792]
[385.03582764 343.17623901]
[372.87500000 334.39480591]
[360.71414185 325.61334229]
[348.55328369 316.83190918]
[333.12582397 322.44683838]
[317.23269653 317.71102905]
[307.19555664 304.30145264]
[307.12969971 287.38540649]
[294.84240723 278.78176880]
[282.55514526 270.17813110]
[270.26785278 261.57446289]
[264.97082520 264.33300781]
[259.07537842 265.51409912]
[253.04414368 265.00213623]
[247.35685730 262.81527710]
[242.47212219 259.10586548]
[238.79049683 254.14984131]
[236.62165833 248.32641602]
[236.15844727 242.08908081]
[237.45999146 235.93028259]
[226.11076355 226.12236023]
[214.76153564 216.31445312]
[203.41232300 206.50654602]
[192.06309509 196.69862366]
[188.54244995 196.58731079]
[184.90045166 194.76753235]
[181.93843079 191.20063782]
[180.44482422 186.20684814]
[169.53422546 175.91322327]
[158.62361145 165.61959839]
[147.71301270 155.32597351]
[136.80239868 145.03234863]
[121.96793365 145.72091675]
[110.75639343 135.43713379]
[110.13475037 119.87271118]
[102.91963959 124.97775269]
[93.37769318 127.19306946]
[82.74320221 125.54521942]
[72.62658691 119.60151672]
[64.77799988 109.60383606]
[50.28911209 105.72154999]
[35.80022430 101.83926392]
[23.09530067 110.95622253]
[7.50649166 109.72211456]
[-3.60564518 98.71963501]
[-4.99429798 83.14383698]
[3.99621248 70.34912109]
[19.12084198 66.37677002]
[33.23820496 73.10240173]
[39.68251038 87.35037994]
[54.17139816 91.23266602]
[68.66028595 95.11495209]
[73.18260193 89.13175201]
[67.34143829 75.31579590]
[82.22724152 77.16536713]
[86.74956512 71.18216705]
[79.06142426 58.30224228]
[71.37329102 45.42231369]
[63.68515015 32.54238510]
[55.99701309 19.66245651]
[48.30887604 6.78252935]
[40.62073898 -6.09739876]
[33.53791428 -11.85943508]
[32.91601562 -19.22103310]
[25.41601562 -32.21141434]
[17.91601562 -45.20179367]
[10.41601562 -58.19217682]
[2.91601539 -71.18255615]
[-4.58398485 -84.17293549]
[-12.08398438 -97.16332245]
[-27.14587021 -102.68772888]
[-32.08074188 -117.95294189]
[-23.10298347 -131.24877930]
[-7.09956741 -132.37582397]
[3.65305686 -120.46950531]
[0.90639645 -104.66332245]
[8.40639687 -91.67293549]
[15.90639687 -78.68255615]
[23.40639687 -65.69217682]
[30.90639687 -52.70179367]
[38.40639496 -39.71141434]
[45.90639496 -26.72103310]
[53.50066757 -13.78553581]
[61.18880463 -0.90560818]
[68.87693787 11.97431946]
[76.56507874 24.85424805]
[84.25321960 37.73417664]
[91.94135284 50.61410141]
[99.62949371 63.49403000]
[124.53777313 83.79142761]
[120.42837524 108.96210480]
[136.00260925 108.67771149]
[146.92088318 119.27233887]
[147.09602356 134.12174988]
[158.00663757 144.41537476]
[168.91723633 154.70899963]
[179.82785034 165.00262451]
[190.73844910 175.29624939]
[201.87101746 185.34941101]
[213.22023010 195.15731812]
[224.56945801 204.96522522]
[235.91867065 214.77314758]
[247.26789856 224.58105469]
[271.57577515 226.74577332]
[278.87149048 249.28720093]
[291.15878296 257.89083862]
[303.44607544 266.49447632]
[315.73333740 275.09814453]
[328.39398193 269.65380859]
[341.98373413 271.16329956]
[352.96578979 279.12615967]
[358.53512573 291.37649536]
[357.33471680 304.67105103]
[369.49557495 313.45251465]
[381.65643311 322.23394775]
[393.81729126 331.01538086]
[402.60305786 333.50082397]
[406.08987427 340.01403809]
[418.12173462 348.97140503]
[430.15359497 357.92880249]
[442.18542480 366.88616943]
[454.21728516 375.84353638]
[466.24911499 384.80093384]
[474.50195312 385.01794434]
[480.63043213 389.18362427]
[483.17385864 395.24026489]
[496.57833862 401.97225952]
[509.98284912 408.70422363]
[523.38732910 415.43621826]
[536.79180908 422.16821289]
[550.19628906 428.90020752]
[563.60076904 435.63220215]
[577.00531006 442.36416626]
[590.40979004 449.09616089]
[594.72442627 448.69097900]
[598.55895996 449.58755493]
[601.56359863 451.47573853]
[603.52490234 453.96365356]
[604.38079834 456.62927246]
[617.37121582 464.12927246]
[630.36157227 471.62927246]
[646.18151855 471.82867432]
[653.33502197 484.89300537]
[666.32537842 492.39300537]
[679.31579590 499.89300537]
[692.68688965 490.61907959]
[708.70648193 488.11450195]
[724.15881348 492.83065796]
[735.96435547 503.77456665]
[741.79351807 518.71746826]
[740.52630615 534.64855957]
[753.62438965 541.95880127]
[766.72247314 549.26910400]
[779.82055664 556.57940674]
[795.64172363 556.54864502]
[802.98449707 569.50756836]
[816.13537598 576.72241211]
[829.33843994 583.84143066]
[842.54144287 590.96044922]
[858.26104736 587.75518799]
[870.47509766 598.15698242]
[869.81396484 614.18640137]
[856.78485107 623.54705811]
[841.38256836 619.05828857]
[835.42242432 604.16345215]
[822.21942139 597.04443359]
[809.01641846 589.92541504]
[801.63983154 589.51788330]
[795.67419434 582.60565186]
[780.78991699 583.15924072]
[772.51031494 569.67749023]
[759.41223145 562.36718750]
[746.31414795 555.05688477]
[733.21606445 547.74664307]
[722.27630615 556.27514648]
[708.87011719 560.00238037]
[695.01226807 558.33392334]
[682.79833984 551.48883057]
[674.08807373 540.47149658]
[670.22216797 526.92443848]
[671.81579590 512.88336182]
[658.82537842 505.38339233]
[645.83502197 497.88339233]
[630.94421387 498.22042847]
[622.86157227 484.61965942]
[609.87121582 477.11965942]
[596.88079834 469.61965942]
[583.67779541 462.50064087]
[570.27331543 455.76867676]
[556.86883545 449.03668213]
[543.46429443 442.30468750]
[530.05981445 435.57269287]
[516.65533447 428.84072876]
[503.25085449 422.10873413]
[489.84637451 415.37673950]
[476.44186401 408.64474487]
[484.15673828 421.50866699]
[486.54199219 436.31781006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 133]
[19 132]
[20 131]
[21 130]
[25 125]
[26 124]
[27 123]
[28 122]
[37 120]
[38 119]
[39 118]
[40 117]
[41 116]
[45 115]
[46 114]
[47 113]
[48 112]
[49 111]
[52 108]
[57 69]
[58 68]
[59 67]
[73 106]
[74 105]
[75 104]
[76 103]
[77 102]
[78 101]
[79 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[143 213]
[144 212]
[145 211]
[146 210]
[147 209]
[148 208]
[149 207]
[150 206]
[151 205]
[156 204]
[157 203]
[158 202]
[160 200]
[161 199]
[162 198]
[168 191]
[169 190]
[170 189]
[171 188]
[173 186]
[174 184]
[175 183]
[176 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
