%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAGCUGAUAUUUUCUUUCCUCAGGACCAGCUGUUCAGGAGCAUCCCGGACGAGAGCCAGGCACAUUUGAGACUUGGAUCCAACUAAAGACCGCCGCAGAUUCUUCUGCAGCA\
) } def
/len { sequence length } bind def

/coor [
[89.55691528 152.96614075]
[77.23229980 144.41606140]
[75.23220825 129.55001831]
[84.85840607 118.04679108]
[72.14975739 126.01487732]
[59.44111633 133.98295593]
[46.73247528 141.95104980]
[34.02383041 149.91912842]
[33.69386673 158.56369019]
[29.93866348 166.25141907]
[23.46845245 171.70321655]
[15.43760204 174.04684448]
[7.23906231 172.95574951]
[0.26283404 168.69239807]
[-13.23897362 175.22700500]
[-26.74078178 181.76162720]
[-40.24258804 188.29623413]
[-45.19591522 203.30424500]
[-59.34809113 210.33924866]
[-74.30288696 205.22752380]
[-81.18788147 191.00177002]
[-75.91833496 176.10185242]
[-61.62057114 169.36764526]
[-46.77720261 174.79443359]
[-33.27539444 168.25981140]
[-19.77358818 161.72520447]
[-6.27178049 155.19058228]
[3.74942183 136.06539917]
[26.05574608 137.21049500]
[38.76438904 129.24240112]
[51.47303391 121.27432251]
[64.18167877 113.30623627]
[76.89031982 105.33815002]
[78.52615356 90.42761230]
[67.84735870 79.89369202]
[57.16856766 69.35977936]
[46.48977280 58.82586288]
[31.23155785 54.64287186]
[27.60437012 40.19667053]
[16.92557716 29.66275406]
[6.24678564 19.12883759]
[-9.27551079 12.31013680]
[-7.02028704 -4.49314547]
[9.75062466 -6.97766876]
[16.78070259 8.45004463]
[27.45949364 18.98396111]
[38.13828659 29.51787758]
[52.63268280 32.94741058]
[57.02368927 48.14707184]
[67.70248413 58.68098831]
[78.38127136 69.21490479]
[89.06006622 79.74881744]
[95.33174133 79.13632965]
[101.08618927 80.28800964]
[105.87031555 82.87392426]
[114.01123810 70.27529907]
[115.00236511 54.48516846]
[128.40843201 47.99467850]
[136.54936218 35.39605331]
[144.69029236 22.79743004]
[152.83120728 10.19880581]
[160.97213745 -2.39981818]
[168.94023132 -15.10846138]
[162.82916260 -29.37151146]
[166.30165100 -44.49505234]
[178.02243042 -54.66377640]
[193.48463440 -55.96759796]
[206.74272156 -47.90517426]
[212.69868469 -33.57667160]
[209.06234741 -18.49168968]
[197.23194885 -8.45071316]
[181.75651550 -7.31470203]
[180.95904541 0.13620745]
[173.57077026 5.74110746]
[165.42984009 18.33973122]
[157.28890991 30.93835640]
[149.14797974 43.53697968]
[141.00706482 56.13560486]
[140.59823608 71.02459717]
[126.60986328 78.41622162]
[118.46894073 91.01484680]
[131.65338135 83.86148071]
[142.32661438 73.32194519]
[156.59051514 68.68070984]
[171.42222595 70.92135620]
[183.67854309 79.56905365]
[190.76208496 92.79113770]
[191.17166138 107.78554535]
[184.82049561 121.37460327]
[173.05451965 130.67848206]
[158.36724854 133.72546387]
[143.87124634 129.86981201]
[132.63893127 119.92915344]
[119.08351898 113.50645447]
[127.90029907 125.64170837]
[142.27143860 132.25840759]
[143.49273682 147.10285950]
[152.30952454 159.23811340]
[161.12629700 171.37336731]
[169.94308472 183.50862122]
[178.75985718 195.64387512]
[193.95314026 201.81607056]
[195.93618774 218.09487915]
[182.66899109 227.73405457]
[167.79972839 220.81764221]
[166.62460327 204.46066284]
[157.80781555 192.32540894]
[148.99104309 180.19015503]
[140.17427063 168.05490112]
[131.35748291 155.91964722]
[117.61697388 150.17092896]
[115.76504517 134.45848083]
[106.94826508 122.32323456]
[111.58595276 136.58828735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 33]
[5 32]
[6 31]
[7 30]
[8 29]
[14 27]
[15 26]
[16 25]
[17 24]
[34 52]
[35 51]
[36 50]
[37 49]
[39 47]
[40 46]
[41 45]
[55 81]
[56 80]
[58 78]
[59 77]
[60 76]
[61 75]
[62 74]
[63 72]
[94 113]
[95 112]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
