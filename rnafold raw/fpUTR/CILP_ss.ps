%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAAGGCCGGCACUGGACUGCUGGAGAGGCGAAGGCUUGGACCCCCAGCUGAGGAGUCCUGCUCAAGACACGGUCACUGGAUCUGAGAAACUUCCCAGGGGACCGCAUUCCAGAGUCAGUGACUCUGUGAAGCACCCACAUCUACCUCUUGCCACGUUCCCACGGGCUUGGGGGAAAG\
) } def
/len { sequence length } bind def

/coor [
[37.90817642 252.69093323]
[34.03747940 260.04299927]
[28.89311218 266.55792236]
[22.65051460 272.01800537]
[15.52176952 276.24145508]
[7.74839354 279.08840942]
[-0.40684798 280.46554565]
[-8.66882133 280.32931519]
[-16.75930786 278.68701172]
[-24.40637016 275.59671021]
[-33.34835815 287.63998413]
[-42.29034424 299.68328857]
[-51.23233032 311.72656250]
[-60.17432022 323.76986694]
[-69.11630249 335.81314087]
[-66.55812073 351.40902710]
[-75.84488678 364.19696045]
[-91.46693420 366.59011841]
[-104.15597534 357.16867065]
[-106.38383484 341.52218628]
[-96.82875061 328.93347168]
[-81.15959930 326.87115479]
[-72.21761322 314.82788086]
[-63.27562332 302.78457642]
[-54.33363342 290.74130249]
[-45.39164734 278.69799805]
[-36.44966125 266.65472412]
[-38.93825531 263.83145142]
[-41.18179321 260.80978394]
[-43.16453171 257.61096191]
[-57.27949905 262.68713379]
[-71.39446259 267.76333618]
[-85.50942993 272.83953857]
[-95.67978668 285.70407104]
[-111.86456299 283.06112671]
[-117.41424561 267.62957764]
[-106.61979675 255.28404236]
[-90.58562469 258.72457886]
[-76.47065735 253.64837646]
[-62.35569382 248.57218933]
[-48.24073029 243.49598694]
[-45.70256805 218.39166260]
[-29.99717331 198.53173828]
[-5.98902607 190.21876526]
[18.80397224 196.15512085]
[28.35734940 184.59083557]
[37.91072845 173.02653503]
[47.46410370 161.46223450]
[57.01748276 149.89793396]
[66.57086182 138.33363342]
[76.12423706 126.76934052]
[84.13076782 87.54543304]
[76.93170166 74.38588715]
[69.73264313 61.22634888]
[56.32146454 52.83283997]
[57.00112534 37.95375061]
[49.80206299 24.79421043]
[42.60300064 11.63467026]
[35.40393829 -1.52487040]
[28.20487785 -14.68441105]
[16.33284378 -15.74596214]
[6.55421877 -22.34925461]
[1.24306321 -32.75110245]
[1.62076092 -44.30422592]
[7.47711039 -54.13071823]
[0.73655450 -67.53089905]
[-6.00400162 -80.93108368]
[-12.74455738 -94.33126831]
[-19.41398811 -100.61154938]
[-19.48356056 -108.02142334]
[-25.99181557 -121.53595734]
[-40.63795090 -126.83959198]
[-47.04573059 -140.63795471]
[-41.89926910 -154.56813049]
[-48.40752411 -168.08265686]
[-54.91578293 -181.59719849]
[-67.23568726 -193.24435425]
[-59.45419693 -208.30703735]
[-42.82602692 -204.99942017]
[-41.40124893 -188.10545349]
[-34.89299393 -174.59091187]
[-28.38473701 -161.07638550]
[-14.28492928 -156.41473389]
[-7.49211216 -142.80178833]
[-12.47728348 -128.04421997]
[-5.96902752 -114.52968597]
[0.65562552 -101.07182312]
[7.39618158 -87.67163849]
[14.13673782 -74.27145386]
[20.87729263 -60.87127304]
[38.55875015 -56.20267487]
[47.38711166 -39.82439423]
[41.36441803 -21.88347244]
[48.56348038 -8.72393227]
[55.76254272 4.43560791]
[62.96160507 17.59514809]
[70.16066742 30.75468826]
[83.05691528 38.20693970]
[82.89218140 54.02728653]
[90.09123993 67.18682861]
[97.29030609 80.34636688]
[111.75661469 84.31195831]
[124.65982819 76.66296387]
[137.56304932 69.01397705]
[139.65240479 58.30630112]
[147.14636230 50.68326187]
[157.38668823 48.50321579]
[166.92636108 52.25228500]
[180.08590698 45.05322266]
[186.13223267 38.17099762]
[193.53529358 37.84570694]
[206.81713867 30.87485695]
[220.09898376 23.90401077]
[233.32015991 16.81879234]
[246.47970581 9.61972904]
[259.63925171 2.42066717]
[272.79876709 -4.77839518]
[285.95831299 -11.97745705]
[299.11785889 -19.17651939]
[312.27740479 -26.37558174]
[323.27124023 -39.28184509]
[338.71652222 -32.29045105]
[336.27404785 -15.51336479]
[319.47647095 -13.21604156]
[306.31692505 -6.01697874]
[293.15737915 1.18208325]
[279.99783325 8.38114548]
[266.83831787 15.58020782]
[253.67875671 22.77927017]
[240.51922607 29.97833252]
[236.14874268 35.96247101]
[227.06982422 37.18585205]
[213.78797913 44.15669632]
[200.50614929 51.12754440]
[187.28495789 58.21276474]
[174.12542725 65.41182709]
[165.34121704 82.62067413]
[145.21203613 81.91719055]
[132.30882263 89.56618500]
[119.40560150 97.21517181]
[118.11740875 104.60371399]
[133.10816956 104.07722473]
[148.09892273 103.55073547]
[161.43206787 96.67852783]
[176.24478149 99.04146576]
[186.77807617 109.72086334]
[188.93675232 124.56472778]
[181.88153076 137.80194092]
[168.35540771 144.28605652]
[153.61714172 141.49613953]
[143.39721680 130.51777649]
[129.46911621 124.94928741]
[115.54102325 119.38079834]
[114.25283051 126.76934052]
[123.80621338 138.33363342]
[133.35958862 149.89793396]
[141.25929260 154.53666687]
[142.97598267 161.74528503]
[152.32832336 173.47276306]
[161.68066406 185.20022583]
[177.13557434 190.68457031]
[179.84696960 206.85801697]
[167.02558899 217.08271790]
[151.86099243 210.84037781]
[149.95320129 194.55258179]
[140.60084534 182.82510376]
[131.24850464 171.09762573]
[121.79528809 159.45130920]
[112.24191284 147.88700867]
[102.68853760 136.32272339]
[87.68853760 136.32272339]
[78.13515472 147.88700867]
[68.58177948 159.45130920]
[59.02840424 171.01560974]
[49.47502518 182.57991028]
[39.92164612 194.14421082]
[30.36827087 205.70849609]
[35.20938110 212.51727295]
[38.72147751 220.08918762]
[40.78879929 228.16804504]
[41.34440994 236.48104858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 27]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[30 41]
[31 40]
[32 39]
[33 38]
[45 177]
[46 176]
[47 175]
[48 174]
[49 173]
[50 172]
[51 171]
[52 101]
[53 100]
[54 99]
[56 97]
[57 96]
[58 95]
[59 94]
[60 93]
[65 90]
[66 89]
[67 88]
[68 87]
[70 86]
[71 85]
[74 82]
[75 81]
[76 80]
[102 140]
[103 139]
[104 138]
[108 136]
[109 135]
[111 134]
[112 133]
[113 132]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[119 125]
[120 124]
[154 170]
[155 169]
[156 168]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
