%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUGAUUGGCUGUUGCCAUGGAUACGCUUUGUGUAGCGGCUAUGGGCGCUGUCUUACAACAAAGCCAAGGAAUCUCGCUGCUGAGGGUUCUGUGCUUUAUUAUGAAGAAUA\
) } def
/len { sequence length } bind def

/coor [
[165.07104492 112.91458893]
[150.12413025 111.65383148]
[135.17720032 110.39307404]
[120.23027802 109.13231659]
[105.28335571 107.87155914]
[100.48080444 110.34444427]
[94.63294220 109.86555481]
[89.54158020 106.09788513]
[74.68885803 104.00102997]
[59.83614349 101.90417480]
[45.08987427 107.63637543]
[33.56916809 98.19589996]
[18.71645355 96.09904480]
[6.16968918 105.33032227]
[-8.86320686 102.99222565]
[-17.58649826 90.97391510]
[-32.43921661 88.87705994]
[-47.29193115 86.78020477]
[-62.14464951 84.68334961]
[-76.99736786 82.58649445]
[-91.85008240 80.48963928]
[-100.29615784 87.62690735]
[-111.06560516 88.83040619]
[-120.48577118 83.93748474]
[-125.48124695 74.82296753]
[-140.19302368 71.89660645]
[-154.90480042 68.97025299]
[-169.61657715 66.04389954]
[-182.61647034 75.03158569]
[-198.14881897 72.11237335]
[-206.99855042 59.01818848]
[-203.91528320 43.51757431]
[-190.72827148 34.80677032]
[-175.26112366 38.05374527]
[-166.69023132 51.33212280]
[-151.97845459 54.25847626]
[-137.26666260 57.18482971]
[-122.55489349 60.11118698]
[-104.88706207 52.46609497]
[-89.75322723 65.63692474]
[-74.90051270 67.73377991]
[-60.04779434 69.83063507]
[-45.19507599 71.92749023]
[-30.34235954 74.02434540]
[-15.48964310 76.12120056]
[-3.78018641 66.98751831]
[11.31245136 68.90244293]
[20.81330681 81.24632263]
[35.66602325 83.34317780]
[49.34992981 77.46099854]
[61.93299866 87.05146027]
[76.78571320 89.14831543]
[91.63843536 91.24517059]
[106.54411316 92.92463684]
[121.49103546 94.18539429]
[136.43795776 95.44615173]
[151.38488770 96.70690918]
[166.33180237 97.96766663]
[182.91488647 78.74416351]
[208.01216125 76.81465912]
[227.00920105 92.99664307]
[241.53375244 89.25000000]
[256.05831909 85.50334930]
[270.58285522 81.75670624]
[285.10742188 78.01005554]
[293.16644287 64.68003082]
[307.94979858 61.08730316]
[320.60827637 68.85251617]
[335.13281250 65.10586548]
[349.65737915 61.35922241]
[364.18191528 57.61257553]
[375.61209106 46.67356110]
[389.86856079 50.98664093]
[404.39309692 47.23999405]
[418.91766357 43.49334717]
[433.44219971 39.74670029]
[441.25509644 26.00863838]
[456.51583862 21.89952278]
[470.17053223 29.85721970]
[474.11807251 45.16056824]
[466.01644897 58.73036575]
[450.67224121 62.51588821]
[437.18884277 54.27125549]
[422.66430664 58.01790237]
[408.13973999 61.76454926]
[393.61520386 65.51119232]
[383.22393799 76.18222046]
[367.92858887 72.13712311]
[353.40402222 75.88377380]
[338.87945557 79.63042450]
[324.35491943 83.37706757]
[317.03210449 96.29650879]
[302.35549927 100.30304718]
[288.85406494 92.53460693]
[274.32949829 96.28125763]
[259.80496216 100.02790070]
[245.28041077 103.77455139]
[230.75585938 107.52119446]
[230.28547668 114.05974579]
[228.51397705 120.38314819]
[225.50851440 126.23472595]
[221.38645935 131.37599182]
[216.31076050 135.59640503]
[210.48355103 138.72195435]
[204.13809204 140.62234497]
[197.52938843 141.21644592]
[190.92404175 140.47570801]
[184.58938599 138.42550659]
[178.78271484 135.14433289]
[173.74089050 130.76075745]
[169.67054749 125.44844055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 58]
[2 57]
[3 56]
[4 55]
[5 54]
[8 53]
[9 52]
[10 51]
[12 49]
[13 48]
[16 45]
[17 44]
[18 43]
[19 42]
[20 41]
[21 40]
[25 38]
[26 37]
[27 36]
[28 35]
[61 98]
[62 97]
[63 96]
[64 95]
[65 94]
[68 91]
[69 90]
[70 89]
[71 88]
[73 86]
[74 85]
[75 84]
[76 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
