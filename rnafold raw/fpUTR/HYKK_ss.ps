%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCGCUGCGGCCCCUGCUCUACCUCCUAGCGCCGGUGCGCGGCCGAGGCCGCACUACCUGUCUGCGGGAAAGCGGGAUCCACCCCAGGACGUCGGGUCGCUGCCGACAUA\
) } def
/len { sequence length } bind def

/coor [
[94.45475769 306.42068481]
[82.95833588 297.02026367]
[81.48918152 281.87774658]
[91.42715454 269.88296509]
[90.18846130 254.93420410]
[88.94977570 239.98544312]
[87.71108246 225.03666687]
[84.60282135 221.24516296]
[83.93716431 215.42442322]
[86.83923340 209.23406982]
[86.42591858 194.23977661]
[86.01260376 179.24546814]
[85.59928894 164.25115967]
[85.18597412 149.25685120]
[84.77265167 134.26255798]
[84.35933685 119.26824951]
[86.49174500 93.08252716]
[78.99174500 80.09214783]
[71.49174500 67.10176086]
[63.99174881 54.11138153]
[56.49174881 41.12100220]
[47.85907364 40.47613144]
[40.30876160 36.43936539]
[35.09505844 29.76839828]
[33.04856491 21.65074921]
[34.44458008 13.49272060]
[38.96876526 6.67582130]
[32.94333267 -7.06077862]
[26.91790199 -20.79737854]
[20.89247131 -34.53397751]
[14.49198055 -41.24852753]
[14.89606953 -48.73308563]
[9.25142956 -62.63049698]
[3.22599792 -76.36709595]
[-3.17564869 -89.93245697]
[-16.06251907 -99.11064148]
[-14.49693680 -113.92273712]
[-20.89858246 -127.48809814]
[-27.30023003 -141.05345154]
[-33.88817978 -154.52931213]
[-47.02305603 -163.34893799]
[-45.86620331 -178.19854736]
[-52.63920593 -191.58235168]
[-59.41220474 -204.96617126]
[-66.18520355 -218.34999084]
[-72.95820618 -231.73379517]
[-86.97549438 -240.24542236]
[-86.34239197 -256.63235474]
[-71.71018219 -264.03710938]
[-58.13122940 -254.84231567]
[-59.57439423 -238.50679016]
[-52.80139160 -225.12298584]
[-46.02839279 -211.73916626]
[-39.25539017 -198.35536194]
[-32.48239136 -184.97154236]
[-19.83196449 -177.10923767]
[-20.50436592 -161.30232239]
[-14.59482479 -156.69154358]
[-13.73487282 -147.45509338]
[-7.33322573 -133.88973999]
[-0.93157935 -120.32438660]
[11.49740314 -112.11648560]
[10.38970852 -96.33409882]
[16.79135513 -82.76874542]
[21.03172302 -80.30782318]
[23.69609261 -75.09004211]
[23.14883995 -68.27513885]
[28.79347992 -54.37772751]
[34.62907028 -40.55941010]
[40.65450287 -26.82280922]
[46.67993164 -13.08621025]
[52.70536423 0.65039003]
[71.44483185 11.37326527]
[69.48213196 33.62100220]
[76.98213196 46.61138153]
[84.48213196 59.60176468]
[91.98213196 72.59214783]
[99.48213196 85.58252716]
[112.03962708 93.78675079]
[126.94858551 95.43687439]
[141.89735413 96.67556000]
[156.87457275 97.50187683]
[171.85180664 98.32819366]
[183.45710754 87.60007477]
[199.24571228 88.30381012]
[209.85054016 100.02188873]
[208.97991943 115.80217743]
[197.15037537 126.28251648]
[181.38017273 125.24510193]
[171.02548218 113.30541992]
[156.04826355 112.47910309]
[141.07104492 111.65278625]
[136.88853455 114.21080780]
[131.03152466 114.07066345]
[125.29846191 110.34583282]
[110.38950348 108.69570923]
[99.35364532 118.85493469]
[99.76696014 133.84924316]
[100.18027496 148.84353638]
[100.59358978 163.83784485]
[101.00690460 178.83215332]
[101.42021942 193.82646179]
[101.83353424 208.82075500]
[102.65985107 223.79798889]
[103.89854431 238.74674988]
[105.13722992 253.69551086]
[106.37592316 268.64428711]
[118.15263367 278.83972168]
[119.19588470 294.01754761]
[109.40352631 305.18200684]
[119.18745422 318.34280396]
[112.43434143 333.28695679]
[96.09120178 334.64117432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 110]
[4 107]
[5 106]
[6 105]
[7 104]
[10 103]
[11 102]
[12 101]
[13 100]
[14 99]
[15 98]
[16 97]
[17 78]
[18 77]
[19 76]
[20 75]
[21 74]
[27 72]
[28 71]
[29 70]
[30 69]
[32 68]
[33 67]
[34 64]
[35 63]
[37 61]
[38 60]
[39 59]
[40 57]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[79 96]
[80 95]
[81 92]
[82 91]
[83 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
