%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCGCGGCUCGGGGGGCGGGGUCUGUGGCGGCGCAGCUUACACCGCGGUCCCCUUAUUUGGAUCUGCGGGAAUGUGGGCUGGAGAGGUCCUGCCGUGGUACCAGCCUCCAGCCUGCCCCCAGGACUGCCCCUGACCCAGGCGCGCCCGCUGCUCGGUGGCAGGAGGGCCGGCGGAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[232.71861267 333.20553589]
[232.60296631 327.93923950]
[224.80920410 315.12292480]
[217.01544189 302.30664062]
[209.22169495 289.49035645]
[203.04512024 285.39913940]
[201.40643311 276.38806152]
[193.83261108 263.44055176]
[186.25880432 250.49307251]
[173.15397644 243.41406250]
[172.86454773 227.59548950]
[165.29074097 214.64801025]
[152.18591309 207.56898499]
[151.89648438 191.75042725]
[144.32267761 178.80294800]
[136.41978455 166.05364990]
[128.19300842 153.51092529]
[119.96623230 140.96818542]
[111.73945618 128.42546082]
[103.51268005 115.88272858]
[89.51203156 110.49923706]
[75.00128937 114.29899597]
[60.49053955 118.09876251]
[45.97978973 121.89852142]
[34.58972931 132.87928772]
[20.31758690 128.61839294]
[5.80683994 132.41815186]
[-8.70390797 136.21791077]
[-23.21465492 140.01768494]
[-37.72540283 143.81744385]
[-52.23615265 147.61720276]
[-63.62621307 158.59796143]
[-77.89835358 154.33706665]
[-81.88045502 169.17076111]
[-92.75724030 180.01470947]
[-107.60290527 183.95193481]
[-122.42404938 179.92335510]
[-133.23384094 169.01263428]
[-137.12452698 154.15470886]
[-133.04949951 139.34626770]
[-122.10494995 128.57072449]
[-107.23489380 124.72663879]
[-92.43930054 128.84805298]
[-81.69812012 139.82632446]
[-71.34596252 129.11735535]
[-56.03591537 133.10646057]
[-41.52516556 129.30670166]
[-27.01441765 125.50693512]
[-12.50367069 121.70716858]
[2.00707722 117.90740967]
[16.51782417 114.10764313]
[26.86997986 103.39866638]
[42.18002701 107.38777924]
[56.69077682 103.58801270]
[71.20152283 99.78825378]
[85.71227264 95.98848724]
[70.77497864 94.61838531]
[60.61250687 83.58551025]
[60.47177505 68.58617401]
[70.42543030 57.36455536]
[85.33438873 55.71440887]
[97.50112152 64.48770142]
[100.64358521 79.15679932]
[102.68608856 64.29650879]
[96.89997864 49.57131195]
[106.29824066 38.01614380]
[108.34074402 23.15585327]
[110.38323975 8.29556465]
[112.42574310 -6.56472397]
[110.49130249 -15.51697445]
[114.63206482 -21.66044807]
[116.92797852 -36.48369980]
[119.22388458 -51.30694962]
[117.31539917 -56.21664047]
[117.48059082 -60.89537048]
[119.27978516 -64.58709717]
[122.03562927 -66.82247925]
[125.08747101 -81.50873566]
[128.13931274 -96.19499969]
[131.19114685 -110.88125610]
[134.24299622 -125.56752014]
[137.29483032 -140.25378418]
[140.34667969 -154.94004822]
[143.39851379 -169.62631226]
[146.45034790 -184.31256104]
[149.50219727 -198.99882507]
[152.55403137 -213.68508911]
[145.36308289 -232.50061035]
[158.79833984 -246.38752747]
[161.34700012 -261.16943359]
[163.89566040 -275.95132446]
[166.31802368 -290.75442505]
[168.61393738 -305.57766724]
[159.07972717 -318.18218994]
[161.33348083 -333.82498169]
[174.03810120 -343.22540283]
[189.65617371 -340.80636597]
[198.92175293 -328.00308228]
[196.33773804 -312.41146851]
[183.43719482 -303.28176880]
[181.14128113 -288.45849609]
[183.22953796 -281.35025024]
[178.67755127 -273.40264893]
[176.12889099 -258.62075806]
[173.58024597 -243.83886719]
[180.21571350 -236.02990723]
[181.47116089 -225.63818359]
[176.68983459 -216.08023071]
[167.24029541 -210.63325500]
[164.18846130 -195.94699097]
[161.13661194 -181.26072693]
[158.08477783 -166.57446289]
[155.03292847 -151.88819885]
[151.98109436 -137.20193481]
[148.92926025 -122.51567841]
[145.87741089 -107.82942200]
[142.82557678 -93.14315796]
[139.77372742 -78.45689392]
[136.72189331 -63.77063370]
[134.04713440 -49.01103973]
[131.75122070 -34.18778610]
[129.45532227 -19.36453629]
[127.28602600 -4.52222443]
[125.24353027 10.33806515]
[123.20102692 25.19835472]
[121.15853119 40.05864334]
[127.09073639 53.72093582]
[117.54637909 66.33901215]
[115.50387573 81.19929504]
[116.05541229 107.65594482]
[124.28218842 120.19867706]
[132.50897217 132.74140930]
[140.73574829 145.28414917]
[148.96252441 157.82687378]
[153.66873169 160.19309998]
[156.68072510 163.77719116]
[157.81840515 167.72326660]
[157.27015686 171.22912598]
[164.84397888 184.17662048]
[178.49053955 192.18173218]
[178.23823547 207.07420349]
[185.81204224 220.02168274]
[199.45860291 228.02679443]
[199.20629883 242.91926575]
[206.78010559 255.86676025]
[214.35391235 268.81423950]
[222.03797913 281.69659424]
[229.83174133 294.51287842]
[237.62550354 307.32919312]
[245.41925049 320.14547729]
[253.53866577 332.75796509]
[261.97839355 345.15841675]
[269.41226196 350.50839233]
[270.45422363 357.84341431]
[278.68099976 370.38613892]
[286.90777588 382.92886353]
[295.13455200 395.47161865]
[309.17306519 402.76751709]
[309.68359375 417.65338135]
[317.91036987 430.19610596]
[326.24392700 442.66815186]
[334.68362427 455.06860352]
[343.12335205 467.46905518]
[358.69458008 470.17327881]
[367.72445679 483.14389038]
[364.85574341 498.68563843]
[351.79040527 507.57788086]
[336.27984619 504.54504395]
[327.52621460 491.38638306]
[330.72290039 475.90878296]
[322.28317261 463.50833130]
[313.84347534 451.10787964]
[307.46551514 447.33825684]
[305.36761475 438.42288208]
[297.14083862 425.88015747]
[283.69076538 419.48138428]
[282.59182739 403.69839478]
[274.36505127 391.15563965]
[266.13827515 378.61291504]
[257.91149902 366.07019043]
[249.57794189 353.59814453]
[241.13821411 341.19769287]
[237.73669434 340.18710327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[7 146]
[8 145]
[9 144]
[11 142]
[12 141]
[14 139]
[15 138]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 56]
[22 55]
[23 54]
[24 53]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[33 44]
[63 129]
[64 128]
[66 126]
[67 125]
[68 124]
[69 123]
[71 122]
[72 121]
[73 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
[83 113]
[84 112]
[85 111]
[86 110]
[87 109]
[89 105]
[90 104]
[91 103]
[92 101]
[93 100]
[151 182]
[152 181]
[154 180]
[155 179]
[156 178]
[157 177]
[159 175]
[160 174]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
