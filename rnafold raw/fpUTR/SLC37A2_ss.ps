%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGCGGGGAAGCAAAGCACAGGAGCGCUGUGGUGCCAGCGGCCGGGCUAGGGACGACUGGCGGGUUUGCGCUGGACCCGACCCCGAGGGCGGGCGCAAGGGGGCGGGCGCUGCCGUACUCAGGCCGCGGGGCCAGGGCGGGCCGGCCGGCGGGGCAUUUAAACCCCGCUGACAGCCAGUCCAGCCCGGGACACGCGCCCAGCUCUGUAGCCUCCUCCGUCGACUCAGCCUUAGGUACCGGUCAGGCAAA\
) } def
/len { sequence length } bind def

/coor [
[-42.36187363 535.56970215]
[-42.66108704 543.53527832]
[-45.07981873 551.54815674]
[-49.64750290 559.03424072]
[-56.23670197 565.41131592]
[-59.75656509 579.99249268]
[-51.30282593 593.34576416]
[-54.84878159 608.74713135]
[-68.29068756 617.05920410]
[-83.65368652 613.35064697]
[-91.82319641 599.82159424]
[-87.95238495 584.49865723]
[-74.33773804 576.47265625]
[-70.81787109 561.89147949]
[-77.59529114 558.67956543]
[-84.01940918 572.23425293]
[-97.57403564 565.80993652]
[-91.15013123 552.25567627]
[-97.92755127 549.04370117]
[-106.98461914 561.00067139]
[-116.04167938 572.95770264]
[-125.09874725 584.91467285]
[-134.15582275 596.87164307]
[-133.39587402 612.89666748]
[-145.54551697 623.37359619]
[-161.28459167 620.26538086]
[-168.53942871 605.95642090]
[-161.74472046 591.42327881]
[-146.11280823 587.81457520]
[-137.05574036 575.85760498]
[-127.99867249 563.90063477]
[-118.94160461 551.94360352]
[-109.88453674 539.98663330]
[-96.48484039 511.35125732]
[-71.04449463 507.48760986]
[-65.21797180 493.66546631]
[-59.39144897 479.84332275]
[-53.56492996 466.02117920]
[-58.24121475 456.97210693]
[-57.15591049 446.62368774]
[-50.42648697 438.40219116]
[-40.07831192 435.16186523]
[-33.90900421 421.48928833]
[-27.73969841 407.81668091]
[-21.57039261 394.14410400]
[-15.40108585 380.47152710]
[-9.23177910 366.79891968]
[-12.53402996 347.73144531]
[4.06690264 336.26565552]
[9.89342499 322.44351196]
[15.71994686 308.62139893]
[21.54646873 294.79925537]
[27.37298965 280.97711182]
[33.19951248 267.15496826]
[27.36508942 253.49862671]
[33.07711029 239.39801025]
[47.44067383 233.37092590]
[53.26719666 219.54878235]
[50.16025543 202.26560974]
[64.96041107 191.28900146]
[70.61416626 177.39529419]
[76.26792908 163.50158691]
[81.92168427 149.60787964]
[87.57544708 135.71418762]
[93.22920227 121.82047272]
[79.59204865 128.06771851]
[67.96376801 118.59233093]
[71.32859039 103.97460175]
[85.93044281 100.53719330]
[72.94006348 93.03719330]
[59.94968414 85.53719330]
[46.95930099 78.03719330]
[33.96892166 70.53719330]
[20.97854042 63.03719330]
[5.15859032 62.83780670]
[-1.99490047 49.77347183]
[-10.96534538 48.20021439]
[-15.09963894 42.09813690]
[-27.99551392 34.43677902]
[-40.89138794 26.77541733]
[-55.09074783 33.03303909]
[-70.24924469 29.71648979]
[-80.53813171 18.10105324]
[-82.00112152 2.65309834]
[-74.07566833 -10.68731880]
[-59.80925751 -16.79053497]
[-44.68762970 -13.30974102]
[-34.52534866 -1.58337176]
[-33.23002625 13.87954426]
[-20.33415413 21.54090309]
[-7.43827963 29.20226288]
[5.50509930 36.78308868]
[20.39589119 36.44602585]
[28.47854042 50.04681015]
[41.46892166 57.54681015]
[54.45930099 65.04681396]
[67.44968414 72.54681396]
[80.44006348 80.04681396]
[93.43044281 87.54681396]
[108.32537079 85.77446747]
[119.19310760 75.43559265]
[130.06083679 65.09671783]
[140.92857361 54.75783920]
[151.79631042 44.41896439]
[162.66404724 34.08008957]
[173.53178406 23.74121475]
[183.80271912 12.80924702]
[193.44451904 1.31858003]
[203.08633423 -10.17208672]
[212.72814941 -21.66275406]
[222.36996460 -33.15341949]
[232.01177979 -44.64408493]
[241.58178711 -56.19462967]
[251.07960510 -67.80460358]
[260.50488281 -79.47354889]
[269.85720825 -91.20101929]
[267.29772949 -96.55850220]
[266.09695435 -102.33769989]
[266.30795288 -108.20167542]
[267.90188599 -113.81259155]
[270.77084351 -118.85112000]
[274.73474121 -123.03468323]
[279.55276489 -126.13323212]
[284.93780518 -127.98188782]
[286.24514771 -142.92480469]
[287.55249023 -157.86772156]
[288.85983276 -172.81063843]
[281.44262695 -187.43655396]
[290.62585449 -201.02331543]
[306.96261597 -199.59403992]
[313.64700317 -184.61903381]
[303.80273438 -171.50331116]
[302.49539185 -156.56039429]
[301.18807983 -141.61746216]
[299.88073730 -126.67454529]
[301.75863647 -125.75713348]
[303.54812622 -124.67739105]
[315.39126587 -133.88281250]
[327.23443604 -143.08824158]
[339.07757568 -152.29365540]
[350.86312866 -161.57272339]
[362.59060669 -170.92506409]
[374.31805420 -180.27742004]
[386.04553223 -189.62976074]
[392.01080322 -204.28329468]
[406.78552246 -206.16935730]
[418.51300049 -215.52169800]
[430.24047852 -224.87405396]
[441.79101562 -234.44404602]
[453.16058350 -244.22836304]
[464.53018188 -254.01268005]
[475.89974976 -263.79699707]
[487.26931763 -273.58129883]
[498.63888550 -283.36560059]
[510.00848389 -293.14990234]
[521.37805176 -302.93423462]
[519.96856689 -318.38714600]
[527.94018555 -331.70004272]
[542.22766113 -337.75378418]
[557.33715820 -334.22064209]
[567.45874023 -322.45913696]
[568.70050049 -306.99182129]
[560.58489990 -293.76620483]
[546.23260498 -287.86779785]
[531.16235352 -291.56466675]
[519.79278564 -281.78033447]
[508.42321777 -271.99603271]
[497.05361938 -262.21173096]
[485.68405151 -252.42741394]
[474.31448364 -242.64309692]
[462.94491577 -232.85877991]
[451.57531738 -223.07447815]
[450.94213867 -219.63111877]
[448.62539673 -216.31852722]
[444.70230103 -213.91764832]
[439.59280396 -213.14657593]
[427.86535645 -203.79423523]
[416.13787842 -194.44187927]
[411.01141357 -180.45729065]
[395.39788818 -177.90229797]
[383.67041016 -168.54994202]
[371.94293213 -159.19760132]
[360.21545410 -149.84524536]
[356.95416260 -143.23529053]
[348.28298950 -140.45050049]
[336.43984985 -131.24508667]
[324.59671021 -122.03966522]
[312.75354004 -112.83424377]
[307.33554077 -87.64128113]
[281.58468628 -81.84867859]
[272.23233032 -70.12120056]
[270.52365112 -62.95125580]
[262.68957520 -58.30678177]
[253.19175720 -46.69681168]
[251.39382935 -39.54872131]
[243.50245667 -35.00227356]
[233.86064148 -23.51160622]
[224.21882629 -12.02093887]
[214.57701111 -0.53027242]
[204.93519592 10.96039391]
[195.29338074 22.45106125]
[209.93646240 19.19832039]
[224.04411316 24.29477882]
[233.22756958 36.15496826]
[234.62992859 51.08927155]
[227.81491089 64.45173645]
[214.90261841 72.08540344]
[199.90998840 71.61550140]
[187.50109863 63.18819809]
[181.53625488 49.42517853]
[183.87065125 34.60895157]
[173.00291443 44.94782639]
[162.13517761 55.28670120]
[151.26745605 65.62557220]
[140.39971924 75.96444702]
[129.53198242 86.30332947]
[118.66424561 96.64220428]
[107.12290955 127.47423553]
[101.46914673 141.36793518]
[95.81539154 155.26164246]
[90.16162872 169.15534973]
[84.50787354 183.04905701]
[78.85411835 196.94274902]
[83.13348389 209.09197998]
[78.15843964 220.53790283]
[67.08934021 225.37530518]
[61.26281738 239.19744873]
[66.97739410 253.68818665]
[60.87157059 267.62280273]
[47.02165604 272.98147583]
[41.19513321 286.80361938]
[35.36861038 300.62576294]
[29.54208946 314.44790649]
[23.71556854 328.27005005]
[17.88904572 342.09219360]
[22.55225945 351.88192749]
[21.10265732 362.40698242]
[14.25492859 370.24127197]
[4.44080830 372.96823120]
[-1.72849810 386.64080811]
[-7.89780474 400.31341553]
[-14.06711102 413.98599243]
[-20.23641777 427.65859985]
[-26.40572357 441.33117676]
[-23.51922417 461.29922485]
[-39.74278641 471.84768677]
[-45.56930923 485.66983032]
[-51.39582825 499.49197388]
[-57.22235107 513.31408691]
[-51.85712814 516.77850342]
[-47.30311584 521.80236816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 14]
[6 13]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[35 249]
[36 248]
[37 247]
[38 246]
[42 244]
[43 243]
[44 242]
[45 241]
[46 240]
[47 239]
[49 235]
[50 234]
[51 233]
[52 232]
[53 231]
[54 230]
[57 227]
[58 226]
[60 223]
[61 222]
[62 221]
[63 220]
[64 219]
[65 218]
[69 99]
[70 98]
[71 97]
[72 96]
[73 95]
[74 94]
[76 92]
[78 91]
[79 90]
[80 89]
[100 217]
[101 216]
[102 215]
[103 214]
[104 213]
[105 212]
[106 211]
[107 201]
[108 200]
[109 199]
[110 198]
[111 197]
[112 196]
[113 194]
[114 193]
[115 191]
[116 190]
[124 135]
[125 134]
[126 133]
[127 132]
[137 188]
[138 187]
[139 186]
[140 185]
[141 183]
[142 182]
[143 181]
[144 180]
[146 178]
[147 177]
[148 176]
[149 172]
[150 171]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
[156 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
