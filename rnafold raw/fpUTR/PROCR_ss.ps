%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGAGGGAGGCCGGCCCCCUAGUAGGAAAUGAGACACAGUAGAAAUAACACUUUAUAAGCCUCUUCCUCCUCCCAUCUCCUGGCCUCCUUCCAUCCUCCUCUGCCCAGACUCCGCCCCUCCCAGACGGUCCUCACUUCUCUUUUCCCUAGACUGCAGCCAGCGGAGCCCGCAGCCGGCCCGAGCCAGGAACCCAGGUCCGGAGCCUCAACUUCAGG\
) } def
/len { sequence length } bind def

/coor [
[52.63628387 136.01416016]
[48.67806244 130.10649109]
[45.45289612 123.76878357]
[43.00685120 117.09159088]
[28.21049881 119.55492401]
[13.41414833 122.01825714]
[-1.38220179 124.48159027]
[-16.17855263 126.94492340]
[-30.97490311 129.40824890]
[-45.77125168 131.87158203]
[-60.56760406 134.33491516]
[-75.36395264 136.79824829]
[-90.16030121 139.26158142]
[-104.95665741 141.72491455]
[-119.75300598 144.18824768]
[-134.54936218 146.65158081]
[-138.10855103 163.14881897]
[-147.71226501 176.98190308]
[-161.86286926 186.04328918]
[-178.37266541 188.96559143]
[-194.70205688 185.32804871]
[-208.35025024 175.71665955]
[-217.23815918 161.63015747]
[-231.95774841 164.51693726]
[-244.01089478 174.76545715]
[-257.98931885 169.62217712]
[-272.70889282 172.50895691]
[-287.42849731 175.39572144]
[-302.14810181 178.28250122]
[-316.86770630 181.16928101]
[-322.08526611 185.21424866]
[-327.71725464 185.91622925]
[-332.05062866 183.92135620]
[-346.84698486 186.38468933]
[-361.64334106 188.84802246]
[-365.86517334 202.18025208]
[-375.37310791 212.34518433]
[-388.27078247 217.39884949]
[-402.02142334 216.40846252]
[-413.94674683 209.62408447]
[-421.74865723 198.41868591]
[-436.57882690 200.66952515]
[-451.40896606 202.92034912]
[-466.23913574 205.17118835]
[-481.06930542 207.42201233]
[-488.08316040 221.26345825]
[-501.90859985 228.30880737]
[-517.22943115 225.84898376]
[-528.15454102 214.82981873]
[-530.48297119 199.48843384]
[-523.31939697 185.72389221]
[-509.41833496 178.82894897]
[-494.12506104 181.45483398]
[-483.32012939 192.59185791]
[-468.48995972 190.34101868]
[-453.65982056 188.09019470]
[-438.82965088 185.83935547]
[-423.99948120 183.58853149]
[-418.47909546 168.39886475]
[-405.97866821 158.00729370]
[-389.85083008 155.32403564]
[-374.48361206 161.17520142]
[-364.10665894 174.05166626]
[-349.31030273 171.58833313]
[-334.51394653 169.12500000]
[-319.75445557 166.44967651]
[-305.03488159 163.56289673]
[-290.31527710 160.67613220]
[-275.59567261 157.78935242]
[-260.87606812 154.90258789]
[-249.87577820 144.86053467]
[-234.84452820 149.79733276]
[-220.12492371 146.91056824]
[-218.34123230 133.77862549]
[-212.58949280 121.81405640]
[-203.41639709 112.18634796]
[-191.70375061 105.84138489]
[-178.58380127 103.40847778]
[-165.32978821 105.13798523]
[-153.23233032 110.87565613]
[-143.47378540 120.07621765]
[-137.01269531 131.85523987]
[-122.21633911 129.39190674]
[-107.41999054 126.92857361]
[-92.62364197 124.46524048]
[-77.82728577 122.00190735]
[-63.03093719 119.53857422]
[-48.23458481 117.07524109]
[-33.43823624 114.61190796]
[-18.64188576 112.14856720]
[-3.84553504 109.68523407]
[10.95081520 107.22190094]
[25.74716568 104.75856781]
[40.54351807 102.29523468]
[41.93638229 87.00161743]
[47.19707489 72.57386780]
[55.97516251 59.97306824]
[67.68589783 50.03860855]
[81.54919434 43.43225861]
[96.64157104 40.59408569]
[111.95765686 41.71315765]
[126.47720337 46.71492386]
[139.23300171 55.26620102]
[150.46615601 45.32555771]
[161.69931030 35.38491440]
[172.93244934 25.44427109]
[172.96597290 14.57482910]
[178.85192871 5.69913483]
[188.44798279 1.61121309]
[198.49433899 3.43753171]
[204.12780762 -11.34673786]
[218.85624695 -13.56534672]
[230.36993408 -23.17966080]
[241.88362122 -32.79397583]
[253.39730835 -42.40829086]
[264.91098022 -52.02260208]
[276.42468262 -61.63691711]
[277.67355347 -79.08853149]
[290.89907837 -90.01989746]
[307.60269165 -88.04055023]
[318.97726440 -97.81903076]
[320.26370239 -101.95215607]
[322.56460571 -105.14286804]
[325.46026611 -107.18827820]
[328.50820923 -108.04225159]
[331.29611206 -107.80926514]
[336.20932007 -115.50257111]
[343.44967651 -116.96308136]
[355.49578857 -125.90126801]
[367.54190063 -134.83946228]
[379.58801270 -143.77764893]
[391.63412476 -152.71583557]
[386.59020996 -166.96540833]
[385.97216797 -182.06871033]
[389.83496094 -196.68273926]
[397.83514404 -209.50805664]
[409.26129150 -219.40423584]
[423.09744263 -225.49130249]
[438.11328125 -227.22801208]
[452.97360229 -224.45993042]
[466.35705566 -217.43319702]
[477.07354736 -206.77262878]
[484.17022705 -193.42613220]
[487.01605225 -178.58050537]
[485.35794067 -163.55578613]
[479.34335327 -149.68797302]
[469.50714111 -138.21017456]
[456.72384644 -130.14300537]
[442.13024902 -126.20376587]
[427.02392578 -126.74275208]
[412.74813843 -131.71202087]
[400.57229614 -140.66972351]
[388.52618408 -131.73153687]
[376.48007202 -122.79335022]
[364.43399048 -113.85516357]
[352.38787842 -104.91696930]
[340.40618896 -95.89260864]
[328.75576782 -86.44444275]
[317.38116455 -76.66596222]
[318.21951294 -63.81147385]
[311.40081787 -52.65367889]
[299.22229004 -47.38108063]
[286.03900146 -50.12322998]
[274.52529907 -40.50891876]
[263.01162720 -30.89460373]
[251.49792480 -21.28028870]
[239.98423767 -11.66597462]
[228.47055054 -2.05166078]
[223.66062927 12.04492855]
[208.10864258 14.95121765]
[202.79061890 33.54524612]
[182.87309265 36.67741776]
[171.63995361 46.61806107]
[160.40679932 56.55870819]
[149.17364502 66.49935150]
[158.63641357 89.89491272]
[157.55067444 115.10834503]
[146.11174011 137.60383606]
[156.44876099 148.47334290]
[166.78578186 159.34283447]
[177.20050049 170.13792419]
[187.69236755 180.85801697]
[198.18424988 191.57812500]
[213.36653137 196.02882385]
[216.73908997 210.53657532]
[227.23095703 221.25668335]
[237.72283936 231.97677612]
[252.90512085 236.42747498]
[256.27767944 250.93524170]
[266.76956177 261.65533447]
[282.16952515 268.74597168]
[279.61911011 285.50698853]
[262.80709839 287.69619751]
[256.04943848 272.14721680]
[245.55757141 261.42712402]
[231.12573242 257.74319458]
[227.00273132 242.46865845]
[216.51086426 231.74855042]
[206.01898193 221.02845764]
[191.58714294 217.34452820]
[187.46414185 202.06999207]
[176.97227478 191.34989929]
[166.48039246 180.62979126]
[159.55950928 178.04966736]
[155.91627502 169.67985535]
[145.57925415 158.81036377]
[135.24224854 147.94085693]
[129.27122498 151.80287170]
[122.88211823 154.92495728]
[116.16617584 157.26252747]
[109.21932220 158.78218079]
[102.14078522 159.46224976]
[95.03167725 159.29298401]
[87.99353027 158.27680969]
[81.12687683 156.42823792]
[74.52979279 153.77369690]
[68.29650879 150.35107422]
[62.51606369 146.20925903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 94]
[5 93]
[6 92]
[7 91]
[8 90]
[9 89]
[10 88]
[11 87]
[12 86]
[13 85]
[14 84]
[15 83]
[16 82]
[23 73]
[24 72]
[26 70]
[27 69]
[28 68]
[29 67]
[30 66]
[33 65]
[34 64]
[35 63]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[103 175]
[104 174]
[105 173]
[106 172]
[110 170]
[112 168]
[113 167]
[114 166]
[115 165]
[116 164]
[117 163]
[120 159]
[121 158]
[126 157]
[128 156]
[129 155]
[130 154]
[131 153]
[132 152]
[178 207]
[179 206]
[180 205]
[181 203]
[182 202]
[183 201]
[185 199]
[186 198]
[187 197]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
