%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCUCGCGUCUGGGAACGGCCGGGCCCCCAGCGGGCUGUGGUCGCGGGGUGGGGGCCGGAGCGGCGAGGCCCCCCUUACCGGGCUGCGCGGGCCGCCCAGGGCCCCCGGGCUGAGACGGGGCCGGAGCGGCGCCCCGGCCGCCCGCGCGGGGUCUCCCCCAUGGUGCAGCGGGGUUCGGG\
) } def
/len { sequence length } bind def

/coor [
[-2.24294066 402.52371216]
[-7.31913710 416.63870239]
[-12.39533329 430.75366211]
[-17.34951973 444.91189575]
[-22.18132591 459.11239624]
[-27.01313210 473.31286621]
[-19.80928230 487.37985229]
[-24.74169731 502.39474487]
[-38.88405991 509.44946289]
[-53.84595871 504.35858154]
[-60.75076675 490.14242554]
[-55.50197983 475.23516846]
[-41.21361160 468.48104858]
[-36.38180542 454.28057861]
[-31.54999924 440.08010864]
[-32.37409592 432.71585083]
[-26.51029778 425.67745972]
[-21.43410110 411.56250000]
[-16.35790634 397.44754028]
[-20.40698051 380.38339233]
[-6.27802706 368.59301758]
[-1.44622028 354.39251709]
[3.38558626 340.19204712]
[8.21739292 325.99154663]
[13.04919910 311.79107666]
[17.88100624 297.59060669]
[22.71281242 283.39010620]
[27.54461861 269.18963623]
[32.37642670 254.98916626]
[31.09579849 250.36370850]
[32.72564697 244.88533020]
[37.62785721 240.38693237]
[42.94693375 226.36167908]
[48.14476013 212.29106140]
[45.17105484 197.69631958]
[57.12199402 187.32879639]
[62.19819260 173.21382141]
[67.27438354 159.09886169]
[72.35058594 144.98390198]
[77.42678070 130.86892700]
[82.50297546 116.75396729]
[78.04042816 102.43315887]
[65.84458923 93.70037842]
[53.64874649 84.96759796]
[44.82466507 82.50611877]
[41.31952286 75.97733307]
[29.27623177 67.03534698]
[17.23294067 58.09335709]
[5.03709841 49.36057663]
[-7.30765963 40.83960724]
[-16.17291260 38.53080750]
[-19.79022598 32.06349182]
[-31.98606682 23.33071327]
[-44.18190765 14.59793282]
[-56.37775040 5.86515236]
[-68.57359314 -2.86762810]
[-80.76943207 -11.60040855]
[-92.96527100 -20.33318901]
[-106.91952515 -13.91644764]
[-122.21113586 -15.35248947]
[-134.72674561 -24.25502586]
[-141.09971619 -38.22931671]
[-139.61573792 -53.51634979]
[-130.67402649 -66.00399017]
[-116.67982483 -72.33312988]
[-101.39751434 -70.80125427]
[-88.93796539 -61.82043076]
[-82.65272522 -47.80646133]
[-84.23249054 -32.52902985]
[-72.03665161 -23.79624939]
[-59.84081268 -15.06346989]
[-47.64496994 -6.33068943]
[-35.44912720 2.40209103]
[-23.25328636 11.13487148]
[-11.05744553 19.86765099]
[1.21331143 28.49484825]
[13.55806923 37.01581955]
[18.35743713 37.04502106]
[23.18377113 40.10697937]
[26.17492676 46.05006790]
[38.21821976 54.99205399]
[50.26150894 63.93404007]
[62.38152695 72.77175140]
[74.57736969 81.50453186]
[86.77320862 90.23731232]
[95.31827545 80.21418762]
[110.97673798 78.40480042]
[123.02002716 69.46281433]
[135.06332397 60.52082825]
[147.10661316 51.57883835]
[159.14990234 42.63685226]
[171.19319153 33.69486618]
[183.23648071 24.75287819]
[195.27976990 15.81089020]
[201.74728394 1.37198818]
[216.57829285 -0.00298131]
[228.62158203 -8.94496822]
[240.66487122 -17.88695526]
[243.32603455 -30.52492905]
[253.56272888 -37.72275543]
[265.56088257 -36.06029129]
[277.75674438 -44.79307175]
[289.95257568 -53.52585220]
[302.14840698 -62.25863266]
[314.26843262 -71.09634399]
[326.31173706 -80.03833008]
[338.11947632 -89.28911591]
[349.68377686 -98.84249115]
[361.24807739 -108.39586639]
[372.81237793 -117.94924927]
[378.52383423 -132.70356750]
[393.26379395 -134.84436035]
[404.82809448 -144.39773560]
[406.07656860 -160.15263367]
[418.15383911 -170.34651184]
[433.89465332 -168.93153381]
[443.96026611 -156.74716187]
[442.37893677 -141.02218628]
[430.08883667 -131.08595276]
[414.38146973 -132.83343506]
[402.81716919 -123.28005981]
[397.93286133 -109.20906830]
[382.36575317 -106.38494873]
[370.80145264 -96.83157349]
[359.23715210 -87.27819824]
[347.67285156 -77.72481537]
[346.98254395 -74.24216461]
[344.55554199 -70.92595673]
[340.49105835 -68.59590149]
[335.25372314 -67.99504089]
[323.21041870 -59.05305481]
[319.70529175 -52.52426529]
[310.88119507 -50.06278992]
[298.68536377 -41.33000946]
[286.48950195 -32.59722900]
[274.29367065 -23.86444855]
[267.93246460 -7.52079964]
[249.60685730 -5.84366465]
[237.56356812 3.09832263]
[225.52027893 12.04030991]
[219.91418457 25.83962059]
[204.22175598 27.85418129]
[192.17846680 36.79616928]
[180.13517761 45.73815536]
[168.09188843 54.68014145]
[156.04859924 63.62213135]
[144.00531006 72.56411743]
[131.96202087 81.50610352]
[119.91872406 90.44808960]
[119.91872406 105.44808960]
[131.96202087 114.39007568]
[144.00531006 123.33206940]
[156.04859924 132.27404785]
[172.37004089 136.86175537]
[172.47984314 153.81533813]
[156.21920776 158.61408997]
[147.10661316 144.31735229]
[135.06332397 135.37535095]
[123.02002716 126.43337250]
[110.97673798 117.49138641]
[96.61794281 121.83016205]
[91.54174805 135.94512939]
[86.46554565 150.06008911]
[81.38935089 164.17506409]
[76.31315613 178.29002380]
[71.23696136 192.40498352]
[73.84757996 208.00932312]
[62.25972366 217.36724854]
[62.29773712 226.52813721]
[56.97217560 231.68075562]
[51.65310287 245.70599365]
[46.57690811 259.82095337]
[41.74509811 274.02145386]
[36.91329193 288.22192383]
[32.08148575 302.42239380]
[27.24967957 316.62289429]
[22.41787338 330.82336426]
[17.58606720 345.02383423]
[12.75426006 359.22433472]
[7.92245340 373.42480469]
[12.91154575 385.33737183]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[4 15]
[5 14]
[6 13]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[27 174]
[28 173]
[29 172]
[32 171]
[33 170]
[34 168]
[36 166]
[37 165]
[38 164]
[39 163]
[40 162]
[41 161]
[42 85]
[43 84]
[44 83]
[46 82]
[47 81]
[48 80]
[49 77]
[50 76]
[52 75]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[87 149]
[88 148]
[89 147]
[90 146]
[91 145]
[92 144]
[93 143]
[94 142]
[96 140]
[97 139]
[98 138]
[101 136]
[102 135]
[103 134]
[104 133]
[105 131]
[106 130]
[107 126]
[108 125]
[109 124]
[110 123]
[112 121]
[113 120]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
