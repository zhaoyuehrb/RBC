%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGACACUGGGAGAAGGAAGUGAGAUGGAAAAGUUCUUUGAUUGCAUCCAAGAAGUGAAUGGUCCUCAAGGGCGACCAUUGGCUGGGUAGUGGAGUGUUGACCAAUCACAGCUCAGGGGCGUGAUUGUCUCGUCCUGGGAUCGCGAGAGGGGUAUAUACAGGGAGGCCAGGCAGCCUGGAGUUAGCCGACCGUUGCGAGACGUUGAGCUGCGGAAG\
) } def
/len { sequence length } bind def

/coor [
[225.39471436 124.02095795]
[217.08270264 115.40331268]
[212.14646912 104.45723724]
[197.15258789 104.88558197]
[184.65145874 112.98316193]
[170.63597107 105.64309692]
[155.64207458 106.07144165]
[140.64819336 106.49977875]
[125.65431213 106.92812347]
[110.66043091 107.35646057]
[96.68247223 112.79857635]
[85.34622955 122.62149048]
[79.98360443 137.50613403]
[65.29812622 139.99327087]
[53.96187973 149.81617737]
[48.34099579 167.35472107]
[30.98876190 169.99404907]
[19.79393959 179.97782898]
[8.59911823 189.96162415]
[-2.59570336 199.94540405]
[-13.79052544 209.92918396]
[-24.98534584 219.91297913]
[-30.13487434 234.87268066]
[-44.78334808 237.56925964]
[-41.58308029 252.59104919]
[-46.33771896 267.19546509]
[-57.76829147 277.45401001]
[-72.80002594 280.60717773]
[-87.38947296 275.80676270]
[-97.61212921 264.34408569]
[-100.71816254 249.30255127]
[-95.87206268 234.72822571]
[-84.37740326 224.54154968]
[-69.32619476 221.48268127]
[-54.76713181 226.37443542]
[-50.41833115 212.12884521]
[-34.96913147 208.71815491]
[-23.77431107 198.73437500]
[-12.57948875 188.75057983]
[-1.38466680 178.76679993]
[9.81015491 168.78302002]
[21.00497627 158.79922485]
[22.00686455 146.74842834]
[31.24592018 138.33908081]
[44.13896942 138.47993469]
[55.47521210 128.65702820]
[60.02698898 114.47497559]
[75.52331543 111.28524780]
[86.85955811 101.46233368]
[85.46926117 86.52690125]
[72.51472473 78.96515656]
[59.56019592 71.40340424]
[46.60565948 63.84165573]
[29.41799355 72.27898407]
[10.76677513 68.67299652]
[-1.83625495 54.66061401]
[-3.42674756 36.03239441]
[-16.69324112 29.03238487]
[-29.95973587 22.03237343]
[-45.77580643 22.43540764]
[-53.42148209 9.65288258]
[-66.68797302 2.65287280]
[-79.95446777 -4.34713697]
[-93.22096252 -11.34714699]
[-106.48745728 -18.34715652]
[-119.75395203 -25.34716606]
[-133.02044678 -32.34717560]
[-146.33657837 -39.25228500]
[-159.70167542 -46.06214523]
[-176.04112244 -44.66400146]
[-185.19844055 -58.26824570]
[-177.75338745 -72.87998962]
[-161.36477661 -73.46793365]
[-152.89181519 -59.42724228]
[-139.52671814 -52.61738205]
[-132.14483643 -52.38161469]
[-126.02043152 -45.61367035]
[-112.75394440 -38.61365891]
[-99.48744965 -31.61365128]
[-86.22095490 -24.61363983]
[-72.95446014 -17.61363029]
[-59.68796539 -10.61362076]
[-46.42147064 -3.61361122]
[-31.55430794 -4.51733255]
[-22.95972633 8.76588058]
[-9.69323158 15.76589012]
[3.57326221 22.76589966]
[12.46501160 16.04739571]
[23.27025414 13.11584759]
[34.44023514 14.43106937]
[44.35909653 19.84131241]
[51.57763672 28.59966850]
[55.02499771 39.46698761]
[54.16740799 50.88712311]
[67.12194061 58.44887161]
[80.07647705 66.01062012]
[93.03101349 73.57237244]
[110.23209381 92.36257935]
[125.22597504 91.93423462]
[140.21986389 91.50589752]
[155.21374512 91.07755280]
[170.20762634 90.64921570]
[183.78121948 82.52098846]
[196.72424316 89.89169312]
[211.71813965 89.46335602]
[219.93759155 72.92414856]
[235.34713745 62.89865112]
[253.62803650 62.09340286]
[269.70895386 70.64515686]
[279.17288208 86.10693359]
[292.38592529 77.40485382]
[305.63275146 84.21449280]
[320.59451294 83.14440155]
[335.55630493 82.07431793]
[350.51809692 81.00422668]
[365.47985840 79.93414307]
[380.44165039 78.86405182]
[395.40344238 77.79396057]
[408.19302368 69.95648956]
[415.93899536 57.11125183]
[423.68496704 44.26601410]
[431.43090820 31.42078018]
[439.17687988 18.57554436]
[446.92285156 5.73030853]
[447.42337036 -10.08297825]
[460.62155151 -16.98644257]
[468.36749268 -29.83167839]
[471.36901855 -46.51781845]
[488.23394775 -48.25279236]
[494.56979370 -32.52722549]
[481.21273804 -22.08571625]
[473.46676636 -9.24048042]
[473.52026367 5.65402842]
[459.76806641 13.47627068]
[452.02212524 26.32150650]
[444.27615356 39.16674042]
[436.53018188 52.01197815]
[428.78424072 64.85721588]
[421.03826904 77.70244598]
[432.25512695 85.46144104]
[436.10412598 96.97117615]
[449.29864502 88.69211578]
[464.11770630 92.13448334]
[471.92922974 104.76445007]
[486.58642578 107.95292664]
[501.24362183 111.14140320]
[515.90081787 114.32988739]
[530.55804443 117.51836395]
[545.21520996 120.70684814]
[558.38757324 108.23906708]
[576.25109863 106.19730377]
[591.62561035 115.21205902]
[598.44531250 131.50769043]
[613.18756104 134.27630615]
[628.17877197 129.21911621]
[639.25921631 139.17262268]
[654.00152588 141.94123840]
[664.04040527 130.40138245]
[678.41265869 125.46835327]
[693.22595215 128.37225342]
[704.52124023 138.23492432]
[709.33087158 152.33219910]
[724.07312012 155.10083008]
[738.81542969 157.86946106]
[753.55767822 160.63807678]
[766.51037598 151.98561096]
[781.42169189 155.00340271]
[789.59069824 167.40515137]
[802.49359131 158.27876282]
[818.05633545 161.03144836]
[827.04577637 174.03010559]
[824.12872314 189.56285095]
[811.03570557 198.41438293]
[795.53466797 195.33325195]
[786.82208252 182.14743042]
[774.71026611 190.74040222]
[759.72003174 188.14262390]
[750.78906250 175.38035583]
[736.04681396 172.61172485]
[721.30450439 169.84310913]
[706.56225586 167.07447815]
[696.96569824 178.46624756]
[682.86181641 183.55891418]
[668.00427246 180.89056396]
[656.40100098 171.07928467]
[651.23291016 156.68351746]
[636.49060059 153.91490173]
[622.55389404 159.17012024]
[610.41894531 149.01858521]
[595.67669678 146.24995422]
[588.18957520 155.79655457]
[577.29077148 161.28880310]
[565.01885986 161.63064575]
[553.69885254 156.69601440]
[545.50140381 147.36422729]
[542.02673340 135.36404419]
[527.36956787 132.17556763]
[512.71234131 128.98709106]
[498.05514526 125.79860687]
[483.39794922 122.61013031]
[468.74072266 119.42165375]
[456.38845825 127.66525269]
[441.47854614 124.64048004]
[432.91564941 111.62837982]
[417.89413452 120.65916443]
[400.47814941 112.93771362]
[396.47351074 92.75574493]
[381.51171875 93.82583618]
[366.54995728 94.89591980]
[351.58816528 95.96601105]
[336.62640381 97.03609467]
[321.66461182 98.10618591]
[306.70281982 99.17626953]
[294.55996704 107.80181122]
[280.24298096 101.06871796]
[276.63064575 112.26594543]
[269.43539429 121.61847687]
[259.48031616 128.01814270]
[247.91726685 130.69677734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 105]
[4 104]
[6 102]
[7 101]
[8 100]
[9 99]
[10 98]
[11 49]
[12 48]
[14 46]
[15 45]
[17 42]
[18 41]
[19 40]
[20 39]
[21 38]
[22 37]
[24 35]
[50 97]
[51 96]
[52 95]
[53 94]
[57 87]
[58 86]
[59 85]
[61 83]
[62 82]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 75]
[69 74]
[110 215]
[112 213]
[113 212]
[114 211]
[115 210]
[116 209]
[117 208]
[118 207]
[119 139]
[120 138]
[121 137]
[122 136]
[123 135]
[124 134]
[126 132]
[127 131]
[141 204]
[144 201]
[145 200]
[146 199]
[147 198]
[148 197]
[149 196]
[153 190]
[154 189]
[156 187]
[157 186]
[162 181]
[163 180]
[164 179]
[165 178]
[168 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
