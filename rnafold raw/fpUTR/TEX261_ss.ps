%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGUCCGCGGGGCGGGGACGCGGCGGCGGCGGCGGCGGUGGCGGCUGUGUGUCGCCGGAGCCGAAGCGCGCAGGCCCGUCCCGGUGGCCGGGGAGCGGGCGGGUGGGGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[163.68347168 272.87814331]
[162.35354614 268.19534302]
[163.14337158 262.75720215]
[157.54539490 248.84094238]
[151.75784302 235.00244141]
[145.78182983 221.24426270]
[139.80581665 207.48609924]
[127.63851929 198.89505005]
[129.23725891 183.15483093]
[123.26123810 169.39665222]
[117.28522491 155.63848877]
[102.65354919 146.05505371]
[104.72049713 127.82080841]
[98.37091064 114.23100281]
[87.02269745 106.06340790]
[88.03928375 92.11858368]
[81.68969727 78.52878571]
[75.34011078 64.93898010]
[68.99052429 51.34917831]
[62.64093399 37.75937653]
[56.29134369 24.16957283]
[49.73508072 17.61083984]
[49.95959854 10.12073898]
[43.98358536 -3.63743067]
[38.00756836 -17.39559937]
[22.97732925 -27.92421722]
[25.48843193 -45.23382187]
[19.13884354 -58.82362747]
[12.78925514 -72.41342926]
[6.25464010 -85.91523743]
[-0.46378145 -99.32653046]
[-15.19092083 -104.40089417]
[-21.81330681 -118.09755707]
[-16.88492012 -132.10635376]
[-23.60334206 -145.51765442]
[-30.32176399 -158.92895508]
[-37.04018784 -172.34024048]
[-51.76732635 -177.41459656]
[-58.38970947 -191.11126709]
[-53.46132660 -205.12007141]
[-60.17974854 -218.53137207]
[-66.89817047 -231.94265747]
[-73.61659241 -245.35395813]
[-80.33501434 -258.76525879]
[-87.05343628 -272.17654419]
[-93.77185822 -285.58782959]
[-108.48056793 -291.99356079]
[-112.50378418 -307.52395630]
[-102.75524139 -320.26544189]
[-86.71317291 -320.44381714]
[-76.68370056 -307.92227173]
[-80.36056519 -292.30627441]
[-73.64214325 -278.89495850]
[-66.92372131 -265.48367310]
[-60.20529556 -252.07237244]
[-53.48687363 -238.66108704]
[-46.76845169 -225.24978638]
[-40.05003357 -211.83850098]
[-25.87917519 -207.39750671]
[-18.87469101 -193.89225769]
[-23.62889290 -179.05867004]
[-16.91047096 -165.64736938]
[-10.19204903 -152.23608398]
[-3.47362685 -138.82478333]
[10.69723034 -134.38378906]
[17.70171356 -120.87854004]
[12.94751263 -106.04495239]
[19.66593361 -92.63365936]
[25.55504036 -88.00003815]
[26.37905693 -78.76301575]
[32.72864532 -65.17321014]
[39.07823563 -51.58341217]
[50.40781784 -47.10802078]
[55.77272034 -35.72478485]
[51.76573563 -23.37161636]
[57.74175262 -9.61344719]
[63.71776962 4.14472246]
[69.88114929 17.81998444]
[76.23073578 31.40978622]
[82.58032227 44.99958801]
[88.92990875 58.58938980]
[95.27950287 72.17919159]
[101.62908936 85.76899719]
[112.97730255 93.93659210]
[111.96071625 107.88141632]
[118.31030273 121.47121429]
[130.21936035 126.65110779]
[135.19438171 138.21005249]
[131.04339600 149.66247559]
[137.01940918 163.42063904]
[142.99542236 177.17880249]
[155.59016418 186.75393677]
[153.56398010 201.51008606]
[159.54000854 215.26824951]
[165.51602173 229.02641296]
[171.89068604 235.76177979]
[171.46165466 243.24296570]
[177.05964661 257.15924072]
[183.22302246 270.83450317]
[189.94143677 284.24578857]
[196.65986633 297.65707397]
[203.37828064 311.06835938]
[218.70878601 313.46743774]
[229.67749023 324.44317627]
[232.06672668 339.77520752]
[224.95777893 353.56805420]
[211.08416748 360.51806641]
[195.78059387 357.95285034]
[184.93159485 346.85876465]
[182.70883179 331.50170898]
[189.96699524 317.78680420]
[183.24856567 304.37548828]
[176.53015137 290.96420288]
[169.81172180 277.55291748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 98]
[4 97]
[5 95]
[6 94]
[7 93]
[9 91]
[10 90]
[11 89]
[13 86]
[14 85]
[16 83]
[17 82]
[18 81]
[19 80]
[20 79]
[21 78]
[23 77]
[24 76]
[25 75]
[27 72]
[28 71]
[29 70]
[30 68]
[31 67]
[34 64]
[35 63]
[36 62]
[37 61]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[99 114]
[100 113]
[101 112]
[102 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
