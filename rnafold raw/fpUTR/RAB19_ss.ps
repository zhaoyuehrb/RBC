%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCACUUUCCUUUCACUUUCUCAGGACGCCAAACCCGACACCUGGGGCCAGAACUACACUUCCCACCAAGCAGCGAGGCAGGAGGAAGAAGGGGGCACUGGGGGGCUGAAAAGCAAACCCAGAAGAAAGCGAAAACAUUACCUGCUGACCAGCAGAGGUGAGAGAGCGAGACAGUUCUGUUCUAGGUGGCAAGAACC\
) } def
/len { sequence length } bind def

/coor [
[227.86148071 258.91778564]
[219.76406860 251.03012085]
[213.88252258 241.52374268]
[210.51507568 230.99586487]
[209.80432129 220.09109497]
[211.73208618 209.46200562]
[216.12406921 199.73005676]
[204.37553406 190.40417480]
[192.62699890 181.07830811]
[180.87846375 171.75242615]
[169.05668640 162.51957703]
[157.16238403 153.38032532]
[145.26809692 144.24108887]
[133.37380981 135.10183716]
[121.47951508 125.96259308]
[112.97196960 132.07090759]
[102.74940491 135.38731384]
[91.72865295 135.44047546]
[80.95166779 132.05998230]
[71.48703003 125.40759277]
[64.32434845 115.97665405]
[51.14114761 123.13230133]
[37.95795059 130.28794861]
[24.77475166 137.44358826]
[11.59155273 144.59924316]
[-1.59164500 151.75488281]
[-11.32850361 169.39852905]
[-30.61367226 168.07556152]
[-43.56440735 175.64381409]
[-46.02024460 191.08735657]
[-57.86227036 201.30010986]
[-73.49903870 201.45994568]
[-85.54734039 191.49137878]
[-88.31834412 176.10125732]
[-80.50366211 162.55635071]
[-65.79315186 157.25212097]
[-51.13265991 162.69308472]
[-38.18192673 155.12481689]
[-36.48514175 145.03627014]
[-29.36207581 137.39015198]
[-18.99185181 134.88027954]
[-8.74729252 138.57168579]
[4.43590593 131.41604614]
[17.61910439 124.26039886]
[30.80230331 117.10475159]
[43.98550034 109.94910431]
[57.16869736 102.79345703]
[58.82295227 87.88494873]
[47.52910614 78.01332092]
[36.23526001 68.14169312]
[24.74391556 71.23423767]
[13.30474377 68.41996765]
[4.73617125 60.51154709]
[1.09156513 49.56175232]
[3.16785169 38.33159637]
[-7.80873251 28.10835648]
[-18.65074730 29.12238693]
[-28.06465530 24.10049820]
[-33.05083084 14.91685867]
[-32.17251205 4.72438526]
[-42.82089233 -5.84027243]
[-53.46927261 -16.40493011]
[-64.11765289 -26.96958733]
[-74.76603699 -37.53424454]
[-87.64987946 -38.26553726]
[-96.30192566 -47.29232788]
[-96.47409821 -59.39380264]
[-106.95437622 -70.12524414]
[-119.82507324 -71.05982971]
[-128.33354187 -80.22207642]
[-128.31465149 -92.32476044]
[-138.62422180 -103.22030640]
[-154.42741394 -103.40628815]
[-165.41053772 -114.77056122]
[-165.05747986 -130.57090759]
[-153.57772827 -141.43325806]
[-137.78199768 -140.91317749]
[-127.04161835 -129.31921387]
[-127.72867584 -113.52986908]
[-117.41911316 -102.63432312]
[-100.35755157 -98.54485321]
[-96.22293854 -80.60552216]
[-85.74266052 -69.87407684]
[-68.61866760 -66.05445862]
[-64.20137787 -48.18262482]
[-53.55299759 -37.61796951]
[-42.90461731 -27.05331039]
[-32.25623703 -16.48865318]
[-21.60785675 -5.92399502]
[-2.60401034 -2.38537312]
[2.41450620 17.13177299]
[13.39109039 27.35501099]
[31.60572243 25.59894180]
[45.56549835 37.91818237]
[46.10688782 56.84784698]
[57.40073395 66.71947479]
[68.69458008 76.59110260]
[85.99419403 66.41011810]
[104.65670013 66.62724304]
[109.98429108 52.60523224]
[115.31187439 38.58322144]
[120.63946533 24.56121063]
[125.96705627 10.53919888]
[118.50573730 -5.27801085]
[124.66652679 -21.28436470]
[140.18412781 -27.75694466]
[145.28970337 -41.86131287]
[150.39526367 -55.96567917]
[146.98812866 -72.00698090]
[159.35609436 -82.77570343]
[174.77607727 -77.19390106]
[177.38529968 -61.00366211]
[164.49963379 -50.86010742]
[159.39405823 -36.75574112]
[154.28849792 -22.65137482]
[161.33529663 -11.85698128]
[160.86822510 1.22026885]
[152.83387756 11.79448986]
[139.98905945 15.86678791]
[134.66148376 29.88879967]
[129.33389282 43.91080856]
[124.00630188 57.93282318]
[118.67871094 71.95483398]
[129.37631226 83.49369812]
[133.66828918 98.63183594]
[130.61875916 114.06829834]
[142.51304626 123.20755005]
[154.40734863 132.34678650]
[166.30163574 141.48603821]
[178.19592285 150.62528992]
[186.91671753 153.37646484]
[190.20433044 160.00389099]
[201.95286560 169.32977295]
[213.70140076 178.65563965]
[225.44993591 187.98152161]
[246.35331726 177.88635254]
[269.38534546 179.97592163]
[287.99044800 193.56576538]
[296.91921997 214.71095276]
[311.90753174 215.30281067]
[326.89584351 215.89466858]
[341.88418579 216.48652649]
[356.87249756 217.07836914]
[371.86080933 217.67022705]
[380.56912231 214.87979126]
[387.08053589 218.39158630]
[402.05764771 219.21997070]
[417.03472900 220.04837036]
[429.89898682 210.46241760]
[445.37704468 214.68252563]
[451.59545898 229.47140503]
[443.78402710 243.48428345]
[427.93496704 245.97167969]
[416.20635986 235.02548218]
[401.22924805 234.19708252]
[386.25213623 233.36869812]
[371.26895142 232.65855408]
[356.28063965 232.06669617]
[341.29232788 231.47483826]
[326.30398560 230.88298035]
[311.31567383 230.29113770]
[296.32736206 229.69927979]
[297.09851074 236.43927002]
[296.75738525 243.56094360]
[308.20565796 253.25305176]
[319.65393066 262.94515991]
[331.10220337 272.63726807]
[342.55047607 282.32937622]
[358.27777100 280.77139282]
[370.44720459 290.85510254]
[371.83880615 306.59799194]
[361.62701416 318.66012573]
[345.87030029 319.88522339]
[333.91680908 309.54647827]
[332.85836792 293.77767944]
[321.41009521 284.08554077]
[309.96182251 274.39343262]
[298.51354980 264.70132446]
[287.06527710 255.00921631]
[274.68438721 263.47766113]
[279.56668091 277.66085815]
[284.44894409 291.84405518]
[289.33123779 306.02728271]
[294.21350098 320.21047974]
[306.02124023 330.74081421]
[302.84780884 345.29342651]
[315.57174683 355.63912964]
[312.70724487 371.78616333]
[297.20108032 377.12384033]
[285.00463867 366.16122437]
[288.66461182 350.17568970]
[277.20608521 340.65985107]
[280.03030396 325.09274292]
[275.14804077 310.90954590]
[270.26574707 296.72634888]
[265.38348389 282.54312134]
[260.50119019 268.35992432]
[248.82965088 267.90512085]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 135]
[8 134]
[9 133]
[10 132]
[11 130]
[12 129]
[13 128]
[14 127]
[15 126]
[21 47]
[22 46]
[23 45]
[24 44]
[25 43]
[26 42]
[28 38]
[29 37]
[48 97]
[49 96]
[50 95]
[55 92]
[56 91]
[60 89]
[61 88]
[62 87]
[63 86]
[64 85]
[67 83]
[68 82]
[71 80]
[72 79]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[106 115]
[107 114]
[108 113]
[139 162]
[140 161]
[141 160]
[142 159]
[143 158]
[144 157]
[146 156]
[147 155]
[148 154]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
[180 197]
[181 196]
[182 195]
[183 194]
[184 193]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
