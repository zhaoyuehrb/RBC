%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGGAGGCGGAGCGAGUCCAAAAUGGCGGCUCUCAGGCUGGCGCGCUCCGUGCUGCUGGGGCUUUGAGGUGGUCGCCGGGGGUCCGGGGGACCCUUUCCCCGCCGCGGAAGCCCUAGAGGAUGAAUCGGGGACCCUGCUAAGGUCUGGCGGCGGGGCUGGAGAGCAGUGGCAGCAAGGGCUGCGGUGGCGUCCACGCAGCGGG\
) } def
/len { sequence length } bind def

/coor [
[41.76512146 637.42913818]
[47.38523865 623.06188965]
[59.89408875 614.03234863]
[58.98404312 599.05999756]
[58.07399368 584.08758545]
[57.05035782 569.12255859]
[55.91319275 554.16577148]
[54.77602768 539.20892334]
[46.09612274 527.10485840]
[52.76495361 512.75781250]
[51.62778473 497.80099487]
[36.98953247 494.52661133]
[29.58832359 507.57351685]
[22.18711472 520.62042236]
[25.05363846 536.40533447]
[14.39167213 548.39288330]
[-1.61983597 547.38732910]
[-10.69822693 534.16003418]
[-5.87933683 518.85778809]
[9.14019394 513.21923828]
[16.54140282 500.17233276]
[23.94261169 487.12539673]
[21.80908966 473.63232422]
[25.85914803 461.56549072]
[34.37268829 453.39816284]
[44.81792831 450.39230347]
[46.63467026 435.50274658]
[40.49580765 421.93203735]
[49.84757233 409.17056274]
[51.66431427 394.28100586]
[53.48105621 379.39141846]
[55.29779816 364.50186157]
[57.11454010 349.61227417]
[58.93128204 334.72268677]
[60.74802399 319.83312988]
[62.56476593 304.94354248]
[55.56710434 297.49209595]
[53.79043961 287.20263672]
[58.05974197 277.43347168]
[67.18601227 271.50842285]
[69.45380402 256.68084717]
[71.72158813 241.85327148]
[73.98937988 227.02569580]
[68.26519775 213.27494812]
[77.99994659 200.80317688]
[80.26773834 185.97558594]
[82.53552246 171.14801025]
[84.69072723 156.30364990]
[86.73323059 141.44335938]
[88.77572632 126.58306885]
[90.81822968 111.72278595]
[88.55043793 96.89520264]
[82.15962982 83.32473755]
[75.76882172 69.75427246]
[62.88928604 60.56579208]
[64.46670532 45.75495148]
[58.07589340 32.18448257]
[51.58642960 25.75148582]
[51.69282150 18.35922813]
[45.50869370 4.69333601]
[39.32456970 -8.97255611]
[33.14044571 -22.63844872]
[26.95632172 -36.30434036]
[20.77219582 -49.97023010]
[14.58807182 -63.63612366]
[8.40394688 -77.30201721]
[2.21982217 -90.96791077]
[-3.96430254 -104.63379669]
[-20.44268036 -110.50149536]
[-27.44263268 -126.16245270]
[-21.07927895 -141.72840881]
[-27.47008705 -155.29887390]
[-33.86089706 -168.86933899]
[-40.25170517 -182.43980408]
[-46.64251328 -196.01026917]
[-59.12720871 -196.71026611]
[-70.06554413 -202.61875916]
[-77.40995789 -212.55995178]
[-79.81542969 -224.60993958]
[-76.88545227 -236.46888733]
[-69.23591614 -245.89997864]
[-75.21192932 -259.65814209]
[-81.18794250 -273.41632080]
[-87.16396332 -287.17449951]
[-93.13997650 -300.93264771]
[-99.11599731 -314.69082642]
[-105.09201050 -328.44900513]
[-111.06803131 -342.20715332]
[-122.92412567 -354.32614136]
[-114.56087494 -369.07376099]
[-98.07441711 -365.11987305]
[-97.30986023 -348.18319702]
[-91.33383942 -334.42501831]
[-85.35782623 -320.66683960]
[-79.38181305 -306.90869141]
[-73.40579224 -293.15051270]
[-67.42977905 -279.39233398]
[-61.45376205 -265.63415527]
[-55.47774506 -251.87599182]
[-38.08071518 -248.85476685]
[-25.87066269 -235.88264465]
[-23.87194633 -218.02227783]
[-33.07204819 -202.40107727]
[-26.68123817 -188.83061218]
[-20.29043007 -175.26014709]
[-13.89962101 -161.68968201]
[-7.50881195 -148.11921692]
[5.10859299 -145.49668884]
[14.04440308 -135.94255066]
[15.87182713 -122.79262543]
[9.70158958 -110.81792450]
[15.88571358 -97.15203094]
[22.06983948 -83.48613739]
[28.25396347 -69.82025146]
[34.43808746 -56.15435791]
[40.62221146 -42.48846436]
[46.80633926 -28.82257271]
[52.99046326 -15.15668106]
[59.17458725 -1.49078894]
[65.35871124 12.17510319]
[71.64636230 25.79367447]
[78.03717041 39.36413956]
[90.45959473 47.58196640]
[89.33928680 63.36346054]
[95.73010254 76.93392944]
[102.12091064 90.50439453]
[104.73371887 88.91434479]
[107.96852875 88.03156281]
[111.64216614 88.02301788]
[126.11621857 84.08578491]
[137.40161133 72.99748230]
[151.71353149 77.12281036]
[166.18757629 73.18557739]
[174.07072449 59.75077438]
[188.80555725 55.96405029]
[201.56500244 63.56221390]
[216.03906250 59.62498093]
[230.48281860 55.57802963]
[244.89544678 51.42159271]
[259.30807495 47.26515198]
[273.72070312 43.10871506]
[288.13336182 38.95227432]
[302.54598999 34.79583740]
[311.52993774 21.50417900]
[327.53387451 20.38459396]
[338.28094482 32.29593277]
[335.52691650 48.10083389]
[321.38446045 55.67512894]
[306.70242310 49.20846939]
[292.28979492 53.36491013]
[277.87716675 57.52134705]
[263.46450806 61.67778778]
[249.05189514 65.83422852]
[234.63925171 69.99066162]
[229.08168030 74.86612701]
[219.97628784 74.09903717]
[205.50222778 78.03626251]
[198.34985352 91.05084229]
[183.72720337 95.24993896]
[170.12481689 87.65962982]
[155.65075684 91.59686279]
[145.40065002 102.40354919]
[130.05345154 98.55983734]
[115.57939911 102.49707031]
[105.67852020 113.76528168]
[103.63601685 128.62556458]
[101.59352112 143.48585510]
[99.55101776 158.34614563]
[101.48310089 167.27720642]
[97.36310577 173.41580200]
[95.09531403 188.24337769]
[92.82752991 203.07095337]
[98.38950348 217.88227844]
[88.81695557 229.29348755]
[86.54917145 244.12106323]
[84.28137970 258.94863892]
[82.01359558 273.77621460]
[90.17984772 292.20425415]
[77.45433807 306.76028442]
[75.63759613 321.64987183]
[73.82085419 336.53942871]
[72.00411224 351.42901611]
[70.18737030 366.31860352]
[68.37062836 381.20816040]
[66.55388641 396.09774780]
[64.73714447 410.98730469]
[70.74606323 425.62301636]
[61.52424622 437.31948853]
[59.70750427 452.20904541]
[75.70819092 470.16033936]
[66.58461761 496.66381836]
[67.72178650 511.62063599]
[76.48302460 524.79455566]
[69.73285675 538.07177734]
[70.87002563 553.02856445]
[72.00719452 567.98541260]
[75.77920532 576.30816650]
[73.04636383 583.17755127]
[73.95641327 598.14996338]
[74.86645508 613.12231445]
[88.37684631 620.57031250]
[95.69569397 634.15112305]
[94.48758698 649.53112793]
[85.13803101 661.80261230]
[70.63042450 667.04980469]
[55.59410477 663.59832764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 200]
[4 199]
[5 198]
[6 196]
[7 195]
[8 194]
[10 192]
[11 191]
[12 22]
[13 21]
[14 20]
[26 189]
[27 188]
[29 186]
[30 185]
[31 184]
[32 183]
[33 182]
[34 181]
[35 180]
[36 179]
[40 177]
[41 176]
[42 175]
[43 174]
[45 172]
[46 171]
[47 170]
[48 168]
[49 167]
[50 166]
[51 165]
[52 126]
[53 125]
[54 124]
[56 122]
[57 121]
[59 120]
[60 119]
[61 118]
[62 117]
[63 116]
[64 115]
[65 114]
[66 113]
[67 112]
[68 111]
[71 107]
[72 106]
[73 105]
[74 104]
[75 103]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[129 164]
[130 163]
[132 161]
[133 160]
[136 157]
[137 156]
[138 154]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
