%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGCCGCUGGGCGGAGCCGUCAAUGCGCAGGCGCGGCGUCGCCCCGCCCACUCCGGCUCGGCGGCUCUGGGCCUGCGGCGGGCGCUGCGGGUUGGAGCUCGGGACGUGAUCGUGGGCGCGCAGCCAGCGGCUCCCUGCCCUUCCCCUCCGGGCCCUGAGUACCGGCCCCCCACCAAGGAGGAGCCCGAGGUCUCCGUCCCGGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[92.64223480 467.67358398]
[76.85386658 466.96450806]
[66.25299072 455.24285889]
[67.12893677 439.46289062]
[78.96200562 428.98654175]
[79.63497925 414.00161743]
[80.30795288 399.01672363]
[80.98092651 384.03182983]
[81.65390015 369.04693604]
[82.32686615 354.06204224]
[82.99983978 339.07714844]
[83.67281342 324.09225464]
[84.34578705 309.10736084]
[84.90665436 294.11785889]
[85.35538483 279.12457275]
[85.80411530 264.13128662]
[86.25285339 249.13798523]
[86.70158386 234.14469910]
[87.03815460 219.14848328]
[87.26254272 204.15016174]
[84.21920013 197.41455078]
[87.60414886 188.92959595]
[88.05287933 173.93630981]
[77.99255371 165.88455200]
[74.35254669 153.32093811]
[78.67706299 140.77018738]
[89.59909821 132.88752747]
[90.27207184 117.90264130]
[80.06948090 106.90686035]
[65.07619476 106.45812988]
[50.08290482 106.00939941]
[35.08961868 105.56066132]
[20.09633255 105.11193085]
[5.10304594 104.66320038]
[-8.92241478 111.98419952]
[-21.41252518 103.86962128]
[-36.40581131 103.42089081]
[-51.39909744 102.97215271]
[-65.42456055 110.29315186]
[-77.91467285 102.17857361]
[-92.90795898 101.72984314]
[-107.90124512 101.28111267]
[-122.89453125 100.83238220]
[-137.88781738 100.38364410]
[-152.88110352 99.93491364]
[-164.33515930 110.49153900]
[-179.53408813 109.82287598]
[-189.52763367 98.83812714]
[-204.52091980 98.38939667]
[-219.51420593 97.94065857]
[-230.84555054 108.95774841]
[-246.64688110 108.65200043]
[-257.54354858 97.20481110]
[-257.07077026 81.40759277]
[-245.50900269 70.63256073]
[-229.71766663 71.27234650]
[-219.06547546 82.94737244]
[-204.07218933 83.39611053]
[-189.07890320 83.84484100]
[-178.44631958 73.47740936]
[-163.23460388 73.71889496]
[-152.43237305 84.94162750]
[-137.43908691 85.39035797]
[-122.44580078 85.83909607]
[-107.45250702 86.28782654]
[-92.45922089 86.73655701]
[-77.46593475 87.18528748]
[-64.51289368 79.83219147]
[-50.95036697 87.97886658]
[-35.95708084 88.42760468]
[-20.96379280 88.87633514]
[-8.01075268 81.52323914]
[5.55177784 89.66991425]
[20.54506493 90.11864471]
[35.53834915 90.56737518]
[50.53163910 91.01611328]
[65.52492523 91.46484375]
[80.51821136 91.91357422]
[92.03288269 82.30043793]
[94.26851654 67.46797943]
[96.50415039 52.63551331]
[98.62877655 37.78674698]
[100.64227295 22.92249870]
[102.65577698 8.05825233]
[96.84094238 -6.65562820]
[106.21663666 -18.22911263]
[108.23014069 -33.09335709]
[110.24363708 -47.95760345]
[112.25713348 -62.82184982]
[114.27063751 -77.68609619]
[108.45580292 -92.39997864]
[117.83149719 -103.97346497]
[119.84500122 -118.83770752]
[121.85849762 -133.70195007]
[123.87199402 -148.56620789]
[125.88549805 -163.43045044]
[127.78775787 -178.30934143]
[121.75346375 -192.93458557]
[130.95498657 -204.64703369]
[132.74589539 -219.53973389]
[134.53680420 -234.43243408]
[136.32771301 -249.32514954]
[138.11863708 -264.21783447]
[132.08433533 -278.84310913]
[141.28585815 -290.55554199]
[143.07676697 -305.44824219]
[134.33891296 -318.90295410]
[139.54676819 -334.07720947]
[154.70530701 -339.33059692]
[168.18620300 -330.63317871]
[169.64805603 -314.65689087]
[157.96946716 -303.65731812]
[156.17855835 -288.76461792]
[162.34095764 -275.20458984]
[153.01133728 -262.42694092]
[151.22042847 -247.53422546]
[149.42950439 -232.64152527]
[147.63859558 -217.74882507]
[145.84768677 -202.85612488]
[152.01007080 -189.29609680]
[142.68046570 -176.51843262]
[145.00306702 -169.50160217]
[140.74974060 -161.41694641]
[138.73623657 -146.55270386]
[136.72274780 -131.68846130]
[134.70924377 -116.82421112]
[132.69573975 -101.95996094]
[138.65460205 -88.30927277]
[129.13488770 -75.67259979]
[127.12138367 -60.80835342]
[125.10787964 -45.94410706]
[123.09438324 -31.07985878]
[121.08088684 -16.21561241]
[127.03974152 -2.56492305]
[117.52001953 10.07175159]
[115.50652313 24.93599701]
[113.49301910 39.80024338]
[115.71040344 46.85103226]
[111.33660889 54.87114716]
[109.10097504 69.70361328]
[106.86534119 84.53607178]
[113.61635590 71.14115143]
[128.05918884 67.09091949]
[140.79078674 75.02228546]
[143.52215576 89.77151489]
[134.47505188 101.73603821]
[119.54004669 103.12644958]
[134.16397095 106.46426392]
[148.78788757 109.80207062]
[163.41180420 113.13988495]
[178.03572083 116.47769928]
[192.83308411 118.93497467]
[207.75090027 120.50289917]
[222.66873169 122.07082367]
[237.58656311 123.63874817]
[252.50439453 125.20668030]
[262.07553101 113.10722351]
[276.67614746 108.12468719]
[291.64721680 111.84897614]
[302.21154785 123.09168243]
[304.99810791 138.26530457]
[299.11767578 152.52798462]
[286.44671631 161.32856750]
[271.02847290 161.85881042]
[257.78283691 153.94950867]
[250.93646240 140.12451172]
[236.01863098 138.55657959]
[221.10081482 136.98864746]
[206.18298340 135.42073059]
[191.26515198 133.85279846]
[201.45715332 144.85838318]
[203.34867859 159.73864746]
[196.23426819 172.94415283]
[182.76719666 179.55004883]
[167.96984863 177.09274292]
[157.36073303 166.48864746]
[154.89640808 151.69245911]
[161.49591064 138.22225952]
[174.69790649 131.10162354]
[160.07398987 127.76380920]
[145.45007324 124.42599487]
[130.82615662 121.08818054]
[116.20223236 117.75036621]
[110.53696442 118.93469238]
[105.25696564 118.57560730]
[104.58399200 133.56050110]
[116.62065125 146.25401306]
[115.76999664 163.38816833]
[103.04616547 174.38504028]
[102.59743500 189.37832642]
[102.26086426 204.37454224]
[102.03647614 219.37286377]
[105.03733826 228.00114441]
[101.69487000 234.59342957]
[101.24613953 249.58671570]
[100.79740143 264.58001709]
[100.34867096 279.57330322]
[99.89994049 294.56658936]
[102.77140045 303.23876953]
[99.33068085 309.78033447]
[98.65770721 324.76522827]
[97.98474121 339.75012207]
[97.31176758 354.73501587]
[96.63879395 369.71990967]
[95.96582031 384.70480347]
[95.29284668 399.68969727]
[94.61987305 414.67459106]
[93.94689941 429.65948486]
[104.79325104 441.15438843]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 208]
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[11 202]
[12 201]
[13 200]
[14 198]
[15 197]
[16 196]
[17 195]
[18 194]
[19 192]
[20 191]
[22 190]
[23 189]
[27 186]
[28 185]
[29 78]
[30 77]
[31 76]
[32 75]
[33 74]
[34 73]
[36 71]
[37 70]
[38 69]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[48 59]
[49 58]
[50 57]
[79 141]
[80 140]
[81 139]
[82 137]
[83 136]
[84 135]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[92 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 121]
[99 119]
[100 118]
[101 117]
[102 116]
[103 115]
[105 113]
[106 112]
[147 183]
[148 182]
[149 181]
[150 180]
[151 179]
[152 170]
[153 169]
[154 168]
[155 167]
[156 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
