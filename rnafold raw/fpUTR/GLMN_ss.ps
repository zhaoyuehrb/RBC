%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGUAGCGCGGGGCGGGGCCAGAAGAGCGGGCUAAGACGCCGGAGGAGGUGGCGGCGGCUGGGAGAGGCGAGGGUUCUGGCCGAUUUUAGCAUCGAAACUAGGAGAAAUAAGA\
) } def
/len { sequence length } bind def

/coor [
[94.56590271 154.38281250]
[86.92931366 153.06765747]
[81.37724304 167.00230408]
[75.82516479 180.93696594]
[70.27309418 194.87161255]
[70.02733612 211.82377625]
[53.66963577 216.28045654]
[44.85886765 201.79574585]
[56.33844376 189.31953430]
[61.89051819 175.38488770]
[67.44258881 161.45024109]
[72.99465942 147.51557922]
[55.18325043 131.28063965]
[46.08636856 108.96323395]
[31.09186935 109.36942291]
[16.09737015 109.77561951]
[1.10287082 110.18180847]
[-13.84764671 111.39918518]
[-28.71033096 113.42418671]
[-41.33963394 122.95368195]
[-54.99493408 117.00539398]
[-69.85761261 119.03039551]
[-77.08118439 132.76354980]
[-91.01218414 139.59779358]
[-106.29386139 136.90521240]
[-117.05009460 125.72116852]
[-119.14490509 110.34613800]
[-111.77278137 96.69215393]
[-97.76846313 90.00943756]
[-82.51689911 92.86763000]
[-71.88261414 104.16770935]
[-57.01993179 102.14270782]
[-45.45370865 92.75805664]
[-30.73533058 98.56150055]
[-15.87264729 96.53650665]
[-14.05130005 94.24006653]
[-11.15004826 92.57814789]
[-7.42581606 91.98969269]
[-3.29812598 92.80453491]
[0.69668007 95.18730927]
[15.69117928 94.78112030]
[30.68567848 94.37492371]
[45.68017960 93.96873474]
[50.52410126 76.78029633]
[60.65026474 62.07088852]
[74.97756195 51.41093826]
[91.97634888 45.93854904]
[109.83177948 46.23797607]
[126.63752747 52.27724457]
[140.59934998 63.41158295]
[153.01467896 54.99377823]
[165.43002319 46.57597351]
[168.53089905 31.31090546]
[181.24172974 22.95091438]
[195.77552795 26.00120544]
[208.19087219 17.58339882]
[220.60620117 9.16559315]
[223.83784485 -3.41095996]
[234.46296692 -10.15080547]
[246.42640686 -7.86486053]
[259.06515503 -15.94338036]
[271.70388794 -24.02190018]
[284.34259033 -32.10041809]
[296.98132324 -40.17893982]
[309.62005615 -48.25745773]
[322.25878906 -56.33597565]
[325.77191162 -71.51147461]
[338.70446777 -79.52420044]
[353.15032959 -76.08145905]
[365.78906250 -84.15998077]
[378.42779541 -92.23850250]
[385.88851929 -106.19013977]
[400.77935791 -106.52532959]
[413.41809082 -114.60385132]
[420.48403931 -129.40264893]
[436.85202026 -130.41282654]
[445.68408203 -116.59519196]
[437.89453125 -102.16415405]
[421.49658203 -101.96511841]
[408.85784912 -93.88660431]
[402.30114746 -80.51278687]
[386.50631714 -79.59976959]
[373.86758423 -71.52124786]
[361.22885132 -63.44272995]
[358.28775024 -48.88644791]
[345.58535767 -40.51363373]
[330.33731079 -43.69724655]
[317.69857788 -35.61872864]
[305.05984497 -27.54020691]
[292.42111206 -19.46168709]
[279.78237915 -11.38316822]
[267.14367676 -3.30464911]
[254.50492859 4.77387047]
[247.35688782 20.73859787]
[229.02400208 21.58092880]
[216.60867310 29.99873352]
[204.19332886 38.41653824]
[201.64747620 53.04713058]
[189.17646790 61.76084518]
[173.84782410 58.99130630]
[161.43249512 67.40911102]
[149.01715088 75.82691956]
[151.94319153 83.00225830]
[153.82504272 90.51929474]
[154.62486267 98.22691345]
[154.32656860 105.97018433]
[152.93617249 113.59343719]
[150.48159790 120.94342041]
[147.01222229 127.87239075]
[142.59776306 134.24104309]
[137.32698059 139.92137146]
[131.30583191 144.79914856]
[124.65534210 148.77636719]
[117.50920868 151.77302551]
[110.01110077 153.72892761]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[5 9]
[14 43]
[15 42]
[16 41]
[17 40]
[18 35]
[19 34]
[21 32]
[22 31]
[50 102]
[51 101]
[52 100]
[55 97]
[56 96]
[57 95]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[65 88]
[66 87]
[69 84]
[70 83]
[71 82]
[73 80]
[74 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
