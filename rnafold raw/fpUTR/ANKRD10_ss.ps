%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCCGGCCGCUCCAGGCCCCGCCCCGCCCCCUCUGUGCGCGCUCCGCUCGGCAGCCUGUGGGACGCGACCGCGGCGCUAGUCUCGUUCCUUUGUGCUGCGGCGGCGGCUUCUCGAGUCCUCCCCGACGCGUCCUCUAGGCCAGCGAGCCCCGCGCUCUCCGGUGACGGACC\
) } def
/len { sequence length } bind def

/coor [
[-135.74877930 675.24908447]
[-142.43092346 678.08905029]
[-149.61590576 678.41369629]
[-156.64202881 691.66638184]
[-152.23141479 706.60577393]
[-159.54570007 719.94573975]
[-173.81526184 724.05853271]
[-180.84138489 737.31121826]
[-187.86752319 750.56390381]
[-194.89364624 763.81658936]
[-190.01571655 778.84924316]
[-197.27053833 792.89001465]
[-212.35394287 797.60876465]
[-226.31723022 790.20587158]
[-230.87620544 775.07342529]
[-223.32614136 761.18920898]
[-208.14633179 756.79046631]
[-201.12019348 743.53778076]
[-194.09407043 730.28509521]
[-187.06794739 717.03240967]
[-191.67173767 702.91363525]
[-184.73503113 689.37341309]
[-169.89471436 684.64025879]
[-162.86859131 671.38757324]
[-166.20124817 649.18621826]
[-146.57579041 636.83721924]
[-140.77304077 623.00506592]
[-134.97029114 609.17291260]
[-137.18165588 594.44342041]
[-124.70816040 584.71081543]
[-126.91951752 569.98132324]
[-114.44602966 560.24877930]
[-108.64328003 546.41662598]
[-116.51339722 533.79919434]
[-115.43196869 518.78936768]
[-105.60468292 507.15847778]
[-90.64015198 503.50213623]
[-92.85150146 488.77258301]
[-80.37801361 479.04003906]
[-74.57527161 465.20788574]
[-68.77252197 451.37576294]
[-62.96977997 437.54360962]
[-57.16703415 423.71145630]
[-63.69012833 414.30203247]
[-64.85738373 402.79162598]
[-60.26166534 392.04336548]
[-50.94397736 384.78744507]
[-39.16009521 382.92776489]
[-32.86175919 369.31411743]
[-26.56342316 355.70050049]
[-20.26508713 342.08685303]
[-13.96675014 328.47323608]
[-21.37621880 315.57992554]
[-19.75360489 300.61892700]
[-9.51282120 289.35040283]
[5.57395983 286.23669434]
[11.87229633 272.62304688]
[18.17063332 259.00942993]
[24.46896935 245.39578247]
[30.76730537 231.78215027]
[29.08916473 216.98239136]
[41.90589142 207.70649719]
[48.20422745 194.09286499]
[54.50256348 180.47923279]
[60.80089951 166.86560059]
[67.09923553 153.25196838]
[73.39757538 139.63835144]
[79.69590759 126.02471161]
[85.99424744 112.41107941]
[77.54907990 93.93201447]
[91.31464386 73.59216309]
[91.31464386 58.59216309]
[91.31464386 43.59216309]
[91.31464386 28.59216309]
[91.31464386 13.59216213]
[91.31464386 -1.40783787]
[91.31464386 -16.40783691]
[91.31464386 -31.40783691]
[91.31464386 -46.40783691]
[81.73562622 -62.11564255]
[91.05529785 -76.96804810]
[90.78448486 -91.96560669]
[77.99159241 -100.74748993]
[72.83552551 -115.38288116]
[77.29890442 -130.24417114]
[89.66545868 -139.61688232]
[105.18000793 -139.89703369]
[117.87688446 -130.97688293]
[122.87387848 -116.28643036]
[118.24954987 -101.47443390]
[105.78204346 -92.23641968]
[106.05285645 -77.23886108]
[114.54969025 -68.59855652]
[114.87797546 -56.08337021]
[106.31464386 -46.40783691]
[106.31464386 -31.40783691]
[106.31464386 -16.40783691]
[106.31464386 -1.40783787]
[106.31464386 13.59216213]
[106.31464386 28.59216309]
[106.31464386 43.59216309]
[106.31464386 58.59216309]
[106.31464386 73.59216309]
[119.37220764 80.97458649]
[132.22506714 73.24127960]
[145.07792664 65.50797272]
[153.99314880 47.45338821]
[173.30499268 47.85816193]
[185.87028503 39.66587830]
[198.36109924 31.36049271]
[210.77642822 22.94268608]
[223.19177246 14.52488041]
[232.90852356 0.63167542]
[248.94863892 6.12266731]
[248.11257935 23.05598831]
[231.60957336 26.94021606]
[219.19424438 35.35802078]
[206.77890015 43.77582550]
[202.99409485 50.15417862]
[194.06256104 52.23116302]
[181.49728394 60.42345047]
[180.28794861 70.61244202]
[173.51377869 78.60942078]
[163.23997498 81.60108185]
[152.81123352 78.36083221]
[139.95837402 86.09413910]
[127.10551453 93.82744598]
[118.02610016 114.69435120]
[99.60787964 118.70941925]
[93.30953979 132.32304382]
[87.01120758 145.93667603]
[80.71286774 159.55030823]
[74.41452789 173.16394043]
[68.11619568 186.77757263]
[61.81785965 200.39120483]
[55.51952362 214.00483704]
[56.74716187 229.77833557]
[44.38093567 238.08049011]
[38.08259964 251.69412231]
[31.78426361 265.30776978]
[25.48592758 278.92138672]
[19.18759155 292.53500366]
[26.58141136 306.04937744]
[24.62270927 321.14959717]
[14.27047062 332.07183838]
[-0.35311884 334.77157593]
[-6.65145540 348.38519287]
[-12.94979191 361.99884033]
[-19.24812889 375.61245728]
[-25.54646492 389.22610474]
[-18.32892036 406.71322632]
[-26.02057076 423.64788818]
[-43.33489227 429.51422119]
[-49.13763809 443.34634399]
[-54.94038391 457.17849731]
[-60.74312973 471.01065063]
[-66.54587555 484.84277344]
[-64.74957275 500.56167603]
[-76.80800629 509.30487061]
[-68.93110657 522.54345703]
[-70.34337616 537.70458984]
[-80.29454803 548.99340820]
[-94.81114197 552.21936035]
[-100.61388397 566.05151367]
[-98.81758118 581.77038574]
[-110.87602234 590.51361084]
[-109.07971954 606.23248291]
[-121.13815308 614.97570801]
[-126.94089508 628.80780029]
[-132.74363708 642.63995361]
[-128.36018372 648.85095215]
[-126.43877411 656.13555908]
[-127.17522430 663.56463623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 24]
[4 23]
[7 20]
[8 19]
[9 18]
[10 17]
[26 170]
[27 169]
[28 168]
[30 166]
[32 164]
[33 163]
[37 159]
[39 157]
[40 156]
[41 155]
[42 154]
[43 153]
[48 150]
[49 149]
[50 148]
[51 147]
[52 146]
[56 142]
[57 141]
[58 140]
[59 139]
[60 138]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[81 92]
[82 91]
[104 127]
[105 126]
[106 125]
[108 121]
[109 120]
[110 118]
[111 117]
[112 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
