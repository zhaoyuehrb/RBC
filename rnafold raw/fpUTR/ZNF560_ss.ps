%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCGCUGGCGCCUGUUUCCUCAGAGCCACUUUUUCCUUUGUGUUGUCUGGUCGUUCACUACUUUGAGGGAAAAGAAUUUUGCCGUUCGCGUUCGAUUGACUCCGUCCCCAAGAUCCUGUAGCCCCACGGACCUGGCGACUCCACCGUGUUCGGGUCUUUCUAGGAACCCAAUCUGCCUUCAUGAAGAAAAGACAGAGGCAGAAAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[-84.09819794 531.04125977]
[-86.34450531 541.99462891]
[-91.80558777 551.72113037]
[-99.94895172 559.30548096]
[-109.99057007 564.03942871]
[-120.97035980 565.48846436]
[-131.84396362 563.53094482]
[-139.50456238 576.42724609]
[-147.16516113 589.32354736]
[-154.82574463 602.21990967]
[-152.40441895 614.88873291]
[-159.05044556 625.47241211]
[-170.73908997 628.58721924]
[-178.59085083 641.36804199]
[-186.44261169 654.14892578]
[-182.52702332 669.46044922]
[-190.65695190 683.01330566]
[-206.00904846 686.76678467]
[-219.47518921 678.49401855]
[-223.06614685 663.10308838]
[-214.65147400 649.72515869]
[-199.22344971 646.29711914]
[-191.37168884 633.51629639]
[-183.51994324 620.73547363]
[-183.98695374 603.19268799]
[-167.72207642 594.55932617]
[-160.06147766 581.66296387]
[-152.40087891 568.76666260]
[-144.74028015 555.87030029]
[-154.86714172 539.90631104]
[-155.48086548 520.92926025]
[-146.32810974 504.20071411]
[-129.87486267 494.40097046]
[-110.64265442 494.31979370]
[-103.76324463 480.99038696]
[-96.88382721 467.66094971]
[-90.00441742 454.33151245]
[-83.12500000 441.00207520]
[-76.24559021 427.67266846]
[-69.36618042 414.34323120]
[-70.40468597 399.48486328]
[-57.19996262 390.77017212]
[-50.32054901 377.44076538]
[-43.44113922 364.11132812]
[-36.86111069 350.63159180]
[-30.58374977 337.00827026]
[-24.30638885 323.38494873]
[-18.02902794 309.76165771]
[-11.75166702 296.13833618]
[-17.13440704 282.29776001]
[-10.96233940 268.39233398]
[3.59143233 262.84027100]
[9.86879253 249.21694946]
[9.81300545 241.82650757]
[16.34236908 235.43861389]
[22.82186508 221.91026306]
[29.30136108 208.38192749]
[35.78085709 194.85357666]
[21.31020355 198.80328369]
[8.21720028 191.48391724]
[4.00211287 177.08831787]
[11.07953548 163.86296082]
[25.39519882 159.38392639]
[38.74843979 166.21699524]
[43.48997879 180.44694519]
[51.15057755 167.55062866]
[58.81117630 154.65429688]
[66.47177124 141.75796509]
[74.13237000 128.86164856]
[81.79296875 115.96531677]
[76.23965454 109.17682648]
[73.27754974 100.46121979]
[73.56494141 90.82527924]
[77.36493683 81.49376678]
[84.47697449 73.75398254]
[75.69637299 61.59252548]
[66.91577148 49.43106842]
[58.13516617 37.26961517]
[53.37219620 35.13391876]
[50.21993256 31.72561455]
[48.89340591 27.87134552]
[49.24839401 24.36330986]
[41.01958847 11.82190895]
[25.66709328 7.16567755]
[19.86947441 -7.79317141]
[28.07416725 -21.57949066]
[43.98723602 -23.61759377]
[55.40153122 -12.34402370]
[53.56098938 3.59310102]
[61.78979492 16.13450050]
[70.29662323 28.48900986]
[79.07722473 40.65046692]
[87.85782623 52.81192017]
[96.63843536 64.97338104]
[111.53215027 66.75584412]
[122.93460846 57.00987625]
[134.33708191 47.26391220]
[145.73953247 37.51794815]
[157.14199829 27.77198029]
[158.18843079 10.30989933]
[171.28244019 -0.77441758]
[188.00581360 1.00527215]
[199.26191711 -8.90937901]
[210.51800537 -18.82402992]
[206.77975464 -31.18546104]
[207.98992920 -43.99602509]
[213.93359375 -55.35594559]
[223.69647217 -63.59400940]
[235.80540466 -67.51338959]
[248.45065308 -66.56546021]
[259.75628662 -60.92627335]
[271.30261230 -70.50139618]
[282.84890747 -80.07651520]
[294.39520264 -89.65163422]
[299.00332642 -97.53852081]
[306.18542480 -99.28180695]
[317.87301636 -108.68395996]
[329.56060791 -118.08611298]
[341.24816895 -127.48826599]
[345.97320557 -135.30567932]
[353.18048096 -136.94183350]
[365.00674438 -146.16893005]
[376.83303833 -155.39602661]
[378.78997803 -160.23518372]
[382.07861328 -163.51210022]
[385.88085938 -164.98114014]
[389.39968872 -164.75694275]
[401.62615967 -173.44676208]
[413.85266113 -182.13659668]
[426.07913208 -190.82641602]
[428.25021362 -195.57334900]
[431.68191528 -198.70016479]
[435.54592896 -199.99795532]
[439.05123901 -199.61686707]
[451.65353394 -207.75207520]
[464.25585938 -215.88729858]
[469.02624512 -231.20469666]
[484.02786255 -236.89079285]
[497.75271606 -228.58369446]
[499.67230225 -212.65589905]
[488.31405640 -201.32585144]
[472.39108276 -203.28498840]
[459.78875732 -195.14976501]
[447.18646240 -187.01455688]
[434.76895142 -178.59992981]
[422.54248047 -169.91011047]
[410.31597900 -161.22027588]
[398.08950806 -152.53045654]
[386.06011963 -143.56976318]
[374.23385620 -134.34266663]
[362.40759277 -125.11556244]
[350.65032959 -115.80068207]
[338.96273804 -106.39852905]
[327.27517700 -96.99638367]
[315.58758545 -87.59423065]
[303.97033691 -78.10533142]
[292.42401123 -68.53021240]
[280.87771606 -58.95508957]
[269.33142090 -49.37997055]
[272.83724976 -32.52329636]
[267.29418945 -16.12855530]
[254.14379883 -4.74122334]
[236.94982910 -1.56658626]
[220.43266296 -7.56793451]
[209.17655945 2.34671688]
[197.92047119 12.26136780]
[198.91287231 25.10833740]
[192.22483826 36.34899139]
[180.10552979 41.76495743]
[166.88796997 39.17444229]
[155.48550415 48.92041016]
[144.08303833 58.66637421]
[132.68057251 68.41233826]
[121.27811432 78.15830994]
[128.34046936 101.84443665]
[115.76050568 121.06450653]
[94.68929291 123.62590790]
[87.02869415 136.52223206]
[79.36810303 149.41856384]
[71.70750427 162.31489563]
[64.04690552 175.21121216]
[56.38630676 188.10754395]
[49.30920029 201.33306885]
[42.82970428 214.86141968]
[36.35020828 228.38977051]
[29.87071419 241.91810608]
[23.49210930 255.49432373]
[17.21474838 269.11764526]
[22.45030212 283.78823853]
[15.89009571 297.51480103]
[1.87164867 302.41567993]
[-4.40571213 316.03900146]
[-10.68307304 329.66232300]
[-16.96043396 343.28564453]
[-23.23779488 356.90896606]
[-22.75744438 362.10668945]
[-24.17693520 366.52688599]
[-26.88196564 369.57614136]
[-30.11170769 370.99075317]
[-36.99111938 384.32015991]
[-43.87053299 397.64959717]
[-43.32408524 413.46136475]
[-56.03675079 421.22265625]
[-62.91616058 434.55206299]
[-69.79557800 447.88150024]
[-76.67498779 461.21093750]
[-83.55439758 474.54037476]
[-90.43381500 487.86978149]
[-97.31322479 501.19921875]
[-89.83960724 509.62286377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 29]
[8 28]
[9 27]
[10 26]
[13 24]
[14 23]
[15 22]
[34 209]
[35 208]
[36 207]
[37 206]
[38 205]
[39 204]
[40 203]
[42 201]
[43 200]
[44 199]
[45 195]
[46 194]
[47 193]
[48 192]
[49 191]
[52 188]
[53 187]
[55 186]
[56 185]
[57 184]
[58 183]
[65 182]
[66 181]
[67 180]
[68 179]
[69 178]
[70 177]
[75 94]
[76 93]
[77 92]
[78 91]
[82 90]
[83 89]
[95 174]
[96 173]
[97 172]
[98 171]
[99 170]
[102 166]
[103 165]
[104 164]
[111 159]
[112 158]
[113 157]
[114 156]
[116 155]
[117 154]
[118 153]
[119 152]
[121 151]
[122 150]
[123 149]
[127 148]
[128 147]
[129 146]
[130 145]
[134 144]
[135 143]
[136 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
