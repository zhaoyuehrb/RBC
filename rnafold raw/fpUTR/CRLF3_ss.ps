%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGGGCUGGGCGGUGCUUCCGCCUGCGCGAGGCCGCGCCGGGCCGCUUGGAGGCGCCCGGUGCAGUCGGGAACCCGCGCUAGGUUUCGCCGGCCGCGCGGCCAG\
) } def
/len { sequence length } bind def

/coor [
[47.84760666 391.30010986]
[46.99127197 376.32455444]
[46.13494110 361.34902954]
[37.68367386 349.08422852]
[44.62052155 334.86483765]
[43.76418686 319.88931274]
[42.90785599 304.91375732]
[34.45658875 292.64895630]
[41.39343643 278.42959595]
[40.53710556 263.45404053]
[39.68077087 248.47851562]
[38.82444000 233.50297546]
[37.96810913 218.52745056]
[25.34930420 210.41783142]
[11.37134361 215.85995483]
[-2.60661650 221.30206299]
[-16.58457756 226.74418640]
[-30.56253815 232.18629456]
[-38.30834961 246.23556519]
[-54.14558792 248.79708862]
[-65.92527771 237.90588379]
[-64.61105347 221.91674805]
[-51.21107483 213.09518433]
[-36.00465393 218.20832825]
[-22.02669334 212.76622009]
[-8.04873180 207.32409668]
[5.92922831 201.88198853]
[19.90718842 196.43986511]
[26.14937210 193.94682312]
[32.28344727 193.25009155]
[37.84635925 194.15365601]
[42.46152496 196.35156250]
[49.07984161 182.89057922]
[55.69815826 169.42961121]
[62.31647491 155.96862793]
[68.93479156 142.50765991]
[75.55310822 129.04667664]
[82.17142487 115.58570099]
[88.78974152 102.12472534]
[91.76860046 87.42348480]
[90.91226196 72.44794464]
[90.05593109 57.47241211]
[89.19960022 42.49687576]
[88.34326935 27.52133751]
[87.48693848 12.54580212]
[86.63060760 -2.42973471]
[85.77426910 -17.40527153]
[84.91793823 -32.38080597]
[81.25772095 -40.91680527]
[84.25719452 -47.79503632]
[83.82884979 -62.78892136]
[83.40051270 -77.78280640]
[74.34273529 -91.45352936]
[81.89424896 -106.01053619]
[98.28671265 -106.47883606]
[106.65695190 -92.37667084]
[98.39439392 -78.21114349]
[98.82273102 -63.21726227]
[99.25107574 -48.22337723]
[99.89347839 -33.23714066]
[100.74980927 -18.26160431]
[101.60614014 -3.28606701]
[102.46247101 11.68946934]
[103.31880188 26.66500664]
[104.17514038 41.64054108]
[105.03147125 56.61607742]
[105.88780212 71.59161377]
[106.74413300 86.56715393]
[119.12621307 95.03379822]
[133.39205933 90.39854431]
[147.65791321 85.76329041]
[161.85610962 80.92479706]
[175.98377991 75.88405609]
[190.11145020 70.84331512]
[200.31407166 58.00437164]
[216.49215698 60.68792725]
[222.00308228 76.13336945]
[211.17767334 88.45175934]
[195.15219116 84.97098541]
[181.02452087 90.01172638]
[166.89685059 95.05246735]
[161.57550049 100.34304047]
[152.29316711 100.02913666]
[138.02731323 104.66439056]
[123.76146698 109.29965210]
[111.45196533 112.92997742]
[102.25071716 108.74304199]
[95.63240051 122.20401764]
[89.01408386 135.66499329]
[82.39576721 149.12596130]
[75.77745056 162.58694458]
[69.15913391 176.04792786]
[62.54081726 189.50889587]
[55.92250061 202.96987915]
[52.94364548 217.67111206]
[53.79997635 232.64665222]
[54.65630722 247.62219238]
[55.51264191 262.59771729]
[56.36897278 277.57327271]
[64.88149261 290.90921021]
[57.88339233 304.05743408]
[58.73972321 319.03298950]
[59.59605789 334.00851440]
[68.10857391 347.34445190]
[61.11047745 360.49270630]
[61.96680832 375.46823120]
[62.82314301 390.44375610]
[69.76385498 405.91189575]
[56.82161713 416.86337280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 107]
[2 106]
[3 105]
[5 103]
[6 102]
[7 101]
[9 99]
[10 98]
[11 97]
[12 96]
[13 95]
[14 28]
[15 27]
[16 26]
[17 25]
[18 24]
[32 94]
[33 93]
[34 92]
[35 91]
[36 90]
[37 89]
[38 88]
[39 87]
[40 68]
[41 67]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[48 60]
[50 59]
[51 58]
[52 57]
[69 85]
[70 84]
[71 83]
[72 81]
[73 80]
[74 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
