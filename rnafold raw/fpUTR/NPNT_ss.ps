%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGAAGGGAGCGGGAGGGGGCUCCGGGCGCCGCGCAGCAGACCUGCUCCGGCCGCGCGCCUCGCCGCUGUCCUCCGGGAGCGGCAGCAGUAGCCCGGGCGGCGAGGGCUGGGGGUUCCUCGAGACUCUCAGAGGGGCGCCUCCCAUCGGCGCCCACCACCCCAACCUGUUCCUCGCGCGCCACUGCGCUGCGCCCCAGGACCCGCUGCCCAAC\
) } def
/len { sequence length } bind def

/coor [
[109.74378967 426.33578491]
[95.07885742 421.54586792]
[85.34928894 409.57342529]
[83.65974426 394.23886108]
[90.54936218 380.43536377]
[103.81967926 372.56756592]
[104.26002502 357.57403564]
[104.70037079 342.58050537]
[105.03065491 327.58413696]
[105.25085449 312.58575439]
[105.47104645 297.58737183]
[105.69124603 282.58898926]
[105.91144562 267.59060669]
[106.13163757 252.59220886]
[92.61109924 240.24836731]
[92.40573883 221.62219238]
[106.11299133 208.54194641]
[105.89279175 193.54356384]
[105.67259216 178.54518127]
[105.45240021 163.54679871]
[105.23220062 148.54841614]
[99.14521790 144.16677856]
[85.46904755 150.32815552]
[86.97125244 135.40353394]
[80.88426971 131.02191162]
[66.59144592 135.57331848]
[52.29862595 140.12472534]
[38.00580597 144.67613220]
[23.71298599 149.22752380]
[9.42016506 153.77893066]
[-4.83886290 158.43513489]
[-19.06332970 163.19586182]
[-26.20609093 168.88586426]
[-33.53168106 167.92041016]
[-47.82450485 172.47180176]
[-62.01364136 177.33682251]
[-76.09221649 182.51307678]
[-90.17079926 187.68933105]
[-104.24937439 192.86560059]
[-114.32816315 205.80198669]
[-130.53129578 203.27400208]
[-136.19036865 187.88221741]
[-125.48382568 175.46038818]
[-109.42563629 178.78701782]
[-95.34705353 173.61076355]
[-81.26847839 168.43449402]
[-67.18990326 163.25823975]
[-65.38659668 160.23081970]
[-62.02846527 157.92556763]
[-57.47048950 157.06323242]
[-52.37590790 158.17898560]
[-38.08308792 153.62757874]
[-23.82405853 148.97138977]
[-9.59959316 144.21066284]
[-4.25550508 139.10800171]
[4.86876059 139.48611450]
[19.16158104 134.93470764]
[33.45440292 130.38330078]
[47.74722290 125.83190155]
[62.04004288 121.28049469]
[76.33286285 116.72909546]
[76.01719666 105.01277161]
[80.39245605 95.95977783]
[67.90514374 87.64913177]
[55.41782379 79.33847809]
[42.93050766 71.02782440]
[30.44319344 62.71717072]
[17.95587730 54.40651703]
[2.18060303 53.20182800]
[-4.12789345 39.70915985]
[-16.61520958 31.39850616]
[-33.00667191 30.89653969]
[-40.52827072 16.32404518]
[-31.44243050 2.67195630]
[-15.09588242 3.98437166]
[-8.30455589 18.91119003]
[4.18275928 27.22184372]
[19.06485748 27.83209801]
[26.26653099 41.91920090]
[38.75384521 50.22985458]
[51.24116135 58.54050827]
[63.72847748 66.85115814]
[76.21578979 75.16181183]
[88.70310974 83.47246552]
[119.79276276 85.55876160]
[117.79456329 122.87683105]
[129.77261353 113.84765625]
[141.75068665 104.81847382]
[153.72874451 95.78929901]
[165.70680237 86.76011658]
[170.67436218 79.09731293]
[177.92762756 77.68784332]
[190.03694153 68.83547211]
[190.12316895 53.43096924]
[199.15791321 41.17427063]
[213.50772095 36.64138794]
[227.60632324 41.37082672]
[239.71563721 32.51845551]
[251.82495117 23.66608429]
[263.93426514 14.81371307]
[275.97827148 5.87269735]
[287.95632935 -3.15648198]
[299.93441772 -12.18566132]
[311.91247559 -21.21483994]
[323.89053345 -30.24402046]
[335.86859131 -39.27319717]
[347.84664917 -48.30237961]
[359.75811768 -57.41923523]
[361.20120239 -77.46122742]
[376.68188477 -89.78724670]
[395.93417358 -86.79745483]
[407.36166382 -96.51403809]
[418.78918457 -106.23062134]
[430.21670532 -115.94719696]
[441.64422607 -125.66378021]
[438.15405273 -144.09494019]
[448.20626831 -161.80944824]
[468.83163452 -169.40257263]
[476.58444214 -182.24368286]
[484.33728027 -195.08477783]
[491.99560547 -207.98243713]
[499.55911255 -220.93595886]
[507.12258911 -233.88948059]
[509.88775635 -250.61640930]
[526.72644043 -252.58978271]
[533.28411865 -236.95542908]
[520.07611084 -226.32600403]
[512.51263428 -213.37248230]
[504.94915771 -200.41896057]
[504.29116821 -193.05937195]
[497.17837524 -187.33195496]
[489.42553711 -174.49085999]
[481.67272949 -161.64976501]
[491.96337891 -150.73635864]
[505.23733521 -157.72219849]
[518.51129150 -164.70803833]
[531.78527832 -171.69387817]
[545.05920410 -178.67973328]
[558.33319092 -185.66557312]
[571.60711670 -192.65141296]
[574.74615479 -207.97068787]
[587.02990723 -217.64765930]
[602.65838623 -217.11312866]
[614.25225830 -206.61950684]
[616.33728027 -191.12155151]
[607.92895508 -177.93692017]
[592.99749756 -173.29100037]
[578.59301758 -179.37745667]
[565.31903076 -172.39160156]
[552.04504395 -165.40576172]
[538.77111816 -158.41992188]
[525.49713135 -151.43408203]
[512.22320557 -144.44824219]
[498.94921875 -137.46240234]
[493.19302368 -120.84574890]
[480.32342529 -110.31851959]
[464.79351807 -108.23736572]
[451.36080933 -114.23626709]
[439.93328857 -104.51968384]
[428.50576782 -94.80310822]
[417.07824707 -85.08652496]
[405.65075684 -75.36994171]
[407.60906982 -65.29742432]
[405.19195557 -55.24199295]
[398.77014160 -47.03276825]
[389.44906616 -42.19152451]
[378.87878418 -41.65079498]
[368.96215820 -45.57501221]
[365.61016846 -38.99013901]
[356.87582397 -36.32431793]
[344.89776611 -27.29513931]
[332.91970825 -18.26595879]
[320.94165039 -9.23678017]
[308.96359253 -0.20760119]
[296.98553467 8.82157803]
[285.00747681 17.85075760]
[281.55917358 24.38571548]
[272.78665161 26.92302895]
[260.67733765 35.77539825]
[248.56800842 44.62776947]
[236.45869446 53.48014069]
[236.68727112 68.34909058]
[228.01396179 80.64697266]
[213.59371948 85.53676605]
[198.88931274 80.94479370]
[186.77999878 89.79716492]
[174.73597717 98.73817444]
[162.75791931 107.76735687]
[150.77986145 116.79653931]
[138.80180359 125.82571411]
[126.82373810 134.85488892]
[120.23058319 148.32821655]
[120.45078278 163.32659912]
[120.67098236 178.32498169]
[120.89117432 193.32336426]
[121.11137390 208.32174683]
[131.08712769 214.78367615]
[136.64892578 225.15206909]
[136.51747131 236.79740906]
[130.84104919 246.82897949]
[121.13002777 252.81240845]
[120.90982819 267.81079102]
[120.68962860 282.80917358]
[120.46942902 297.80755615]
[120.24923706 312.80593872]
[120.02903748 327.80432129]
[123.03159332 336.42871094]
[119.69390869 343.02084351]
[119.25356293 358.01437378]
[118.81321716 373.00790405]
[131.59892273 381.64096069]
[137.66656494 395.82501221]
[135.07998657 411.03399658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[9 206]
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[25 61]
[26 60]
[27 59]
[28 58]
[29 57]
[30 56]
[31 54]
[32 53]
[34 52]
[35 51]
[36 47]
[37 46]
[38 45]
[39 44]
[63 84]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
[70 77]
[71 76]
[86 191]
[87 190]
[88 189]
[89 188]
[90 187]
[92 186]
[93 185]
[97 181]
[98 180]
[99 179]
[100 178]
[101 176]
[102 175]
[103 174]
[104 173]
[105 172]
[106 171]
[107 170]
[108 168]
[111 162]
[112 161]
[113 160]
[114 159]
[115 158]
[118 133]
[119 132]
[120 131]
[121 129]
[122 128]
[123 127]
[134 154]
[135 153]
[136 152]
[137 151]
[138 150]
[139 149]
[140 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
