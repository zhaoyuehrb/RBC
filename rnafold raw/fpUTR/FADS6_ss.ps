%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGCCGCCUGCCAGGGUCGCGCGCCUGAGCCGGGCCUGGGUCGCCAGCGCCCGCAGCAGAGGAGCCAGGGUGUCUCGCACCUUGACCCCGGGGGCGGGUGUCCCCAGGCGGCGCGUGACUCCGCCCCGGCCCGCCCCGCCUCGCCUGCACCGCAGACACACGCCCCAGUCCUCCAGUCCUCCGUGCGCGUCGGGCCCGAGCCCACAGAGUCC\
) } def
/len { sequence length } bind def

/coor [
[462.12515259 205.04856873]
[454.65963745 199.53044128]
[450.50717163 191.07388306]
[435.79275513 188.16082764]
[428.62408447 189.94458008]
[420.88708496 185.09764099]
[406.21636963 181.97189331]
[391.54568481 178.84613037]
[376.87496948 175.72038269]
[362.20425415 172.59461975]
[347.53353882 169.46887207]
[332.86285400 166.34310913]
[318.19213867 163.21734619]
[303.52142334 160.09159851]
[300.38327026 161.68986511]
[296.31604004 161.85017395]
[292.00277710 160.15281677]
[288.28802490 156.49845886]
[273.76687622 152.73867798]
[259.24569702 148.97888184]
[244.98535156 153.27906799]
[233.56509399 142.32971191]
[219.04394531 138.56993103]
[204.52278137 134.81013489]
[190.26243591 139.11032104]
[178.84217834 128.16096497]
[164.32101440 124.40118408]
[149.79986572 120.64139557]
[135.27870178 116.88160706]
[120.75754547 113.12181854]
[109.89009857 127.14568329]
[89.91818237 131.65866089]
[69.10343170 121.35635376]
[54.43272400 124.48210907]
[39.80880737 127.81992340]
[25.23474121 131.36909485]
[10.66067696 134.91827393]
[-3.91338801 138.46743774]
[-18.48745346 142.01661682]
[-33.03544617 145.67118835]
[-47.55660248 149.43096924]
[-62.07775879 153.19076538]
[-76.59891510 156.95054626]
[-87.90665436 168.82772827]
[-103.78068542 164.71104431]
[-107.89117432 148.83540344]
[-96.00959778 137.53230286]
[-80.35870361 142.42939758]
[-65.83754730 138.66960144]
[-51.31639099 134.90982056]
[-36.79523468 131.15002441]
[-31.11041641 126.43255615]
[-22.03662682 127.44255066]
[-7.46256113 123.89337158]
[7.11150408 120.34420013]
[21.68556976 116.79502869]
[36.25963593 113.24585724]
[39.46111298 109.70741272]
[44.91780472 108.13981628]
[51.30696869 109.81140137]
[65.97767639 106.68564606]
[67.85757446 99.42506409]
[57.16155624 88.90863800]
[71.61736298 84.90390778]
[73.49725342 77.64333344]
[62.18690491 67.79061127]
[46.69902802 64.56010437]
[42.18459702 50.36611938]
[26.69671822 47.13561249]
[22.18228912 32.94162750]
[10.87194061 23.08891106]
[-0.43840724 13.23619366]
[-11.74875546 3.38347697]
[-23.05910301 -6.46923971]
[-34.36944962 -16.32195663]
[-45.67979813 -26.17467308]
[-56.99014664 -36.02738953]
[-72.90474701 -41.87220764]
[-71.69394684 -58.78286362]
[-55.10897827 -62.30071640]
[-47.13743210 -47.33773804]
[-35.82708359 -37.48501968]
[-24.51673508 -27.63230515]
[-13.20638657 -17.77958870]
[-1.89603841 -7.92687082]
[9.41430950 1.92584574]
[20.72465706 11.77856255]
[32.03500366 21.63127899]
[46.71389389 24.15705490]
[52.03731537 39.05577087]
[66.71620178 41.58155060]
[72.03961945 56.48026657]
[83.34996796 66.33298492]
[106.54900360 67.42663574]
[121.82122803 81.06494904]
[124.51733398 98.60066223]
[139.03849792 102.36045074]
[153.55964661 106.12023926]
[168.08081055 109.88002777]
[182.60195923 113.63981628]
[197.90097046 109.60855865]
[208.28257751 120.28898621]
[222.80372620 124.04877472]
[237.32489014 127.80856323]
[252.62388611 123.77730560]
[263.00549316 134.45773315]
[277.52664185 138.21751404]
[292.04782104 141.97731018]
[306.64718628 145.42088318]
[321.31790161 148.54664612]
[335.98858643 151.67240906]
[350.65930176 154.79815674]
[365.33001709 157.92391968]
[380.00073242 161.04966736]
[394.67141724 164.17543030]
[409.34213257 167.30117798]
[424.01284790 170.42694092]
[438.70578003 173.44641113]
[453.42022705 176.35945129]
[473.25384521 168.23770142]
[488.18045044 182.49459839]
[503.00744629 184.76602173]
[517.83447266 187.03742981]
[532.66149902 189.30885315]
[547.48852539 191.58026123]
[567.72290039 181.94660950]
[584.05810547 196.14727783]
[598.99169922 197.55673218]
[613.45788574 191.15039062]
[625.40179443 200.04936218]
[639.86791992 193.64302063]
[651.81188965 202.54199219]
[666.74548340 203.95146179]
[681.67913818 205.36093140]
[696.61279297 206.77038574]
[711.54638672 208.17985535]
[726.48004150 209.58930969]
[734.44067383 202.18565369]
[744.94494629 200.41918945]
[754.48754883 204.63475037]
[760.01757812 213.22077942]
[774.90417480 215.06198120]
[789.79071045 216.90319824]
[780.47100830 205.14978027]
[780.76464844 190.15264893]
[790.53729248 178.77304077]
[805.31793213 176.21714783]
[818.34436035 183.65428162]
[823.65704346 197.68196106]
[818.82531738 211.88247681]
[806.06152344 219.75868225]
[820.68542480 223.09649658]
[835.30938721 226.43431091]
[849.93328857 229.77212524]
[865.10919189 225.29965210]
[875.79565430 235.67503357]
[889.07391357 227.53099060]
[903.85705566 231.12432861]
[911.53936768 243.83331299]
[926.16326904 247.17112732]
[940.78717041 250.50894165]
[948.53063965 237.51301575]
[959.91241455 227.54753113]
[973.81738281 221.58882141]
[988.88336182 220.22064209]
[1003.63427734 223.57704163]
[1016.62500000 231.32920837]
[1026.58288574 242.71763611]
[1032.53222656 256.62661743]
[1033.89038086 271.69351196]
[1030.52404785 286.44216919]
[1022.76318359 299.42770386]
[1011.36810303 309.37792969]
[997.45513916 315.31799316]
[982.38732910 316.66598511]
[967.64093018 313.28982544]
[954.66058350 305.52026367]
[944.71801758 294.11849976]
[938.78729248 280.20153809]
[937.44940186 265.13284302]
[922.82543945 261.79504395]
[908.20153809 258.45724487]
[895.76580811 266.57440186]
[880.88757324 263.39770508]
[872.45782471 250.29896545]
[858.32794189 255.01017761]
[846.59545898 244.39604187]
[831.97155762 241.05822754]
[817.34765625 237.72041321]
[802.72369385 234.38259888]
[787.94952393 231.78976440]
[773.06292725 229.94854736]
[758.17639160 228.10734558]
[740.96539307 236.92601013]
[725.07055664 224.52294922]
[710.13696289 223.11347961]
[695.20330811 221.70402527]
[680.26971436 220.29455566]
[665.33605957 218.88510132]
[650.40240479 217.47563171]
[637.00445557 223.98278809]
[623.99237061 214.98300171]
[610.59436035 221.49015808]
[597.58227539 212.49037170]
[582.64862061 211.08091736]
[577.79516602 217.27398682]
[570.80804443 221.09188843]
[562.78765869 221.84892273]
[555.03082275 219.34823608]
[548.82122803 213.92582703]
[545.21710205 206.40728760]
[530.39007568 204.13587952]
[515.56304932 201.86445618]
[500.73605347 199.59304810]
[485.90902710 197.32162476]
[479.70977783 203.66700745]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 119]
[4 118]
[6 117]
[7 116]
[8 115]
[9 114]
[10 113]
[11 112]
[12 111]
[13 110]
[14 109]
[18 108]
[19 107]
[20 106]
[22 104]
[23 103]
[24 102]
[26 100]
[27 99]
[28 98]
[29 97]
[30 96]
[33 61]
[34 60]
[35 57]
[36 56]
[37 55]
[38 54]
[39 53]
[40 51]
[41 50]
[42 49]
[43 48]
[65 93]
[66 92]
[68 90]
[70 88]
[71 87]
[72 86]
[73 85]
[74 84]
[75 83]
[76 82]
[77 81]
[121 215]
[122 214]
[123 213]
[124 212]
[125 211]
[127 205]
[128 204]
[130 202]
[132 200]
[133 199]
[134 198]
[135 197]
[136 196]
[137 195]
[141 193]
[142 192]
[143 191]
[151 190]
[152 189]
[153 188]
[154 187]
[156 185]
[159 182]
[160 181]
[161 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
