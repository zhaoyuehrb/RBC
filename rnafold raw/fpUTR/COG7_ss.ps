%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGGGUCAUUCCCAGCCGCAAACUGAGUGCGCUGAGCGGGGAAGCGCAAAGGGGCAAGUUACCCGUCCUGGCGUUUCUGGGGUUCGCCUCGGAGGCUAGCCUCGGUGCUCUCGCAGGCUCGCUCGCUUCUGCAUCCCCGUUGCCGCCCGGAGCCAACUCUUAAGUUCUGGACGCCAGGCCUGAGGCAGUUCCGCC\
) } def
/len { sequence length } bind def

/coor [
[181.81559753 269.97525024]
[171.29347229 259.28482056]
[160.77134705 248.59442139]
[153.77291870 255.40174866]
[143.01962280 259.08282471]
[138.56581116 273.40634155]
[134.11201477 287.72988892]
[138.25073242 303.59817505]
[126.38928986 314.92242432]
[110.72970581 310.05316162]
[107.38122559 293.99951172]
[119.78847504 283.27606201]
[124.24227905 268.95254517]
[128.69609070 254.62901306]
[115.95020294 246.72062683]
[105.09419250 257.07180786]
[94.23818207 267.42300415]
[83.38217163 277.77416992]
[72.60861969 288.21115112]
[61.91820908 298.73327637]
[51.22779846 309.25540161]
[52.64735413 324.82843018]
[43.68225098 337.64096069]
[28.56553268 341.64331055]
[14.43485355 334.94570923]
[7.96228790 320.71054077]
[12.20398331 305.65924072]
[25.15714073 296.89852905]
[40.70567322 298.56500244]
[51.39608765 288.04287720]
[62.08649826 277.52075195]
[64.65105438 270.58071899]
[73.03099060 266.91818237]
[83.88700104 256.56698608]
[94.74301147 246.21580505]
[105.59902191 235.86462402]
[109.48130798 221.37573242]
[105.25531769 206.98333740]
[101.02932739 192.59094238]
[96.80333710 178.19854736]
[92.57735443 163.80615234]
[88.35136414 149.41375732]
[84.12537384 135.02136230]
[79.89938354 120.62896729]
[69.72174835 109.61009216]
[55.70952988 104.25679779]
[41.69731140 98.90350342]
[27.68509293 93.55020905]
[13.67287445 88.19692230]
[4.00405073 93.20843506]
[-6.60771942 92.08837128]
[-14.67770386 85.44766235]
[-17.68991661 75.66981506]
[-31.52523041 69.87464142]
[-45.36054611 64.07946014]
[-59.19586182 58.28428268]
[-73.03117371 52.48910522]
[-85.67974091 61.32184982]
[-101.09659576 61.89125824]
[-114.36226654 54.01563644]
[-121.24373627 40.20807266]
[-119.54515076 24.87450218]
[-109.80852509 12.90781593]
[-95.14076996 8.12653923]
[-80.22232819 12.05636024]
[-69.81360626 23.44328690]
[-67.23600006 38.65379333]
[-53.40068436 44.44897079]
[-39.56536865 50.24414825]
[-25.73005486 56.03932190]
[-11.89474010 61.83449936]
[7.04710340 57.98027039]
[19.02616692 74.18470001]
[33.03838730 79.53799438]
[47.05060196 84.89128876]
[61.06282043 90.24458313]
[75.07504272 95.59787750]
[85.51202393 84.82432556]
[79.71684265 70.98900604]
[73.92166901 57.15369415]
[68.12648773 43.31837845]
[62.33131409 29.48306656]
[56.53613663 15.64775181]
[50.74095917 1.81243706]
[37.37056351 -7.68306303]
[39.17788696 -23.98231506]
[54.30371094 -30.31804657]
[67.18788147 -20.17259789]
[64.57627869 -3.98273993]
[70.37145233 9.85257435]
[76.16662598 23.68788910]
[81.96180725 37.52320480]
[87.75698090 51.35851669]
[93.55216217 65.19383240]
[99.34733582 79.02914429]
[114.34545135 78.79116058]
[119.69873810 64.77893829]
[125.05203247 50.76671982]
[122.74934387 35.11398315]
[134.51931763 25.98616600]
[139.87260437 11.97394848]
[145.22590637 -2.03826976]
[150.57919312 -16.05048752]
[155.93249512 -30.06270599]
[161.17445374 -44.11695099]
[166.30474854 -58.21234131]
[171.43505859 -72.30773163]
[165.98541260 -87.39682770]
[174.50715637 -100.98944855]
[190.46316528 -102.65848541]
[201.61332703 -91.12361145]
[199.40420532 -75.23338318]
[185.53044128 -67.17742920]
[180.40014648 -53.08203888]
[175.26983643 -38.98664856]
[175.93702698 -31.61808777]
[169.94470215 -24.70941162]
[164.59141541 -10.69719410]
[159.23811340 3.31502366]
[153.88482666 17.32724190]
[148.53153992 31.33946037]
[151.21713257 45.98994827]
[139.06425476 56.12001419]
[133.71095276 70.13223267]
[128.35766602 84.14444733]
[134.17877197 88.87359619]
[151.64205933 103.06102753]
[164.26086426 94.95141602]
[171.29035950 80.13526917]
[187.65582275 79.08480072]
[196.52188110 92.88064575]
[188.76786804 107.33081818]
[172.37046814 107.57022095]
[159.75167847 115.67983246]
[118.61061859 134.92179871]
[94.29177856 116.40297699]
[98.51776886 130.79537964]
[102.74375916 145.18777466]
[106.96974945 159.58016968]
[111.19573212 173.97256470]
[115.42172241 188.36495972]
[119.64771271 202.75733948]
[123.87370300 217.14973450]
[149.38380432 201.91540527]
[172.10343933 215.17584229]
[171.46176147 238.07229614]
[181.98388672 248.76271057]
[192.50599670 259.45312500]
[212.15379333 263.93038940]
[216.21726990 282.82846069]
[227.07327271 293.17962646]
[237.92929077 303.53082275]
[248.78529358 313.88201904]
[259.64129639 324.23318481]
[270.49731445 334.58438110]
[285.67385864 331.94256592]
[299.33621216 338.66513062]
[306.33752441 351.98602295]
[304.17828369 366.69912720]
[315.03430176 377.05032349]
[325.89031982 387.40148926]
[330.98443604 388.63436890]
[334.71734619 391.42382812]
[336.72344971 394.98788452]
[337.00173950 398.51293945]
[347.35293579 409.36892700]
[362.47589111 414.01724243]
[365.65896606 428.56774902]
[376.01016235 439.42376709]
[386.36132812 450.27978516]
[396.71252441 461.13577271]
[407.06369019 471.99179077]
[422.36990356 479.28265381]
[419.60113525 496.00900269]
[402.76199341 497.97875977]
[396.20770264 482.34298706]
[385.85650635 471.48696899]
[375.50531006 460.63095093]
[365.15414429 449.77493286]
[354.80294800 438.91894531]
[340.42037964 435.04711914]
[336.49691772 419.72012329]
[326.14572144 408.86410522]
[315.53912354 398.25750732]
[304.68313599 387.90631104]
[293.82711792 377.55514526]
[279.23339844 380.41198730]
[265.59448242 374.05245972]
[258.22943115 360.72543335]
[260.14611816 345.44039917]
[249.29011536 335.08920288]
[238.43411255 324.73800659]
[227.57809448 314.38684082]
[216.72209167 304.03564453]
[205.86607361 293.68444824]
[195.70082092 294.84518433]
[186.38171387 290.11465454]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[5 14]
[6 13]
[7 12]
[15 36]
[16 35]
[17 34]
[18 33]
[19 31]
[20 30]
[21 29]
[37 143]
[38 142]
[39 141]
[40 140]
[41 139]
[42 138]
[43 137]
[44 136]
[45 77]
[46 76]
[47 75]
[48 74]
[49 73]
[53 71]
[54 70]
[55 69]
[56 68]
[57 67]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[96 125]
[97 124]
[98 123]
[100 121]
[101 120]
[102 119]
[103 118]
[104 117]
[105 115]
[106 114]
[107 113]
[127 134]
[128 133]
[150 195]
[151 194]
[152 193]
[153 192]
[154 191]
[155 190]
[159 186]
[160 185]
[161 184]
[165 183]
[166 182]
[168 180]
[169 179]
[170 178]
[171 177]
[172 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
