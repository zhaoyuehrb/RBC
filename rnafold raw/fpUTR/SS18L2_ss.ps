%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCACCUCGCCCGGACGGCGGCCUUCGGAAGUCGGCGCCUGCCAGCUACCCGCCGCCUCCUCAGCAAUCUUAGCCGACCGGGAGGGCUCGGCCCAGGUCACCGGCAGCCCAGGCGCAGGCGGGAGCAUCCAAUCAACUUCGAGAGCGUAGGCCCCACCUAUCGUGGGUCGAGUUGCUUGGCGGUCGUGGUUCCGGAGGUUCCUCGGG\
) } def
/len { sequence length } bind def

/coor [
[37.51341248 551.56854248]
[37.10276794 566.86853027]
[29.61878014 580.21954346]
[16.78121185 588.55352783]
[1.54004347 589.95544434]
[-12.60241508 584.10314941]
[-22.39633179 572.34143066]
[-25.59113503 557.37304688]
[-21.45268250 542.63763428]
[-10.93196201 531.52130127]
[3.55344439 526.57849121]
[5.79969454 511.74761963]
[8.04594517 496.91677856]
[10.29219532 482.08590698]
[12.53844547 467.25506592]
[10.47565842 462.94604492]
[11.09894657 457.29531860]
[15.08158493 452.01486206]
[17.77261543 437.25820923]
[15.87976646 430.11285400]
[20.61659050 422.30072021]
[23.52912331 407.58621216]
[26.44165421 392.87167358]
[29.35418701 378.15716553]
[32.26671982 363.44262695]
[35.17925262 348.72811890]
[38.09178543 334.01358032]
[41.00431442 319.29907227]
[43.91684723 304.58453369]
[46.82938004 289.87002563]
[49.74191284 275.15548706]
[47.87546921 270.75790405]
[48.75285339 265.14099121]
[52.96948624 260.04544067]
[48.27343369 245.91050720]
[58.90016174 234.18945312]
[62.25367355 219.56912231]
[65.60718536 204.94879150]
[60.91113663 190.81385803]
[71.53786469 179.09280396]
[74.89138031 164.47247314]
[78.24488831 149.85214233]
[81.59840393 135.23182678]
[84.95191956 120.61149597]
[88.30543518 105.99116516]
[85.94778442 91.17761230]
[78.22113800 78.32074738]
[70.49449158 65.46388245]
[63.39057541 59.71920395]
[62.75000763 52.35518646]
[55.21748734 39.38363266]
[47.68496704 26.41208267]
[40.15244293 13.44053268]
[32.61992264 0.46898162]
[25.08740234 -12.50256920]
[17.26434898 -25.30099869]
[9.15473652 -37.91980362]
[1.04512382 -50.53860474]
[-7.06448841 -63.15740967]
[-25.38039970 -71.57459259]
[-25.46475601 -90.90966797]
[-33.95000839 -103.27900696]
[-42.52798462 -115.58422089]
[-59.43247604 -122.88443756]
[-60.37563705 -140.40740967]
[-75.74115753 -142.96444702]
[-84.54708862 -155.37049866]
[-82.01464081 -170.00341797]
[-90.86786652 -182.11212158]
[-99.72108459 -194.22080994]
[-108.57431030 -206.32951355]
[-123.93982697 -208.88655090]
[-132.74575806 -221.29260254]
[-130.21331787 -235.92552185]
[-139.06652832 -248.03422546]
[-147.91975403 -260.14291382]
[-156.77297974 -272.25161743]
[-165.62620544 -284.36029053]
[-174.57017517 -296.40213013]
[-183.60440063 -308.37637329]
[-199.22940063 -312.01489258]
[-205.99635315 -326.56094360]
[-198.71423340 -340.85607910]
[-182.96925354 -343.93423462]
[-170.83961487 -333.43417358]
[-171.63014221 -317.41058350]
[-162.59591675 -305.43634033]
[-156.05691528 -301.98953247]
[-153.51750183 -293.21353149]
[-144.66429138 -281.10482788]
[-135.81106567 -268.99612427]
[-126.95783997 -256.88745117]
[-118.10462189 -244.77874756]
[-103.39287567 -242.75384521]
[-94.24195862 -230.60002136]
[-96.46561432 -215.18272400]
[-87.61238861 -203.07403564]
[-78.75917053 -190.96533203]
[-69.90595245 -178.85664368]
[-55.19420624 -176.83174133]
[-46.04328918 -164.67791748]
[-48.26694107 -149.26062012]
[-36.36491013 -147.09455872]
[-28.89019585 -137.07771301]
[-30.28758430 -124.25444031]
[-23.85513687 -120.61263275]
[-21.58066940 -111.76425934]
[-13.09541893 -99.39492035]
[-2.92045832 -98.43470001]
[5.21668005 -91.89440155]
[8.47716522 -81.74596405]
[5.55431461 -71.26702118]
[13.66392708 -58.64821625]
[21.77353859 -46.02941513]
[29.88315201 -33.41061020]
[33.23383713 -32.30808258]
[36.21656418 -29.52695465]
[38.04779434 -25.25805473]
[38.05895233 -20.03508949]
[45.59147644 -7.06353903]
[53.12399673 5.90801191]
[60.65651703 18.87956238]
[68.18903351 31.85111427]
[75.72155762 44.82266617]
[83.35135651 57.73723602]
[91.07800293 70.59410095]
[98.80464172 83.45096588]
[95.25638580 68.87667847]
[101.37190247 55.17995071]
[114.59196472 48.09263611]
[129.38418579 50.58066559]
[139.55825806 61.60283661]
[140.85649109 76.54655457]
[132.73561096 89.15810394]
[118.59280396 94.15978241]
[133.58221436 93.59622955]
[148.57162476 93.03268433]
[163.56103516 92.46913147]
[178.55044556 91.90557861]
[187.00999451 88.45552063]
[193.76904297 91.44792175]
[208.76522827 91.10974121]
[223.76141357 90.77156067]
[235.61468506 77.90714264]
[252.76683044 77.60083771]
[264.59643555 89.55388641]
[279.58584595 88.99034119]
[294.57525635 88.42678833]
[309.55999756 87.75060272]
[324.53924561 86.96180725]
[339.51849365 86.17301178]
[354.49774170 85.38422394]
[366.25524902 74.46907043]
[382.09768677 76.99835968]
[389.87207031 91.03183746]
[383.61456299 105.80422211]
[368.12539673 109.98339844]
[355.28652954 100.36347198]
[340.30728149 101.15225983]
[325.32806396 101.94105530]
[310.34881592 102.72984314]
[303.83352661 106.22132111]
[295.13882446 103.41619873]
[280.14941406 103.97975159]
[265.16000366 104.54329681]
[257.80474854 115.12409973]
[245.51472473 119.60303497]
[232.70059204 116.13416290]
[224.09959412 105.76775360]
[209.10340881 106.10593414]
[194.10722351 106.44411469]
[179.11399841 106.89498901]
[164.12458801 107.45854187]
[149.13517761 108.02209473]
[134.14576721 108.58563995]
[119.15635681 109.14919281]
[113.09966278 111.47783661]
[107.42542267 111.39919281]
[102.92575836 109.34468079]
[99.57224274 123.96500397]
[96.21873474 138.58532715]
[92.86521912 153.20565796]
[89.51170349 167.82598877]
[86.15818787 182.44631958]
[90.61437988 197.62699890]
[80.22751617 208.30230713]
[76.87400055 222.92263794]
[73.52048492 237.54295349]
[77.97667694 252.72363281]
[67.58981323 263.39895630]
[64.45643616 278.06802368]
[61.54390335 292.78256226]
[58.63137054 307.49707031]
[55.71883774 322.21160889]
[52.80630493 336.92611694]
[49.89377213 351.64065552]
[46.98124313 366.35516357]
[44.06871033 381.06970215]
[41.15617752 395.78421021]
[38.24364471 410.49871826]
[35.33111191 425.21325684]
[32.52925110 439.94924927]
[29.83822250 454.70590210]
[27.36930466 469.50131226]
[25.12305450 484.33215332]
[22.87680244 499.16302490]
[20.63055229 513.99389648]
[18.38430214 528.82476807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 208]
[12 207]
[13 206]
[14 205]
[15 204]
[18 203]
[19 202]
[21 201]
[22 200]
[23 199]
[24 198]
[25 197]
[26 196]
[27 195]
[28 194]
[29 193]
[30 192]
[31 191]
[34 190]
[36 188]
[37 187]
[38 186]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[46 127]
[47 126]
[48 125]
[50 124]
[51 123]
[52 122]
[53 121]
[54 120]
[55 119]
[56 115]
[57 114]
[58 113]
[59 112]
[61 108]
[62 107]
[63 105]
[65 102]
[68 99]
[69 98]
[70 97]
[71 96]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 87]
[80 86]
[135 176]
[136 175]
[137 174]
[138 173]
[139 172]
[141 171]
[142 170]
[143 169]
[146 165]
[147 164]
[148 163]
[149 161]
[150 160]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
