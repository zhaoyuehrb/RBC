%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUGUCACUAGGCCGGCUGGGGGCCCUGGGUACGCUGUAGACCAGACCGCGACAGGCCAGAACACGGGCGGCGGCUUCGGGCCGGGAGACCCGCGCAGCCCUCGGGGCAUCUCAGUGCCUCACUCCCCACCCCCUCCCCCGGGUCGGGGGAGGCGGCGCGUCCGGCGGAGGGUUGAGGGGAGCGGGGCAGGCCUGGAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[-39.33605957 279.71777344]
[-48.15283966 291.85302734]
[-56.96961594 303.98828125]
[-65.78639984 316.12353516]
[-74.60317230 328.25878906]
[-83.41995239 340.39404297]
[-92.23673248 352.52929688]
[-89.96674347 367.93984985]
[-99.08107758 380.12112427]
[-113.78666687 382.19024658]
[-122.60344696 394.32550049]
[-131.42022705 406.46075439]
[-140.23699951 418.59600830]
[-149.05378723 430.73126221]
[-157.77731323 442.93371582]
[-166.40710449 455.20266724]
[-162.21736145 470.26852417]
[-168.73899841 484.48126221]
[-182.89270020 491.13009644]
[-197.99551392 487.07559204]
[-206.91636658 474.23220825]
[-205.44308472 458.66418457]
[-194.27133179 447.72225952]
[-178.67604065 446.57287598]
[-170.04626465 434.30395508]
[-168.76870728 427.02090454]
[-161.18904114 421.91448975]
[-152.37225342 409.77923584]
[-143.55548096 397.64398193]
[-134.73870850 385.50872803]
[-125.92192078 373.37347412]
[-128.49835205 358.74822998]
[-119.72975159 346.31576538]
[-104.37198639 343.71252441]
[-95.55520630 331.57727051]
[-86.73843384 319.44201660]
[-77.92165375 307.30676270]
[-69.10487366 295.17150879]
[-60.28809357 283.03625488]
[-51.47131348 270.90100098]
[-56.46988678 263.30563354]
[-59.20071411 254.60821533]
[-59.44211578 245.47192383]
[-57.16271591 236.59703064]
[-52.52486420 228.66734314]
[-45.87313080 222.29745483]
[-37.70872879 217.98516846]
[-28.65176201 216.07254028]
[-19.39413452 216.71884155]
[-10.64668655 219.88731384]
[-0.75289905 208.61286926]
[9.14088821 197.33842468]
[7.91822863 182.53840637]
[17.79132652 170.96357727]
[33.32324219 169.78149414]
[43.21702957 158.50704956]
[53.11081696 147.23262024]
[63.00460434 135.95817566]
[72.89839172 124.68373871]
[82.79218292 113.40929413]
[68.48339844 117.91027832]
[56.52709961 108.85230255]
[56.98673630 93.85934448]
[69.47544098 85.55077362]
[83.48168945 90.91986847]
[68.91452789 84.74667358]
[67.23889923 69.94661713]
[58.05437469 58.08725357]
[48.86985397 46.22788620]
[39.68533325 34.36852264]
[30.41021156 22.57987785]
[12.99420166 20.96049690]
[2.34559655 7.51258659]
[4.66890097 -9.14181042]
[-4.87473583 -20.71414757]
[-14.41837215 -32.28648376]
[-23.96200943 -43.85882187]
[-33.50564575 -55.43115997]
[-48.24785995 -63.80394363]
[-44.28334045 -80.28784180]
[-27.34615135 -81.04145813]
[-21.93330765 -64.97480011]
[-12.38967133 -53.40245819]
[-2.84603477 -41.83012390]
[6.69760180 -30.25778389]
[16.24123764 -18.68544769]
[29.11646271 -19.25931931]
[40.13502884 -12.20621109]
[45.15192795 0.08671904]
[42.12743759 13.21469975]
[48.76237488 16.47851181]
[51.54470062 25.18400002]
[60.72922134 37.04336548]
[69.91374207 48.90273285]
[79.09826660 60.76210022]
[93.00849152 66.08702850]
[95.34105682 81.73534393]
[102.52536774 79.58228302]
[116.89398956 75.27615356]
[124.07830048 73.12309265]
[125.22653961 58.16710281]
[126.37477875 43.21111679]
[127.52301788 28.25513077]
[122.70688629 11.99962997]
[136.99388123 2.87175107]
[149.72007751 14.07355404]
[142.47900391 29.40336800]
[141.33076477 44.35935593]
[140.18252563 59.31534195]
[139.03428650 74.27133179]
[144.06698608 79.83207703]
[146.48628235 65.02846527]
[159.56852722 57.68988800]
[173.46276855 63.34231567]
[177.70661926 77.72945404]
[169.10443115 90.01776123]
[154.13238525 90.95358276]
[159.16508484 96.51432800]
[174.16111755 96.85910797]
[189.15715027 97.20388794]
[204.15319824 97.54866791]
[219.14923096 97.89344788]
[234.14526367 98.23822021]
[248.11962891 90.82016754]
[260.66571045 98.84796143]
[275.66174316 99.19274139]
[290.65777588 99.53752136]
[305.65380859 99.88230133]
[320.64984131 100.22707367]
[335.64587402 100.57185364]
[350.64587402 100.57185364]
[365.64193726 100.22707367]
[380.63796997 99.88230133]
[395.63400269 99.53752136]
[410.47531128 97.36143494]
[424.93911743 93.38671112]
[439.40292358 89.41199493]
[453.86672974 85.43727112]
[468.33053589 81.46254730]
[482.79431152 77.48782349]
[497.25811768 73.51309967]
[511.72192383 69.53837585]
[526.18572998 65.56365967]
[539.85650635 55.53637314]
[553.27636719 65.89705658]
[547.03558350 81.66058350]
[530.16046143 80.02745819]
[515.69665527 84.00218201]
[501.23284912 87.97690582]
[486.76904297 91.95162964]
[472.30523682 95.92634583]
[457.84143066 99.90106964]
[443.37765503 103.87579346]
[428.91384888 107.85051727]
[414.45004272 111.82524109]
[414.27764893 119.32325745]
[427.09222412 127.11983490]
[413.93286133 134.31929016]
[413.76046753 141.81730652]
[428.02633667 146.45256042]
[442.29217529 151.08782959]
[457.18188477 145.11489868]
[471.06362915 153.15708923]
[473.28851318 169.04510498]
[462.14981079 180.59104919]
[446.19216919 178.93782043]
[437.65692139 165.35366821]
[423.39108276 160.71841431]
[409.12521362 156.08316040]
[396.29922485 142.46067810]
[392.19979858 127.25112915]
[395.97879028 114.53355408]
[380.98272705 114.87833405]
[365.98669434 115.22311401]
[350.99066162 115.56789398]
[348.30203247 117.85596466]
[344.36993408 118.95295715]
[339.76739502 118.28791046]
[335.30111694 115.56789398]
[320.30508423 115.22311401]
[305.30902100 114.87833405]
[290.31298828 114.53355408]
[275.31695557 114.18878174]
[260.32092285 113.84400177]
[247.41917419 121.28672028]
[233.80049133 113.23426056]
[218.80444336 112.88948059]
[203.80841064 112.54470062]
[188.81237793 112.19992828]
[173.81634521 111.85514832]
[158.82029724 111.51036835]
[94.06661987 123.30308533]
[84.17282867 134.57752991]
[74.27904510 145.85195923]
[64.38525391 157.12640381]
[54.49147034 168.40083313]
[44.59768295 179.67527771]
[45.44309616 195.22915649]
[35.24877930 206.52209473]
[20.41532707 207.23222351]
[10.52153969 218.50665283]
[0.62775260 229.78109741]
[6.78008604 250.24534607]
[-0.63118637 270.14416504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 40]
[2 39]
[3 38]
[4 37]
[5 36]
[6 35]
[7 34]
[10 31]
[11 30]
[12 29]
[13 28]
[14 27]
[15 25]
[16 24]
[50 202]
[51 201]
[52 200]
[55 197]
[56 196]
[57 195]
[58 194]
[59 193]
[60 192]
[65 97]
[67 95]
[68 94]
[69 93]
[70 92]
[71 90]
[74 86]
[75 85]
[76 84]
[77 83]
[78 82]
[100 110]
[101 109]
[102 108]
[103 107]
[118 191]
[119 190]
[120 189]
[121 188]
[122 187]
[123 186]
[125 184]
[126 183]
[127 182]
[128 181]
[129 180]
[130 179]
[131 175]
[132 174]
[133 173]
[134 172]
[135 155]
[136 154]
[137 153]
[138 152]
[139 151]
[140 150]
[141 149]
[142 148]
[143 147]
[159 169]
[160 168]
[161 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
