%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGGGCUCUCGCGGGGCGGCGACGCCGCGGGGAGGAUGCUGCUUGCCGCGCCCGCGUCCUCACCGUCCUCCCGGGCCGCCUGCUGGGGCUUUGUUGUGGCCCGGACGCCGCGGGCCACCCCCUGAAGUCGCCUGCCGCCGCCGCCGCCGCACCUAGCGGACGGGCGGGCGGGCGCGCGUGUGCCCAGGAGUGCGCGCCUGUCGCGGUGGUGGGUGCAGGACUGGACCCACGGGCCCAUUGUGCGCCCGC\
CCGCGGCAGCCAGGACC\
) } def
/len { sequence length } bind def

/coor [
[455.76895142 367.47369385]
[454.56195068 352.52233887]
[445.82562256 340.45892334]
[452.42736816 326.08090210]
[451.22036743 311.12954712]
[450.01336670 296.17819214]
[448.80636597 281.22683716]
[447.59936523 266.27548218]
[446.39236450 251.32411194]
[445.18536377 236.37275696]
[443.97836304 221.42138672]
[442.77136230 206.47003174]
[429.43530273 203.96008301]
[418.54931641 197.27523804]
[411.26052856 187.76686096]
[408.10125732 177.03356934]
[408.96923828 166.67095947]
[394.71411133 162.00288391]
[380.45895386 157.33480835]
[366.20382690 152.66673279]
[351.92205811 148.08074951]
[337.61413574 143.57702637]
[323.30624390 139.07330322]
[308.97262573 134.65197754]
[294.61383057 130.31318665]
[280.25503540 125.97441101]
[265.89624023 121.63562775]
[251.53746033 117.29684448]
[237.17866516 112.95806885]
[224.21257019 120.19795227]
[209.58889771 116.00235748]
[202.08296204 102.35323334]
[187.72416687 98.01445007]
[173.30291748 101.73961639]
[162.33068848 90.34133148]
[147.97189331 86.00254822]
[133.61309814 81.66376495]
[80.63874817 187.73997498]
[66.61351013 193.05905151]
[52.58826447 198.37811279]
[38.56301880 203.69718933]
[24.53777695 209.01626587]
[10.51253319 214.33534241]
[-3.51271081 219.65441895]
[-17.53795433 224.97348022]
[-31.46929741 230.53385925]
[-45.30258942 236.33384705]
[-59.13588333 242.13385010]
[-66.51760864 256.37777710]
[-82.28369141 259.34600830]
[-94.33973694 248.76152039]
[-93.43738556 232.74386597]
[-80.26884460 223.58039856]
[-64.93588257 228.30056763]
[-51.10259247 222.50056458]
[-37.26929855 216.70056152]
[-35.60566330 213.63114929]
[-32.39137650 211.20188904]
[-27.93731689 210.12460327]
[-22.85702705 210.94824219]
[-8.83178425 205.62916565]
[5.19345951 200.31008911]
[19.21870232 194.99102783]
[33.24394608 189.67195129]
[47.26919174 184.35287476]
[61.29443359 179.03379822]
[75.31967926 173.71473694]
[74.67317200 166.24264526]
[61.08462906 159.89036560]
[73.38017273 151.29847717]
[72.73366547 143.82640076]
[58.00325394 140.99533081]
[43.27283859 138.16426086]
[28.54242706 135.33320618]
[13.23370171 141.21325684]
[0.65904021 130.68663025]
[3.75417590 114.58220673]
[19.33509827 109.46685028]
[31.37348938 120.60279083]
[46.10390472 123.43385315]
[60.83431625 126.26491547]
[75.56472778 129.09597778]
[78.06217957 122.02400970]
[85.55452728 100.80810547]
[72.31301117 93.76094818]
[59.07150269 86.71379852]
[45.82999039 79.66664124]
[29.46821404 80.77313232]
[20.55498886 67.00772858]
[28.25947571 52.53109360]
[44.65596008 52.23555374]
[52.87714386 66.42513275]
[66.11865234 73.47229004]
[79.36016846 80.51943970]
[92.60167694 87.56658936]
[97.76589966 82.12776947]
[86.88825989 71.79932404]
[76.01078796 61.47069168]
[86.33959198 50.59339142]
[97.21670532 60.92167664]
[108.09435272 71.25012970]
[113.25857544 65.81130219]
[105.53546906 52.95231247]
[97.81236267 40.09332275]
[90.08926392 27.23433113]
[82.36615753 14.37533951]
[74.64305115 1.51634860]
[66.91994476 -11.34264278]
[59.19684219 -24.20163345]
[43.72494507 -26.47199059]
[33.37083054 -38.19062042]
[33.02338791 -53.82434082]
[42.84666824 -65.99139404]
[58.20242310 -68.94686127]
[71.84013367 -61.29526901]
[77.32048798 -46.64945984]
[72.05583191 -31.92473793]
[79.77893829 -19.06574821]
[87.50204468 -6.20675659]
[95.22514343 6.65223455]
[102.94824982 19.51122475]
[110.67135620 32.37021637]
[118.39446259 45.22920609]
[126.11756897 58.08819962]
[137.95188904 67.30496979]
[152.31068420 71.64375305]
[166.66947937 75.98253632]
[182.11775208 72.56771088]
[192.06294250 83.65565491]
[206.42173767 87.99443817]
[220.23022461 80.78587341]
[234.73028564 85.39056396]
[241.51744080 98.59927368]
[255.87623596 102.93805695]
[270.23504639 107.27683258]
[284.59384155 111.61561584]
[298.95263672 115.95439911]
[313.31143188 120.29318237]
[322.39346313 119.77806091]
[327.80996704 124.76538849]
[342.11785889 129.26911926]
[356.42578125 133.77284241]
[365.51315308 133.36227417]
[370.87188721 138.41159058]
[385.12704468 143.07966614]
[399.38217163 147.74774170]
[413.63732910 152.41581726]
[442.57919312 134.97169495]
[474.69317627 158.84727478]
[487.76901245 151.49725342]
[500.84481812 144.14724731]
[513.92065430 136.79722595]
[526.99645996 129.44720459]
[540.07232666 122.09719086]
[553.14813232 114.74716949]
[566.22393799 107.39715576]
[551.48284912 104.62225342]
[541.12347412 93.77404785]
[539.03076172 78.92075348]
[545.98944092 65.63253021]
[559.38995361 58.89262772]
[574.20690918 61.22859573]
[584.88385010 71.76441193]
[587.41674805 86.54901886]
[580.85736084 100.03627014]
[594.55352783 93.91945648]
[608.24963379 87.80264282]
[621.94580078 81.68582916]
[635.64196777 75.56901550]
[649.33813477 69.45220184]
[663.03424072 63.33538437]
[676.73040771 57.21857071]
[686.17584229 44.52627945]
[700.95202637 46.40100479]
[714.64813232 40.28419113]
[728.12500000 33.69828033]
[741.36651611 26.65112877]
[754.60803223 19.60397530]
[767.84954834 12.55682182]
[781.09106445 5.50966883]
[794.33258057 -1.53748429]
[802.55377197 -15.72706413]
[818.95025635 -15.43152428]
[826.65472412 -0.95489037]
[817.74151611 12.81051731]
[801.37976074 11.70402718]
[788.13824463 18.75118065]
[774.89672852 25.79833412]
[761.65521240 32.84548569]
[748.41369629 39.89263916]
[735.17218018 46.93979263]
[749.25146484 52.11417389]
[755.64501953 65.68333435]
[750.67181396 79.83493042]
[737.19519043 86.42126465]
[722.97412109 81.65030670]
[716.19641113 68.26889801]
[720.76495361 53.98034286]
[707.06884766 60.09715652]
[698.60302734 72.35192871]
[682.84722900 70.91471863]
[669.15106201 77.03153229]
[655.45489502 83.14835358]
[641.75878906 89.26516724]
[628.06262207 95.38198090]
[614.36645508 101.49879456]
[600.67028809 107.61560822]
[586.97418213 113.73242188]
[573.57397461 120.47297668]
[560.49816895 127.82299805]
[547.42230225 135.17301941]
[534.34649658 142.52304077]
[521.27069092 149.87304688]
[508.19485474 157.22306824]
[495.11901855 164.57308960]
[482.04318237 171.92311096]
[480.66421509 186.85958862]
[492.17337036 196.47933960]
[503.68249512 206.09910583]
[515.19165039 215.71885681]
[526.70080566 225.33862305]
[538.20989990 234.95837402]
[549.71905518 244.57814026]
[565.26965332 247.49177551]
[570.07293701 261.59063721]
[581.58203125 271.21038818]
[590.13928223 274.29635620]
[593.16748047 281.00769043]
[604.56512451 290.75924683]
[615.96282959 300.51080322]
[631.47888184 303.60321045]
[636.11956787 317.75640869]
[647.51721191 327.50796509]
[663.72949219 329.97680664]
[669.44470215 345.34783936]
[658.78350830 357.80865479]
[642.71331787 354.54061890]
[637.76568604 338.90563965]
[626.36798096 329.15408325]
[611.66717529 326.75918579]
[606.21124268 311.90847778]
[594.81359863 302.15692139]
[583.41589355 292.40536499]
[571.96228027 282.71954346]
[560.45318604 273.09976196]
[545.72576904 270.87420654]
[540.09930420 256.08728027]
[528.59014893 246.46751404]
[517.08099365 236.84774780]
[505.57186890 227.22799683]
[494.06274414 217.60824585]
[482.55361938 207.98847961]
[471.04446411 198.36872864]
[457.72274780 205.26303101]
[458.92974854 220.21440125]
[460.13671875 235.16575623]
[461.34371948 250.11711121]
[462.55072021 265.06848145]
[463.75772095 280.01983643]
[464.96472168 294.97119141]
[466.17172241 309.92254639]
[467.37872314 324.87390137]
[476.20138550 338.00674438]
[469.51330566 351.31533813]
[470.72030640 366.26669312]
[484.03671265 374.23242188]
[490.09680176 388.51718140]
[486.57034302 403.62823486]
[474.81332397 413.75503540]
[459.34658813 415.00366211]
[446.11734009 406.89395142]
[440.21258545 392.54428101]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 265]
[2 264]
[4 262]
[5 261]
[6 260]
[7 259]
[8 258]
[9 257]
[10 256]
[11 255]
[12 254]
[17 147]
[18 146]
[19 145]
[20 144]
[21 142]
[22 141]
[23 140]
[24 138]
[25 137]
[26 136]
[27 135]
[28 134]
[29 133]
[32 130]
[33 129]
[35 127]
[36 126]
[37 125]
[38 67]
[39 66]
[40 65]
[41 64]
[42 63]
[43 62]
[44 61]
[45 60]
[46 56]
[47 55]
[48 54]
[71 82]
[72 81]
[73 80]
[74 79]
[84 95]
[85 94]
[86 93]
[87 92]
[102 124]
[103 123]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[149 216]
[150 215]
[151 214]
[152 213]
[153 212]
[154 211]
[155 210]
[156 209]
[165 208]
[166 207]
[167 206]
[168 205]
[169 204]
[170 203]
[171 202]
[172 201]
[174 199]
[175 198]
[176 191]
[177 190]
[178 189]
[179 188]
[180 187]
[181 186]
[217 253]
[218 252]
[219 251]
[220 250]
[221 249]
[222 248]
[223 247]
[225 245]
[226 244]
[228 243]
[229 242]
[230 241]
[232 239]
[233 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
