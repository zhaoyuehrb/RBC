%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGUCCCUGGCUCACGUGAUCGCGCCUAGGGAGAAAACGUCUGACUCCAGCCACCGGCCUUCAAGGCACGGCUUUUUAUUCCUUCGGCUGGUCGGCCUCUCGCCCUUCAGCUACCUGUGCGUCCCUCCGUCCCGUCCCGUCCCGGGGUCACCCCGGAGCCUGUCCGCU\
) } def
/len { sequence length } bind def

/coor [
[97.33038330 788.74206543]
[82.47628784 785.94079590]
[69.10859680 778.88415527]
[58.41594696 768.19964600]
[51.34912872 754.83734131]
[48.53651810 739.98535156]
[50.22820663 724.96441650]
[56.27377701 711.11004639]
[66.13565063 699.65429688]
[78.93692780 691.61572266]
[93.53932190 687.70910645]
[94.09035492 672.71923828]
[94.64138794 657.72937012]
[95.19242096 642.73950195]
[95.74345398 627.74963379]
[82.50079346 615.15045166]
[82.63652039 596.55395508]
[96.52919006 583.71716309]
[96.52919006 568.71716309]
[96.52919006 553.71716309]
[96.52919006 538.71716309]
[96.52919006 523.71716309]
[96.52919006 508.71716309]
[88.79188538 495.98986816]
[96.52919006 482.18969727]
[96.52919006 467.18969727]
[83.56186676 459.86071777]
[75.95346832 446.93908691]
[75.83363342 431.84432983]
[83.33467865 418.62951660]
[96.52919006 410.89309692]
[96.52919006 395.89309692]
[96.52919006 380.89309692]
[96.52919006 365.89309692]
[83.56186676 358.56411743]
[75.95346832 345.64248657]
[75.83363342 330.54772949]
[83.33467865 317.33291626]
[96.52919006 309.59649658]
[96.52919006 294.59649658]
[96.52919006 279.59649658]
[82.95613098 270.39443970]
[77.47463226 254.76341248]
[82.42590332 238.78259277]
[96.05234528 228.79249573]
[95.77678680 213.79502869]
[95.50122070 198.79756165]
[87.53141785 186.21458435]
[95.01389313 172.27459717]
[94.60057831 157.28028870]
[94.04954529 142.29042053]
[93.49851227 127.30053711]
[79.15593719 122.59497070]
[68.21974182 110.33312988]
[64.60296631 92.93658447]
[70.55355835 74.77770233]
[60.09410858 64.02596283]
[49.63465881 53.27422333]
[39.07688522 42.61901855]
[28.42167854 32.06124496]
[17.76647186 21.50347137]
[7.11126709 10.94569588]
[-8.39573956 4.09229708]
[-6.10294056 -12.70590019]
[10.67348671 -15.15290737]
[17.66904068 0.29049084]
[28.32424736 10.84826469]
[38.97945023 21.40603828]
[49.63465881 31.96381378]
[56.62592697 34.44757462]
[60.38639450 42.81477356]
[70.84584808 53.56650925]
[81.30529785 64.31824493]
[88.76704407 63.56169510]
[84.74266815 49.11162949]
[80.71829224 34.66156387]
[76.69391632 20.21149826]
[68.41406250 7.70374393]
[69.91277313 -7.22119665]
[80.51422119 -17.83295059]
[95.43769836 -19.34617043]
[107.95349121 -11.07847118]
[112.41763306 3.24184442]
[106.81679535 17.15732002]
[105.77470398 32.12107849]
[104.73262024 47.08483505]
[103.69052887 62.04859543]
[111.15227509 61.29204178]
[119.24079895 48.65971375]
[127.32933044 36.02738190]
[135.41784668 23.39505196]
[143.50637817 10.76272297]
[151.59490967 -1.86960685]
[148.42337036 -17.12015152]
[156.80624390 -29.81590652]
[171.36483765 -32.74549484]
[179.45336914 -45.37782669]
[187.54190063 -58.01015472]
[185.52384949 -73.92578125]
[196.81179810 -85.32585907]
[212.74659729 -83.46523285]
[221.10441589 -69.77120972]
[215.47387695 -54.74867249]
[200.17422485 -49.92163086]
[192.08569336 -37.28929901]
[183.99717712 -24.65697098]
[187.42846680 -10.20837975]
[179.40551758 2.71782279]
[164.22723389 6.21891832]
[156.13870239 18.85124779]
[148.05018616 31.48357773]
[139.96165466 44.11590958]
[131.87313843 56.74823761]
[123.78460693 69.38056946]
[134.59706116 93.49888611]
[127.15023041 116.23361969]
[108.48838806 126.74950409]
[109.03942108 141.73937988]
[109.59045410 156.72926331]
[113.04396057 165.22775269]
[110.01136017 171.99903870]
[118.00087738 185.65473938]
[110.49868774 198.52200317]
[110.77425385 213.51947021]
[111.04981995 228.51693726]
[122.92075348 235.56428528]
[129.69696045 247.46752930]
[129.69680786 261.05603027]
[123.02757263 272.77075195]
[111.52919006 279.59649658]
[111.52919006 294.59649658]
[111.52919006 309.59649658]
[124.72369385 317.33291626]
[132.22474670 330.54772949]
[132.10490417 345.64248657]
[124.49650574 358.56411743]
[111.52919006 365.89309692]
[111.52919006 380.89309692]
[111.52919006 395.89309692]
[111.52919006 410.89309692]
[124.72369385 418.62951660]
[132.22474670 431.84432983]
[132.10490417 446.93908691]
[124.49650574 459.86071777]
[111.52919006 467.18969727]
[111.52919006 482.18969727]
[119.26648712 495.98986816]
[111.52919006 508.71716309]
[111.52919006 523.71716309]
[111.52919006 538.71716309]
[111.52919006 553.71716309]
[111.52919006 568.71716309]
[111.52919006 583.71716309]
[121.44627380 590.35552979]
[126.85617065 600.85778809]
[126.51031494 612.54626465]
[120.61132050 622.50360107]
[110.73332977 628.30065918]
[110.18229675 643.29052734]
[109.63126373 658.28039551]
[109.08023071 673.27026367]
[108.52919769 688.26013184]
[122.80535126 693.22833252]
[134.98187256 702.18511963]
[143.97604370 714.33404541]
[148.98808289 728.59484863]
[149.57234192 743.69946289]
[145.67687988 758.30487061]
[137.64805603 771.11224365]
[126.19979095 780.98284912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 162]
[12 161]
[13 160]
[14 159]
[15 158]
[18 153]
[19 152]
[20 151]
[21 150]
[22 149]
[23 148]
[25 146]
[26 145]
[31 140]
[32 139]
[33 138]
[34 137]
[39 132]
[40 131]
[41 130]
[45 125]
[46 124]
[47 123]
[49 121]
[50 119]
[51 118]
[52 117]
[56 73]
[57 72]
[58 71]
[59 69]
[60 68]
[61 67]
[62 66]
[88 114]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[96 106]
[97 105]
[98 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
