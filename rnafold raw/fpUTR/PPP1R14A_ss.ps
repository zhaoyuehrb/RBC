%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGGACCCGCCCGGGACUCUGGGUCCCCGCCCAUACCUCAACUUCGCACGACUGCGUGCCUCAAGCCGACGCAGCGGCCUACUCUCGCACUGCAGACGGGGAAACUGAGGCCUGAGGCGGCCGGGGUGGGGCAGACCUCCCGGCGAGCCCGAGCCCCCGCCCCCGGCUAGCCCCGCCCUGGCCCGUAAGAAGCACCCGGGGCGCGAGGCGAAGGCGCACAGCGCGGGGCCAGGCUGGGUCCAGCAGCGCG\
) } def
/len { sequence length } bind def

/coor [
[116.52245331 264.24847412]
[115.40592957 249.29008484]
[106.45645905 241.17686462]
[105.38923645 228.74253845]
[113.31747437 218.59115601]
[112.38676453 203.62005615]
[111.45606232 188.64895630]
[110.52536011 173.67785645]
[109.59465790 158.70675659]
[108.66395569 143.73565674]
[93.95902252 140.77505493]
[87.30729675 154.21955872]
[80.65557098 167.66406250]
[74.00384521 181.10855103]
[67.35211945 194.55305481]
[60.70039749 207.99754333]
[62.29118347 224.31936646]
[48.79590988 233.63652039]
[34.09735489 226.36434937]
[33.31613159 209.98382568]
[47.25589752 201.34582520]
[53.90762329 187.90132141]
[60.55934906 174.45683289]
[67.21107483 161.01232910]
[73.86280060 147.56782532]
[80.51452637 134.12333679]
[70.79551697 123.77762604]
[65.74404907 111.15099335]
[65.65962219 98.14649963]
[70.12538910 86.56748199]
[55.81419754 82.07416534]
[41.50300980 77.58085632]
[27.19182014 73.08753967]
[12.85300922 68.68316650]
[-1.51287031 64.36790466]
[-15.30953693 71.59906769]
[-29.81711006 67.01812744]
[-36.62589645 53.82054901]
[-50.99177551 49.50528717]
[-65.35765076 45.19002151]
[-79.72353363 40.87475967]
[-94.08941650 36.55949402]
[-107.88607788 43.79065704]
[-122.39365387 39.20972061]
[-129.20243835 26.01214218]
[-143.56831360 21.69687843]
[-157.93420410 17.38161469]
[-173.37687683 20.82172966]
[-183.34019470 9.75008583]
[-192.43161011 10.27962685]
[-197.85705566 5.29102230]
[-212.16824341 0.79770917]
[-227.65245056 4.04580736]
[-237.47753906 -7.14869833]
[-251.78872681 -11.64201164]
[-266.09991455 -16.13532448]
[-280.41110229 -20.62863731]
[-294.74990845 -25.03301239]
[-309.11578369 -29.34827614]
[-323.48165894 -33.66353989]
[-337.84756470 -37.97880554]
[-349.62521362 -24.37771606]
[-366.12594604 -17.34074211]
[-383.98815918 -18.25074577]
[-399.59521484 -26.87677002]
[-409.80746460 -41.43026733]
[-412.59402466 -58.93574142]
[-427.11062622 -62.71297836]
[-441.62725830 -66.49021149]
[-456.14389038 -70.26744843]
[-469.64462280 -62.05123520]
[-484.98083496 -65.86907196]
[-493.05386353 -79.45590210]
[-489.07409668 -94.75090027]
[-475.40264893 -102.67981720]
[-460.15060425 -98.53856659]
[-452.36666870 -84.78407288]
[-437.85003662 -81.00684357]
[-423.33340454 -77.22960663]
[-408.81677246 -73.45236969]
[-401.97860718 -83.54370880]
[-392.36157227 -91.07387543]
[-380.87887573 -95.30886078]
[-368.62673950 -95.82846832]
[-356.77969360 -92.56793976]
[-346.47799683 -85.82563019]
[-338.71789551 -76.23572540]
[-334.25537109 -64.70867157]
[-333.53228760 -52.34468460]
[-319.16641235 -48.02941895]
[-304.80053711 -43.71415710]
[-290.43466187 -39.39889145]
[-283.14428711 -40.48164749]
[-275.91778564 -34.93982697]
[-261.60659790 -30.44651413]
[-247.29541016 -25.95320129]
[-232.98422241 -21.45988846]
[-218.52365112 -25.02937698]
[-207.67494202 -13.51348019]
[-193.36375427 -9.02016640]
[-179.02493286 -4.61579323]
[-164.60980225 -8.36456585]
[-153.61892700 3.01573515]
[-139.25305176 7.33099937]
[-124.88717651 11.64626312]
[-111.93295288 4.38515663]
[-97.30242920 8.55680084]
[-89.77414703 22.19361496]
[-75.40827179 26.50887871]
[-61.04238892 30.82414246]
[-46.67650986 35.13940811]
[-32.31063080 39.45466995]
[-19.35640717 32.19356537]
[-4.72588968 36.36520767]
[2.80239391 50.00202179]
[17.16827393 54.31728745]
[24.45863724 53.23453140]
[31.68513298 58.77635193]
[45.99632263 63.26966476]
[60.30751038 67.76297760]
[74.61869812 72.25628662]
[87.48313141 64.54225159]
[90.26091003 49.80169678]
[93.03869629 35.06114578]
[95.81647491 20.32058907]
[98.59425354 5.58003521]
[101.37203217 -9.16051865]
[104.14981079 -23.90107346]
[102.66542053 -32.88609314]
[107.05468750 -38.80691528]
[110.01528168 -53.51184464]
[101.05789185 -66.53262329]
[104.01325989 -82.05812836]
[117.12801361 -90.87735748]
[132.62141418 -87.75801086]
[141.30148315 -74.55075073]
[138.01850891 -59.09119797]
[124.72020721 -50.55124283]
[121.75961304 -35.84631729]
[118.89036560 -21.12329292]
[116.11258698 -6.38273907]
[113.33480835 8.35781479]
[110.55702972 23.09836960]
[107.77924347 37.83892441]
[105.00146484 52.57947922]
[102.22368622 67.32003021]
[131.19219971 81.97610474]
[135.29815674 117.26629639]
[150.26319885 118.28993225]
[165.22822571 119.31356812]
[180.19325256 120.33720398]
[194.48927307 113.55970001]
[206.65885925 122.14750671]
[215.40673828 119.61596680]
[221.80299377 123.27789307]
[236.75416565 124.48727417]
[251.70532227 125.69665527]
[266.65649414 126.90603638]
[281.60766602 128.11541748]
[296.56604004 129.23193359]
[311.53106689 130.25556946]
[326.49612427 131.27920532]
[337.18368530 118.15264893]
[353.43054199 114.03361511]
[368.77343750 120.35596466]
[377.23040771 134.44006348]
[392.20700073 135.27780151]
[406.41775513 128.32330322]
[418.69305420 136.75933838]
[433.66964722 137.59707642]
[449.92541504 128.92015076]
[464.21496582 139.12689209]
[479.20080566 139.77859497]
[494.18664551 140.43029785]
[509.17623901 140.98895264]
[524.17163086 141.36143494]
[539.16900635 141.64080811]
[554.16644287 141.92018127]
[569.16381836 142.19955444]
[584.16119385 142.47894287]
[599.15863037 142.75831604]
[614.15600586 143.03768921]
[629.15338135 143.31706238]
[637.70025635 132.92811584]
[650.48107910 129.40159607]
[662.77996826 133.80670166]
[670.19146729 144.32791138]
[685.18420410 144.79348755]
[697.81262207 134.89891052]
[713.38830566 138.74308777]
[719.96295166 153.37709045]
[712.49298096 167.57496643]
[696.70880127 170.44531250]
[684.71862793 159.78625488]
[669.72589111 159.32067871]
[657.95953369 171.35401917]
[640.79278564 171.13681030]
[628.87402344 158.31445312]
[613.87664795 158.03507996]
[598.87921143 157.75570679]
[583.88183594 157.47633362]
[568.88446045 157.19696045]
[553.88702393 156.91758728]
[538.88964844 156.63821411]
[523.89227295 156.35884094]
[517.16436768 159.36836243]
[508.71066284 155.98173523]
[501.94592285 158.90747070]
[493.53494263 155.41613770]
[478.54910278 154.76443481]
[463.56326294 154.11273193]
[454.45315552 162.04513550]
[441.97964478 161.64152527]
[432.83190918 152.57365417]
[417.85531616 151.73593140]
[404.71578979 158.75035095]
[391.36926270 150.25439453]
[376.39266968 149.41665649]
[368.96160889 160.49017334]
[356.93579102 166.50015259]
[343.40261841 165.78427124]
[331.89572144 158.42256165]
[325.47247314 146.24424744]
[310.50744629 145.22061157]
[295.54241943 144.19697571]
[288.67340088 146.86874390]
[280.39828491 143.06657410]
[265.44711304 141.85719299]
[250.49594116 140.64782715]
[235.54478455 139.43844604]
[220.59361267 138.22906494]
[205.63522339 137.11253357]
[192.40960693 143.96325684]
[179.16961670 135.30223083]
[164.20458984 134.27859497]
[149.23956299 133.25495911]
[134.27452087 132.23132324]
[123.63504791 142.80494690]
[124.56575775 157.77604675]
[125.49645996 172.74714661]
[126.42716217 187.71824646]
[127.35786438 202.68934631]
[128.28857422 217.66044617]
[138.81835938 232.78205872]
[130.36431885 248.17355347]
[131.48083496 263.13195801]
[144.27970886 272.11654663]
[148.25903320 287.23934937]
[141.53991699 301.35980225]
[127.29490662 307.81069946]
[112.25006866 303.54608154]
[103.50911713 290.57958984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 246]
[2 245]
[5 243]
[6 242]
[7 241]
[8 240]
[9 239]
[10 238]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[30 121]
[31 120]
[32 119]
[33 118]
[34 116]
[35 115]
[38 112]
[39 111]
[40 110]
[41 109]
[42 108]
[45 105]
[46 104]
[47 103]
[49 101]
[51 100]
[52 99]
[54 97]
[55 96]
[56 95]
[57 94]
[58 92]
[59 91]
[60 90]
[61 89]
[67 80]
[68 79]
[69 78]
[70 77]
[122 146]
[123 145]
[124 144]
[125 143]
[126 142]
[127 141]
[128 140]
[130 139]
[131 138]
[148 237]
[149 236]
[150 235]
[151 234]
[153 232]
[155 231]
[156 230]
[157 229]
[158 228]
[159 227]
[160 225]
[161 224]
[162 223]
[166 218]
[167 217]
[169 215]
[170 214]
[172 211]
[173 210]
[174 209]
[175 207]
[176 205]
[177 204]
[178 203]
[179 202]
[180 201]
[181 200]
[182 199]
[183 198]
[187 195]
[188 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
