%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCAGGCCCAGCCUGGAAAUGGAUGUCAUAAGUGCACAGGGGUCUAGGGAGGCAGAGAGCGAAAGAGGAAACAGGAGCGUUUUAGGAAAGACUAGAGCUGCCUGAGGGUUUGGAUCAAAACUGCUUUAAAAGUCCUUCUUCAACAAGCACUGAGCACCUACUCCGGGCCAGGC\
) } def
/len { sequence length } bind def

/coor [
[-1.57497346 803.94641113]
[-8.11078835 818.01989746]
[-21.68689156 825.53448486]
[-37.08299637 823.60064697]
[-48.37898254 812.96203613]
[-51.23131561 797.70935059]
[-44.54321289 783.70764160]
[-30.88639069 776.34075928]
[-29.01701736 761.45770264]
[-27.14764595 746.57464600]
[-36.45941162 735.00628662]
[-34.77561569 719.88610840]
[-22.57853317 710.19750977]
[-20.70915985 695.31445312]
[-18.83978844 680.43139648]
[-16.97041512 665.54833984]
[-15.10104275 650.66528320]
[-13.23167038 635.78222656]
[-11.36229801 620.89916992]
[-22.33549309 610.86291504]
[-25.33021736 596.11517334]
[-18.99260902 582.27001953]
[-5.56253386 574.72418213]
[-3.69316149 559.84112549]
[-5.98680067 552.78973389]
[-1.65529668 544.71002197]
[0.47942588 529.86267090]
[2.61414838 515.01538086]
[-6.06536961 507.55249023]
[-10.09235477 496.70928955]
[-8.35247612 485.15264893]
[-1.16528118 475.78518677]
[9.76695156 471.01644897]
[12.43024921 456.25476074]
[15.09354782 441.49310303]
[17.75684547 426.73144531]
[20.42014313 411.96975708]
[12.92367744 406.25463867]
[8.00899124 398.14270020]
[6.39441109 388.73767090]
[8.34585285 379.33740234]
[13.63411236 371.25500488]
[21.56090927 365.63525391]
[31.05085754 363.29266357]
[34.76045609 348.75860596]
[26.96298981 336.11996460]
[30.51800537 321.32751465]
[43.82743835 313.23452759]
[47.53703690 298.70046997]
[51.24663162 284.16641235]
[54.95623016 269.63235474]
[58.66582870 255.09828186]
[62.37542725 240.56422424]
[66.08502197 226.03016663]
[69.66475677 211.46357727]
[59.11970139 196.52835083]
[62.87229919 178.30953979]
[79.00421906 168.42417908]
[81.93057251 153.71240234]
[84.85693359 139.00062561]
[87.78328705 124.28884125]
[90.70964050 109.57706451]
[86.17082977 123.87388611]
[76.30519104 135.17297363]
[62.75093460 141.59808350]
[47.75875473 142.08232117]
[33.81811905 136.54528809]
[23.24389267 125.90641022]
[17.79193687 111.93228912]
[18.36755371 96.94333649]
[24.87516403 83.42849731]
[36.23416901 73.63191223]
[50.55839539 69.18032837]
[65.46861267 70.81272125]
[66.53870392 55.85093689]
[67.60878754 40.88915634]
[68.67887878 25.92737389]
[69.61538696 10.95663738]
[70.41825104 -4.02186060]
[71.22111511 -19.00035858]
[68.55087280 -25.10574722]
[69.27933502 -30.78300476]
[72.32940674 -34.49624634]
[73.66637421 -49.43654633]
[75.00334930 -64.37684631]
[76.34031677 -79.31713867]
[77.67728424 -94.25743866]
[67.35147858 -106.22210693]
[68.59362793 -121.97750092]
[80.66679382 -132.17623901]
[96.40818024 -130.76757812]
[106.47869873 -118.58726501]
[104.90369415 -102.86164856]
[92.61758423 -92.92047119]
[91.28061676 -77.98017120]
[89.94364166 -63.03987122]
[88.60667419 -48.09957504]
[87.26970673 -33.15927505]
[86.19961548 -18.19749451]
[85.39675140 -3.21899652]
[84.59388733 11.75950146]
[87.38472748 18.62931061]
[83.64065552 26.99746132]
[82.57057190 41.95924377]
[81.50048065 56.92102432]
[80.43039703 71.88280487]
[86.84609222 75.76724243]
[99.67747498 83.53612518]
[106.09317017 87.42056274]
[118.85471344 79.53747559]
[131.61625671 71.65438843]
[144.37779236 63.77130127]
[157.13934326 55.88821411]
[160.52951050 40.45182037]
[173.88676453 32.00435638]
[189.28643799 35.55754852]
[197.59222412 49.00335693]
[193.87640381 64.36461639]
[180.34353638 72.52776337]
[165.02243042 68.64975739]
[152.26087952 76.53284454]
[139.49934387 84.41593170]
[126.73780060 92.29901886]
[113.97625732 100.18210602]
[105.42141724 112.50341797]
[102.49506378 127.21519470]
[99.56871033 141.92697144]
[96.64235687 156.63874817]
[93.71600342 171.35054016]
[102.14313507 179.79080200]
[105.40155029 191.13925171]
[102.78935242 202.53048706]
[95.07194519 211.14636230]
[84.26271820 214.91316223]
[85.33520508 224.01776123]
[80.61907959 229.73976135]
[76.90948486 244.27381897]
[73.19989014 258.80789185]
[69.49028778 273.34194946]
[65.78069305 287.87600708]
[62.07109451 302.41006470]
[58.36149597 316.94412231]
[66.16434479 330.42572021]
[62.19524002 345.11245728]
[49.29451370 352.46820068]
[45.58491516 367.00225830]
[57.49004745 384.29785156]
[52.89393234 404.48611450]
[35.18181229 414.63305664]
[32.51851273 429.39474487]
[29.85521507 444.15640259]
[27.19191742 458.91806030]
[24.52861977 473.67974854]
[35.92103958 488.78509521]
[32.74257278 507.11279297]
[17.46146965 517.15008545]
[15.32674789 531.99737549]
[13.19202518 546.84472656]
[11.18989754 561.71051025]
[9.32052517 576.59356689]
[20.46729660 587.22631836]
[23.18404770 602.20874023]
[16.63513756 615.75775146]
[3.52076101 622.76855469]
[1.65138865 637.65161133]
[-0.21798390 652.53466797]
[-2.08735633 667.41772461]
[-3.95672894 682.30078125]
[-5.82610130 697.18383789]
[-7.69547415 712.06689453]
[1.72668076 724.47094727]
[-0.38114363 739.53784180]
[-12.26458645 748.44403076]
[-14.13395882 763.32708740]
[-16.00333214 778.21014404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 175]
[9 174]
[10 173]
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[18 165]
[19 164]
[23 160]
[24 159]
[26 158]
[27 157]
[28 156]
[33 153]
[34 152]
[35 151]
[36 150]
[37 149]
[44 146]
[45 145]
[48 142]
[49 141]
[50 140]
[51 139]
[52 138]
[53 137]
[54 136]
[55 134]
[58 129]
[59 128]
[60 127]
[61 126]
[62 125]
[74 106]
[75 105]
[76 104]
[77 103]
[78 101]
[79 100]
[80 99]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[109 124]
[110 123]
[111 122]
[112 121]
[113 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
