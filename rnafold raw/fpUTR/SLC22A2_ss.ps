%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACCUUUGAAGUCAGCUGGACCAAGGAAAGGCCCUGCCCUGAAGGCUGGUCACUUGCAGAGGUAAACUCCCCUCUUUGACUUCUGGCCAGGGUUUGUGCUGAGCUGGCUGCAGCCGCUCUCAGCCUCGCUCCGGGCACGUCGGGCAGCCUCGGGCCCUCCUGCCUGCAGGAUC\
) } def
/len { sequence length } bind def

/coor [
[69.97191620 180.68852234]
[54.98007584 181.18324280]
[41.35700226 174.90534973]
[31.99330330 163.18693542]
[28.87581444 148.51448059]
[32.66602325 134.00122070]
[42.55970001 122.72669220]
[56.45755768 117.08315277]
[71.41049957 118.26802826]
[56.48355103 116.78939819]
[41.55661011 115.31076050]
[26.62966537 113.83213043]
[11.70272064 112.35350037]
[-3.22422290 110.87487030]
[-18.15116692 109.39624023]
[-33.11251068 110.47242737]
[-47.67415619 114.07221985]
[-56.80615234 130.64125061]
[-74.83186340 135.22929382]
[-90.23712158 125.38513184]
[-104.66016388 129.50531006]
[-119.08320618 133.62548828]
[-133.50624084 137.74566650]
[-147.92929077 141.86584473]
[-155.02967834 172.75282288]
[-168.36407471 179.62258911]
[-181.69847107 186.49235535]
[-186.27545166 201.61938477]
[-200.24751282 209.00564575]
[-215.32530212 204.26899719]
[-222.56343079 190.21961975]
[-217.66763306 175.19274902]
[-203.54251099 168.10357666]
[-188.56825256 173.15795898]
[-175.23384094 166.28819275]
[-161.89944458 159.41842651]
[-165.88999939 144.95898438]
[-180.86039734 145.90083313]
[-195.83079529 146.84269714]
[-207.47612000 157.87745667]
[-223.34356689 155.51022339]
[-231.26098633 141.55694580]
[-225.15481567 126.72136688]
[-209.70918274 122.38409424]
[-196.77265930 131.87228394]
[-181.80226135 130.93043518]
[-166.83186340 129.98857117]
[-152.04946899 127.44280243]
[-137.62641907 123.32262421]
[-123.20338440 119.20244598]
[-108.78034210 115.08226776]
[-94.35729980 110.96208954]
[-91.09324646 99.98921967]
[-82.84161377 91.88166809]
[-71.58160400 88.74691772]
[-60.09387589 91.47969055]
[-51.27394485 99.51057434]
[-36.71229935 95.91078186]
[-32.20528030 81.60390472]
[-42.07435989 70.30783081]
[-51.94344330 59.01176071]
[-61.81252289 47.71569061]
[-71.68160248 36.41961670]
[-87.12355804 37.94462967]
[-100.49569702 30.07280350]
[-106.65615082 15.83102036]
[-103.23610687 0.69553447]
[-91.55064392 -9.51375008]
[-76.09304810 -10.87115574]
[-62.80709839 -2.85473180]
[-56.80149841 11.45304298]
[-60.38553238 26.55053711]
[-50.51645279 37.84661102]
[-40.64736938 49.14268112]
[-30.77828979 60.43875504]
[-20.90920830 71.73482513]
[-15.30360699 83.72512054]
[-16.67253494 94.46929169]
[-1.74559152 95.94792175]
[13.18135262 97.42655945]
[28.10829544 98.90518951]
[43.03524017 100.38381958]
[57.96218491 101.86244965]
[72.88912964 103.34107971]
[90.15963745 78.84731293]
[114.17643738 86.83994293]
[128.26670837 81.69558716]
[142.35696411 76.55123138]
[156.44723511 71.40687561]
[167.91789246 57.02160263]
[185.06596375 60.68365479]
[199.06161499 55.28718948]
[213.05726624 49.89072800]
[227.05290222 44.49426651]
[241.04855347 39.09780121]
[254.73342896 32.95578003]
[268.06784058 26.08600807]
[281.40222168 19.21623802]
[294.73663330 12.34646702]
[308.07101440 5.47669554]
[321.40542603 -1.39307570]
[334.61434937 -8.50110531]
[347.69357300 -15.84510326]
[360.77276611 -23.18910217]
[373.85198975 -30.53310013]
[382.85916138 -46.57625580]
[400.37298584 -45.72043610]
[413.31826782 -53.29803467]
[426.26351929 -60.87563324]
[439.20880127 -68.45323181]
[452.15408325 -76.03083038]
[458.00384521 -83.09092712]
[465.40042114 -83.62586975]
[478.47964478 -90.96987152]
[484.18392944 -105.96456146]
[499.50708008 -110.71639252]
[512.69451904 -101.58015442]
[513.63000488 -85.56439972]
[501.59582520 -74.95503235]
[485.82363892 -77.89066315]
[472.74444580 -70.54666138]
[459.73165894 -63.08556366]
[446.78640747 -55.50796509]
[433.84112549 -47.93036270]
[420.89587402 -40.35276413]
[407.95059204 -32.77516556]
[404.57592773 -21.13704491]
[393.82440186 -14.72426987]
[381.19598389 -17.45389175]
[368.11679077 -10.10989380]
[355.03756714 -2.76589537]
[341.95837402 4.57810259]
[339.82159424 8.88333321]
[334.94046021 11.87544155]
[328.27520752 11.94132519]
[314.94079590 18.81109619]
[301.60638428 25.68086815]
[288.27200317 32.55064011]
[274.93759155 39.42041016]
[261.60321045 46.29018021]
[275.43801880 52.08652496]
[281.27566528 65.90398407]
[275.78750610 79.86393738]
[262.10290527 86.00652313]
[248.02467346 80.82928467]
[241.58015442 67.28424835]
[246.44502258 53.09345245]
[232.44937134 58.48991394]
[218.45372009 63.88637543]
[204.45806885 69.28283691]
[190.46241760 74.67929840]
[185.25955200 85.62298584]
[173.61642456 90.22268677]
[161.59159851 85.49713898]
[147.50132751 90.64149475]
[133.41105652 95.78585052]
[119.32079315 100.93021393]
[117.07656097 115.89527893]
[103.26278687 127.12040710]
[108.28046417 141.25628662]
[113.29814148 155.39215088]
[118.31581879 169.52803040]
[123.33349609 183.66389465]
[136.15577698 193.88746643]
[133.44581604 210.06115723]
[117.99140167 215.54685974]
[105.69070435 204.70137024]
[109.19762421 188.68157959]
[104.17994690 174.54570007]
[99.16226959 160.40983582]
[94.14459229 146.27395630]
[89.12691498 132.13809204]
[93.86566925 146.36988831]
[91.72225952 161.21595764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 84]
[10 83]
[11 82]
[12 81]
[13 80]
[14 79]
[15 78]
[16 58]
[17 57]
[20 52]
[21 51]
[22 50]
[23 49]
[24 48]
[25 36]
[26 35]
[27 34]
[37 47]
[38 46]
[39 45]
[59 76]
[60 75]
[61 74]
[62 73]
[63 72]
[86 157]
[87 156]
[88 155]
[89 154]
[91 151]
[92 150]
[93 149]
[94 148]
[95 147]
[96 140]
[97 139]
[98 138]
[99 137]
[100 136]
[101 135]
[102 132]
[103 131]
[104 130]
[105 129]
[107 126]
[108 125]
[109 124]
[110 123]
[111 122]
[113 121]
[114 120]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
