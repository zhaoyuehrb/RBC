%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCUAAACCAAGAUGAGCAGAAGGAAGAGAGCAGGGAAGGAGGCCAGGGUCCGCGCGGCUUGGGCACAGUGCCCUGGCUCAGGGACCUUCCUGGGAGUGAGAACCAC\
) } def
/len { sequence length } bind def

/coor [
[-57.13851166 246.09437561]
[-65.43589783 245.69126892]
[-72.77230835 242.00148010]
[-85.69004059 249.62594604]
[-98.60776520 257.25039673]
[-99.71107483 275.22058105]
[-111.19026184 288.88827515]
[-128.39768982 293.00704956]
[-144.53549194 286.13967896]
[-156.99250793 294.49566650]
[-154.34489441 309.49267578]
[-158.03231812 324.26843262]
[-167.41589355 336.26293945]
[-180.86987305 343.39810181]
[-196.06326294 344.43768311]
[-210.36372375 339.20159912]
[-221.29360962 328.59698486]
[-226.95925903 314.46121216]
[-226.37905884 299.24334717]
[-219.65351868 285.57998657]
[-207.94790649 275.83840942]
[-193.29026794 271.70639038]
[-178.22013855 273.89981079]
[-165.34851074 282.03866577]
[-152.89149475 273.68264771]
[-154.23669434 261.44622803]
[-150.17062378 249.74989319]
[-141.42297363 240.88296509]
[-129.64599609 236.60925293]
[-117.10275269 237.81646729]
[-106.23222351 244.33267212]
[-93.31449127 236.70820618]
[-80.39676666 229.08375549]
[-72.02455139 209.18936157]
[-49.71271133 208.39840698]
[-37.75779343 199.33860779]
[-43.04152679 184.66816711]
[-43.55774307 169.06442261]
[-39.24450684 154.03968811]
[-30.50852966 141.05374146]
[-18.18683624 131.37216187]
[-3.46658254 125.94282532]
[12.22932339 125.30324554]
[27.37975883 129.52729797]
[40.51279831 138.21693420]
[52.20166397 128.81639099]
[63.89052963 119.41583252]
[75.57939911 110.01527405]
[87.26826477 100.61472321]
[98.53991699 90.71776581]
[109.37329865 80.34290314]
[120.20668030 69.96803284]
[131.04006958 59.59317017]
[135.15698242 51.26453781]
[142.33833313 49.08101654]
[143.29211426 33.53340912]
[154.72062683 23.49132347]
[169.53701782 24.49641418]
[180.66488647 14.43805504]
[191.79275513 4.37969542]
[202.92062378 -5.67866421]
[207.97007751 -20.67244720]
[222.60020447 -23.46683502]
[233.72807312 -33.52519608]
[244.85594177 -43.58355331]
[255.98381042 -53.64191437]
[267.11166382 -63.70027161]
[274.80764771 -78.80683899]
[291.45428467 -75.59355164]
[292.97482300 -58.70792770]
[277.17004395 -52.57240677]
[266.04217529 -42.51404572]
[254.91430664 -32.45568848]
[243.78643799 -22.39732933]
[232.65856934 -12.33896923]
[228.40504456 1.93537199]
[212.97897339 5.44920206]
[201.85112000 15.50756168]
[190.72325134 25.56592178]
[179.59538269 35.62427902]
[179.10327148 50.46656418]
[167.96131897 60.82569122]
[152.39669800 60.20888138]
[141.41493225 70.42655182]
[130.58154297 80.80142212]
[119.74816895 91.17628479]
[108.91477966 101.55114746]
[108.29817200 105.53215790]
[105.85369110 109.19200897]
[101.78214264 111.68701172]
[96.66881561 112.30358887]
[84.97994995 121.70413971]
[73.29108429 131.10469055]
[61.60221863 140.50524902]
[49.91335297 149.90580750]
[55.29777527 163.34027100]
[56.65560532 177.73370361]
[53.88469315 191.90670776]
[47.22079849 204.70059204]
[37.21759033 215.07196045]
[24.70062828 222.17793274]
[10.69926167 225.44454956]
[-3.63804269 224.61314392]
[-17.13788986 219.76086426]
[-28.69799232 211.29351807]
[-40.65290833 220.35331726]
[-40.21520233 229.03001404]
[-43.29854965 237.05032349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 33]
[4 32]
[5 31]
[9 25]
[10 24]
[35 106]
[36 105]
[45 95]
[46 94]
[47 93]
[48 92]
[49 91]
[50 87]
[51 86]
[52 85]
[53 84]
[55 83]
[58 80]
[59 79]
[60 78]
[61 77]
[63 75]
[64 74]
[65 73]
[66 72]
[67 71]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
