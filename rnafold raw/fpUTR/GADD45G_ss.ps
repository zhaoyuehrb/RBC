%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUCGCUGGUGGUGGGCGCGCCGUGCUGAGCUCUGGCUGUCAGUGUGUUCGCCCGCGUCCCCUCCGCGCUCUCCGCUUGUGGAUAACUAGCUGCUGGUUGAUCGCACU\
) } def
/len { sequence length } bind def

/coor [
[210.23970032 234.17733765]
[197.22760010 225.44090271]
[187.52195740 213.11018372]
[182.07333374 198.37362671]
[181.42129517 182.65623474]
[185.64096069 167.48175049]
[173.09570312 159.25883484]
[160.55043030 151.03591919]
[153.12263489 149.98590088]
[147.77107239 142.39857483]
[135.46353149 133.82392883]
[120.59780121 132.89695740]
[113.69769287 118.65970612]
[101.39015198 110.08506012]
[93.37918091 108.38860321]
[88.86032867 101.08953857]
[76.80037689 92.17003632]
[64.74041748 83.25054169]
[52.68046188 74.33103943]
[40.62050247 65.41154480]
[28.56054688 56.49204636]
[16.50058937 47.57255173]
[9.75012112 46.40780258]
[5.35343313 42.51992798]
[4.02986765 37.79140472]
[-4.70647478 34.64766693]
[-7.69194221 27.76568031]
[-18.95202637 17.85556030]
[-27.59590721 14.46585369]
[-30.38542557 7.50213623]
[-41.36055756 -2.72266293]
[-52.33568573 -12.94746208]
[-63.31081390 -23.17226219]
[-83.06859589 -26.64474869]
[-88.24925995 -45.18377304]
[-99.78527832 -54.77127838]
[-111.32129669 -64.35877991]
[-127.36431122 -64.32289124]
[-137.28218079 -76.93302917]
[-133.46675110 -92.51577759]
[-118.84490967 -99.11738586]
[-104.63327789 -91.67366791]
[-101.73379517 -75.89480591]
[-90.19777679 -66.30729675]
[-78.66175842 -56.71979523]
[-68.43195343 -58.57728195]
[-58.69732285 -54.33589554]
[-52.85316086 -45.20629120]
[-53.08601761 -34.14739227]
[-42.11088562 -23.92259216]
[-31.13575745 -13.69779301]
[-20.16062737 -3.47299337]
[-9.04190636 6.59547472]
[2.21817851 16.50559616]
[13.61737251 26.25538445]
[25.42008781 35.51259232]
[37.48004532 44.43209076]
[49.54000092 53.35158920]
[61.59996033 62.27108765]
[73.65991211 71.19058228]
[85.71987152 80.11008453]
[97.77983093 89.02957916]
[109.96479797 97.77752686]
[122.27233887 106.35216522]
[138.01838684 107.89246368]
[144.03817749 121.51638794]
[156.34571838 130.09103394]
[168.77336121 138.49066162]
[181.31861877 146.71357727]
[193.86387634 154.93649292]
[204.98274231 145.67547607]
[218.25416565 139.94812012]
[232.58828735 138.21487427]
[246.81079102 140.60861206]
[259.75909424 146.92448425]
[270.37734985 156.63742065]
[277.80258179 168.94573975]
[281.43481445 182.83732605]
[280.98547363 197.17289734]
[276.50039673 210.77937317]
[288.80792236 219.35401917]
[301.11547852 227.92864990]
[313.42300415 236.50329590]
[325.73052979 245.07794189]
[341.47659302 246.61824036]
[347.49636841 260.24215698]
[359.80392456 268.81680298]
[372.11145020 277.39144897]
[384.41900635 285.96609497]
[396.72653198 294.54074097]
[409.03408813 303.11538696]
[421.34161377 311.69003296]
[437.79400635 315.78329468]
[438.41516113 332.72586060]
[422.30667114 338.01290894]
[412.76696777 323.99755859]
[400.45944214 315.42291260]
[388.15188599 306.84826660]
[375.84436035 298.27362061]
[363.53680420 289.69897461]
[351.22927856 281.12435913]
[338.92172241 272.54971313]
[324.05599976 271.62271118]
[317.15591431 257.38546753]
[304.84835815 248.81083679]
[292.54083252 240.23619080]
[280.23327637 231.66156006]
[267.92575073 223.08691406]
[255.60025024 232.64219666]
[240.91485596 237.94921875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 70]
[7 69]
[8 68]
[10 67]
[11 66]
[13 64]
[14 63]
[16 62]
[17 61]
[18 60]
[19 59]
[20 58]
[21 57]
[22 56]
[25 55]
[27 54]
[28 53]
[30 52]
[31 51]
[32 50]
[33 49]
[35 45]
[36 44]
[37 43]
[80 108]
[81 107]
[82 106]
[83 105]
[84 104]
[86 102]
[87 101]
[88 100]
[89 99]
[90 98]
[91 97]
[92 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
