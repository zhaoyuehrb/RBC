%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUGCCUUGGUGUUUACCACUCAAAUGGUUCCUCUCUGCCUUUGGUGCUGAGGAAAGGAGGCUCUGGCACCACUGGAACAGGAAAACUUGACUGUUGCUAGUCUAUUCCAUUGAACUUACAGAUAUUUGGGAUUACCAAAUUGGGAAGAGCAAAGCUAUCUCCAGUGCCGAAGAA\
) } def
/len { sequence length } bind def

/coor [
[104.85565948 149.51864624]
[101.42521667 164.12110901]
[97.99476624 178.72357178]
[106.53016663 192.02479553]
[103.07865143 207.44758606]
[89.68793488 215.84188843]
[74.30249786 212.22750854]
[66.05023956 198.74877930]
[69.82708740 183.40242004]
[83.39229584 175.29313660]
[86.82274628 160.69065857]
[90.25319672 146.08819580]
[83.79153442 142.28070068]
[76.17635345 155.20390320]
[63.25327301 147.58851624]
[70.86822510 134.66571045]
[64.40657043 130.85821533]
[53.29509735 140.93469238]
[42.18362427 151.01115417]
[31.07215309 161.08761597]
[30.55148125 176.88333130]
[18.95712090 187.62327576]
[3.16779876 186.93562317]
[-7.44895983 175.22836304]
[-6.59442091 159.44720459]
[5.22443342 148.95480347]
[20.99568558 149.97615051]
[32.10715866 139.89968872]
[43.21863174 129.82321167]
[54.33010483 119.74674988]
[51.93758011 108.94223022]
[52.02051544 98.07006836]
[54.48856735 87.68044281]
[59.13284683 78.28009796]
[65.64061737 70.30762482]
[73.61497498 64.11307526]
[82.59828186 59.94294739]
[92.09796906 57.93098450]
[101.61338806 58.09525681]
[110.66207123 60.34136200]
[118.80422974 64.47148895]
[128.17143250 52.75588226]
[137.53865051 41.04027557]
[146.90585327 29.32467079]
[156.27305603 17.60906410]
[165.64027405 5.89345884]
[175.00747681 -5.82214737]
[184.37467957 -17.53775406]
[193.74188232 -29.25335884]
[203.10910034 -40.96896362]
[212.47630310 -52.68457031]
[215.05110168 -68.29485321]
[229.04217529 -73.40357971]
[238.40937805 -85.11918640]
[247.77659607 -96.83478546]
[250.35137939 -112.44507599]
[264.34246826 -117.55379486]
[273.70965576 -129.26939392]
[269.00698853 -145.50137329]
[274.83718872 -161.18630981]
[288.72210693 -170.22459412]
[305.09320068 -169.22727966]
[314.25100708 -181.10728455]
[323.40881348 -192.98728943]
[332.56661987 -204.86730957]
[341.72442627 -216.74731445]
[337.92474365 -228.05155945]
[340.04656982 -239.66499329]
[347.44595337 -248.70945740]
[358.18591309 -253.00071716]
[369.54229736 -251.57533264]
[379.11596680 -263.12283325]
[384.07910156 -277.27795410]
[383.81289673 -292.27557373]
[383.54666138 -307.27322388]
[383.28045654 -322.27087402]
[383.01422119 -337.26849365]
[382.61489868 -352.26318359]
[382.08255005 -367.25372314]
[381.55020142 -382.24429321]
[381.01782227 -397.23483276]
[380.48547363 -412.22537231]
[366.88265991 -419.35696411]
[358.68164062 -432.34304810]
[358.08843994 -447.69049072]
[365.26260376 -461.27087402]
[378.27435303 -469.43115234]
[393.62356567 -469.97625732]
[407.18139648 -462.75952148]
[415.30084229 -449.72229004]
[415.79782104 -434.37142944]
[408.53866577 -420.83630371]
[395.47601318 -412.75775146]
[396.00839233 -397.76718140]
[396.54074097 -382.77664185]
[397.07308960 -367.78610229]
[397.60546875 -352.79553223]
[400.99578857 -346.20187378]
[398.01187134 -337.53472900]
[398.27807617 -322.53707886]
[398.54431152 -307.53945923]
[398.81051636 -292.54180908]
[399.07675171 -277.54415894]
[406.03335571 -290.83346558]
[412.98999023 -304.12277222]
[419.94659424 -317.41207886]
[426.90322876 -330.70135498]
[428.29299927 -345.63684082]
[434.38235474 -359.34524536]
[444.53277588 -370.38916016]
[457.68002319 -377.61068726]
[472.44552612 -380.25259399]
[487.28112793 -378.03787231]
[500.63125610 -371.19876099]
[511.09616089 -360.45230103]
[517.57855225 -346.92535400]
[519.39874268 -332.03619385]
[516.36590576 -317.34600830]
[508.79797363 -304.39508057]
[497.48852539 -294.54132080]
[483.62335205 -288.81796265]
[468.65255737 -287.82543945]
[455.18280029 -281.22503662]
[441.71301270 -274.62466431]
[428.24322510 -268.02429199]
[414.77346802 -261.42388916]
[429.75869751 -260.75851440]
[444.74392700 -260.09313965]
[459.72915649 -259.42776489]
[474.71438599 -258.76239014]
[489.69964600 -258.09701538]
[502.45883179 -267.82238770]
[517.98187256 -263.77093506]
[524.36083984 -249.05061340]
[516.70233154 -234.95356750]
[500.88128662 -232.29386902]
[489.03427124 -243.11178589]
[474.04904175 -243.77716064]
[459.06378174 -244.44253540]
[444.07855225 -245.10791016]
[429.09332275 -245.77328491]
[414.10809326 -246.43865967]
[400.06372070 -246.94834900]
[390.66345215 -253.54917908]
[381.08981323 -242.00166321]
[383.90466309 -223.93609619]
[372.44946289 -209.27944946]
[353.60443115 -207.58952332]
[344.44662476 -195.70950317]
[335.28881836 -183.82949829]
[326.13101196 -171.94947815]
[316.97320557 -160.06947327]
[321.91201782 -147.64726257]
[320.04501343 -134.30087280]
[311.75479126 -123.53908539]
[299.12677002 -118.24457550]
[285.42526245 -119.90219116]
[276.05807495 -108.18658447]
[274.15328979 -93.41428375]
[259.49218750 -87.46758270]
[250.12498474 -75.75197601]
[240.75778198 -64.03636932]
[238.85299683 -49.26406097]
[224.19190979 -43.31736374]
[214.82470703 -31.60175705]
[205.45748901 -19.88615227]
[196.09028625 -8.17054558]
[186.72308350 3.54506040]
[177.35586548 15.26066589]
[167.98866272 26.97627258]
[158.62145996 38.69187927]
[149.25425720 50.40748596]
[139.88703918 62.12308884]
[130.51983643 73.83869934]
[142.02140808 93.07938385]
[141.73179626 116.77471161]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[17 30]
[18 29]
[19 28]
[20 27]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
[47 168]
[48 167]
[49 166]
[50 165]
[51 164]
[53 162]
[54 161]
[55 160]
[57 158]
[58 157]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[71 145]
[72 144]
[73 103]
[74 102]
[75 101]
[76 100]
[77 99]
[78 97]
[79 96]
[80 95]
[81 94]
[82 93]
[126 142]
[127 141]
[128 140]
[129 139]
[130 138]
[131 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
