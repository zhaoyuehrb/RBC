%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGUCUUGGAGAGGGACGCGUAGGCUACGCCACCGCGGACGGGUCGGAUCCGGUCCCUGGACGCGGAACAGAGAUCCCCUGAUUCAGCCACCCCCAGACUGAGCCCCGUAGAGUGCGUUCUUACCUUCCUGCCCCGACGAAGGUCCCAGAGACGCUGCGGACAACACCAGC\
) } def
/len { sequence length } bind def

/coor [
[286.84613037 464.87274170]
[291.08166504 459.27502441]
[283.30813599 446.44644165]
[275.53463745 433.61785889]
[267.76110840 420.78927612]
[259.98760986 407.96069336]
[248.29826355 404.76260376]
[241.72319031 394.10781860]
[244.26313782 381.43838501]
[236.72386169 368.47076416]
[222.30430603 364.91946411]
[214.47366333 351.87585449]
[218.29638672 336.77536011]
[210.75709534 323.80773926]
[203.21781921 310.84011841]
[195.67852783 297.87249756]
[188.13925171 284.90487671]
[182.03712463 280.68765259]
[180.58325195 271.63262939]
[174.55871582 267.30529785]
[173.26951599 258.22534180]
[166.20606995 244.99252319]
[159.14262390 231.75968933]
[152.07917786 218.52685547]
[145.01574707 205.29402161]
[133.51788330 201.46415710]
[127.53273010 190.46717834]
[130.75878906 177.95484924]
[123.93679810 164.59594727]
[117.11480713 151.23703003]
[110.29281616 137.87812805]
[104.42936707 133.33489990]
[103.47072601 124.21411896]
[96.89244080 110.73353577]
[90.19202423 97.31324005]
[83.24902344 84.01682281]
[76.18557739 70.78398895]
[69.12213898 57.55116272]
[62.05869675 44.31833267]
[56.61005783 40.47237396]
[54.29609299 35.23248672]
[54.98895264 30.47426605]
[48.41066360 16.99368286]
[35.40501022 7.98460388]
[36.77698898 -6.84667873]
[30.19869995 -20.32726288]
[23.62041283 -33.80784607]
[17.04212570 -47.28842926]
[10.44248581 -53.65649796]
[10.46927834 -61.07405853]
[4.13686275 -74.67186737]
[-8.70305634 -83.91562653]
[-7.06199026 -98.71955109]
[-13.39440632 -112.31736755]
[-27.10188675 -113.94622040]
[-38.12161636 -122.07849121]
[-43.63152695 -134.49833679]
[-42.28672028 -147.90991211]
[-34.54602051 -158.81179810]
[-40.63047409 -172.52235413]
[-46.71493149 -186.23291016]
[-53.07898712 -192.83642578]
[-52.78287506 -200.24812317]
[-64.43591309 -205.83134460]
[-69.00115204 -217.48957825]
[-64.53295135 -228.75473022]
[-70.11554718 -242.67718506]
[-75.69815063 -256.59963989]
[-88.01568604 -266.52883911]
[-85.57095337 -281.22143555]
[-91.15355682 -295.14389038]
[-96.73615265 -309.06631470]
[-111.65101624 -313.76535034]
[-120.01235962 -326.97979736]
[-117.87220764 -342.47024536]
[-106.24107361 -352.92254639]
[-90.61082458 -353.40145874]
[-78.36158752 -343.68084717]
[-75.27707672 -328.35049438]
[-82.81370544 -314.64892578]
[-77.23110199 -300.72647095]
[-71.64850616 -286.80401611]
[-59.73027802 -277.87066650]
[-61.77569962 -262.18222046]
[-56.19309998 -248.25978088]
[-50.61050415 -234.33732605]
[-36.24879837 -224.27877808]
[-38.96409225 -206.08261108]
[-33.00437164 -192.31736755]
[-26.91991806 -178.60681152]
[-20.83546257 -164.89625549]
[-4.69559240 -161.99020386]
[6.65487862 -149.92460632]
[8.60944653 -133.30781555]
[0.20340675 -118.64978027]
[6.53582239 -105.05197144]
[18.92280388 -96.78081512]
[17.73467636 -81.00428772]
[24.06709099 -67.40647125]
[30.52270889 -53.86671829]
[37.10099792 -40.38613510]
[43.67928314 -26.90555000]
[50.25757217 -13.42496586]
[62.79270172 -5.38010836]
[61.89124680 10.41539574]
[68.46953583 23.89597893]
[75.29152679 37.25489044]
[82.35496521 50.48771667]
[89.41841125 63.72054672]
[96.48184967 76.95337677]
[102.42683411 81.38938141]
[103.55093384 90.49124908]
[109.75205231 95.68945312]
[110.37302399 104.15525055]
[116.95130920 117.63583374]
[123.65172577 131.05613708]
[130.47370911 144.41503906]
[137.29570007 157.77395630]
[144.11769104 171.13285828]
[159.79241943 180.76490784]
[158.24856567 198.23059082]
[165.31201172 211.46340942]
[172.37545776 224.69624329]
[179.43890381 237.92907715]
[186.50234985 251.16191101]
[193.68563843 264.33004761]
[201.10687256 277.36560059]
[208.64614868 290.33322144]
[216.18544006 303.30084229]
[223.72471619 316.26846313]
[231.26400757 329.23608398]
[246.27815247 333.38494873]
[253.73931885 346.64337158]
[249.69148254 360.93148804]
[257.23077393 373.89910889]
[273.40670776 382.66336060]
[272.81619263 400.18719482]
[280.58969116 413.01577759]
[288.36322021 425.84436035]
[296.13671875 438.67294312]
[303.91024780 451.50152588]
[327.77111816 454.60385132]
[341.57659912 474.00271606]
[336.79287720 497.06979370]
[346.55014038 508.46261597]
[356.30737305 519.85540771]
[366.06463623 531.24822998]
[375.92492676 542.55200195]
[385.88742065 553.76574707]
[395.84994507 564.97949219]
[411.71578979 567.35736084]
[419.62387085 581.31591797]
[413.50778198 596.14739990]
[398.05923462 600.47436523]
[385.12908936 590.97747803]
[384.63616943 574.94201660]
[374.67367554 563.72827148]
[364.71115112 552.51452637]
[357.89355469 549.59197998]
[354.67181396 541.00549316]
[344.91458130 529.61267090]
[335.15731812 518.21984863]
[325.40008545 506.82705688]
[318.98199463 509.12844849]
[312.18777466 509.88787842]
[305.38360596 509.05587769]
[298.93823242 506.66903687]
[293.20285034 502.84841919]
[288.49206543 497.79342651]
[285.06661987 491.77145386]
[283.11898804 485.10375977]
[282.76248169 478.14825439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 141]
[3 140]
[4 139]
[5 138]
[6 137]
[9 135]
[10 134]
[13 131]
[14 130]
[15 129]
[16 128]
[17 127]
[19 126]
[21 125]
[22 124]
[23 123]
[24 122]
[25 121]
[28 119]
[29 118]
[30 117]
[31 116]
[33 115]
[34 114]
[35 112]
[36 110]
[37 109]
[38 108]
[39 107]
[42 106]
[43 105]
[45 103]
[46 102]
[47 101]
[48 100]
[50 99]
[51 98]
[53 96]
[54 95]
[59 91]
[60 90]
[61 89]
[63 88]
[66 86]
[67 85]
[68 84]
[70 82]
[71 81]
[72 80]
[144 163]
[145 162]
[146 161]
[147 160]
[148 158]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
