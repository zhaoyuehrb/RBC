%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCGGAAGGCAAAUGGCUGGCGUGGAAGCACAACCCGCUUUCACUCUUCGAAUUUGUGCUUAGCUCUUUUCUUGUACCUUGCGACUCGUGACCAACAUGCUGUGAUGUGUGCCGAGGGAGGAAUUGGUCAGCUACACAACCUGGAUCUUACCACAGUUUGGAU\
) } def
/len { sequence length } bind def

/coor [
[94.15802765 184.38385010]
[99.80324554 169.20864868]
[111.53558350 157.96624756]
[106.76473236 143.74516296]
[101.99388123 129.52409363]
[97.22303009 115.30301666]
[91.57141876 129.19760132]
[76.60939789 130.26434326]
[69.04368591 117.31212616]
[77.32328796 104.80300140]
[62.89131165 108.89178467]
[48.45933914 112.98057556]
[34.02736664 117.06935883]
[19.59539413 121.15814209]
[5.16342068 125.24692535]
[1.31660283 140.05061340]
[-9.35310459 150.86976624]
[-23.90892220 154.86909485]
[-38.41516113 151.07106018]
[-49.00131989 140.59255981]
[-63.43329239 144.68135071]
[-74.60179901 155.88737488]
[-88.95618439 151.91235352]
[-103.38816071 156.00112915]
[-117.82012939 160.08992004]
[-132.25210571 164.17869568]
[-146.68408203 168.26748657]
[-161.11605835 172.35626221]
[-175.54801941 176.44505310]
[-189.97999573 180.53382874]
[-196.22019958 194.87237549]
[-210.24008179 201.79891968]
[-225.41989136 198.04293823]
[-234.59217834 185.37791443]
[-233.42608643 169.78385925]
[-222.47219849 158.62384033]
[-206.90258789 157.16725159]
[-194.06878662 166.10186768]
[-179.63681030 162.01307678]
[-165.20483398 157.92428589]
[-150.77285767 153.83551025]
[-136.34088135 149.74671936]
[-121.90891266 145.65794373]
[-107.47694397 141.56915283]
[-93.04496765 137.48037720]
[-82.90873718 126.56680298]
[-67.52207947 130.24937439]
[-53.09010315 126.16059113]
[-49.57335281 111.68654633]
[-39.21499252 100.84401703]
[-24.72450638 96.61410522]
[-9.96544743 100.22892761]
[1.07463694 110.81494904]
[15.50660992 106.72616577]
[29.93858337 102.63738251]
[44.37055588 98.54859924]
[58.80252838 94.45981598]
[73.23450470 90.37103271]
[100.52167511 80.75805664]
[107.89766693 67.69686127]
[115.27365875 54.63566971]
[112.57490540 41.99269485]
[119.02347565 31.25370598]
[130.68003845 27.91616440]
[138.30335999 14.99777031]
[145.92668152 2.07937694]
[142.20210266 -13.04561138]
[150.11727905 -26.03810310]
[164.55958557 -29.49570847]
[172.18292236 -42.41410065]
[179.80624390 -55.33249664]
[187.42956543 -68.25089264]
[195.05290222 -81.16928101]
[202.67622375 -94.08767700]
[202.72019958 -99.39824677]
[204.63137817 -103.71074677]
[207.70544434 -106.47561646]
[211.12161255 -107.50817108]
[219.47000122 -119.97029114]
[227.81838989 -132.43240356]
[236.16677856 -144.89453125]
[244.51516724 -157.35664368]
[241.66014099 -172.66960144]
[250.30412292 -185.18904114]
[264.92025757 -187.81651306]
[273.26864624 -200.27862549]
[274.52105713 -216.05018616]
[288.03274536 -222.31784058]
[296.38113403 -234.77995300]
[304.72952271 -247.24206543]
[305.98193359 -263.01364136]
[319.49362183 -269.28128052]
[327.84201050 -281.74340820]
[321.60739136 -295.85485840]
[324.01431274 -311.09329224]
[334.29470825 -322.59622192]
[349.16815186 -326.69305420]
[363.88858032 -322.07653809]
[373.75878906 -310.21975708]
[375.62918091 -294.90618896]
[368.90295410 -281.02233887]
[355.72640991 -272.99850464]
[340.30413818 -273.39501953]
[331.95574951 -260.93289185]
[331.30047607 -246.05270386]
[317.19165039 -238.89367676]
[308.84326172 -226.43156433]
[300.49487305 -213.96945190]
[299.83959961 -199.08926392]
[285.73077393 -191.93023682]
[277.38238525 -179.46812439]
[280.51373291 -164.95156860]
[272.22482300 -152.19427490]
[256.97729492 -149.00825500]
[248.62890625 -136.54614258]
[240.28051758 -124.08402252]
[231.93211365 -111.62190247]
[223.58372498 -99.15978241]
[215.59461975 -86.46434784]
[207.97128296 -73.54595947]
[200.34796143 -60.62756348]
[192.72463989 -47.70917130]
[185.10130310 -34.79077530]
[177.47798157 -21.87238312]
[181.43296814 -7.55827236]
[173.88584900 5.65141296]
[158.84507751 9.70270348]
[151.22175598 22.62109756]
[143.59843445 35.53948975]
[144.39767456 53.05092621]
[128.33485413 62.01166534]
[120.95885468 75.07285309]
[113.58286285 88.13404846]
[124.85328674 78.23568726]
[139.73809814 76.38034058]
[153.09352112 83.20915985]
[160.30429077 96.36228943]
[158.87854004 111.29438019]
[149.30900574 122.84530640]
[134.90263367 127.02338409]
[120.63787079 122.38479614]
[111.44409943 110.53216553]
[116.21495819 124.75324249]
[120.98580933 138.97431946]
[125.75666046 153.19538879]
[139.85998535 154.42802429]
[152.38641357 160.93077087]
[161.45420837 171.68948364]
[165.71543884 185.05354309]
[164.55636597 198.98901367]
[158.18550110 211.38829041]
[147.59709167 220.38874817]
[152.09632874 234.69808960]
[156.59556580 249.00741577]
[170.09785461 257.67156982]
[171.59907532 273.64422607]
[159.94763184 284.67254639]
[144.08151245 282.29650879]
[136.17182922 268.33883667]
[142.28623962 253.50665283]
[137.78700256 239.19732666]
[133.28776550 224.88798523]
[117.45269775 222.90434265]
[104.01316071 214.19111633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 145]
[4 144]
[5 143]
[6 142]
[10 58]
[11 57]
[12 56]
[13 55]
[14 54]
[15 53]
[20 48]
[21 47]
[23 45]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[59 133]
[60 132]
[61 131]
[64 129]
[65 128]
[66 127]
[69 124]
[70 123]
[71 122]
[72 121]
[73 120]
[74 119]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
[85 111]
[86 110]
[88 108]
[89 107]
[90 106]
[92 104]
[93 103]
[152 162]
[153 161]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
