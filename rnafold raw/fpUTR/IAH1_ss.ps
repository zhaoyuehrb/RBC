%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGGGCGACCGCGCGCUGUGUCCCAGGAGGCCCCGCGGCCAGCUCCGGGCAGAGGCGCCAGGAGCUCUCUCGCCCCAUUCCCUGCGGGCACAGGUGGGGCCGUUAGGGGUUGACCUUGGAAGUAAAACGCCUUCAGGAAUUAGGUAGAAAAGGACCAUCCGUUCAUCCAAGAUCAUCUCACCUCCCAUGAAGGGAACGGUCUUCUAA\
) } def
/len { sequence length } bind def

/coor [
[90.78405762 143.09594727]
[85.19673157 157.01651001]
[79.60940552 170.93705750]
[74.02207947 184.85762024]
[68.43475342 198.77816772]
[62.94976044 212.73934937]
[57.56739044 226.74043274]
[52.18501663 240.74150085]
[46.80264664 254.74258423]
[41.42027664 268.74365234]
[44.51081467 284.84893799]
[31.93314743 295.37197876]
[16.62610245 289.48757935]
[14.33625317 273.24908447]
[27.41920090 263.36126709]
[32.80157471 249.36021423]
[38.18394470 235.35913086]
[43.56631470 221.35806274]
[48.94868469 207.35697937]
[48.41481400 199.98736572]
[54.51420212 193.19084167]
[60.10152817 179.27029419]
[65.68885040 165.34973145]
[71.27617645 151.42918396]
[76.86350250 137.50862122]
[57.37601471 111.19779968]
[61.41543961 78.70618439]
[49.70760727 69.32926941]
[37.99977493 59.95234680]
[22.39162827 57.36460495]
[17.29451370 43.36929703]
[5.58668137 33.99237442]
[-6.12115145 24.61545372]
[-24.38444328 22.25485611]
[-30.11671638 5.66745186]
[-41.96094131 -3.53659010]
[-53.80516434 -12.74063206]
[-65.64938354 -21.94467354]
[-77.49360657 -31.14871597]
[-89.33782959 -40.35275650]
[-101.31588745 -49.38193893]
[-113.42520905 -58.23430634]
[-125.53452301 -67.08667755]
[-137.64384460 -75.93904877]
[-149.75315857 -84.79141998]
[-161.86247253 -93.64379120]
[-175.65661621 -99.53627014]
[-190.42446899 -102.16508484]
[-205.19232178 -104.79389954]
[-219.96017456 -107.42271423]
[-234.72801208 -110.05152893]
[-249.49586487 -112.68034363]
[-264.43844604 -107.48133850]
[-275.61276245 -117.32939911]
[-290.38058472 -119.95821381]
[-305.14843750 -122.58702850]
[-317.96426392 -113.33878326]
[-333.55236816 -115.94389343]
[-342.66461182 -128.85678101]
[-339.89483643 -144.41647339]
[-326.88632202 -153.39167786]
[-311.35678101 -150.45755005]
[-302.51962280 -137.35487366]
[-287.75177002 -134.72605896]
[-272.98394775 -132.09724426]
[-259.09765625 -137.48428345]
[-246.86705017 -127.44819641]
[-232.09919739 -124.81938171]
[-217.33135986 -122.19056702]
[-202.56350708 -119.56175232]
[-187.79565430 -116.93293762]
[-173.02780151 -114.30412292]
[-168.96458435 -120.60810852]
[-183.46664429 -124.44091797]
[-184.30261230 -139.41760254]
[-170.31719971 -144.84054565]
[-160.83813477 -133.21607971]
[-156.77491760 -139.52006531]
[-165.26799011 -151.88403320]
[-173.76104736 -164.24800110]
[-182.25411987 -176.61196899]
[-190.83772278 -188.91326904]
[-199.51136780 -201.15122986]
[-215.02110291 -205.25341797]
[-221.35189819 -219.99453735]
[-213.64732361 -234.06645203]
[-197.81767273 -236.67442322]
[-186.00608826 -225.81781006]
[-187.27340698 -209.82489014]
[-178.59974670 -197.58692932]
[-172.16883850 -193.94827271]
[-169.89015198 -185.10504150]
[-161.39707947 -172.74107361]
[-152.90400696 -160.37710571]
[-144.41094971 -148.01312256]
[-145.93670654 -162.93533325]
[-130.96398926 -163.83947754]
[-117.39076996 -157.45451355]
[-108.54038239 -145.34375000]
[-106.57978821 -130.47242737]
[-111.98903656 -116.48171997]
[-123.44368744 -106.79714966]
[-138.13912964 -103.78993225]
[-153.01010132 -105.75310516]
[-140.90078735 -96.90073395]
[-128.79147339 -88.04836273]
[-116.68215179 -79.19599152]
[-104.57283783 -70.34362793]
[-92.46351624 -61.49125290]
[-87.69257355 -61.32580948]
[-82.97438049 -58.16304779]
[-80.13378906 -52.19697952]
[-68.28956604 -42.99293900]
[-56.44534302 -33.78889847]
[-44.60112000 -24.58485413]
[-32.75689697 -15.38081264]
[-20.91267586 -6.17677069]
[-8.87664700 -7.37092543]
[1.06596065 0.19821110]
[3.25576997 12.90762043]
[14.96360302 22.28454208]
[26.67143631 31.66146278]
[41.44215775 33.57850266]
[47.37669373 48.24451447]
[59.08452606 57.62143326]
[70.79235840 66.99835205]
[77.13255310 62.32674026]
[84.20299530 58.85818100]
[91.77789307 56.70344162]
[99.61536407 55.93133926]
[107.46511841 56.56652451]
[115.07647705 58.58871078]
[122.20638275 61.93333054]
[128.62715149 66.49356842]
[134.13374329 72.12380219]
[147.19689941 64.75128937]
[160.26005554 57.37878418]
[173.32321167 50.00627899]
[174.10537720 34.59875488]
[183.11187744 22.07331657]
[197.46876526 16.42678642]
[212.59481812 19.46094894]
[223.66336060 30.20761681]
[227.14247131 45.23756409]
[221.92196655 59.75479507]
[209.66769409 69.12690735]
[194.28996277 70.36329651]
[180.69572449 63.06943512]
[167.63256836 70.44194031]
[154.56941223 77.81445312]
[141.50624084 85.18695831]
[143.15592957 91.06911469]
[143.97631836 97.12287903]
[143.95167542 103.23193359]
[143.08244324 109.27888489]
[141.38534546 115.14752960]
[138.89299011 120.72510529]
[150.73721313 129.92913818]
[162.58143616 139.13319397]
[174.42565918 148.33723450]
[186.26988220 157.54127502]
[198.11410522 166.74531555]
[216.41007996 168.83755493]
[222.38523865 185.33901978]
[234.36329651 194.36819458]
[246.34135437 203.39738464]
[262.01873779 205.52580261]
[267.52450562 219.36544800]
[279.50256348 228.39462280]
[291.48062134 237.42381287]
[303.45867920 246.45298767]
[315.43676758 255.48216248]
[330.20700073 251.10655212]
[344.55389404 256.20748901]
[353.04574585 268.63137817]
[352.59890747 283.49536133]
[364.57696533 292.52453613]
[378.68435669 286.45187378]
[393.93615723 288.26242065]
[406.22973633 297.46914673]
[412.25814819 311.59548950]
[410.39981079 326.84155273]
[401.15460205 339.10620117]
[387.00942993 345.09030151]
[371.76928711 343.18417358]
[359.53366089 333.90057373]
[353.59393311 319.73672485]
[355.54779053 304.50259399]
[343.56973267 295.47341919]
[329.40322876 299.99539185]
[315.12152100 295.25234985]
[306.26766968 282.86434937]
[306.40756226 267.46023560]
[294.42950439 258.43106079]
[282.45144653 249.40187073]
[270.47338867 240.37269592]
[258.49533081 231.34350586]
[243.67469788 229.86091614]
[237.31217957 215.37544250]
[225.33412170 206.34626770]
[213.35606384 197.31707764]
[201.33885193 198.68778992]
[191.28620911 191.26542664]
[188.91006470 178.58953857]
[177.06584167 169.38549805]
[165.22161865 160.18145752]
[153.37739563 150.97741699]
[141.53317261 141.77336121]
[129.68894958 132.56932068]
[124.18327332 136.84242249]
[118.07280731 140.19413757]
[111.51036072 142.54064941]
[104.66005707 143.82327271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[4 22]
[5 21]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[27 126]
[28 125]
[29 124]
[31 122]
[32 121]
[33 120]
[35 117]
[36 116]
[37 115]
[38 114]
[39 113]
[40 112]
[41 109]
[42 108]
[43 107]
[44 106]
[45 105]
[46 104]
[47 72]
[48 71]
[49 70]
[50 69]
[51 68]
[52 67]
[54 65]
[55 64]
[56 63]
[78 95]
[79 94]
[80 93]
[81 92]
[82 90]
[83 89]
[135 151]
[136 150]
[137 149]
[138 148]
[157 209]
[158 208]
[159 207]
[160 206]
[161 205]
[162 204]
[164 201]
[165 200]
[166 199]
[168 197]
[169 196]
[170 195]
[171 194]
[172 193]
[176 189]
[177 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
