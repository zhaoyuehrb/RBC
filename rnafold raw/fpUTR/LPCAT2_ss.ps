%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGGGGCGUGUCACAGCCGAAGGGGCAGGGCGGCAGCAGCAGGCGUCUAAGUAACUUCAGCGCCUGCGCAGAGGCUCCCCAGCGUCGCCCUAGGCUGGGACUCUAGUAGGUCUUCGGCUCAGUUUUGGCUGCAGCGCCCGCGUAGAUCGCUUCGGCCGGGUUCUACGCCCGGCUCAACU\
) } def
/len { sequence length } bind def

/coor [
[180.24058533 322.32293701]
[191.88632202 312.86901855]
[206.32507324 308.80419922]
[221.19248962 310.79412842]
[234.05407715 318.51290894]
[242.80354309 330.69610596]
[234.28256226 318.35134888]
[225.76159668 306.00659180]
[217.24061584 293.66183472]
[208.71965027 281.31707764]
[200.19868469 268.97232056]
[188.76719666 269.39401245]
[178.45033264 264.18060303]
[171.87379456 254.52886963]
[170.77383423 242.78088379]
[175.54035950 231.85604858]
[167.45056152 219.22453308]
[159.36076355 206.59301758]
[151.27096558 193.96150208]
[143.18115234 181.32998657]
[135.09135437 168.69847107]
[127.00155640 156.06695557]
[118.91175842 143.43545532]
[110.82196045 130.80393982]
[96.59283447 132.47134399]
[83.01972198 127.88668823]
[72.71601868 117.93270111]
[67.66560364 104.52592468]
[68.84088898 90.24772644]
[55.93767166 82.59873199]
[43.03445816 74.94974518]
[30.13124084 67.30075836]
[17.22802544 59.65176773]
[4.32481050 52.00278091]
[-8.57840443 44.35379028]
[-21.48162079 36.70479965]
[-34.08567429 53.16987228]
[-62.75357819 53.67629623]
[-77.03533936 49.09032059]
[-86.18946075 49.44450760]
[-91.52282715 44.29996872]
[-105.72330475 39.46816254]
[-119.92378998 34.63635635]
[-134.12426758 29.80454826]
[-148.32475281 24.97274208]
[-162.52522278 20.14093590]
[-176.72570801 15.30912876]
[-190.92619324 10.47732258]
[-204.97526550 17.20497513]
[-219.30773926 12.10254383]
[-225.63494873 -1.33256006]
[-239.83541870 -6.16436672]
[-254.03590393 -10.99617290]
[-270.97845459 -10.37421989]
[-276.26623535 -26.48246002]
[-262.25134277 -36.02282333]
[-249.20410156 -25.19665337]
[-235.00361633 -20.36484718]
[-220.80314636 -15.53304005]
[-207.59487915 -22.32107162]
[-193.12474060 -17.62322426]
[-186.09437561 -3.72315812]
[-171.89390564 1.10864842]
[-157.69342041 5.94045496]
[-143.49293518 10.77226162]
[-129.29246521 15.60406876]
[-115.09197998 20.43587494]
[-100.89150238 25.26768112]
[-86.69101715 30.09948730]
[-72.44936371 34.80855560]
[-58.16759872 39.39453125]
[-53.00337601 33.95571136]
[-63.88086319 23.62709427]
[-53.55207825 12.74976826]
[-42.67492676 23.07806587]
[-37.51070404 17.63924408]
[-42.82977676 3.61400008]
[-48.14884949 -10.41124344]
[-61.18700027 -20.35803413]
[-58.82382584 -36.58601761]
[-43.49035645 -42.40123367]
[-30.96035194 -31.82148933]
[-34.12360764 -15.73031712]
[-28.80453300 -1.70507312]
[-23.48546028 12.32017040]
[-13.83263111 23.80158615]
[-0.92941564 31.45057487]
[11.97379971 39.09956360]
[24.87701416 46.74855423]
[37.78023148 54.39754105]
[50.68344498 62.04653168]
[63.58666229 69.69551849]
[76.48987579 77.34450531]
[92.73477936 68.16898346]
[111.35204315 69.38745117]
[119.65866089 56.89744949]
[127.96528625 44.40745544]
[136.27191162 31.91745949]
[144.57853699 19.42746162]
[152.88516235 6.93746614]
[161.08367920 -5.62375689]
[169.17347717 -18.25527000]
[177.26327515 -30.88678360]
[185.35307312 -43.51829529]
[181.72500610 -58.90051651]
[190.10739136 -72.29869080]
[205.52711487 -75.76393127]
[218.83592224 -67.24035645]
[222.13792419 -51.78486633]
[213.47412109 -38.56692123]
[197.98458862 -35.42849731]
[189.89479065 -22.79698181]
[181.80499268 -10.16546917]
[173.71519470 2.46604371]
[172.75296021 9.81350613]
[165.37515259 15.24408913]
[157.06852722 27.73408508]
[148.76190186 40.22408295]
[140.45527649 52.71407700]
[132.14866638 65.20407104]
[123.84203339 77.69406891]
[130.41946411 88.14025116]
[132.64839172 100.28178406]
[130.21022034 112.38304138]
[123.45346832 122.71413422]
[131.54327393 135.34564209]
[139.63307190 147.97715759]
[147.72286987 160.60867310]
[155.81266785 173.24018860]
[163.90246582 185.87170410]
[171.99227905 198.50321960]
[180.08207703 211.13473511]
[188.17187500 223.76623535]
[206.80200195 227.09303284]
[216.93365479 242.69873047]
[212.54344177 260.45135498]
[221.06440735 272.79611206]
[229.58538818 285.14086914]
[238.10635376 297.48562622]
[246.62731934 309.83038330]
[255.14830017 322.17514038]
[266.95605469 331.42593384]
[280.98129272 336.74499512]
[295.00653076 342.06408691]
[310.16744995 336.81750488]
[323.64440918 345.52096558]
[325.09909058 361.49792480]
[313.41555786 372.49221802]
[297.55642700 370.06997681]
[289.68746948 356.08932495]
[275.66223145 350.77023315]
[261.63696289 345.45117188]
[256.86029053 351.23333740]
[262.09887695 365.28881836]
[247.30691528 362.79760742]
[242.53021240 368.57977295]
[250.40078735 381.34902954]
[258.27136230 394.11831665]
[266.14190674 406.88757324]
[274.01248169 419.65682983]
[281.88305664 432.42611694]
[289.75363159 445.19537354]
[297.62417603 457.96463013]
[312.83874512 463.05349731]
[318.21069336 478.17044067]
[309.61911011 491.71902466]
[293.65472412 493.30593872]
[282.56405640 481.71386719]
[284.85491943 465.83520508]
[276.98434448 453.06594849]
[269.11380005 440.29666138]
[261.24322510 427.52740479]
[253.37265015 414.75814819]
[245.50209045 401.98886108]
[237.63151550 389.21960449]
[229.76095581 376.45034790]
[215.90216064 382.18914795]
[200.90382385 381.96603394]
[187.22187805 375.81750488]
[177.09672546 364.75039673]
[172.18635559 350.57687378]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 141]
[7 140]
[8 139]
[9 138]
[10 137]
[11 136]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
[22 127]
[23 126]
[24 125]
[29 93]
[30 92]
[31 91]
[32 90]
[33 89]
[34 88]
[35 87]
[36 86]
[38 71]
[39 70]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[46 64]
[47 63]
[48 62]
[51 59]
[52 58]
[53 57]
[76 85]
[77 84]
[78 83]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
[100 116]
[101 114]
[102 113]
[103 112]
[104 111]
[142 152]
[143 151]
[144 150]
[156 176]
[157 175]
[158 174]
[159 173]
[160 172]
[161 171]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
