%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAGGUUAGUUUCAGACAAGCCUGCUUGCCGGAGCUCAGCAGACACCAGGCCUUCCGGGCAGGCCUGGCCCACCGUGGGCCUCAGAGCUGCUGCUGGGGCAUUCAGAACCGGCUCUCCAUUGGCAUUGGGACCAGAGACCCCGCAAGUGGCCUGUUUGCCUGGACAUCCACCUGUACGUCCCCAGGUUUCGGGAGGCCCAGGGGCG\
) } def
/len { sequence length } bind def

/coor [
[334.01995850 568.51666260]
[337.48205566 556.09020996]
[330.91552734 542.60388184]
[324.34899902 529.11755371]
[317.78250122 515.63122559]
[311.21597290 502.14492798]
[304.64947510 488.65859985]
[287.01779175 483.74148560]
[278.43011475 467.21578979]
[284.75314331 449.35900879]
[277.78228760 436.07714844]
[270.81143188 422.79531860]
[263.84057617 409.51348877]
[256.57064819 396.39297485]
[249.00534058 383.44052124]
[241.44003296 370.48803711]
[233.87472534 357.53558350]
[226.30941772 344.58312988]
[218.74411011 331.63067627]
[205.64393616 324.54306030]
[205.36489868 308.72430420]
[197.79959106 295.77185059]
[190.23428345 282.81939697]
[184.14486694 278.62811279]
[182.65422058 269.61367798]
[175.28540039 256.54843140]
[167.91658020 243.48320007]
[160.54777527 230.41796875]
[153.17895508 217.35272217]
[145.81013489 204.28749084]
[132.81848145 197.00280762]
[132.77839661 181.18165588]
[125.40958405 168.11640930]
[111.03776550 164.37657166]
[103.37860870 151.23153687]
[107.39874268 136.18240356]
[100.02992249 123.11716461]
[92.66110229 110.05192566]
[81.58495331 99.93664551]
[67.90645599 93.78045654]
[54.22795868 87.62426758]
[40.54946136 81.46807098]
[26.87096405 75.31188202]
[15.16598415 85.04608917]
[0.45530173 88.71797943]
[-14.33033943 85.65122223]
[-26.26917076 76.50653839]
[-33.02576065 63.14023590]
[-33.30777740 48.22762680]
[-46.98627472 42.07143402]
[-60.66477203 35.91524124]
[-74.34326935 29.75905037]
[-88.02176666 23.60285759]
[-101.70026398 17.44666672]
[-114.01647186 21.28247833]
[-125.28338623 15.87156677]
[-129.69593811 4.60695267]
[-143.27989197 -1.75512683]
[-156.86386108 -8.11720657]
[-168.91764832 -2.10402036]
[-182.04217529 -4.10261869]
[-191.47886658 -13.16169739]
[-193.93710327 -25.81166458]
[-207.42343140 -32.37818146]
[-220.90974426 -38.94469452]
[-237.79740906 -40.44236374]
[-241.03324890 -57.08465195]
[-225.93711853 -64.80107117]
[-214.34323120 -52.43101883]
[-200.85690308 -45.86450195]
[-187.37059021 -39.29798508]
[-171.72288513 -45.45855331]
[-156.15409851 -38.25506210]
[-150.50177002 -21.70116615]
[-136.91781616 -15.33908558]
[-123.33385468 -8.97700691]
[-105.95648956 -11.41811657]
[-95.54407501 3.76816869]
[-81.86557770 9.92436123]
[-68.18708038 16.08055305]
[-54.50858307 22.23674583]
[-40.83008194 28.39293671]
[-27.15158653 34.54912949]
[-15.80232525 24.87133217]
[-1.31705892 21.06521797]
[13.44474792 23.93751144]
[25.54494286 32.97108459]
[32.55147934 46.41710281]
[33.02715683 61.63338089]
[46.70565414 67.78957367]
[60.38415146 73.94576263]
[74.06264496 80.10195923]
[87.74114990 86.25814819]
[100.33763123 78.11391449]
[100.33763123 63.11391449]
[100.33763123 48.11391449]
[100.33763123 33.11391449]
[100.33763123 18.11391640]
[89.44307709 6.98079062]
[89.65676117 -8.23134232]
[100.33763123 -18.54902458]
[90.05586243 -30.86425018]
[93.41474152 -46.55174255]
[107.83763123 -53.57740402]
[122.26052094 -46.55174255]
[125.61940002 -30.86425018]
[115.33763123 -18.54902458]
[126.01850128 -8.23134232]
[126.23218536 6.98079062]
[115.33763123 18.11391640]
[115.33763123 33.11391449]
[115.33763123 48.11391449]
[115.33763123 63.11391449]
[115.33763123 78.11391449]
[129.69174194 82.46818542]
[138.02528381 69.99613953]
[140.19180298 61.11988449]
[146.58007812 57.39996719]
[155.10104370 45.05521011]
[163.62202454 32.71045303]
[159.29924011 17.68222618]
[165.69497681 3.41237354]
[179.78933716 -3.36131620]
[194.92741394 0.55948561]
[203.96145630 13.32349682]
[202.62588501 28.90394020]
[191.55130005 39.94421005]
[175.96678162 41.23142242]
[167.44580078 53.57618332]
[158.92483521 65.92093658]
[150.49732971 78.32969666]
[142.16378784 90.80174255]
[133.90243530 98.25083160]
[124.58544922 102.75750732]
[114.94836426 104.21661377]
[105.72634888 102.68310547]
[113.09516144 115.74835205]
[120.46398163 128.81358337]
[135.42251587 133.15872192]
[142.70942688 146.51370239]
[138.47482300 160.74758911]
[145.84364319 173.81283569]
[159.36235046 182.03202820]
[158.87536621 196.91867065]
[166.24418640 209.98390198]
[173.61300659 223.04914856]
[180.98182678 236.11437988]
[188.35064697 249.17962646]
[195.71946716 262.24487305]
[203.18673706 275.25408936]
[210.75204468 288.20654297]
[218.31735229 301.15899658]
[231.95866394 309.17306519]
[231.69656372 324.06536865]
[239.26187134 337.01782227]
[246.82717896 349.97027588]
[254.39248657 362.92272949]
[261.95779419 375.87521362]
[269.52310181 388.82766724]
[274.06176758 391.41537476]
[276.87155151 395.11590576]
[277.81811523 399.08374023]
[277.12243652 402.54263306]
[284.09326172 415.82446289]
[291.06411743 429.10632324]
[298.03497314 442.38815308]
[309.85928345 443.64871216]
[319.50750732 450.39245605]
[324.64819336 460.84863281]
[324.10766602 472.36761475]
[318.13577271 482.09207153]
[324.70230103 495.57839966]
[331.26882935 509.06472778]
[337.83532715 522.55102539]
[344.40185547 536.03735352]
[350.96835327 549.52368164]
[366.46221924 559.47265625]
[364.54705811 576.91583252]
[371.31652832 590.30145264]
[378.08596802 603.68707275]
[384.85540771 617.07269287]
[391.62487793 630.45825195]
[398.39431763 643.84387207]
[413.14068604 648.86212158]
[419.81518555 662.53344727]
[414.94018555 676.56091309]
[421.70965576 689.94653320]
[428.47909546 703.33215332]
[435.24856567 716.71777344]
[442.01800537 730.10339355]
[456.03305054 738.61871338]
[455.39559937 755.00543213]
[440.76144409 762.40631104]
[427.18490601 753.20794678]
[428.63241577 736.87280273]
[421.86294556 723.48718262]
[415.09350586 710.10162354]
[408.32403564 696.71600342]
[401.55459595 683.33038330]
[387.36691284 678.94342041]
[380.31106567 665.46490479]
[385.00872803 650.61334229]
[378.23925781 637.22772217]
[371.46981812 623.84210205]
[364.70034790 610.45654297]
[357.93090820 597.07092285]
[351.16143799 583.68530273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 176]
[3 175]
[4 174]
[5 173]
[6 172]
[7 171]
[10 166]
[11 165]
[12 164]
[13 163]
[14 159]
[15 158]
[16 157]
[17 156]
[18 155]
[19 154]
[21 152]
[22 151]
[23 150]
[25 149]
[26 148]
[27 147]
[28 146]
[29 145]
[30 144]
[32 142]
[33 141]
[36 138]
[37 137]
[38 136]
[39 93]
[40 92]
[41 91]
[42 90]
[43 89]
[49 83]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[57 76]
[58 75]
[59 74]
[63 71]
[64 70]
[65 69]
[94 114]
[95 113]
[96 112]
[97 111]
[98 110]
[101 107]
[115 132]
[116 131]
[118 130]
[119 129]
[120 128]
[178 207]
[179 206]
[180 205]
[181 204]
[182 203]
[183 202]
[186 199]
[187 198]
[188 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
