%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUUUACCUCUGCGCGCGUCGGGGUUGGUGGCGGCGGCUGCGGCGAGUUCCUGAGGGGCGCCUGCGGGGGGCGUCCGCUCCGAGCGCCGAGGAGCCGAGCGGAGGAGGCGUCCCAGGGACACGCAGGGGAGGCCGGCCGGCCUGCACGGGGCGCUCCCGCCUCGGGGGCCCUGUCUGGCGCCUCAGCGCGCGCCCCG\
) } def
/len { sequence length } bind def

/coor [
[69.38053894 347.66418457]
[66.55587006 362.39581299]
[63.73118973 377.12747192]
[71.50991058 391.15853882]
[65.25698090 405.93286133]
[49.76911926 410.11682129]
[36.92728043 400.50085449]
[36.58263016 384.46151733]
[48.99954987 374.30279541]
[51.82422638 359.57113647]
[54.64890289 344.83950806]
[45.55527115 325.20275879]
[60.39829254 308.42147827]
[62.28768921 293.54095459]
[64.17708588 278.66043091]
[66.06648254 263.77990723]
[67.95587158 248.89936829]
[69.84526825 234.01882935]
[71.73466492 219.13830566]
[73.62406158 204.25776672]
[67.55151367 190.65728760]
[76.96545410 177.94160461]
[78.85484314 163.06108093]
[80.74423981 148.18054199]
[82.63363647 133.30001831]
[84.52303314 118.41948700]
[82.28421783 109.73773956]
[83.77224731 102.17411041]
[87.81812286 97.06761932]
[92.85807800 95.05471802]
[86.22817230 81.59944916]
[79.59826660 68.14417267]
[72.96836090 54.68890381]
[66.23245239 41.28638077]
[59.39096832 27.93744850]
[52.54948044 14.58851337]
[37.77629089 9.64982033]
[31.02821159 -3.98535728]
[35.82754135 -18.03889847]
[28.98605537 -31.38783264]
[15.80616093 -40.14002991]
[16.88691139 -54.99537277]
[3.70701623 -63.74757004]
[4.78776598 -78.60291290]
[-2.05372167 -91.95185089]
[-8.89520931 -105.30078125]
[-22.07510376 -114.05297852]
[-20.99435425 -128.90832520]
[-27.83584213 -142.25726318]
[-34.67733002 -155.60618591]
[-41.51881790 -168.95512390]
[-48.36030197 -182.30406189]
[-55.20178986 -195.65299988]
[-60.55150223 -199.56474304]
[-62.78059769 -204.80580139]
[-62.04101944 -209.53308105]
[-68.45768738 -223.09133911]
[-74.87435913 -236.64959717]
[-81.29103088 -250.20785522]
[-87.70770264 -263.76611328]
[-94.12437439 -277.32437134]
[-100.54104614 -290.88262939]
[-106.95771790 -304.44088745]
[-113.37438965 -317.99914551]
[-126.27141571 -327.16305542]
[-124.72224426 -341.97686768]
[-137.21580505 -342.65426636]
[-148.17042542 -348.54855347]
[-155.53338623 -358.48544312]
[-157.95475769 -370.53991699]
[-155.03462219 -382.40902710]
[-147.38760376 -391.85180664]
[-153.37306213 -405.60586548]
[-159.67304993 -412.23394775]
[-159.34254456 -419.62463379]
[-165.11013794 -433.47146606]
[-177.55885315 -443.23568726]
[-175.31008911 -457.95953369]
[-181.07768250 -471.80639648]
[-186.84526062 -485.65322876]
[-192.61285400 -499.50006104]
[-198.38044739 -513.34692383]
[-213.58578491 -515.95483398]
[-224.95193481 -526.38623047]
[-228.85200500 -541.31243896]
[-224.04150391 -555.97064209]
[-212.05543518 -565.68341064]
[-196.71850586 -567.35144043]
[-182.92469788 -560.44244385]
[-175.07553101 -547.16113281]
[-175.67567444 -531.74542236]
[-184.53359985 -519.11450195]
[-178.76602173 -505.26763916]
[-172.99842834 -491.42080688]
[-167.23083496 -477.57397461]
[-161.46325684 -463.72714233]
[-149.42706299 -454.95333862]
[-151.26329041 -439.23904419]
[-145.49571228 -425.39221191]
[-139.61900330 -411.59133911]
[-133.63354492 -397.83724976]
[-116.23905945 -394.83209229]
[-104.01765442 -381.87799072]
[-101.99374390 -364.02590942]
[-111.16398621 -348.39352417]
[-98.72592163 -340.19940186]
[-99.81613159 -324.41580200]
[-93.39945984 -310.85754395]
[-86.98278809 -297.29928589]
[-80.56611633 -283.74102783]
[-74.14944458 -270.18276978]
[-67.73277283 -256.62451172]
[-61.31610489 -243.06626892]
[-54.89943314 -229.50801086]
[-48.48276138 -215.94975281]
[-41.85285568 -202.49447632]
[-35.01136780 -189.14555359]
[-28.16988182 -175.79661560]
[-21.32839394 -162.44767761]
[-14.48690701 -149.09873962]
[-7.64541960 -135.74981689]
[5.04512596 -127.95242310]
[4.45372534 -112.14227295]
[11.29521275 -98.79333496]
[18.13669968 -85.44440460]
[30.82724571 -77.64701080]
[30.23584557 -61.83686066]
[42.92639160 -54.03947067]
[42.33499146 -38.22932053]
[49.17647934 -24.88038445]
[63.38758087 -20.56991768]
[70.51598358 -7.12966061]
[65.89841461 7.74702644]
[72.73989868 21.09596062]
[79.58139038 34.44489670]
[85.43562317 38.96805954]
[86.42362976 48.05899811]
[93.05353546 61.51427078]
[99.68344116 74.96954346]
[106.31334686 88.42481232]
[117.44995117 98.47350311]
[131.51358032 103.69023895]
[145.57720947 108.90698242]
[161.20680237 106.45214844]
[170.44868469 118.13277435]
[179.59300232 118.18434906]
[184.69204712 123.54446411]
[198.67156982 128.98257446]
[212.65109253 134.42066956]
[226.63061523 139.85877991]
[240.61013794 145.29687500]
[254.58966064 150.73498535]
[268.56918335 156.17308044]
[277.71154785 156.36901855]
[282.72534180 161.80895996]
[291.86349487 162.14918518]
[296.79077148 167.66758728]
[310.59167480 173.54429626]
[324.39254761 179.42100525]
[338.19342041 185.29771423]
[355.13519287 185.94018555]
[359.20779419 202.39772034]
[344.52081299 210.86703491]
[332.31671143 199.09858704]
[318.51583862 193.22187805]
[304.71496582 187.34518433]
[290.91409302 181.46847534]
[277.06723022 175.70088196]
[263.13107300 170.15260315]
[249.15155029 164.71450806]
[235.17204285 159.27639771]
[221.19252014 153.83830261]
[207.21299744 148.40019226]
[193.23347473 142.96209717]
[179.25395203 137.52398682]
[165.23193359 132.19639587]
[150.60826111 135.02436829]
[140.36045837 122.97061157]
[126.29683685 117.75386810]
[112.23320770 112.53712463]
[99.40356445 120.30888367]
[97.51416779 135.18940735]
[95.62477112 150.06994629]
[93.73537445 164.95046997]
[91.84597778 179.83100891]
[97.78339386 194.49584961]
[88.50459290 206.14717102]
[86.61519623 221.02769470]
[84.72579956 235.90823364]
[82.83640289 250.78875732]
[80.94701385 265.66928101]
[79.05761719 280.54980469]
[77.16822052 295.43035889]
[75.27882385 310.31088257]
[81.54221344 315.86236572]
[85.05638123 323.35470581]
[85.31449127 331.53216553]
[82.34871674 339.05627441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[13 194]
[14 193]
[15 192]
[16 191]
[17 190]
[18 189]
[19 188]
[20 187]
[22 185]
[23 184]
[24 183]
[25 182]
[26 181]
[30 140]
[31 139]
[32 138]
[33 137]
[34 135]
[35 134]
[36 133]
[39 130]
[40 129]
[42 127]
[44 125]
[45 124]
[46 123]
[48 121]
[49 120]
[50 119]
[51 118]
[52 117]
[53 116]
[56 115]
[57 114]
[58 113]
[59 112]
[60 111]
[61 110]
[62 109]
[63 108]
[64 107]
[66 105]
[72 101]
[73 100]
[75 99]
[76 98]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[141 180]
[142 179]
[143 178]
[145 176]
[147 175]
[148 174]
[149 173]
[150 172]
[151 171]
[152 170]
[153 169]
[155 168]
[157 167]
[158 166]
[159 165]
[160 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
