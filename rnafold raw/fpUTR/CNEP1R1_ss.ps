%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCAGCGGGGAGCGGUUAGAGGUGGGAGUUGGCGCUGCGGGCCGGGCGGGGGCCGCGGAAGCUGCGAUGCGGACAGGGCAGCGGCGGUGACCCGAGCUGCCGCCCGAC\
) } def
/len { sequence length } bind def

/coor [
[-19.95671272 183.07009888]
[-32.83125687 182.49961853]
[-44.46944427 177.07554626]
[-53.12224579 167.65267944]
[-67.33470154 172.44914246]
[-81.54716492 177.24560547]
[-95.75962067 182.04205322]
[-109.97207642 186.83851624]
[-124.18453979 191.63497925]
[-128.77964783 204.38900757]
[-139.74890137 212.01748657]
[-152.91386414 211.89007568]
[-163.41674805 204.28002930]
[-177.75924683 208.67237854]
[-192.10174561 213.06471252]
[-199.55670166 226.74176025]
[-214.16461182 230.99189758]
[-227.15763855 223.80046082]
[-241.50013733 228.19281006]
[-255.84263611 232.58514404]
[-266.61917114 244.94628906]
[-282.65832520 241.52900696]
[-287.46035767 225.84867859]
[-276.08538818 214.03590393]
[-260.23498535 218.24264526]
[-245.89247131 213.85029602]
[-231.54997253 209.45796204]
[-224.81214905 196.22401428]
[-210.32939148 191.56524658]
[-196.49409485 198.72221375]
[-182.15159607 194.32987976]
[-167.80908203 189.93753052]
[-160.63037109 174.80232239]
[-144.43040466 169.36798096]
[-128.98100281 177.42251587]
[-114.76853943 172.62605286]
[-100.55607605 167.82960510]
[-86.34362030 163.03314209]
[-72.13116455 158.23667908]
[-57.91870499 153.44021606]
[-55.21852112 136.55938721]
[-44.35292435 123.24737549]
[-28.19042015 117.15829468]
[-11.06856251 120.02070618]
[2.37007070 131.14807129]
[16.28840637 125.55522156]
[30.20674133 119.96237183]
[44.12507629 114.36952972]
[58.04341125 108.77667999]
[71.96174622 103.18383026]
[85.88008118 97.59098816]
[94.65922546 86.70896912]
[108.52706909 88.49067688]
[122.44540405 82.89783478]
[136.36373901 77.30498505]
[150.20153809 71.51573944]
[163.95602417 65.53125763]
[170.69628906 59.14567566]
[178.18545532 59.57817078]
[192.10379028 53.98532486]
[198.37199402 39.72533035]
[212.56683350 34.25165939]
[226.12294006 40.31531143]
[240.04127502 34.72246170]
[253.95960999 29.12961578]
[267.87792969 23.53676796]
[281.79626465 17.94392204]
[288.30166626 1.78100955]
[304.14501953 -4.61893177]
[319.43811035 2.21694779]
[333.19262695 -3.76753259]
[346.94711304 -9.75201321]
[351.21109009 -24.79702568]
[364.17721558 -33.53852081]
[379.72326660 -31.84902954]
[390.50888062 -20.52627754]
[391.44140625 -4.91652489]
[382.08053589 7.60978317]
[366.84622192 11.13810539]
[352.93157959 4.00247717]
[339.17709351 9.98695755]
[325.42260742 15.97143745]
[322.38739014 28.58138847]
[312.46554565 37.23524857]
[299.17111206 38.56788254]
[287.38912964 31.86225700]
[273.47079468 37.45510483]
[259.55245972 43.04795074]
[245.63412476 48.64079666]
[231.71577454 54.23364639]
[226.12455750 67.99132538]
[212.08905029 73.86154175]
[197.69664001 67.90366364]
[183.77830505 73.49650574]
[169.94050598 79.28575134]
[156.18601990 85.27023315]
[151.23594666 90.90686035]
[141.95658875 91.22332001]
[128.03825378 96.81616974]
[114.11991882 102.40901184]
[105.34077454 113.29103088]
[91.47293091 111.50932312]
[77.55459595 117.10216522]
[63.63626099 122.69501495]
[49.71792603 128.28785706]
[35.79958725 133.88070679]
[21.88125420 139.47355652]
[7.96291780 145.06640625]
[7.33951473 158.12702942]
[1.79561257 169.91706848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 40]
[5 39]
[6 38]
[7 37]
[8 36]
[9 35]
[13 32]
[14 31]
[15 30]
[18 27]
[19 26]
[20 25]
[45 108]
[46 107]
[47 106]
[48 105]
[49 104]
[50 103]
[51 102]
[53 100]
[54 99]
[55 98]
[56 96]
[57 95]
[59 94]
[60 93]
[63 90]
[64 89]
[65 88]
[66 87]
[67 86]
[70 82]
[71 81]
[72 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
