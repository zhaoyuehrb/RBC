%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGCGGCGCGGCGGACAUGGCGGUGGAGUCCUGAGCUAGUCGUGUCCCGGCCUCCAGCGGCGGCAGCGGCGACGGCGGCGGCAGCAGGAGGCGGAGGGAGAGCAGGAGCCACUGAGAUGAGGAGGCGUCGCGCGCGCCUGUAGCUCGCGGGCCUCGCAGUUUGCUUGCCUAAACUGGACUUGAAGCAAUUUAAACUACUGGAGAUCUGCCAUUUUAUAAUAUCACAAUUGGAAAGAAACAGAUUUUCAAAUA\
) } def
/len { sequence length } bind def

/coor [
[58.61731339 135.59835815]
[62.89964294 121.22261810]
[72.61161041 109.79118347]
[86.10948181 103.24156189]
[71.20231628 101.57526398]
[56.29515839 99.90896606]
[41.38799667 98.24266815]
[26.48083687 96.57637024]
[11.57367516 94.91007233]
[-3.33348584 93.24377441]
[-15.60794258 102.83415985]
[-30.70218658 100.93193817]
[-39.76950836 89.17102051]
[-49.24099350 98.72409821]
[-62.29299927 101.05268860]
[-74.13125610 95.52864075]
[-80.53740692 84.36715698]
[-95.42282104 82.51660919]
[-110.30822754 80.66606903]
[-122.70036316 90.10390472]
[-137.76992798 88.01513672]
[-146.69110107 76.14297485]
[-161.57650757 74.29242706]
[-176.46191406 72.44187927]
[-191.34733582 70.59133911]
[-206.23274231 68.74079132]
[-221.11814880 66.89025116]
[-231.73800659 74.17839813]
[-244.08277893 72.34809875]
[-251.62985229 62.91673279]
[-266.49124146 60.88222504]
[-281.35263062 58.84771729]
[-296.21401978 56.81320572]
[-311.07540894 54.77869797]
[-323.58331299 64.06254578]
[-338.62588501 61.78755951]
[-347.39953613 49.80596161]
[-362.26092529 47.77145386]
[-352.95855713 59.53860474]
[-353.29183960 74.53490448]
[-363.10781860 85.87715149]
[-377.90100098 88.35935211]
[-390.88146973 80.84218597]
[-396.09124756 66.77597046]
[-391.13906860 52.61701202]
[-378.29779053 44.86411667]
[-392.92758179 41.55214691]
[-407.55740356 38.24017715]
[-422.20739746 35.01874542]
[-437.31854248 39.70529175]
[-448.15057373 29.48198509]
[-462.82022095 26.35121346]
[-477.48986816 23.22044182]
[-492.15948486 20.08966827]
[-506.82913208 16.95889664]
[-521.49877930 13.82812309]
[-536.60992432 18.51466942]
[-547.44195557 8.29136372]
[-562.11163330 5.16059160]
[-577.22277832 9.84713745]
[-588.05480957 -0.37616804]
[-602.72442627 -3.50694060]
[-617.83557129 1.17960548]
[-628.66766357 -9.04370022]
[-643.33728027 -12.17447281]
[-658.44842529 -7.48792648]
[-669.28045654 -17.71123123]
[-683.95013428 -20.84200478]
[-696.16851807 -11.08268738]
[-711.80023193 -11.51214218]
[-723.46435547 -21.92759514]
[-725.65350342 -37.41118622]
[-717.33404541 -50.65203857]
[-702.43414307 -55.39822388]
[-687.98907471 -49.40874481]
[-680.81933594 -35.51164246]
[-666.14971924 -32.38087082]
[-652.08782959 -37.29134750]
[-640.20648193 -26.84411049]
[-625.53686523 -23.71333694]
[-611.47497559 -28.62381744]
[-599.59368896 -18.17657852]
[-584.92401123 -15.04580593]
[-570.86218262 -19.95628548]
[-558.98083496 -9.50904560]
[-544.31121826 -6.37827349]
[-530.24932861 -11.28875351]
[-518.36798096 -0.84151399]
[-503.69836426 2.28925848]
[-489.02871704 5.42003107]
[-474.35910034 8.55080318]
[-459.68945312 11.68157578]
[-445.01980591 14.81234837]
[-430.95794678 9.90186882]
[-419.07659912 20.34910774]
[-411.89904785 18.67622757]
[-404.24542236 23.61038399]
[-389.61563110 26.92235374]
[-374.98583984 30.23432350]
[-360.22640991 32.91006851]
[-345.36502075 34.94457626]
[-333.69400024 25.76183319]
[-318.59347534 27.61340904]
[-309.04089355 39.91731262]
[-294.17950439 41.95182037]
[-279.31811523 43.98633194]
[-264.45672607 46.02083969]
[-249.59535217 48.05534744]
[-233.71267700 40.56416702]
[-219.26760864 52.00483704]
[-204.38220215 53.85538101]
[-189.49678040 55.70592499]
[-174.61137390 57.55647278]
[-159.72596741 59.40701675]
[-144.84054565 61.25756073]
[-133.28399658 51.93117142]
[-118.16170502 53.59583664]
[-108.45768738 65.78065491]
[-93.57227325 67.63119507]
[-78.68686676 69.48174286]
[-65.85752869 58.58846664]
[-48.78429413 60.39326477]
[-38.10321045 74.26385498]
[-26.66288757 64.79524994]
[-11.52116871 66.27275085]
[-1.66718793 78.33661652]
[13.23997307 80.00291443]
[28.14713478 81.66921234]
[43.05429459 83.33551025]
[57.96145630 85.00180817]
[72.86861420 86.66810608]
[87.77577972 88.33440399]
[100.93286896 81.13086700]
[107.56026459 67.67436218]
[114.18766785 54.21785355]
[112.55841064 35.86316681]
[127.54067993 26.70299530]
[134.00112915 13.16554832]
[140.46159363 -0.37189987]
[146.92204285 -13.90934753]
[153.38250732 -27.44679451]
[159.84295654 -40.98424149]
[155.86782837 -56.52701950]
[165.65577698 -69.23826599]
[181.69830322 -69.36700439]
[191.68898010 -56.81447601]
[187.96380615 -41.20990372]
[173.38041687 -34.52378464]
[166.91995239 -20.98633766]
[160.45950317 -7.44889069]
[153.99903870 6.08855724]
[147.53857422 19.62600517]
[141.07812500 33.16345215]
[144.81597900 44.64986038]
[139.56680298 55.97193146]
[127.64417267 60.84524918]
[121.01677704 74.30175781]
[114.38938141 87.75827026]
[119.45820618 93.28610229]
[134.10145569 90.03417969]
[129.59585571 104.34178162]
[134.66468811 109.86962128]
[148.64387512 104.43064880]
[162.62304688 98.99167633]
[176.60223389 93.55270386]
[190.58142090 88.11373138]
[204.56060791 82.67475891]
[218.43647766 76.97738647]
[232.16719055 70.93854523]
[245.86029053 64.81491089]
[251.26486206 49.96343613]
[265.62316895 43.35927963]
[280.41665649 48.92056274]
[286.86865234 63.34787750]
[281.15127563 78.08175659]
[266.65652466 84.38084412]
[251.98393250 78.50801086]
[238.29083252 84.63165283]
[233.48115540 90.21581268]
[224.39028931 90.74517822]
[222.76033020 93.84255981]
[219.56323242 96.31401825]
[215.10494995 97.43779755]
[209.99957275 96.65394592]
[196.02038574 102.09291840]
[182.04121399 107.53189087]
[168.06202698 112.97086334]
[154.08283997 118.40983582]
[140.10365295 123.84880829]
[138.35733032 131.14266968]
[153.23280334 133.07148743]
[168.10826111 135.00032043]
[182.98400879 133.07363892]
[193.01290894 144.22807312]
[189.52075195 158.81590271]
[175.52796936 164.21980286]
[163.13671875 155.76486206]
[149.00070190 150.74761963]
[134.86466980 145.73037720]
[133.11833191 153.02423096]
[143.11846924 164.20445251]
[153.11860657 175.38465881]
[163.11875916 186.56488037]
[173.11889648 197.74508667]
[183.11903381 208.92530823]
[193.11917114 220.10552979]
[203.11930847 231.28573608]
[213.11944580 242.46595764]
[223.11958313 253.64617920]
[238.45791626 252.21731567]
[251.54357910 260.00314331]
[257.46545410 273.83770752]
[254.14520264 288.33300781]
[264.14535522 299.51321411]
[274.14547729 310.69345093]
[284.14562988 321.87365723]
[299.11285400 327.00131226]
[301.83081055 341.64584351]
[311.83096313 352.82604980]
[321.83111572 364.00625610]
[331.83123779 375.18649292]
[347.62301636 375.81530762]
[358.28329468 387.48294067]
[357.48754883 403.26718140]
[345.70785522 413.80352783]
[329.93292236 412.84094238]
[319.52169800 400.95050049]
[320.65103149 385.18661499]
[310.65087891 374.00640869]
[300.65075684 362.82617188]
[290.65060425 351.64596558]
[276.39865112 347.31799316]
[272.96539307 331.87380981]
[262.96527100 320.69357300]
[252.96511841 309.51336670]
[242.96498108 298.33316040]
[228.19056702 300.02261353]
[215.09945679 292.60055542]
[208.81547546 278.73098755]
[211.93936157 263.64630127]
[201.93922424 252.46609497]
[191.93908691 241.28588867]
[181.93894958 230.10566711]
[171.93881226 218.92544556]
[161.93867493 207.74523926]
[151.93853760 196.56501770]
[141.93840027 185.38479614]
[131.93826294 174.20458984]
[121.93811798 163.02436829]
[109.80099487 171.83857727]
[95.14115143 175.01489258]
[80.44423676 172.01475525]
[68.20219421 163.34686279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 132]
[5 131]
[6 130]
[7 129]
[8 128]
[9 127]
[10 126]
[13 123]
[17 120]
[18 119]
[19 118]
[22 115]
[23 114]
[24 113]
[25 112]
[26 111]
[27 110]
[30 108]
[31 107]
[32 106]
[33 105]
[34 104]
[37 101]
[38 100]
[46 99]
[47 98]
[48 97]
[49 95]
[51 93]
[52 92]
[53 91]
[54 90]
[55 89]
[56 88]
[58 86]
[59 85]
[61 83]
[62 82]
[64 80]
[65 79]
[67 77]
[68 76]
[133 158]
[134 157]
[135 156]
[137 153]
[138 152]
[139 151]
[140 150]
[141 149]
[142 148]
[162 189]
[163 188]
[164 187]
[165 186]
[166 185]
[167 184]
[168 180]
[169 178]
[170 177]
[200 249]
[201 248]
[202 247]
[203 246]
[204 245]
[205 244]
[206 243]
[207 242]
[208 241]
[209 240]
[213 236]
[214 235]
[215 234]
[216 233]
[218 231]
[219 230]
[220 229]
[221 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
