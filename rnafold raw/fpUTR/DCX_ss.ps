%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUAUUUCUUAUGAAUGUCGGAUAGCUGCACCAGCUUGGUGGGGAAAGGGUUUGAUGAAUAGCACAAAGACACUGGCUGUUCCCUGGAGGCUGUCCCUUUAAAGGAGAAUCUUAGUUUAUUCUGGGGGGAGGGGAUGCACACAUUAGAGUAGGAAAGAGGGCUUGGAAUAAA\
) } def
/len { sequence length } bind def

/coor [
[135.68490601 295.84771729]
[132.44200134 281.20245361]
[129.19911194 266.55722046]
[118.89323425 255.80368042]
[123.46405029 240.65711975]
[120.22114563 226.01187134]
[116.97824860 211.36660767]
[113.73534393 196.72134399]
[110.49244690 182.07609558]
[107.24954987 167.43083191]
[104.00664520 152.78556824]
[100.76374817 138.14031982]
[89.45716858 137.67506409]
[78.50664520 133.84953308]
[68.91164398 126.83956909]
[61.59663773 117.11787415]
[57.32323074 105.42440796]
[42.77172852 109.06497955]
[28.22022629 112.70555115]
[13.66872501 116.34613037]
[-0.88277763 119.98670197]
[-15.43428040 123.62727356]
[-29.98578262 127.26785278]
[-39.34191513 145.01062012]
[-58.42177200 150.12992859]
[-74.88852692 139.77696228]
[-89.22020721 144.20448303]
[-100.12171173 155.67042542]
[-114.56572723 152.03454590]
[-128.89739990 156.46208191]
[-143.22908020 160.88960266]
[-157.56076050 165.31712341]
[-171.89244080 169.74464417]
[-185.24118042 180.19680786]
[-198.98016357 170.26318359]
[-193.23808289 154.31123352]
[-176.31996155 155.41296387]
[-161.98829651 150.98544312]
[-147.65661621 146.55792236]
[-133.32493591 142.13040161]
[-118.99325562 137.70286560]
[-109.11684418 126.55361938]
[-93.64772797 129.87280273]
[-79.31605530 125.44528198]
[-77.12818909 115.35337830]
[-70.88504028 107.02662659]
[-61.66859818 102.02057648]
[-51.12361908 101.30536652]
[-41.16420364 105.07843018]
[-33.62635803 112.71634674]
[-19.07485390 109.07577515]
[-4.52335167 105.43519592]
[10.02815056 101.79462433]
[24.57965279 98.15405273]
[39.13115692 94.51347351]
[53.68265915 90.87290192]
[58.88399506 76.80357361]
[50.19995880 64.57297516]
[41.51592255 52.34237671]
[32.83188629 40.11177826]
[24.14785194 27.88118172]
[15.46381569 15.65058327]
[6.77977991 3.41998577]
[-0.76805407 -1.78940177]
[-1.94852138 -9.11247635]
[-10.40903664 -21.49874687]
[-25.98707199 -22.86214066]
[-37.00754929 -33.95642090]
[-38.26693726 -49.54320908]
[-29.17059326 -62.26289749]
[-14.01352978 -66.10964203]
[0.04754978 -59.26712418]
[6.37343407 -44.96617508]
[1.97723389 -29.95926094]
[10.43774891 -17.57299232]
[19.01037788 -5.26405001]
[27.69441414 6.96654749]
[36.37844849 19.19714546]
[45.06248474 31.42774200]
[53.74652100 43.65834045]
[62.43055725 55.88893890]
[71.11459351 68.11953735]
[90.81245422 59.63636017]
[111.31712341 61.87211227]
[127.38905334 73.44615936]
[140.00115967 65.32613373]
[140.99913025 49.95374680]
[150.74357605 38.25336075]
[165.33654785 34.57787323]
[179.13046265 40.13359833]
[191.74256897 32.01357269]
[197.28912354 24.70993423]
[204.65823364 23.86302567]
[217.41571045 15.97335720]
[230.17317200 8.08368683]
[242.93064880 0.19401729]
[255.68812561 -7.69565248]
[268.44558716 -15.58532238]
[281.20306396 -23.47499275]
[293.96054077 -31.36466217]
[292.44512939 -46.51276398]
[297.63586426 -60.75858688]
[308.45278931 -71.29489899]
[322.71313477 -76.07025146]
[337.57138062 -74.18827057]
[350.08721924 -66.07537079]
[362.84469604 -73.96504211]
[375.60217285 -81.85471344]
[388.35964966 -89.74438477]
[401.11709595 -97.63405609]
[402.13702393 -113.11757660]
[412.08895874 -125.02295685]
[427.14627075 -128.77233887]
[441.51904297 -122.92400360]
[449.68066406 -109.72676086]
[448.49285889 -94.25521851]
[438.41232300 -82.45849609]
[423.31527710 -78.87267303]
[409.00677490 -84.87657928]
[396.24929810 -76.98690796]
[383.49182129 -69.09724426]
[370.73437500 -61.20756912]
[357.97689819 -53.31790161]
[359.64462280 -38.49615860]
[354.69131470 -24.36200905]
[344.04885864 -13.73660564]
[329.79031372 -8.76534081]
[314.72610474 -10.48481178]
[301.85021973 -18.60718918]
[289.09274292 -10.71751881]
[276.33526611 -2.82784939]
[263.57778931 5.06182051]
[250.82031250 12.95149040]
[238.06285095 20.84115982]
[225.30537415 28.73082924]
[212.54789734 36.62049866]
[199.86259460 44.62567520]
[187.25048828 52.74570084]
[186.59848022 67.60211182]
[177.21240234 79.36500549]
[162.52799988 83.39260101]
[148.12118530 77.93824005]
[135.50907898 86.05826569]
[137.87690735 95.46055603]
[137.79791260 105.15609741]
[135.27716064 114.51855469]
[130.47753906 122.94311523]
[123.70906830 129.88555908]
[115.40900421 134.89741516]
[118.65190125 149.54267883]
[121.89480591 164.18792725]
[125.13770294 178.83319092]
[128.38059998 193.47845459]
[131.62350464 208.12370300]
[134.86640930 222.76896667]
[138.10931396 237.41423035]
[148.64712524 249.21527100]
[143.84436035 263.31430054]
[147.08726501 277.95956421]
[150.33016968 292.60482788]
[165.26095581 295.60339355]
[177.67753601 304.42089844]
[185.42864990 317.52969360]
[187.17137146 332.65856934]
[182.60375977 347.18634033]
[172.51719666 358.59603882]
[158.65922546 364.91082764]
[143.43083191 365.03665161]
[129.47041321 358.95166016]
[119.19671631 347.71017456]
[114.38970947 333.25982666]
[115.88223267 318.10424805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 160]
[2 159]
[3 158]
[5 156]
[6 155]
[7 154]
[8 153]
[9 152]
[10 151]
[11 150]
[12 149]
[17 56]
[18 55]
[19 54]
[20 53]
[21 52]
[22 51]
[23 50]
[26 44]
[27 43]
[29 41]
[30 40]
[31 39]
[32 38]
[33 37]
[57 82]
[58 81]
[59 80]
[60 79]
[61 78]
[62 77]
[63 76]
[65 75]
[66 74]
[85 143]
[86 142]
[90 138]
[91 137]
[93 136]
[94 135]
[95 134]
[96 133]
[97 132]
[98 131]
[99 130]
[100 129]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
