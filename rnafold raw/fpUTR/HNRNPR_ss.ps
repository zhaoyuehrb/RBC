%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGAAGCAGUUCCGGGAAACCCCGCGUGCUGCCGGGAUCGCGUCUCAGUCCAUCAGGGGGGGGAGGGGGUGGCGCGCGCGCCAUUUCUAGUCGUUUUCAAAGCGCCUCGCGCUGAUUCUCACGGGCCCGGCUGCCGGCCCCCGCUCUGCCCUGCAUAAUAAA\
) } def
/len { sequence length } bind def

/coor [
[153.61021423 88.99504089]
[159.07148743 75.02475739]
[146.03349304 82.44165802]
[132.99548340 89.85855865]
[119.95747375 97.27545929]
[112.36382294 115.90156555]
[92.44072723 118.67033386]
[82.03924561 129.47816467]
[71.63775635 140.28598022]
[61.23626709 151.09381104]
[50.83478165 161.90162659]
[46.84018326 177.21025085]
[32.43978882 181.01522827]
[22.14229393 191.92218018]
[11.94973755 202.92726135]
[1.75718081 213.93234253]
[-8.43537617 224.93742371]
[-11.54033661 241.03994751]
[-27.12437630 246.14579773]
[-39.15597153 235.00251770]
[-35.25804901 219.07334900]
[-19.44045639 214.74485779]
[-9.24789906 203.73977661]
[0.94465715 192.73469543]
[11.13721371 181.72962952]
[13.38564396 174.65235901]
[21.63196373 170.61373901]
[24.88257599 156.07817078]
[40.02695465 151.50013733]
[50.42844391 140.69232178]
[60.82993317 129.88449097]
[71.23142242 119.07666779]
[81.63290405 108.26884460]
[81.46535492 107.88612366]
[81.30577850 107.50000000]
[66.30577850 107.50000000]
[51.30577850 107.50000000]
[36.30577850 107.50000000]
[21.30577660 107.50000000]
[5.46664476 113.54634094]
[-4.72810984 100.00000000]
[5.46664476 86.45365906]
[21.30577660 92.50000000]
[36.30577850 92.50000000]
[51.30577850 92.50000000]
[66.30577850 92.50000000]
[81.30577850 92.50000000]
[89.15034485 83.02917480]
[101.03913116 79.88423157]
[112.54057312 84.23744965]
[125.57858276 76.82054901]
[138.61659241 69.40365601]
[151.65458679 61.98675537]
[157.71325684 52.32049179]
[167.71134949 50.69268417]
[179.09875488 40.92913055]
[190.48616028 31.16557693]
[201.87358093 21.40202522]
[213.26098633 11.63847256]
[218.70129395 -3.21796012]
[233.39956665 -5.62833309]
[244.78697205 -15.39188576]
[256.17437744 -25.15543747]
[267.56179810 -34.91899109]
[273.00210571 -49.77542496]
[287.70037842 -52.18579483]
[299.08779907 -61.94934845]
[310.47518921 -71.71289825]
[321.86260986 -81.47645569]
[333.25000000 -91.24000549]
[344.63742065 -101.00355530]
[355.93078613 -110.87573242]
[367.12908936 -120.85561371]
[378.32739258 -130.83549500]
[389.42956543 -140.92218018]
[400.43466187 -151.11474609]
[404.63049316 -159.28219604]
[411.74954224 -161.39463806]
[422.94781494 -171.37452698]
[428.10256958 -186.33244324]
[442.75198364 -189.02392578]
[453.95028687 -199.00379944]
[465.14855957 -208.98368835]
[460.21865845 -223.33540344]
[461.15649414 -238.44049072]
[467.78805542 -251.99908447]
[479.07485962 -261.95880127]
[493.27636719 -266.82522583]
[508.21838379 -265.88629150]
[521.62591553 -259.31613159]
[532.82421875 -269.29602051]
[544.02252197 -279.27590942]
[555.22082520 -289.25579834]
[540.22290039 -289.50286865]
[528.14617920 -298.39971924]
[523.46466064 -312.65045166]
[527.91253662 -326.97579956]
[539.84216309 -336.06893921]
[554.83404541 -336.56121826]
[567.33447266 -328.27029419]
[572.71258545 -314.26757812]
[568.97662354 -299.74136353]
[581.56707764 -307.89486694]
[594.15759277 -316.04837036]
[606.74804688 -324.20187378]
[619.33850098 -332.35540771]
[629.34674072 -346.04013062]
[645.26721191 -340.21133423]
[644.07342529 -323.29946899]
[627.49206543 -319.76492310]
[614.90155029 -311.61141968]
[602.31109619 -303.45788574]
[589.72058105 -295.30438232]
[577.13012695 -287.15087891]
[565.20074463 -278.05749512]
[554.00244141 -268.07760620]
[542.80413818 -258.09771729]
[531.60583496 -248.11782837]
[536.59503174 -234.04525757]
[535.81414795 -219.09414673]
[529.35113525 -205.54444885]
[518.16278076 -195.47431946]
[503.93307495 -190.44143677]
[488.82009888 -191.24209595]
[475.12844849 -197.78538513]
[463.93017578 -187.80551147]
[452.73187256 -177.82562256]
[448.37811279 -163.58152771]
[432.92770386 -160.17622375]
[421.72940063 -150.19635010]
[410.62722778 -140.10966492]
[399.62213135 -129.91709900]
[396.83853149 -123.03273010]
[388.30728149 -119.63719940]
[377.10897827 -109.65731812]
[365.91067505 -99.67742920]
[362.99572754 -92.84763336]
[354.40097046 -89.61614990]
[343.01354980 -79.85260010]
[331.62615967 -70.08904266]
[320.23873901 -60.32549286]
[308.85134888 -50.56194305]
[297.46392822 -40.79838943]
[292.83813477 -26.64031029]
[277.32534790 -23.53158379]
[265.93792725 -13.76803112]
[254.55052185 -4.00447845]
[243.16311646 5.75907421]
[238.53730774 19.91715240]
[223.02453613 23.02588081]
[211.63713074 32.78943253]
[200.24972534 42.55298615]
[188.86230469 52.31653595]
[177.47489929 62.08008957]
[192.46908569 61.66249847]
[206.05969238 68.01036835]
[215.36299133 79.77679443]
[218.40496826 94.46510315]
[214.54016113 108.95865631]
[204.58862305 120.18215179]
[190.66191101 125.75413513]
[175.71508789 124.49230194]
[162.91961670 116.66440582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 53]
[3 52]
[4 51]
[5 50]
[7 33]
[8 32]
[9 31]
[10 30]
[11 29]
[13 27]
[14 25]
[15 24]
[16 23]
[17 22]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[55 154]
[56 153]
[57 152]
[58 151]
[59 150]
[61 148]
[62 147]
[63 146]
[64 145]
[66 143]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[72 136]
[73 135]
[74 134]
[75 132]
[76 131]
[78 130]
[79 129]
[81 127]
[82 126]
[83 125]
[90 118]
[91 117]
[92 116]
[93 115]
[102 114]
[103 113]
[104 112]
[105 111]
[106 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
