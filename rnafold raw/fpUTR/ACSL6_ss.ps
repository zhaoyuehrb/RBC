%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCAGCGGCGGCGGCGGCGCGGCUACUGCUGGGGCUGCUGGGCUGCGGGGCUGCGGGGCUGCGGGUCGGGGAGGCCGGGCCGGGCCGGGCCGGGCCCCGCUGACCGCC\
) } def
/len { sequence length } bind def

/coor [
[109.78964996 455.00164795]
[108.93331909 440.02612305]
[108.07698822 425.05056763]
[107.00689697 410.08880615]
[105.72327423 395.14382935]
[104.43965149 380.19885254]
[103.15602875 365.25387573]
[101.87239838 350.30889893]
[100.58877563 335.36392212]
[96.82479858 328.87243652]
[99.48812866 319.97485352]
[98.63179779 304.99929810]
[97.77545929 290.02377319]
[88.90934753 281.65795898]
[88.15668488 269.08767700]
[96.47621155 259.10412598]
[96.04787445 244.11022949]
[95.61952972 229.11634827]
[95.19119263 214.12246704]
[87.09360504 201.62133789]
[94.43367004 187.60583496]
[94.00533295 172.61195374]
[93.57698822 157.61807251]
[93.14865112 142.62419128]
[92.72030640 127.63031006]
[89.33306122 120.93453217]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[84.76270294 43.99632645]
[92.50000000 31.26905632]
[92.50000000 16.26905632]
[84.76270294 2.46888399]
[92.50000000 -10.25838757]
[92.50000000 -25.25838852]
[84.76270294 -39.05855942]
[92.50000000 -51.78583145]
[92.50000000 -66.78583527]
[84.76270294 -80.58600616]
[92.50000000 -93.31327820]
[92.50000000 -108.31327820]
[92.50000000 -123.31327820]
[92.50000000 -138.31327820]
[89.33306122 -147.04431152]
[92.72030640 -153.74008179]
[93.14865112 -168.73397827]
[85.80858612 -182.74946594]
[93.90616608 -195.25059509]
[94.33451080 -210.24447632]
[94.76284790 -225.23835754]
[95.19119263 -240.23223877]
[86.92862701 -254.39776611]
[95.29887390 -268.49993896]
[111.69133759 -268.03164673]
[119.24285126 -253.47462463]
[110.18507385 -239.80390930]
[109.75673676 -224.81002808]
[109.32839203 -209.81613159]
[108.90005493 -194.82225037]
[116.27075958 -181.87922668]
[108.14253235 -168.30563354]
[107.71419525 -153.31175232]
[107.50000000 -138.31327820]
[107.50000000 -123.31327820]
[107.50000000 -108.31327820]
[107.50000000 -93.31327820]
[115.23729706 -80.58600616]
[107.50000000 -66.78583527]
[107.50000000 -51.78583145]
[115.23729706 -39.05855942]
[107.50000000 -25.25838852]
[107.50000000 -10.25838757]
[115.23729706 2.46888399]
[107.50000000 16.26905632]
[107.50000000 31.26905632]
[115.23729706 43.99632645]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.71419525 127.20197296]
[108.14253235 142.19584656]
[108.57087708 157.18974304]
[108.99921417 172.18362427]
[109.42755890 187.17750549]
[117.55577850 200.75109863]
[110.18507385 213.69412231]
[110.61341858 228.68800354]
[111.04175568 243.68190002]
[111.47010040 258.67578125]
[121.50559998 274.03204346]
[112.75099945 289.16744995]
[113.60733032 304.14297485]
[114.46366119 319.11849976]
[115.53375244 334.08029175]
[116.81737518 349.02526855]
[118.10099792 363.97024536]
[119.38462830 378.91522217]
[120.66825104 393.86019897]
[121.95187378 408.80517578]
[125.85435486 417.23315430]
[123.05252838 424.19424438]
[123.90885925 439.16976929]
[124.76519012 454.14532471]
[131.70590210 469.61343384]
[118.76366425 480.56491089]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 107]
[2 106]
[3 105]
[4 103]
[5 102]
[6 101]
[7 100]
[8 99]
[9 98]
[11 97]
[12 96]
[13 95]
[16 93]
[17 92]
[18 91]
[19 90]
[21 88]
[22 87]
[23 86]
[24 85]
[25 84]
[27 83]
[29 81]
[30 80]
[31 79]
[33 77]
[34 76]
[36 74]
[37 73]
[39 71]
[40 70]
[42 68]
[43 67]
[44 66]
[45 65]
[47 64]
[48 63]
[50 61]
[51 60]
[52 59]
[53 58]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
