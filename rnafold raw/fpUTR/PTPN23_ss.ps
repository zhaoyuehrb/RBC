%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCCUCCCGUGACCAGUGACUUCCGGCACGAAGGGGCGGGGCUGGGCUCGUGGCUGAGCCAGCAGCUGCAGCAGCUACGGGAGUGGCCGGGUGGCCGGCGGGUGCCAGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[196.51687622 263.19949341]
[188.01724243 252.52955627]
[185.91716003 238.94067383]
[190.87699890 225.99967957]
[181.79939270 214.05828857]
[172.56091309 202.24090576]
[163.16326904 190.54969788]
[153.76560974 178.85850525]
[144.36796570 167.16729736]
[134.97032166 155.47610474]
[125.57266235 143.78489685]
[116.17501068 132.09370422]
[106.77736664 120.40249634]
[83.34837341 118.25656128]
[72.80674744 93.66650391]
[57.89467621 92.04471588]
[42.98260498 90.42293549]
[28.07053757 88.80114746]
[13.15846825 87.17935944]
[8.98345757 89.23005676]
[4.80325222 89.70721436]
[1.13906395 88.81845093]
[-1.61773789 86.92655182]
[-3.24670124 84.48986816]
[-17.89600945 81.26531219]
[-32.54531860 78.04075623]
[-47.19462585 74.81620026]
[-62.33544922 79.40597534]
[-73.10187531 69.11358643]
[-82.29290009 70.32909393]
[-88.10168457 65.59826660]
[-103.70479584 70.64553833]
[-115.69445038 59.45713806]
[-111.73670959 43.54272842]
[-95.90296936 39.27369308]
[-84.48162079 51.04164886]
[-69.87731934 54.46427536]
[-55.78430939 49.64385605]
[-43.97006989 60.16689301]
[-29.32076073 63.39144897]
[-14.67145252 66.61600494]
[-0.02214458 69.84056091]
[14.78025341 72.26728821]
[29.69232178 73.88907623]
[44.60439301 75.51086426]
[59.51646042 77.13264465]
[74.42852783 78.75443268]
[86.36992645 69.67681885]
[88.79665375 54.87442017]
[91.22338867 40.07202530]
[89.51206970 30.96027946]
[93.92147827 24.90389442]
[96.74815369 10.17263794]
[99.57483673 -4.55861712]
[102.40151215 -19.28987312]
[105.22819519 -34.02112579]
[108.05487061 -48.75238419]
[110.88155365 -63.48363876]
[101.80606079 -76.42237854]
[104.62004089 -91.97412872]
[117.65400696 -100.91232300]
[133.17514038 -97.93407440]
[141.97502136 -84.80633545]
[138.83285522 -69.31755829]
[125.61280823 -60.65695953]
[122.78613281 -45.92570114]
[119.95944977 -31.19444847]
[117.13276672 -16.46319199]
[114.30609131 -1.73193705]
[111.47940826 12.99931812]
[108.65273285 27.73057365]
[106.02578735 42.49875259]
[103.59905243 57.30115128]
[101.17232513 72.10354614]
[113.94591522 77.68373108]
[121.73558807 88.24658203]
[123.09928894 100.48130035]
[118.46856689 111.00484467]
[127.86621857 122.69604492]
[137.26387024 134.38725281]
[146.66151428 146.07844543]
[156.05915833 157.76965332]
[165.45681763 169.46084595]
[174.85446167 181.15205383]
[184.25212097 192.84324646]
[192.17726135 197.65414429]
[193.74078369 204.98066711]
[202.81840515 216.92207336]
[219.65747070 216.30067444]
[233.44024658 225.70442200]
[238.89384460 241.29812622]
[234.07337952 256.92605591]
[243.47102356 268.61727905]
[252.86868286 280.30847168]
[262.26632690 291.99966431]
[271.66397095 303.69088745]
[281.06161499 315.38208008]
[295.73812866 321.29061890]
[297.68133545 336.05792236]
[307.07897949 347.74911499]
[316.47662354 359.44030762]
[331.95263672 364.86483765]
[334.72659302 381.02764893]
[321.94488525 391.30187988]
[306.75622559 385.11825562]
[304.78543091 368.83798218]
[295.38778687 357.14675903]
[285.99014282 345.45556641]
[271.98580933 340.38327026]
[269.37042236 324.77972412]
[259.97277832 313.08853149]
[250.57513428 301.39730835]
[241.17747498 289.70611572]
[231.77983093 278.01492310]
[222.38217163 266.32373047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 88]
[5 87]
[6 85]
[7 84]
[8 83]
[9 82]
[10 81]
[11 80]
[12 79]
[13 78]
[15 47]
[16 46]
[17 45]
[18 44]
[19 43]
[24 42]
[25 41]
[26 40]
[27 39]
[29 37]
[31 36]
[48 74]
[49 73]
[50 72]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[57 66]
[58 65]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
[97 110]
[99 108]
[100 107]
[101 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
