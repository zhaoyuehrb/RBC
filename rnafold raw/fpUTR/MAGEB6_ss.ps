%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAAAGGGGUCUGAGCCGGUCGCCUGAGCCUGAAAAGUGCUGUCACGUCAGCGGAAGGAGGCGUCCCAGAUCUUCUCAGCUGUCUUGGUGCCAGCCUUCCUAGUCUUCCUACCCACACUCCUACCUGCUGUCACAGGCCACAGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[139.32048035 259.63473511]
[136.84353638 249.74444580]
[137.01142883 239.53294373]
[139.82156372 229.69647217]
[145.09092712 220.90800476]
[152.46792603 213.77114868]
[146.08123779 200.19874573]
[139.69454956 186.62632751]
[133.30786133 173.05392456]
[126.92116547 159.48152161]
[120.53447723 145.90911865]
[108.11454773 137.68751526]
[109.23963928 121.90636444]
[102.85295105 108.33396149]
[101.65686798 125.80043030]
[91.41172028 142.02990723]
[79.09448242 150.59060669]
[66.86756134 159.27983093]
[54.73230743 168.09660339]
[42.59705353 176.91339111]
[36.42485428 192.10667419]
[20.14604759 194.08972168]
[10.50687027 180.82252502]
[17.42328262 165.95324707]
[33.78027344 164.77813721]
[45.91552734 155.96134949]
[58.05078125 147.14457703]
[61.63722610 140.62536621]
[70.53377533 138.27337646]
[82.85101318 129.71266174]
[81.98898315 122.26237488]
[67.08839417 123.98642731]
[52.18780136 125.71048737]
[38.54925156 131.95468140]
[28.39614677 120.91318512]
[35.75976562 107.84501648]
[50.46374512 110.80989838]
[65.36433411 109.08583832]
[80.26493073 107.36177826]
[79.40290070 99.91148376]
[65.45625305 94.38961792]
[51.50960541 88.86775208]
[37.56295776 83.34587860]
[23.15986061 89.85175323]
[8.40471458 84.18949127]
[2.05148602 69.71841431]
[7.86943293 55.02395630]
[22.40686989 48.82408142]
[37.03899384 54.79705811]
[43.08482361 69.39923096]
[57.03147125 74.92110443]
[70.97811890 80.44297028]
[84.92476654 85.96483612]
[97.75523376 78.19443512]
[99.32315826 63.27660370]
[100.89108276 48.35877609]
[102.45901489 33.44094849]
[104.02693939 18.52311897]
[105.59486389 3.60529089]
[97.70432281 -12.99872303]
[108.48894501 -26.80702400]
[109.74411011 -41.75441742]
[110.99927521 -56.70180893]
[112.25444794 -71.64920044]
[109.84304810 -80.52983093]
[113.69563293 -86.89539337]
[115.26356506 -101.81321716]
[109.01116180 -116.34655762]
[118.03643799 -128.19534302]
[119.60436249 -143.11317444]
[121.17228699 -158.03100586]
[122.74021912 -172.94882202]
[110.26761627 -181.91152954]
[103.96200562 -195.91633606]
[105.51956177 -211.19604492]
[114.52130890 -223.64048767]
[128.54582214 -229.90217590]
[143.82057190 -228.29673767]
[156.23674011 -219.25602722]
[162.45443726 -205.21195984]
[160.80111694 -189.94230652]
[151.72154236 -177.55453491]
[137.65805054 -171.38090515]
[136.09011841 -156.46307373]
[134.52218628 -141.54524231]
[132.95426941 -126.62741852]
[139.31881714 -113.16109467]
[130.18139648 -100.24529266]
[128.61346436 -85.32746124]
[127.20183563 -70.39403534]
[125.94667053 -55.44664001]
[124.69150543 -40.49924850]
[123.43633270 -25.55185509]
[131.01882935 -16.07366562]
[130.05279541 -3.57126474]
[120.51269531 5.17321777]
[118.94477081 20.09104729]
[117.37683868 35.00887299]
[115.80891418 49.92670441]
[114.24098969 64.84452820]
[112.67305756 79.76235962]
[117.69541168 65.62815094]
[127.88076782 54.61640167]
[141.58106995 48.50888443]
[156.57952881 48.29382706]
[170.44931030 54.00603104]
[180.94618225 64.72122955]
[186.37171936 78.70562744]
[185.84802246 93.69648743]
[179.45982361 107.26818085]
[168.24078369 117.22473907]
[154.00619507 121.95513153]
[139.05931091 120.69394684]
[125.81861877 113.64525604]
[116.42535400 101.94727325]
[122.81204224 115.51967621]
[135.68879700 124.71206665]
[134.10688782 139.52243042]
[140.49357605 153.09483337]
[146.88026428 166.66723633]
[153.26695251 180.23963928]
[159.65364075 193.81204224]
[166.04032898 207.38446045]
[186.44769287 207.82655334]
[203.81288147 218.41198730]
[213.48425293 236.21705627]
[212.91546631 256.39624023]
[202.33538818 273.50073242]
[210.37278748 286.16567993]
[218.41020203 298.83059692]
[226.44760132 311.49551392]
[234.48500061 324.16043091]
[249.97932434 325.00030518]
[261.99957275 334.81323242]
[265.92367554 349.82592773]
[260.24279785 364.26568604]
[247.14128113 372.58016968]
[231.65698242 371.57223511]
[219.74389648 361.62948608]
[215.98286438 346.57510376]
[221.82008362 332.19781494]
[213.78268433 319.53289795]
[205.74528503 306.86798096]
[197.70787048 294.20306396]
[189.67047119 281.53814697]
[179.88032532 283.99218750]
[169.77151489 283.82812500]
[160.03324890 281.04824829]
[151.33178711 275.83352661]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 123]
[7 122]
[8 121]
[9 120]
[10 119]
[11 118]
[13 116]
[14 115]
[16 30]
[17 29]
[18 27]
[19 26]
[20 25]
[40 53]
[41 52]
[42 51]
[43 50]
[54 101]
[55 100]
[56 99]
[57 98]
[58 97]
[59 96]
[61 93]
[62 92]
[63 91]
[64 90]
[66 89]
[67 88]
[69 86]
[70 85]
[71 84]
[72 83]
[128 145]
[129 144]
[130 143]
[131 142]
[132 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
