%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUACAUAAGGACGUCAUUUCCUGCCGCCUGUCUUUUCCGUGCUACCUGCAGAGGGGUCCAUACGGCGUUGUUCUGGAUUCCCGUCGUAACUUAAAGGGAAAUUUUCACA\
) } def
/len { sequence length } bind def

/coor [
[126.60411072 165.42620850]
[114.48649597 174.26721191]
[99.61016083 176.18940735]
[85.64332581 170.71881104]
[76.02990723 159.20437622]
[73.14039612 144.48532104]
[77.68727112 130.19105530]
[88.54831696 119.84686279]
[77.21207428 129.66976929]
[65.87583160 139.49269104]
[54.53958511 149.31559753]
[54.96858215 164.94729614]
[45.20890808 177.16542053]
[29.86877823 180.20095825]
[16.19133759 172.62062073]
[10.63465309 158.00360107]
[15.82242107 143.25161743]
[29.30513573 135.33009338]
[44.71667480 137.97935486]
[56.05291748 128.15644836]
[67.38916016 118.33353424]
[78.72540283 108.51062012]
[80.64789581 93.63433075]
[72.18125153 81.25225067]
[63.71459961 68.87017059]
[55.24795151 56.48809433]
[39.97078705 53.44736862]
[31.56079102 40.76956940]
[34.55380630 26.22386742]
[26.08715630 13.84178925]
[9.34252930 6.34887123]
[8.52455711 -11.11691952]
[-0.29222164 -23.25217438]
[-9.10900021 -35.38742828]
[-17.92577934 -47.52268219]
[-26.74255753 -59.65793991]
[-35.55933762 -71.79319763]
[-41.65050507 -74.93747711]
[-44.67362595 -79.97230530]
[-44.50953293 -84.88243866]
[-52.61914444 -97.50124359]
[-60.72875595 -110.12004852]
[-76.03644562 -114.92152405]
[-81.69207001 -129.93463135]
[-73.35712433 -143.64259338]
[-57.42546463 -145.52984619]
[-46.11849213 -134.14862061]
[-48.10995483 -118.22966003]
[-40.00034332 -105.61085510]
[-31.89072990 -92.99205017]
[-23.42408180 -80.60997009]
[-14.60730267 -68.47471619]
[-5.79052448 -56.33946228]
[3.02625442 -44.20420837]
[11.84303284 -32.06895447]
[20.65981293 -19.93369865]
[32.64136505 -17.68931198]
[40.07053757 -7.52145004]
[38.46923447 5.37514067]
[46.93588257 17.75721931]
[61.57638931 20.24542999]
[70.33916473 32.68200684]
[67.63002777 48.02144623]
[76.09667969 60.40352249]
[84.56332397 72.78559875]
[93.02997589 85.16767883]
[97.30606842 83.65209198]
[101.88283539 83.35778046]
[106.41458893 84.33399963]
[110.55165863 86.53300476]
[113.96738434 89.81171417]
[116.38385773 93.94073486]
[117.59440613 98.62033081]
[117.48107147 103.50214386]
[130.94204712 110.12046051]
[144.40301514 116.73877716]
[157.86399841 123.35709381]
[171.59606934 129.39285278]
[185.57402039 134.83496094]
[199.55198669 140.27708435]
[213.52995300 145.71919250]
[227.50790405 151.16131592]
[238.29777527 140.41427612]
[252.52833557 134.99108887]
[267.73403931 135.83131409]
[281.28045654 142.78939819]
[290.82052612 154.65982056]
[294.70141602 169.38594055]
[292.25073242 184.41636658]
[283.89303589 197.14700317]
[271.07641602 205.37219238]
[256.02136230 207.66685486]
[241.33628845 203.63342285]
[229.56546021 193.97073364]
[222.74826050 180.35289001]
[222.06579590 165.13926697]
[208.08782959 159.69715881]
[194.10986328 154.25503540]
[180.13191223 148.81292725]
[166.15394592 143.37080383]
[162.68199158 144.55499268]
[158.44505310 144.01992798]
[154.30419922 141.41714478]
[151.24568176 136.81806946]
[137.78469849 130.19975281]
[124.32373047 123.58144379]
[110.86275482 116.96312714]
[123.99754333 124.20723724]
[132.02839661 136.87631226]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 22]
[9 21]
[10 20]
[11 19]
[23 66]
[24 65]
[25 64]
[26 63]
[29 60]
[30 59]
[32 56]
[33 55]
[34 54]
[35 53]
[36 52]
[37 51]
[40 50]
[41 49]
[42 48]
[74 107]
[75 106]
[76 105]
[77 104]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
