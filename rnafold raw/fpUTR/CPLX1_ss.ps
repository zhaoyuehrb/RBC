%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACGCGCCCUCCUCGCGGUGCCCUUCAGCCGCCGCCGCAGCUCACCGGGCGCCACAUGGACCCAGCCGGCCCGAGCGCGCCCCGCCGCUGACCGCCCGCGCCCCGGGAAGGAAGAACACUCGCUCCCGGCCAUACUUGCGUGUGAGUUCUGACCCCUGGAGGAGCCACUGUGGAAGCAGAGCAAUCGCC\
) } def
/len { sequence length } bind def

/coor [
[139.15338135 328.53228760]
[138.90795898 313.53430176]
[138.66253662 298.53631592]
[138.41709900 283.53829956]
[128.59468079 269.00399780]
[137.65193176 252.97982788]
[137.16114807 237.98785400]
[134.83888245 223.16871643]
[130.72004700 208.74528503]
[126.48336029 194.35603333]
[122.12908936 180.00193787]
[117.77481842 165.64782715]
[113.42054749 151.29373169]
[109.06627655 136.93962097]
[78.75228119 124.89436340]
[72.67198944 97.72808838]
[58.63339996 92.44434357]
[44.59481049 87.16059113]
[30.55622101 81.87683868]
[16.51763153 76.59308624]
[7.36722803 76.49716949]
[2.29375196 71.10633087]
[-11.65650654 65.59358978]
[-23.32468605 72.34102631]
[-36.55501556 71.14848328]
[-46.53166580 62.67525482]
[-49.75303268 50.18953705]
[-63.61122513 44.44928741]
[-77.46942139 38.70903397]
[-91.32761383 32.96878433]
[-105.18580627 27.22853279]
[-120.89643860 29.09576797]
[-129.69396973 17.07691765]
[-143.55215454 11.33666706]
[-163.38581848 14.88131714]
[-174.50692749 -0.92526573]
[-188.54551697 -6.20901632]
[-197.69592285 -6.30493355]
[-202.76940918 -11.69577217]
[-216.71966553 -17.20851135]
[-225.86726379 -17.45413208]
[-230.85186768 -22.92726135]
[-244.71005249 -28.66751289]
[-258.56823730 -34.40776443]
[-272.42645264 -40.14801407]
[-292.26010132 -36.60336304]
[-303.38122559 -52.40994644]
[-317.41979980 -57.69369888]
[-331.45840454 -62.97744751]
[-345.49697876 -68.26119995]
[-360.99746704 -57.06221008]
[-379.96658325 -57.44567871]
[-394.76617432 -69.07680511]
[-399.54556274 -87.12810516]
[-413.82650757 -91.71665192]
[-429.73309326 -87.72760010]
[-440.94506836 -99.69519806]
[-435.92852783 -115.30821991]
[-419.84402466 -118.50531769]
[-409.23794556 -105.99758911]
[-394.95703125 -101.40904999]
[-387.33950806 -109.59608459]
[-377.16735840 -114.36405945]
[-365.89907837 -114.98695374]
[-355.16613770 -111.33612823]
[-346.53695679 -103.90451050]
[-341.28759766 -93.74041748]
[-340.21322632 -82.29978943]
[-326.17465210 -77.01603699]
[-312.13604736 -71.73228455]
[-298.09747314 -66.44853973]
[-289.18862915 -71.49309540]
[-278.75543213 -70.77761841]
[-270.26910400 -64.29760742]
[-266.68618774 -54.00620651]
[-252.82800293 -48.26595688]
[-238.96980286 -42.52570343]
[-225.11161804 -36.78545380]
[-211.20692444 -31.15876961]
[-197.25666809 -25.64603043]
[-183.26176453 -20.24760628]
[-169.22317505 -14.96385479]
[-160.31433105 -20.00841522]
[-149.88114929 -19.29293442]
[-141.39480591 -12.81292343]
[-137.81190491 -2.52152610]
[-123.95371246 3.21872544]
[-109.23431396 0.94090819]
[-99.44555664 13.37033844]
[-85.58735657 19.11058998]
[-71.72916412 24.85084152]
[-57.87097549 30.59109306]
[-44.01278305 36.33134460]
[-28.77293777 29.23612785]
[-12.79955864 35.47389603]
[-6.14376736 51.64333344]
[7.80649090 57.15607452]
[21.80138397 62.55450058]
[35.83997345 67.83824921]
[49.87855911 73.12200165]
[63.91714859 78.40575409]
[77.95574188 83.68949890]
[87.46144867 75.61216736]
[99.56166840 72.58121490]
[111.75258636 75.22383118]
[121.64277649 63.94623566]
[131.53295898 52.66863632]
[141.42314148 41.39104080]
[151.31333923 30.11344337]
[161.20352173 18.83584595]
[160.35314941 3.28224182]
[170.54385376 -8.01395607]
[185.37707520 -8.72881126]
[195.26727295 -20.00640869]
[192.70976257 -35.43343353]
[200.71134949 -48.86877823]
[215.49394226 -53.96868134]
[230.07763672 -48.32512665]
[237.57647705 -34.60282516]
[234.44972229 -19.28102875]
[222.17373657 -9.59422398]
[206.54486084 -10.11622143]
[196.65467834 1.16137612]
[197.88206482 15.96100807]
[188.01266479 27.53898430]
[172.48112488 28.72603416]
[162.59092712 40.00363159]
[152.70074463 51.28122711]
[142.81056213 62.55882645]
[132.92036438 73.83641815]
[123.03018188 85.11402130]
[130.30291748 87.63359833]
[137.26934814 92.40209961]
[152.10700989 90.20114136]
[166.94465637 88.00018311]
[181.78230286 85.79922485]
[196.61994934 83.59826660]
[209.12181091 72.98529053]
[224.47067261 78.75977325]
[226.87692261 94.98142242]
[213.86523438 104.96279907]
[198.82090759 98.43591309]
[183.98326111 100.63687134]
[169.14561462 102.83782959]
[154.30795288 105.03878784]
[139.47030640 107.23974609]
[135.45782471 113.57614899]
[149.53428650 118.75817108]
[163.61074829 123.94019318]
[178.56291199 122.74337006]
[191.32695007 130.62243652]
[196.95832825 144.52522278]
[193.27560425 159.06611633]
[181.70536804 168.61230469]
[166.72967529 169.46580505]
[154.14974976 161.29602051]
[148.83877563 147.26766968]
[138.13581848 136.75831604]
[127.43286896 126.24894714]
[123.42038727 132.58535767]
[127.77465057 146.93945312]
[132.12892151 161.29356384]
[136.48320007 175.64765930]
[140.83746338 190.00177002]
[146.33178711 197.31967163]
[145.14347839 204.62646484]
[149.26231384 219.04988098]
[160.68890381 211.78308105]
[176.89717102 211.84387207]
[193.79754639 221.31214905]
[201.50907898 234.17808533]
[209.22062683 247.04400635]
[216.93217468 259.90994263]
[231.52154541 267.39874268]
[232.06036377 283.78903198]
[217.99435425 292.21987915]
[203.79339600 284.01834106]
[204.06623840 267.62149048]
[196.35470581 254.75555420]
[188.64315796 241.88961792]
[180.93161011 229.02369690]
[166.54173279 233.26057434]
[152.15312195 237.49707031]
[152.64390564 252.48904419]
[161.51272583 261.86871338]
[161.60415649 274.37603760]
[153.41510010 283.29287720]
[153.66052246 298.29086304]
[153.90594482 313.28887939]
[154.15138245 328.28686523]
[156.65701294 347.50592041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[3 188]
[4 187]
[6 184]
[7 183]
[8 167]
[9 166]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[16 102]
[17 101]
[18 100]
[19 99]
[20 98]
[22 97]
[23 96]
[27 93]
[28 92]
[29 91]
[30 90]
[31 89]
[33 87]
[34 86]
[36 82]
[37 81]
[39 80]
[40 79]
[42 78]
[43 77]
[44 76]
[45 75]
[47 71]
[48 70]
[49 69]
[50 68]
[54 61]
[55 60]
[105 131]
[106 130]
[107 129]
[108 128]
[109 127]
[110 126]
[113 123]
[114 122]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
