%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCACCAGCUUCUUGGUCUUAGAGAUCCUGAGCUCUCGGCUGACGCGGAAGCGCAGCCAUCCCCACCACCGCCGCCACGGCCAACACGGGUGCCACGCGCCGCCACCGCCGCCGGGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCUGCUGCAGAUCGCCCGCCGCCCACC\
) } def
/len { sequence length } bind def

/coor [
[195.27053833 118.39440918]
[192.46913147 109.88118744]
[191.66362000 101.02680969]
[176.90744019 98.33322906]
[162.15127563 95.63965607]
[147.39509583 92.94607544]
[132.63893127 90.25249481]
[101.14690399 143.14410400]
[90.63648224 153.84602356]
[80.12606049 164.54794312]
[69.61564636 175.24986267]
[65.81726837 183.59602356]
[58.81754303 186.04797363]
[58.50824356 201.62173462]
[47.50524902 212.12834167]
[32.65995026 211.73748779]
[21.95803261 222.24790955]
[11.25611210 232.75833130]
[0.55419189 243.26875305]
[-10.14772797 253.77915955]
[-17.21169853 269.19140625]
[-33.97710800 266.67001343]
[-36.19539261 249.86181641]
[-20.65814781 243.07723999]
[-9.95622730 232.56683350]
[0.74569285 222.05641174]
[11.44761276 211.54598999]
[22.14953232 201.03556824]
[22.02676964 186.18563843]
[32.73031235 175.37413025]
[48.30712128 175.34605408]
[58.91372299 164.73944092]
[69.42414093 154.03752136]
[79.93456268 143.33560181]
[90.44498444 132.63368225]
[88.24356079 125.46404266]
[73.62389374 122.10767365]
[83.84072113 111.12476349]
[81.63930511 103.95512390]
[66.93416595 100.99556732]
[52.22903061 98.03601837]
[37.52389145 95.07646942]
[22.81875420 92.11692047]
[13.75279999 93.49334717]
[7.87592793 88.96891022]
[-6.77338076 85.74435425]
[-21.42268944 82.51979828]
[-36.88339996 87.98773956]
[-49.17163086 77.12811279]
[-45.64629745 61.11236954]
[-29.93396378 56.41613388]
[-18.19813156 67.87049103]
[-3.54882383 71.09504700]
[11.10048485 74.31960297]
[25.77830505 77.41178131]
[40.48344421 80.37133026]
[55.18857956 83.33088684]
[69.89371490 86.29043579]
[84.59885406 89.24998474]
[89.45425415 83.53376770]
[77.96816254 73.88649750]
[66.48207855 64.23923492]
[54.99598694 54.59196472]
[43.50989914 44.94469452]
[32.29570389 34.98267746]
[42.00670242 23.55042267]
[53.65135574 33.00524902]
[65.02977753 42.77927017]
[76.40820312 52.55329514]
[87.78662109 62.32731628]
[99.16504669 72.10134125]
[104.02043915 66.38512421]
[98.72085571 52.35250473]
[93.42126465 38.31988525]
[88.12167358 24.28726959]
[76.86921692 11.60584450]
[85.94005585 -2.71743035]
[102.21463013 2.03384018]
[102.15429688 18.98768044]
[107.45388031 33.02029800]
[112.75347137 47.05291367]
[118.05306244 61.08553314]
[117.45722198 46.09737015]
[126.16074371 33.88063431]
[140.52134705 29.54782486]
[154.52934265 34.91215515]
[162.32261658 47.72874069]
[160.63981628 62.63404846]
[150.18515015 73.39044952]
[135.33250427 75.49632263]
[150.08866882 78.18990326]
[164.84484863 80.88348389]
[179.60102844 83.57705688]
[194.35719299 86.27063751]
[204.93800354 69.83159637]
[222.54298401 60.22687149]
[243.10235596 60.22634125]
[261.59472656 70.31256104]
[270.88647461 58.53699875]
[280.17819214 46.76143646]
[282.65261841 31.13492584]
[296.61056519 25.93639946]
[305.90228271 14.16083908]
[307.72604370 -2.13658381]
[322.85824585 -8.45706940]
[335.73217773 1.70135534]
[333.10427856 17.88857460]
[317.67785645 23.45256424]
[308.38613892 35.22812653]
[306.57632446 50.01236725]
[291.95376587 56.05316162]
[282.66201782 67.82872009]
[273.37030029 79.60428619]
[277.77313232 93.94356537]
[292.07208252 98.47566986]
[306.37103271 103.00777435]
[320.66998291 107.53988647]
[334.96893311 112.07199097]
[347.04492188 100.80165100]
[363.06277466 97.16998291]
[378.63973999 102.07379913]
[389.56234741 114.08760834]
[392.92611694 129.87632751]
[407.30456543 134.14955139]
[422.73712158 130.66426086]
[432.73278809 141.70671082]
[447.11123657 145.97991943]
[462.54379272 142.49462891]
[472.53945923 153.53707886]
[486.91790771 157.81028748]
[502.35046387 154.32499695]
[512.34613037 165.36744690]
[526.72460938 169.64065552]
[542.15710449 166.15538025]
[552.15283203 177.19781494]
[566.53125000 181.47103882]
[582.34619141 177.13294983]
[593.81878662 188.85096741]
[589.14697266 204.57057190]
[573.13677979 208.12080383]
[562.25805664 195.84947205]
[547.87957764 191.57626343]
[533.47552490 195.36720276]
[522.45135498 184.01910400]
[508.07293701 179.74589539]
[493.66882324 183.53681946]
[482.64471436 172.18873596]
[468.26626587 167.91552734]
[453.86215210 171.70645142]
[442.83804321 160.35835266]
[428.45959473 156.08514404]
[414.05548096 159.87608337]
[403.03137207 148.52798462]
[388.65292358 144.25477600]
[379.36358643 154.29118347]
[366.59219360 159.36355591]
[352.81597900 158.42651367]
[340.73370361 151.60638428]
[332.73693848 140.18754578]
[330.43682861 126.37094116]
[316.13787842 121.83883667]
[301.83892822 117.30673218]
[287.53997803 112.77462006]
[273.24102783 108.24251556]
[270.12878418 117.47966003]
[265.05377197 125.71793365]
[258.30410767 132.55099487]
[250.24935913 137.65036011]
[241.32048035 140.78120422]
[231.98683167 141.81297302]
[222.73146057 140.72457886]
[214.02616882 137.60383606]
[206.30738831 132.64129639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 94]
[4 93]
[5 92]
[6 91]
[7 90]
[8 35]
[9 34]
[10 33]
[11 32]
[13 31]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[45 54]
[46 53]
[47 52]
[72 82]
[73 81]
[74 80]
[75 79]
[98 113]
[99 112]
[100 111]
[102 109]
[103 108]
[114 164]
[115 163]
[116 162]
[117 161]
[118 160]
[123 154]
[124 153]
[126 151]
[127 150]
[129 148]
[130 147]
[132 145]
[133 144]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
