%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCCUGAGGUGGGAGGCGGUACCCGUGGCUGAGAAGAAGGAGGCCUGAGAGCGACAUGUCCCCGGCGGCUCAGGCGGAGCGGCCCGUGGCGCUGUUUUUCUGAGUCCGGGGUGGCCUGGCAGCCGGCCGAGGACGAGGGUCGGCGGGGGCUGCCCCCGUGGUGGUGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[90.42333221 376.65231323]
[75.45205688 377.58010864]
[61.36359787 372.43081665]
[50.51924133 362.06741333]
[44.73654556 348.22686768]
[44.98470306 333.22894287]
[51.22212982 319.58728027]
[62.40340805 309.58834839]
[76.65451050 304.90792847]
[91.58689880 306.33053589]
[104.69784546 313.61773682]
[113.79087067 325.55017090]
[112.70850372 310.58926392]
[111.62614441 295.62835693]
[107.99473572 289.16143799]
[110.66177368 280.38803101]
[109.84969330 265.41003418]
[109.03760529 250.43202209]
[108.22552490 235.45402527]
[107.41343689 220.47602844]
[106.60135651 205.49801636]
[98.18636322 193.20829773]
[105.16519165 179.00947571]
[104.35310364 164.03147888]
[103.54102325 149.05348206]
[102.72893524 134.07548523]
[101.91685486 119.09748077]
[89.89399719 110.12803650]
[75.30529785 113.61654663]
[60.71659088 117.10505676]
[46.12788773 120.59356689]
[42.42378235 135.44410706]
[32.23392105 146.86448669]
[17.89985847 152.23042297]
[2.71545553 150.30883789]
[-9.83002281 141.54130554]
[-16.85371780 127.94255066]
[-16.74163437 112.63745117]
[-9.51952934 99.14301300]
[3.15301013 90.56016541]
[18.36392784 88.86117554]
[32.61786652 94.43646240]
[42.63937378 106.00486755]
[57.22807693 102.51635742]
[71.81678009 99.02783966]
[86.40548706 95.53932953]
[71.80899811 92.08353424]
[63.29795074 79.73193359]
[65.26661682 64.86168671]
[76.69857025 55.15032959]
[91.69146729 55.61186218]
[102.50444031 66.00799561]
[103.55413055 80.97313690]
[109.35688019 67.14099884]
[115.15962219 53.30885696]
[120.96237183 39.47671509]
[117.49107361 19.64241600]
[133.31269836 8.56146431]
[138.61228943 -5.47115374]
[143.91188049 -19.50377083]
[149.21147156 -33.53638840]
[154.51106262 -47.56900787]
[152.14843750 -63.21281052]
[163.88336182 -72.38563538]
[169.18295288 -86.41825867]
[174.48254395 -100.45087433]
[179.78211975 -114.48348999]
[184.95481873 -128.56338501]
[190.00019836 -142.68939209]
[195.04557800 -156.81539917]
[200.09095764 -170.94140625]
[199.27427673 -177.55860901]
[201.59562683 -182.79365540]
[205.58190918 -185.48071289]
[203.50210571 -201.16462708]
[215.40072632 -210.12409973]
[220.95278931 -224.05874634]
[226.50486755 -237.99339294]
[226.77880859 -247.15914917]
[232.28501892 -252.12803650]
[238.08776855 -265.96017456]
[236.29145813 -281.67907715]
[248.34989929 -290.42227173]
[254.15264893 -304.25439453]
[259.95538330 -318.08654785]
[265.75814819 -331.91870117]
[266.19750977 -341.07800293]
[271.79254150 -345.94665527]
[277.84405518 -359.67178345]
[283.89559937 -373.39691162]
[284.50024414 -382.54681396]
[290.18225098 -387.31365967]
[296.48059082 -400.92727661]
[302.77893066 -414.54092407]
[294.41567993 -427.50469971]
[294.41168213 -442.93206787]
[302.76818848 -455.90020752]
[316.81866455 -462.27099609]
[332.07968140 -460.01159668]
[343.68148804 -449.84295654]
[347.92199707 -435.00982666]
[343.44805908 -420.24542236]
[331.68731689 -410.26101685]
[316.39257812 -408.24258423]
[310.09423828 -394.62896729]
[303.79589844 -381.01531982]
[297.62069702 -367.34539795]
[291.56918335 -353.62026978]
[285.51763916 -339.89514160]
[279.59027100 -326.11593628]
[273.78753662 -312.28381348]
[267.98477173 -298.45166016]
[262.18203735 -284.61950684]
[264.39340210 -269.88998413]
[251.91990662 -260.15744019]
[246.11715698 -246.32528687]
[240.43951416 -232.44132996]
[234.88745117 -218.50668335]
[229.33537292 -204.57202148]
[231.81230164 -189.88481140]
[219.51655579 -179.92864990]
[214.21696472 -165.89602661]
[209.17158508 -151.77001953]
[204.12620544 -137.64401245]
[199.08082581 -123.51799774]
[199.79461670 -116.13568115]
[193.81474304 -109.18389893]
[188.51515198 -95.15128326]
[183.21556091 -81.11866760]
[177.91596985 -67.08605194]
[180.65765381 -52.44595337]
[168.54367065 -42.26941681]
[163.24407959 -28.23679924]
[157.94448853 -14.20418167]
[152.64491272 -0.17156439]
[147.34532166 13.86105347]
[152.38818359 22.79679108]
[151.64602661 33.25098801]
[145.12338257 41.73369598]
[134.79450989 45.27946091]
[128.99176025 59.11160278]
[123.18901825 72.94374084]
[117.38627625 86.77588654]
[116.89485931 118.28539276]
[117.70693970 133.26339722]
[118.51902008 148.24139404]
[119.33110809 163.21939087]
[120.14318848 178.19740295]
[128.61627197 191.55844116]
[121.57936096 204.68594360]
[122.39144135 219.66394043]
[123.20352173 234.64193726]
[124.01560974 249.61994934]
[124.82769012 264.59793091]
[125.63977814 279.57595825]
[126.58703613 294.54598999]
[127.66940308 309.50689697]
[128.75177002 324.46780396]
[131.57844543 339.19906616]
[136.11056519 353.49801636]
[140.64266968 367.79696655]
[145.17477417 382.09591675]
[149.70687866 396.39486694]
[162.17260742 407.05026245]
[158.91201782 423.12197876]
[143.27931213 428.07684326]
[131.35607910 416.81768799]
[135.40792847 400.92697144]
[130.87582397 386.62802124]
[126.34371185 372.32907104]
[121.81160736 358.03012085]
[117.27950287 343.73117065]
[113.24996948 358.17977905]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 158]
[13 157]
[14 156]
[16 155]
[17 154]
[18 153]
[19 152]
[20 151]
[21 150]
[23 148]
[24 147]
[25 146]
[26 145]
[27 144]
[28 46]
[29 45]
[30 44]
[31 43]
[53 143]
[54 142]
[55 141]
[56 140]
[58 136]
[59 135]
[60 134]
[61 133]
[62 132]
[64 130]
[65 129]
[66 128]
[67 127]
[68 125]
[69 124]
[70 123]
[71 122]
[74 121]
[76 119]
[77 118]
[78 117]
[80 116]
[81 115]
[83 113]
[84 112]
[85 111]
[86 110]
[88 109]
[89 108]
[90 107]
[92 106]
[93 105]
[94 104]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
