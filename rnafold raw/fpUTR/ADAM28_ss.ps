%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUGAACCAGGGAGUUUCAUUCUGUCUCACUGGAGAGGAGGCAGGGACAGACCCAGCAGCACCCACCUGAGCGAGAAGAGCAGACACCGUGCUCCUGGAAUCACCCAGC\
) } def
/len { sequence length } bind def

/coor [
[97.53536987 125.18744659]
[88.11206818 136.85798645]
[78.68876648 148.52851868]
[69.26547241 160.19905090]
[59.84217072 171.86959839]
[50.41886902 183.54013062]
[40.99557114 195.21066284]
[38.34592056 210.80841064]
[24.33049774 215.84996033]
[24.59341240 231.89086914]
[12.12488365 241.98617554]
[-3.51029778 238.39164734]
[-10.31816006 223.86468506]
[-3.07629275 209.54913330]
[12.65996170 206.42666626]
[14.63559246 191.66366577]
[29.32503319 185.78736877]
[38.74833298 174.11682129]
[48.17163467 162.44628906]
[57.59493256 150.77575684]
[67.01823425 139.10522461]
[76.44153595 127.43468475]
[85.86483002 115.76414490]
[81.88012695 101.30309296]
[67.80909729 96.10635376]
[53.73806381 90.90962219]
[39.66703033 85.71289062]
[25.59599686 80.51615143]
[11.52496433 75.31941986]
[2.24036074 75.26568604]
[-2.86723351 69.77139282]
[-16.78556824 64.17854309]
[-32.93563080 67.02591705]
[-43.26784515 54.29103088]
[-37.15331650 39.07444382]
[-20.88214874 37.02967453]
[-11.19272137 50.26020813]
[2.72561359 55.85305786]
[16.72169876 61.24838638]
[30.79273224 66.44512177]
[44.86376190 71.64185333]
[58.93479538 76.83859253]
[73.00582886 82.03532410]
[87.07685852 87.23205566]
[102.07085419 86.80757904]
[115.82534027 80.82309723]
[129.57983398 74.83861542]
[133.04443359 64.33385468]
[141.59620667 57.67267990]
[152.18774414 56.91656494]
[161.21438599 62.07590103]
[175.28541565 56.87916946]
[186.63192749 42.46279907]
[203.77172852 45.92577362]
[217.69007874 40.33292770]
[231.60841370 34.74007797]
[245.52674866 29.14723206]
[255.44686890 16.82239342]
[270.14126587 19.25630379]
[284.05960083 13.66345596]
[297.97793579 8.07060909]
[311.89627075 2.47776175]
[325.81460571 -3.11508536]
[327.94552612 -19.44142151]
[337.92782593 -32.41745377]
[352.98898315 -38.59291458]
[369.02236938 -36.38532257]
[381.70693970 -26.48426437]
[395.46142578 -32.46874619]
[409.21594238 -38.45322418]
[415.07806396 -52.88489151]
[429.11233521 -58.75806808]
[442.83459473 -53.08046722]
[450.02517700 -67.42185211]
[465.75015259 -70.60063171]
[477.94668579 -60.17833328]
[477.25860596 -44.15003967]
[464.21380615 -34.81129456]
[448.81909180 -39.32597733]
[443.61941528 -25.41558266]
[429.75564575 -19.15053177]
[415.20040894 -24.69873428]
[401.44592285 -18.71425438]
[387.69143677 -12.72977448]
[387.02838135 0.98931879]
[380.45986938 13.12760162]
[369.23016357 21.26488304]
[355.51916504 23.75048256]
[342.01943970 20.03780556]
[331.40747070 10.80325031]
[317.48910522 16.39609718]
[303.57077026 21.98894501]
[289.65243530 27.58179092]
[275.73410034 33.17463684]
[266.80950928 45.09944153]
[251.11958313 43.06556702]
[237.20124817 48.65841675]
[223.28291321 54.25126266]
[209.36457825 59.84410858]
[204.26855469 70.91580963]
[192.59878540 75.64335632]
[180.48214722 70.95020294]
[166.41111755 76.14693451]
[155.35029602 91.90107727]
[135.56431580 88.59310150]
[121.80982208 94.57758331]
[108.05533600 100.56206512]
[110.65895844 104.37391663]
[111.35965729 109.74682617]
[109.49806213 115.77608490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[5 19]
[6 18]
[7 17]
[9 15]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[29 39]
[31 38]
[32 37]
[45 107]
[46 106]
[47 105]
[51 103]
[52 102]
[54 99]
[55 98]
[56 97]
[57 96]
[59 94]
[60 93]
[61 92]
[62 91]
[63 90]
[68 84]
[69 83]
[70 82]
[73 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
