%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGUAGAGUGAGAAGCACCAGCAGGCAGUAACAGCCAACCCUUAGCCAUUGCUAAGGGCAGAGAACUGGUGGAGCCUUUCUCUUACUCCCAGGACUUCAGCACCUAAGACAGCUCCAAAACAAACCAGAACAGUCAGCUCCGGGGGAGCACGACUGGGCGAGAGGCACAGAA\
) } def
/len { sequence length } bind def

/coor [
[422.23443604 134.27088928]
[417.94393921 123.57712555]
[402.98303223 122.49475861]
[388.02215576 121.41239166]
[373.06124878 120.33002472]
[358.10034180 119.24765778]
[343.13027954 118.30039215]
[328.15228271 117.48831177]
[313.17428589 116.67623138]
[300.04678345 123.71314240]
[286.68572998 115.24005890]
[271.70773315 114.42797852]
[256.72973633 113.61589813]
[246.80479431 126.67166901]
[230.89782715 131.29739380]
[215.20812988 125.48451996]
[205.97338867 111.33328247]
[190.98316956 110.79174805]
[175.99295044 110.25021362]
[161.00271606 109.70867157]
[146.01249695 109.16713715]
[131.02227783 108.62560272]
[121.10012054 129.10493469]
[98.21308136 139.65814209]
[71.43797302 132.74049377]
[57.94027710 139.28358459]
[44.44257355 145.82667542]
[40.79869080 161.03378296]
[28.20167542 170.29927063]
[12.59945107 169.24824524]
[1.35891366 158.37698364]
[-0.21250038 142.81855774]
[8.62718296 129.91918945]
[23.70413589 125.76953888]
[37.89948273 132.32897949]
[51.39718246 125.78588104]
[64.89488220 119.24279022]
[64.01671600 111.79438019]
[62.26037979 96.89756012]
[61.38220978 89.44915009]
[46.73290253 86.22459412]
[32.08359528 83.00003815]
[17.43428612 79.77548218]
[2.78497696 76.55091858]
[-11.86433125 73.32636261]
[-26.51363945 70.10180664]
[-41.16294861 66.87725067]
[-56.62366104 72.34519958]
[-68.91188812 61.48556900]
[-65.38655853 45.46982574]
[-49.67422485 40.77358627]
[-37.93839264 52.22794342]
[-23.28908348 55.45249939]
[-8.63977528 58.67705917]
[6.00953341 61.90161514]
[20.65884209 65.12616730]
[35.30815125 68.35073090]
[49.95745850 71.57528687]
[64.60676575 74.79984283]
[74.17117310 66.82783508]
[85.26424408 62.13016891]
[96.84136963 60.89769745]
[107.88031006 63.00645828]
[117.47116852 68.04708099]
[124.89138794 75.37862396]
[129.65953064 84.20053101]
[131.56381226 93.63538361]
[146.55403137 94.17691803]
[161.54426575 94.71845245]
[176.53448486 95.25998688]
[191.52470398 95.80152893]
[206.51492310 96.34306335]
[214.19688416 84.87493134]
[226.44915771 78.75674438]
[240.01567078 79.49462128]
[251.34983826 86.78833771]
[257.54183960 98.63789368]
[272.51983643 99.44997406]
[287.49783325 100.26206207]
[301.69665527 93.28323364]
[313.98635864 101.69822693]
[328.96435547 102.51030731]
[343.94238281 103.32239532]
[352.71578979 100.65534973]
[359.18270874 104.28675842]
[374.14361572 105.36912537]
[389.10452271 106.45149231]
[404.06539917 107.53385925]
[419.02630615 108.61622620]
[430.68759155 93.48537445]
[448.95718384 88.43938446]
[466.45303345 95.33077240]
[476.21737671 111.22589874]
[487.54537964 100.53411865]
[502.75115967 101.02240753]
[512.87432861 111.88781738]
[527.87188721 112.15863037]
[542.86944580 112.42944336]
[557.86700439 112.70024872]
[571.64617920 106.77287292]
[581.76342773 95.69847870]
[591.88061523 84.62408447]
[587.16363525 70.00745392]
[590.40264893 54.99398041]
[600.72631836 43.62220001]
[615.35766602 38.95107269]
[630.36090088 42.23710632]
[641.70025635 52.59637451]
[646.32550049 67.24228668]
[642.99243164 82.23516083]
[632.59771729 93.54199982]
[617.93737793 98.12130737]
[602.95501709 94.74128723]
[592.83776855 105.81568146]
[582.72058105 116.89007568]
[583.93395996 124.29127502]
[598.12200928 119.42302704]
[612.30999756 114.55477142]
[626.49804688 109.68652344]
[639.62384033 102.42607880]
[654.11901855 106.28480530]
[661.89776611 119.11020660]
[658.62091064 133.74789429]
[646.11633301 142.03257751]
[631.35998535 139.34313965]
[616.36022949 139.25997925]
[601.36047363 139.17683411]
[586.36071777 139.09367371]
[587.57403564 146.49487305]
[602.59057617 142.35469055]
[615.79638672 149.90861511]
[619.65087891 164.25012207]
[632.77453613 171.51435852]
[645.89819336 178.77861023]
[659.02191162 186.04286194]
[672.14556885 193.30709839]
[690.52746582 192.53334045]
[699.00860596 207.87998962]
[712.26129150 214.90611267]
[725.51397705 221.93225098]
[738.76666260 228.95837402]
[752.01934814 235.98449707]
[768.84558105 238.06167603]
[771.50756836 254.80532837]
[756.15515137 261.99838257]
[744.99322510 249.23718262]
[731.74053955 242.21105957]
[718.48785400 235.18492126]
[705.23516846 228.15879822]
[691.98248291 221.13267517]
[680.30810547 224.38229370]
[669.19946289 218.60862732]
[664.88128662 206.43077087]
[651.75762939 199.16653442]
[638.63397217 191.90228271]
[625.51031494 184.63803101]
[612.38659668 177.37377930]
[598.18701172 181.72192383]
[584.77423096 174.54190063]
[580.30981445 159.61854553]
[565.39636230 151.60258484]
[557.76318359 139.50267029]
[557.59619141 127.69780731]
[542.59863281 127.42699432]
[527.60107422 127.15618134]
[512.60351562 126.88536835]
[502.09469604 137.37821960]
[486.88119507 137.31723022]
[475.94656372 126.22344971]
[471.00064087 136.28758240]
[462.60714722 143.80119324]
[451.96215820 147.64189148]
[440.60211182 147.21438599]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 89]
[3 88]
[4 87]
[5 86]
[6 85]
[7 83]
[8 82]
[9 81]
[11 79]
[12 78]
[13 77]
[17 72]
[18 71]
[19 70]
[20 69]
[21 68]
[22 67]
[25 37]
[26 36]
[27 35]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[93 169]
[96 166]
[97 165]
[98 164]
[99 163]
[100 115]
[101 114]
[102 113]
[129 160]
[132 157]
[133 156]
[134 155]
[135 154]
[136 153]
[138 150]
[139 149]
[140 148]
[141 147]
[142 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
