%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCCAGUCGGCGCCGCCCGGAGCCGGGAGCGCCGCUCCAGCGAGGCGCGGGCUGUGGGGCCGCCGCGUGCCUGGCCCCGCUCGCCCGUGCCGGCCGCUCGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[61.47993851 129.04357910]
[68.20825958 115.63724518]
[81.73638153 109.15452576]
[67.08547211 112.37180328]
[52.43456650 115.58908081]
[38.35325623 129.87155151]
[20.15458298 123.60977173]
[5.71336269 127.66577148]
[-1.83865190 133.07707214]
[-9.20265865 131.62413025]
[-23.75476646 135.26228333]
[-38.30687714 138.90043640]
[-52.85898590 142.53858948]
[-67.41109467 146.17674255]
[-81.96320343 149.81488037]
[-89.32945251 160.52343750]
[-101.63778687 163.19343567]
[-112.08786011 156.91375732]
[-126.73876953 160.13102722]
[-141.38967896 163.34831238]
[-156.04058838 166.56558228]
[-167.78210449 178.01411438]
[-183.49211121 173.31005859]
[-187.00947571 157.29257202]
[-174.71585083 146.43905640]
[-159.25785828 151.91467285]
[-144.60694885 148.69740295]
[-129.95603943 145.48011780]
[-115.30513763 142.26284790]
[-103.09607697 129.74810791]
[-85.60134888 135.26277161]
[-71.04924011 131.62463379]
[-56.49713516 127.98648071]
[-41.94502640 124.34832764]
[-27.39291763 120.71018219]
[-12.84080791 117.07202911]
[1.65736210 113.22455597]
[16.09858322 109.16855621]
[20.37934303 99.68604279]
[29.40471649 94.07859802]
[40.24510956 94.45655823]
[49.21728897 100.93817139]
[63.86819839 97.72089386]
[78.51910400 94.50361633]
[91.21417236 81.73285675]
[107.55136108 83.25670624]
[118.96446991 73.52320862]
[130.37757874 63.78971100]
[141.79067993 54.05620956]
[153.20378113 44.32271194]
[164.61689758 34.58921051]
[176.02999878 24.85571098]
[187.44309998 15.12221241]
[198.85621643 5.38871241]
[204.52728271 -12.05594540]
[221.80575562 -14.72679996]
[232.93362427 -24.78516006]
[244.06149292 -34.84351730]
[255.18936157 -44.90187836]
[266.31723022 -54.96023941]
[277.44509888 -65.01860046]
[288.57296753 -75.07695770]
[299.70083618 -85.13531494]
[310.53421021 -95.51017761]
[321.06411743 -106.19293213]
[322.38681030 -122.18136597]
[335.79147339 -130.99581909]
[350.99517822 -125.87461090]
[356.33496094 -110.74628448]
[347.71456909 -97.21599579]
[331.74685669 -95.66303253]
[321.21694946 -84.98027802]
[320.36871338 -80.13848877]
[316.37203979 -75.83052826]
[309.75918579 -74.00744629]
[298.63131714 -63.94908905]
[287.50344849 -53.89073181]
[276.37557983 -43.83237076]
[265.24771118 -33.77401352]
[254.11985779 -23.71565247]
[242.99198914 -13.65729332]
[231.86412048 -3.59893394]
[230.90715027 8.55518723]
[221.58529663 17.02436829]
[208.58970642 16.80181885]
[197.17660522 26.53531837]
[185.76350403 36.26881790]
[174.35038757 46.00231552]
[162.93728638 55.73581696]
[151.52418518 65.46931458]
[140.11106873 75.20281219]
[128.69796753 84.93631744]
[117.28486633 94.66981506]
[115.13069153 109.51432800]
[123.30632019 122.09046173]
[131.48194885 134.66659546]
[146.81459045 139.38778687]
[152.54881287 154.37106323]
[144.28581238 168.12251282]
[128.36425781 170.09321594]
[116.99780273 158.77140808]
[118.90581512 142.84222412]
[110.73018646 130.26608276]
[102.55455780 117.68995667]
[107.63822174 131.80223083]
[103.01963806 146.07348633]
[90.63161469 154.53143311]
[75.65833282 153.63655090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 44]
[4 43]
[5 42]
[7 38]
[8 37]
[10 36]
[11 35]
[12 34]
[13 33]
[14 32]
[15 31]
[18 29]
[19 28]
[20 27]
[21 26]
[46 93]
[47 92]
[48 91]
[49 90]
[50 89]
[51 88]
[52 87]
[53 86]
[54 85]
[56 82]
[57 81]
[58 80]
[59 79]
[60 78]
[61 77]
[62 76]
[63 75]
[64 72]
[65 71]
[94 104]
[95 103]
[96 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
