%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCCCGCGGCAUGGAGCGGGCGUGAUUCAUCAGCAUCCGCGCCGGGGCGGCAUGGGGGCGCGCGCGGCGGCCGCCUAGGCGCCCAGGGCCAGGCAGCGGCGGCUUCCCCGGCCCGGCUCGCCCGCGCUUCUCUCCCUGUGGGCGGCGGCCCGGCGCCUGGAAGGUCAAG\
) } def
/len { sequence length } bind def

/coor [
[-21.60559654 402.50115967]
[-26.95601845 407.51840210]
[-33.65913010 410.32388306]
[-40.85174942 410.60803223]
[-47.95288467 423.82067871]
[-55.05401993 437.03332520]
[-62.15515518 450.24597168]
[-69.25629425 463.45858765]
[-76.35742950 476.67123413]
[-69.49648285 490.58911133]
[-72.15975189 505.87591553]
[-83.32315063 516.65356445]
[-98.69412994 518.77789307]
[-112.36223602 511.43194580]
[-119.07179260 497.44046021]
[-116.24285126 482.18344116]
[-104.96318817 471.52752686]
[-89.57006836 469.57009888]
[-82.46893311 456.35745239]
[-75.36779785 443.14483643]
[-68.26666260 429.93218994]
[-61.16552353 416.71954346]
[-54.06438828 403.50689697]
[-57.27841187 381.28820801]
[-37.59279251 369.03640747]
[-31.72622299 355.23120117]
[-25.85965157 341.42599487]
[-19.99308014 327.62081909]
[-14.12650967 313.81561279]
[-19.92131615 300.14245605]
[-14.16843987 286.05844116]
[0.21253863 280.07302856]
[6.07910967 266.26782227]
[11.94568062 252.46264648]
[17.81225014 238.65744019]
[3.09498429 241.55607605]
[-8.46759415 232.00062561]
[-8.39336205 217.00080872]
[3.26322508 207.56025696]
[17.95108223 210.60440063]
[24.89542198 223.89987183]
[31.99655724 210.68722534]
[39.09769440 197.47459412]
[46.19882965 184.26194763]
[53.29996490 171.04930115]
[60.40110016 157.83666992]
[67.50223541 144.62402344]
[74.60337067 131.41139221]
[73.81323242 116.53775024]
[87.16170502 108.04487610]
[90.02085114 93.31989288]
[88.38027954 78.40987396]
[86.73971558 63.49986267]
[82.67723846 55.27639008]
[85.20790100 48.30289459]
[83.83992767 33.36540604]
[82.47194672 18.42791367]
[81.10397339 3.49042273]
[79.73599243 -11.44706821]
[78.36801910 -26.38455963]
[69.40440369 -39.42159271]
[75.94875336 -52.80145645]
[74.58078003 -67.73894501]
[70.66917419 -76.03524780]
[73.32678223 -82.96135712]
[72.23184967 -97.92134094]
[71.13691711 -112.88132477]
[62.41291428 -126.07989502]
[69.20053864 -139.33799744]
[68.10561371 -154.29798889]
[59.38160324 -167.49655151]
[66.16923523 -180.75466919]
[65.07430267 -195.71464539]
[63.97937393 -210.67463684]
[62.61139679 -225.61212158]
[60.97082901 -240.52214050]
[59.33026123 -255.43214417]
[57.68969345 -270.34216309]
[48.48946762 -283.21331787]
[54.78835297 -296.71047974]
[53.14778519 -311.62048340]
[45.40537262 -326.70330811]
[57.75543594 -338.31848145]
[72.33552551 -329.66647339]
[68.05780029 -313.26104736]
[69.69836426 -298.35104370]
[78.78125000 -286.54635620]
[72.59970856 -271.98272705]
[74.24027252 -257.07272339]
[75.88084412 -242.16270447]
[77.52140808 -227.25268555]
[80.64993286 -223.59985352]
[81.49282074 -217.93266296]
[78.93935394 -211.76956177]
[80.03428650 -196.80957031]
[81.12921906 -181.84959412]
[89.77490997 -169.72105408]
[83.06559753 -155.39291382]
[84.16052246 -140.43293762]
[92.80621338 -128.30439758]
[86.09690857 -113.97625732]
[87.19183350 -99.01627350]
[88.28676605 -84.05628967]
[89.51827240 -69.10692596]
[90.88624573 -54.16943359]
[99.75201416 -42.20082855]
[93.30551147 -27.75253677]
[94.67348480 -12.81504536]
[96.04146576 2.12244558]
[97.40943909 17.05993652]
[98.77742004 31.99742699]
[100.14539337 46.93491745]
[101.64972687 61.85929489]
[103.29029846 76.76931000]
[104.93086243 91.67932129]
[108.32781982 91.10665131]
[112.12364197 91.69475555]
[115.96057129 93.56934357]
[130.80072021 95.75336456]
[139.78433228 93.90297699]
[145.89099121 98.11518097]
[160.68878174 100.56987000]
[175.48655701 103.02456665]
[190.28434753 105.47926331]
[205.08213806 107.93395996]
[219.87991333 110.38864899]
[234.67770386 112.84334564]
[249.47549438 115.29804230]
[259.16598511 103.38208771]
[273.52188110 97.92281342]
[288.68151855 100.38873291]
[300.56704712 110.11652374]
[305.98129272 124.48947144]
[303.46786499 139.64131165]
[293.70288086 151.49627686]
[279.31301880 156.86544800]
[264.16912842 154.30455017]
[252.34483337 144.50242615]
[247.02079773 130.09582520]
[232.22300720 127.64112854]
[217.42523193 125.18643951]
[202.62744141 122.73174286]
[187.82965088 120.27704620]
[173.03186035 117.82235718]
[158.23408508 115.36766052]
[143.43629456 112.91296387]
[128.61671448 110.59351349]
[113.77655792 108.40949249]
[100.37434387 115.14601898]
[100.65656281 130.96470642]
[87.81600952 138.51252747]
[80.71487427 151.72515869]
[73.61373901 164.93780518]
[66.51260376 178.15043640]
[59.41146851 191.36308289]
[52.31033325 204.57572937]
[45.20919800 217.78836060]
[38.10806274 231.00100708]
[31.61744308 244.52401733]
[25.75087357 258.32922363]
[19.88430214 272.13439941]
[14.01773167 285.93960571]
[19.69027328 300.44683838]
[13.54407692 314.36367798]
[-0.32131732 319.68218994]
[-6.18788815 333.48739624]
[-12.05445862 347.29257202]
[-17.92103004 361.09777832]
[-23.78760147 374.90295410]
[-19.42918205 381.13888550]
[-17.54098511 388.43838501]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[25 169]
[26 168]
[27 167]
[28 166]
[29 165]
[32 162]
[33 161]
[34 160]
[35 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[47 152]
[48 151]
[50 149]
[51 115]
[52 114]
[53 113]
[55 112]
[56 111]
[57 110]
[58 109]
[59 108]
[60 107]
[62 105]
[63 104]
[65 103]
[66 102]
[67 101]
[69 99]
[70 98]
[72 96]
[73 95]
[74 94]
[75 91]
[76 90]
[77 89]
[78 88]
[80 86]
[81 85]
[118 148]
[119 147]
[121 146]
[122 145]
[123 144]
[124 143]
[125 142]
[126 141]
[127 140]
[128 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
