%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCGAAGCAGUACAAAUCAGGGGAGAACGUGCCCAAGACCUGGAGAACUGAUAAUAAAUUGUGGUUUAUCCUUGCAAUGGAACACUAUAUGGAAGUGAAAAUGAUUGAAAUAGAGCUAUACACAUCAUCACAGACAAAUUUCAGAAACAACGCUGAGUGAAAAAUCCACCCACAAAUGAAUUAUCAGGAGUGAACCCAGAGGCACGU\
) } def
/len { sequence length } bind def

/coor [
[-46.04545212 585.51440430]
[-38.11330414 598.30023193]
[-32.74449158 612.35632324]
[-30.13308907 627.17443848]
[-30.37349510 642.21899414]
[-33.45701981 656.94610596]
[-39.27220154 670.82342529]
[-47.60881805 683.34930420]
[-58.16550827 694.07092285]
[-70.56065369 702.60070801]
[-84.34618378 708.63024902]
[-99.02375031 711.94165039]
[-114.06277466 712.41522217]
[-128.91960144 710.03381348]
[-143.05717468 704.88354492]
[-155.96441650 697.15051270]
[-167.17474365 687.11431885]
[-176.28291321 675.13775635]
[-182.95967102 661.65380859]
[-186.96366882 647.14984131]
[-188.15013123 632.15020752]
[-186.47619629 617.19714355]
[-182.00234985 602.83117676]
[-174.89035034 589.57159424]
[-165.39727783 577.89782715]
[-153.86630249 568.23175049]
[-140.71424866 560.92285156]
[-126.41657257 556.23529053]
[-111.49011993 554.33862305]
[-96.47447205 555.30126953]
[-81.91243744 559.08856201]
[-75.46145630 545.54663086]
[-69.01047516 532.00463867]
[-62.55949783 518.46264648]
[-56.10852051 504.92071533]
[-49.65754318 491.37872314]
[-43.20656586 477.83676147]
[-47.17806625 471.94976807]
[-48.87942123 464.98513794]
[-48.05397034 457.79483032]
[-44.75717545 451.27545166]
[-39.35555267 446.25616455]
[-32.48643112 443.39361572]
[-24.98295403 443.08602905]
[-17.54721260 430.05874634]
[-10.11147118 417.03149414]
[-2.67572951 404.00421143]
[-13.07794666 388.21707153]
[-14.01912498 369.25247192]
[-5.15508318 352.36804199]
[11.12849236 342.28695679]
[30.35752869 341.87692261]
[37.00846863 328.43203735]
[43.65940475 314.98715210]
[50.31034470 301.54226685]
[56.96128082 288.09738159]
[63.61222076 274.65249634]
[70.26316071 261.20758057]
[76.91410065 247.76271057]
[68.82688141 233.47683716]
[70.86910248 217.02075195]
[82.43245697 204.90455627]
[99.10291290 202.04025269]
[105.55389404 188.49827576]
[112.00486755 174.95631409]
[118.45584869 161.41435242]
[124.90682220 147.87237549]
[131.35780334 134.33041382]
[105.40284729 142.62594604]
[81.50846863 134.83398438]
[67.96347046 116.22023773]
[67.96218872 95.30796051]
[79.07857513 80.13441467]
[71.26005554 67.33321381]
[63.34690857 54.59029388]
[55.33955765 41.90635300]
[47.33220673 29.22241402]
[33.42272186 21.68339539]
[33.17123413 6.79091263]
[25.16388512 -5.89302731]
[17.06277466 -18.51729012]
[8.86834812 -31.08118248]
[0.67392278 -43.64507294]
[-7.52050304 -56.20896530]
[-22.38366318 -63.13850403]
[-23.54434204 -79.49652863]
[-9.80853462 -88.45529938]
[4.69353962 -80.79880524]
[5.04338932 -64.40338898]
[13.23781490 -51.83950043]
[21.43224144 -39.27560806]
[29.62666702 -26.71171570]
[35.91320419 -22.82678413]
[37.84782410 -13.90037823]
[45.85517502 -1.21643806]
[59.19192123 5.41534042]
[60.01614380 21.21506310]
[68.02349854 33.89900208]
[76.03084564 46.58294296]
[82.25912476 50.56060410]
[84.06126404 59.51469803]
[91.87977600 72.31590271]
[100.32338715 65.26918030]
[112.15496826 61.24729919]
[126.19847870 61.58738708]
[131.62928772 47.60503006]
[137.06010437 33.62267685]
[142.49092102 19.64032173]
[147.92173767 5.65796709]
[138.42338562 -6.33071804]
[136.21571350 -21.36477852]
[141.79254150 -35.39208603]
[153.56309509 -44.68241119]
[168.30416870 -46.81930923]
[173.73498535 -60.80166245]
[179.16580200 -74.78401947]
[176.13104248 -90.89991760]
[188.74507141 -101.37934875]
[204.03164673 -95.44196320]
[206.26525879 -79.19564056]
[193.14814758 -69.35320282]
[187.71734619 -55.37084961]
[182.28652954 -41.38849258]
[191.72061157 -29.86184502]
[194.13450623 -15.06221294]
[188.78108215 -0.94813299]
[177.00445557 8.65435696]
[161.90409851 11.08878231]
[156.47328186 25.07113647]
[151.04246521 39.05349350]
[145.61164856 53.03584671]
[140.18083191 67.01820374]
[144.99226379 72.77146149]
[156.46176147 63.10446548]
[167.93124390 53.43746567]
[179.40072632 43.77046585]
[190.87022400 34.10346985]
[202.52323914 24.65850830]
[212.14605713 36.16508484]
[200.78874207 45.96350479]
[189.24534607 55.54212570]
[177.70195007 65.12075043]
[166.15855408 74.69937134]
[154.61515808 84.27799225]
[159.42658997 90.03125763]
[174.14910889 87.15942383]
[188.87162781 84.28759003]
[203.59414673 81.41575623]
[210.02035522 67.29189301]
[223.53762817 59.67198563]
[238.94830322 61.48604202]
[250.32666016 72.03652191]
[253.29748535 87.26655579]
[246.71844482 101.31987762]
[233.11930847 108.79270172]
[217.72921753 106.81156921]
[206.46598816 96.13827515]
[191.74346924 99.01010895]
[177.02095032 101.88194275]
[162.29843140 104.75377655]
[161.96502686 119.75006866]
[176.54537964 123.27336121]
[191.12571716 126.79665375]
[203.60162354 117.36871338]
[219.21614075 118.21747589]
[230.59660339 128.94216919]
[232.36949158 144.47894287]
[223.69769287 157.49177551]
[208.67578125 161.83642578]
[194.39662170 155.46148682]
[187.60243225 141.37699890]
[173.02207947 137.85369873]
[158.44174194 134.33041382]
[144.89976501 140.78138733]
[138.44879150 154.32336426]
[131.99781799 167.86532593]
[125.54683685 181.40728760]
[119.09585571 194.94926453]
[112.64488220 208.49122620]
[120.11052704 220.07754517]
[120.87046814 233.73146057]
[114.83298492 245.88081360]
[103.67075348 253.39994812]
[90.35898590 254.41365051]
[83.70804596 267.85852051]
[77.05710602 281.30340576]
[70.40617371 294.74832153]
[63.75523376 308.19320679]
[57.10429382 321.63809204]
[50.45335388 335.08297729]
[43.80241776 348.52786255]
[51.41761017 356.82144165]
[56.13582993 367.01531982]
[57.52399063 378.13525391]
[55.46641159 389.12393188]
[50.17427444 398.94149780]
[42.16406250 406.66387939]
[32.20720673 411.56988525]
[21.25579071 413.20840454]
[10.35153961 411.43994141]
[2.91579866 424.46722412]
[-4.51994276 437.49447632]
[-11.95568371 450.52175903]
[-9.90616131 473.62655640]
[-29.66459846 484.28775024]
[-36.11557770 497.82971191]
[-42.56655502 511.37167358]
[-49.01753235 524.91363525]
[-55.46850967 538.45562744]
[-61.91948700 551.99755859]
[-68.37046814 565.53955078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 211]
[32 210]
[33 209]
[34 208]
[35 207]
[36 206]
[37 205]
[44 203]
[45 202]
[46 201]
[47 200]
[52 191]
[53 190]
[54 189]
[55 188]
[56 187]
[57 186]
[58 185]
[59 184]
[63 179]
[64 178]
[65 177]
[66 176]
[67 175]
[68 174]
[73 102]
[74 101]
[75 99]
[76 98]
[77 97]
[79 95]
[80 94]
[81 92]
[82 91]
[83 90]
[84 89]
[105 132]
[106 131]
[107 130]
[108 129]
[109 128]
[114 123]
[115 122]
[116 121]
[145 160]
[146 159]
[147 158]
[148 157]
[161 173]
[162 172]
[163 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
