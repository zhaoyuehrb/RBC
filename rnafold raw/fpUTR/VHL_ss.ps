%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGCCUCCGUUACAACGGCCUACGGUGCUGGAGGAUCCUUCUGCGCACGCGCACAGCCUCCGGCCGGCUAUUUCCGCGAGCGCGUUCCAUCCUCUACCGAGCGCGCGCGAAGACUACGGAGGUCGACUCGGGAGCGCGCACGCAGCUCCGCCCCGCGUCCGACCCGCGGAUCCCGCGGCGUCCGGCCCGGGUGGUCUGGAUCGCGGAGGGA\
) } def
/len { sequence length } bind def

/coor [
[23.01711464 263.11859131]
[21.26856995 270.27786255]
[17.18615723 276.33163452]
[11.31455708 280.55648804]
[4.40850782 282.46743774]
[-2.66406369 281.87313843]
[-11.33771801 294.11111450]
[-20.01137161 306.34906006]
[-28.68502617 318.58703613]
[-37.35868073 330.82498169]
[-46.03233337 343.06295776]
[-47.69961166 358.79608154]
[-61.37166214 364.70574951]
[-70.04531860 376.94369507]
[-78.71897125 389.18167114]
[-79.71138000 395.71450806]
[-83.31234741 400.10739136]
[-87.83124542 401.64651489]
[-96.86042023 413.62457275]
[-96.06313324 429.64779663]
[-108.18833923 440.15298462]
[-123.93461609 437.08145142]
[-131.22276306 422.78939819]
[-124.46195221 408.24050903]
[-108.83847809 404.59539795]
[-99.80930328 392.61734009]
[-90.95693207 380.50802612]
[-82.28327942 368.27005005]
[-73.60961914 356.03210449]
[-72.56274414 341.17431641]
[-58.27029800 334.38931274]
[-49.59664154 322.15133667]
[-40.92298889 309.91339111]
[-32.24933624 297.67541504]
[-23.57567978 285.43743896]
[-14.90202618 273.19949341]
[-15.23058987 250.75067139]
[5.94268084 241.27757263]
[13.69549847 228.43647766]
[21.44831657 215.59538269]
[29.20113564 202.75427246]
[36.95395279 189.91317749]
[44.70677185 177.07208252]
[52.45958710 164.23098755]
[60.21240616 151.38987732]
[67.96522522 138.54878235]
[75.71804047 125.70768738]
[66.80468750 112.18891907]
[64.85173798 96.11437225]
[70.26868439 80.85456848]
[81.91970825 69.60918427]
[77.15898132 55.38471603]
[72.39825439 41.16025162]
[67.63751984 26.93578529]
[63.73017502 23.48146439]
[61.73639679 19.29295540]
[61.61557770 15.22151279]
[62.99534225 11.97906780]
[58.86548615 -2.44120598]
[47.62770462 -13.57776070]
[51.56185150 -27.94340515]
[47.43199539 -42.36367798]
[43.30213928 -56.78395462]
[39.17228317 -71.20422363]
[34.93669128 -85.59379578]
[23.53663826 -96.56418610]
[27.25947571 -110.98603058]
[22.91837692 -125.34413147]
[18.57728004 -139.70222473]
[14.23618126 -154.06031799]
[9.89508343 -168.41841125]
[6.09082651 -171.98594666]
[4.22087049 -176.23118591]
[4.21962404 -180.30441284]
[5.69398212 -183.50495911]
[1.98923397 -198.04025269]
[-1.71551406 -212.57554626]
[-5.42026234 -227.11085510]
[-9.86663342 -241.43669128]
[-15.04289150 -255.51527405]
[-27.06712151 -265.79769897]
[-24.19708443 -280.41317749]
[-29.37334251 -294.49176025]
[-34.54960251 -308.57034302]
[-39.72586060 -322.64892578]
[-44.90211868 -336.72747803]
[-50.07837677 -350.80606079]
[-55.25463486 -364.88464355]
[-60.43089294 -378.96322632]
[-75.61347198 -380.89916992]
[-88.15065002 -389.67855835]
[-95.16147614 -403.28396606]
[-95.03491211 -418.58895874]
[-87.80004883 -432.07653809]
[-75.11939240 -440.64739990]
[-59.90687561 -442.33200073]
[-45.65821838 -436.74322510]
[-35.64765930 -425.16534424]
[-32.17554855 -410.25888062]
[-36.03975677 -395.44918823]
[-46.35231400 -384.13949585]
[-41.17605591 -370.06091309]
[-35.99979782 -355.98233032]
[-30.82353973 -341.90374756]
[-25.64728165 -327.82516479]
[-20.47102356 -313.74658203]
[-15.29476547 -299.66802979]
[-10.11850643 -285.58944702]
[1.53548169 -276.31399536]
[-0.96431363 -260.69152832]
[4.21194458 -246.61294556]
[10.41163540 -260.27178955]
[23.88664436 -266.86148071]
[38.47422409 -263.36828613]
[47.50279617 -251.38975525]
[46.84318161 -236.40426636]
[36.79704666 -225.26536560]
[21.95895576 -223.06738281]
[9.11503410 -230.81559753]
[12.81978226 -216.28030396]
[16.52453041 -201.74501038]
[20.22927856 -187.20970154]
[24.25317764 -172.75950623]
[28.59427452 -158.40141296]
[32.93537521 -144.04331970]
[37.27647018 -129.68522644]
[41.61756897 -115.32713318]
[52.70711899 -105.38373566]
[49.29478455 -89.93489838]
[54.23836136 -84.44331360]
[53.59255600 -75.33408356]
[57.72241211 -60.91381073]
[61.85226822 -46.49353409]
[65.98212433 -32.07326126]
[76.92451477 -21.96814156]
[73.28575897 -6.57106209]
[77.41561890 7.84921122]
[81.86198425 22.17505455]
[86.62271881 36.39952087]
[91.38344574 50.62398911]
[96.14418030 64.84845734]
[111.97315216 66.72625732]
[125.36936188 75.36477661]
[133.61090088 89.00881195]
[135.02320862 104.88608551]
[149.10177612 110.06234741]
[163.18035889 115.23860168]
[175.19235229 110.54432678]
[186.81097412 115.14378357]
[192.00956726 126.06470490]
[206.01063538 131.44708252]
[220.01171875 136.82945251]
[234.01278687 142.21182251]
[248.01385498 147.59419250]
[262.01492310 152.97656250]
[277.67242432 150.70637512]
[286.77578735 162.49526978]
[295.90652466 162.65328979]
[300.94192505 168.06077576]
[314.86248779 173.64810181]
[328.78302002 179.23542786]
[344.47216797 177.19532776]
[353.40148926 189.11659241]
[367.32202148 194.70391846]
[381.24258423 200.29124451]
[395.20376587 205.77624512]
[409.20486450 211.15861511]
[423.20593262 216.54098511]
[437.20700073 221.92335510]
[451.20806885 227.30572510]
[465.20913696 232.68809509]
[482.16305542 232.72789001]
[486.81811523 249.03022766]
[472.44152832 258.01632690]
[459.82678223 246.68916321]
[445.82571411 241.30679321]
[431.82461548 235.92442322]
[417.82354736 230.54205322]
[403.82247925 225.15968323]
[389.82141113 219.77731323]
[382.45178223 220.31118774]
[375.65527344 214.21179199]
[361.73471069 208.62446594]
[347.81414795 203.03715515]
[333.12072754 205.47688293]
[323.19570923 193.15599060]
[309.27514648 187.56866455]
[295.35461426 181.98133850]
[281.39340210 176.49633789]
[266.73736572 179.15151978]
[256.63256836 166.97763062]
[242.63148499 161.59526062]
[228.63041687 156.21289062]
[214.62934875 150.83052063]
[200.62826538 145.44815063]
[186.62719727 140.06578064]
[169.46441650 143.73181152]
[158.00410461 129.31718445]
[143.92552185 124.14092255]
[129.84693909 118.96466064]
[121.99283600 127.69139862]
[111.71444702 133.36570740]
[100.14477539 135.36209106]
[88.55914307 133.46051025]
[80.80632019 146.30160522]
[73.05350494 159.14270020]
[65.30068970 171.98379517]
[57.54787064 184.82489014]
[49.79505157 197.66600037]
[42.04223251 210.50709534]
[34.28941727 223.34819031]
[26.53659821 236.18928528]
[18.78377914 249.03039551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 36]
[7 35]
[8 34]
[9 33]
[10 32]
[11 31]
[13 29]
[14 28]
[15 27]
[18 26]
[19 25]
[38 213]
[39 212]
[40 211]
[41 210]
[42 209]
[43 208]
[44 207]
[45 206]
[46 205]
[47 204]
[51 141]
[52 140]
[53 139]
[54 138]
[58 137]
[59 136]
[61 134]
[62 133]
[63 132]
[64 131]
[65 129]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
[75 122]
[76 121]
[77 120]
[78 119]
[79 111]
[80 110]
[82 108]
[83 107]
[84 106]
[85 105]
[86 104]
[87 103]
[88 102]
[89 101]
[145 200]
[146 199]
[147 198]
[150 196]
[151 195]
[152 194]
[153 193]
[154 192]
[155 191]
[157 189]
[159 188]
[160 187]
[161 186]
[163 184]
[164 183]
[165 182]
[166 180]
[167 179]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
