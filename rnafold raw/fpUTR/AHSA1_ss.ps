%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGUUAAGGAGGGGAGGGGGUGGAGGGAAAAGCAAGCCAGGAGGUGCUUGCGGCCGCUUCUAGUAGUUUCCAGGCGCUGCCGGGCGGCUGGCACUAAGCGGUCCUGAGGCUGUGGCUACGGCUGCUCCGGAGCUGGUGGCGCCGCGAUAGGAGAGCCG\
) } def
/len { sequence length } bind def

/coor [
[-51.47352219 128.75236511]
[-66.35303497 130.64978027]
[-81.23254395 132.54721069]
[-96.11205292 134.44462585]
[-110.99156189 136.34204102]
[-125.87107086 138.23947144]
[-140.75057983 140.13688660]
[-155.63008118 142.03431702]
[-159.88755798 151.91281128]
[-167.81967163 159.05812073]
[-177.93293762 162.21592712]
[-188.36076355 160.87426758]
[-197.20785522 155.34518433]
[-202.89477539 146.69551086]
[-217.85980225 147.71914673]
[-232.82482910 148.74278259]
[-247.78987122 149.76641846]
[-262.75488281 150.79005432]
[-275.99487305 159.45108032]
[-289.22048950 152.60035706]
[-304.18551636 153.62399292]
[-306.15362549 160.08483887]
[-309.46792603 165.95193481]
[-313.96499634 170.94952393]
[-319.42596436 174.84440613]
[-325.58718872 177.45677185]
[-332.15304565 178.66853333]
[-338.81002808 178.42863464]
[-345.24172974 176.75518799]
[-351.14395142 173.73426819]
[-356.23901367 169.51551819]
[-360.28887939 164.30473328]
[-363.10617065 158.35386658]
[-364.56298828 151.94883728]
[-379.44250488 150.05140686]
[-394.32202148 148.15399170]
[-409.20150757 146.25656128]
[-424.08102417 144.35914612]
[-438.96054077 142.46173096]
[-449.49749756 153.85261536]
[-464.72396851 156.84155273]
[-478.78509521 150.27922058]
[-486.27407837 136.68898010]
[-484.31127930 121.29654694]
[-473.65136719 110.02063751]
[-458.39334106 107.19705200]
[-444.40423584 113.91153717]
[-437.06311035 127.58222198]
[-422.18362427 129.47964478]
[-407.30410767 131.37705994]
[-392.42459106 133.27447510]
[-377.54507446 135.17190552]
[-362.66558838 137.06932068]
[-345.85247803 119.91735077]
[-321.59622192 120.43839264]
[-305.20916748 138.65895081]
[-290.24414062 137.63531494]
[-278.07455444 129.04751587]
[-263.77853394 135.82502747]
[-248.81350708 134.80139160]
[-233.84846497 133.77775574]
[-218.88343811 132.75411987]
[-203.91841125 131.73048401]
[-192.29824829 116.14790344]
[-172.67153931 114.02307892]
[-157.52751160 127.15480042]
[-142.64799500 125.25737762]
[-127.76848602 123.35996246]
[-112.88897705 121.46253967]
[-98.00946808 119.56511688]
[-83.12995911 117.66770172]
[-68.25045013 115.77027893]
[-53.37094116 113.87285614]
[-40.02980423 102.50510406]
[-23.10250664 109.69451141]
[-8.26285267 107.50713348]
[6.57680225 105.31974792]
[18.03972626 95.80918884]
[32.82067490 101.45136261]
[47.66033173 99.26397705]
[53.85038376 95.15665436]
[62.81058502 97.18162537]
[77.69009399 95.28420258]
[88.04767609 80.58061218]
[105.84083557 77.95787811]
[120.00039673 89.04760742]
[134.79454041 86.57109070]
[149.58869934 84.09458160]
[164.38284302 81.61806488]
[179.17700195 79.14154816]
[187.17184448 74.61737823]
[194.28373718 76.76397705]
[206.80809021 67.09696960]
[220.52760315 72.89559937]
[235.36726379 70.70821381]
[250.20690918 68.52082825]
[265.04656982 66.33344269]
[279.88623047 64.14605713]
[287.96783447 59.77875137]
[295.03646851 62.06370544]
[309.91598511 60.16628647]
[315.46765137 56.42746353]
[321.20703125 56.13637161]
[325.41168213 58.49684906]
[340.35388184 57.18141556]
[355.29608154 55.86597824]
[368.36456299 46.94827271]
[381.72134399 53.53963852]
[396.66354370 52.22420120]
[411.60574341 50.90876770]
[426.51943970 49.30203247]
[441.39895630 47.40461349]
[456.27847290 45.50719070]
[471.15798950 43.60977173]
[486.03747559 41.71235275]
[498.75354004 31.35695457]
[513.98126221 37.44375229]
[516.05566406 53.71117020]
[502.84277344 63.42468262]
[487.93490601 56.59186172]
[473.05538940 58.48928070]
[458.17590332 60.38669968]
[443.29638672 62.28412247]
[428.41687012 64.18154144]
[424.81152344 67.38343811]
[419.14181519 68.32150269]
[412.92117310 65.85097504]
[397.97897339 67.16641235]
[383.03677368 68.48184967]
[371.03704834 77.30546570]
[356.61154175 70.80818939]
[341.66931152 72.12362671]
[326.72711182 73.43906403]
[311.81341553 75.04579163]
[296.93389893 76.94321442]
[282.07360840 78.98571777]
[267.23394775 81.17309570]
[252.39430237 83.36048126]
[237.55464172 85.54786682]
[222.71499634 87.73525238]
[211.25205994 97.24580383]
[196.47111511 91.60363770]
[181.65350342 93.93569946]
[166.85935974 96.41220856]
[152.06521606 98.88872528]
[137.27105713 101.36524200]
[122.47691345 103.84175873]
[117.85424805 114.18437958]
[108.82480621 121.02601624]
[97.61723328 122.67803192]
[86.99777222 118.73266602]
[79.58751678 110.16371155]
[64.70800781 112.06113434]
[49.84771729 114.10363007]
[35.00806046 116.29101562]
[22.48370552 125.95803070]
[8.76418686 120.15940094]
[-6.07546759 122.34678650]
[-20.91512299 124.53417206]
[-29.24681854 134.42346191]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 73]
[2 72]
[3 71]
[4 70]
[5 69]
[6 68]
[7 67]
[8 66]
[14 63]
[15 62]
[16 61]
[17 60]
[18 59]
[20 57]
[21 56]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[75 159]
[76 158]
[77 157]
[79 155]
[80 154]
[82 153]
[83 152]
[86 147]
[87 146]
[88 145]
[89 144]
[90 143]
[92 142]
[94 140]
[95 139]
[96 138]
[97 137]
[98 136]
[100 135]
[101 134]
[104 133]
[105 132]
[106 131]
[108 129]
[109 128]
[110 127]
[111 124]
[112 123]
[113 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
