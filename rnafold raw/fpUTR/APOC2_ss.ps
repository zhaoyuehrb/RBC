%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGUUGUGGCUGUGGAGCGGAAGUGGGUCUCAACCACUAUAAAUCCUCUCUGUGCCCGUCCGGAGCUGGUGAGGACAGCCUGCCAGAGUCUGGUCUCUGGACACU\
) } def
/len { sequence length } bind def

/coor [
[114.74902344 172.56327820]
[99.75133514 172.82656860]
[86.26999664 166.24983215]
[77.24604034 154.26783752]
[74.64811707 139.49452209]
[79.04296875 125.15279388]
[89.47183228 114.37139130]
[103.66004181 109.50229645]
[95.46577454 109.67912292]
[89.39874268 103.59507751]
[75.62550354 97.65387726]
[61.85226059 91.71268463]
[49.49647141 95.75230408]
[38.09305573 90.40132904]
[33.60143661 79.06518555]
[20.00682259 72.72590637]
[6.41220474 66.38663483]
[-7.18241215 60.04735947]
[-20.77702904 53.70808792]
[-36.55415726 54.88825607]
[-44.81905746 42.49710464]
[-58.41367340 36.15782928]
[-72.00829315 29.81855583]
[-86.02757263 24.48379517]
[-100.39741516 20.18174744]
[-114.76725769 15.87969780]
[-129.13710022 11.57765007]
[-143.50694275 7.27560139]
[-156.47166443 16.01918411]
[-172.01797485 14.33219814]
[-182.80540466 3.01118517]
[-183.74046326 -12.59841728]
[-174.38162231 -25.12623405]
[-159.14785767 -28.65701103]
[-145.23208618 -21.52362442]
[-139.20489502 -7.09424162]
[-124.83505249 -2.79219294]
[-110.46520996 1.50985551]
[-96.09536743 5.81190395]
[-81.72552490 10.11395264]
[-85.58205414 -4.38181257]
[-76.89410400 -16.60963058]
[-61.93659973 -17.73789597]
[-51.51267242 -6.95171022]
[-53.15106583 7.95854330]
[-65.66901398 16.22393990]
[-52.07440186 22.56321335]
[-38.47978592 28.90248680]
[-23.67503357 27.26889038]
[-14.43775463 40.11346817]
[-0.84313804 46.45274353]
[12.75147915 52.79201889]
[26.34609604 59.13129044]
[39.94071198 65.47056580]
[57.23881531 62.93856049]
[67.79345703 77.93943787]
[81.56669617 83.88063812]
[95.33993530 89.82183075]
[109.19813538 95.56208801]
[123.84257507 98.80867767]
[138.81719971 99.68085480]
[153.79180908 100.55302429]
[168.76643372 101.42519379]
[183.74105835 102.29737091]
[198.71568298 103.16954041]
[213.69030762 104.04171753]
[228.66493225 104.91388702]
[243.63955688 104.04171753]
[258.41168213 101.43698883]
[273.18377686 98.83226776]
[287.95590210 96.22754669]
[302.72802734 93.62282562]
[310.78192139 88.98543549]
[317.96719360 91.16371155]
[332.80880737 88.98973083]
[347.65045166 86.81575775]
[360.17160034 76.22552490]
[375.50991821 82.02790833]
[377.88668823 98.25390625]
[364.85687256 108.21160889]
[349.82443237 101.65737915]
[334.98278809 103.83135986]
[320.14117432 106.00534058]
[305.33273315 108.39494324]
[290.56060791 110.99966431]
[275.78851318 113.60438538]
[261.01638794 116.20910645]
[246.24427795 118.81382751]
[258.36709595 127.64771271]
[263.19427490 141.84976196]
[258.96566772 156.24139404]
[247.22315979 165.57485962]
[232.24853516 166.44685364]
[219.50207520 158.53941345]
[213.63162231 144.73587036]
[216.77775574 130.06951904]
[227.79275513 119.88851166]
[212.81813049 119.01633453]
[197.84350586 118.14416504]
[182.86889648 117.27199554]
[167.89427185 116.39981842]
[152.91964722 115.52764893]
[137.94502258 114.65547180]
[122.97039795 113.78330231]
[133.77127075 124.19200897]
[138.66680908 138.37063599]
[136.58903503 153.22604370]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 59]
[10 58]
[11 57]
[12 56]
[15 54]
[16 53]
[17 52]
[18 51]
[19 50]
[21 48]
[22 47]
[23 46]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
[60 104]
[61 103]
[62 102]
[63 101]
[64 100]
[65 99]
[66 98]
[67 97]
[68 88]
[69 87]
[70 86]
[71 85]
[72 84]
[74 83]
[75 82]
[76 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
