%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGAGACACUUCCUGUGGCAGAGAAAAGAGGUAGUGAGCGGUGUUUCAGGAUGUGAGGGCCCGCAGGAGCCGAGUCAGGCUCUCUCCACUGCCUGCCCGCCACCGUGCAAGCUCUGGCCGGCGCUGCCCACAGUCCCCAUGGUGGGCAGCCCCCGCGGCGGGGACCCCUGAUCGGCAGCGGC\
) } def
/len { sequence length } bind def

/coor [
[124.73744965 166.17433167]
[110.61289215 171.22378540]
[96.74576569 165.50512695]
[90.28646851 151.96713257]
[94.56544495 137.59072876]
[93.24732971 122.64875031]
[86.18506622 125.17353058]
[80.17826080 138.91828918]
[74.17144775 152.66304016]
[78.66113281 168.06506348]
[69.30120850 181.09469604]
[53.27182388 181.75672913]
[42.86934280 169.54328918]
[46.07365799 153.82350159]
[60.42669678 146.65623474]
[66.43350220 132.91146851]
[72.44031525 119.16671753]
[60.57925797 128.34906006]
[48.71820068 137.53140259]
[34.30215073 141.67596436]
[19.86235809 137.61486816]
[9.72007275 126.56344604]
[6.91046476 111.82892609]
[12.27433681 97.82075500]
[24.20650101 88.73101044]
[39.13614273 87.27988434]
[52.59381866 93.90018463]
[67.58135986 94.51149750]
[82.56889343 95.12281799]
[69.70917511 87.40093231]
[56.84945679 79.67903900]
[43.98973846 71.95714569]
[31.13001823 64.23525238]
[18.27029800 56.51336288]
[5.41057920 48.79146957]
[-7.44914007 41.06957626]
[-30.03538513 44.49773026]
[-43.84626007 27.09396935]
[-58.60322952 24.40475845]
[-73.36019897 21.71554756]
[-88.11716461 19.02633476]
[-101.02309418 27.74841881]
[-115.95045471 24.81095886]
[-124.18608856 12.45337582]
[-138.94305420 9.76416492]
[-153.70002747 7.07495308]
[-168.45700073 4.38574171]
[-183.21397400 1.69653058]
[-197.17298889 9.60383129]
[-212.00411987 3.48690367]
[-216.33021545 -11.96186829]
[-206.83264160 -24.89151001]
[-190.79713440 -25.38350487]
[-180.52474976 -13.06043911]
[-165.76779175 -10.37122726]
[-151.01081848 -7.68201590]
[-136.25384521 -4.99280453]
[-121.49687958 -2.30359316]
[-109.43148804 -10.96165180]
[-94.42751312 -8.44462776]
[-85.42795563 4.26936626]
[-70.67098236 6.95857763]
[-55.91401672 9.64778900]
[-41.15704727 12.33700085]
[-40.54513550 11.35487461]
[-39.88207245 10.40652847]
[-48.14859772 -2.11004329]
[-56.41512299 -14.62661552]
[-64.68164825 -27.14318657]
[-72.94817352 -39.65975952]
[-81.21469879 -52.17633057]
[-96.74681091 -55.09675598]
[-105.59552765 -68.19163513]
[-102.51104736 -83.69200897]
[-89.32334900 -92.40177917]
[-73.85645294 -89.15359497]
[-65.28659821 -75.87454224]
[-68.69812775 -60.44285583]
[-60.43159866 -47.92628479]
[-52.16507721 -35.40970993]
[-43.89855194 -22.89313889]
[-35.63202667 -10.37656784]
[-27.36550140 2.14000392]
[-16.40007782 2.04010797]
[-6.61224747 7.32129383]
[-0.50657660 16.80306244]
[0.27275190 28.20985794]
[13.13247108 35.93175125]
[25.99219131 43.65364075]
[38.85190964 51.37553406]
[51.71162796 59.09742737]
[64.57135010 66.81932068]
[77.43106842 74.54120636]
[90.29078674 82.26309967]
[104.91878510 78.94322205]
[113.18531036 66.42665100]
[121.45183563 53.91007996]
[122.60083771 38.13064957]
[136.07115173 31.77456856]
[144.33767700 19.25799561]
[152.60420227 6.74142408]
[160.87072754 -5.77514744]
[157.91537476 -21.06905746]
[166.47711182 -33.64488220]
[181.07572937 -36.36810303]
[189.34225464 -48.88467407]
[189.78636169 -65.27780914]
[204.33221436 -72.85079193]
[218.01629639 -63.81319809]
[216.76158142 -47.46212006]
[201.85882568 -40.61814880]
[193.59230042 -28.10157776]
[196.81874084 -13.60586452]
[188.61361694 -0.79452068]
[173.38729858 2.49137712]
[165.12077332 15.00794888]
[156.85424805 27.52452087]
[148.58772278 40.04109192]
[148.02999878 54.92525101]
[133.96841431 62.17660522]
[125.70188141 74.69317627]
[117.43536377 87.20974731]
[121.25542450 101.71516418]
[134.61466980 108.53649139]
[147.97392273 115.35781860]
[161.33317566 122.17914581]
[174.69241333 129.00047302]
[188.05166626 135.82179260]
[204.57847595 130.12374878]
[219.81875610 137.97566223]
[224.58088684 154.09346008]
[238.05526733 160.68446350]
[251.69487000 166.92633057]
[265.49069214 172.81494141]
[279.28649902 178.70355225]
[293.08230591 184.59216309]
[306.87811279 190.48077393]
[320.67391968 196.36938477]
[336.40368652 194.67080688]
[345.07174683 206.78335571]
[360.80151367 205.08479309]
[369.46957397 217.19734192]
[383.26538086 223.08595276]
[397.06118774 228.97456360]
[410.85699463 234.86317444]
[424.65280151 240.75178528]
[440.01571655 236.13006592]
[453.12521362 245.37780762]
[453.92480469 261.40090942]
[441.80111694 271.90783691]
[426.05441284 268.83859253]
[418.76419067 254.54759216]
[404.96838379 248.65898132]
[391.17257690 242.77037048]
[377.37677002 236.88175964]
[363.58096313 230.99314880]
[348.83798218 233.11291504]
[339.18313599 220.57916260]
[324.44012451 222.69892883]
[314.78530884 210.16517639]
[300.98950195 204.27658081]
[287.19369507 198.38796997]
[273.39788818 192.49935913]
[259.60208130 186.61074829]
[245.80627441 180.72213745]
[242.39614868 181.70681763]
[238.33718872 181.07318115]
[234.40237427 178.53335571]
[231.46426392 174.15882874]
[217.98989868 167.56784058]
[206.49230957 173.41654968]
[193.53311157 171.53948975]
[183.88465881 162.40113831]
[181.23033142 149.18104553]
[167.87109375 142.35972595]
[154.51184082 135.53839111]
[141.15258789 128.71707153]
[127.79335022 121.89573669]
[114.43409729 115.07440948]
[107.37184143 117.59918976]
[115.82536316 129.99023438]
[128.24903870 138.39573669]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 17]
[8 16]
[9 15]
[29 94]
[30 93]
[31 92]
[32 91]
[33 90]
[34 89]
[35 88]
[36 87]
[38 64]
[39 63]
[40 62]
[41 61]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[66 83]
[67 82]
[68 81]
[69 80]
[70 79]
[71 78]
[95 122]
[96 121]
[97 120]
[99 118]
[100 117]
[101 116]
[102 115]
[105 112]
[106 111]
[123 179]
[124 178]
[125 177]
[126 176]
[127 175]
[128 174]
[131 170]
[132 169]
[133 165]
[134 164]
[135 163]
[136 162]
[137 161]
[138 160]
[140 158]
[142 156]
[143 155]
[144 154]
[145 153]
[146 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
