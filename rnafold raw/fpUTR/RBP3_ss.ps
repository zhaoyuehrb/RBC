%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCCACCAGCUGAGAAGGACAAGGGCGGAAGGCAGCUGCACAGAGCAGGGCCACGGCCUUGCACACAGUCCAGGGAGCUUUUGUGCAGGAGCCAGGCCUCCCCCUGGGUCCCC\
) } def
/len { sequence length } bind def

/coor [
[-3.90647101 531.07464600]
[-7.88352108 545.64721680]
[-15.80621433 558.50836182]
[-27.03229332 568.61535645]
[-40.65171051 575.14898682]
[-55.56039810 577.57952881]
[-70.54978180 575.71002197]
[-84.40473175 569.69195557]
[-96.00209808 560.01324463]
[-104.40172577 547.45843506]
[-108.92269897 533.04534912]
[-109.19851685 517.94232178]
[-105.20683289 503.37377930]
[-97.27122498 490.52062988]
[-86.03499603 480.42489624]
[-72.40901947 473.90496826]
[-57.49789810 471.48937988]
[-42.51040268 473.37396240]
[-36.53438568 459.61578369]
[-30.55837059 445.85763550]
[-24.58235359 432.09945679]
[-27.56532669 414.86489868]
[-12.82828426 403.92965698]
[-7.23029900 390.01339722]
[-1.63231397 376.09713745]
[3.96567106 362.18084717]
[3.53664637 354.69967651]
[9.91131210 347.96432495]
[15.88732815 334.20614624]
[21.86334419 320.44796753]
[16.99085045 299.41333008]
[34.64979553 285.73687744]
[39.08976364 271.40905762]
[43.52973557 257.08123779]
[36.38150024 244.06437683]
[40.68015671 229.47067261]
[54.38189316 222.06120300]
[58.82186127 207.73338318]
[63.26182938 193.40554810]
[67.70179749 179.07772827]
[72.14176941 164.74989319]
[76.58174133 150.42207336]
[81.02171326 136.09423828]
[85.46167755 121.76641083]
[89.90164948 107.43858337]
[60.62316895 79.37598419]
[58.17552567 64.57703400]
[55.72788239 49.77807999]
[53.28023911 34.97912598]
[50.83259583 20.18017197]
[48.38495255 5.38121748]
[45.93730927 -9.41773701]
[35.11769104 -21.74120712]
[40.63587570 -37.18405914]
[56.81522369 -39.86001205]
[67.01181030 -27.01627159]
[60.73626328 -11.86538029]
[63.18390656 2.93357396]
[65.63154602 17.73252869]
[68.07919312 32.53148270]
[70.52683258 47.33043671]
[72.97447968 62.12939072]
[75.42211914 76.92834473]
[82.41783905 79.63203430]
[87.82543945 65.64068604]
[101.81670380 71.04850769]
[96.40927124 85.03942108]
[103.40499115 87.74311066]
[115.16886902 78.43660736]
[126.93275452 69.13009644]
[127.20272827 53.49484634]
[137.49865723 41.72505569]
[152.95910645 39.37806320]
[166.28413391 47.56204605]
[171.18206787 62.41278076]
[165.34025574 76.91819763]
[151.51701355 84.22929382]
[136.23925781 80.89398193]
[124.47537994 90.20048523]
[112.71149445 99.50699615]
[104.22947693 111.87854767]
[99.78951263 126.20638275]
[95.34954071 140.53421021]
[90.90956879 154.86203003]
[86.46959686 169.18986511]
[82.02963257 183.51770020]
[77.58966064 197.84552002]
[73.14968872 212.17335510]
[68.70971680 226.50117493]
[75.82068634 240.36018372]
[71.11382294 254.82737732]
[57.85756302 261.52120972]
[53.41759491 275.84902954]
[48.97762299 290.17684937]
[54.36405563 296.94616699]
[56.52962875 305.22341919]
[55.17881775 313.57574463]
[50.61809540 320.58908081]
[43.69066238 325.10760498]
[35.62151337 326.42398071]
[29.64549828 340.18215942]
[23.66948128 353.94033813]
[17.88194084 367.77883911]
[12.28395557 381.69509888]
[6.68597078 395.61138916]
[1.08798587 409.52764893]
[5.43089867 421.76675415]
[0.37892780 433.29229736]
[-10.82418442 438.07546997]
[-16.80019951 451.83364868]
[-22.77621651 465.59179688]
[-28.75223351 479.34997559]
[-17.14515305 489.01705933]
[-8.73291588 501.56341553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 112]
[19 111]
[20 110]
[21 109]
[23 106]
[24 105]
[25 104]
[26 103]
[28 102]
[29 101]
[30 100]
[32 94]
[33 93]
[34 92]
[37 89]
[38 88]
[39 87]
[40 86]
[41 85]
[42 84]
[43 83]
[44 82]
[45 81]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[68 80]
[69 79]
[70 78]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
