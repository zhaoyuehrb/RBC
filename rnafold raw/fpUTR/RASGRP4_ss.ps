%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCCGUGUGGGGGAGGGGGGCCUUCGGUCUCUCCCCAGCCUCUUCCUUCCCCCUGGCCUGAGGGUGGGUGGGGAGGGGCAGUUCCUCUUUCCUUCCCAAGCACCGAGGAGGCCCCAGCUCCCUAGGGGCUGAGAAGCUGGAGUCCUGGGCAAGGGGAGGAGCUGAGCCCUACUCUUGCAAGACCCCCGGCCUCCUCACCCCACGCGGGAAGC\
) } def
/len { sequence length } bind def

/coor [
[90.33647156 554.58172607]
[85.39009094 539.87414551]
[90.06539154 525.07818604]
[102.56462860 515.88317871]
[102.34545898 500.88476562]
[102.12628174 485.88635254]
[101.90711212 470.88796997]
[101.68793488 455.88955688]
[101.46876526 440.89117432]
[101.24958801 425.89276123]
[101.03041840 410.89434814]
[100.81124878 395.89596558]
[100.59207153 380.89755249]
[100.37290192 365.89916992]
[89.54241180 355.73864746]
[89.10647583 340.53125000]
[99.83719635 329.24014282]
[99.61802673 314.24172974]
[99.39884949 299.24334717]
[99.17967987 284.24493408]
[98.96050262 269.24655151]
[98.74133301 254.24815369]
[98.52215576 239.24974060]
[98.30298615 224.25134277]
[86.04034424 215.83912659]
[81.02319336 201.65136719]
[85.37319183 187.05921936]
[97.62299347 177.71853638]
[97.40382385 162.72013855]
[97.18465424 147.72172546]
[96.96547699 132.72332764]
[96.74630737 117.72493744]
[86.25657654 107.00273132]
[71.26658630 106.45490265]
[56.27658844 105.90707397]
[41.28659821 105.35924530]
[26.29660416 104.81141663]
[11.30661201 104.26358032]
[-3.68338060 103.71575165]
[-17.75692749 110.94387817]
[-30.19312668 102.74691772]
[-45.18312073 102.19908905]
[-60.17671585 101.76078796]
[-75.17311096 101.43204498]
[-90.16950989 101.10329437]
[-105.16590881 100.77455139]
[-120.16230011 100.44580841]
[-129.59223938 112.62703705]
[-144.21578979 116.87031555]
[-158.36650085 111.74964142]
[-166.68891907 99.42586517]
[-181.68530273 99.09712219]
[-195.79563904 107.45359039]
[-209.95309448 99.17719269]
[-209.59368896 82.78198242]
[-195.08714294 75.13394928]
[-181.35656738 84.10072327]
[-166.36016846 84.42947388]
[-157.50569153 72.48223877]
[-143.14418030 67.98660278]
[-128.72062683 72.86663818]
[-119.83355713 85.44940948]
[-104.83715820 85.77815247]
[-89.84076691 86.10690308]
[-74.84436798 86.43564606]
[-59.84796906 86.76438904]
[-53.09392929 83.76922607]
[-44.63528824 87.20909119]
[-29.64529610 87.75691986]
[-16.64393425 80.48960876]
[-3.13555026 88.72576141]
[11.85444260 89.27359009]
[26.84443474 89.82141876]
[41.83442688 90.36924744]
[56.82442093 90.91708374]
[71.81441498 91.46491241]
[86.80440521 92.01274109]
[99.83116150 84.57610321]
[106.98051453 71.38948822]
[114.12987518 58.20287704]
[121.27922821 45.01626587]
[128.23513794 31.72659874]
[134.99612427 18.33671379]
[141.75712585 4.94682884]
[148.51811218 -8.44305611]
[155.27909851 -21.83294106]
[162.04008484 -35.22282791]
[168.80107117 -48.61271286]
[175.56205750 -62.00259781]
[182.32305908 -75.39247894]
[182.33474731 -81.99906158]
[185.24285889 -86.87725067]
[189.48223877 -89.07051086]
[196.63159180 -102.25712585]
[203.78094482 -115.44374084]
[210.93029785 -128.63035583]
[217.98312378 -141.86883545]
[224.93904114 -155.15850830]
[231.89495850 -168.44818115]
[238.85087585 -181.73783875]
[238.39530945 -197.55249023]
[251.15237427 -205.24057007]
[252.35861206 -214.29188538]
[258.30825806 -218.67250061]
[265.45761108 -231.85911560]
[272.51043701 -245.09761047]
[272.05487061 -260.91226196]
[284.81195068 -268.60034180]
[291.76785278 -281.89001465]
[284.20425415 -301.51354980]
[293.45800781 -320.07086182]
[313.11697388 -325.67614746]
[319.28469849 -339.34942627]
[325.45242310 -353.02273560]
[331.62014771 -366.69604492]
[337.78784180 -380.36935425]
[343.95556641 -394.04266357]
[350.02322388 -407.76065063]
[355.99050903 -421.52261353]
[353.58102417 -437.74377441]
[366.59072876 -447.72775269]
[381.63635254 -441.20388794]
[383.24026489 -424.88336182]
[369.75247192 -415.55532837]
[363.78518677 -401.79336548]
[364.00817871 -394.40835571]
[357.62887573 -387.87493896]
[351.46115112 -374.20162964]
[345.29342651 -360.52832031]
[339.12573242 -346.85501099]
[332.95800781 -333.18173218]
[326.79028320 -319.50842285]
[332.62820435 -312.20751953]
[335.42483521 -303.22702026]
[334.75607300 -293.78692627]
[330.67172241 -285.18579102]
[323.69424438 -278.62213135]
[314.75234985 -275.02740479]
[305.05752563 -274.93408203]
[298.10162354 -261.64440918]
[299.05468750 -246.78033447]
[285.80010986 -238.14169312]
[285.48342896 -230.76011658]
[278.64422607 -224.70976257]
[271.49487305 -211.52314758]
[264.44204712 -198.28465271]
[265.39514160 -183.42057800]
[252.14053345 -174.78193665]
[245.18461609 -161.49226379]
[238.22871399 -148.20259094]
[231.27279663 -134.91293335]
[230.95611572 -127.53134155]
[224.11691284 -121.48099518]
[216.96755981 -108.29438019]
[209.81820679 -95.10777283]
[202.66885376 -81.92115784]
[195.71293640 -68.63149261]
[188.95195007 -55.24160767]
[182.19096375 -41.85172272]
[175.42997742 -28.46183777]
[168.66897583 -15.07195187]
[161.90798950 -1.68206692]
[155.14700317 11.70781803]
[148.38601685 25.09770393]
[141.62503052 38.48758698]
[142.23889160 43.22108459]
[139.88783264 48.39083099]
[134.46583557 52.16561890]
[127.31648254 65.35223389]
[120.16712952 78.53884125]
[113.01777649 91.72545624]
[123.00349426 80.53236389]
[137.09486389 75.39102936]
[151.94250488 77.52350616]
[164.01730347 86.42291260]
[170.44917297 99.97396851]
[169.70935059 114.95571136]
[161.97366333 127.80713654]
[149.08082581 135.47360229]
[134.09532166 136.13285828]
[120.57904816 129.62820435]
[111.74470520 117.50576019]
[111.96387482 132.50416565]
[112.18305206 147.50256348]
[112.40222168 162.50096130]
[112.62139893 177.49935913]
[125.13890076 186.47811890]
[129.91342163 200.93693542]
[125.31298828 215.26522827]
[113.30138397 224.03218079]
[113.52056122 239.03057861]
[113.73973083 254.02897644]
[113.95890045 269.02737427]
[114.17807770 284.02575684]
[114.39724731 299.02416992]
[114.61642456 314.02258301]
[114.83559418 329.02096558]
[125.89165497 339.99371338]
[125.90027618 355.20733643]
[115.37129974 365.67999268]
[115.59046936 380.67840576]
[115.80964661 395.67678833]
[116.02881622 410.67520142]
[116.24799347 425.67358398]
[116.46716309 440.67199707]
[116.68633270 455.67037964]
[116.90550995 470.66879272]
[117.12467957 485.66717529]
[117.34385681 500.66558838]
[117.56302643 515.66400146]
[130.32560730 524.48986816]
[135.43125916 539.14294434]
[130.91673279 553.98876953]
[118.51798248 563.31884766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[5 209]
[6 208]
[7 207]
[8 206]
[9 205]
[10 204]
[11 203]
[12 202]
[13 201]
[14 200]
[17 197]
[18 196]
[19 195]
[20 194]
[21 193]
[22 192]
[23 191]
[24 190]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[33 77]
[34 76]
[35 75]
[36 74]
[37 73]
[38 72]
[39 71]
[41 69]
[42 68]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[51 58]
[52 57]
[78 171]
[79 170]
[80 169]
[81 168]
[82 165]
[83 164]
[84 163]
[85 162]
[86 161]
[87 160]
[88 159]
[89 158]
[90 157]
[93 156]
[94 155]
[95 154]
[96 153]
[97 151]
[98 150]
[99 149]
[100 148]
[102 146]
[104 145]
[105 144]
[106 142]
[108 140]
[109 139]
[112 132]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
