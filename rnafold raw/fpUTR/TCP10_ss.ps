%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGACAGAAAGUCCGUUGGAACCGUCGGCUGCUCUCUGGUCUCUGGAGAUGAGGCGGGAGGACUUGGGGACAGCUGUGGGGACACGGCCCAGAUGCUCUGGUCCCAGCAGAAGUGACUGGCGGGGACCAGGAUGCUGGAGGGUCAGCUCGAGGCCGGGUAGCCCAAGGAGGGCACCCACCCAGAAGACCCGUGCCCGGGAGCUGGGGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[-8.09287262 422.39968872]
[-17.06758690 436.34384155]
[-32.42988586 442.13180542]
[-35.93694305 456.71603394]
[-39.44400024 471.30029297]
[-32.32655334 485.67813110]
[-39.26013565 500.14550781]
[-54.92589951 503.60430908]
[-67.30641174 493.40124512]
[-66.90440369 477.36322021]
[-54.02825928 467.79324341]
[-50.52119827 453.20898438]
[-47.01414108 438.62472534]
[-56.58543396 429.31829834]
[-60.33882141 416.39413452]
[-57.19132233 403.19793701]
[-47.86095810 393.20098877]
[-34.70636749 389.08712769]
[-30.98459053 374.55618286]
[-40.61197281 363.22256470]
[-41.73283768 348.21563721]
[-33.70834351 335.27496338]
[-19.43770790 329.47366333]
[-23.77519035 315.22460938]
[-12.85576057 303.77572632]
[-9.13398457 289.24478149]
[-5.41220856 274.71383667]
[-1.69043219 260.18289185]
[2.03134394 245.65194702]
[5.75311995 231.12100220]
[0.62870133 225.64466858]
[-9.62013626 214.69197083]
[-14.74455452 209.21563721]
[-29.49034500 211.96548462]
[-44.23613739 214.71533203]
[-58.98192596 217.46517944]
[-73.72771454 220.21502686]
[-85.87558746 230.35108948]
[-99.80559540 225.07810974]
[-114.55138397 227.82795715]
[-129.29718018 230.57780457]
[-144.04296875 233.32765198]
[-158.78875732 236.07749939]
[-166.31591797 249.78427124]
[-180.91125488 255.39768982]
[-195.68327332 250.26725769]
[-203.65708923 236.81539917]
[-201.06771851 221.39369202]
[-189.13777161 211.28378296]
[-173.50019836 211.25926208]
[-161.53860474 221.33171082]
[-146.79281616 218.58186340]
[-132.04702759 215.83201599]
[-117.30123138 213.08216858]
[-102.55544281 210.33232117]
[-91.46228790 200.39294434]
[-76.47756195 205.46922302]
[-61.73177338 202.71937561]
[-46.98598099 199.96954346]
[-32.24019241 197.21969604]
[-17.49440193 194.46984863]
[4.78501606 198.08589172]
[16.04987717 211.66340637]
[25.97121429 200.41320801]
[35.89255142 189.16300964]
[45.81388855 177.91279602]
[55.73522568 166.66259766]
[65.65656281 155.41239929]
[68.27159119 140.74914551]
[83.20241547 135.51644897]
[93.12374878 124.26625061]
[74.93231964 110.54045868]
[74.38532257 86.05328369]
[63.97606277 75.25295258]
[53.56680298 64.45261383]
[43.15754318 53.65227509]
[32.74827957 42.85193634]
[22.33901978 32.05160141]
[6.43852615 28.03833008]
[2.22479296 12.18978214]
[14.03254795 0.80958205]
[29.71498489 5.60470438]
[33.13935852 21.64233780]
[43.54861832 32.44267654]
[53.95787811 43.24301529]
[64.36714172 54.04335022]
[74.77639771 64.84368896]
[85.18566132 75.64402771]
[99.60051727 71.49529266]
[102.67589569 56.81394196]
[105.75127411 42.13259125]
[108.82666016 27.45124054]
[98.58295441 15.94590378]
[97.09554291 0.79199380]
[104.72625732 -12.17859650]
[118.36808777 -18.09792900]
[117.06467438 -27.13730812]
[121.59860992 -32.97239685]
[124.89018250 -47.60679245]
[128.18176270 -62.24118805]
[131.47334290 -76.87557983]
[134.76492310 -91.50997925]
[138.05648804 -106.14437103]
[141.34806824 -120.77876282]
[144.63964844 -135.41316223]
[140.11923218 -150.57482910]
[150.46080017 -161.29403687]
[153.75236511 -175.92843628]
[156.93594360 -190.58670044]
[160.01132202 -205.26805115]
[151.15591431 -218.35839844]
[154.23246765 -233.86035156]
[167.41572571 -242.57685852]
[182.88427734 -239.33657837]
[191.46090698 -226.06190491]
[188.05726624 -210.62847900]
[174.69267273 -202.19267273]
[171.61729431 -187.51132202]
[173.32232666 -180.32121277]
[168.38676453 -172.63685608]
[165.09518433 -158.00245667]
[169.85104370 -143.88752747]
[159.27404785 -132.12158203]
[155.98246765 -117.48719025]
[152.69088745 -102.85279083]
[149.39930725 -88.21839905]
[146.10774231 -73.58400726]
[142.81616211 -58.94960785]
[139.52458191 -44.31521225]
[136.23300171 -29.68081856]
[133.04943848 -15.02254772]
[143.16871643 -4.12584782]
[144.95230103 10.81680393]
[137.50805664 24.09975433]
[123.50801086 30.52662086]
[120.43262482 45.20796967]
[117.35724640 59.88932037]
[114.28186798 74.57067108]
[126.48483276 93.83205414]
[120.79564667 114.27146912]
[135.61611938 116.58520508]
[150.43659973 118.89894104]
[165.25708008 121.21266937]
[180.07756042 123.52640533]
[192.75791931 114.47950745]
[207.75503540 117.03708649]
[216.30172729 129.18162537]
[231.12220764 131.49536133]
[240.08229065 129.72726440]
[246.14355469 133.95405579]
[255.12873840 132.31829834]
[261.12701416 136.63404846]
[275.87280273 139.38388062]
[286.93145752 132.74740601]
[299.15588379 135.34031677]
[306.10668945 145.23927307]
[320.81033325 148.20631409]
[335.51394653 151.17333984]
[350.21759033 154.14036560]
[359.24710083 152.77032471]
[365.11547852 157.26110840]
[379.77374268 160.44467163]
[394.43200684 163.62823486]
[409.09027100 166.81179810]
[423.30712891 159.37803650]
[437.92434692 165.98986816]
[441.72888184 181.57528687]
[431.80218506 194.17848206]
[415.75918579 194.13136292]
[405.90670776 181.47007751]
[391.24844360 178.28651428]
[376.59017944 175.10295105]
[361.93191528 171.91937256]
[347.25054932 168.84399414]
[332.54693604 165.87696838]
[317.84329224 162.90994263]
[303.13967896 159.94291687]
[286.83123779 166.42559814]
[273.12295532 154.12968445]
[258.37716675 151.37983704]
[243.61148071 148.73880005]
[228.80847168 146.31584167]
[213.98799133 144.00210571]
[202.14627075 152.96365356]
[187.08323669 150.82832336]
[177.76382446 138.34687805]
[162.94334412 136.03315735]
[148.12286377 133.71942139]
[133.30238342 131.40568542]
[118.48191071 129.09194946]
[104.37395477 134.18759155]
[94.45261383 145.43778992]
[91.12795258 160.90573120]
[76.90676880 165.33372498]
[66.98542786 176.58393860]
[57.06409073 187.83413696]
[47.14275360 199.08433533]
[37.22141647 210.33454895]
[27.30007935 221.58474731]
[20.28406525 234.84278870]
[16.56229019 249.37373352]
[12.84051323 263.90466309]
[9.11873722 278.43560791]
[5.39696121 292.96655273]
[1.67518508 307.49749756]
[5.74646091 322.78591919]
[-4.90676212 333.19543457]
[4.81799364 345.14260864]
[5.63364124 360.34750366]
[-2.56333518 372.96786499]
[-16.45364380 378.27798462]
[-20.17542076 392.80892944]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 13]
[4 12]
[5 11]
[18 212]
[19 211]
[23 207]
[25 205]
[26 204]
[27 203]
[28 202]
[29 201]
[30 200]
[33 61]
[34 60]
[35 59]
[36 58]
[37 57]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[63 199]
[64 198]
[65 197]
[66 196]
[67 195]
[68 194]
[70 192]
[71 191]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
[89 138]
[90 137]
[91 136]
[92 135]
[96 131]
[98 130]
[99 129]
[100 128]
[101 127]
[102 126]
[103 125]
[104 124]
[105 123]
[107 121]
[108 120]
[109 118]
[110 117]
[140 190]
[141 189]
[142 188]
[143 187]
[144 186]
[147 183]
[148 182]
[150 181]
[152 180]
[153 179]
[156 177]
[157 176]
[158 175]
[159 174]
[161 173]
[162 172]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
