%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCUUCAAGUCGGCCCAAACACGGUUUCUGCCUCAAGGAUUAUUUAUAUAACCAUUGCUUAUUGGCUGCUGGCAAACACUCGCUCUUCUCGUUGGCUGAAACUGUCGGGAGAAGUUCUGCGAAGGCUGCUCCUUGCGGCGUUGGGACUGAGGGUCACAGGCACCUGUAUUUCCGUUUCCGGUUCGCCUCCGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[197.91873169 158.91862488]
[184.58619690 152.04522705]
[171.25367737 145.17182922]
[157.92114258 138.29843140]
[144.58860779 131.42503357]
[131.25607300 124.55163574]
[117.92354584 117.67823792]
[100.00663757 127.55046082]
[78.70391083 121.02487946]
[67.70109558 99.57823181]
[53.12392044 103.11461639]
[38.54674530 106.65100098]
[23.96957207 110.18738556]
[9.39239979 113.72377014]
[-5.18477392 117.26015472]
[-19.70400429 121.02737427]
[-34.16163635 125.02448273]
[-48.61927032 129.02159119]
[-63.07690048 133.01869202]
[-66.03913116 148.46014404]
[-75.50802612 160.91781616]
[-89.45856476 167.83795166]
[-104.95596313 167.83932495]
[-118.77297974 160.98847961]
[-130.56378174 170.26086426]
[-142.35456848 179.53324890]
[-147.94387817 194.95051575]
[-164.13539124 197.55186462]
[-174.27265930 184.66125488]
[-167.92735291 169.53945923]
[-151.62695312 167.74246216]
[-139.83616638 158.47007751]
[-128.04536438 149.19769287]
[-128.87136841 147.30465698]
[-129.57989502 145.36460876]
[-144.51197815 146.79045105]
[-159.44406128 148.21629333]
[-174.36434937 149.76054382]
[-189.27192688 151.42311096]
[-197.46412659 155.48826599]
[-204.42895508 152.99186707]
[-219.36103821 154.41770935]
[-234.29312134 155.84355164]
[-249.22520447 157.26939392]
[-262.26242065 167.21740723]
[-277.28997803 160.65200806]
[-278.84881592 144.32711792]
[-265.33532715 135.03639221]
[-250.65103149 142.33731079]
[-235.71896362 140.91146851]
[-220.78688049 139.48564148]
[-205.85479736 138.05979919]
[-190.93450928 136.51553345]
[-176.02693176 134.85296631]
[-169.72100830 130.98304749]
[-160.86990356 133.28421021]
[-145.93782043 131.85836792]
[-131.00573730 130.43252563]
[-124.86925507 114.70735168]
[-111.82952881 103.85890961]
[-95.08867645 100.65476227]
[-78.80809021 105.97245789]
[-67.07401276 118.56106567]
[-52.61637497 114.56395721]
[-38.15874481 110.56684875]
[-23.70111275 106.56974030]
[-20.60428619 102.92124939]
[-15.17858696 101.18582153]
[-8.72115803 102.68298340]
[5.85601521 99.14659882]
[20.43318939 95.61021423]
[35.01036072 92.07382965]
[49.58753586 88.53744507]
[64.16471100 85.00106049]
[49.28300858 86.88121796]
[35.91622543 80.07467651]
[28.68354607 66.93357849]
[30.08439064 51.99913406]
[39.63466263 40.43227386]
[54.03405380 36.23018265]
[68.30652618 40.84499359]
[77.51991272 52.68194580]
[78.49024200 67.65087128]
[68.13776398 56.01197052]
[69.07501984 40.82723236]
[80.23473358 31.02945518]
[80.94846344 16.04644394]
[81.66218567 1.06343460]
[82.37591553 -13.91957569]
[83.08964539 -28.90258598]
[83.80337524 -43.88559723]
[81.08366394 -52.61719513]
[84.64915466 -59.10010147]
[85.60051727 -74.06990051]
[86.55187225 -89.03970337]
[87.50323486 -104.00950623]
[88.45458984 -118.97930145]
[77.01303864 -129.63880920]
[75.15141296 -145.16517639]
[83.74871826 -158.22735596]
[98.74556732 -162.65776062]
[113.06090546 -156.36450195]
[119.93547058 -142.31906128]
[116.12330627 -127.15327454]
[103.42439270 -118.02794647]
[102.47303009 -103.05814362]
[101.52167511 -88.08834076]
[100.57031250 -73.11854553]
[99.61895752 -58.14874268]
[98.78638458 -43.17186737]
[98.07265472 -28.18885612]
[97.35892487 -13.20584679]
[96.64520264 1.77716339]
[95.93147278 16.76017380]
[95.21774292 31.74318314]
[105.39558411 42.55739594]
[104.88520050 57.76246643]
[93.47325134 68.36459351]
[108.53634644 70.69814301]
[120.01426697 79.37679291]
[125.64314270 91.68825531]
[124.79694366 104.34570312]
[138.12947083 111.21910095]
[151.46200562 118.09249878]
[164.79454041 124.96589661]
[178.12707520 131.83929443]
[191.45959473 138.71269226]
[204.79212952 145.58609009]
[218.23204041 152.24708557]
[231.77593994 158.69401550]
[245.31983948 165.14094543]
[258.86373901 171.58786011]
[272.40762329 178.03479004]
[284.80850220 174.46246338]
[295.95996094 180.11924744]
[300.12545776 191.48310852]
[315.92617798 190.67872620]
[323.89385986 203.26306152]
[337.33377075 209.92405701]
[350.77368164 216.58505249]
[364.21359253 223.24604797]
[382.55331421 221.64785767]
[391.70462036 236.61653137]
[407.49063110 235.56156921]
[415.65695190 248.01789856]
[429.20086670 254.46482849]
[442.74475098 260.91174316]
[449.37191772 260.76885986]
[454.32717896 263.57870483]
[456.61114502 267.78411865]
[469.94366455 274.65750122]
[485.75518799 274.10391235]
[493.52218628 286.81307983]
[506.85473633 293.68649292]
[524.65673828 287.22991943]
[541.24572754 295.68103027]
[546.31152344 313.26431274]
[559.85540771 319.71121216]
[573.39935303 326.15814209]
[586.94323730 332.60507202]
[603.23901367 330.76675415]
[612.75994873 344.11907959]
[605.71166992 358.92630005]
[589.34484863 359.95602417]
[580.49633789 346.14895630]
[566.95239258 339.70205688]
[553.40850830 333.25512695]
[539.86462402 326.80819702]
[530.18444824 332.86993408]
[518.66064453 333.50778198]
[508.15444946 328.44735718]
[501.33053589 318.84353638]
[499.98132324 307.01901245]
[486.64880371 300.14562988]
[471.79092407 301.19082642]
[463.07028198 287.99005127]
[449.73773193 281.11663818]
[436.29782104 274.45565796]
[422.75393677 268.00872803]
[409.21002197 261.56179810]
[394.39279175 263.07788086]
[385.25769043 250.16043091]
[373.75018311 253.91082764]
[362.41024780 248.64196777]
[357.55258179 236.68595886]
[344.11267090 230.02496338]
[330.67279053 223.36396790]
[317.23287964 216.70295715]
[302.39343262 217.98377991]
[293.46444702 204.92300415]
[276.04132080 206.98262024]
[265.96069336 191.57868958]
[252.41680908 185.13175964]
[238.87290955 178.68482971]
[225.32901001 172.23791504]
[211.78511047 165.79098511]
[207.05543518 166.52033997]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 128]
[2 127]
[3 126]
[4 125]
[5 124]
[6 123]
[7 122]
[10 74]
[11 73]
[12 72]
[13 71]
[14 70]
[15 69]
[16 66]
[17 65]
[18 64]
[19 63]
[24 33]
[25 32]
[26 31]
[35 58]
[36 57]
[37 56]
[38 54]
[39 53]
[41 52]
[42 51]
[43 50]
[44 49]
[83 118]
[86 115]
[87 114]
[88 113]
[89 112]
[90 111]
[91 110]
[93 109]
[94 108]
[95 107]
[96 106]
[97 105]
[129 196]
[130 195]
[131 194]
[132 193]
[133 192]
[136 190]
[138 188]
[139 187]
[140 186]
[141 185]
[143 182]
[145 180]
[146 179]
[147 178]
[150 177]
[151 176]
[153 174]
[154 173]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
