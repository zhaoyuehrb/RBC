%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAGCGUCGCACCUCUGCCCAAUGAGGUGCCCCUGACGUGCCUGCUGCGGCUGCCCUGCUCCCCCCAGCCUCCCUGCAUCCCGGGAUGGGGGAGGGCGCCAGGCGCAGCUCCCGGACCCUCAGGGGUCUCCCCGCCCUACCCCACCAGCCUGGGUUCGGUACCUCGGGGCUCAG\
) } def
/len { sequence length } bind def

/coor [
[88.33594513 140.01895142]
[81.84684753 136.90954590]
[76.07372284 132.77619934]
[65.14283752 143.04829407]
[54.21195221 153.32037354]
[50.08398819 161.50469971]
[42.99472046 163.67564392]
[31.88324738 173.75210571]
[20.77177429 183.82856750]
[9.66030121 193.90504456]
[-1.08654964 204.36950684]
[-11.45523834 215.20880127]
[-21.82392693 226.04809570]
[-32.19261551 236.88739014]
[-42.56130219 247.72668457]
[-52.92999268 258.56597900]
[-63.29867935 269.40527344]
[-60.39946747 284.64910889]
[-67.04448700 298.67135620]
[-80.67860413 306.08016968]
[-96.05920410 304.02673340]
[-107.27214813 293.30062866]
[-110.00582123 278.02624512]
[-103.20907593 264.07690430]
[-89.49539948 256.81640625]
[-74.13797760 259.03659058]
[-63.76928711 248.19729614]
[-53.40059662 237.35800171]
[-43.03190994 226.51870728]
[-32.66321945 215.67941284]
[-22.29453278 204.84011841]
[-11.92584419 194.00082397]
[-11.87020206 191.16844177]
[-10.67149162 188.18820190]
[-8.26792622 185.50222778]
[-4.76113749 183.56661987]
[-0.41616476 182.79356384]
[10.69530773 172.71710205]
[21.80678177 162.64064026]
[32.91825485 152.56416321]
[43.93986511 142.38949585]
[54.87075043 132.11740112]
[65.80163574 121.84531403]
[59.44567490 101.44667053]
[64.33198547 80.64698792]
[79.10601044 65.21224976]
[73.89240265 51.14746475]
[68.67880249 37.08267212]
[63.46519470 23.01788330]
[58.25158691 8.95309353]
[53.03798294 -5.11169672]
[40.98650742 -15.36218357]
[43.81774139 -29.98522568]
[38.60413742 -44.05001450]
[33.39052963 -58.11480713]
[23.22435570 -62.09162140]
[17.06625175 -70.83745575]
[16.76222420 -81.30943298]
[22.17084503 -90.02384949]
[17.45969391 -104.26480865]
[12.74854279 -118.50577545]
[8.03739262 -132.74673462]
[3.32624173 -146.98770142]
[-1.51110399 -161.18629456]
[-6.47426367 -175.34140015]
[-11.43742371 -189.49650574]
[-16.40058327 -203.65161133]
[-21.36374283 -217.80673218]
[-26.32690239 -231.96183777]
[-30.33627129 -235.40109253]
[-32.39806747 -239.61778259]
[-32.54446793 -243.73149109]
[-31.15557480 -247.00444031]
[-35.35833740 -261.40362549]
[-39.56109619 -275.80282593]
[-43.76385498 -290.20202637]
[-58.41500092 -295.31314087]
[-67.23610687 -308.07904053]
[-66.83528137 -323.59091187]
[-57.36664963 -335.88418579]
[-42.47108841 -340.23184204]
[-27.87625122 -334.96206665]
[-19.19414902 -322.10125732]
[-19.76322556 -306.59463501]
[-29.36466026 -294.40478516]
[-25.16190147 -280.00558472]
[-20.95914078 -265.60638428]
[-16.75638008 -251.20719910]
[-12.17179680 -236.92498779]
[-7.20863676 -222.76988220]
[-2.24547672 -208.61477661]
[2.71768308 -194.45967102]
[7.68084288 -180.30456543]
[12.64400291 -166.14945984]
[17.84063721 -160.86119080]
[17.56720543 -151.69885254]
[22.27835655 -137.45788574]
[26.98950768 -123.21692657]
[31.70065880 -108.97595978]
[36.41180801 -94.73500061]
[51.75807953 -83.00134277]
[47.45531845 -63.32841110]
[52.66892624 -49.26362228]
[57.88253021 -35.19882965]
[69.56109619 -25.95435333]
[67.10277557 -10.32530212]
[72.31637573 3.73948789]
[77.52998352 17.80427742]
[82.74359131 31.86906815]
[87.95719147 45.93385696]
[93.17079926 59.99864960]
[104.90774536 58.71696854]
[116.80143738 60.88875961]
[127.83428955 66.49168396]
[137.01687622 75.20366669]
[143.47601318 86.41803741]
[157.67460632 81.58068848]
[171.87319946 76.74333954]
[186.07179260 71.90599823]
[200.27038574 67.06864929]
[214.46897888 62.23130417]
[224.85491943 49.54019547]
[240.99281311 52.45579529]
[246.28135681 67.97878265]
[235.28018188 80.14044189]
[219.30633545 76.42990112]
[205.10772705 81.26724243]
[190.90913391 86.10459137]
[176.71054077 90.94194031]
[162.51194763 95.77928162]
[148.31335449 100.61663055]
[145.79608154 115.40390015]
[157.59434509 124.66676331]
[169.39262390 133.92964172]
[181.19090271 143.19250488]
[192.98916626 152.45536804]
[207.84255981 148.37091064]
[222.08644104 153.75286865]
[230.33242798 166.34126282]
[229.59353638 181.19360352]
[241.39181519 190.45646667]
[253.19007874 199.71934509]
[264.98837280 208.98220825]
[280.47277832 207.28805542]
[292.30596924 216.85000610]
[293.82565308 231.62248230]
[305.62393188 240.88534546]
[317.42221069 250.14822388]
[333.08126831 248.01068115]
[345.61465454 257.63824463]
[347.58648682 273.31906128]
[337.82696533 285.74993896]
[322.12619019 287.55587769]
[309.79919434 277.66546631]
[308.15933228 261.94650269]
[296.36105347 252.68362427]
[284.56277466 243.42074585]
[269.85168457 245.45039368]
[257.75460815 236.22459412]
[255.72549438 220.78048706]
[243.92721558 211.51760864]
[232.12893677 202.25474548]
[220.33067322 192.99188232]
[206.07801819 197.23451233]
[191.89228821 192.21166992]
[183.28364563 179.65203857]
[183.72630310 164.25364685]
[171.92802429 154.99078369]
[160.12974548 145.72790527]
[148.33148193 136.46504211]
[136.53320312 127.20217133]
[130.91017151 132.69883728]
[124.49768829 137.08294678]
[117.50876617 140.24876404]
[110.16896820 142.13026428]
[102.70913696 142.70228577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 43]
[4 42]
[5 41]
[7 40]
[8 39]
[9 38]
[10 37]
[11 32]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[46 111]
[47 110]
[48 109]
[49 108]
[50 107]
[51 106]
[53 104]
[54 103]
[55 102]
[59 100]
[60 99]
[61 98]
[62 97]
[63 96]
[64 94]
[65 93]
[66 92]
[67 91]
[68 90]
[69 89]
[73 88]
[74 87]
[75 86]
[76 85]
[116 131]
[117 130]
[118 129]
[119 128]
[120 127]
[121 126]
[132 171]
[133 170]
[134 169]
[135 168]
[136 167]
[140 163]
[141 162]
[142 161]
[143 160]
[146 157]
[147 156]
[148 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
