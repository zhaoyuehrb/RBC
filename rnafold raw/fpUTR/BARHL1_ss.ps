%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUGGAUCUAAUGCGCAGAGGAGGUUGGCCCAGAGCUCCCGGGCUCCCCCAAGGCUGAACUCCGUCCAAGGUGCCCGCAGGCUCCCUGCCCGCCUUCCCCAUGCCAGCCCGCAGCUAGGGGCAGGGGCAGCGGCGGCUGGGGUUGGGGGUGGGUGGGGAGCUUUUGGGGAGGACAGGUCGCAGCUUGGCU\
) } def
/len { sequence length } bind def

/coor [
[124.08528137 139.19140625]
[118.37324524 153.06124878]
[112.66120148 166.93109131]
[106.94915771 180.80093384]
[101.23711395 194.67079163]
[95.52507019 208.54063416]
[105.39658356 220.23728943]
[108.69034576 235.18418884]
[104.64947510 249.94662476]
[94.20252228 261.13232422]
[79.75013733 266.17089844]
[64.61335754 263.90447998]
[52.27051544 254.85391235]
[45.55790329 241.09893799]
[46.01802444 225.80033875]
[53.54515457 212.47363281]
[66.40960693 204.18121338]
[81.65522766 202.82858276]
[87.36727142 188.95874023]
[93.07931519 175.08889771]
[98.79135895 161.21905518]
[104.50339508 147.34921265]
[110.21543884 133.47937012]
[105.02113342 128.06925964]
[89.43822479 111.83895874]
[75.34748077 116.98200226]
[69.20289612 128.33378601]
[57.34895325 132.32258606]
[46.32266617 127.32482910]
[32.15007401 132.23783875]
[17.97748566 137.15084839]
[3.80489421 142.06385803]
[-10.36769581 146.97686768]
[-20.87241364 158.80740356]
[-35.43186951 155.66551208]
[-43.70014954 169.41378784]
[-59.62245941 171.37837219]
[-70.98456573 160.05220032]
[-69.07043457 144.12374878]
[-55.34841919 135.81195068]
[-40.34487915 141.49291992]
[-30.85388184 130.01379395]
[-15.28070736 132.80427551]
[-1.10811651 127.89126587]
[13.06447411 122.97825623]
[27.23706436 118.06524658]
[41.40965652 113.15223694]
[52.15399170 99.28501892]
[70.20443726 102.89125824]
[84.29518127 97.74821472]
[96.92596436 89.65727997]
[107.48931885 79.00760651]
[118.05267334 68.35792542]
[128.61602783 57.70825195]
[139.17936707 47.05857468]
[143.00889587 38.74855423]
[150.00239563 36.32328033]
[160.73770142 25.84695244]
[171.47299194 15.37062645]
[168.47338867 1.90846336]
[172.48928833 -11.17299080]
[182.36827087 -20.48456955]
[195.45370483 -23.66933632]
[208.29858398 -19.99852562]
[219.20298767 -30.29872704]
[230.02319336 -40.68733597]
[240.75848389 -51.16366196]
[251.49378967 -61.63998795]
[262.22909546 -72.11631012]
[263.25988770 -76.36971283]
[265.38369751 -79.72906494]
[268.18228149 -81.95955658]
[271.20419312 -82.98736572]
[274.02038574 -82.89655304]
[279.47100830 -97.74919891]
[294.17095947 -100.14936066]
[305.56515503 -109.90499878]
[316.95932007 -119.66063690]
[328.35351562 -129.41627502]
[333.80413818 -144.26892090]
[348.50408936 -146.66908264]
[359.89828491 -156.42472839]
[371.29248047 -166.18035889]
[382.68667603 -175.93600464]
[394.08084106 -185.69163513]
[405.47503662 -195.44728088]
[416.86923218 -205.20291138]
[428.26342773 -214.95855713]
[439.65759277 -224.71418762]
[451.05178833 -234.46983337]
[462.44598389 -244.22546387]
[473.84017944 -253.98110962]
[485.23434448 -263.73675537]
[496.62854004 -273.49237061]
[508.02273560 -283.24801636]
[519.41693115 -293.00366211]
[530.81109619 -302.75930786]
[542.20532227 -312.51492310]
[553.35791016 -322.54583740]
[564.26232910 -332.84603882]
[575.16668701 -343.14624023]
[586.07110596 -353.44644165]
[596.97552490 -363.74664307]
[601.07348633 -371.92761230]
[608.14221191 -374.12396240]
[619.21282959 -384.24533081]
[630.28344727 -394.36666870]
[634.51403809 -402.47982788]
[641.61761475 -404.56085205]
[652.85150146 -414.50067139]
[664.08538818 -424.44046021]
[668.44744873 -432.48370361]
[675.58392334 -434.44882202]
[686.97814941 -444.20446777]
[692.42877197 -459.05709839]
[707.12872314 -461.45727539]
[718.52288818 -471.21289062]
[729.91711426 -480.96853638]
[727.71014404 -496.23724365]
[734.12921143 -510.26574707]
[747.12597656 -518.57763672]
[762.55328369 -518.52056885]
[775.48822021 -510.11282349]
[781.80340576 -496.03723145]
[779.48358154 -480.78527832]
[769.26910400 -469.22381592]
[754.41931152 -465.04202271]
[739.67272949 -469.57434082]
[728.27856445 -459.81872559]
[716.88433838 -450.06307983]
[712.24871826 -435.90820312]
[696.73376465 -432.81027222]
[685.33959961 -423.05462646]
[674.02514648 -413.20657349]
[662.79125977 -403.26678467]
[651.55737305 -393.32696533]
[640.40478516 -383.29605103]
[629.33416748 -373.17471313]
[618.26354980 -363.05337524]
[607.27569580 -352.84225464]
[596.37127686 -342.54205322]
[585.46691895 -332.24185181]
[574.56250000 -321.94165039]
[563.65814209 -311.64144897]
[563.19732666 -308.13131714]
[561.00421143 -304.67233276]
[557.12261963 -302.08053589]
[551.96093750 -301.12075806]
[540.56677246 -291.36511230]
[529.17254639 -281.60946655]
[517.77838135 -271.85382080]
[506.38418579 -262.09820557]
[494.98999023 -252.34255981]
[483.59579468 -242.58691406]
[472.20162964 -232.83128357]
[460.80743408 -223.07563782]
[449.41323853 -213.32000732]
[438.01904297 -203.56436157]
[426.62487793 -193.80873108]
[415.23068237 -184.05308533]
[403.83648682 -174.29745483]
[392.44229126 -164.54180908]
[381.04812622 -154.78617859]
[369.65393066 -145.03053284]
[358.25973511 -135.27490234]
[353.62408447 -121.12003326]
[338.10916138 -118.02208710]
[326.71496582 -108.26644897]
[315.32077026 -98.51081085]
[303.92660522 -88.75517273]
[299.29095459 -74.60031128]
[283.77600098 -71.50236511]
[272.70541382 -61.38101578]
[261.97012329 -50.90468979]
[251.23481750 -40.42836380]
[240.49951172 -29.95203781]
[237.90422058 -23.01983643]
[229.50318909 -19.39433098]
[218.59878540 -9.09412956]
[221.22642517 7.10294247]
[213.61059570 21.82460785]
[198.57391357 29.18397331]
[181.94932556 26.10592270]
[171.21401978 36.58224869]
[160.47872925 47.05857468]
[149.82905579 57.62192535]
[139.26570129 68.27160645]
[128.70234680 78.92127991]
[118.13899231 89.57095337]
[107.57564545 100.22063446]
[116.53032684 104.69566345]
[123.18950653 113.41416168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[5 19]
[6 18]
[25 50]
[26 49]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[35 41]
[51 190]
[52 189]
[53 188]
[54 187]
[55 186]
[57 185]
[58 184]
[59 183]
[64 179]
[65 178]
[66 176]
[67 175]
[68 174]
[69 173]
[74 172]
[76 170]
[77 169]
[78 168]
[79 167]
[81 165]
[82 164]
[83 163]
[84 162]
[85 161]
[86 160]
[87 159]
[88 158]
[89 157]
[90 156]
[91 155]
[92 154]
[93 153]
[94 152]
[95 151]
[96 150]
[97 149]
[98 148]
[99 144]
[100 143]
[101 142]
[102 141]
[103 140]
[105 139]
[106 138]
[107 137]
[109 136]
[110 135]
[111 134]
[113 133]
[114 132]
[116 130]
[117 129]
[118 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
