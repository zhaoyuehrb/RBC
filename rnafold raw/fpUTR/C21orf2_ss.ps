%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGCAGGAGCAGAGCCAACGUGUCAGCGGCGCCCAAGCGGCCCCAGCGGGCUCGCGUCGCCCCGCUCUCCUCACCGAGCCGCCAAUCGGCUCAGGAUCCGCCCCUGACGACGCGGGCCCCGCCCCUGGAGACACGCGCCGCGCAGUCGUCACCCGCCCGGGAUCAGGAGGCCGGGGGCGCCCGCCGGUCGGGCCUGGGCGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-137.32826233 654.92260742]
[-140.49963379 656.46697998]
[-146.83323669 670.06420898]
[-153.16683960 683.66149902]
[-153.95388794 692.76354980]
[-159.69917297 697.41442871]
[-166.23643494 710.91497803]
[-165.28695679 726.70764160]
[-177.79756165 734.79058838]
[-175.42692566 754.80810547]
[-191.88017273 764.96405029]
[-198.00866699 778.65496826]
[-198.96134949 795.58215332]
[-215.49070740 799.35260010]
[-223.68960571 784.51300049]
[-211.69960022 772.52648926]
[-205.57109070 758.83557129]
[-210.05842590 749.65319824]
[-208.72187805 739.29937744]
[-201.76339722 731.22460938]
[-191.29809570 728.25335693]
[-192.71516418 713.42626953]
[-179.73696899 704.37768555]
[-173.19970703 690.87719727]
[-166.76409912 677.32788086]
[-160.43049622 663.73065186]
[-154.09690857 650.13336182]
[-148.07147217 636.39678955]
[-142.35726929 622.52783203]
[-136.64306641 608.65887451]
[-130.92886353 594.78991699]
[-125.21466064 580.92095947]
[-119.60485077 567.00946045]
[-114.09976196 553.05615234]
[-108.59466553 539.10290527]
[-103.08957672 525.14959717]
[-97.58448029 511.19635010]
[-98.64684296 507.83270264]
[-98.13181305 503.78720093]
[-95.73660278 499.80728149]
[-91.50385284 496.74731445]
[-85.37535095 483.05639648]
[-79.24684906 469.36547852]
[-73.11834717 455.67453003]
[-66.98984528 441.98361206]
[-71.00788116 430.57284546]
[-66.01291656 419.11599731]
[-54.18302917 413.97375488]
[-47.84943390 400.37649536]
[-49.48921204 385.57241821]
[-36.64849091 376.32977295]
[-30.31489372 362.73251343]
[-23.98129654 349.13525391]
[-29.30680275 335.27255249]
[-23.07733154 321.39276123]
[-8.50074387 315.90087891]
[-2.16714692 302.30361938]
[4.16645002 288.70635986]
[10.50004673 275.10910034]
[16.83364487 261.51184082]
[16.80835342 254.12005615]
[23.36599159 247.75889587]
[29.90325356 234.25836182]
[36.44051361 220.75784302]
[35.02344131 205.93080139]
[48.00163651 196.88221741]
[54.53889847 183.38168335]
[54.62471771 175.99035645]
[61.27722931 169.72848511]
[68.01667786 156.32774353]
[74.75612640 142.92700195]
[81.49557495 129.52626038]
[88.23502350 116.12552643]
[74.30786896 121.69637299]
[61.70042038 113.56912994]
[61.02419281 98.58438110]
[72.84835815 89.35458374]
[87.22074127 93.64839935]
[79.30171967 80.90912628]
[71.38269806 68.16985321]
[63.46367264 55.43058014]
[55.54464722 42.69130707]
[47.62562561 29.95203590]
[32.39183807 24.92100525]
[26.96250916 9.82458401]
[35.50255966 -3.75654769]
[51.46078873 -5.40410614]
[62.59541321 6.14577341]
[60.36489868 22.03301239]
[68.28392029 34.77228546]
[76.20294189 47.51155853]
[84.12196350 60.25083160]
[92.04099274 72.99010468]
[99.96001434 85.72937775]
[107.39888000 86.68503571]
[122.27661133 88.59634399]
[129.71546936 89.55200195]
[140.59738159 79.22804260]
[151.47929382 68.90409088]
[162.36120605 58.58013153]
[173.24311829 48.25617599]
[183.88949585 37.68951035]
[194.29495239 26.88549995]
[191.72920227 11.69592571]
[198.52015686 -1.93258655]
[211.87594604 -8.86706638]
[226.57804871 -6.63414860]
[236.98350525 -17.43815804]
[247.38894653 -28.24216843]
[257.79440308 -39.04617691]
[268.19985962 -49.85018921]
[278.60528564 -60.65419769]
[289.01074219 -71.45820618]
[299.33471680 -82.34011841]
[309.57656860 -93.29930878]
[319.81845093 -104.25849915]
[329.97769165 -115.29435730]
[340.05368042 -126.40626526]
[350.12966919 -137.51815796]
[351.23162842 -142.62356567]
[353.91418457 -146.41575623]
[357.41207886 -148.51246643]
[360.91915894 -148.89074707]
[371.48580933 -159.53712463]
[370.81640625 -170.39546204]
[376.12487793 -179.63891602]
[385.44873047 -184.33514404]
[395.59979248 -183.14871216]
[406.48171997 -193.47267151]
[410.61996460 -209.34109497]
[426.50119019 -213.42999268]
[437.78811646 -201.53305054]
[432.86975098 -185.88883972]
[416.80566406 -182.59075928]
[405.92376709 -172.26679993]
[401.80230713 -153.37590027]
[382.13220215 -148.97045898]
[371.56552124 -138.32408142]
[361.24157715 -127.44216919]
[351.16558838 -116.33026886]
[341.08959961 -105.21836853]
[338.92486572 -98.15061188]
[330.77764893 -94.01662445]
[320.53576660 -83.05742645]
[310.29388428 -72.09823608]
[308.02319336 -65.06381989]
[299.81475830 -61.05275726]
[289.40930176 -50.24874878]
[279.00384521 -39.44473648]
[268.59841919 -28.64072800]
[258.19296265 -17.83671951]
[247.78750610 -7.03270912]
[237.38206482 3.77130079]
[240.16575623 18.37914085]
[233.73796082 31.98602486]
[220.37420654 39.28420639]
[205.09895325 37.29094696]
[194.69351196 48.09495926]
[194.39439392 51.60967255]
[192.37709045 55.15393066]
[188.64633179 57.92131424]
[183.56706238 59.13808441]
[172.68516541 69.46204376]
[161.80325317 79.78599548]
[150.92134094 90.10995483]
[140.03942871 100.43390656]
[101.63576508 122.86497498]
[94.89631653 136.26571655]
[88.15686798 149.66645813]
[81.41741943 163.06719971]
[74.67797089 176.46794128]
[68.03942871 189.91894531]
[61.50216293 203.41947937]
[62.45164871 219.21215820]
[49.94104004 227.29510498]
[43.40377808 240.79562378]
[36.86651611 254.29615784]
[30.43090630 267.84542847]
[24.09730911 281.44268799]
[17.76371193 295.03994751]
[11.43011570 308.63720703]
[5.09651852 322.23449707]
[10.27140999 336.92660522]
[3.65454388 350.62594604]
[-10.38403416 355.46887207]
[-16.71763039 369.06613159]
[-23.05122757 382.66339111]
[-21.86446953 398.44000244]
[-34.25217056 406.71008301]
[-40.58576584 420.30734253]
[-38.54736710 438.60763550]
[-53.29892349 448.11212158]
[-59.42742157 461.80303955]
[-65.55592346 475.49395752]
[-71.68442535 489.18490601]
[-77.81292725 502.87582397]
[-83.63120270 516.70141602]
[-89.13629913 530.65472412]
[-94.64138794 544.60797119]
[-100.14648438 558.56127930]
[-105.65157318 572.51452637]
[-105.89026642 581.64746094]
[-111.34570312 586.63519287]
[-117.05990601 600.50408936]
[-122.77410889 614.37304688]
[-128.48831177 628.24200439]
[-134.20251465 642.11096191]
[-133.50914001 647.28771973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 27]
[3 26]
[4 25]
[6 24]
[7 23]
[9 21]
[11 17]
[12 16]
[28 207]
[29 206]
[30 205]
[31 204]
[32 203]
[33 201]
[34 200]
[35 199]
[36 198]
[37 197]
[41 196]
[42 195]
[43 194]
[44 193]
[45 192]
[48 190]
[49 189]
[51 187]
[52 186]
[53 185]
[56 182]
[57 181]
[58 180]
[59 179]
[60 178]
[62 177]
[63 176]
[64 175]
[66 173]
[67 172]
[69 171]
[70 170]
[71 169]
[72 168]
[73 167]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[83 89]
[97 166]
[98 165]
[99 164]
[100 163]
[101 162]
[102 158]
[103 157]
[107 153]
[108 152]
[109 151]
[110 150]
[111 149]
[112 148]
[113 147]
[114 145]
[115 144]
[116 143]
[117 141]
[118 140]
[119 139]
[123 138]
[124 137]
[128 135]
[129 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
