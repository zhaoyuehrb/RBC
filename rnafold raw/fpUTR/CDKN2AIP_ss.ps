%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCGAGGUUAUAAAAGGGAAGAAGCCGGCGGUGGGCGGAAGUGGGCGGUUCGGCGGCUCUGGGCGCUGUUGUUUGGUCUUUAGGCCUGCGGAGGGGCGUUAUCUGGAGGGCCGCGGGUGCAGGCCGCAGUGACAGGGCCGCUCGCCCCGCUAGUCCUGCCUGUCUCCCGGUGCAGCUGUGUUCGCGGCCUGCAGGCCCAAC\
) } def
/len { sequence length } bind def

/coor [
[125.53168488 646.53094482]
[124.62601471 631.55828857]
[123.72033691 616.58569336]
[122.25007629 601.65789795]
[120.21733856 586.79626465]
[118.18459320 571.93463135]
[108.79392242 560.37329102]
[114.58969879 545.65191650]
[112.55696106 530.79028320]
[110.52421570 515.92864990]
[108.49147797 501.06701660]
[106.45874023 486.20538330]
[98.05597687 484.43988037]
[90.35307312 480.60375977]
[83.85231018 474.93643188]
[78.98028564 467.79702759]
[76.05992889 459.64175415]
[75.28907776 450.99462891]
[76.72713470 442.41381836]
[80.29059601 434.45571899]
[85.75784302 427.63873291]
[92.78289795 422.40960693]
[100.91731262 419.11413574]
[100.46427155 404.12097168]
[88.03473663 398.45898438]
[79.21536255 387.94320679]
[75.77124786 374.58947754]
[78.42982483 360.99002075]
[86.72814941 349.81015015]
[99.09231567 343.26599121]
[98.86576080 328.26770020]
[98.63921356 313.26940918]
[98.41266632 298.27111816]
[98.18611908 283.27282715]
[90.25747681 270.66387939]
[97.78546906 256.74841309]
[97.55892181 241.75012207]
[97.21911621 226.75398254]
[96.76606750 211.76081848]
[96.31301880 196.76766968]
[95.85997772 181.77450562]
[95.40692902 166.78135681]
[94.84067535 151.79203796]
[94.16123199 136.80743408]
[93.48179626 121.82283783]
[83.81515503 116.02416992]
[78.11322021 106.30015564]
[77.77275848 95.03282928]
[82.87716675 84.98228455]
[92.17605591 78.61054230]
[91.94950867 63.61225128]
[91.72296143 48.61396027]
[91.49641418 33.61567307]
[91.26986694 18.61738205]
[80.20840454 7.65007067]
[80.19231415 -7.56355429]
[90.71613312 -18.04137421]
[90.48958588 -33.03966522]
[90.14978027 -48.03581619]
[89.69673157 -63.02897263]
[89.24369049 -78.02212524]
[88.79064178 -93.01528168]
[88.33760071 -108.00843811]
[87.88455200 -123.00160217]
[87.43150330 -137.99475098]
[86.97846222 -152.98791504]
[86.52541351 -167.98106384]
[77.68504333 -177.37522888]
[77.61763763 -189.87390137]
[85.81385040 -198.77246094]
[85.58730316 -213.77075195]
[85.36075592 -228.76902771]
[85.13420105 -243.76731873]
[84.90765381 -258.76562500]
[84.68110657 -273.76391602]
[76.99814606 -260.88088989]
[64.78717804 -252.16926575]
[50.10526276 -249.09658813]
[35.42570114 -252.18049622]
[23.22140312 -260.90145874]
[15.54830170 -273.79034424]
[13.69900036 -288.67590332]
[17.98503113 -303.05053711]
[27.68437386 -314.49267578]
[41.16308212 -321.07482910]
[56.15053940 -321.68811035]
[70.12196350 -316.22924805]
[80.72374725 -305.61782837]
[86.16973114 -291.64254761]
[88.87355804 -306.39685059]
[91.57737732 -321.15115356]
[94.28120422 -335.90545654]
[96.98503113 -350.65972900]
[99.68885803 -365.41403198]
[102.39268494 -380.16833496]
[105.09650421 -394.92263794]
[94.89727020 -409.13375854]
[98.06797791 -425.99270630]
[112.16698456 -435.15902710]
[106.81848145 -450.04873657]
[116.55406189 -461.32116699]
[119.03473663 -476.11462402]
[121.51541901 -490.90808105]
[116.16691589 -505.79782104]
[125.90248871 -517.07025146]
[128.38316345 -531.86370850]
[119.00695038 -544.58618164]
[121.45570374 -560.19964600]
[134.27662659 -569.44079590]
[149.86329651 -566.82714844]
[158.96841431 -553.90924072]
[156.19007874 -538.35107422]
[143.17662048 -529.38299561]
[140.69593811 -514.58953857]
[146.22187805 -500.75796509]
[136.30886841 -488.42739868]
[133.82818604 -473.63394165]
[131.34750366 -458.84048462]
[136.87344360 -445.00888062]
[126.96044159 -432.67834473]
[135.83460999 -423.33413696]
[137.73416138 -410.39160156]
[131.74378967 -398.54412842]
[119.85080719 -392.21881104]
[117.14698029 -377.46450806]
[114.44315338 -362.71020508]
[111.73932648 -347.95593262]
[109.03550720 -333.20162964]
[106.33168030 -318.44732666]
[103.62785339 -303.69302368]
[100.92402649 -288.93872070]
[99.67939758 -273.99044800]
[99.90594482 -258.99215698]
[100.13249207 -243.99386597]
[100.35903931 -228.99557495]
[100.58558655 -213.99729919]
[100.81214142 -198.99900818]
[110.61415863 -184.44386292]
[101.51856995 -168.43411255]
[101.97161865 -153.44096375]
[102.42465973 -138.44779968]
[102.87770844 -123.45464325]
[103.33075714 -108.46148682]
[103.78379822 -93.46833038]
[104.23684692 -78.47517395]
[104.68988800 -63.48201752]
[105.14293671 -48.48886108]
[108.48786926 -41.89649200]
[105.48787689 -33.26621246]
[105.71442413 -18.26792336]
[116.54991150 -8.11273479]
[116.99331665 7.09443617]
[106.26815033 18.39083481]
[106.49469757 33.38912201]
[106.72125244 48.38741302]
[106.94779968 63.38570023]
[107.17434692 78.38398743]
[120.63597107 90.36258698]
[121.18021393 108.37386322]
[108.46640015 121.14339447]
[109.14583588 136.12800598]
[109.82527924 151.11260986]
[113.34088135 159.54600525]
[110.40008545 166.32830811]
[110.85313416 181.32145691]
[111.30618286 196.31462097]
[111.75922394 211.30776978]
[112.21227264 226.30093384]
[115.60010529 234.78646851]
[112.55720520 241.52357483]
[112.78376007 256.52188110]
[120.72859955 270.20361328]
[113.18441010 283.04629517]
[113.41095734 298.04458618]
[113.63750458 313.04287720]
[113.86405182 328.04116821]
[114.09059906 343.03945923]
[128.61459351 350.93936157]
[137.12463379 365.00488281]
[137.37939453 381.34857178]
[129.40400696 395.50885010]
[115.45742798 403.66793823]
[115.91046906 418.66107178]
[134.93753052 429.59512329]
[143.45126343 449.67895508]
[138.14311218 470.70184326]
[121.32036591 484.17266846]
[123.35310364 499.03427124]
[125.38584900 513.89593506]
[127.41858673 528.75756836]
[129.45132446 543.61914062]
[138.98739624 556.24353027]
[133.04621887 569.90191650]
[135.07896423 584.76354980]
[137.11170959 599.62518311]
[148.13275146 589.44989014]
[162.98234558 591.56884766]
[170.71757507 604.42053223]
[165.63827515 618.53436279]
[151.48742676 623.50964355]
[138.69296265 615.67999268]
[139.59864807 630.65264893]
[140.50431824 645.62524414]
[151.51091003 657.29724121]
[149.10534668 673.15887451]
[135.13296509 681.04254150]
[120.31219482 674.90057373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 195]
[5 194]
[6 193]
[8 191]
[9 190]
[10 189]
[11 188]
[12 187]
[23 183]
[24 182]
[30 177]
[31 176]
[32 175]
[33 174]
[34 173]
[36 171]
[37 170]
[38 168]
[39 167]
[40 166]
[41 165]
[42 164]
[43 162]
[44 161]
[45 160]
[50 157]
[51 156]
[52 155]
[53 154]
[54 153]
[57 150]
[58 149]
[59 147]
[60 146]
[61 145]
[62 144]
[63 143]
[64 142]
[65 141]
[66 140]
[67 139]
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
[75 132]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 124]
[99 120]
[101 118]
[102 117]
[103 116]
[105 114]
[106 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
