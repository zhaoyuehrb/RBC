%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGGGACCGGGCGGGAGAGAGAGAAAGCCUGACCGACCGGCUGGCGAAGAGCUGCAUGCAACCGGUGGGAGGCCGGGCCGGCUGGGUCUGGGGCUCGGGCUCAGGCUCGCACCGUUUCUCGGCAGGUCCCUGGCGGUGAGCGCGGACGGCCCGGAGGCGGCGGCUCUGAGCUGGCAGGCGGAGGGCUGUCUCCUGCGCCCGCCUGCCCGGCGCGGUCCGAGGAUGCGGGGGGGCG\
) } def
/len { sequence length } bind def

/coor [
[297.08718872 916.03283691]
[294.72113037 930.84503174]
[292.35504150 945.65722656]
[300.56552124 959.44012451]
[294.77416992 974.40142822]
[279.42364502 979.06408691]
[266.28952026 969.85131836]
[265.44720459 953.83038330]
[277.54284668 943.29119873]
[279.90890503 928.47894287]
[282.27499390 913.66674805]
[281.38452148 898.69323730]
[277.27957153 884.26580811]
[273.17462158 869.83843994]
[269.06967163 855.41107178]
[264.96472168 840.98364258]
[260.85977173 826.55627441]
[249.93486023 816.43231201]
[253.60020447 801.04150391]
[249.40013123 786.64154053]
[245.10510254 772.26959229]
[240.18756104 766.77099609]
[240.84959412 757.67950439]
[236.74464417 743.25213623]
[232.63969421 728.82476807]
[228.53475952 714.39739990]
[217.60983276 704.27337646]
[221.27517700 688.88262939]
[217.17022705 674.45520020]
[213.06529236 660.02783203]
[208.96034241 645.60046387]
[204.85539246 631.17303467]
[194.45202637 625.02355957]
[190.90682983 613.05187988]
[196.63966370 601.51129150]
[192.72552490 587.03094482]
[188.81137085 572.55065918]
[184.04067993 566.92419434]
[184.94245911 557.85333252]
[181.21978760 543.32263184]
[170.56591797 532.91375732]
[174.63624573 517.62512207]
[170.91357422 503.09439087]
[167.19090271 488.56369019]
[163.46821594 474.03298950]
[159.74554443 459.50225830]
[156.02287292 444.97155762]
[143.11552429 437.62741089]
[139.13320923 422.94424438]
[146.92391968 409.45562744]
[143.20123291 394.92492676]
[139.47856140 380.39419556]
[135.75588989 365.86349487]
[132.03320312 351.33276367]
[128.31053162 336.80206299]
[124.58785248 322.27133179]
[120.86518097 307.74063110]
[116.16917419 302.05166626]
[117.19061279 292.99353027]
[113.66005707 278.41494751]
[110.12950897 263.83636475]
[98.27765656 260.25695801]
[89.40848541 251.61888123]
[85.51747131 239.86564636]
[70.85076904 236.72116089]
[55.42015457 242.27346802]
[43.07279205 231.48112488]
[46.51059341 215.44636536]
[62.19704056 210.66436768]
[73.99526215 222.05445862]
[88.66196442 225.19894409]
[90.97809601 221.26403809]
[93.97216034 217.75633240]
[97.56521606 214.79272461]
[101.65818024 212.47550964]
[100.27415466 197.53950500]
[98.89012909 182.60348511]
[97.50610352 167.66748047]
[96.12207794 152.73146057]
[94.73805237 137.79544067]
[93.35402679 122.85943604]
[91.97000122 107.92342377]
[87.10936737 93.73278046]
[79.04523468 81.08486938]
[71.80677795 75.54428864]
[70.95941162 68.21635437]
[63.06292725 55.46309662]
[55.16644669 42.70984268]
[47.26996231 29.95658493]
[39.37348175 17.20332718]
[31.47699928 4.45007038]
[23.58051682 -8.30318642]
[15.68403339 -21.05644417]
[7.78755140 -33.80970001]
[-6.05568886 -41.46968079]
[-6.17734861 -56.36378860]
[-19.65627861 -66.64749908]
[-13.50579548 -82.44648743]
[3.37838125 -80.90995789]
[6.57590866 -64.26026917]
[19.85433960 -57.51248932]
[20.54080772 -41.70618439]
[28.43729019 -28.95292664]
[36.33377457 -16.19966888]
[44.23025513 -3.44641209]
[52.12673950 9.30684471]
[60.02322006 22.06010246]
[67.91970062 34.81335831]
[75.81618500 47.56661606]
[83.71266937 60.31987381]
[91.69314575 73.02073669]
[99.75727844 85.66865540]
[107.19203949 84.68152618]
[129.49630737 81.72015381]
[133.98065186 67.40615082]
[138.46501160 53.09215164]
[142.94935608 38.77815247]
[147.33914185 24.43486786]
[151.63417053 10.06292343]
[155.92918396 -4.30902052]
[160.12925720 -18.70899963]
[164.23420715 -33.13638306]
[168.33915710 -47.56376648]
[164.67381287 -62.95454025]
[175.59872437 -73.07854462]
[179.70367432 -87.50592804]
[183.80862427 -101.93331146]
[179.28608704 -117.69651794]
[190.86926270 -129.30522156]
[206.64237976 -124.81738281]
[210.37940979 -108.84970093]
[198.23600769 -97.82836914]
[194.13105774 -83.40098572]
[190.02612305 -68.97360229]
[193.98506165 -54.61476898]
[182.76654053 -43.45882416]
[178.66159058 -29.03143883]
[174.55664062 -14.60405350]
[175.74700928 -7.32396841]
[170.30113220 -0.01399795]
[166.00610352 14.35794640]
[161.71109009 28.72989082]
[162.80525208 36.02505493]
[157.26335144 43.26250458]
[152.77900696 57.57650375]
[148.29464722 71.89050293]
[143.81030273 86.20450592]
[127.01267242 106.22627258]
[106.90601349 106.53939819]
[108.29003906 121.47541046]
[109.67406464 136.41142273]
[111.05809021 151.34744263]
[112.44211578 166.28344727]
[113.82614136 181.21946716]
[115.21016693 196.15547180]
[116.59419250 211.09149170]
[134.02897644 223.19534302]
[137.27050781 243.89053345]
[124.70809174 260.30581665]
[128.23864746 274.88439941]
[131.76919556 289.46298218]
[135.39588928 304.01794434]
[139.11857605 318.54867554]
[142.84124756 333.07937622]
[146.56391907 347.61010742]
[150.28660583 362.14080811]
[154.00927734 376.67150879]
[157.73194885 391.20223999]
[161.45463562 405.73294067]
[174.77134705 413.81396484]
[178.33967590 428.60321045]
[170.55357361 441.24887085]
[174.27626038 455.77957153]
[177.99893188 470.31030273]
[181.72160339 484.84100342]
[185.44429016 499.37173462]
[189.16696167 513.90246582]
[200.08709717 525.35064697]
[195.75050354 539.59997559]
[199.47317505 554.13067627]
[203.29167175 568.63647461]
[207.20582581 583.11682129]
[211.11997986 597.59710693]
[224.46807861 610.29449463]
[219.28277588 627.06811523]
[223.38772583 641.49548340]
[227.49267578 655.92291260]
[231.59761047 670.35028076]
[235.70256042 684.77764893]
[246.92109680 695.93359375]
[242.96214294 710.29241943]
[247.06707764 724.71978760]
[251.17202759 739.14721680]
[255.27697754 753.57458496]
[259.47705078 767.97454834]
[263.77206421 782.34649658]
[269.21795654 789.65649414]
[268.02758789 796.93658447]
[279.24612427 808.09252930]
[275.28717041 822.45135498]
[279.39212036 836.87872314]
[283.49707031 851.30609131]
[287.60198975 865.73352051]
[291.70693970 880.16088867]
[295.81188965 894.58825684]
[316.39990234 888.79797363]
[340.39877319 905.55883789]
[346.72808838 919.15808105]
[353.05737305 932.75738525]
[359.38668823 946.35662842]
[375.93438721 952.05761719]
[383.08975220 967.65917969]
[376.86401367 983.29113770]
[383.37228394 996.80566406]
[389.88052368 1010.32019043]
[396.38879395 1023.83471680]
[402.91955566 1030.19421387]
[402.89242554 1037.57092285]
[409.22174072 1051.17016602]
[422.95159912 1060.13806152]
[421.78005981 1076.49523926]
[406.91232300 1083.41491699]
[393.64300537 1073.77868652]
[395.62246704 1057.49938965]
[389.29318237 1043.90014648]
[382.87426758 1030.34301758]
[376.36599731 1016.82843018]
[369.85775757 1003.31390381]
[363.34948730 989.79937744]
[350.72152710 987.29174805]
[341.70483398 977.83142090]
[339.74862671 964.71295166]
[345.78741455 952.68591309]
[339.45812988 939.08666992]
[333.12881470 925.48742676]
[326.79949951 911.88812256]
[319.37142944 912.92431641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[12 205]
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[19 198]
[20 196]
[21 195]
[23 194]
[24 193]
[25 192]
[26 191]
[28 189]
[29 188]
[30 187]
[31 186]
[32 185]
[35 183]
[36 182]
[37 181]
[39 180]
[40 179]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[47 172]
[50 169]
[51 168]
[52 167]
[53 166]
[54 165]
[55 164]
[56 163]
[57 162]
[59 161]
[60 160]
[61 159]
[64 71]
[65 70]
[75 156]
[76 155]
[77 154]
[78 153]
[79 152]
[80 151]
[81 150]
[82 149]
[83 112]
[84 111]
[86 110]
[87 109]
[88 108]
[89 107]
[90 106]
[91 105]
[92 104]
[93 103]
[94 102]
[96 100]
[114 147]
[115 146]
[116 145]
[117 144]
[118 142]
[119 141]
[120 140]
[121 138]
[122 137]
[123 136]
[125 134]
[126 133]
[127 132]
[207 236]
[208 235]
[209 234]
[210 233]
[213 229]
[214 228]
[215 227]
[216 226]
[218 225]
[219 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
