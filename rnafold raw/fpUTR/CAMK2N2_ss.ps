%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCCGGGAGGCGGAGGCGCGGGGGAGGAGGCCCCGCUUGGCUCCUCAGCCCCGGAUGCUGCAUGACUUCAUCCUUCCGCCGGCUCCCCUGCUGAGGUAGGGCCGGUCCGGCAGCAAGCCCGCCGCCCGCGCCCCGCCGCAGUCCCGCUCCCGCCCCGCGCCCACCCCGCGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[288.60015869 498.92135620]
[292.89215088 488.88714600]
[286.51974487 475.30801392]
[272.46740723 470.50518799]
[265.81146240 456.82479858]
[270.94436646 442.11798096]
[264.57199097 428.53884888]
[258.19958496 414.95974731]
[251.82719421 401.38061523]
[245.45480347 387.80148315]
[238.60978699 374.45437622]
[231.30056763 361.35568237]
[223.99136353 348.25698853]
[216.68214417 335.15832520]
[209.37294006 322.05963135]
[203.35035706 317.73818970]
[202.05268860 308.66632080]
[194.97448730 295.44137573]
[187.89627075 282.21643066]
[180.81806946 268.99151611]
[173.73986816 255.76655579]
[166.66166687 242.54162598]
[159.58345032 229.31668091]
[152.50524902 216.09175110]
[139.67781067 208.52166748]
[139.98747253 192.70349121]
[125.70183563 188.64686584]
[118.33512878 175.33573914]
[122.68695068 160.37915039]
[116.74114227 155.95265198]
[115.60288239 146.85942078]
[108.75786591 133.51229858]
[101.91284943 120.16516876]
[89.21257019 117.14422607]
[80.99306488 107.00210571]
[65.99826050 106.60725403]
[51.00345612 106.21240997]
[43.53110123 114.16668701]
[33.12471008 116.62863922]
[23.29332733 113.01719666]
[17.21611977 104.75841522]
[2.24441099 103.83757782]
[-12.72729778 102.91674042]
[-27.69900703 101.99590302]
[-42.12840652 109.78849030]
[-55.94789124 100.95934296]
[-54.94116211 84.59112549]
[-40.14385223 77.52205658]
[-26.77816963 87.02419281]
[-11.80646038 87.94503021]
[3.16524839 88.86586761]
[18.13695717 89.78670502]
[34.73711777 79.90388489]
[51.39830399 91.21760559]
[66.39310455 91.61245728]
[81.38790894 92.00730133]
[85.36631012 85.99470520]
[91.19861603 81.75640869]
[90.14643097 66.79335022]
[89.09424591 51.83030319]
[88.04206085 36.86725235]
[86.98988342 21.90419960]
[85.93769836 6.94114780]
[74.28903961 -3.40034914]
[73.43513489 -18.59000015]
[83.36595917 -29.63148308]
[82.31377411 -44.59453201]
[81.26158905 -59.55758667]
[80.20940399 -74.52063751]
[69.07914734 -82.13648224]
[64.44387054 -94.59370422]
[67.78915405 -107.25614929]
[77.67394257 -115.54804993]
[76.88452148 -130.52725220]
[76.09510040 -145.50646973]
[75.30567932 -160.48568726]
[66.85282135 -173.85952759]
[73.90959167 -186.97636414]
[73.12017059 -201.95558167]
[64.06150055 -211.16394043]
[63.72775269 -223.67546082]
[71.75196075 -232.75178528]
[71.22554016 -247.74255371]
[70.69912720 -262.73330688]
[70.17271423 -277.72406006]
[58.44264221 -288.31561279]
[57.72104263 -304.10342407]
[68.43602753 -315.72085571]
[84.23057556 -316.27551270]
[95.73407745 -305.43829346]
[96.12169647 -289.63876343]
[85.16347504 -278.25048828]
[85.68988800 -263.25973511]
[86.21630096 -248.26896667]
[86.74272156 -233.27819824]
[96.83759308 -218.93852234]
[88.09938049 -202.74499512]
[88.88880157 -187.76579285]
[97.28519440 -175.46334839]
[90.28488922 -161.27510071]
[91.07431030 -146.29589844]
[91.86373138 -131.31668091]
[92.65315247 -116.33747101]
[105.61918640 -105.64728546]
[106.88069153 -88.55166626]
[95.17246246 -75.57282257]
[96.22463989 -60.60976791]
[97.27682495 -45.64671707]
[98.32901001 -30.68366623]
[109.70731354 -21.14061356]
[110.98752594 -5.98094082]
[100.90074921 5.88896465]
[101.95293427 20.85201645]
[103.00511932 35.81506729]
[104.05729675 50.77811813]
[105.10948181 65.74117279]
[106.16166687 80.70422363]
[119.51080322 94.55741119]
[115.25997162 113.32015228]
[122.10498810 126.66727448]
[128.95001221 140.01440430]
[135.91188049 153.30094910]
[150.77070618 157.97567749]
[157.76062012 171.48847961]
[153.21240234 185.62528992]
[166.54612732 194.14129639]
[165.73019409 209.01353455]
[172.80839539 222.23847961]
[179.88659668 235.46342468]
[186.96481323 248.68835449]
[194.04301453 261.91329956]
[201.12121582 275.13824463]
[208.19941711 288.36315918]
[215.27763367 301.58810425]
[222.47161865 314.75042725]
[229.78082275 327.84912109]
[237.09004211 340.94778442]
[244.39924622 354.04647827]
[251.70846558 367.14514160]
[255.57409668 369.26400757]
[258.27636719 372.21496582]
[259.69607544 375.52420044]
[259.88229370 378.72833252]
[259.03393555 381.42907715]
[265.40631104 395.00820923]
[271.77871704 408.58734131]
[278.15109253 422.16647339]
[284.52349854 435.74557495]
[299.11569214 441.19583130]
[305.38476562 455.05776978]
[300.09887695 468.93563843]
[306.47128296 482.51473999]
[323.51489258 493.24371338]
[321.11495972 512.41333008]
[327.95999146 525.76049805]
[341.18713379 528.39233398]
[350.34298706 538.02758789]
[352.24029541 550.98632812]
[346.40701294 562.49444580]
[353.01672363 575.95965576]
[359.62646484 589.42486572]
[366.23617554 602.89001465]
[381.46112061 606.45874023]
[390.78875732 619.00976562]
[389.81484985 634.61700439]
[378.99926758 645.91113281]
[363.44882202 647.55944824]
[350.50588989 638.78363037]
[346.28179932 623.72735596]
[352.77099609 609.49975586]
[346.16125488 596.03454590]
[339.55154419 582.56939697]
[332.94180298 569.10418701]
[316.81884766 564.36621094]
[308.94369507 549.14013672]
[314.61285400 532.60552979]
[307.76785278 519.25836182]
[297.76556396 517.00128174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 152]
[3 151]
[6 148]
[7 147]
[8 146]
[9 145]
[10 144]
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[23 128]
[24 127]
[26 125]
[29 122]
[31 121]
[32 120]
[33 119]
[35 56]
[36 55]
[37 54]
[41 52]
[42 51]
[43 50]
[44 49]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
[66 109]
[67 108]
[68 107]
[69 106]
[73 103]
[74 102]
[75 101]
[76 100]
[78 98]
[79 97]
[82 95]
[83 94]
[84 93]
[85 92]
[154 177]
[155 176]
[159 173]
[160 172]
[161 171]
[162 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
