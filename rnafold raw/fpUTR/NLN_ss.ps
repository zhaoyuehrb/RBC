%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUGGUAGGCGCCGGCGUGGAGCUGCCGCACGUGGGAGGGCGCUGGCCAGGCAGCCACUGUGGCCUCUGCGGCUAGGCCGGCUCGAGACUCCCGGGCGCCCAGGCGCUGCCGCCCGCCUCGCCGCCCCACGCCGAAGGACCACGCGCCCGCCGCCGCCAGCCUCUCAGCGCUCCC\
) } def
/len { sequence length } bind def

/coor [
[268.59729004 982.39965820]
[265.71936035 967.67834473]
[262.84146118 952.95703125]
[259.96353149 938.23571777]
[257.08560181 923.51434326]
[254.20767212 908.79302979]
[251.32974243 894.07171631]
[248.45181274 879.35040283]
[245.57389832 864.62902832]
[241.19197083 858.65032959]
[242.77702332 849.62420654]
[240.15789795 834.85467529]
[237.53877258 820.08508301]
[234.91964722 805.31555176]
[232.17102051 790.56951904]
[222.13558960 779.56317139]
[227.08142090 764.53491211]
[224.20349121 749.81353760]
[221.32556152 735.09222412]
[218.44763184 720.37091064]
[215.56971741 705.64959717]
[212.69178772 690.92822266]
[200.22976685 682.85150146]
[197.10144043 667.96295166]
[205.65757751 654.94641113]
[202.65057373 640.25091553]
[199.51472473 625.58233643]
[186.91288757 617.72558594]
[183.52374268 602.89422607]
[191.85012817 589.72955322]
[188.71427917 575.06097412]
[178.72329712 568.20910645]
[176.00364685 555.99224854]
[182.55033875 544.85693359]
[179.67240906 530.13562012]
[176.79447937 515.41430664]
[173.91656494 500.69296265]
[171.03863525 485.97161865]
[168.16070557 471.25030518]
[155.69869995 463.17355347]
[152.57035828 448.28503418]
[161.12649536 435.26849365]
[158.24856567 420.54714966]
[155.37063599 405.82583618]
[152.49270630 391.10449219]
[142.62351990 384.07833862]
[140.11869812 371.81558228]
[146.85978699 360.79693604]
[144.24067688 346.02734375]
[141.62155151 331.25778198]
[126.01950073 321.72247314]
[122.24839020 303.50494385]
[133.14971924 288.03829956]
[130.01387024 273.36975098]
[126.87803650 258.70120239]
[123.74219513 244.03265381]
[120.60635376 229.36408997]
[117.47051239 214.69554138]
[104.86867523 206.83874512]
[101.47952271 192.00741577]
[109.80590057 178.84271240]
[106.67005920 164.17416382]
[103.53422546 149.50559998]
[99.04804993 143.60469055]
[100.47444916 134.55218506]
[97.59651947 119.83085632]
[94.71859741 105.10952759]
[90.16970825 106.91775513]
[85.02490997 107.37423706]
[79.60226440 106.35303497]
[74.24203491 103.79535675]
[69.29335785 99.71298218]
[65.10057068 94.18920135]
[59.20865250 80.39480591]
[53.31673431 66.60041046]
[47.42481613 52.80601883]
[35.64292145 40.61490250]
[44.09604645 25.91861153]
[60.55805969 29.97304916]
[61.21921158 46.91410065]
[67.11112976 60.70849609]
[73.00304413 74.50289154]
[78.89496613 88.29727936]
[93.70822144 85.93776703]
[95.02284241 70.99548340]
[96.33746338 56.05320358]
[97.65208435 41.11091995]
[98.96670532 26.16864014]
[87.78739929 15.23442554]
[86.30338287 -0.33258149]
[95.21537018 -13.18211651]
[110.31538391 -17.24702072]
[124.47367096 -10.60797215]
[131.00511169 3.60027409]
[126.82576752 18.66901970]
[113.90898895 27.48326111]
[112.59436798 42.42554092]
[111.27974701 57.36782455]
[109.96512604 72.31010437]
[108.65050507 87.25238800]
[109.43992615 102.23159790]
[112.31784821 116.95292664]
[115.19577789 131.67425537]
[118.20277405 146.36976624]
[121.33861542 161.03831482]
[124.47445679 175.70687866]
[137.45573425 184.31642151]
[140.42695618 199.23710632]
[132.13906860 211.55969238]
[135.27490234 226.22825623]
[138.41075134 240.89680481]
[141.54658508 255.56536865]
[144.68243408 270.23391724]
[147.81826782 284.90246582]
[158.89448547 289.31597900]
[166.37774658 298.44366455]
[168.49041748 309.93411255]
[164.81948853 320.89892578]
[156.39111328 328.63867188]
[159.01023865 343.40823364]
[161.62936401 358.17779541]
[173.80386353 371.97518921]
[167.21405029 388.22656250]
[170.09196472 402.94790649]
[172.96989441 417.66921997]
[175.84782410 432.39056396]
[188.67599487 441.22659302]
[191.38490295 456.19711304]
[182.88203430 468.37237549]
[185.75996399 483.09368896]
[188.63789368 497.81503296]
[191.51580811 512.53637695]
[194.39373779 527.25769043]
[197.27166748 541.97900391]
[209.68643188 555.56060791]
[203.38284302 571.92517090]
[206.51867676 586.59368896]
[219.49995422 595.20324707]
[222.47117615 610.12390137]
[214.18328857 622.44653320]
[217.31912231 637.11505127]
[222.18666077 644.87969971]
[220.37890625 652.06848145]
[233.20707703 660.90454102]
[235.91598511 675.87506104]
[227.41311646 688.05029297]
[230.29104614 702.77166748]
[233.16896057 717.49298096]
[236.04689026 732.21429443]
[238.92481995 746.93560791]
[241.80274963 761.65698242]
[252.04402161 773.71624756]
[246.89234924 787.69158936]
[251.62286377 795.54046631]
[249.68922424 802.69641113]
[252.30833435 817.46594238]
[254.92745972 832.23553467]
[257.54660034 847.00512695]
[260.29522705 861.75109863]
[263.17315674 876.47247314]
[266.05108643 891.19378662]
[268.92898560 905.91510010]
[271.80691528 920.63641357]
[274.68484497 935.35778809]
[277.56277466 950.07910156]
[280.44070435 964.80041504]
[283.31863403 979.52178955]
[298.09829712 983.33288574]
[309.75515747 993.18579102]
[315.97479248 1007.12420654]
[315.52227783 1022.38061523]
[308.48742676 1035.92578125]
[296.26702881 1045.07055664]
[281.28747559 1047.99890137]
[266.52294922 1044.12963867]
[254.90495300 1034.23083496]
[248.74026489 1020.26812744]
[249.25286865 1005.01361084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[3 165]
[4 164]
[5 163]
[6 162]
[7 161]
[8 160]
[9 159]
[11 158]
[12 157]
[13 156]
[14 155]
[15 153]
[17 151]
[18 150]
[19 149]
[20 148]
[21 147]
[22 146]
[25 143]
[26 141]
[27 140]
[30 137]
[31 136]
[34 134]
[35 133]
[36 132]
[37 131]
[38 130]
[39 129]
[42 126]
[43 125]
[44 124]
[45 123]
[48 121]
[49 120]
[50 119]
[53 114]
[54 113]
[55 112]
[56 111]
[57 110]
[58 109]
[61 106]
[62 105]
[63 104]
[65 103]
[66 102]
[67 101]
[73 83]
[74 82]
[75 81]
[76 80]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
