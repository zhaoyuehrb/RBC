%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCCGUCAAGUGCGUAAUGACGUAUCAAUCUCCUGAAGACCCCGGAAGUGCAACUCGAACUUGGUCGGGGCGCGGAUCCCGAGAGGGAAAGUCAUAACAACCGCACGAGGGAGUUCGACUGGCGAACUGGAAGGCCACGCCUCCUCCCGCCUGCCCCCUCAGCCCUGUGGCUGGGGGCAGAGCUCAGACUGUCUUCUGAAGAUUG\
) } def
/len { sequence length } bind def

/coor [
[43.41287231 302.62561035]
[57.75426865 307.02157593]
[68.82748413 317.14007568]
[74.49520111 331.02807617]
[73.66346741 346.00500488]
[66.49282074 359.18005371]
[54.36730576 368.01022339]
[39.62734604 370.79113770]
[25.11798859 366.98608398]
[13.63977242 357.32943726]
[7.40817642 343.68515015]
[7.62600231 328.68670654]
[-0.70755124 341.15875244]
[-9.04110432 353.63079834]
[-17.37465858 366.10284424]
[-25.70821190 378.57489014]
[-34.04176331 391.04693604]
[-34.57381058 407.43743896]
[-49.16008377 414.93228149]
[-62.79547501 405.82141113]
[-61.45306396 389.47729492]
[-46.51380920 382.71337891]
[-38.18025589 370.24133301]
[-29.84670258 357.76928711]
[-21.51314926 345.29724121]
[-13.17959499 332.82519531]
[-4.84604168 320.35314941]
[2.32460928 307.17810059]
[8.27350998 293.40820312]
[14.22241020 279.63827515]
[20.17131042 265.86834717]
[26.12021065 252.09844971]
[32.06911087 238.32852173]
[30.01386452 223.57640076]
[42.58971786 213.97648621]
[40.53447342 199.22436523]
[53.11032867 189.62443542]
[59.05922699 175.85452271]
[65.00812531 162.08460999]
[70.95703125 148.31469727]
[76.90592957 134.54476929]
[82.85482788 120.77485657]
[75.58488464 107.65434265]
[60.75565338 105.39737701]
[45.92642212 103.14041138]
[31.09719276 100.88343811]
[16.26796150 98.62647247]
[1.40633416 96.59373474]
[-13.48429871 94.78568268]
[-28.37493134 92.97763062]
[-43.26556396 91.16957855]
[-53.03038788 103.11327362]
[-67.70937347 107.85994720]
[-82.61851501 103.89495850]
[-93.00035095 92.48352051]
[-95.54208374 77.26697540]
[-89.43265533 63.10087967]
[-76.62155151 54.50556946]
[-61.19676208 54.22378540]
[-48.08027649 62.34544373]
[-41.45751572 76.27894592]
[-26.56688118 78.08699799]
[-11.67624855 79.89505005]
[3.21438432 81.70310211]
[7.46124315 79.51367188]
[13.12886047 79.97048950]
[18.52492905 83.79724121]
[33.35416031 86.05420685]
[48.18339157 88.31118011]
[63.01262283 90.56814575]
[77.84185028 92.82511139]
[86.91324615 80.87899017]
[74.19383240 71.47010040]
[76.02604675 56.68861771]
[69.86985016 43.01012039]
[63.71366119 29.33162308]
[57.55746841 15.65312481]
[48.32402420 8.51241875]
[47.85900879 -1.85028756]
[39.52545547 -14.32233143]
[31.19190025 -26.79437637]
[22.85834694 -39.26641846]
[7.91909075 -46.03034592]
[6.57668114 -62.37445450]
[20.21207428 -71.48533630]
[34.79834747 -63.99048996]
[35.33039093 -47.59997177]
[43.66394424 -35.12792969]
[51.99749756 -22.65588570]
[60.33105087 -10.18384075]
[60.90737534 -25.17276573]
[67.71807861 -38.53743362]
[79.50679779 -47.81246185]
[94.09886169 -51.28688812]
[108.80247498 -48.31978989]
[120.90526581 -39.45850372]
[128.17463684 -26.33766937]
[129.26959229 -11.37768745]
[123.98817444 2.66177559]
[113.30461884 13.19086075]
[99.18972778 18.26726913]
[84.24727631 16.95455551]
[71.23596191 9.49693298]
[77.39215851 23.17543030]
[83.54834747 36.85392761]
[89.70454407 50.53242493]
[101.98361969 58.96293640]
[100.59174347 74.72280121]
[103.68521118 75.62069702]
[106.56288147 76.88523865]
[109.18292236 78.47655487]
[119.94850922 68.03135681]
[130.71409607 57.58615875]
[140.05378723 45.84860611]
[147.81384277 33.01188660]
[155.57391357 20.17516708]
[163.33398438 7.33844757]
[171.09405518 -5.49827147]
[178.85411072 -18.33499146]
[176.42630005 -34.19327927]
[187.41650391 -45.88066483]
[203.39398193 -44.43158722]
[212.10217285 -30.95765495]
[206.86091614 -15.79491425]
[191.69084167 -10.57492352]
[183.93077087 2.26179576]
[176.17070007 15.09851456]
[168.41062927 27.93523407]
[160.65057373 40.77195358]
[152.89050293 53.60867310]
[163.41670227 64.29507446]
[176.36915588 56.72976303]
[189.32160950 49.16445923]
[195.15522766 42.13234711]
[202.52732849 41.58440018]
[215.59255981 34.21557999]
[228.65780640 26.84676170]
[239.48364258 13.79925632]
[255.01814270 20.59011459]
[252.79304504 37.39741516]
[236.02662659 39.91200256]
[222.96138000 47.28081894]
[209.89613342 54.64963913]
[196.88691711 62.11691666]
[183.93446350 69.68222046]
[170.98200989 77.24752808]
[152.10409546 77.81919861]
[141.15928650 68.35174561]
[130.39370728 78.79694366]
[119.62812042 89.24214172]
[122.66548920 103.93140411]
[136.69073486 109.25047302]
[150.75575256 114.46347809]
[164.85972595 119.57012177]
[178.96369934 124.67675781]
[193.06768799 129.78340149]
[207.17166138 134.89004517]
[221.27563477 139.99667358]
[235.37962341 145.10331726]
[249.48359680 150.20996094]
[256.05252075 149.42834473]
[261.24896240 151.73646545]
[263.93249512 155.68969727]
[277.87579346 161.22000122]
[291.81912231 166.75028992]
[305.76242065 172.28057861]
[321.89953613 169.36071777]
[332.28881836 182.04908752]
[326.24270630 197.29296875]
[309.98086548 199.41078186]
[300.23211670 186.22389221]
[286.28881836 180.69360352]
[272.34552002 175.16329956]
[258.40219116 169.63301086]
[244.37695312 164.31393433]
[230.27297974 159.20730591]
[216.16900635 154.10066223]
[202.06501770 148.99401855]
[187.96104431 143.88737488]
[173.85707092 138.78074646]
[159.75308228 133.67410278]
[145.64910889 128.56745911]
[138.28791809 129.24624634]
[131.37165833 123.27571869]
[117.34642029 117.95664215]
[130.94509888 124.28718567]
[137.82327271 137.61726379]
[135.10250854 152.36843872]
[123.92142487 162.36761475]
[108.95911407 163.43026733]
[96.47706604 155.11170959]
[91.69880676 140.89312744]
[96.62474823 126.72376251]
[90.67584229 140.49368286]
[84.72694397 154.26359558]
[78.77804565 168.03350830]
[72.82913971 181.80342102]
[66.88024139 195.57333374]
[68.50998688 211.31037903]
[56.35963440 219.92538452]
[57.98937607 235.66242981]
[45.83902740 244.27743530]
[39.89012527 258.04733276]
[33.94122696 271.81726074]
[27.99232674 285.58718872]
[22.04342651 299.35708618]
[16.09452438 313.12701416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[28 207]
[29 206]
[30 205]
[31 204]
[32 203]
[33 202]
[35 200]
[37 198]
[38 197]
[39 196]
[40 195]
[41 194]
[42 193]
[43 71]
[44 70]
[45 69]
[46 68]
[47 67]
[48 64]
[49 63]
[50 62]
[51 61]
[72 108]
[74 106]
[75 105]
[76 104]
[77 103]
[79 90]
[80 89]
[81 88]
[82 87]
[111 150]
[112 149]
[113 148]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[119 125]
[131 146]
[132 145]
[133 144]
[135 143]
[136 142]
[137 141]
[151 185]
[152 184]
[153 182]
[154 181]
[155 180]
[156 179]
[157 178]
[158 177]
[159 176]
[160 175]
[163 174]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
