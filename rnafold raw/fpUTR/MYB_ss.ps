%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUCAACCUGUUUCCUCCUCCUCCUUCUCCUCCUCCUCCGUGACCUCCUCCUCCUCUUUCUCCUGAGAAACUUCGCCCCAGCGGUGCGGAGCGCCGCUGCGCAGCCGGGGAGGGACGCAGGCAGGCGGCGGGCAGCGGGAGGCGGCAGCCCGGUGCGGUCCCCGCGGCUCUCGGCGGAGCCCCGCGCCCGCCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[474.63473511 654.23571777]
[466.04415894 653.23883057]
[457.96630859 650.09722900]
[450.92861938 645.00573730]
[445.39331055 638.28686523]
[441.72683716 630.37030029]
[440.17578125 621.76550293]
[440.85021973 613.02899170]
[443.71603394 604.72814941]
[448.59637451 597.40472412]
[439.77960205 585.26947021]
[430.96282959 573.13421631]
[422.14605713 560.99896240]
[413.32925415 548.86370850]
[399.58874512 543.11499023]
[397.73681641 527.40252686]
[388.92004395 515.26727295]
[380.10327148 503.13204956]
[371.28649902 490.99679565]
[362.46969604 478.86154175]
[353.65292358 466.72628784]
[339.91241455 460.97756958]
[338.06048584 445.26513672]
[329.24371338 433.12988281]
[320.33190918 421.06423950]
[311.32559204 409.06896973]
[302.31927490 397.07369995]
[292.10363770 396.54763794]
[283.69012451 390.35150146]
[280.00454712 380.33978271]
[282.49246216 369.73959351]
[273.86737061 357.46734619]
[260.21887207 351.50350952]
[258.61395264 335.76391602]
[249.98889160 323.49166870]
[241.36380005 311.21942139]
[232.64260864 299.01528931]
[223.82583618 286.88003540]
[215.00904846 274.74478149]
[201.26853943 268.99609375]
[199.41661072 253.28364563]
[190.59983826 241.14839172]
[181.78305054 229.01312256]
[169.88327026 226.80917358]
[162.43943787 216.76347351]
[163.88359070 203.94052124]
[155.25851440 191.66827393]
[146.63343811 179.39602661]
[138.00836182 167.12377930]
[129.38327026 154.85153198]
[120.75820160 142.57928467]
[112.13311768 130.30703735]
[95.22779083 135.00617981]
[76.94040680 130.22169495]
[62.55725098 115.95111084]
[56.89612198 95.08395386]
[43.03792953 89.34370422]
[29.17973709 83.60344696]
[16.02011681 91.82561493]
[0.54327852 90.70886993]
[-11.29961681 80.68263245]
[-14.95473385 65.60218811]
[-9.01660633 51.26628494]
[4.23143530 43.18735886]
[19.69524765 44.47192764]
[31.42868042 54.62604904]
[34.91999054 69.74525452]
[48.77818298 75.48550415]
[62.63637543 81.22576141]
[68.18360901 76.17816162]
[58.08842087 65.08370209]
[45.05904007 57.65165710]
[48.10121536 42.96339035]
[63.01069260 41.31793213]
[69.18288422 54.98851013]
[79.27807617 66.08297729]
[84.82530975 61.03538513]
[80.41470337 46.69849014]
[69.39744568 39.98031616]
[66.02215576 27.94144821]
[71.57415771 17.18795776]
[67.38928986 2.78355265]
[63.20442581 -11.62085247]
[59.01955795 -26.02525711]
[54.83469009 -40.42966461]
[50.64982605 -54.83406830]
[46.46495819 -69.23847198]
[42.28009033 -83.64287567]
[38.09522629 -98.04728699]
[27.86998558 -111.57062531]
[38.03420639 -125.13989258]
[53.88691330 -119.12924194]
[52.49962997 -102.23214722]
[56.68449783 -87.82774353]
[60.86936188 -73.42333984]
[65.05422974 -59.01893616]
[69.23909760 -44.61452866]
[73.42396545 -30.21012497]
[77.60883331 -15.80571938]
[81.79369354 -1.40131390]
[85.97856140 13.00309181]
[99.28070831 24.44365311]
[94.75159454 42.28788376]
[99.16220093 56.62477875]
[117.71243286 62.76215744]
[130.79492188 75.92596436]
[136.20266724 92.65310669]
[133.59597778 109.04806519]
[124.40536499 121.68196106]
[133.03044128 133.95420837]
[141.65551758 146.22645569]
[150.28059387 158.49870300]
[158.90568542 170.77095032]
[167.53076172 183.04319763]
[176.15583801 195.31542969]
[193.03146362 202.67359924]
[193.91830444 220.19635010]
[202.73509216 232.33160400]
[211.55186462 244.46685791]
[225.92300415 251.08355713]
[227.14430237 265.92800903]
[235.96109009 278.06326294]
[244.77786255 290.19851685]
[252.36083984 295.30770874]
[253.63604736 302.59436035]
[262.26113892 314.86660767]
[270.88619995 327.13885498]
[285.15164185 333.98046875]
[286.13961792 348.84225464]
[294.76470947 361.11450195]
[313.41174316 368.75747681]
[314.31454468 388.06738281]
[323.32086182 400.06265259]
[332.32717896 412.05792236]
[339.98947144 417.04736328]
[341.37896729 424.31307983]
[350.19573975 436.44833374]
[364.56689453 443.06503296]
[365.78817749 457.90948486]
[374.60494995 470.04473877]
[383.42175293 482.17999268]
[392.23852539 494.31527710]
[401.05529785 506.45053101]
[409.87207031 518.58575439]
[424.24322510 525.20245361]
[425.46450806 540.04693604]
[434.28131104 552.18218994]
[443.09808350 564.31744385]
[451.91485596 576.45269775]
[460.73162842 588.58795166]
[482.60397339 586.89514160]
[500.96212769 598.66455078]
[508.46328735 619.00134277]
[502.22039795 639.62237549]
[512.31561279 650.71679688]
[522.41076660 661.81127930]
[532.50598145 672.90576172]
[542.60113525 684.00018311]
[552.69635010 695.09466553]
[562.79156494 706.18914795]
[572.88671875 717.28363037]
[588.21228027 715.72393799]
[601.36395264 723.39776611]
[607.40368652 737.18127441]
[604.20721436 751.70440674]
[614.30242920 762.79888916]
[624.39758301 773.89331055]
[634.49279785 784.98779297]
[644.58801270 796.08227539]
[660.13867188 796.98449707]
[670.21856689 808.37969971]
[669.26263428 823.19934082]
[679.35778809 834.29376221]
[689.45300293 845.38824463]
[705.23181152 849.85595703]
[708.98919678 865.81884766]
[696.85992432 876.85565186]
[681.32147217 871.61267090]
[678.35852051 855.48345947]
[668.26330566 844.38897705]
[658.16815186 833.29449463]
[643.32427979 832.85156250]
[632.92828369 821.74401855]
[633.49353027 806.17742920]
[623.39831543 795.08300781]
[613.30316162 783.98852539]
[603.20794678 772.89404297]
[593.11279297 761.79962158]
[578.35327148 763.61511230]
[565.19934082 756.30499268]
[558.79724121 742.48956299]
[561.79223633 727.37878418]
[551.69708252 716.28430176]
[541.60186768 705.18988037]
[531.50671387 694.09539795]
[521.41149902 683.00091553]
[511.31631470 671.90649414]
[501.22113037 660.81201172]
[491.12594604 649.71752930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 150]
[11 149]
[12 148]
[13 147]
[14 146]
[16 144]
[17 143]
[18 142]
[19 141]
[20 140]
[21 139]
[23 137]
[24 136]
[25 134]
[26 133]
[27 132]
[31 130]
[32 129]
[34 127]
[35 126]
[36 125]
[37 123]
[38 122]
[39 121]
[41 119]
[42 118]
[43 117]
[46 115]
[47 114]
[48 113]
[49 112]
[50 111]
[51 110]
[52 109]
[56 69]
[57 68]
[58 67]
[77 104]
[78 103]
[81 101]
[82 100]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[154 199]
[155 198]
[156 197]
[157 196]
[158 195]
[159 194]
[160 193]
[161 192]
[165 188]
[166 187]
[167 186]
[168 185]
[169 184]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
