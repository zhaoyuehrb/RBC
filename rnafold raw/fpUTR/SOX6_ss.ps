%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGUUAGGAGAGACCAUUGGGGAUAGGAAAGAUGAAAGGUCAUGGUGAGCUUCAAGGACAUGAAAGGUUGUUGUCUCAUGUAACAAUAGUAGAUUGUUUUUUUUCCUAAUAUUUCUAGCCAGCCCCUAAGUCAGGUGAUGGAACAAAUACCUACAGUUUAGUCAGGUGAAACAGGAGUGGGUGGAGGAAGGAAAGAAGAAAA\
) } def
/len { sequence length } bind def

/coor [
[318.33395386 83.69089508]
[307.96444702 68.18951416]
[293.19677734 70.81938171]
[278.42913818 73.44925690]
[263.66146851 76.07913208]
[248.89381409 78.70899963]
[234.12614441 81.33887482]
[219.35848999 83.96875000]
[208.18489075 93.81760406]
[193.24194336 88.61966705]
[182.06834412 98.46852875]
[167.12538147 93.27058411]
[152.35772705 95.90045929]
[137.59007263 98.53032684]
[122.82241058 101.16020203]
[108.05474854 103.79007721]
[113.10140991 116.49821472]
[106.96952820 132.49400330]
[88.83116913 144.00331116]
[75.05119324 149.92886353]
[61.27121353 155.85441589]
[47.49123764 161.77998352]
[33.71126175 167.70553589]
[19.93128395 173.63108826]
[21.27377701 188.68617249]
[17.90174103 203.39915466]
[10.15767288 216.33197021]
[-1.18922961 226.22453308]
[-15.01945877 232.11752319]
[-29.97364616 233.44538879]
[-44.58616638 230.09063721]
[-57.42878723 222.39407349]
[-67.25025940 211.12022400]
[-81.03023529 217.04577637]
[-94.81021118 222.97132874]
[-102.06209564 237.28181458]
[-117.80053711 240.39326477]
[-129.95233154 229.91885376]
[-129.19569397 213.89366150]
[-116.11101532 204.61082458]
[-100.73577118 209.19136047]
[-86.95578766 203.26579285]
[-73.17581177 197.34024048]
[-74.60242462 182.45649719]
[-71.35437775 167.84074402]
[-63.73748016 154.92706299]
[-52.48683929 144.98654175]
[-38.69593048 139.00210571]
[-23.71033478 137.57138062]
[-8.99644184 140.84700012]
[4.00203848 148.52046204]
[14.00572681 159.85112000]
[27.78570366 153.92556763]
[41.56568146 148.00000000]
[55.34565735 142.07444763]
[69.12563324 136.14889526]
[82.90560913 130.22332764]
[83.13544464 122.72685242]
[83.82495880 100.23741913]
[70.43386841 93.47881317]
[57.04277802 86.72021484]
[43.65168762 79.96160889]
[29.91508102 87.17861938]
[14.56476593 84.90981293]
[3.50325513 74.02759552]
[0.98392451 58.71640778]
[7.97550821 44.86370468]
[21.78959846 37.79613495]
[37.11439896 40.23133087]
[48.05720520 51.23289871]
[50.41029358 66.57051849]
[63.80138016 73.32912445]
[77.19247437 80.08773041]
[90.58356476 86.84632874]
[105.42488098 89.02241516]
[120.19253540 86.39253998]
[134.96018982 83.76267242]
[149.72785950 81.13279724]
[164.49551392 78.50292206]
[176.72538757 68.46595764]
[190.61206055 73.85200500]
[202.84194946 63.81503677]
[216.72862244 69.20108795]
[231.49627686 66.57121277]
[246.26393127 63.94134140]
[261.03158569 61.31147003]
[275.79925537 58.68159866]
[290.56692505 56.05172348]
[305.33456421 53.42185211]
[307.12185669 41.79592133]
[312.08441162 31.15275574]
[319.81552124 22.33905792]
[329.68881226 16.05264473]
[340.90872192 12.78721809]
[352.57492065 12.79359150]
[363.75427246 16.06046867]
[373.55572510 22.31620789]
[381.20108032 31.05136871]
[386.08703613 41.56019974]
[400.98806763 39.83994675]
[415.88909912 38.11969757]
[430.79013062 36.39944458]
[445.69116211 34.67919540]
[460.59219360 32.95894241]
[475.49322510 31.23869133]
[490.39425659 29.51844025]
[505.29528809 27.79818916]
[520.19628906 26.07793808]
[535.09735107 24.35768509]
[539.92504883 16.24843407]
[547.82714844 11.34486198]
[556.96234131 10.64057064]
[565.26928711 14.16750145]
[570.93188477 21.01700211]
[585.89617920 19.98339462]
[600.86053467 18.94978905]
[615.82489014 17.91618156]
[630.78924561 16.88257408]
[645.75360107 15.84896660]
[658.98779297 7.17912722]
[672.21795654 14.02103615]
[687.18231201 12.98742962]
[702.14666748 11.95382214]
[710.49694824 8.23899174]
[717.34796143 11.02082539]
[730.71343994 2.55480790]
[743.83721924 9.59865665]
[758.81567383 8.79448795]
[773.79406738 7.99031925]
[782.27764893 -4.86796331]
[796.53918457 -10.20296478]
[811.03601074 -6.16504240]
[820.26495361 5.49537134]
[835.24334717 4.69120264]
[850.22180176 3.88703418]
[860.75482178 -7.58871174]
[875.95654297 -8.19087982]
[886.83203125 1.92148876]
[901.81042480 1.11732030]
[916.78887939 0.31315178]
[931.76727295 -0.49101675]
[945.13281250 -8.95703411]
[958.25659180 -1.91318572]
[973.23504639 -2.71735430]
[988.21343994 -3.52152276]
[1003.19189453 -4.32569122]
[1009.50988770 -18.26633263]
[1021.58984375 -27.66488838]
[1036.65588379 -30.36163712]
[1051.24597168 -25.73688698]
[1062.00732422 -14.85337257]
[1066.46716309 -0.21204397]
[1063.60058594 14.82262707]
[1054.06640625 26.79578400]
[1040.05529785 32.95608521]
[1024.78710938 31.88793373]
[1011.77032471 23.83678627]
[1003.99603271 10.65273666]
[989.01763916 11.45690536]
[974.03918457 12.26107407]
[959.06079102 13.06524277]
[946.76660156 21.47373962]
[932.57147217 14.48741150]
[917.59301758 15.29158020]
[902.61462402 16.09574890]
[887.63616943 16.89991760]
[877.90594482 28.11857224]
[862.72717285 29.14748764]
[851.02600098 18.86546326]
[836.04754639 19.66963005]
[821.06909180 20.47379875]
[813.14172363 33.05530930]
[799.16052246 38.62217331]
[784.40979004 34.84479523]
[774.59826660 22.96874809]
[759.61981201 23.77291679]
[744.64141846 24.57708549]
[732.34722900 32.98558426]
[718.15209961 25.99925423]
[703.18029785 26.91816902]
[688.21594238 27.95177460]
[673.25158691 28.98538208]
[661.08770752 37.58129120]
[646.78717041 30.81331253]
[631.82287598 31.84692001]
[616.85852051 32.88052750]
[601.89416504 33.91413498]
[586.92980957 34.94774246]
[571.96545410 35.98134995]
[555.92150879 48.96033096]
[536.81756592 39.25871658]
[521.91656494 40.97896957]
[507.01553345 42.69921875]
[492.11450195 44.41947174]
[477.21347046 46.13972473]
[462.31243896 47.85997391]
[447.41140747 49.58022690]
[432.51037598 51.30047607]
[417.60934448 53.02072906]
[402.70831299 54.74097824]
[387.80728149 56.46123123]
[382.55584717 74.09096527]
[370.09051514 87.68789673]
[352.88754272 94.48502350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 89]
[3 88]
[4 87]
[5 86]
[6 85]
[7 84]
[8 83]
[10 81]
[12 79]
[13 78]
[14 77]
[15 76]
[16 75]
[19 57]
[20 56]
[21 55]
[22 54]
[23 53]
[24 52]
[33 43]
[34 42]
[35 41]
[59 74]
[60 73]
[61 72]
[62 71]
[99 201]
[100 200]
[101 199]
[102 198]
[103 197]
[104 196]
[105 195]
[106 194]
[107 193]
[108 192]
[109 191]
[114 189]
[115 188]
[116 187]
[117 186]
[118 185]
[119 184]
[121 182]
[122 181]
[123 180]
[125 179]
[127 177]
[128 176]
[129 175]
[133 171]
[134 170]
[135 169]
[138 166]
[139 165]
[140 164]
[141 163]
[143 161]
[144 160]
[145 159]
[146 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
