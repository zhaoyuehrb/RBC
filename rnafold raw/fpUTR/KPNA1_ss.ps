%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUGCGAACGCCGGCUGAGCUGAGUCUCGCUGCUCGGUGCGAGGCGGCGGAGAGCGAGGCCUGGUGAGCACCGCCGAGGCGCGGGCCAGCUCUUCGAGGUUGUGCGCGGGAGUGGCACGGCGGGCGGGCGAGCGAGGGGCUAACUUCAGCGGUGGCACCGGGAUCGGUUGCCUUGAGCCUGAAAUC\
) } def
/len { sequence length } bind def

/coor [
[-191.71525574 559.19787598]
[-200.16506958 571.59149170]
[-208.61486816 583.98504639]
[-209.49281311 590.56884766]
[-213.04081726 595.03875732]
[-217.55720520 596.64373779]
[-226.41427612 608.74963379]
[-235.27134705 620.85546875]
[-244.12841797 632.96136475]
[-242.92929077 645.81610107]
[-250.57119751 655.72003174]
[-262.51846313 657.68896484]
[-271.57553101 669.64593506]
[-280.53289795 681.67779541]
[-289.38998413 693.78369141]
[-298.24703979 705.88958740]
[-307.10412598 717.99542236]
[-311.57693481 734.34875488]
[-328.52932739 734.57775879]
[-333.44229126 718.35125732]
[-319.20999146 709.13836670]
[-310.35293579 697.03247070]
[-301.49584961 684.92663574]
[-292.63876343 672.82073975]
[-291.22390747 665.55224609]
[-283.53250122 660.58892822]
[-274.47543335 648.63189697]
[-273.24426270 631.13421631]
[-256.23428345 624.10430908]
[-247.37722778 611.99841309]
[-238.52015686 599.89251709]
[-229.66308594 587.78668213]
[-221.00845337 575.53521729]
[-212.55863953 563.14166260]
[-204.10884094 550.74810791]
[-196.18121338 538.01416016]
[-188.78942871 524.96191406]
[-181.50639343 511.84866333]
[-174.33258057 498.67532349]
[-167.15876770 485.50201416]
[-167.86695862 470.62423706]
[-154.47190857 462.20501709]
[-147.29809570 449.03170776]
[-140.12429810 435.85839844]
[-132.95048523 422.68505859]
[-125.77667236 409.51174927]
[-118.60286713 396.33840942]
[-111.42905426 383.16510010]
[-104.25524139 369.99176025]
[-97.08143616 356.81845093]
[-111.76405334 359.88778687]
[-124.40018463 351.80520630]
[-127.77021790 337.18865967]
[-119.94868469 324.38931274]
[-105.40440369 320.72000122]
[-92.44721222 328.27719116]
[-88.48016357 342.74307251]
[-80.03036499 330.34951782]
[-71.58056641 317.95593262]
[-73.51921844 306.00372314]
[-66.56483459 295.60546875]
[-53.99756622 292.64810181]
[-45.34293365 280.39666748]
[-36.68830109 268.14526367]
[-28.03367043 255.89382935]
[-19.37903786 243.64241028]
[-10.72440529 231.39099121]
[-2.06977296 219.13957214]
[-3.80949736 207.15678406]
[3.31675959 196.87556458]
[15.93144608 194.12748718]
[24.78851891 182.02160645]
[33.64559174 169.91572571]
[42.50266266 157.80986023]
[51.35973740 145.70397949]
[60.21680832 133.59809875]
[61.48744965 118.75778961]
[75.88050842 112.18890381]
[84.73758698 100.08302307]
[86.97322083 85.25056458]
[82.07791138 71.07184601]
[77.18260193 56.89313507]
[64.44917297 46.55912399]
[67.29882050 30.40946388]
[82.80007172 25.05753708]
[95.00657654 36.00894928]
[91.36131287 51.99782562]
[96.25662231 66.17653656]
[101.15193176 80.35525513]
[115.85452271 83.32744598]
[125.87293243 72.16360474]
[135.89135742 60.99976730]
[145.90977478 49.83592606]
[155.92819214 38.67208481]
[165.94659424 27.50824356]
[175.96501160 16.34440422]
[185.98342896 5.18056297]
[196.00184631 -5.98327732]
[199.24496460 -25.86658669]
[217.84504700 -31.11069489]
[220.78851318 -46.65568161]
[234.89656067 -51.43189621]
[244.53837585 -62.92256165]
[254.18019104 -74.41323090]
[263.82199097 -85.90390015]
[266.76547241 -101.44888306]
[280.87350464 -106.22509766]
[290.51531982 -117.71576691]
[300.15713501 -129.20643616]
[303.10061646 -144.75141907]
[317.20864868 -149.52763367]
[313.32421875 -164.55064392]
[319.04324341 -178.97535706]
[332.16665649 -187.25517273]
[347.64825439 -186.20634460]
[359.53500366 -176.23216248]
[363.25625610 -161.16789246]
[357.38107300 -146.80607605]
[344.16860962 -138.66909790]
[328.69931030 -139.88581848]
[326.44549561 -125.16271973]
[311.64779663 -119.56462097]
[302.00598145 -108.07395172]
[292.36416626 -96.58328247]
[290.11035156 -81.86018372]
[275.31265259 -76.26208496]
[265.67083740 -64.77141571]
[256.02902222 -53.28075027]
[246.38722229 -41.79008102]
[244.13340759 -27.06698608]
[229.33570862 -21.46888161]
[231.13922119 -11.38753986]
[226.99978638 -1.78016138]
[218.06643677 4.07469416]
[207.16569519 4.03513861]
[197.14727783 15.19897938]
[187.12886047 26.36281967]
[177.11044312 37.52666092]
[167.09202576 48.69050217]
[157.07360840 59.85434341]
[147.05519104 71.01818085]
[137.03677368 82.18202209]
[127.01836395 93.34586334]
[123.72721863 104.53518677]
[116.68412781 111.89076233]
[108.37536621 114.58518982]
[101.19400024 113.09561157]
[96.84346008 108.94010162]
[87.98638916 121.04597473]
[86.08222961 136.75218201]
[72.32268524 142.45516968]
[63.46561432 154.56105042]
[54.60853958 166.66693115]
[45.75146866 178.77281189]
[36.89439392 190.87867737]
[28.03732300 202.98455811]
[26.48584938 221.32447815]
[10.18164921 227.79420471]
[1.52701640 240.04562378]
[-7.12761593 252.29704285]
[-15.78224850 264.54846191]
[-24.43688011 276.79989624]
[-33.09151459 289.05130005]
[-41.74614716 301.30273438]
[-42.99256897 319.66589355]
[-59.18698120 326.40573120]
[-67.63677979 338.79931641]
[-76.08658600 351.19290161]
[-83.90811157 363.99224854]
[-91.08192444 377.16558838]
[-98.25572968 390.33889771]
[-105.42954254 403.51220703]
[-112.60334778 416.68554688]
[-119.77716064 429.85885620]
[-126.95097351 443.03219604]
[-134.12478638 456.20550537]
[-141.29858398 469.37884521]
[-141.10351562 485.19885254]
[-153.98544312 492.67581177]
[-161.15925598 505.84915161]
[-168.33306885 519.02246094]
[-169.69380188 528.07458496]
[-175.73716736 532.35369873]
[-183.12895203 545.40594482]
[-168.18688965 544.08874512]
[-157.71780396 554.83105469]
[-159.41949463 569.73425293]
[-172.04072571 577.84002686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 33]
[6 32]
[7 31]
[8 30]
[9 29]
[12 27]
[13 26]
[14 24]
[15 23]
[16 22]
[17 21]
[36 184]
[37 183]
[38 181]
[39 180]
[40 179]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[50 169]
[57 168]
[58 167]
[59 166]
[62 164]
[63 163]
[64 162]
[65 161]
[66 160]
[67 159]
[68 158]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[78 149]
[79 148]
[80 89]
[81 88]
[82 87]
[90 143]
[91 142]
[92 141]
[93 140]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
[100 131]
[102 129]
[103 128]
[104 127]
[105 126]
[107 124]
[108 123]
[109 122]
[111 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
