%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:18:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCUUGCCCCUCUAUCCUCUGCACAGGAAGUGGGCUGGCUCUGGGCUUUUAGUCUUUGCGGCCCCAGCAGCCAGAGCUCAGCAGGGCCCUGGAGAGAUGGCCACGGUCCCAGCACCGGGGAGGACUGGAGAGCGCGCGCUGCCACCGCCCCAUGUCUCAGCCAGGGCUUCCUUCCUCGGCUCCACCCUGUGGAUGUA\
) } def
/len { sequence length } bind def

/coor [
[216.68087769 105.82937622]
[211.62916565 97.74024200]
[196.74745178 99.62023926]
[181.86572266 101.50023651]
[166.98400879 103.38023376]
[152.10227966 105.26023865]
[137.22056580 107.14023590]
[122.33884430 109.02023315]
[107.45712280 110.90023041]
[94.20063782 117.91917419]
[84.28096008 129.17083740]
[74.36128235 140.42251587]
[71.03890228 155.89094543]
[56.81837082 160.32104492]
[46.89869308 171.57270813]
[43.56674194 180.08758545]
[36.73374939 182.92163086]
[26.63856316 194.01609802]
[16.54337502 205.11056519]
[6.44818735 216.20503235]
[7.44293213 231.97798157]
[-3.06937051 243.77912903]
[-18.85195923 244.60705566]
[-30.54130173 233.97056580]
[-31.20232010 218.18011475]
[-20.44284439 206.60386658]
[-4.64627886 206.10983276]
[5.44890881 195.01536560]
[15.54409599 183.92089844]
[25.63928413 172.82643127]
[35.64702606 161.65303040]
[45.56670380 150.40136719]
[48.17956543 135.73773193]
[63.10961533 130.50283813]
[73.02929688 119.25116730]
[82.94897461 107.99949646]
[78.20182037 93.77050018]
[63.51347733 90.72868347]
[48.82513428 87.68687439]
[34.13679123 84.64506531]
[19.44845009 81.60325623]
[4.76010799 78.56144714]
[-9.95167160 75.63509369]
[-24.68597984 72.82437134]
[-39.42028809 70.01365662]
[-54.15459824 67.20293427]
[-68.88890839 64.39221954]
[-61.42699814 77.40451813]
[-65.21114349 91.91934204]
[-78.07627869 99.63220978]
[-92.66176605 96.13027954]
[-100.62268829 83.41714478]
[-97.40428162 68.76647949]
[-84.84860229 60.56063080]
[-99.25300598 56.37576675]
[-113.65740967 52.19089890]
[-128.35217285 58.62857819]
[-142.47967529 51.02639389]
[-145.20251465 35.21609116]
[-134.43196106 23.32597923]
[-118.43025970 24.47713661]
[-109.47254944 37.78649521]
[-95.06813812 41.97135925]
[-80.66373444 46.15622711]
[-66.07818604 49.65790558]
[-51.34387970 52.46862793]
[-36.60956955 55.27934647]
[-21.87526131 58.09006500]
[-7.14095163 60.90078735]
[0.02489719 59.06445694]
[7.80191708 63.87310791]
[22.49025917 66.91491699]
[37.17860031 69.95672607]
[51.86694336 72.99853516]
[66.55528259 76.04034424]
[81.24362946 79.08215332]
[88.18987274 77.89650726]
[94.54076385 78.66119385]
[99.80609894 81.00962830]
[103.63842773 84.46371460]
[105.85558319 88.48096466]
[106.44894409 92.50547028]
[105.57712555 96.01850891]
[120.45884705 94.13851166]
[135.34056091 92.25851440]
[150.22229004 90.37851715]
[165.10400391 88.49851227]
[179.98573303 86.61851501]
[194.86744690 84.73851776]
[209.74917603 82.85852051]
[220.88372803 63.34265518]
[242.19401550 56.99640656]
[261.77545166 67.02813721]
[275.14056396 60.21828079]
[288.50564575 53.40842438]
[301.87075806 46.59856415]
[310.65414429 33.43943405]
[325.50686646 34.55535889]
[338.87197876 27.74550056]
[345.10449219 21.05513382]
[352.50091553 20.93550491]
[365.97131348 14.33641815]
[379.44174194 7.73733044]
[392.91213989 1.13824308]
[398.11706543 -13.54326344]
[411.87197876 -20.04378510]
[425.83648682 -14.99122047]
[439.30688477 -21.59030724]
[452.77731323 -28.18939590]
[453.92004395 -43.44198227]
[462.48730469 -55.99183655]
[476.09555054 -62.52500153]
[491.04675293 -61.37717819]
[503.33322144 -52.95647812]
[516.80364990 -59.55556488]
[530.27404785 -66.15465546]
[535.18603516 -78.08721924]
[546.54864502 -83.30424500]
[558.03826904 -79.50282288]
[571.61071777 -85.88951111]
[585.18310547 -92.27619934]
[598.75549316 -98.66288757]
[607.94787598 -111.53963470]
[622.75823975 -109.95772552]
[636.33062744 -116.34441376]
[640.42004395 -121.55784607]
[645.73217773 -123.60877228]
[650.43115234 -122.71104431]
[664.19750977 -128.66825867]
[677.96380615 -134.62547302]
[683.43243408 -146.31341553]
[695.02819824 -150.98939514]
[706.32604980 -146.65095520]
[720.18420410 -152.39120483]
[734.04241943 -158.13145447]
[743.59088135 -171.46408081]
[759.88281250 -169.59211731]
[766.15850830 -154.44128418]
[755.96203613 -141.59745789]
[739.78265381 -144.27326965]
[725.92443848 -138.53302002]
[712.06628418 -132.79275513]
[702.15447998 -118.31552887]
[683.92102051 -120.85916138]
[670.15472412 -114.90193939]
[656.38836670 -108.94472504]
[642.71734619 -102.77201080]
[629.14495850 -96.38532257]
[620.92333984 -83.96539307]
[605.14221191 -85.09048462]
[591.56976318 -78.70379639]
[577.99737549 -72.31710052]
[564.42498779 -65.93041229]
[555.20617676 -51.00234604]
[536.87310791 -52.68423843]
[523.40270996 -46.08515167]
[509.93231201 -39.48606491]
[509.05551147 -24.61673927]
[500.79876709 -12.09946346]
[487.29595947 -5.35106850]
[472.12869263 -6.27350044]
[459.37640381 -14.71898174]
[445.90597534 -8.11989403]
[432.43557739 -1.52080643]
[427.86892700 12.61006355]
[414.30203247 19.49436760]
[399.51123047 14.60865688]
[386.04083252 21.20774460]
[372.57040405 27.80683136]
[359.10000610 34.40591812]
[345.68182373 41.11059952]
[332.31674194 47.92045593]
[324.48931885 60.59250259]
[308.68060303 59.96366501]
[295.31552124 66.77352142]
[281.95040894 73.58338165]
[268.58532715 80.39323425]
[269.14312744 89.13394165]
[267.10107422 97.65103912]
[262.64038086 105.18849182]
[256.15701294 111.07722473]
[261.01577759 125.26850891]
[265.98583984 139.42118835]
[271.06692505 153.53439331]
[276.14797974 167.64761353]
[281.22906494 181.76081848]
[286.31011963 195.87403870]
[297.36431885 208.72865295]
[288.07217407 222.90934753]
[271.87335205 217.90596008]
[272.19689941 200.95510864]
[267.11584473 186.84188843]
[262.03475952 172.72868347]
[256.95370483 158.61546326]
[251.87263489 144.50225830]
[246.64431763 139.26907349]
[246.82449341 130.12727356]
[241.96572876 115.93598938]
[232.66914368 115.36300659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 90]
[3 89]
[4 88]
[5 87]
[6 86]
[7 85]
[8 84]
[9 83]
[10 36]
[11 35]
[12 34]
[14 32]
[15 31]
[17 30]
[18 29]
[19 28]
[20 27]
[37 76]
[38 75]
[39 74]
[40 73]
[41 72]
[42 71]
[43 69]
[44 68]
[45 67]
[46 66]
[47 65]
[54 64]
[55 63]
[56 62]
[93 177]
[94 176]
[95 175]
[96 174]
[98 172]
[99 171]
[101 170]
[102 169]
[103 168]
[104 167]
[107 164]
[108 163]
[109 162]
[114 157]
[115 156]
[116 155]
[119 153]
[120 152]
[121 151]
[122 150]
[124 148]
[125 147]
[128 146]
[129 145]
[130 144]
[133 142]
[134 141]
[135 140]
[181 198]
[182 197]
[183 195]
[184 194]
[185 193]
[186 192]
[187 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
