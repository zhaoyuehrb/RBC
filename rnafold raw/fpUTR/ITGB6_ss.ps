%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUAAAUCAUGUUGAAGUUGCUUUUAAACACAGCUUUUCUGCUUUACCUGUCCAGGUAGCCUCUGUUUUCAUUUCAGUCUUAAUGAAAACUUUCUAACUUAUAUCUCAAGUUUCUUUUCAAAGCAGUGUAAGUAGUAUUUAAAAUGUUAUACUUCAAGAAAGAAAGACUUUAACGAUAUUCAGCGUUGGUCUUGUAACGCUGAAGGUAAUUCAUUUUUUAAUCGGUCUGCACAGCAAGAACUGAAACGA\
) } def
/len { sequence length } bind def

/coor [
[645.66851807 444.52322388]
[633.13812256 436.27767944]
[620.60772705 428.03216553]
[608.07727051 419.78662109]
[594.22863770 425.20434570]
[579.67303467 421.38333130]
[570.04589844 409.58624268]
[569.20147705 394.20468140]
[556.67108154 385.95913696]
[539.11132812 385.86791992]
[531.01208496 369.31729126]
[516.12152100 368.97085571]
[508.67132568 355.01358032]
[496.03869629 346.92550659]
[483.40606689 338.83743286]
[470.77343750 330.74938965]
[458.14080811 322.66131592]
[445.50820923 314.57324219]
[432.87557983 306.48519897]
[413.53103638 306.98614502]
[404.59448242 288.89807129]
[391.76336670 281.12872314]
[378.88388062 273.43984985]
[365.95654297 265.83169556]
[353.02917480 258.22357178]
[340.10183716 250.61544800]
[327.17449951 243.00730896]
[314.24713135 235.39918518]
[301.31979370 227.79104614]
[286.42669678 228.00384521]
[278.45782471 214.33609009]
[265.53048706 206.72796631]
[250.63739014 206.94076538]
[242.66850281 193.27301025]
[229.74116516 185.66487122]
[216.81381226 178.05674744]
[203.88645935 170.44860840]
[187.78761292 175.35346985]
[172.83409119 166.92022705]
[168.53575134 149.95036316]
[155.51419067 142.50462341]
[142.49263000 135.05889893]
[129.47108459 127.61315155]
[116.44952393 120.16741943]
[103.42796326 112.72167969]
[88.55731201 110.75602722]
[74.04837799 114.56269836]
[59.53943634 118.36937714]
[45.03050232 122.17604828]
[30.52156448 125.98271942]
[19.25225067 137.89634705]
[3.36500096 133.83096313]
[-0.79674393 117.96868896]
[11.04826260 106.62726593]
[26.71489143 111.47377777]
[41.22382736 107.66710663]
[55.73276520 103.86043549]
[70.24169922 100.05376434]
[84.75064087 96.24709320]
[85.26653290 88.76485443]
[70.30205536 87.73307800]
[55.33760071 86.70106506]
[56.36984253 71.73662567]
[71.33383942 72.76860809]
[86.29830933 73.80038452]
[86.81420135 66.31814575]
[72.96500397 60.55622101]
[59.11581039 54.79429626]
[45.26661301 49.03237152]
[31.41741943 43.27044296]
[17.56822395 37.50851822]
[3.71902847 31.74659157]
[-10.13016701 25.98466492]
[-23.97936249 20.22274017]
[-37.15182877 28.42430687]
[-52.62690353 27.28335190]
[-64.45409393 17.23859596]
[-68.08561707 2.15245414]
[-62.12506485 -12.17414665]
[-48.86440277 -20.23233414]
[-33.40261841 -18.92357254]
[-21.68508530 -8.75110531]
[-18.21743584 6.37354422]
[-4.36824083 12.13547039]
[9.48095417 17.89739609]
[23.33015060 23.65932274]
[37.17934418 29.42124939]
[51.02854156 35.18317413]
[64.87773895 40.94510269]
[78.72692871 46.70702744]
[92.57612610 52.46895218]
[97.55494690 46.85991287]
[83.80884552 40.85618591]
[85.27098083 25.92761612]
[99.92072296 22.70502853]
[107.51259613 35.64183426]
[112.49141693 30.03279495]
[105.12731171 16.96489525]
[97.76321411 3.89699483]
[90.39910889 -9.17090511]
[83.03501129 -22.23880577]
[67.63191223 -24.93667984]
[57.60623169 -36.93750381]
[57.69179153 -52.57485199]
[67.84819031 -64.46524811]
[83.27989197 -66.99441528]
[96.70051575 -58.96814728]
[101.77324677 -44.17621231]
[96.10291290 -29.60290718]
[103.46701050 -16.53500748]
[110.83111572 -3.46710658]
[118.19521332 9.60079288]
[125.55931854 22.66869354]
[140.14533997 26.16837502]
[152.38465881 34.84011459]
[160.52258301 47.44068146]
[163.39239502 62.16359711]
[160.58267212 76.89809418]
[152.49623108 89.53176117]
[140.29240417 98.25336456]
[125.72077179 101.81253052]
[110.87370300 99.70011902]
[123.89525604 107.14585876]
[136.91680908 114.59159851]
[149.93836975 122.03733063]
[162.95993042 129.48307800]
[175.98149109 136.92880249]
[188.46746826 131.91911316]
[201.37246704 134.96269226]
[210.04585266 144.73287964]
[211.49459839 157.52127075]
[224.42193604 165.12939453]
[237.34928894 172.73753357]
[250.27664185 180.34565735]
[266.09436035 180.67704773]
[273.13861084 193.80061340]
[286.06594849 201.40875244]
[301.88369751 201.74012756]
[308.92791748 214.86370850]
[321.85525513 222.47183228]
[334.78262329 230.07997131]
[347.70996094 237.68809509]
[360.63729858 245.29623413]
[373.56466675 252.90435791]
[386.49200439 260.51248169]
[395.44955444 262.16070557]
[399.53268433 268.29760742]
[412.36380005 276.06695557]
[422.72695923 272.87252808]
[432.93109131 275.83361816]
[439.68948364 283.74597168]
[440.96362305 293.85256958]
[453.59625244 301.94061279]
[466.22888184 310.02868652]
[478.86151123 318.11676025]
[491.49414062 326.20480347]
[504.12677002 334.29287720]
[516.75939941 342.38095093]
[532.55352783 343.30587769]
[539.10015869 356.68466187]
[551.82568359 354.68801880]
[562.17504883 361.66363525]
[564.91662598 373.42871094]
[577.44702148 381.67425537]
[591.90753174 376.36401367]
[606.55102539 380.53802490]
[615.81921387 392.39404297]
[616.32281494 407.25619507]
[628.85327148 415.50173950]
[641.38366699 423.74728394]
[653.91406250 431.99282837]
[664.12677002 422.44821167]
[676.77050781 416.00561523]
[690.91125488 413.27221680]
[705.46759033 414.57629395]
[719.29284668 419.93255615]
[731.26605225 429.03219604]
[740.38226318 441.25836182]
[745.83648682 455.72723389]
[747.09375000 471.35156250]
[762.00891113 472.94439697]
[776.92413330 474.53720093]
[791.83929443 476.13003540]
[806.75451660 477.72283936]
[821.66967773 479.31567383]
[836.58489990 480.90850830]
[851.50006104 482.50131226]
[866.41528320 484.09414673]
[881.33044434 485.68695068]
[893.47033691 475.56771851]
[909.20214844 477.07968140]
[919.19244385 489.32586670]
[917.51422119 505.04080200]
[905.16308594 514.90112305]
[889.46679688 513.05682373]
[879.73760986 500.60214233]
[864.82244873 499.00933838]
[849.90722656 497.41650391]
[834.99206543 495.82366943]
[820.07684326 494.23086548]
[805.16168213 492.63803101]
[790.24645996 491.04522705]
[775.33129883 489.45239258]
[760.41607666 487.85958862]
[745.50091553 486.26675415]
[741.10772705 492.34539795]
[753.43341064 500.89395142]
[765.75909424 509.44250488]
[778.08471680 517.99108887]
[790.41040039 526.53961182]
[802.73608398 535.08819580]
[815.06176758 543.63671875]
[828.80389404 549.64947510]
[828.33764648 564.64227295]
[814.24841309 569.78948975]
[804.22723389 558.62792969]
[792.24291992 549.60705566]
[780.25860596 540.58618164]
[768.27429199 531.56530762]
[756.28997803 522.54443359]
[744.30566406 513.52355957]
[732.32135010 504.50268555]
[727.92816162 510.58132935]
[734.12054443 524.24346924]
[740.31292725 537.90563965]
[746.50531006 551.56781006]
[752.69769287 565.22991943]
[758.97546387 578.85308838]
[765.33837891 592.43664551]
[771.78613281 605.98016357]
[778.31854248 619.48303223]
[790.65930176 631.10809326]
[782.90472412 646.18469238]
[766.27069092 642.90679932]
[764.81567383 626.01544189]
[758.28326416 612.51257324]
[752.55609131 607.87213135]
[751.75482178 598.79956055]
[745.39190674 585.21594238]
[739.72326660 580.50421143]
[739.03558350 571.42230225]
[732.84320068 557.76019287]
[726.65081787 544.09802246]
[720.45837402 530.43585205]
[714.26599121 516.77374268]
[695.28485107 520.69140625]
[676.43908691 517.95440674]
[659.95214844 509.11764526]
[647.69006348 495.44177246]
[640.95068359 478.71823120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 171]
[2 170]
[3 169]
[4 168]
[8 164]
[9 163]
[11 160]
[13 158]
[14 157]
[15 156]
[16 155]
[17 154]
[18 153]
[19 152]
[21 148]
[22 147]
[23 145]
[24 144]
[25 143]
[26 142]
[27 141]
[28 140]
[29 139]
[31 137]
[32 136]
[34 134]
[35 133]
[36 132]
[37 131]
[40 127]
[41 126]
[42 125]
[43 124]
[44 123]
[45 122]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[73 84]
[74 83]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
[180 205]
[181 204]
[182 203]
[183 202]
[184 201]
[185 200]
[186 199]
[187 198]
[188 197]
[189 196]
[223 245]
[224 244]
[225 243]
[226 242]
[227 241]
[228 239]
[229 238]
[230 236]
[231 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
