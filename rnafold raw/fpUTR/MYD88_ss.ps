%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUUCCUACUUCUUACGCCCCCCACAUCACCCGCCUCGAGACCUCAAGGGUAGAGGUGGGCACCCCCGCCUCCGCACUUUUGCUCGGGGCUCCAGAUUGUAGGGCAGGGCGGCGCUUCUCGGAAAGCGAAAGCCGGCGGGGCGGGGCGGGUGCCGCAGGAGAAAGAGGAAGCGCUGGCAGACA\
) } def
/len { sequence length } bind def

/coor [
[83.51253510 274.68887329]
[97.27362061 268.71954346]
[112.09650421 271.01782227]
[123.40472412 280.87527466]
[120.86971283 266.09103394]
[118.33470154 251.30680847]
[115.79969025 236.52256775]
[113.26467896 221.73832703]
[100.99374390 213.37413025]
[98.21227264 198.41691589]
[107.06861115 185.60275269]
[104.53359985 170.81851196]
[101.99858856 156.03427124]
[99.46357727 141.25003052]
[96.92855835 126.46579742]
[77.43177795 114.16146851]
[74.83308411 91.25366211]
[62.62340927 82.54023743]
[50.41373062 73.82681274]
[38.20405197 65.11338806]
[25.99437332 56.39996338]
[13.63849545 47.89512253]
[1.13998008 39.60132599]
[-11.35853481 31.30752373]
[-23.92702103 23.12014389]
[-36.56456757 15.03977489]
[-49.20211792 6.95940542]
[-61.90781784 -1.01337123]
[-74.68075562 -8.87798023]
[-88.18651581 -1.69873047]
[-103.37216187 -2.23999381]
[-116.16296387 -10.25633335]
[-123.17696381 -23.51000404]
[-122.61895752 -38.39470291]
[-135.39189148 -46.25931168]
[-148.16482544 -54.12392044]
[-160.93777466 -61.98852921]
[-173.71070862 -69.85314178]
[-186.48364258 -77.71775055]
[-199.25657654 -85.58235931]
[-212.02951050 -93.44696808]
[-216.42340088 -93.41066742]
[-220.21162415 -94.66110229]
[-223.06146240 -96.84594727]
[-224.79045105 -99.54061127]
[-225.37684631 -102.30402374]
[-237.58651733 -111.01744843]
[-249.79620361 -119.73087311]
[-262.00588989 -128.44430542]
[-274.21554565 -137.15773010]
[-286.42523193 -145.87113953]
[-298.63491821 -154.58456421]
[-318.75329590 -155.59011841]
[-326.04342651 -173.48506165]
[-338.54196167 -181.77885437]
[-351.04046631 -190.07266235]
[-363.53897095 -198.36645508]
[-376.03750610 -206.66024780]
[-388.53601074 -214.95405579]
[-401.03451538 -223.24784851]
[-413.53305054 -231.54165649]
[-429.92517090 -232.02151489]
[-437.46643066 -246.58384705]
[-428.39901733 -260.24816895]
[-412.05068970 -258.95782471]
[-405.23925781 -244.04017639]
[-392.74072266 -235.74636841]
[-380.24221802 -227.45257568]
[-367.74371338 -219.15876770]
[-355.24517822 -210.86497498]
[-342.74667358 -202.57116699]
[-330.24816895 -194.27737427]
[-317.74963379 -185.98356628]
[-307.92901611 -188.90588379]
[-297.91458130 -185.86471558]
[-291.09655762 -177.63652039]
[-289.92147827 -166.79425049]
[-277.71182251 -158.08082581]
[-265.50213623 -149.36740112]
[-253.29244995 -140.65397644]
[-241.08277893 -131.94055176]
[-228.87309265 -123.22712708]
[-216.66342163 -114.51370239]
[-204.16490173 -106.21990204]
[-191.39196777 -98.35529327]
[-178.61903381 -90.49068451]
[-165.84609985 -82.62607574]
[-153.07315063 -74.76146698]
[-140.30021667 -66.89685822]
[-127.52728271 -59.03224945]
[-114.75434875 -51.16764069]
[-101.71463013 -58.36704636]
[-86.72235870 -58.07091904]
[-73.80589294 -50.25866318]
[-66.48595428 -36.94268799]
[-66.81614685 -21.65091705]
[-54.04320908 -13.78630829]
[-46.68214417 -12.95467377]
[-41.12174606 -5.67814302]
[-28.48419952 2.40222669]
[-15.84665012 10.48259640]
[-8.50076962 11.43910789]
[-3.06473541 18.80900955]
[9.43377972 27.10280800]
[21.93229485 35.39661026]
[26.72861862 35.33884048]
[31.60746193 38.30901337]
[34.70779800 44.19028473]
[46.91747665 52.90370941]
[59.12715530 61.61713409]
[71.33683014 70.33055878]
[83.54650879 79.04398346]
[95.90696716 61.78459167]
[121.94634247 54.82411575]
[134.44485474 46.53031540]
[146.94337463 38.23651505]
[159.44187927 29.94271469]
[171.94039917 21.64891434]
[174.82695007 6.11046648]
[187.90249634 -2.76677918]
[203.40956116 0.28388998]
[212.14807129 13.45256615]
[208.93362427 28.92650795]
[195.67329407 37.52529907]
[180.23420715 34.14743042]
[167.73568726 42.44123077]
[155.23716736 50.73503113]
[142.73864746 59.02883148]
[130.24014282 67.32263184]
[132.49711609 74.47497559]
[147.14239502 77.71781158]
[137.01107788 88.77966309]
[139.26806641 95.93200684]
[154.26319885 95.54996490]
[169.25833130 95.16792297]
[181.30769348 84.57582092]
[197.07563782 87.53406525]
[204.46636963 101.77333069]
[197.81033325 116.37047577]
[182.21347046 120.12782288]
[169.64038086 110.16305542]
[154.64523315 110.54509735]
[139.65010071 110.92714691]
[136.86441040 125.66620636]
[152.58662415 123.89905548]
[161.30743408 135.97367859]
[175.12878418 141.80206299]
[188.95014954 147.63044739]
[205.14622498 145.05772400]
[215.26071167 157.96623230]
[208.88867188 173.07679749]
[192.58512878 174.84497070]
[183.12176514 161.45181274]
[169.30039978 155.62342834]
[155.47904968 149.79504395]
[140.74543762 151.97908020]
[131.03602600 139.48756409]
[123.77379608 135.06462097]
[117.30830383 129.84851074]
[111.71279907 123.93078613]
[114.24781036 138.71502686]
[116.78282166 153.49926758]
[119.31784058 168.28349304]
[121.85285187 183.06773376]
[134.47219849 192.19953918]
[136.83245850 207.22897339]
[128.04891968 219.20330811]
[130.58392334 233.98754883]
[133.11894226 248.77178955]
[135.65394592 263.55603027]
[138.18896484 278.34027100]
[141.84524536 292.88781738]
[146.60147095 307.11380005]
[159.23307800 317.57202148]
[156.22540283 333.69299316]
[140.67248535 338.89285278]
[128.57382202 327.82241821]
[132.37548828 311.87002563]
[127.61927032 297.64404297]
[122.31636047 311.67541504]
[110.34203339 320.70953369]
[95.39396667 321.95666504]
[82.08815002 315.03170776]
[74.53342438 302.07308960]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 171]
[5 170]
[6 169]
[7 168]
[8 167]
[11 164]
[12 163]
[13 162]
[14 161]
[15 160]
[17 112]
[18 111]
[19 110]
[20 109]
[21 108]
[22 105]
[23 104]
[24 103]
[25 101]
[26 100]
[27 99]
[28 97]
[29 96]
[34 91]
[35 90]
[36 89]
[37 88]
[38 87]
[39 86]
[40 85]
[41 84]
[46 83]
[47 82]
[48 81]
[49 80]
[50 79]
[51 78]
[52 77]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[114 129]
[115 128]
[116 127]
[117 126]
[118 125]
[133 143]
[134 142]
[135 141]
[144 157]
[146 155]
[147 154]
[148 153]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
