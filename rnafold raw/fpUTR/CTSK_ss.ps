%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACAUGCUGCAUACACACAGAAACACUGCAAAUCCACUGCCUCCUUCCCUCCUCCCUACCCUUCCUUCUCUCAGCAUUUCUAUCCCCGCCUCCUCCUCUUACCCAAAUUUUCCAGCCGAUCACUGGAGCUGACUUCCGCAAUCCCGAUGGAAUAAAUCUAGCACCCCUGAUGGUGUGCCCACACUUUGCUGCCGAAACGAAGCCAGACAACAGAUUUCCAUCAGCAGG\
) } def
/len { sequence length } bind def

/coor [
[131.12236023 207.62905884]
[120.12303925 218.44657898]
[105.01678467 221.57778931]
[90.62393951 216.02355957]
[81.53720856 203.55621338]
[80.65613556 188.15402222]
[88.26187134 174.73179626]
[101.92744446 167.57249451]
[103.15538788 152.62283325]
[104.38333130 137.67318726]
[105.61127472 122.72353363]
[100.06059265 117.67972565]
[91.81572723 130.21057129]
[86.93362427 144.39384460]
[72.40316772 148.11753845]
[61.30134201 138.03044128]
[63.61945724 123.21064758]
[77.27274323 116.99562073]
[88.95923615 107.59211731]
[83.40855408 102.54831696]
[68.64441681 105.19786072]
[53.88027191 107.84741211]
[39.11613083 110.49696350]
[24.35198975 113.14651489]
[15.31829739 125.83628082]
[0.30761430 128.31297302]
[-11.73446655 119.62252808]
[-26.49860954 122.27207947]
[-41.26274872 124.92163086]
[-40.69115448 139.93560791]
[-42.21474075 154.88299561]
[-45.80385208 169.47286987]
[-51.38862228 183.42123413]
[-58.86034393 196.45654297]
[-68.07357788 208.32508850]
[-78.84899139 218.79585266]
[-90.97682190 227.66499329]
[-104.22101593 234.75988770]
[-118.32376099 239.94242859]
[-133.01054382 243.11172485]
[-147.99548340 244.20611572]
[-162.98689270 243.20425415]
[-177.69296265 240.12568665]
[-191.82743835 235.03030396]
[-205.11517334 228.01730347]
[-217.29753113 219.22320557]
[-228.13737488 208.81916809]
[-237.42370605 197.00772095]
[-244.97576904 184.01878357]
[-250.64654541 170.10517883]
[-254.32565308 155.53773499]
[-255.94148254 140.60003662]
[-255.46258545 125.58280945]
[-252.89828491 110.77840424]
[-248.29849243 96.47497559]
[-241.75273132 82.95095062]
[-233.38844299 70.46958160]
[-223.36842346 59.27381134]
[-211.88771057 49.58157349]
[-199.16978455 41.58153152]
[-185.46221924 35.42940903]
[-171.03181458 31.24495888]
[-156.15946960 29.10963058]
[-141.13468933 29.06499100]
[-126.24992371 31.11190796]
[-111.79491425 35.21053696]
[-98.05102539 41.28109741]
[-85.28579712 49.20542526]
[-73.74769592 58.82926941]
[-63.66132355 69.96530151]
[-55.22300720 82.39675140]
[-48.59700775 95.88164520]
[-43.91230011 110.15748596]
[-29.14815712 107.50793457]
[-14.38401604 104.85839081]
[-6.11520100 92.52297974]
[8.81999493 89.62564087]
[21.70244026 98.38237000]
[36.46658325 95.73281860]
[51.23072433 93.08327484]
[65.99486542 90.43372345]
[80.75901031 87.78417206]
[66.53199005 83.03106689]
[52.30497742 78.27795410]
[38.07796478 73.52484894]
[23.85094833 68.77173615]
[8.90837669 70.08306122]
[-5.93798876 67.94169617]
[-19.90094376 62.46119308]
[-32.24011993 53.93214417]
[-42.30125809 42.80678940]
[-49.55088043 29.67503357]
[-53.60458374 15.23316860]
[-54.24742889 0.24694982]
[-51.44532776 -14.48900032]
[-45.34686279 -28.19333267]
[-36.27539062 -40.13939285]
[-24.71191216 -49.69376373]
[-11.26956463 -56.34983826]
[3.33889174 -59.75468826]
[18.33886719 -59.72777557]
[32.93501282 -56.27052689]
[46.35338974 -49.56626129]
[57.88250732 -39.97045517]
[66.91105652 -27.99192047]
[72.96030426 -14.26579285]
[75.70951080 0.48011750]
[75.01186371 15.47023106]
[80.34380341 29.49058914]
[85.67574310 43.51094437]
[91.00768280 57.53130341]
[96.33962250 71.55165863]
[98.38211823 56.69137192]
[100.42462158 41.83108139]
[102.46712494 26.97079277]
[104.50962067 12.11050320]
[93.87742615 0.64357805]
[93.15512085 -14.97731495]
[102.68376160 -27.37646675]
[117.96421814 -30.69937897]
[131.78152466 -23.37707329]
[137.61155701 -8.86691761]
[132.70158386 5.97983551]
[119.36991119 14.15300274]
[117.32740784 29.01329231]
[115.28491211 43.87358093]
[113.24240875 58.73387146]
[111.19991302 73.59416199]
[125.36779785 78.52070618]
[132.98577881 65.59915924]
[126.68047333 51.42090988]
[129.94606018 36.25135040]
[141.52685547 25.92348671]
[156.96981812 24.40859222]
[170.33679199 32.28917313]
[176.48791504 46.53499222]
[173.05795288 61.66823196]
[161.36579895 71.86985779]
[145.90733337 73.21714020]
[138.28935242 86.13868713]
[140.84915161 93.18832397]
[150.49961853 81.70491791]
[165.26977539 84.32067108]
[170.38964844 98.41985321]
[160.73939514 109.90344238]
[145.96875000 107.28760529]
[148.52856445 114.33724213]
[162.66247559 119.36043549]
[176.79638672 124.38363647]
[190.93029785 129.40682983]
[205.06420898 134.43002319]
[219.19812012 139.45321655]
[233.33204651 144.47640991]
[238.43923950 143.53546143]
[242.94958496 144.53897095]
[246.22454834 146.93685913]
[247.93487549 150.00575256]
[261.85113525 155.60374451]
[275.76739502 161.20172119]
[289.68368530 166.79971313]
[304.83892822 153.76489258]
[329.95645142 159.06892395]
[344.93408203 158.24978638]
[359.91171265 157.43064880]
[374.88931274 156.61151123]
[388.24636841 148.13214111]
[401.37716675 155.16287231]
[416.35479736 154.34373474]
[429.78469849 144.93258667]
[444.53366089 152.10198975]
[445.42919922 168.47665405]
[431.55007935 177.21174622]
[417.17391968 169.32135010]
[402.19631958 170.14048767]
[389.91055298 178.56126404]
[375.70846558 171.58912659]
[360.73083496 172.40826416]
[345.75323486 173.22740173]
[330.77560425 174.04653931]
[328.31231689 181.13049316]
[342.48022461 186.05703735]
[357.47708130 186.36453247]
[361.81872559 200.72245789]
[349.50506592 209.28829956]
[337.55368042 200.22492981]
[323.38577271 195.29837036]
[320.92251587 202.38232422]
[332.16061401 212.31735229]
[343.39871216 222.25239563]
[354.70440674 232.11045837]
[366.07717896 241.89106750]
[377.44992065 251.67167664]
[392.95803833 254.80366516]
[397.56262207 268.96865845]
[412.63165283 265.26690674]
[426.98587036 271.16064453]
[435.10577393 284.38360596]
[433.86904907 299.85131836]
[423.75128174 311.61611938]
[408.64294434 315.15420532]
[394.35351562 309.10510254]
[386.37756348 295.79479980]
[387.78198242 280.34140015]
[373.08734131 277.90899658]
[367.66931152 263.04443359]
[356.29656982 253.26382446]
[344.92379761 243.48321533]
[337.81259155 241.50759888]
[333.46368408 233.49050903]
[322.22558594 223.55546570]
[310.98745728 213.62042236]
[286.97665405 201.42939758]
[284.08569336 180.71598816]
[270.16943359 175.11799622]
[256.25314331 169.52001953]
[242.33688354 163.92202759]
[228.30885315 158.61032104]
[214.17492676 153.58712769]
[200.04101562 148.56393433]
[185.90710449 143.54074097]
[171.77319336 138.51754761]
[157.63928223 133.49435425]
[143.50537109 128.47116089]
[131.39787292 127.56319427]
[120.56092834 123.95147705]
[119.33298492 138.90112305]
[118.10504150 153.85078430]
[116.87709808 168.80043030]
[129.19128418 178.09367371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 228]
[9 227]
[10 226]
[11 225]
[20 82]
[21 81]
[22 80]
[23 79]
[24 78]
[27 75]
[28 74]
[29 73]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[129 140]
[130 139]
[147 223]
[148 222]
[149 221]
[150 220]
[151 219]
[152 218]
[153 217]
[157 216]
[158 215]
[159 214]
[160 213]
[162 179]
[163 178]
[164 177]
[165 176]
[167 174]
[168 173]
[187 211]
[188 210]
[189 209]
[190 207]
[191 206]
[192 205]
[194 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
