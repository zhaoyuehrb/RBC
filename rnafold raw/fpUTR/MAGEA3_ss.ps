%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUUCUCGCCCUGAGCAACGAGCGACGGCCUGACGUCGGCGGAGGGAAGCCGGCCCAGGCUCGGUGAGGAGGCAAGGUUCUGAGGGGACAGGCUGACCUGGAGGACCAGAGGCCCCCGGAGGAGCACUGAAGGAGAAGAUCUGCCAGUGGGUCUCCAUUGCCCAGCUCCUGCCCACACUCCCGCCUGUUGCCCUGACCAGAGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[82.61980438 455.70303345]
[82.55046844 439.89889526]
[93.73583221 428.73364258]
[93.51144409 413.73532104]
[93.28704834 398.73699951]
[93.06266022 383.73867798]
[92.83826447 368.74035645]
[92.61387634 353.74203491]
[89.37039948 347.10046387]
[92.50000000 338.51806641]
[81.81912994 328.20037842]
[81.60544586 312.98825073]
[92.50000000 301.85510254]
[84.76270294 289.12783813]
[92.50000000 275.32766724]
[84.76270294 262.60040283]
[92.50000000 248.80023193]
[92.50000000 233.80023193]
[92.50000000 218.80023193]
[92.50000000 203.80023193]
[92.50000000 188.80023193]
[92.50000000 173.80023193]
[84.76270294 161.07295227]
[92.50000000 147.27278137]
[92.50000000 132.27278137]
[92.50000000 117.27278137]
[80.70787048 108.44599915]
[78.01194763 92.32490540]
[63.25300217 95.00325775]
[48.51450729 97.79193115]
[33.79727936 100.69077301]
[19.08005524 103.58960724]
[4.36282921 106.48844910]
[-10.35439682 109.38729095]
[-18.17559624 119.64422607]
[-30.49384689 121.75535583]
[-40.61294556 115.12646484]
[-55.37189102 117.80482483]
[-70.13083649 120.48317719]
[-84.88977814 123.16152954]
[-99.64871979 125.83988190]
[-114.40766144 128.51823425]
[-121.01869202 142.55653381]
[-134.63481140 149.99838257]
[-150.02033997 147.98220825]
[-161.25924683 137.28330994]
[-164.02992249 122.01559448]
[-157.26699829 108.04983521]
[-143.57095337 100.75614166]
[-128.20819092 102.93908691]
[-117.08602142 113.75929260]
[-102.32707214 111.08094025]
[-87.56813049 108.40258789]
[-72.80918884 105.72422791]
[-58.05024338 103.04587555]
[-43.29129791 100.36752319]
[-30.53580284 88.31544495]
[-13.25323582 94.67005920]
[1.46399021 91.77122498]
[16.18121529 88.87238312]
[30.89844131 85.97354889]
[45.61566925 83.07470703]
[51.57134247 78.69745636]
[60.57464981 80.24431610]
[75.33359528 77.56596375]
[87.66362762 69.02369690]
[95.35711670 56.14696121]
[103.05060577 43.27022934]
[100.66162109 30.59471703]
[107.33525848 20.02785110]
[119.03247833 16.94348526]
[120.88182831 7.99741220]
[127.13234711 4.05261898]
[135.20761108 -8.58819485]
[143.28286743 -21.22900963]
[151.35812378 -33.86982346]
[153.34109497 -42.78723145]
[159.64993286 -46.63807678]
[167.91337585 -59.15667725]
[164.95428467 -74.44985962]
[173.51293945 -87.02778625]
[188.11088562 -89.75458527]
[196.37434387 -102.27318573]
[204.63780212 -114.79178619]
[206.75393677 -123.67852783]
[213.11967468 -127.43457031]
[221.56947327 -139.82815552]
[225.66807556 -154.25733948]
[224.99510193 -169.24223328]
[216.55517578 -176.10501099]
[213.35186768 -186.27061462]
[216.21260071 -196.30976868]
[223.96044922 -202.97332764]
[223.73606873 -217.97164917]
[223.51167297 -232.96997070]
[223.28727722 -247.96829224]
[215.05644226 -255.08049011]
[212.15867615 -265.33737183]
[215.31845093 -275.28643799]
[223.26217651 -281.71524048]
[223.48657227 -296.71356201]
[223.71096802 -311.71188354]
[223.93536377 -326.71020508]
[215.48091125 -340.76205444]
[223.65859985 -354.97674561]
[240.05590820 -354.73141479]
[247.80470276 -340.27847290]
[238.93368530 -326.48580933]
[238.70928955 -311.48748779]
[238.48489380 -296.48916626]
[238.26049805 -281.49084473]
[248.88758850 -265.33737183]
[238.28559875 -248.19268799]
[238.50999451 -233.19436646]
[238.73439026 -218.19604492]
[238.95877075 -203.19772339]
[250.06433105 -187.36938477]
[239.97999573 -169.91520691]
[240.65296936 -154.93031311]
[253.91470337 -147.92127991]
[266.67489624 -155.80653381]
[279.43508911 -163.69178772]
[292.19531250 -171.57705688]
[304.95550537 -179.46231079]
[308.69912720 -194.58259583]
[321.75213623 -202.39758301]
[336.14392090 -198.73542786]
[348.90414429 -206.62068176]
[361.66433716 -214.50593567]
[374.42453003 -222.39118958]
[387.18472290 -230.27644348]
[390.92837524 -245.39672852]
[403.98135376 -253.21173096]
[418.37316895 -249.54956055]
[431.13336182 -257.43481445]
[443.89358521 -265.32006836]
[448.96493530 -280.54049683]
[464.07568359 -285.92980957]
[477.63415527 -277.35382080]
[479.23944092 -261.39129639]
[467.66009521 -250.28729248]
[451.77883911 -252.55987549]
[439.01861572 -244.67462158]
[426.25842285 -236.78935242]
[423.09613037 -222.27951050]
[410.26782227 -214.10096741]
[395.07000732 -217.51625061]
[382.30978394 -209.63099670]
[369.54959106 -201.74572754]
[356.78939819 -193.86047363]
[344.02920532 -185.97521973]
[340.86691284 -171.46537781]
[328.03857422 -163.28683472]
[312.84075928 -166.70210266]
[300.08056641 -158.81684875]
[287.32034302 -150.93159485]
[274.56015015 -143.04634094]
[261.79995728 -135.16108704]
[256.21109009 -131.14250183]
[250.17749023 -128.85220337]
[244.18106079 -128.25326538]
[238.65693665 -129.18389893]
[233.96305847 -131.37834167]
[225.51325989 -118.98476410]
[217.15638733 -106.52832794]
[208.89294434 -94.00972748]
[200.62948608 -81.49112701]
[203.85948181 -66.99620819]
[195.65748596 -54.18285370]
[180.43197632 -50.89322281]
[172.16853333 -38.37462234]
[163.99894714 -25.79456520]
[155.92367554 -13.15375042]
[147.84841919 -0.51293600]
[139.77316284 12.12787819]
[131.79267883 24.82874107]
[132.21403503 42.37234116]
[115.92733765 50.96371841]
[108.23384857 63.84045029]
[100.54035950 76.71718597]
[114.29183197 83.04557037]
[120.66803741 95.95606232]
[117.65477753 109.28044128]
[107.50000000 117.27278137]
[107.50000000 132.27278137]
[107.50000000 147.27278137]
[115.23729706 161.07295227]
[107.50000000 173.80023193]
[107.50000000 188.80023193]
[107.50000000 203.80023193]
[107.50000000 218.80023193]
[107.50000000 233.80023193]
[107.50000000 248.80023193]
[115.23729706 262.60040283]
[107.50000000 275.32766724]
[115.23729706 289.12783813]
[107.50000000 301.85510254]
[118.39455414 312.98825073]
[118.18087006 328.20037842]
[107.50000000 338.51806641]
[107.61219788 353.51763916]
[107.83658600 368.51596069]
[108.06098175 383.51428223]
[108.28536987 398.51260376]
[108.50976562 413.51092529]
[108.73415375 428.50924683]
[120.24852753 439.33489990]
[120.65200806 455.13403320]
[109.70522308 466.53329468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 206]
[4 205]
[5 204]
[6 203]
[7 202]
[8 201]
[10 200]
[13 197]
[15 195]
[17 193]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[24 186]
[25 185]
[26 184]
[28 65]
[29 64]
[30 62]
[31 61]
[32 60]
[33 59]
[34 58]
[37 56]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[66 180]
[67 179]
[68 178]
[71 176]
[73 175]
[74 174]
[75 173]
[76 172]
[78 171]
[79 170]
[82 167]
[83 166]
[84 165]
[86 164]
[87 163]
[88 119]
[89 118]
[93 116]
[94 115]
[95 114]
[96 113]
[100 111]
[101 110]
[102 109]
[103 108]
[120 158]
[121 157]
[122 156]
[123 155]
[124 154]
[127 151]
[128 150]
[129 149]
[130 148]
[131 147]
[134 144]
[135 143]
[136 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
