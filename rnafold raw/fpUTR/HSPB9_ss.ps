%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGAGCUGAGCUCGGGUAGGCCGCGCGAGGUCCCUCCUCUCCGGGCGUCCGUGCGCCUAGCUCUGCGCUGGGAGCCUCGCGCCCUUUGACAGCAGUUAGUUGCUGACUCGG\
) } def
/len { sequence length } bind def

/coor [
[56.02534485 103.42731476]
[56.66410446 91.78312683]
[42.61643600 86.52356720]
[28.56876755 81.26399994]
[14.52109814 76.00444031]
[0.47342950 70.74487305]
[-13.57423878 65.48531342]
[-27.62190819 60.22574997]
[-41.66957474 54.96618652]
[-55.71724319 49.70662308]
[-75.31113434 54.03448486]
[-87.16516876 38.86189651]
[-101.48123932 34.38417435]
[-116.96189117 37.64913559]
[-126.79917145 26.46533966]
[-141.11524963 21.98761749]
[-155.43132019 17.50989532]
[-169.74739075 13.03217316]
[-181.60560608 18.33157349]
[-193.49630737 14.20680809]
[-199.15072632 3.41533017]
[-214.71545410 6.25249338]
[-224.24082947 -5.19811678]
[-238.42808533 -10.06860924]
[-252.61535645 -14.93910122]
[-261.89035034 -14.77774906]
[-267.12322998 -20.14419937]
[-282.76022339 -17.73698997]
[-291.96646118 -29.44571877]
[-306.01412964 -34.70528030]
[-320.06179810 -39.96484375]
[-334.10949707 -45.22440720]
[-349.24801636 -39.91359711]
[-362.76177979 -48.55985260]
[-364.28417969 -64.53050995]
[-352.64736938 -75.57424164]
[-336.77807617 -73.21924591]
[-328.84991455 -59.27207565]
[-314.80224609 -54.01251221]
[-300.75457764 -48.75294876]
[-286.70690918 -43.49338531]
[-272.07467651 -46.27679443]
[-261.86367798 -34.19186783]
[-247.74485779 -29.12635994]
[-233.55760193 -24.25586700]
[-219.37034607 -19.38537598]
[-204.82037354 -22.57090950]
[-194.28022766 -10.77192879]
[-177.33657837 -15.10796165]
[-165.26966858 -1.28390157]
[-150.95359802 3.19382048]
[-136.63752747 7.67154264]
[-122.32144928 12.14926529]
[-107.86477661 8.56402588]
[-97.00351715 20.06809998]
[-82.68744659 24.54582214]
[-73.94268036 18.94028854]
[-63.33633804 19.15308571]
[-54.46049118 25.35823059]
[-50.45767975 35.65895462]
[-36.41001129 40.91851807]
[-22.36234474 46.17808151]
[-8.31467533 51.43764496]
[5.73299265 56.69720459]
[19.78066063 61.95676804]
[33.82833099 67.21633148]
[47.87599945 72.47589874]
[61.92366791 77.73545837]
[78.05151367 61.74061203]
[100.00000000 55.89198685]
[121.94848633 61.74061203]
[138.07633972 77.73545837]
[152.12400818 72.47589874]
[166.17167664 67.21633148]
[176.38270569 55.13140488]
[191.01492310 57.91481400]
[205.06259155 52.65525055]
[217.77604675 41.43899155]
[232.07339478 50.55062866]
[227.27575684 66.81159210]
[210.32215881 66.70291901]
[196.27449036 71.96248627]
[187.06823730 83.67121124]
[171.43122864 81.26399994]
[157.38356018 86.52356720]
[143.33589172 91.78312683]
[144.03880310 97.52999115]
[143.98292542 103.31941223]
[143.16925049 109.05164337]
[141.61178589 114.62791443]
[139.33737183 119.95214844]
[136.38517761 124.93262482]
[147.13691711 135.39207458]
[157.88865662 145.85153198]
[168.64039612 156.31097412]
[179.39213562 166.77043152]
[195.18948364 166.30209351]
[206.63359070 177.20198059]
[206.93489075 193.00340271]
[195.91461182 204.33163452]
[180.11088562 204.46585083]
[168.89979553 193.32641602]
[168.93267822 177.52217102]
[158.18093872 167.06271362]
[147.42919922 156.60327148]
[136.67745972 146.14381409]
[125.92572784 135.68435669]
[115.66783142 141.23149109]
[104.31472778 143.89646912]
[92.66001129 143.49301147]
[81.51837921 140.04930115]
[71.66864777 133.80607605]
[63.79932404 125.19976044]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 68]
[3 67]
[4 66]
[5 65]
[6 64]
[7 63]
[8 62]
[9 61]
[10 60]
[12 56]
[13 55]
[15 53]
[16 52]
[17 51]
[18 50]
[21 48]
[23 46]
[24 45]
[25 44]
[27 43]
[29 41]
[30 40]
[31 39]
[32 38]
[72 86]
[73 85]
[74 84]
[76 82]
[77 81]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
