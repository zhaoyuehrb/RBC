%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUGACAAAGUCACGUGUGCUCAGGGGGCCAGAAACUGGAGAGAGGAGAGAAAAAAAUCAAAAGAAGGAAAGCACAUUAGACCAUGCGAGCUAAAUUUGUGAUCGCACAAAAUCAAGAUGUUAGAUUGAUGCAGAAGAUCACUCCGUUCCAAAGGGAAAGUUUUCAUCUCACGAGUUUGGAGCUGAGGGCCCGUGGGGCAAC\
) } def
/len { sequence length } bind def

/coor [
[18.25817680 734.56970215]
[10.48988152 744.65917969]
[-0.47786617 751.03601074]
[-12.99668789 752.78271484]
[-17.10163307 767.21008301]
[-21.20657730 781.63751221]
[-25.31152153 796.06488037]
[-23.83058167 812.95404053]
[-39.64972687 819.05249023]
[-49.88901520 805.53973389]
[-39.73890686 791.95989990]
[-35.63396072 777.53253174]
[-31.52901649 763.10516357]
[-27.42407227 748.67779541]
[-39.84867859 736.76519775]
[-44.55590057 720.11596680]
[-40.16313553 703.28906250]
[-27.79245567 690.93945312]
[-10.78570652 686.53070068]
[-7.12700033 671.98376465]
[-3.46829462 657.43682861]
[0.19041114 642.88983154]
[3.84911704 628.34289551]
[-0.55013692 614.11279297]
[10.31952477 602.61669922]
[5.92027044 588.38653564]
[16.78993225 576.89044189]
[20.44863701 562.34350586]
[24.10734367 547.79650879]
[27.76605034 533.24957275]
[31.42475510 518.70263672]
[17.82604218 500.73785400]
[21.99847603 478.32315063]
[41.60691452 466.17193604]
[43.67926025 451.31576538]
[45.75160599 436.45962524]
[47.82395172 421.60345459]
[49.89629745 406.74731445]
[43.99154663 393.07312012]
[53.56122971 380.47424316]
[47.65648270 366.80007935]
[57.22616577 354.20120239]
[59.29851151 339.34503174]
[61.37085724 324.48889160]
[63.44320297 309.63272095]
[57.53845215 295.95852661]
[67.10813904 283.35964966]
[69.18048096 268.50350952]
[71.25283051 253.64735413]
[73.32517242 238.79119873]
[75.39752197 223.93504333]
[68.42443085 221.12242126]
[62.00782013 217.19146729]
[56.32567596 212.24885559]
[51.53601456 206.42938232]
[47.77246094 199.89228821]
[45.14053345 192.81684875]
[43.71468353 185.39749146]
[43.53619766 177.83843994]
[44.61198807 170.34811401]
[46.91436386 163.13336182]
[50.38173294 156.39375305]
[54.92024612 150.31605530]
[60.40634155 145.06909180]
[66.69010925 140.79899597]
[73.59937286 137.62515259]
[80.94441986 135.63694763]
[88.52323151 134.89109802]
[90.82410431 120.06861115]
[93.12498474 105.24613190]
[75.56896210 106.21271515]
[58.72370148 93.60205841]
[50.24665833 81.22709656]
[41.76961136 68.85213470]
[23.21502113 60.98175049]
[22.55246544 41.66017151]
[13.69835186 29.55212784]
[4.84423876 17.44408607]
[-10.80949497 15.26781178]
[-20.27271461 2.60988951]
[-17.93106270 -13.01996040]
[-5.17379570 -22.34882545]
[10.43042278 -19.84205437]
[19.62388802 -6.98687077]
[16.95228004 8.58997345]
[25.80639458 20.69801521]
[34.66050720 32.80605698]
[44.86464310 33.46024323]
[53.19737625 39.75767899]
[56.75894547 49.80973816]
[54.14457321 60.37509155]
[62.62162018 72.75005341]
[71.09866333 85.12501526]
[78.59866333 85.12501526]
[71.09876251 72.13458252]
[78.59894562 59.14430618]
[93.59894562 59.14463425]
[101.09857178 72.13523102]
[93.59866333 85.12501526]
[101.09866333 85.12501526]
[109.57571411 72.75005341]
[118.05275726 60.37509155]
[126.52980042 48.00012970]
[135.00685120 35.62516785]
[143.48390198 23.25020409]
[135.36163330 11.54712772]
[131.73045349 -2.19686985]
[133.00697327 -16.32503319]
[139.01750183 -29.14148712]
[149.02130127 -39.11480331]
[161.80186462 -45.06098557]
[175.81481934 -46.28399658]
[189.37452698 -42.65719986]
[198.04113770 -54.90015030]
[206.70774841 -67.14310455]
[215.37434387 -79.38606262]
[224.04095459 -91.62901306]
[218.17187500 -105.89636993]
[220.97048950 -121.06777191]
[231.54374695 -132.30207825]
[246.51779175 -136.01445007]
[261.11444092 -131.02030945]
[270.67596436 -118.91324615]
[272.15130615 -103.55658722]
[265.06970215 -89.85058594]
[251.69084167 -82.16878510]
[236.28390503 -82.96240234]
[227.61730957 -70.71945190]
[218.95069885 -58.47649765]
[210.28408813 -46.23354340]
[201.61747742 -33.99058914]
[210.26762390 -20.71580315]
[213.16944885 -5.10021067]
[209.84974670 10.47131348]
[200.78770447 23.60907555]
[187.34613037 32.28529739]
[171.56648254 35.14706802]
[155.85885620 31.72725105]
[147.38180542 44.10221100]
[138.90476990 56.47717285]
[130.42771912 68.85213470]
[121.95067596 81.22709656]
[113.47362518 93.60205841]
[107.94746399 107.54700470]
[105.64659119 122.36949158]
[103.34571075 137.19197083]
[123.79073334 151.34596252]
[133.73603821 173.95365906]
[148.73425293 174.18464661]
[163.73246765 174.41563416]
[178.73069763 174.64663696]
[192.78625488 166.19837952]
[206.99736023 174.38230896]
[206.74481201 190.77951050]
[192.28843689 198.52194214]
[178.49971008 189.64485168]
[163.50148010 189.41386414]
[148.50326538 189.18287659]
[133.50503540 188.95188904]
[125.41421509 207.63272095]
[109.95449066 220.87779236]
[90.25367737 226.00738525]
[88.18132782 240.86354065]
[86.10898590 255.71969604]
[84.03663635 270.57586670]
[81.96429443 285.43200684]
[87.72081757 300.16879272]
[78.29936218 311.70507812]
[76.22701263 326.56121826]
[74.15467072 341.41738892]
[72.08232117 356.27352905]
[77.83884430 371.01031494]
[68.41738892 382.54660034]
[74.17391205 397.28338623]
[64.75244904 408.81964111]
[62.68010712 423.67581177]
[60.60776138 438.53195190]
[58.53541565 453.38812256]
[56.46306992 468.24426270]
[63.06302261 472.30151367]
[68.31679535 477.95852661]
[71.85104370 484.79211426]
[73.42032623 492.29626465]
[72.92409515 499.91964722]
[70.41300201 507.10617065]
[66.08417511 513.33538818]
[60.26579285 518.16040039]
[53.39223862 521.23962402]
[45.97171021 522.36132812]
[42.31300354 536.90826416]
[38.65429688 551.45526123]
[34.99559021 566.00219727]
[31.33688545 580.54913330]
[35.47444534 595.81976318]
[24.86647797 606.27539062]
[29.00403786 621.54595947]
[18.39607048 632.00158691]
[14.73736477 646.54858398]
[11.07865906 661.09552002]
[7.41995335 675.64245605]
[3.76124787 690.18945312]
[13.84916496 698.26239014]
[20.11008263 709.51110840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 14]
[5 13]
[6 12]
[7 11]
[19 201]
[20 200]
[21 199]
[22 198]
[23 197]
[25 195]
[27 193]
[28 192]
[29 191]
[30 190]
[31 189]
[34 179]
[35 178]
[36 177]
[37 176]
[38 175]
[40 173]
[42 171]
[43 170]
[44 169]
[45 168]
[47 166]
[48 165]
[49 164]
[50 163]
[51 162]
[68 146]
[69 145]
[70 144]
[72 93]
[73 92]
[74 91]
[76 87]
[77 86]
[78 85]
[100 143]
[101 142]
[102 141]
[103 140]
[104 139]
[105 138]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[148 159]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
