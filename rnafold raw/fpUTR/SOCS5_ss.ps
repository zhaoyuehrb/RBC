%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAACGGGUGAAGAAGGGGAGGCGGCAGGGAAGGGGGUGGGGGCCUGGCGGGGGCAUCCGGCGGAGCUGGGGUCCCCGGGCUCCGUCCGGAGGAAGCGACGCUGCGCUCGCUGGGCAGUCGGAGGGGACGGGACGCACCGGAGGGCAGGCGGACUCGCCCUGUCGGUGACUGCGCCGUCCGGGCCCGUCCUGCCUGGCCGCAGGUGCCCUGGAUGAGGCCGCCCCGCGCGCCCCAAACGAUUUUAUAAUCA\
) } def
/len { sequence length } bind def

/coor [
[152.73979187 659.16125488]
[147.04214478 648.30212402]
[144.93609619 636.19641113]
[146.63836670 624.00268555]
[152.00044250 612.89263916]
[160.52149963 603.93835449]
[171.39500427 598.00897217]
[169.16815186 583.17523193]
[166.94128418 568.34143066]
[164.71441650 553.50762939]
[162.48756409 538.67388916]
[151.03221130 534.74780273]
[142.27391052 526.28125000]
[137.91079712 514.83074951]
[138.82478333 502.53897095]
[144.90409851 491.73403931]
[155.05287170 484.48840332]
[153.19505310 469.60388184]
[151.33723450 454.71939087]
[149.47940063 439.83486938]
[140.22534180 428.16390991]
[146.19386292 413.51168823]
[144.33602905 398.62716675]
[142.47821045 383.74267578]
[125.35364532 372.54257202]
[122.07579803 352.04547119]
[135.22245789 335.60168457]
[132.62792969 320.82778931]
[130.03338623 306.05386353]
[127.43885803 291.27996826]
[124.84432983 276.50604248]
[108.61962128 269.47912598]
[99.80114746 253.97261047]
[102.09687805 236.12336731]
[114.77235413 223.12736511]
[104.67523956 212.17758179]
[109.53654480 197.12174988]
[106.57595062 182.41682434]
[103.61534882 167.71189880]
[93.51822662 156.76213074]
[98.37953949 141.70629883]
[95.41893768 127.00136566]
[92.45833588 112.29644012]
[83.13722992 100.54412079]
[69.49275208 94.31289673]
[55.84827042 88.08167267]
[42.20378876 81.85044861]
[28.55931091 75.61922455]
[14.91483021 69.38800049]
[1.27035010 63.15677261]
[-12.37413025 56.92554855]
[-26.01861000 50.69432068]
[-39.66308975 44.46309662]
[-55.43035889 45.76839447]
[-63.79330063 33.44319916]
[-77.43778229 27.21197319]
[-91.08226013 20.98074722]
[-105.12017059 15.69518089]
[-119.48604584 11.37991714]
[-133.85192871 7.06465292]
[-148.21780396 2.74938869]
[-162.58367920 -1.56587529]
[-176.97607422 -5.79186392]
[-191.39443970 -9.92841339]
[-205.81278992 -14.06496334]
[-220.23114014 -18.20151329]
[-234.64950562 -22.33806229]
[-249.06785583 -26.47461128]
[-263.48620605 -30.61116219]
[-278.88497925 -26.97955894]
[-288.98501587 -37.92663574]
[-303.40338135 -42.06318283]
[-319.17645264 -37.57519531]
[-330.75973511 -49.18378830]
[-326.23733521 -64.94703674]
[-310.26153564 -68.64906311]
[-299.26681519 -56.48154068]
[-284.84848022 -52.34498978]
[-270.48098755 -56.27246475]
[-259.34967041 -45.02951813]
[-244.93130493 -40.89296722]
[-230.51295471 -36.75641632]
[-216.09458923 -32.61986923]
[-201.67623901 -28.48331833]
[-187.25788879 -24.34676743]
[-172.83952332 -20.21021843]
[-165.56317139 -21.38341522]
[-158.26841736 -15.93175507]
[-143.90254211 -11.61649036]
[-129.53666687 -7.30122662]
[-115.17078400 -2.98596263]
[-100.80490112 1.32930160]
[-110.45787811 -10.15198994]
[-113.74485779 -24.78741837]
[-109.92847443 -39.29380417]
[-99.86485291 -50.41691208]
[-85.81157684 -55.66148758]
[-70.92124176 -53.85100555]
[-58.53420258 -45.39161682]
[-51.42925644 -32.18102264]
[-51.20026779 -17.18277168]
[-57.89860535 -3.76143408]
[-70.02162170 5.07216740]
[-84.85103607 7.33626795]
[-71.20655823 13.56749249]
[-57.56207657 19.79871750]
[-42.77075195 18.04772186]
[-33.43186569 30.81861687]
[-19.78738403 37.04984283]
[-6.14290476 43.28106689]
[7.50157547 49.51229095]
[21.14605522 55.74351883]
[34.79053497 61.97474289]
[48.43501663 68.20597076]
[62.07949448 74.43719482]
[75.72397614 80.66841888]
[89.36845398 86.89964294]
[76.88176727 78.58805084]
[71.22278595 64.69647217]
[74.34709930 50.02545547]
[85.17503357 39.64490509]
[99.96475220 37.14204788]
[113.60533142 43.38180161]
[121.38296509 56.20788193]
[120.60992432 71.18795013]
[111.55305481 83.14550781]
[122.38761902 72.77188110]
[133.22218323 62.39825058]
[144.05674744 52.02462006]
[154.89131165 41.65098953]
[165.72587585 31.27735901]
[176.56044006 20.90372849]
[187.39500427 10.53009892]
[191.41461182 2.35838962]
[198.42910767 0.09596223]
[199.93676758 -4.84541607]
[202.88330078 -8.37598801]
[206.49746704 -10.18508625]
[209.99581909 -10.31008625]
[221.33206177 -20.13299751]
[232.66830444 -29.95590782]
[244.00454712 -39.77882004]
[255.34078979 -49.60173035]
[260.70339966 -64.48638153]
[275.38888550 -66.97351074]
[286.72512817 -76.79642487]
[298.06137085 -86.61933136]
[300.56451416 -92.69161224]
[305.07275391 -96.09582520]
[309.80325317 -96.54115295]
[321.37994385 -106.07952881]
[332.95660400 -115.61791229]
[344.53326416 -125.15628815]
[347.18643188 -131.16453552]
[351.77783203 -134.45574951]
[356.51791382 -134.78347778]
[368.32788086 -144.03143311]
[380.13781738 -153.27940369]
[391.94778442 -162.52735901]
[403.75775146 -171.77532959]
[407.11486816 -187.46319580]
[421.53698730 -194.49046326]
[435.96066284 -187.46641541]
[439.32128906 -171.77929688]
[429.04089355 -159.46292114]
[413.00570679 -159.96536255]
[401.19573975 -150.71740723]
[389.38580322 -141.46943665]
[377.57583618 -132.22148132]
[365.76586914 -122.97351074]
[354.07165527 -113.57962036]
[342.49496460 -104.04123688]
[330.91830444 -94.50286102]
[319.34164429 -84.96447754]
[307.88430786 -75.28308868]
[296.54806519 -65.46018219]
[285.21179199 -55.63726807]
[280.66003418 -41.45521545]
[265.16369629 -38.26548767]
[253.82745361 -28.44257545]
[242.49121094 -18.61966515]
[231.15496826 -8.79675388]
[219.81872559 1.02615738]
[208.66740417 11.05850124]
[197.76864624 21.36466408]
[186.93408203 31.73829460]
[176.09950256 42.11192322]
[165.26493835 52.48555374]
[154.43037415 62.85918427]
[143.59580994 73.23281097]
[132.76124573 83.60644531]
[121.92668152 93.98007202]
[116.35399628 105.49567413]
[107.16326141 109.33583832]
[110.12386322 124.04076385]
[113.08446503 138.74569702]
[123.39334106 150.74725342]
[118.32027435 164.75129700]
[121.28087616 179.45622253]
[124.24147034 194.16114807]
[134.55035400 206.16271973]
[129.47727966 220.16676331]
[141.40055847 223.81813049]
[150.59388733 232.13603210]
[155.36047363 243.50274658]
[154.85571289 255.74595642]
[149.23611450 266.55383301]
[139.61824036 273.91152954]
[142.21276855 288.68542480]
[144.80729675 303.45935059]
[147.40184021 318.23324585]
[149.99636841 333.00717163]
[159.15458679 336.02105713]
[166.55128479 342.11489868]
[171.20559692 350.42630005]
[172.52009583 359.80270386]
[170.35723877 368.96109009]
[165.05241394 376.66360474]
[157.36271667 381.88485718]
[159.22053528 396.76934814]
[161.07836914 411.65386963]
[170.46530151 424.38946533]
[164.36390686 437.97705078]
[166.22174072 452.86157227]
[168.07955933 467.74606323]
[169.93737793 482.63058472]
[186.08123779 490.93356323]
[193.92143250 507.13226318]
[190.47833252 524.63543701]
[177.32133484 536.44702148]
[179.54820251 551.28076172]
[181.77507019 566.11456299]
[184.00192261 580.94836426]
[186.22879028 595.78210449]
[203.55493164 600.63061523]
[216.95968628 612.55139160]
[223.75810242 629.09436035]
[222.61587524 646.88995361]
[213.81098938 662.33557129]
[199.16792297 672.32495117]
[201.94570923 687.06549072]
[204.72348022 701.80609131]
[207.50126648 716.54663086]
[218.59359741 728.62518311]
[213.42193604 744.18750000]
[197.30642700 747.22442627]
[186.82534790 734.61175537]
[192.76071167 719.32440186]
[189.98292542 704.58386230]
[187.20515442 689.84326172]
[184.42736816 675.10272217]
[172.38304138 673.22399902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 234]
[8 233]
[9 232]
[10 231]
[11 230]
[17 226]
[18 225]
[19 224]
[20 223]
[22 221]
[23 220]
[24 219]
[27 212]
[28 211]
[29 210]
[30 209]
[31 208]
[35 202]
[37 200]
[38 199]
[39 198]
[41 196]
[42 195]
[43 194]
[44 117]
[45 116]
[46 115]
[47 114]
[48 113]
[49 112]
[50 111]
[51 110]
[52 109]
[53 108]
[55 106]
[56 105]
[57 104]
[58 92]
[59 91]
[60 90]
[61 89]
[62 88]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[71 78]
[72 77]
[126 192]
[127 191]
[128 190]
[129 189]
[130 188]
[131 187]
[132 186]
[133 185]
[135 184]
[139 183]
[140 182]
[141 181]
[142 180]
[143 179]
[145 177]
[146 176]
[147 175]
[150 174]
[151 173]
[152 172]
[153 171]
[156 170]
[157 169]
[158 168]
[159 167]
[160 166]
[240 251]
[241 250]
[242 249]
[243 248]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
