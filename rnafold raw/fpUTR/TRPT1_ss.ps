%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCCCGCCCCCUUUCCACGCGGCUUUUCAUUGGCGGGUCCGCCGCGGUCGAGGAUCCUGGAGGUUUGUCCCCGCCGCCCCGACGCUUCCGCCCGGUCCGUCGGCACGUCGGCCCUGCCUCCCGGACCACCCUGCGGGGCGCACCAGCGAUCUGGGGUGCGGGGCUCGGCCUCCCUGCGCUCCUGGCUGACCGUGUGACCUUGGGUCUUAACC\
) } def
/len { sequence length } bind def

/coor [
[88.36862946 127.52323914]
[80.94855499 126.43122864]
[78.86724091 142.11494446]
[65.04420471 147.66226196]
[56.05104828 159.66740417]
[47.05789566 171.67253113]
[38.06474304 183.67765808]
[29.07159233 195.68280029]
[20.07843971 207.68792725]
[11.08528709 219.69305420]
[20.39330101 234.60668945]
[23.25245285 251.91685486]
[19.25074768 268.96286011]
[9.02863789 283.13513184]
[-5.82329035 292.27481079]
[-23.01177979 295.00247192]
[-39.89497757 290.92633057]
[-48.35340118 303.31402588]
[-49.05007172 319.69836426]
[-63.71089935 327.04629517]
[-77.25408173 317.79891968]
[-75.74755096 301.46911621]
[-60.74110031 294.85559082]
[-52.28267670 282.46789551]
[-60.03625107 272.56246948]
[-64.70148468 260.86108398]
[-65.89328003 248.30256653]
[-63.50564957 235.89738464]
[-57.72101974 224.64663696]
[-48.99636459 215.46105957]
[-38.02709579 209.08740234]
[-25.69166565 206.04774475]
[-12.98119164 206.59663391]
[-0.91984546 210.69990540]
[8.07330704 198.69477844]
[17.06645966 186.68963623]
[26.05961227 174.68450928]
[35.05276489 162.67938232]
[44.04591751 150.67424011]
[53.03907013 138.66911316]
[54.47713470 123.84409332]
[68.94342804 117.43807983]
[69.56636047 94.08584595]
[83.50376129 79.40317535]
[100.61537170 78.23457336]
[106.17797089 64.30412292]
[111.74057770 50.37367249]
[117.30317688 36.44322205]
[122.86578369 22.51277351]
[128.42839050 8.58232212]
[133.99098206 -5.34812832]
[139.55358887 -19.27857971]
[144.80955505 -33.32759476]
[149.75634766 -47.48843002]
[154.70314026 -61.64926147]
[159.64994812 -75.81009674]
[156.89660645 -91.38988495]
[168.39833069 -100.85347748]
[173.24153137 -115.05007172]
[169.12802124 -133.00033569]
[182.70246887 -144.12448120]
[187.23336792 -158.42381287]
[191.76428223 -172.72314453]
[196.29518127 -187.02247620]
[200.82609558 -201.32180786]
[205.35699463 -215.62113953]
[209.88789368 -229.92047119]
[205.51254272 -247.80871582]
[218.92300415 -259.13000488]
[218.39849854 -268.24627686]
[223.41398621 -273.67147827]
[227.94490051 -287.97082520]
[232.47579956 -302.27014160]
[237.00671387 -316.56948853]
[241.53761292 -330.86880493]
[246.06851196 -345.16815186]
[245.67727661 -354.29110718]
[250.77149963 -359.64245605]
[255.51086426 -373.87405396]
[260.25021362 -388.10565186]
[264.98956299 -402.33724976]
[269.72894287 -416.56884766]
[274.36419678 -430.83471680]
[278.89508057 -445.13403320]
[283.32141113 -459.46609497]
[287.64288330 -473.83010864]
[291.96438599 -488.19412231]
[296.28585815 -502.55810547]
[286.68750000 -518.89440918]
[291.99011230 -536.75158691]
[308.37689209 -544.91668701]
[312.27682495 -559.40087891]
[316.17675781 -573.88500977]
[320.07669067 -588.36914062]
[323.97659302 -602.85333252]
[327.02377319 -617.54052734]
[329.20779419 -632.38067627]
[331.39181519 -647.22082520]
[333.57583618 -662.06097412]
[335.75985718 -676.90112305]
[337.94387817 -691.74127197]
[327.25149536 -705.58837891]
[329.83267212 -722.55017090]
[343.60687256 -732.20184326]
[345.57382202 -747.07232666]
[347.54077148 -761.94281006]
[349.50772095 -776.81329346]
[343.64685059 -791.50891113]
[352.98623657 -803.11169434]
[344.40814209 -816.66882324]
[349.79513550 -831.78039551]
[365.01473999 -836.85412598]
[378.39181519 -827.99786377]
[379.66461182 -812.00537109]
[367.85671997 -801.14471436]
[373.85830688 -787.51275635]
[364.37820435 -774.84637451]
[362.41125488 -759.97589111]
[360.44430542 -745.10540771]
[358.47735596 -730.23492432]
[367.66802979 -721.20629883]
[370.01644897 -708.34082031]
[364.44506836 -696.29418945]
[352.78402710 -689.55725098]
[350.60000610 -674.71710205]
[348.41598511 -659.87695312]
[346.23196411 -645.03680420]
[344.04794312 -630.19665527]
[341.86392212 -615.35650635]
[353.26132202 -625.10839844]
[368.20462036 -626.41149902]
[381.11791992 -618.77954102]
[387.18283081 -605.06030273]
[384.13632202 -590.37298584]
[373.11514282 -580.19781494]
[358.23168945 -578.33160400]
[345.03948975 -585.47070312]
[338.46075439 -598.95336914]
[334.56082153 -584.46923828]
[330.66091919 -569.98510742]
[326.76098633 -555.50091553]
[322.86105347 -541.01678467]
[330.55923462 -532.60107422]
[333.26834106 -521.39868164]
[330.20330811 -510.16406250]
[322.01364136 -501.71743774]
[310.64987183 -498.23663330]
[306.32839966 -483.87261963]
[302.00689697 -469.50860596]
[297.68542480 -455.14459229]
[298.76818848 -447.83599854]
[293.19442749 -440.60311890]
[288.66351318 -426.30380249]
[289.63937378 -418.98016357]
[283.96054077 -411.82949829]
[279.22116089 -397.59790039]
[274.48181152 -383.36630249]
[269.74246216 -369.13470459]
[265.00311279 -354.90310669]
[260.36785889 -340.63723755]
[255.83694458 -326.33792114]
[251.30604553 -312.03857422]
[246.77513123 -297.73925781]
[242.24423218 -283.43991089]
[237.71331787 -269.14059448]
[233.28700256 -254.80853271]
[238.73512268 -244.01043701]
[235.25465393 -232.00953674]
[224.18724060 -225.38957214]
[219.65632629 -211.09024048]
[215.12542725 -196.79090881]
[210.59451294 -182.49157715]
[206.06361389 -168.19224548]
[201.53269958 -153.89291382]
[197.00180054 -139.59358215]
[202.29154968 -128.71704102]
[198.63610840 -116.76826477]
[187.47314453 -110.31071472]
[188.34190369 -102.97359467]
[182.55917358 -95.90667725]
[185.66632080 -81.33977509]
[173.81077576 -70.86329651]
[168.86398315 -56.70246506]
[163.91717529 -42.54163361]
[158.97038269 -28.38079834]
[160.16215515 -25.06538963]
[159.80912781 -21.00843811]
[157.58044434 -16.94145012]
[153.48403931 -13.71597672]
[147.92143250 0.21447417]
[142.35884094 14.14492512]
[136.79623413 28.07537460]
[131.23362732 42.00582504]
[125.67102814 55.93627548]
[120.10842133 69.86672974]
[114.54582214 83.79718018]
[128.69126892 99.49256134]
[124.71589661 125.64608765]
[129.86907959 139.73312378]
[135.02226257 153.82017517]
[140.17544556 167.90721130]
[151.29524231 180.70512390]
[142.07574463 194.93316650]
[125.85152435 190.01268005]
[126.08840179 173.06039429]
[120.93521881 158.97334290]
[115.78203583 144.88630676]
[110.62886047 130.79927063]
[103.20878601 129.70726013]
[101.02476501 144.54740906]
[98.84075165 159.38755798]
[96.65650177 174.22767639]
[81.81642151 172.04319763]
[84.00059509 157.20353699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 42]
[4 40]
[5 39]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[17 24]
[18 23]
[45 196]
[46 195]
[47 194]
[48 193]
[49 192]
[50 191]
[51 190]
[52 189]
[53 185]
[54 184]
[55 183]
[56 182]
[58 180]
[59 178]
[61 175]
[62 174]
[63 173]
[64 172]
[65 171]
[66 170]
[67 169]
[69 166]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[78 159]
[79 158]
[80 157]
[81 156]
[82 155]
[83 153]
[84 152]
[85 150]
[86 149]
[87 148]
[88 147]
[91 142]
[92 141]
[93 140]
[94 139]
[95 138]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
[101 124]
[104 120]
[105 119]
[106 118]
[107 117]
[109 115]
[198 208]
[199 207]
[200 206]
[201 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
