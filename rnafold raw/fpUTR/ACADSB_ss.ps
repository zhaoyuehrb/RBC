%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAUUAAGGGGGGGUGUGUGCGGGGCGGGUACUGAGUGGGCGGGGCCUUGCUCGGGUAACUCCCAGGGGCUGGCUAGAGACCCAGAGGCGCAGAGCGGAGAGGCCUGCGGCGAGG\
) } def
/len { sequence length } bind def

/coor [
[90.67577362 147.78659058]
[83.30923462 145.73748779]
[76.35435486 142.56033325]
[69.98265076 138.33351135]
[64.35128021 133.16123962]
[59.59912872 127.17110443]
[55.84340668 120.51082611]
[53.17673492 113.34468842]
[51.66488647 105.84942627]
[51.34514999 98.20989227]
[52.22540665 90.61450958]
[54.28395462 83.25061035]
[41.16250610 75.98234558]
[28.04106140 68.71408081]
[14.91961479 61.44581985]
[1.79816878 54.17755508]
[-11.32327747 46.90929413]
[-23.83201218 52.10694885]
[-36.85148239 49.15354156]
[-45.63220215 39.35815430]
[-47.10540771 26.48266220]
[-62.92296600 26.14288902]
[-69.96023560 13.01558590]
[-82.88354492 5.40059900]
[-95.80685425 -2.21438789]
[-108.73017120 -9.82937527]
[-123.85275269 -6.09503508]
[-136.85034180 -14.00181198]
[-140.31727600 -28.44189453]
[-153.24058533 -36.05688095]
[-166.16389465 -43.67187119]
[-179.08720398 -51.28685760]
[-194.90476990 -51.62662888]
[-201.94203186 -64.75392914]
[-214.86534119 -72.36891937]
[-227.78865051 -79.98390961]
[-243.02548218 -75.78693390]
[-256.72579956 -83.66581726]
[-260.76144409 -98.94616699]
[-252.73815918 -112.56241608]
[-237.41598511 -116.43628693]
[-223.88533020 -108.26947784]
[-220.17367554 -92.90721893]
[-207.25036621 -85.29222870]
[-194.32704163 -77.67724609]
[-179.43385315 -77.88214874]
[-171.47221375 -64.21016693]
[-158.54890442 -56.59518051]
[-145.62559509 -48.98019409]
[-132.70228577 -41.36520767]
[-118.39073181 -45.32942200]
[-105.17617798 -37.79084015]
[-101.11518097 -22.75268555]
[-88.19187164 -15.13769913]
[-75.26856232 -7.52271223]
[-62.34524918 0.09227483]
[-47.45205307 -0.11262714]
[-39.49042130 13.55935097]
[-23.46905708 8.63951969]
[-8.52257347 16.93822289]
[-4.05501461 33.78784561]
[9.06643200 41.05611038]
[22.18787766 48.32437134]
[35.30932617 55.59263611]
[48.43077087 62.86089706]
[61.55221558 70.12915802]
[83.81249237 54.08198929]
[111.21501923 52.62149811]
[135.05488586 66.21163940]
[147.32943726 57.58982468]
[159.60397339 48.96801376]
[171.76266479 40.18357468]
[183.80332947 31.23806572]
[185.86105347 15.56830692]
[198.44699097 6.00954437]
[214.09411621 8.23282242]
[223.51927185 20.91910934]
[221.13069153 36.54185486]
[208.34547424 45.83236313]
[192.74884033 43.27873993]
[180.70817566 52.22425079]
[177.17033386 58.82343292]
[168.22578430 61.24255753]
[155.95124817 69.86436462]
[143.67669678 78.48617554]
[147.56127930 89.58733368]
[148.67051697 101.29609680]
[146.93968201 112.92922211]
[142.46978760 123.80789948]
[158.10231018 126.24405670]
[163.33499146 140.18925476]
[175.13327026 149.45211792]
[186.93153381 158.71498108]
[198.72981262 167.97785950]
[210.52809143 177.24072266]
[219.33119202 180.13246155]
[222.51280212 186.91058350]
[234.06031799 196.48425293]
[249.77073669 194.76432800]
[262.04339600 204.72213745]
[263.59710693 220.44985962]
[253.51011658 232.61654663]
[237.76683044 234.00389099]
[225.70747375 223.78883362]
[224.48664856 208.03176880]
[212.93914795 198.45809937]
[201.26521301 189.03900146]
[189.46694946 179.77612305]
[177.66867065 170.51325989]
[165.87039185 161.25039673]
[154.07212830 151.98751831]
[139.28349304 150.21389771]
[133.20692444 135.60617065]
[127.22287750 140.36599731]
[120.56742859 144.13026428]
[113.40471649 146.80612183]
[105.91139221 148.32757568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 66]
[13 65]
[14 64]
[15 63]
[16 62]
[17 61]
[21 58]
[23 56]
[24 55]
[25 54]
[26 53]
[29 50]
[30 49]
[31 48]
[32 47]
[34 45]
[35 44]
[36 43]
[69 85]
[70 84]
[71 83]
[72 81]
[73 80]
[89 113]
[91 111]
[92 110]
[93 109]
[94 108]
[95 107]
[97 106]
[98 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
