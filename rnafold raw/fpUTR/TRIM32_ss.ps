%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGCUCAACGGCGCGUGCGCAGAGGGAGGCAGGCGGGUGGGCUGCCGGCGGUGGACUCGUCGGAGCCGCGGGCGGUCAGCAGGAAUUUGACCCUCUAGGGCAUGAAUACUGUGCUGUUCAGUUCUGAGCUGUGCUAGCAAUACCCUUCAAAGGAAGAGCA\
) } def
/len { sequence length } bind def

/coor [
[41.75178528 233.56919861]
[28.61093712 222.85684204]
[35.26689911 207.26406860]
[35.84852982 192.27536011]
[36.43016052 177.28663635]
[37.01179123 162.29791260]
[37.59342194 147.30920410]
[58.19133759 110.85086060]
[92.00409698 98.86679840]
[81.50083923 88.15785217]
[70.99758148 77.44890594]
[60.49431610 66.73995972]
[41.59634018 67.31029510]
[28.47056007 54.14795685]
[29.07271957 35.88741302]
[18.16211510 25.59378815]
[7.25151014 15.30016327]
[-3.65909433 5.00653887]
[-14.56969929 -5.28708553]
[-29.91723824 -9.12942982]
[-33.86506271 -23.49132156]
[-44.87496185 -33.67867279]
[-55.98312378 -43.75878906]
[-67.09128571 -53.83890915]
[-78.19944000 -63.91902542]
[-89.30760193 -73.99914551]
[-100.41576385 -84.07926178]
[-111.29346466 -82.92356873]
[-120.80327606 -87.86872864]
[-125.89055634 -97.05233765]
[-125.07369232 -107.29816437]
[-135.78263855 -117.80142975]
[-146.49157715 -128.30468750]
[-157.20053101 -138.80795288]
[-169.32711792 -133.42778015]
[-182.52949524 -132.50636292]
[-195.22428894 -136.13230896]
[-205.89646912 -143.85018921]
[-213.28012085 -154.71757507]
[-216.50862122 -167.42013550]
[-215.21632385 -180.43051147]
[-209.57975769 -192.19201660]
[-219.87338257 -203.10261536]
[-230.16700745 -214.01322937]
[-240.46063232 -224.92382812]
[-250.85955811 -235.73411560]
[-261.36282349 -246.44305420]
[-271.86608887 -257.15200806]
[-287.05310059 -261.58657837]
[-290.44107056 -276.09072876]
[-305.62808228 -280.52529907]
[-309.01605225 -295.02947998]
[-319.51928711 -305.73840332]
[-330.02255249 -316.44735718]
[-340.52581787 -327.15631104]
[-348.81225586 -331.11813354]
[-351.12640381 -338.17623901]
[-361.42004395 -349.08682251]
[-371.71365356 -359.99743652]
[-387.57049561 -364.17984009]
[-391.61517334 -380.07238770]
[-379.68685913 -391.32617188]
[-364.05639648 -386.36425781]
[-360.80303955 -370.29104614]
[-350.50942993 -359.38046265]
[-340.21578979 -348.46984863]
[-329.81686401 -337.65957642]
[-319.31359863 -326.95062256]
[-308.81036377 -316.24166870]
[-298.30709839 -305.53271484]
[-283.87133789 -301.86413574]
[-279.73211670 -286.59399414]
[-265.29635620 -282.92541504]
[-261.15713501 -267.65527344]
[-250.65388489 -256.94631958]
[-240.15061951 -246.23738098]
[-233.18756104 -243.65127563]
[-229.55003357 -235.21745300]
[-219.25640869 -224.30685425]
[-208.96278381 -213.39624023]
[-198.66915894 -202.48564148]
[-182.76512146 -208.06417847]
[-165.96490479 -206.14778137]
[-151.63261414 -197.07180786]
[-142.65925598 -182.61009216]
[-140.87960815 -165.62847900]
[-146.69726562 -149.51689148]
[-135.98832703 -139.01362610]
[-125.27938080 -128.51037598]
[-114.57043457 -118.00711060]
[-95.56175995 -114.62316895]
[-90.33564758 -95.18742371]
[-79.22748566 -85.10730743]
[-68.11932373 -75.02718353]
[-57.01116562 -64.94706726]
[-45.90300369 -54.86695099]
[-34.79484558 -44.78683472]
[-27.69320107 -42.60997009]
[-23.57143784 -34.40192795]
[-9.00429821 -31.29585075]
[-4.27607441 -16.19769096]
[6.63453054 -5.90406561]
[17.54513550 4.38955879]
[28.45573997 14.68318367]
[39.36634445 24.97680855]
[50.48506165 22.17462540]
[61.68572235 25.14007187]
[70.13470459 33.24333191]
[73.63645935 44.53997803]
[71.20326233 56.23669815]
[81.70652008 66.94564819]
[92.20978546 77.65459442]
[102.71304321 88.36354065]
[115.91606140 95.48254395]
[130.63488770 98.37322998]
[145.35372925 101.26390839]
[160.09988403 104.01174164]
[174.87200928 106.61646271]
[189.80609131 101.39308929]
[200.99644470 111.22290802]
[215.76855469 113.82762909]
[230.54066467 116.43235016]
[245.31278992 119.03707886]
[260.08489990 121.64179993]
[276.73333740 118.43775177]
[284.42092896 133.54859924]
[272.02874756 145.11883545]
[257.48019409 136.41390991]
[242.70806885 133.80918884]
[227.93594360 131.20446777]
[213.16383362 128.59974670]
[198.39172363 125.99502563]
[184.51423645 131.40470886]
[172.26728821 121.38858032]
[157.49516296 118.78385925]
[150.32656860 120.72888947]
[142.46304321 115.98274231]
[127.74420929 113.09205627]
[113.02538300 110.20137024]
[108.54669189 116.21729279]
[122.75763702 121.01824951]
[122.58305359 136.01722717]
[108.26422119 140.48611450]
[99.58930969 128.24914551]
[95.11062622 134.26506042]
[102.10127258 147.53649902]
[109.09192657 160.80792236]
[123.24633789 169.08950806]
[122.88092041 185.48458862]
[108.37158203 193.12730408]
[94.64428711 184.15548706]
[95.82050323 167.79856873]
[88.82984924 154.52714539]
[81.83919525 141.25572205]
[74.52493286 142.91450500]
[59.89640427 146.23205566]
[52.58214188 147.89082336]
[52.00051117 162.87954712]
[51.41888046 177.86827087]
[50.83724976 192.85697937]
[50.25561905 207.84570312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 161]
[4 160]
[5 159]
[6 158]
[7 157]
[9 113]
[10 112]
[11 111]
[12 110]
[15 105]
[16 104]
[17 103]
[18 102]
[19 101]
[21 99]
[22 97]
[23 96]
[24 95]
[25 94]
[26 93]
[27 92]
[31 90]
[32 89]
[33 88]
[34 87]
[42 81]
[43 80]
[44 79]
[45 78]
[46 76]
[47 75]
[48 74]
[50 72]
[52 70]
[53 69]
[54 68]
[55 67]
[57 66]
[58 65]
[59 64]
[114 139]
[115 138]
[116 137]
[117 135]
[118 134]
[120 132]
[121 131]
[122 130]
[123 129]
[124 128]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
