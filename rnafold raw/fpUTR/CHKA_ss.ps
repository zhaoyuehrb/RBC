%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGAGGAGCGAGUGCAGCGGCCAGCAGCACAUCCCCGCUCCACAGUCGCCGCAGUCGCCGCAGCCGCCGCCGCCGCCCCGCGCGCCCAACCGCCGCGGCCCCCUGCCCCGCCGGCCUGCCAGUGAGAGAGCGGCGAGGGGGCGCCCGGCCGGACUCUGAGCCUAGUCCUCUCGCGCUGCGGCCGCCCGCGCCUCCUCGGCCGCCUGUCGGGC\
) } def
/len { sequence length } bind def

/coor [
[141.63595581 488.30920410]
[139.23533630 473.50256348]
[136.83470154 458.69589233]
[127.16024780 447.37097168]
[132.58921814 432.51037598]
[130.18859863 417.70373535]
[127.78797150 402.89709473]
[125.38735199 388.09042358]
[122.98673248 373.28378296]
[120.58610535 358.47711182]
[117.95821381 356.13055420]
[116.33491516 352.39578247]
[116.35575104 347.75820923]
[118.41959381 342.97024536]
[116.67013550 328.07260132]
[114.92068481 313.17498779]
[113.17122650 298.27734375]
[101.94137573 284.79022217]
[109.37020111 267.93954468]
[107.40325165 253.06906128]
[105.43630981 238.19857788]
[103.46936035 223.32810974]
[101.50241089 208.45762634]
[99.53546906 193.58714294]
[95.54329681 187.37017822]
[97.65006256 178.48521423]
[95.90060425 163.58757019]
[94.15114594 148.68994141]
[92.40169525 133.79231262]
[90.65223694 118.89468384]
[80.82968140 130.23123169]
[66.17472076 133.43002319]
[52.52167892 127.21758270]
[45.30598831 114.06715393]
[47.40029907 99.21407318]
[57.97084427 88.57154083]
[72.80936432 86.37645721]
[86.00959015 93.50392151]
[77.19281006 81.36866760]
[68.37603760 69.23341370]
[59.55925369 57.09815979]
[50.74247742 44.96290588]
[40.12696838 45.97394180]
[30.12527847 42.51533508]
[22.51891708 35.27402496]
[18.63321304 25.60420990]
[19.10665703 15.27447128]
[23.78696060 6.14434862]
[15.51044369 -6.36561871]
[7.23392820 -18.87558556]
[-1.04258811 -31.38555336]
[-17.70741844 -39.22241592]
[-18.08761597 -56.76856995]
[-26.54603958 -69.15626526]
[-35.00445938 -81.54396820]
[-43.46288300 -93.93166351]
[-52.01158524 -106.25724030]
[-60.65010834 -118.52002716]
[-69.28862762 -130.78280640]
[-78.01651001 -142.98216248]
[-96.78417969 -150.34535217]
[-97.96105957 -169.64741516]
[-107.12866974 -181.51986694]
[-116.29627228 -193.39230347]
[-125.46388245 -205.26475525]
[-142.85377502 -207.17820740]
[-153.27307129 -220.80909729]
[-150.66104126 -237.42420959]
[-160.00114441 -249.16143799]
[-169.34124756 -260.89868164]
[-178.68135071 -272.63589478]
[-188.02145386 -284.37310791]
[-202.66874695 -290.35369873]
[-204.53938293 -305.13037109]
[-213.87948608 -316.86758423]
[-223.80738831 -328.11199951]
[-234.29711914 -338.83419800]
[-244.78684998 -349.55639648]
[-260.74862671 -351.16931152]
[-269.31814575 -364.73184204]
[-263.92163086 -379.84002686]
[-248.69880676 -384.90414429]
[-235.32731628 -376.03942871]
[-234.06463623 -360.04614258]
[-223.57492065 -349.32394409]
[-213.08518982 -338.60174561]
[-213.03114319 -353.60162354]
[-203.44253540 -365.13674927]
[-188.70509338 -367.93096924]
[-175.55960083 -360.70629883]
[-170.01867676 -346.76721191]
[-174.61669922 -332.48931885]
[-187.25057983 -324.40322876]
[-202.14225769 -326.20770264]
[-192.80215454 -314.47045898]
[-178.82293701 -309.32940674]
[-176.28422546 -293.71322632]
[-166.94412231 -281.97598267]
[-157.60401917 -270.23876953]
[-148.26391602 -258.50155640]
[-138.92381287 -246.76431274]
[-126.04508209 -247.11421204]
[-115.15320587 -239.87525940]
[-110.34773254 -227.50309753]
[-113.59143066 -214.43235779]
[-104.42382812 -202.55992126]
[-95.25621796 -190.68746948]
[-86.08861542 -178.81501770]
[-75.88131714 -178.42965698]
[-67.39184570 -172.36341858]
[-63.56218338 -162.42190552]
[-65.88125610 -151.79893494]
[-59.40855789 -148.23631287]
[-57.02584457 -139.42132568]
[-48.38732147 -127.15854645]
[-39.74879837 -114.89575958]
[-33.32884598 -111.23894501]
[-31.07518387 -102.39009094]
[-22.61676216 -90.00238800]
[-14.15833950 -77.61469269]
[-5.69991732 -65.22698975]
[6.12349319 -62.67990494]
[13.27210140 -52.43135834]
[11.46737957 -39.66207123]
[19.74389458 -27.15210152]
[28.02041054 -14.64213467]
[36.29692841 -2.13216782]
[55.62209702 0.34789750]
[67.06551361 16.49277687]
[62.87773132 36.14612579]
[71.69451141 48.28137970]
[80.51129150 60.41663361]
[89.32806396 72.55188751]
[98.14484406 84.68714142]
[112.03428650 90.35137177]
[126.82300568 87.84263611]
[141.61172485 85.33390808]
[156.40045166 82.82517242]
[171.18916321 80.31643677]
[185.97789001 77.80770111]
[200.76660156 75.29896545]
[215.55532837 72.79022980]
[230.34405518 70.28149414]
[245.13276672 67.77276611]
[249.99453735 56.92776108]
[259.39065552 49.84756851]
[270.91842651 48.19791031]
[281.69894409 52.27396011]
[289.09613037 60.95539856]
[303.95184326 58.87985992]
[318.80755615 56.80432129]
[333.64770508 54.62030411]
[348.47149658 52.32792282]
[363.29531860 50.03554535]
[378.02435303 41.63960648]
[390.16955566 53.46880341]
[382.16479492 68.41403198]
[365.58767700 64.85934448]
[350.76388550 67.15172577]
[335.94009399 69.44410706]
[329.81210327 73.57157135]
[320.88308716 71.66003418]
[306.02737427 73.73557281]
[291.17166138 75.81111145]
[281.03942871 91.06014252]
[262.66287231 94.10971069]
[247.64151001 82.56148529]
[232.85278320 85.07022095]
[218.06405640 87.57894897]
[203.27534485 90.08768463]
[188.48661804 92.59642029]
[173.69790649 95.10515594]
[158.90917969 97.61389160]
[144.12045288 100.12262726]
[129.33174133 102.63136292]
[114.54302216 105.14009094]
[105.54986572 117.14522552]
[107.29932404 132.04286194]
[109.04878235 146.94049072]
[110.79823303 161.83811951]
[112.54769135 176.73574829]
[114.40594482 191.62020874]
[116.37289429 206.49067688]
[118.33983612 221.36116028]
[120.30678558 236.23164368]
[122.27373505 251.10211182]
[124.24067688 265.97259521]
[133.98355103 274.42175293]
[135.31712341 286.84579468]
[128.06886292 296.52789307]
[129.81831360 311.42553711]
[131.56776428 326.32315063]
[133.31723022 341.22079468]
[135.39276123 356.07650757]
[137.79338074 370.88314819]
[140.19400024 385.68978882]
[142.59463501 400.49645996]
[144.99525452 415.30310059]
[147.39587402 430.10977173]
[157.24203491 442.49377441]
[151.64135742 456.29528809]
[154.04197693 471.10192871]
[156.44261169 485.90859985]
[158.95133972 500.69729614]
[161.56805420 515.46728516]
[164.18476868 530.23730469]
[166.80148315 545.00732422]
[175.51820374 559.54876709]
[163.95803833 571.95037842]
[148.84095764 564.27502441]
[152.03147888 547.62402344]
[149.41476440 532.85400391]
[146.79804993 518.08404541]
[144.18135071 503.31402588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[14 193]
[15 192]
[16 191]
[17 190]
[19 187]
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[26 181]
[27 180]
[28 179]
[29 178]
[30 177]
[38 134]
[39 133]
[40 132]
[41 131]
[42 130]
[48 127]
[49 126]
[50 125]
[51 124]
[53 121]
[54 120]
[55 119]
[56 118]
[57 116]
[58 115]
[59 114]
[60 112]
[62 108]
[63 107]
[64 106]
[65 105]
[68 101]
[69 100]
[70 99]
[71 98]
[72 97]
[74 95]
[75 94]
[76 86]
[77 85]
[78 84]
[135 176]
[136 175]
[137 174]
[138 173]
[139 172]
[140 171]
[141 170]
[142 169]
[143 168]
[144 167]
[149 164]
[150 163]
[151 162]
[152 160]
[153 159]
[154 158]
[204 214]
[205 213]
[206 212]
[207 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
