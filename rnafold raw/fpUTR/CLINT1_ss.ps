%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGCUCCACGCAGCGCCUGUGCUGCCGCGUCUCGACGUGUCACCGGCGGCGCCGCUGCUGUGGCAAAGGAAGGAGCUGACUGGGGGAGUUCGAGGCGGCGGGCGGCGGUGACCCCGGCCUGGAACUGCCCCGGUACGGAAGUGUUCCGGGGUCCGUGGGGAGCAGGAGAGGGAGGCGGCGGACCGUCCCGCGCGGGGCACG\
) } def
/len { sequence length } bind def

/coor [
[82.93438721 128.57843018]
[72.68918610 119.02843475]
[58.76624680 124.60980988]
[44.84330368 130.19117737]
[30.92036247 135.77255249]
[16.99742126 141.35392761]
[13.08571911 157.80783081]
[0.26571366 168.58216858]
[-16.28416061 169.58352661]
[-30.03131294 160.61502075]
[-43.86751938 166.40806580]
[-57.70372772 172.20112610]
[-71.53993225 177.99417114]
[-85.33156586 183.89254761]
[-99.07781982 189.89591980]
[-112.82407379 195.89929199]
[-126.57032776 201.90266418]
[-140.31658936 207.90603638]
[-154.06283569 213.90940857]
[-157.16390991 218.11805725]
[-161.16952515 220.47778320]
[-165.22286987 220.95382690]
[-168.57778931 219.85696411]
[-182.58422852 225.22535706]
[-196.59066772 230.59376526]
[-210.59710693 235.96215820]
[-224.60354614 241.33056641]
[-238.60997009 246.69895935]
[-252.61640930 252.06736755]
[-266.62286377 257.43576050]
[-280.62930298 262.80416870]
[-287.52581787 268.79992676]
[-294.89047241 268.14584351]
[-308.97714233 273.30001831]
[-315.68890381 287.35668945]
[-330.04821777 292.38308716]
[-343.40774536 285.89785767]
[-351.44018555 299.78524780]
[-367.32662964 302.02127075]
[-378.88040161 290.89068604]
[-377.23840332 274.93188477]
[-363.66024780 266.38708496]
[-348.56192017 271.81115723]
[-342.54254150 258.23535156]
[-328.33007812 252.80761719]
[-314.13131714 259.21334839]
[-300.04464722 254.05915833]
[-285.99768066 248.79772949]
[-271.99124146 243.42932129]
[-257.98480225 238.06092834]
[-243.97837830 232.69252014]
[-229.97193909 227.32412720]
[-215.96549988 221.95571899]
[-201.95906067 216.58732605]
[-187.95262146 211.21891785]
[-173.94619751 205.85052490]
[-160.06620789 200.16314697]
[-146.31996155 194.15977478]
[-132.57369995 188.15640259]
[-118.82744598 182.15303040]
[-105.08119202 176.14965820]
[-91.33493805 170.14628601]
[-86.46141052 164.58621216]
[-77.33297729 164.15795898]
[-63.49677277 158.36491394]
[-49.66056442 152.57186890]
[-35.82435989 146.77882385]
[-33.97537994 133.55453491]
[-25.76679039 122.88578796]
[-13.25852299 117.62529755]
[0.32279414 119.24611664]
[11.41604996 127.43098450]
[25.33899117 121.84960938]
[39.26193237 116.26824188]
[53.18487167 110.68686676]
[67.10781097 105.10549927]
[68.02307129 90.75673676]
[74.90460968 78.13259888]
[86.46846771 69.58849335]
[100.55706024 66.71859741]
[104.18095398 52.16293335]
[107.80484772 37.60726929]
[111.31764984 23.02439499]
[114.71915436 8.41515923]
[118.12065125 -6.19407749]
[121.52215576 -20.80331421]
[124.92366028 -35.41254807]
[128.32516479 -50.02178574]
[131.72666931 -64.63101959]
[127.32035065 -79.82624817]
[137.74220276 -90.46739960]
[141.14370728 -105.07663727]
[144.54521179 -119.68587494]
[147.94671631 -134.29510498]
[151.34822083 -148.90434265]
[146.94190979 -164.09957886]
[157.36376953 -174.74072266]
[160.76525879 -189.34996033]
[164.16676331 -203.95919800]
[167.56826782 -218.56843567]
[163.16195679 -233.76365662]
[173.58381653 -244.40481567]
[172.48188782 -253.47660828]
[177.15019226 -259.21008301]
[180.77407837 -273.76574707]
[184.39797974 -288.32141113]
[187.91078186 -302.90429688]
[191.31228638 -317.51351929]
[186.03173828 -333.03924561]
[197.03918457 -345.19522095]
[213.01112366 -341.47644043]
[217.51698303 -325.70846558]
[205.92152405 -314.11203003]
[202.52001953 -299.50277710]
[204.06553650 -292.27249146]
[198.95364380 -284.69750977]
[195.32974243 -270.14184570]
[191.70585632 -255.58618164]
[188.19305420 -241.00331116]
[192.84266663 -226.85302734]
[182.17750549 -215.16693115]
[178.77600098 -200.55769348]
[175.37449646 -185.94845581]
[171.97299194 -171.33921814]
[176.62261963 -157.18894958]
[165.95745850 -145.50283813]
[162.55595398 -130.89360046]
[159.15444946 -116.28437042]
[155.75294495 -101.67513275]
[152.35144043 -87.06590271]
[157.00105286 -72.91561890]
[146.33590698 -61.22951889]
[142.93440247 -46.62028503]
[139.53289795 -32.01104736]
[136.13139343 -17.40181160]
[132.72988892 -2.79257488]
[129.32838440 11.81666183]
[125.92688751 26.42589760]
[127.47240448 33.65619278]
[122.36051178 41.23116684]
[118.73661804 55.78683090]
[115.11272430 70.34249115]
[127.36972046 81.05638885]
[133.07995605 96.30153656]
[130.87756348 112.43135071]
[143.17211914 121.02458191]
[155.46669006 129.61781311]
[167.76126099 138.21104431]
[180.05581665 146.80427551]
[192.35038757 155.39752197]
[204.64494324 163.99075317]
[216.93951416 172.58398438]
[238.73744202 162.66319275]
[264.28317261 177.63975525]
[279.26098633 172.54309082]
[290.36764526 182.46736145]
[305.11715698 185.19715881]
[319.86666870 187.92694092]
[335.13464355 181.94183350]
[347.78134155 192.38182068]
[344.79693604 208.50712585]
[329.25152588 213.72941589]
[317.13690186 202.67645264]
[302.38735962 199.94667053]
[287.63784790 197.21688843]
[273.71502686 202.50880432]
[261.55337524 192.38926697]
[257.68841553 198.81672668]
[270.54330444 206.54664612]
[285.15768433 209.92605591]
[286.45956421 224.86944580]
[272.64981079 230.72521973]
[262.81338501 219.40153503]
[249.95849609 211.67161560]
[246.09353638 218.09906006]
[255.42030334 229.84687805]
[263.21038818 234.62455750]
[264.79809570 241.84570312]
[273.94464111 253.73439026]
[283.09118652 265.62307739]
[292.23770142 277.51177979]
[301.38424683 289.40045166]
[316.74121094 295.15332031]
[319.17031860 311.37155151]
[306.17269897 321.37124634]
[291.11920166 314.86557007]
[289.49557495 298.54699707]
[280.34902954 286.65829468]
[271.20248413 274.76962280]
[262.05593872 262.88092041]
[252.90940857 250.99224854]
[243.67248535 239.17364502]
[234.34571838 227.42582703]
[218.16963196 221.89825439]
[207.77600098 210.36618042]
[204.71305847 196.74415588]
[208.34628296 184.87854004]
[196.05171204 176.28530884]
[183.75715637 167.69207764]
[171.46258545 159.09884644]
[159.16801453 150.50561523]
[146.87345886 141.91238403]
[134.57888794 133.31915283]
[122.28432465 124.72591400]
[110.14039612 131.70385742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 76]
[3 75]
[4 74]
[5 73]
[6 72]
[10 67]
[11 66]
[12 65]
[13 64]
[14 62]
[15 61]
[16 60]
[17 59]
[18 58]
[19 57]
[23 56]
[24 55]
[25 54]
[26 53]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[33 47]
[34 46]
[37 43]
[80 142]
[81 141]
[82 140]
[83 138]
[84 137]
[85 136]
[86 135]
[87 134]
[88 133]
[89 132]
[91 130]
[92 129]
[93 128]
[94 127]
[95 126]
[97 124]
[98 123]
[99 122]
[100 121]
[102 119]
[104 118]
[105 117]
[106 116]
[107 114]
[108 113]
[145 204]
[146 203]
[147 202]
[148 201]
[149 200]
[150 199]
[151 198]
[152 197]
[154 167]
[156 165]
[157 164]
[158 163]
[175 193]
[176 192]
[178 191]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
