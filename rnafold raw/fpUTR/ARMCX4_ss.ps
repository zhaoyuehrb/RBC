%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUACUGCCAAGAGAAGCAAGAGGAGAGGAGGGAACUGCCUCGGAUCAUUACAGGUCCACCUCCAGAGGCAGCUGUAGUGGCCUUUGAGUGGCUGAAGACCAGCACCCUCACAGGCCUACACCCACAACUACCACUCUCUUUACCCCAGCCCGAGUGCGCUCUACCAUACCUUGUUCGUGCUUUUAGCAGGGGUGAUUAC\
) } def
/len { sequence length } bind def

/coor [
[196.69282532 266.04254150]
[193.92315674 280.78463745]
[191.15350342 295.52670288]
[198.98454285 309.52865601]
[192.78680420 324.32620239]
[177.31466675 328.56796265]
[164.43702698 319.00000000]
[164.03250122 302.96206665]
[176.41142273 292.75704956]
[179.18107605 278.01498413]
[181.95074463 263.27288818]
[177.18585205 277.49597168]
[167.20213318 288.69082642]
[153.61499023 295.04611206]
[138.62290955 295.53344727]
[124.65169525 290.07403564]
[113.96198273 279.55120850]
[108.28341675 265.66760254]
[108.53484344 250.66972351]
[114.67556000 236.98426819]
[125.71196747 226.82563782]
[139.85830688 221.83757019]
[154.82563782 222.82714844]
[168.19213867 229.63426208]
[177.79624939 241.15977478]
[169.86497498 228.42813110]
[161.93368530 215.69648743]
[154.00239563 202.96484375]
[146.07112122 190.23318481]
[138.13983154 177.50154114]
[126.42838287 174.45759583]
[119.71753693 163.91004944]
[122.06719971 151.22343445]
[114.33389282 138.37057495]
[95.13094330 140.67005920]
[77.01350403 133.90254211]
[64.02068329 119.57678223]
[59.04910660 100.88655853]
[44.24670792 98.45983124]
[29.44430923 96.03310394]
[14.64191151 93.60636902]
[-0.16048647 91.17964172]
[-14.96288395 88.75291443]
[-29.76528168 86.32617950]
[-44.67735291 84.70439911]
[-59.65535355 83.89231110]
[-74.63335419 83.08023071]
[-89.61135864 82.26814270]
[-104.58935547 81.45606232]
[-116.18445587 92.19520569]
[-131.97373962 91.50646973]
[-142.58969116 79.79847717]
[-141.73405457 64.01737213]
[-129.91447449 53.52579498]
[-114.14329529 54.54822159]
[-103.77727509 66.47805786]
[-88.79927063 67.29014587]
[-73.82127380 68.10222626]
[-58.84326935 68.91431427]
[-43.86526871 69.72639465]
[-53.91156769 58.58764267]
[-54.57809830 43.60245895]
[-45.56040192 31.61574936]
[-30.97756577 28.10278702]
[-17.49071503 34.66821289]
[-11.26034641 48.31308365]
[-15.13235855 62.80471802]
[-27.33855247 71.52378082]
[-12.53615475 73.95051575]
[2.26624346 76.37724304]
[17.06864166 78.80397034]
[31.87103844 81.23070526]
[46.67343521 83.65743256]
[61.47583389 86.08416748]
[72.52932739 69.61704254]
[90.02323151 60.27310944]
[89.09527588 45.30183792]
[88.16732025 30.33057022]
[87.23936462 15.35930061]
[83.90482330 9.63834858]
[83.95703888 3.94747829]
[86.52165985 -0.08829184]
[86.05745697 -15.08110714]
[85.59325409 -30.07392311]
[85.12905121 -45.06673813]
[84.66485596 -60.05955505]
[76.50418854 -73.61367035]
[83.84391785 -86.57429504]
[83.37971497 -101.56710815]
[82.91551208 -116.55992126]
[82.45131683 -131.55273438]
[74.29064941 -145.10685730]
[81.63037872 -158.06747437]
[81.05017853 -173.05625916]
[80.35401917 -188.04008484]
[79.65785217 -203.02392578]
[78.96169281 -218.00776672]
[68.11944580 -229.83253479]
[70.74663544 -245.65901184]
[84.82791901 -253.34648132]
[99.56132507 -246.99777222]
[103.64466095 -231.48306274]
[93.94552612 -218.70391846]
[94.64169312 -203.72009277]
[95.33785248 -188.73625183]
[96.03401947 -173.75241089]
[99.48694611 -167.21249390]
[96.62319183 -158.53167725]
[104.75065613 -146.04994202]
[97.44412994 -132.01693726]
[97.90833282 -117.02412415]
[98.37252808 -102.03131104]
[98.83673096 -87.03849030]
[106.96419525 -74.55676270]
[99.65766907 -60.52375412]
[100.12187195 -45.53094101]
[100.58606720 -30.53812408]
[101.05027008 -15.54530811]
[101.51447296 -0.55249250]
[102.21063232 14.43134403]
[103.13858795 29.40261269]
[104.06655121 44.37388229]
[104.99450684 59.34514999]
[113.30179596 61.25952911]
[121.03288269 64.85203552]
[127.85289001 69.96704865]
[133.46638489 76.38300323]
[137.63021851 83.82198334]
[140.16401672 91.96174622]
[140.95802307 100.44970703]
[139.97784424 108.91818237]
[137.26593018 117.00035095]
[132.93977356 124.34611511]
[127.18675232 130.63726807]
[134.92005920 143.49012756]
[151.23208618 152.02770996]
[150.87147522 169.57026672]
[158.80276489 182.30191040]
[166.73403931 195.03355408]
[174.66532898 207.76519775]
[182.59661865 220.49684143]
[190.52789307 233.22848511]
[232.23471069 241.41137695]
[244.90460205 249.44093323]
[257.57449341 257.47048950]
[270.24438477 265.50006104]
[282.91427612 273.52960205]
[295.58416748 281.55917358]
[308.25405884 289.58874512]
[324.05230713 290.44064331]
[330.66070557 303.78897095]
[343.33059692 311.81854248]
[360.32400513 307.67895508]
[374.77093506 316.92553711]
[377.99859619 333.42776489]
[390.79122925 341.26028442]
[403.58386230 349.09283447]
[416.37649536 356.92535400]
[429.16912842 364.75787354]
[441.96176147 372.59042358]
[454.75439453 380.42294312]
[469.93798828 376.94497681]
[482.79995728 385.07052612]
[486.02209473 399.56719971]
[499.13201904 391.66854858]
[514.41162109 390.77874756]
[528.34979248 397.10220337]
[537.74365234 409.18585205]
[540.43450928 424.25296021]
[535.80401611 438.84121704]
[524.91632080 449.59835815]
[510.27322388 454.05245972]
[495.23968506 451.17999268]
[483.27026367 441.64105225]
[477.11544800 427.62759399]
[478.18957520 412.35983276]
[463.81298828 416.08135986]
[450.72787476 408.32028198]
[446.92187500 393.21557617]
[434.12924194 385.38305664]
[421.33660889 377.55053711]
[408.54397583 369.71798706]
[395.75134277 361.88546753]
[382.95870972 354.05294800]
[370.16607666 346.22039795]
[358.17898560 350.95700073]
[345.46316528 347.87670898]
[336.71600342 337.88677979]
[335.30105591 324.48843384]
[322.63116455 316.45886230]
[307.73913574 316.18130493]
[300.22448730 302.25863647]
[287.55459595 294.22906494]
[274.88470459 286.19949341]
[262.21481323 278.16995239]
[249.54492188 270.14038086]
[236.87503052 262.11083984]
[224.20513916 254.08126831]
[217.32707214 257.07159424]
[227.26574707 268.30648804]
[219.65179443 281.23040771]
[205.00761414 277.98263550]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[25 142]
[26 141]
[27 140]
[28 139]
[29 138]
[30 137]
[33 135]
[34 134]
[38 74]
[39 73]
[40 72]
[41 71]
[42 70]
[43 69]
[44 68]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[76 123]
[77 122]
[78 121]
[79 120]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
[88 113]
[89 112]
[90 111]
[91 110]
[93 108]
[94 106]
[95 105]
[96 104]
[97 103]
[143 198]
[144 197]
[145 196]
[146 195]
[147 194]
[148 193]
[149 192]
[151 190]
[152 189]
[155 185]
[156 184]
[157 183]
[158 182]
[159 181]
[160 180]
[161 179]
[164 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
