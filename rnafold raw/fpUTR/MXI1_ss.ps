%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACACACAGACUCACAGCGAGACCGACACACACUCCCAUACACUCACACACACAACUGCAGGCAGCGAGGCUCGGGAAGUCAGGCCGGCUUUUCGCCCCGGCGCCUUCUCUGCUCCAGCCGGCCGGGUCUCCCUGGGGGCCCGGAGCUCGGCCGGGCCGCGCAGCCCCGUUAGAGGACGAGCUCGGCGGACCCCCGCUCCUCC\
) } def
/len { sequence length } bind def

/coor [
[182.49540710 330.82336426]
[167.49574280 330.92282104]
[152.86656189 327.60812378]
[139.37469482 321.05300903]
[127.72731781 311.60110474]
[118.53495789 299.74780273]
[112.27943420 286.11444092]
[109.28863525 271.41564941]
[109.71934509 256.42181396]
[113.54896545 241.91893005]
[120.57678223 228.66714478]
[130.43440247 217.36106873]
[142.60514832 208.59333801]
[156.45106506 202.82353210]
[171.24638367 200.35406494]
[186.21562195 201.31437683]
[200.57727051 205.65551758]
[189.69006348 195.33714294]
[175.13002014 192.19799805]
[170.43608093 177.08914185]
[159.54887390 166.77078247]
[148.66166687 156.45240784]
[137.77445984 146.13404846]
[126.88725281 135.81567383]
[116.00004578 125.49730682]
[108.99496460 128.72637939]
[101.39924622 130.06918335]
[93.71164703 129.43757629]
[86.43695831 126.87299347]
[80.05286407 122.54386139]
[74.97855377 116.73442841]
[71.54722595 109.82616425]
[69.98419189 102.27268219]
[55.21652985 99.64281464]
[40.44886780 97.01293945]
[25.66149330 94.49629974]
[10.85526562 92.09304047]
[-3.95096040 89.68978119]
[-12.22302818 100.97286987]
[-24.49143410 107.55878448]
[-38.33421707 108.21208191]
[-51.04635620 102.86219788]
[-60.16835022 92.60607910]
[-63.96203613 79.48378754]
[-78.72969818 76.85391235]
[-93.49735260 74.22404480]
[-108.44031525 79.42198181]
[-119.61390686 69.57312012]
[-126.94670868 82.82109070]
[-138.18548584 92.96844482]
[-152.11112976 98.91446686]
[-167.21308899 100.01417542]
[-181.85322571 96.14829254]
[-194.44349670 87.73615265]
[-203.61817932 75.69023895]
[-208.38208008 61.31721115]
[-208.21844482 46.17614365]
[-203.14505005 31.90942574]
[-193.71217346 20.06460381]
[-180.94306946 11.92651558]
[-166.22280884 8.37792110]
[-151.14813232 9.80374432]
[-137.35423279 16.04932213]
[-126.33737946 26.43718338]
[-119.29259491 39.84053040]
[-116.98403168 54.80546188]
[-103.09735870 49.41941452]
[-90.86748505 59.45638275]
[-76.09982300 62.08625412]
[-61.33216476 64.71612549]
[-51.23157501 52.10581970]
[-36.06294250 46.27514267]
[-19.93108749 48.90337372]
[-7.25283194 59.36682892]
[-1.54770005 74.88355255]
[13.25852585 77.28681183]
[28.06475258 79.69007111]
[35.17422104 77.65776062]
[43.07874298 82.24528503]
[57.84640121 84.87515259]
[72.61405945 87.50502777]
[77.88194275 79.58174133]
[85.35961151 73.69841766]
[94.29999542 70.44287109]
[95.21891022 55.47104263]
[96.13782501 40.49921799]
[97.05673981 25.52738953]
[97.97565460 10.55556297]
[98.89456940 -4.41626358]
[99.81348419 -19.38809013]
[100.73239899 -34.35991669]
[90.68120575 -23.22557831]
[76.23504639 -19.18718338]
[61.86698532 -23.49516869]
[52.02588272 -34.81562424]
[49.75890350 -49.64332581]
[55.76798630 -63.38708878]
[68.19249725 -71.79133606]
[83.18537140 -72.25382233]
[96.10425568 -64.63133240]
[102.94931030 -51.28253937]
[105.91792297 -65.98584747]
[101.06482697 -81.04433441]
[111.16790771 -91.98859406]
[114.13652802 -106.69190979]
[104.24290466 -118.80182648]
[104.49974060 -134.43730164]
[114.78577423 -146.21572876]
[130.24426270 -148.57571411]
[143.57615662 -140.40292358]
[148.48655701 -125.55631256]
[142.65693665 -111.04598999]
[128.83984375 -103.72328949]
[125.87122345 -89.01998138]
[130.93666077 -75.01317596]
[120.62123871 -63.01723099]
[117.65261841 -48.31392288]
[115.70422363 -33.44100189]
[114.78530884 -18.46917534]
[113.86639404 -3.49734879]
[112.94747925 11.47447777]
[112.02856445 26.44630432]
[111.10964966 41.41813278]
[110.19073486 56.38995743]
[109.27182007 71.36178589]
[128.00482178 88.96171570]
[126.31842041 114.61009979]
[137.20562744 124.92846680]
[148.09283447 135.24684143]
[158.98004150 145.56520081]
[169.86724854 155.88357544]
[180.75445557 166.20193481]
[196.09323120 170.07911682]
[200.00843811 184.44993591]
[210.89564514 194.76831055]
[223.54823303 202.82510376]
[237.50332642 208.32559204]
[251.45841980 213.82608032]
[265.41351318 219.32656860]
[279.36859131 224.82705688]
[293.36541748 230.22045898]
[307.40316772 235.50645447]
[321.48101807 240.68472290]
[337.08422852 238.06753540]
[346.44705200 249.65145874]
[360.56414795 254.72171021]
[374.68124390 259.79196167]
[388.79833984 264.86221313]
[402.91546631 269.93246460]
[417.03256226 275.00271606]
[431.14965820 280.07296753]
[446.75289917 277.45578003]
[456.11569214 289.03970337]
[470.23278809 294.10995483]
[484.60140991 298.41607666]
[499.18023682 301.94567871]
[513.75903320 305.47531128]
[528.33782959 309.00491333]
[541.69677734 300.56011963]
[557.09576416 304.11636353]
[565.39886475 317.56384277]
[561.67999268 332.92434692]
[548.14550781 341.08480835]
[532.82513428 337.20373535]
[524.80822754 323.58374023]
[510.22943115 320.05410767]
[495.65060425 316.52450562]
[481.07180786 312.99490356]
[488.92895508 325.77239990]
[486.86248779 340.62939453]
[475.81655884 350.77764893]
[460.83804321 351.58047485]
[448.77066040 342.67102051]
[445.12799072 328.12002563]
[451.57437134 314.57586670]
[465.16253662 308.22705078]
[451.04544067 303.15679932]
[436.45196533 306.13665771]
[426.07940674 294.19006348]
[411.96231079 289.11981201]
[397.84521484 284.04956055]
[383.72808838 278.97930908]
[369.61099243 273.90905762]
[355.49389648 268.83880615]
[341.37680054 263.76855469]
[326.78332520 266.74841309]
[316.41076660 254.80183411]
[309.04953003 255.49981689]
[302.11718750 249.54420471]
[288.07943726 244.25820923]
[280.70837402 244.84330750]
[273.86810303 238.78215027]
[259.91302490 233.28166199]
[245.95793152 227.78117371]
[232.00283813 222.28068542]
[218.04774475 216.78019714]
[228.05441284 227.95457458]
[235.25730896 241.11201477]
[239.27890015 255.56285095]
[239.90837097 270.54962158]
[237.11274719 285.28680420]
[231.03852844 299.00192261]
[222.00415039 310.97604370]
[210.48312378 320.58157349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 135]
[18 134]
[20 132]
[21 131]
[22 130]
[23 129]
[24 128]
[25 127]
[33 81]
[34 80]
[35 79]
[36 77]
[37 76]
[38 75]
[44 70]
[45 69]
[46 68]
[48 66]
[84 125]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[101 117]
[102 116]
[104 114]
[105 113]
[136 196]
[137 195]
[138 194]
[139 193]
[140 192]
[141 190]
[142 189]
[143 187]
[145 185]
[146 184]
[147 183]
[148 182]
[149 181]
[150 180]
[151 179]
[153 177]
[154 176]
[155 168]
[156 167]
[157 166]
[158 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
