%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCAAGAGGCCUCCCAGUCAGACCUGGACGGCUCCAGCCGUGUCCUGAGGAGCUGGACCAGCCACAUCCCCUGGGGCUGCAGUUGAAGCAGAACCAAGUGGCCAUCCCGGCGUUAGACCGUAGGUUCCUGGUCCCGGAGUGGUCGGAGCCCGCCAGUGGGCAGGCAGCUCUUGCUCACAGGCCGCGGUGCCCAGGCCGCUGGCUCUCCGCAGGGCGGA\
) } def
/len { sequence length } bind def

/coor [
[61.12802124 312.92123413]
[57.95375061 327.58154297]
[54.77947998 342.24182129]
[51.60520554 356.90209961]
[48.43093491 371.56237793]
[53.95189667 387.00424194]
[43.13449860 399.32968140]
[27.10675240 395.85931396]
[22.35663033 380.16317749]
[33.77064896 368.38812256]
[36.94491959 353.72784424]
[40.11919403 339.06753540]
[43.29346466 324.40725708]
[46.46773529 309.74697876]
[39.63946915 306.64459229]
[19.15466881 297.33743286]
[10.20045853 309.37164307]
[1.24624693 321.40585327]
[-7.70796442 333.44006348]
[-5.16561413 349.03851318]
[-14.46536160 361.81701660]
[-30.08983040 364.19433594]
[-42.76930237 354.75997925]
[-44.98126984 339.11126709]
[-35.41341019 326.53225708]
[-19.74217033 324.48583984]
[-10.78795815 312.45166016]
[-1.83374727 300.41744995]
[7.12046385 288.38323975]
[-2.90592670 277.22656250]
[-15.82464886 284.84933472]
[-28.74337006 292.47210693]
[-41.66209412 300.09487915]
[-54.58081436 307.71762085]
[-62.16990280 322.25509644]
[-78.56351471 322.68106079]
[-86.89731598 308.55731201]
[-78.59819794 294.41317749]
[-62.20358276 294.79891968]
[-49.28486252 287.17614746]
[-36.36614227 279.55337524]
[-23.44741821 271.93060303]
[-10.52869606 264.30783081]
[0.26469156 253.89137268]
[8.34166241 241.25164795]
[16.41863251 228.61192322]
[24.49560356 215.97219849]
[32.57257462 203.33248901]
[40.64954376 190.69276428]
[40.98291016 175.80187988]
[54.93363571 168.33946228]
[63.01060867 155.69973755]
[71.08757782 143.06001282]
[64.59304810 129.53887939]
[49.67821884 127.94268799]
[34.76338959 126.34648895]
[19.84855843 124.75028992]
[3.45594954 129.07679749]
[-5.23940897 114.52252197]
[6.33897018 102.13795471]
[21.44475746 109.83545685]
[36.35958862 111.43165588]
[51.27441788 113.02785492]
[66.18924713 114.62405396]
[69.72178650 108.00807953]
[56.48982620 100.94300079]
[43.25786591 93.87792969]
[28.49032974 91.24736023]
[26.42891502 76.38968658]
[39.92247391 69.83805847]
[50.32294083 80.64597321]
[63.55489731 87.71104431]
[76.78685760 94.77611542]
[80.31939697 88.16014099]
[70.69573975 76.65425873]
[61.07209015 65.14837646]
[45.57257080 63.59830856]
[35.97672272 51.79261398]
[37.54999542 37.02574539]
[27.92634201 25.51986504]
[18.30268860 14.01398373]
[8.67903614 2.50810218]
[-6.95776653 2.66433573]
[-19.00377846 -7.30700254]
[-21.77124405 -22.69775200]
[-13.95344639 -36.24087143]
[0.75828695 -41.54171371]
[15.41752529 -36.09738159]
[23.10262489 -22.47852516]
[20.18491745 -7.11555052]
[29.80857086 4.39033079]
[39.43222427 15.89621258]
[49.05587769 27.40209389]
[63.86832047 28.46376038]
[73.79197693 39.99526978]
[72.57797241 55.52472305]
[82.20162201 67.03060150]
[91.82527161 78.53648376]
[99.23377228 77.36849213]
[114.05075836 75.03250885]
[121.45925140 73.86450958]
[127.07615662 59.95586777]
[132.69305420 46.04722214]
[138.30996704 32.13857651]
[143.92686462 18.22993279]
[149.54376221 4.32128716]
[155.16065979 -9.58735752]
[153.15393066 -25.28078270]
[165.09413147 -34.18474579]
[170.71104431 -48.09339142]
[176.32794189 -62.00203705]
[181.94483948 -75.91068268]
[167.33810425 -72.49845123]
[155.47335815 -81.67601013]
[155.10525513 -96.67149353]
[166.50543213 -106.42014313]
[181.26199341 -103.72869110]
[188.48640442 -90.58453369]
[195.07687378 -104.05916595]
[201.66734314 -117.53379822]
[208.25781250 -131.00843811]
[214.84828186 -144.48306274]
[207.45989990 -158.12826538]
[209.53640747 -173.50578308]
[220.27931213 -184.70262146]
[235.55778503 -187.41339111]
[249.49690247 -180.59574890]
[256.73681641 -166.87118530]
[254.49362183 -151.51712036]
[243.62988281 -140.43746948]
[228.32290649 -137.89259338]
[221.73243713 -124.41796112]
[215.14196777 -110.94332886]
[208.55149841 -97.46869659]
[201.96102905 -83.99406433]
[195.85348511 -70.29377747]
[190.23658752 -56.38513184]
[184.61968994 -42.47649002]
[179.00277710 -28.56784248]
[181.41128540 -13.86925888]
[169.06930542 -3.97045588]
[163.45240784 9.93818951]
[157.83551025 23.84683418]
[152.21861267 37.75547791]
[146.60169983 51.66412354]
[140.98480225 65.57276917]
[135.36790466 79.48141479]
[141.57266235 93.13794708]
[155.74343872 98.05617523]
[169.91423035 102.97441101]
[184.08500671 107.89263916]
[198.25578308 112.81086731]
[214.36845398 99.19296265]
[240.65733337 106.81518555]
[255.59333801 108.19921112]
[270.52935791 109.58323669]
[284.98455811 103.15225983]
[296.94363403 112.03087616]
[311.87963867 113.41490173]
[326.81567383 114.79892731]
[341.75167847 116.18295288]
[356.68768311 117.56697845]
[371.62368774 118.95100403]
[386.55972290 120.33502960]
[401.49572754 121.71905518]
[416.43173218 123.10308075]
[429.64312744 114.00148010]
[444.95376587 118.79349518]
[450.61868286 133.80310059]
[442.29220581 147.51622009]
[426.36172485 149.41331482]
[415.04772949 138.03909302]
[400.11169434 136.65507507]
[385.17568970 135.27104187]
[370.23968506 133.88702393]
[355.30364990 132.50299072]
[340.36764526 131.11897278]
[325.43164062 129.73493958]
[310.49563599 128.35092163]
[295.55960083 126.96689606]
[282.17272949 133.49685669]
[269.14532471 124.51924896]
[254.20932007 123.13522339]
[239.27330017 121.75119781]
[232.87477112 135.31875610]
[226.47677612 148.88510132]
[237.04562378 159.52932739]
[247.61445618 170.17356873]
[258.18328857 180.81779480]
[268.75213623 191.46202087]
[284.55523682 191.26754761]
[295.80871582 202.36415100]
[295.83609009 218.16841125]
[284.62112427 229.30395508]
[268.81747437 229.16424561]
[257.80111694 217.83216858]
[258.10791016 202.03085327]
[247.53907776 191.38662720]
[236.97023010 180.74240112]
[226.40139771 170.09817505]
[215.83255005 159.45394897]
[195.29200745 145.95104980]
[193.33755493 126.98165131]
[179.16677856 122.06341553]
[164.99598694 117.14518738]
[150.82521057 112.22695923]
[136.65443420 107.30873108]
[83.72729492 151.13699341]
[75.65032959 163.77671814]
[67.57335663 176.41642761]
[66.66226959 192.21138000]
[53.28926468 198.76972961]
[45.21229553 211.40945435]
[37.13532257 224.04917908]
[29.05835342 236.68888855]
[20.98138237 249.32861328]
[12.90441227 261.96832275]
[25.53430939 261.81387329]
[38.48832321 267.10662842]
[49.91027069 277.85119629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[16 29]
[17 28]
[18 27]
[19 26]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[44 217]
[45 216]
[46 215]
[47 214]
[48 213]
[49 212]
[51 210]
[52 209]
[53 208]
[54 64]
[55 63]
[56 62]
[57 61]
[74 98]
[75 97]
[76 96]
[79 93]
[80 92]
[81 91]
[82 90]
[101 147]
[102 146]
[103 145]
[104 144]
[105 143]
[106 142]
[107 141]
[109 139]
[110 138]
[111 137]
[112 136]
[118 135]
[119 134]
[120 133]
[121 132]
[122 131]
[148 207]
[149 206]
[150 205]
[151 204]
[152 203]
[154 184]
[155 183]
[156 182]
[158 180]
[159 179]
[160 178]
[161 177]
[162 176]
[163 175]
[164 174]
[165 173]
[166 172]
[186 201]
[187 200]
[188 199]
[189 198]
[190 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
