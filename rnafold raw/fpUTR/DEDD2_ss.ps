%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCUGCGCAUGCGCCGAAGGGGCGUGGCGGUCGCACCUGCGCGAGUUGGGGGAAGGAGGAGGGGCGAGGUGACGCAGGCGUAAUAAUAGAGAAGGUGCCAGAAAGAUCCAAAACAAGUGGCUGCGGCCGUCGCCCAGGAGUCAUCGGACGCCAGAAUCUGGCCGGGUUCUGAGCUUGUUCCGCCUCCCUCCCCCGGGA\
) } def
/len { sequence length } bind def

/coor [
[-103.12178040 410.01266479]
[-110.56395721 417.06637573]
[-120.21448517 421.40640259]
[-131.08270264 422.35226440]
[-138.92018127 435.14187622]
[-146.75765991 447.93148804]
[-154.59513855 460.72106934]
[-156.41351318 469.68203735]
[-162.65750122 473.64865112]
[-170.69490051 486.31356812]
[-178.73229980 498.97848511]
[-186.76971436 511.64340210]
[-194.80711365 524.30834961]
[-195.66879272 540.10607910]
[-209.02122498 546.70617676]
[-217.05862427 559.37109375]
[-220.44056702 575.98431396]
[-237.34074402 577.33355713]
[-243.31567383 561.46734619]
[-229.72354126 551.33367920]
[-221.68614197 538.66876221]
[-221.39935303 523.77691650]
[-207.47203064 516.27093506]
[-199.43463135 503.60601807]
[-191.39723206 490.94110107]
[-183.35981750 478.27618408]
[-175.32241821 465.61126709]
[-167.38473511 452.88360596]
[-159.54725647 440.09399414]
[-151.70977783 427.30438232]
[-143.87229919 414.51480103]
[-153.43365479 402.95709229]
[-167.46531677 408.25921631]
[-181.49697876 413.56134033]
[-195.52864075 418.86346436]
[-201.80308533 433.36886597]
[-216.52722168 439.11126709]
[-230.96548462 432.68383789]
[-236.55191040 417.89981079]
[-229.97215271 403.53030396]
[-215.12989807 398.10049438]
[-200.83076477 404.83178711]
[-186.79910278 399.52969360]
[-172.76744080 394.22756958]
[-158.73577881 388.92544556]
[-141.66847229 364.54467773]
[-115.16192627 365.33200073]
[-105.60056305 353.77432251]
[-96.03920746 342.21661377]
[-86.47784424 330.65890503]
[-76.91648865 319.10122681]
[-67.35512543 307.54351807]
[-57.79376602 295.98580933]
[-48.23240662 284.42813110]
[-46.08143234 269.68963623]
[-31.32317734 263.98837280]
[-21.76181793 252.43066406]
[-12.20045757 240.87297058]
[-2.63909793 229.31527710]
[6.92226171 217.75756836]
[9.07323837 203.01910400]
[23.83149147 197.31782532]
[33.39285278 185.76013184]
[42.95421219 174.20243835]
[52.51557159 162.64472961]
[62.07693100 151.08703613]
[71.63829041 139.52932739]
[81.19965363 127.97163391]
[76.18334198 69.24226379]
[77.12519836 54.27186584]
[78.06705475 39.30146408]
[79.00891113 24.33106232]
[79.95077515 9.36066151]
[80.89263153 -5.60973930]
[81.83448792 -20.58014107]
[79.23598480 -26.67526627]
[79.99788666 -32.31836700]
[83.04834747 -36.00366592]
[76.64409637 -50.47073746]
[85.54479980 -62.41338348]
[86.95642090 -77.34680939]
[88.36804962 -92.28024292]
[89.77967072 -107.21366882]
[80.88518524 -95.13525391]
[68.08762360 -87.31078339]
[53.28273010 -84.89933014]
[38.66360855 -88.25811005]
[26.39585114 -96.88956451]
[18.29672241 -109.51509857]
[15.56597710 -124.26444244]
[18.60812950 -138.95271301]
[26.97253609 -151.40408325]
[39.42014694 -159.77409363]
[54.10704803 -162.82286072]
[68.85761261 -160.09873962]
[81.48679352 -152.00529480]
[90.12377167 -139.74142456]
[93.48906708 -125.12564087]
[98.12432098 -139.39149475]
[102.75957489 -153.65733337]
[107.39482880 -167.92318726]
[95.28083038 -177.00778198]
[86.77502441 -189.53494263]
[82.80006409 -204.14584351]
[83.78710938 -219.25558472]
[89.62911224 -233.22518921]
[99.69235992 -244.53933716]
[112.88527679 -251.97073364]
[127.77677917 -254.71330261]
[142.75157166 -252.46952820]
[156.18527222 -245.48281860]
[166.62072754 -234.51103210]
[172.92594910 -220.74429321]
[174.41700745 -205.67593384]
[170.93215942 -190.94044495]
[162.84941101 -178.13623047]
[151.04551697 -168.65219116]
[136.80088806 -163.51708984]
[121.66067505 -163.28793335]
[117.02542114 -149.02207947]
[112.39016724 -134.75624084]
[107.75491333 -120.49038696]
[104.71310425 -105.80204773]
[103.30147552 -90.86861420]
[101.88985443 -75.93518829]
[100.47822571 -61.00175858]
[106.98345184 -47.60282516]
[97.98177338 -34.59204102]
[96.80488586 -19.63828278]
[95.86302948 -4.66788197]
[94.92117310 10.30251884]
[93.97931671 25.27292061]
[93.03746033 40.24332047]
[92.09560394 55.21372223]
[91.15373993 70.18412018]
[96.66116333 75.27513123]
[102.94107819 61.65299225]
[117.83709717 63.41609955]
[120.76338196 78.12789154]
[107.67600250 85.45713806]
[113.18341827 90.54814148]
[128.03376770 88.43462372]
[142.88412476 86.32110596]
[155.44828796 75.78195953]
[170.76286316 81.64675140]
[173.07353210 97.88229370]
[160.00326538 107.78684998]
[144.99765015 101.17146301]
[130.14729309 103.28498077]
[115.29693604 105.39849854]
[113.30011749 120.26499939]
[127.06643677 126.22221375]
[140.87911987 132.07113647]
[154.73730469 137.81138611]
[168.59550476 143.55163574]
[182.45368958 149.29188538]
[196.31188965 155.03213501]
[210.17008972 160.77238464]
[224.02827454 166.51263428]
[237.88647461 172.25288391]
[254.06584167 169.57708740]
[264.26232910 182.42091370]
[257.98663330 197.57174683]
[241.69467163 199.44371033]
[232.14620972 186.11108398]
[218.28802490 180.37083435]
[204.42982483 174.63058472]
[190.57164001 168.89033508]
[176.71343994 163.15007019]
[162.85525513 157.40982056]
[148.99705505 151.66957092]
[135.13887024 145.92932129]
[127.74951935 146.27435303]
[121.10921478 139.98854065]
[107.34289551 134.03131104]
[92.75734711 137.53298950]
[83.19599152 149.09069824]
[73.63462830 160.64839172]
[64.07327271 172.20608521]
[54.51190948 183.76379395]
[44.95055008 195.32148743]
[35.38919067 206.87918091]
[32.55432129 222.44435120]
[18.47996140 227.31893921]
[8.91860104 238.87663269]
[-0.64275914 250.43432617]
[-10.20411873 261.99203491]
[-19.76547813 273.54974365]
[-22.60034752 289.11489868]
[-36.67470932 293.98947144]
[-46.23606873 305.54718018]
[-55.79742813 317.10488892]
[-65.35878754 328.66256714]
[-74.92015076 340.22027588]
[-84.48150635 351.77798462]
[-94.04286957 363.33566284]
[-103.60422516 374.89337158]
[-99.05240631 382.59259033]
[-97.23750305 391.68457031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 31]
[5 30]
[6 29]
[7 28]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[15 21]
[16 20]
[32 45]
[33 44]
[34 43]
[35 42]
[47 197]
[48 196]
[49 195]
[50 194]
[51 193]
[52 192]
[53 191]
[54 190]
[56 188]
[57 187]
[58 186]
[59 185]
[60 184]
[62 182]
[63 181]
[64 180]
[65 179]
[66 178]
[67 177]
[68 176]
[69 135]
[70 134]
[71 133]
[72 132]
[73 131]
[74 130]
[75 129]
[78 128]
[80 126]
[81 125]
[82 124]
[83 123]
[98 122]
[99 121]
[100 120]
[101 119]
[141 150]
[142 149]
[143 148]
[151 175]
[152 174]
[153 172]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
