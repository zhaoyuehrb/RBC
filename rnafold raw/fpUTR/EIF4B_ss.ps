%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCAGGCCCCGCCCCUUUGGCCACAUGUCGCGCAUGUCUUCCCGUCGGACGGCGUGCCACCUCGCCGCGCAGCUUUACGAACCUAGAGCAGCGCCGCCCCGCCUCCUGUCUCCGUCCUCACCUCCCCGCCCCCUCCCAGCUUCGCGUCUCCUAGCUCGACGCGCCCGCUAUAAUCACGUGAUUGCCUCAUCCGGGUCUUUUGCGUUCUCUUUCCCUCUCCCAAC\
) } def
/len { sequence length } bind def

/coor [
[83.94955444 442.47546387]
[76.19493866 445.10604858]
[68.18614197 446.80438232]
[60.03479385 447.54721069]
[51.85447311 447.32455444]
[43.75909424 446.14001465]
[35.86135864 444.01040649]
[29.62155342 457.65097046]
[23.38174629 471.29153442]
[17.14193916 484.93209839]
[26.10836601 497.40200806]
[27.62259293 512.68609619]
[21.27730179 526.67297363]
[8.77934361 535.60021973]
[-6.50939417 537.06652832]
[-20.47631836 530.67742920]
[-29.36439514 518.15155029]
[-30.78277588 502.85830688]
[-24.34992599 488.91149902]
[-11.79624844 480.06271362]
[3.50138116 478.69229126]
[9.74118805 465.05172729]
[15.98099613 451.41116333]
[22.22080231 437.77059937]
[4.68031597 422.94573975]
[-7.06311417 403.18951416]
[-11.71136570 380.66442871]
[-8.74362183 357.84011841]
[1.52529597 337.22268677]
[17.97828865 321.07958984]
[38.81748962 311.19012451]
[61.76072311 308.64947510]
[64.24041748 293.85586548]
[66.72011566 279.06225586]
[69.19980621 264.26861572]
[71.67950439 249.47500610]
[59.97175980 242.04322815]
[51.95381927 230.67581177]
[48.86225891 217.06866455]
[51.19564819 203.26730347]
[58.63450241 191.35934448]
[70.08455658 183.15870667]
[83.83763885 179.92941284]
[86.52182770 165.17152405]
[89.20601654 150.41365051]
[91.89020538 135.65576172]
[69.74278259 117.85147095]
[67.62728119 90.65251923]
[85.23009491 71.32014465]
[74.29840851 61.04890823]
[63.36672211 50.77767563]
[52.43503571 40.50644302]
[41.50334930 30.23521042]
[30.57166290 19.96397781]
[15.21627712 16.15310860]
[11.23901463 1.79934049]
[-3.16540098 10.52937317]
[-19.42848015 14.86053467]
[-36.23996353 14.45171356]
[-52.24760437 9.34336472]
[-66.16594696 -0.04634919]
[-76.87953949 -12.95578194]
[-83.53233337 -28.34157753]
[-85.59607697 -44.96299362]
[-82.91226959 -61.48196411]
[-75.70427704 -76.57080078]
[-87.05287170 -86.37944031]
[-102.55319977 -89.54967499]
[-107.12281799 -103.72598267]
[-118.47141266 -113.53462982]
[-129.82000732 -123.34326935]
[-141.16859436 -133.15190125]
[-156.66893005 -136.32214355]
[-161.23854065 -150.49845886]
[-172.58714294 -160.30709839]
[-183.93572998 -170.11573792]
[-195.28431702 -179.92437744]
[-206.63291931 -189.73301697]
[-217.98150635 -199.54165649]
[-233.72392273 -198.14453125]
[-245.78961182 -208.35211182]
[-247.02021790 -224.10841370]
[-236.68565369 -236.06550598]
[-220.91722107 -237.12947083]
[-209.07005310 -226.66905212]
[-208.17286682 -210.89024353]
[-196.82427979 -201.08160400]
[-185.47567749 -191.27296448]
[-174.12709045 -181.46432495]
[-162.77850342 -171.65568542]
[-151.42990112 -161.84704590]
[-136.74130249 -159.37838745]
[-131.35995483 -144.50050354]
[-120.01136780 -134.69186401]
[-108.66277313 -124.88321686]
[-97.31417847 -115.07457733]
[-82.62557983 -112.60592651]
[-77.24423218 -97.72803497]
[-65.89563751 -87.91939545]
[-55.11269760 -95.62620544]
[-42.87297821 -100.73246765]
[-29.79374695 -102.97668457]
[-16.53550339 -102.24180603]
[-3.76862168 -98.56129456]
[7.86055326 -92.11767578]
[17.76241684 -83.23344421]
[25.43400574 -72.35492706]
[30.48453903 -60.02989960]
[32.65533066 -46.87995911]
[31.83302498 -33.56919861]
[28.05552292 -20.77067184]
[21.51024818 -9.13234615]
[36.08372498 -6.05614424]
[40.84289551 9.03229046]
[51.77458191 19.30352402]
[62.70626831 29.57475662]
[73.63795471 39.84598923]
[84.56964111 50.11722183]
[95.50132751 60.38845444]
[90.83216095 46.13367081]
[86.16299438 31.87888527]
[76.45775604 20.44174004]
[70.64781189 6.61261940]
[69.27272034 -8.32421780]
[72.46017456 -22.98164368]
[79.91416931 -35.99847794]
[90.94247437 -46.16589737]
[104.52094269 -52.53968811]
[119.38858795 -54.52794266]
[134.16470337 -51.94602203]
[147.47709656 -45.03369141]
[158.08947754 -34.43288040]
[165.01634216 -21.12804604]
[167.61439514 -6.35475492]
[165.64236450 8.51505089]
[159.28340149 22.10046768]
[149.12803650 33.13986969]
[136.11883545 40.60826111]
[126.89215851 52.43486023]
[117.66548157 64.26145935]
[131.43263245 58.30614853]
[145.19976807 52.35083389]
[151.34780884 35.96753693]
[167.13400269 29.23748970]
[182.59053040 35.87885666]
[196.27394104 29.73358727]
[209.95735168 23.58831787]
[223.64076233 17.44305038]
[237.32417297 11.29778194]
[251.00758362 5.15251303]
[253.19740295 -10.11864376]
[263.31307983 -21.76668167]
[278.12670898 -26.07475090]
[292.91134644 -21.66816711]
[302.94924927 -9.95305157]
[305.03738403 5.33234358]
[298.50939941 19.31050491]
[285.44836426 27.52105141]
[270.02203369 27.34402847]
[257.15283203 18.83592224]
[243.46943665 24.98118973]
[229.78602600 31.12645912]
[216.10261536 37.27172852]
[202.41920471 43.41699600]
[188.73580933 49.56226349]
[185.89021301 62.12254333]
[176.18743896 70.88394928]
[163.01669312 72.48444366]
[151.15509033 66.11798096]
[137.38793945 72.07328796]
[123.62079620 78.02860260]
[133.18031311 90.87187195]
[135.74540710 107.70506287]
[150.25643921 111.50373840]
[164.76747131 115.30240631]
[179.27850342 119.10107422]
[193.78953552 122.89974976]
[209.45349121 118.04459381]
[221.30474854 129.37948608]
[217.15174866 145.24404907]
[201.26675415 149.31819153]
[189.99087524 137.41078186]
[175.47982788 133.61210632]
[160.96879578 129.81344604]
[146.45776367 126.01477051]
[131.94673157 122.21609497]
[125.62207031 126.24706268]
[139.81192017 131.11000061]
[144.85729980 145.23600769]
[136.95904541 157.98817444]
[122.06454468 159.76406860]
[111.38939667 149.22645569]
[112.97274780 134.30899048]
[106.64808655 138.33995056]
[103.96389771 153.09783936]
[101.27970886 167.85571289]
[98.59552002 182.61360168]
[111.83493805 192.08074951]
[119.59017944 206.32412720]
[120.35205841 222.46575928]
[114.01868439 237.26924133]
[101.90563965 247.78863525]
[86.47312164 251.95471191]
[83.99342346 266.74832153]
[81.51373291 281.54193115]
[79.03403473 296.33557129]
[76.55434418 311.12918091]
[84.32357788 313.83154297]
[91.71875763 317.42959595]
[98.63704681 321.87289429]
[104.98232269 327.09918213]
[110.66646576 333.03533936]
[115.61061096 339.59838867]
[119.74623108 346.69671631]
[123.01608276 354.23117065]
[125.37500000 362.09671021]
[126.79053497 370.18365479]
[127.24337769 378.37927246]
[126.72764587 386.56939697]
[125.25092316 394.63998413]
[122.83419800 402.47869873]
[119.51152802 409.97647095]
[115.32956696 417.02908325]
[110.34692383 423.53848267]
[104.63333893 429.41427612]
[98.26866913 434.57492065]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 24]
[8 23]
[9 22]
[10 21]
[32 207]
[33 206]
[34 205]
[35 204]
[36 203]
[43 197]
[44 196]
[45 195]
[46 194]
[49 119]
[50 118]
[51 117]
[52 116]
[53 115]
[54 114]
[56 112]
[66 99]
[67 98]
[69 96]
[70 95]
[71 94]
[72 93]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[140 171]
[141 170]
[142 169]
[145 165]
[146 164]
[147 163]
[148 162]
[149 161]
[150 160]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
