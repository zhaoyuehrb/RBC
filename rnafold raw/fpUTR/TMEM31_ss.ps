%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAGUUGCGGGUUGCAGGAGUUCAGGAAAGGAGGUGGGACUAGAGUCAACCUGGAAUAGCUCUACAGUAACAAUGGCAGCCUUUUUGUUGCUGGGACAUCCAUACAGGCAACUUAGCUGGUGAAAGGACUCUGGAUUGGUUGGCAGUCUGCUUUUUUUUUUCCAAGGUGAUCACUUUACUGUAGAAGAA\
) } def
/len { sequence length } bind def

/coor [
[-145.47004700 314.49667358]
[-151.49021912 300.75778198]
[-147.40303040 286.32482910]
[-160.51438904 293.61126709]
[-168.81849670 307.07797241]
[-183.70176697 306.49731445]
[-196.81312561 313.78378296]
[-209.92448425 321.07022095]
[-218.22859192 334.53695679]
[-233.11186218 333.95629883]
[-246.22322083 341.24273682]
[-259.33456421 348.52920532]
[-272.44592285 355.81564331]
[-285.55728149 363.10208130]
[-298.66864014 370.38854980]
[-311.77999878 377.67498779]
[-324.83129883 385.06848145]
[-326.57220459 400.37451172]
[-336.87161255 411.58950806]
[-351.62539673 414.55429077]
[-365.13421631 408.33737183]
[-378.12460327 415.83737183]
[-391.11495972 423.33737183]
[-404.10534668 430.83737183]
[-417.09573364 438.33737183]
[-415.46191406 453.47839355]
[-420.13394165 467.97293091]
[-430.30233765 479.30975342]
[-444.20538330 485.52465820]
[-459.43429565 485.54089355]
[-473.35055542 479.35562134]
[-483.54312134 468.04052734]
[-488.24600220 453.55596924]
[-486.64447021 438.41149902]
[-479.01596069 425.23098755]
[-466.68215942 416.29803467]
[-451.77999878 413.16033936]
[-436.89132690 416.36154175]
[-424.59573364 425.34698486]
[-411.60534668 417.84698486]
[-398.61495972 410.34698486]
[-385.62460327 402.84698486]
[-372.63421631 395.34698486]
[-371.26382446 380.53955078]
[-361.31933594 369.24478149]
[-346.45718384 365.93273926]
[-332.33129883 372.07809448]
[-328.10372925 366.00115967]
[-319.06643677 364.56362915]
[-305.95510864 357.27719116]
[-292.84375000 349.99075317]
[-279.73239136 342.70428467]
[-266.62103271 335.41784668]
[-253.50967407 328.13137817]
[-240.39831543 320.84494019]
[-233.03202820 307.89938354]
[-217.21093750 307.95886230]
[-204.09957886 300.67242432]
[-190.98822021 293.38598633]
[-183.62193298 280.44042969]
[-167.80084229 280.49990845]
[-154.68948364 273.21347046]
[-142.01667786 265.18850708]
[-129.82398987 256.45132446]
[-117.63128662 247.71415710]
[-105.43858337 238.97700500]
[-93.24588013 230.23983765]
[-81.05318451 221.50267029]
[-68.86048126 212.76550293]
[-56.66778183 204.02833557]
[-44.47508240 195.29116821]
[-32.28238297 186.55400085]
[-31.98037720 173.66296387]
[-24.18841743 163.14561462]
[-11.57450104 158.97993469]
[1.32105339 162.90153503]
[13.65507698 154.36503601]
[25.98909950 145.82853699]
[28.39451599 131.17419434]
[40.78136444 122.34126282]
[56.13586807 124.96364594]
[68.46989441 116.42714691]
[80.80391693 107.89064026]
[93.13793945 99.35414124]
[87.34282684 96.27590179]
[82.69425201 91.02422333]
[79.79271698 83.96527863]
[79.13343048 75.61070251]
[81.07369995 66.58944702]
[83.75895691 51.83176041]
[86.44420624 37.07406998]
[89.12946320 22.31637955]
[91.81471252 7.55868959]
[94.49996948 -7.19900036]
[89.35811615 -22.16135216]
[99.24882507 -33.29792023]
[87.48550415 -43.17313004]
[82.25085449 -57.61245346]
[84.95298004 -72.73178101]
[94.86501312 -84.46409607]
[109.32067108 -89.65345764]
[124.43145752 -86.90395355]
[136.13264465 -76.95519257]
[141.27667236 -62.48334122]
[138.47981262 -47.38124847]
[128.49443054 -35.71130371]
[114.00651550 -30.61266708]
[119.34043121 -16.70588493]
[109.25765991 -4.51374769]
[106.57240295 10.24394226]
[103.88715363 25.00163269]
[101.20189667 39.75932312]
[98.51664734 54.51701355]
[95.83139038 69.27470398]
[100.73018646 74.95376587]
[108.50495148 62.12594604]
[123.10742950 65.55635071]
[124.35714722 80.50420380]
[110.52777863 86.31190491]
[115.42657471 91.99096680]
[130.41854858 91.50018311]
[145.41052246 91.00939941]
[158.95014954 82.82470703]
[171.92375183 90.14144135]
[186.91572571 89.65065765]
[201.90769958 89.15986633]
[216.89965820 88.66908264]
[231.89163208 88.17829895]
[246.88360596 87.68750763]
[261.87557983 87.19672394]
[270.62615967 74.51864624]
[284.99612427 69.48303223]
[299.40536499 73.82320404]
[308.38842773 85.67404938]
[323.38040161 85.18326569]
[338.37237549 84.69248199]
[353.36434937 84.20169067]
[368.35632324 83.71090698]
[383.34829712 83.22012329]
[398.34024048 82.72933197]
[410.31246948 72.05012512]
[426.10147095 74.89392853]
[433.59527588 89.07922363]
[427.04528809 103.72425842]
[411.47607422 107.59462738]
[398.83105469 97.72130585]
[383.83908081 98.21208954]
[368.84710693 98.70287323]
[353.85513306 99.19366455]
[338.86315918 99.68444824]
[323.87118530 100.17523193]
[308.87924194 100.66602325]
[300.69049072 113.07901001]
[286.59591675 118.35231018]
[271.92736816 114.26731110]
[262.36636353 102.18869019]
[247.37438965 102.67948151]
[232.38241577 103.17026520]
[217.39045715 103.66104889]
[202.39848328 104.15184021]
[187.40650940 104.64262390]
[172.41455078 105.13340759]
[159.94725037 113.28299713]
[145.90130615 106.00136566]
[130.90933228 106.49214935]
[115.91736603 106.98294067]
[101.67443848 111.68816376]
[89.34041595 120.22466278]
[77.00639343 128.76116943]
[64.67237091 137.29766846]
[61.71804810 152.59178162]
[49.08798981 161.07330322]
[34.52560043 158.16255188]
[22.19157982 166.69905090]
[9.85755539 175.23556519]
[7.04732895 192.49397278]
[-7.09232807 202.19596863]
[-23.54521561 198.74670410]
[-35.73791504 207.48387146]
[-47.93061829 216.22103882]
[-60.12331772 224.95820618]
[-72.31601715 233.69537354]
[-84.50872040 242.43254089]
[-96.70141602 251.16969299]
[-108.89411926 259.90686035]
[-121.08681488 268.64404297]
[-133.27952576 277.38119507]
[-118.48526001 279.85705566]
[-108.63911438 291.17312622]
[-108.23239899 306.16760254]
[-117.45062256 318.00079346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 62]
[4 61]
[6 59]
[7 58]
[8 57]
[10 55]
[11 54]
[12 53]
[13 52]
[14 51]
[15 50]
[16 49]
[17 47]
[21 43]
[22 42]
[23 41]
[24 40]
[25 39]
[63 187]
[64 186]
[65 185]
[66 184]
[67 183]
[68 182]
[69 181]
[70 180]
[71 179]
[72 178]
[76 175]
[77 174]
[78 173]
[81 170]
[82 169]
[83 168]
[84 167]
[89 114]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[96 107]
[120 166]
[121 165]
[122 164]
[124 162]
[125 161]
[126 160]
[127 159]
[128 158]
[129 157]
[130 156]
[134 152]
[135 151]
[136 150]
[137 149]
[138 148]
[139 147]
[140 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
