%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGCGGCGGCCGCGGCGGCGGGAGGCGGCGGGAGGCGGGCGGAGGAGGAGGCGGAGGAGGCGGGAGCUGAGCUGAGUGGGGCGGGCGGCGGCGGGGCCCGAGCCGGAGAAG\
) } def
/len { sequence length } bind def

/coor [
[78.15360260 158.39691162]
[68.35459900 153.72181702]
[59.51515961 147.41775513]
[51.90331650 139.67587280]
[45.74987411 130.73091125]
[41.24142456 120.85413361]
[26.60447693 124.13435364]
[14.83032036 134.70222473]
[0.71909308 129.93540955]
[-11.05506420 140.50326538]
[-25.16629028 135.73645020]
[-39.80323792 139.01666260]
[-54.44018173 142.29689026]
[-67.60745239 155.07725525]
[-84.13516998 149.35682678]
[-95.61366272 160.24511719]
[-109.85088348 155.86894226]
[-124.39188385 159.55122375]
[-135.87037659 170.43949890]
[-150.10758972 166.06332397]
[-164.64860535 169.74560547]
[-174.06295776 182.73596191]
[-190.09497070 183.33091736]
[-200.44625854 171.07406616]
[-197.17619324 155.36781311]
[-182.79328918 148.26065063]
[-168.33088684 155.20460510]
[-153.78987122 151.52232361]
[-143.35145569 140.89741516]
[-128.07417297 145.01020813]
[-113.53316498 141.32792664]
[-103.09473419 130.70303345]
[-87.81745148 134.81582642]
[-81.29119873 124.52814484]
[-69.10049438 121.39939880]
[-57.72039795 127.65994263]
[-43.08345413 124.37972260]
[-28.44650650 121.09951019]
[-17.71928215 110.76626587]
[-2.56112337 115.29845428]
[8.16610146 104.96520996]
[23.32426071 109.49740601]
[37.96120834 106.21718597]
[37.85549545 94.94770050]
[39.78018951 83.84327698]
[43.67240524 73.26673126]
[49.40497971 63.56362915]
[56.79060745 55.05098724]
[65.58798981 48.00693130]
[75.50969696 42.66161728]
[86.23155212 39.18967819]
[97.40325928 37.70455551]
[108.65981293 38.25477219]
[119.63342285 40.82235336]
[126.03507233 27.25699425]
[132.43672180 13.69163704]
[124.89794922 2.05904675]
[124.13377380 -11.67282772]
[130.23805237 -23.87561226]
[141.50399780 -31.37854004]
[154.89990234 -32.29216003]
[161.67289734 -45.67597198]
[168.44590759 -59.05978775]
[167.00273132 -75.39530945]
[180.58169556 -84.59009552]
[195.21389771 -77.18533325]
[195.84700012 -60.79840851]
[181.82971191 -52.28678513]
[175.05671692 -38.90297318]
[168.28370667 -25.51915932]
[176.23565674 -11.23078537]
[174.13262939 5.15219545]
[162.60118103 17.20784378]
[146.00207520 20.09328270]
[139.60043335 33.65864182]
[133.19877625 47.22399902]
[152.31428528 66.07831573]
[161.72868347 91.22304535]
[159.69616699 117.99536896]
[173.43276978 124.02079773]
[187.16935730 130.04623413]
[201.74107361 124.54141235]
[215.58610535 130.84774780]
[220.74430847 144.77355957]
[234.48091125 150.79899597]
[248.21751404 156.82443237]
[261.95410156 162.84985352]
[275.69070435 168.87528992]
[288.48501587 160.25502014]
[303.90924072 159.94317627]
[317.04153442 168.03924561]
[323.69143677 181.95980835]
[321.73699951 197.26286316]
[311.80187988 209.06527710]
[297.05633545 213.60092163]
[282.20559692 209.42250061]
[271.98849487 197.86332703]
[269.66528320 182.61189270]
[255.92868042 176.58645630]
[242.19207764 170.56101990]
[228.45547485 164.53559875]
[214.71887207 158.51016235]
[200.97976685 164.14685059]
[186.96305847 158.23188782]
[181.14393616 143.78282166]
[167.40733337 137.75740051]
[153.67073059 131.73196411]
[147.35241699 140.56123352]
[139.59828186 148.16058350]
[130.64341736 154.29959106]
[120.75938416 158.79211426]
[110.24587250 161.50192261]
[99.42168427 162.34686279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 43]
[7 42]
[9 40]
[11 38]
[12 37]
[13 36]
[15 33]
[17 31]
[18 30]
[20 28]
[21 27]
[54 76]
[55 75]
[56 74]
[61 70]
[62 69]
[63 68]
[79 107]
[80 106]
[81 105]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
