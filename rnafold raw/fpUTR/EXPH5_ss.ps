%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAUUGGCUGUGGGAUCAAGUUCGUGAAACUGGUCUUGUACAGGUUGAAAAAUGCCUUCCUAACAGGAGGCGCCAAGGAGCUUAAGUGUAACUCACACACAGUAAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[70.75737000 290.62243652]
[57.85607147 282.62738037]
[48.71723175 270.50936890]
[44.57680893 255.90727234]
[45.99475861 240.79588318]
[52.77931976 227.21891785]
[64.01293182 217.01252747]
[78.17634583 211.55705261]
[78.17634583 196.55705261]
[78.17634583 181.55705261]
[78.17634583 166.55705261]
[78.17634583 151.55705261]
[78.17634583 136.55705261]
[66.85263062 126.71969604]
[51.99991608 128.81654358]
[37.14720154 130.91340637]
[22.29448318 133.01025391]
[7.44176674 135.10711670]
[-7.41095018 137.20396423]
[-15.60820866 141.55816650]
[-22.70900154 139.14527893]
[-37.61468506 140.82475281]
[-52.52036667 142.50421143]
[-63.60696411 154.10020447]
[-79.57189178 152.51889038]
[-88.16822815 138.97331238]
[-82.80159760 123.85448456]
[-67.58882141 118.76028442]
[-54.19983673 127.59853363]
[-39.29415131 125.91906738]
[-24.38846779 124.23960114]
[-9.50780487 122.35124969]
[5.34491158 120.25439453]
[20.19762802 118.15753937]
[35.05034637 116.06068420]
[49.90306091 113.96382904]
[64.75577545 111.86697388]
[63.67294693 99.20312500]
[66.90079498 87.21344757]
[73.85904694 77.28608704]
[83.54833984 70.49939728]
[94.68949127 67.50588989]
[105.89076233 68.47307587]
[112.01742554 54.78132629]
[118.14409637 41.08957672]
[124.27075958 27.39782715]
[130.39741516 13.70607758]
[120.02044678 2.63385916]
[114.68750763 -11.52957344]
[115.18212891 -26.61496353]
[121.39780426 -40.32455826]
[132.35900879 -50.58208466]
[146.37414551 -55.84719849]
[161.29656982 -55.34672928]
[167.42323303 -69.03847504]
[173.54989624 -82.73022461]
[179.67655945 -96.42197418]
[185.80322266 -110.11372375]
[191.92988586 -123.80547333]
[198.05654907 -137.49722290]
[192.18695068 -152.17112732]
[198.48924255 -166.66445923]
[213.22438049 -172.37858582]
[227.65026855 -165.92341614]
[233.20829773 -151.12867737]
[226.60096741 -136.77185059]
[211.74829102 -131.37055969]
[205.62162781 -117.67881012]
[199.49496460 -103.98706055]
[193.36830139 -90.29531097]
[187.24163818 -76.60356140]
[181.11497498 -62.91181564]
[174.98831177 -49.22006607]
[185.30499268 -38.42676163]
[190.71803284 -24.46809769]
[190.37355042 -9.45989323]
[184.29289246 4.31011868]
[173.37417603 14.73102570]
[159.25975037 20.19231796]
[144.08917236 19.83274269]
[137.96250916 33.52449036]
[131.83584595 47.21623993]
[125.70917511 60.90798950]
[119.58251190 74.59973907]
[127.53488922 83.55378723]
[131.64831543 94.80078125]
[131.34930420 106.77265930]
[144.86384583 113.28091431]
[158.37837219 119.78916931]
[173.93510437 115.86899567]
[186.61167908 125.70178986]
[186.68373108 141.74468994]
[174.09597778 151.69093323]
[158.50466919 147.91062927]
[151.87011719 133.30371094]
[138.35559082 126.79544830]
[124.84105682 120.28719330]
[111.89802551 132.52243042]
[93.17634583 136.55705261]
[93.17634583 151.55705261]
[93.17634583 166.55705261]
[93.17634583 181.55705261]
[93.17634583 196.55705261]
[93.17634583 211.55705261]
[107.33975220 217.01252747]
[118.57337189 227.21891785]
[125.35793304 240.79588318]
[126.77587891 255.90727234]
[122.63545990 270.50936890]
[113.49662018 282.62738037]
[100.59531403 290.62243652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 104]
[9 103]
[10 102]
[11 101]
[12 100]
[13 99]
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[19 32]
[21 31]
[22 30]
[23 29]
[43 84]
[44 83]
[45 82]
[46 81]
[47 80]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[87 97]
[88 96]
[89 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
