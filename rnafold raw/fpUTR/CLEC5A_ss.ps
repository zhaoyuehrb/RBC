%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGAAGAGGUAUUUCUUGGGGAUGCUACCAAGGCAGAGACUGUGAAGAAGGAAGAACGUUGCUUGGGCAAAAGGAGCAUAUUCUCAGGAGACGGGGCCCCUGCCUGCCACACCAAGCAUUAGGCCACCAGGAAGACCCCCAUCUGCAAGCAAGCCUAGCCUUCCAGGGAGAAAGAGGCCCCUGCAGCUCCUUCAUC\
) } def
/len { sequence length } bind def

/coor [
[88.64920044 252.64181519]
[100.09075165 241.98233032]
[99.13938904 227.01252747]
[98.18803406 212.04272461]
[97.23667145 197.07292175]
[93.67118073 190.59001160]
[96.39089203 181.85841370]
[85.23118591 172.06063843]
[84.29392242 156.87590027]
[94.64640045 145.23699951]
[93.93267059 130.25399780]
[93.21894073 115.27098083]
[82.86775970 104.41497040]
[67.93567657 102.98913574]
[53.00359726 101.56329346]
[38.07152176 100.13745117]
[23.13944054 98.71160889]
[8.20736217 97.28576660]
[-6.72471619 95.85993195]
[-21.65679550 94.43408966]
[-36.58887482 93.00824738]
[-51.52095413 91.58240509]
[-66.45303345 90.15656281]
[-81.40585327 88.96781921]
[-96.37565613 88.01645660]
[-111.34545135 87.06510162]
[-126.31525421 86.11373901]
[-135.08889771 88.69457245]
[-141.51441956 85.02667236]
[-156.46725464 83.83792114]
[-162.65802002 97.53163147]
[-176.08674622 107.05308533]
[-193.91345215 108.66086578]
[-211.45301819 100.51405334]
[-225.62803650 105.42007446]
[-239.80303955 110.32609558]
[-253.97805786 115.23211670]
[-266.96847534 126.12638092]
[-281.03311157 116.65946198]
[-275.82962036 100.52378082]
[-258.88406372 101.05710602]
[-244.70906067 96.15108490]
[-230.53405762 91.24506378]
[-216.35903931 86.33904266]
[-215.70536804 78.86758423]
[-230.64830017 77.56024933]
[-245.59121704 76.25291443]
[-260.53414917 74.94557190]
[-275.47705078 73.63823700]
[-290.41998291 72.33090210]
[-305.03552246 75.70514679]
[-312.76104736 62.84761047]
[-302.92013550 51.52701569]
[-289.11264038 57.38798141]
[-274.16970825 58.69532013]
[-259.22680664 60.00265503]
[-244.28387451 61.30998993]
[-229.34095764 62.61732864]
[-214.39804077 63.92466354]
[-213.74436951 56.45320511]
[-226.85211182 49.16025162]
[-239.95985413 41.86730194]
[-253.06759644 34.57434845]
[-269.44717407 35.37541199]
[-278.10205078 21.44612312]
[-270.12881470 7.11573839]
[-253.72967529 7.12613058]
[-245.77464294 21.46660995]
[-232.66690063 28.75955963]
[-219.55915833 36.05251312]
[-206.45141602 43.34546280]
[-181.78746033 38.93500519]
[-162.20932007 50.09722519]
[-155.27850342 68.88510132]
[-140.32568359 70.07385254]
[-125.36389160 71.14394379]
[-110.39409637 72.09529877]
[-95.42429352 73.04666138]
[-80.45449066 73.99801636]
[-76.33468628 71.56305695]
[-70.63979340 71.69765472]
[-65.02719116 75.22448730]
[-50.09511185 76.65032959]
[-35.16303253 78.07617188]
[-20.23095512 79.50200653]
[-5.29887533 80.92784882]
[9.63320351 82.35369110]
[24.56528282 83.77953339]
[39.49736023 85.20537567]
[54.42943954 86.63121033]
[69.36151886 88.05705261]
[84.29359436 89.48289490]
[98.13368988 82.25119781]
[111.70354462 87.96000671]
[125.87855530 83.05398560]
[140.05357361 78.14796448]
[154.22857666 73.24194336]
[168.40359497 68.33592224]
[182.57861328 63.42990494]
[193.08915710 51.60455704]
[207.64706421 54.75362778]
[221.82208252 49.84761047]
[228.77963257 35.91095734]
[243.22499084 31.13748550]
[256.46859741 37.85633469]
[270.64358521 32.95031738]
[281.15414429 21.12496758]
[295.71206665 24.27404022]
[309.88705444 19.36802101]
[310.31896973 5.12647724]
[315.57672119 -8.08387852]
[325.00939941 -18.68263817]
[337.46786499 -25.40933800]
[351.44485474 -27.47334671]
[365.25732422 -24.64674187]
[377.24896240 -17.28928566]
[385.98904419 -6.30277491]
[400.24011230 -10.98327637]
[404.93780518 -15.65997314]
[410.46310425 -17.04590225]
[415.01815796 -15.57841015]
[429.41055298 -19.80439758]
[443.80294800 -24.03038597]
[458.19534302 -28.25637436]
[472.58773804 -32.48236465]
[473.06484985 -47.58964157]
[478.18118286 -61.79053879]
[487.42385864 -73.69859314]
[499.87771606 -82.15531921]
[514.31610107 -86.34293365]
[529.32147217 -85.86341858]
[543.42468262 -80.77631378]
[555.24890137 -71.59165192]
[563.64385986 -59.21884918]
[578.03625488 -63.44483948]
[592.42864990 -67.67082977]
[599.78186035 -81.66029358]
[614.89807129 -86.27294922]
[628.80902100 -78.77219391]
[633.26159668 -63.60808945]
[625.61419678 -49.77722931]
[610.40386963 -45.48522186]
[596.65460205 -53.27843094]
[582.26220703 -49.05244446]
[567.86981201 -44.82645416]
[567.49682617 -29.87915421]
[562.51525879 -15.75986958]
[553.40112305 -3.85553527]
[541.03704834 4.66037035]
[526.62677002 8.94349384]
[511.57781982 8.56231499]
[497.36444092 3.54158211]
[485.38272095 -5.63887310]
[476.81372070 -18.08996964]
[462.42132568 -13.86398029]
[448.02893066 -9.63799191]
[433.63653564 -5.41200399]
[419.24414062 -1.18601549]
[404.92059326 3.26779008]
[390.66952515 7.94829178]
[389.72094727 23.76192093]
[382.76159668 38.03638458]
[370.82983398 48.57445908]
[355.73190308 53.74146271]
[339.76846313 52.71878433]
[325.38415527 45.63341141]
[314.79309082 33.54303360]
[300.61807251 38.44905090]
[291.12139893 49.92348862]
[275.54962158 47.12532806]
[261.37460327 52.03134918]
[255.11775208 65.49936676]
[240.81216431 70.67669678]
[226.72810364 64.02262115]
[212.55308533 68.92864227]
[203.05642700 80.40307617]
[187.48463440 77.60491943]
[173.30961609 82.51094055]
[159.13459778 87.41695404]
[144.95959473 92.32297516]
[130.78457642 97.22899628]
[116.60956573 102.13501740]
[108.20195007 114.55725098]
[108.91567993 129.54026794]
[109.62940979 144.52326965]
[121.04135895 155.12541199]
[121.55174255 170.33047485]
[111.37390137 181.14468384]
[112.20647430 196.12156677]
[113.15782928 211.09136963]
[114.10919189 226.06115723]
[115.06054688 241.03096008]
[127.75946045 250.15629578]
[131.57162476 265.32208252]
[124.69706726 279.36752319]
[110.38172913 285.66079712]
[95.38488007 281.23037720]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 189]
[7 188]
[10 185]
[11 184]
[12 183]
[13 92]
[14 91]
[15 90]
[16 89]
[17 88]
[18 87]
[19 86]
[20 85]
[21 84]
[22 83]
[23 82]
[24 79]
[25 78]
[26 77]
[27 76]
[29 75]
[30 74]
[34 44]
[35 43]
[36 42]
[37 41]
[60 71]
[61 70]
[62 69]
[63 68]
[94 182]
[95 181]
[96 180]
[97 179]
[98 178]
[99 177]
[101 175]
[102 174]
[105 171]
[106 170]
[108 168]
[109 167]
[117 160]
[118 159]
[121 158]
[122 157]
[123 156]
[124 155]
[125 154]
[134 145]
[135 144]
[136 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
