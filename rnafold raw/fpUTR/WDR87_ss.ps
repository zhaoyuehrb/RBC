%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCUCGCGCCGGGCGCGCGCCCAUGCGCACGCGCGUUCAGACCCCUGGCCUCGGGAAGUCCGCCGGCUGCGGGGUUGGGGGCCAACCGUUCUGUGGGCGGAGUCCUCUCGCAACAUCCGCCAGGUAGCUUCUUAGUUGCUGCCCCUAGCUCUAGGAGCUCCUGAGUGCACACGCCGUACCCGUCCCUUGUCGGGAAUCCUGUCGCAGGUUUUUAAGCAACAGUCCUCAGGAGGGCCAAGGGAGUCUGACGGUG\
) } def
/len { sequence length } bind def

/coor [
[20.51405907 401.19915771]
[20.83348846 407.85369873]
[19.11005974 414.23593140]
[15.54029179 419.73889160]
[10.49467564 423.84939575]
[4.47942448 426.19567871]
[-1.91423023 426.58090210]
[-8.35103893 440.12960815]
[-14.78784847 453.67831421]
[-21.22465706 467.22702026]
[-19.33670807 485.55715942]
[-34.18870163 494.92749023]
[-40.45810699 508.55447388]
[-46.72751236 522.18145752]
[-52.99691772 535.80841064]
[-50.94584274 552.07879639]
[-64.17262268 561.77337646]
[-79.07067871 554.91918945]
[-80.31417084 538.56719971]
[-66.62389374 529.53900146]
[-60.35449219 515.91204834]
[-54.08508682 502.28506470]
[-47.81568146 488.65808105]
[-51.71471405 477.22573853]
[-46.62573624 465.83111572]
[-34.77336502 460.79022217]
[-28.33655739 447.24151611]
[-21.89974785 433.69281006]
[-15.46293831 420.14410400]
[-19.86391640 397.45581055]
[-0.04425433 384.19976807]
[5.37437057 370.21267700]
[10.79299545 356.22561646]
[10.28014851 348.87393188]
[16.36549377 342.10025024]
[21.95602417 328.18099976]
[27.54655457 314.26171875]
[27.12431717 306.90429688]
[33.29264832 300.20611572]
[39.05423737 286.35678101]
[44.81582260 272.50744629]
[50.57740784 258.65808105]
[56.33899307 244.80876160]
[62.01515961 230.92419434]
[67.60569000 217.00492859]
[73.19622040 203.08566284]
[78.78675079 189.16639709]
[84.29143524 175.21295166]
[89.71006012 161.22587585]
[95.12868500 147.23878479]
[100.54730988 133.25170898]
[75.34274292 136.29246521]
[49.01250076 119.23841095]
[36.94732285 83.73686981]
[23.20681953 77.72034454]
[9.46631622 71.70381927]
[-4.27418804 65.68730164]
[-16.53049278 69.64614868]
[-27.84131813 64.37358856]
[-32.38748932 53.18281174]
[-46.05282974 46.99746704]
[-59.71817017 40.81212234]
[-73.38350677 34.62677765]
[-87.04885101 28.44143486]
[-100.71418762 22.25609016]
[-116.47698212 23.61435699]
[-124.88129425 11.31733036]
[-138.54663086 5.13198566]
[-154.30943298 6.49025297]
[-162.71372986 -5.80677366]
[-178.47653198 -4.44850588]
[-186.88082886 -16.74553299]
[-202.64363098 -15.38726521]
[-211.04794312 -27.68429184]
[-224.71327209 -33.86963654]
[-238.37861633 -40.05498123]
[-252.04396057 -46.24032593]
[-265.70928955 -52.42567062]
[-279.37463379 -58.61101532]
[-296.29769897 -59.63402939]
[-299.99942017 -76.17892456]
[-285.12585449 -84.31607056]
[-273.18930054 -72.27635193]
[-259.52395630 -66.09101105]
[-245.85861206 -59.90566635]
[-232.19326782 -53.72032166]
[-218.52793884 -47.53497696]
[-204.86259460 -41.34963226]
[-190.07723999 -43.15031815]
[-180.69549561 -30.41087341]
[-165.91014099 -32.21155930]
[-156.52838135 -19.47211266]
[-141.74302673 -21.27279854]
[-132.36128235 -8.53335381]
[-118.69594574 -2.34800935]
[-103.91059113 -4.14869404]
[-94.52884674 8.59074974]
[-80.86350250 14.77609444]
[-67.19816589 20.96143913]
[-53.53282547 27.14678383]
[-39.86748505 33.33213043]
[-26.20214462 39.51747513]
[-8.84297752 36.86338806]
[1.74233472 51.94679260]
[15.48283863 57.96331787]
[29.22334290 63.97983932]
[42.96384811 69.99636078]
[48.59883499 65.04692841]
[45.66085052 50.33746719]
[59.86881256 55.14805984]
[65.50380707 50.19862747]
[61.31006622 35.79680252]
[46.92646790 29.66115570]
[39.89805222 15.69206810]
[43.54342270 0.48531654]
[56.14134216 -8.77893639]
[71.74346161 -7.72639370]
[82.98294067 3.14596605]
[84.55283356 18.70454788]
[75.71189117 31.60306358]
[79.90562439 46.00488663]
[87.39140320 45.54318237]
[102.36295319 44.61976624]
[109.84872437 44.15806198]
[112.24086761 29.35003281]
[114.63300323 14.54200554]
[117.02513885 -0.26602188]
[119.41727448 -15.07404995]
[121.80941010 -29.88207626]
[110.25889587 -40.10896301]
[106.09305573 -54.96323013]
[110.64118958 -69.70494080]
[122.45201111 -79.63006592]
[137.75672913 -81.57153320]
[151.67166138 -74.90982819]
[159.75659180 -61.77067947]
[159.43167114 -46.34673691]
[150.80056763 -33.55973053]
[136.61744690 -27.48994064]
[134.22529602 -12.68191242]
[131.83316040 2.12611508]
[129.44102478 16.93414307]
[127.04888916 31.74217033]
[124.65675354 46.55019760]
[138.67695618 51.88256073]
[146.72994995 39.22755432]
[154.78294373 26.57254601]
[162.83595276 13.91753864]
[163.00189209 -2.48076916]
[177.41717529 -10.29942989]
[191.25260925 -1.49527514]
[190.27546692 14.87473488]
[175.49095154 21.97053719]
[167.43795776 34.62554550]
[159.38496399 47.28055191]
[151.33195496 59.93555832]
[152.46150208 85.24763489]
[143.58900452 105.01225281]
[129.13555908 116.03417969]
[144.03292847 117.78577423]
[158.93031311 119.53736115]
[173.82769775 121.28895569]
[188.72506714 123.04054260]
[203.62245178 124.79213715]
[218.51983643 126.54372406]
[233.41720581 128.29531860]
[240.52401733 101.95385742]
[275.24511719 87.76840210]
[288.50375366 80.75354004]
[296.75949097 66.58403015]
[313.15521240 66.91953278]
[320.82440186 81.41489410]
[311.87765503 95.15853882]
[295.51861572 94.01218414]
[282.25997925 101.02704620]
[284.40115356 108.21490479]
[298.77694702 103.93275452]
[303.05886841 118.30860138]
[288.68353271 122.59062195]
[290.82470703 129.77848816]
[305.76074219 128.39445496]
[320.69674683 127.01042938]
[335.63275146 125.62640381]
[343.44018555 112.21656799]
[357.65216064 105.98768616]
[372.80392456 109.33489227]
[383.06930542 120.97112274]
[384.50103760 136.42199707]
[376.54858398 149.74635315]
[362.26986694 155.82069397]
[347.15530396 152.30932617]
[337.01678467 140.56242371]
[322.08078003 141.94644165]
[307.14474487 143.33047485]
[292.20874023 144.71449280]
[290.69461060 152.06007385]
[305.38571167 155.08853149]
[302.35702515 169.77958679]
[287.66638184 166.75122070]
[286.15228271 174.09678650]
[299.32348633 181.27445984]
[312.49472046 188.45213318]
[325.66592407 195.62980652]
[341.48599243 195.43937683]
[348.95916748 208.32350159]
[362.13040161 215.50117493]
[375.19635010 207.42797852]
[390.54885864 206.98541260]
[404.05819702 214.29251099]
[412.09039307 227.38369751]
[412.48483276 242.73753357]
[405.13543701 256.22387695]
[392.01910400 264.21499634]
[376.66412354 264.56130981]
[363.20086670 257.16967773]
[355.25091553 244.02838135]
[354.95272827 228.67239380]
[341.78149414 221.49472046]
[326.90353394 222.19854736]
[318.48825073 208.80102539]
[305.31704712 201.62335205]
[292.14581299 194.44567871]
[278.97460938 187.26800537]
[248.21955872 182.12065125]
[231.47892761 163.02967834]
[231.66561890 143.19270325]
[216.76823425 141.44110107]
[201.87086487 139.68951416]
[186.97348022 137.93792725]
[172.07609558 136.18634033]
[157.17872620 134.43473816]
[142.28134155 132.68315125]
[127.38396454 130.93156433]
[114.53439331 138.67033386]
[109.11576843 152.65740967]
[103.69714355 166.64450073]
[98.27851868 180.63157654]
[98.10006714 189.73554993]
[92.70601654 194.75692749]
[87.11548615 208.67619324]
[81.52495575 222.59545898]
[75.93442535 236.51472473]
[75.64383698 245.61581421]
[70.18833160 250.57034302]
[64.42674255 264.41967773]
[58.66515732 278.26901245]
[52.90357208 292.11834717]
[47.14198685 305.96768188]
[41.46582031 319.85226440]
[35.87528992 333.77151489]
[30.28476143 347.69079590]
[24.78007889 361.64422607]
[19.36145401 375.63131714]
[13.94282913 389.61840820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 29]
[8 28]
[9 27]
[10 26]
[12 23]
[13 22]
[14 21]
[15 20]
[31 254]
[32 253]
[33 252]
[35 251]
[36 250]
[37 249]
[39 248]
[40 247]
[41 246]
[42 245]
[43 244]
[44 242]
[45 241]
[46 240]
[47 239]
[48 237]
[49 236]
[50 235]
[51 234]
[54 107]
[55 106]
[56 105]
[57 104]
[60 102]
[61 101]
[62 100]
[63 99]
[64 98]
[65 97]
[67 95]
[68 94]
[70 92]
[72 90]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[111 121]
[112 120]
[124 144]
[125 143]
[126 142]
[127 141]
[128 140]
[129 139]
[145 156]
[146 155]
[147 154]
[148 153]
[159 233]
[160 232]
[161 231]
[162 230]
[163 229]
[164 228]
[165 227]
[166 226]
[168 175]
[169 174]
[180 195]
[181 194]
[182 193]
[183 192]
[200 223]
[201 222]
[202 221]
[203 220]
[205 218]
[206 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
