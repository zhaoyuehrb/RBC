%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAGGAAGCGCGCGCCCGCGCCGCCGCCGCCGCCGAAUCCCCAACAAGGAGCGAAGCCCGCGGCCGCCGCCGCCGCCCGCCGCCGCCGCAGCUCCCGACGCCGCCGCCCCCGCCGGGUGCCUAAGCAGGCCCGGCGCGGCCCCAGGACUUGGGACCCUGGAGGACUGACGCUGCUGGCCUGGGCGUCCCCUUCCGCUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[-105.45954895 218.95109558]
[-117.68842316 210.26463318]
[-123.63991547 196.49583435]
[-121.58845520 181.63677979]
[-112.13084412 169.99705505]
[-126.98699951 172.06941223]
[-136.50820923 184.39759827]
[-151.60398865 186.28761292]
[-163.29835510 177.13462830]
[-178.15451050 179.20697021]
[-193.01066589 181.27931213]
[-201.08299255 185.56648254]
[-208.11135864 183.26736450]
[-222.99768066 185.11068726]
[-237.88398743 186.95401001]
[-247.59390259 199.13412476]
[-262.71701050 200.79144287]
[-274.26904297 191.45945740]
[-289.15533447 193.30278015]
[-297.29272461 197.46513367]
[-304.28485107 195.05804443]
[-319.19778442 196.67190552]
[-332.08538818 205.84907532]
[-345.57125854 199.52603149]
[-360.48416138 201.13989258]
[-373.37176514 210.31706238]
[-386.85763550 203.99401855]
[-401.77056885 205.60787964]
[-414.65817261 214.78503418]
[-428.14401245 208.46199036]
[-443.05694580 210.07586670]
[-457.96987915 211.68972778]
[-472.88281250 213.30358887]
[-487.79574585 214.91746521]
[-502.39996338 226.12921143]
[-518.16552734 218.42663574]
[-527.87548828 230.60675049]
[-542.99859619 232.26408386]
[-554.55059814 222.93208313]
[-569.43688965 224.77540588]
[-584.30859375 226.73330688]
[-599.14831543 228.91998291]
[-613.97082520 231.22085571]
[-624.56317139 243.26998901]
[-640.58020020 242.35719299]
[-649.73510742 229.18267822]
[-645.00494385 213.85279846]
[-630.01831055 208.12733459]
[-616.27166748 216.39836121]
[-601.44921875 214.09748840]
[-595.31835938 209.96273804]
[-586.38092041 211.87715149]
[-580.18707275 207.83728027]
[-571.28021240 209.88909912]
[-556.39392090 208.04577637]
[-547.46697998 196.17793274]
[-532.39642334 194.09648132]
[-520.00885010 203.54032898]
[-512.32348633 194.19439697]
[-499.93258667 192.53970337]
[-489.40960693 200.00453186]
[-474.49667358 198.39067078]
[-459.58374023 196.77679443]
[-444.67080688 195.16293335]
[-429.75787354 193.54907227]
[-417.93695068 184.48733521]
[-403.38442993 190.69494629]
[-388.47149658 189.08108521]
[-376.65057373 180.01934814]
[-362.09805298 186.22695923]
[-347.18511963 184.61309814]
[-335.36419678 175.55137634]
[-320.81164551 181.75898743]
[-305.89871216 180.14511108]
[-290.99865723 178.41647339]
[-276.11236572 176.57315063]
[-267.18542480 164.70530701]
[-252.11485291 162.62385559]
[-239.72731018 172.06770325]
[-224.84100342 170.22438049]
[-209.95469666 168.38105774]
[-195.08302307 166.42315674]
[-180.22686768 164.35081482]
[-165.37069702 162.27847290]
[-156.62759399 150.27456665]
[-141.59086609 147.96128845]
[-129.05934143 157.21325684]
[-114.20318604 155.14089966]
[-105.78955078 148.37545776]
[-93.96252441 151.03372192]
[-79.47364044 147.15142822]
[-64.98474884 143.26914978]
[-50.49586105 139.38685608]
[-46.61973953 121.69149017]
[-34.24343491 108.34733582]
[-16.72642899 103.10351562]
[1.11156499 107.49294281]
[14.31669617 120.38550568]
[28.61082649 115.83821869]
[42.90495682 111.29092407]
[57.19908524 106.74363708]
[71.49321747 102.19634247]
[85.78734589 97.64905548]
[96.55602264 87.20704651]
[93.84510803 71.61982727]
[105.37255096 62.18756866]
[110.35787201 48.04025269]
[115.34319305 33.89293671]
[120.32851410 19.74562073]
[125.31383514 5.59830379]
[119.70956421 -9.43405056]
[128.09132385 -23.11343956]
[144.02934265 -24.94620514]
[155.29734802 -13.52640820]
[153.25148010 2.38566184]
[139.46115112 10.58362579]
[134.47583008 24.73094177]
[129.49050903 38.87825775]
[124.50518799 53.02557373]
[119.51986694 67.17288971]
[122.58736420 81.74820709]
[110.70333862 92.19236755]
[114.89409637 98.41230011]
[127.33409882 90.03099823]
[135.71519470 102.47114563]
[123.27560425 110.85217285]
[127.46636200 117.07210541]
[142.45034790 117.76485443]
[157.43434143 118.45761108]
[172.41835022 119.15036011]
[187.40234375 119.84310913]
[202.38633728 120.53586578]
[217.37921143 120.99778748]
[232.37744141 121.22878265]
[247.37565613 121.45977020]
[262.37387085 121.69075775]
[277.37210083 121.92175293]
[292.37167358 122.03724670]
[307.37167358 122.03724670]
[322.37167358 122.03724670]
[337.37121582 121.92175293]
[352.36944580 121.69075775]
[367.36544800 121.34429169]
[382.35830688 120.88236237]
[397.35119629 120.42044067]
[412.34408569 119.95851135]
[427.33697510 119.49658966]
[435.18566895 106.21495819]
[448.97924805 99.30548859]
[464.31622314 100.97295380]
[476.30264282 110.68528748]
[481.11367798 125.34330750]
[477.21411133 140.26969910]
[465.84832764 150.70149231]
[450.64309692 153.30996704]
[436.45031738 147.26274109]
[427.79888916 134.48947144]
[412.80603027 134.95140076]
[397.81314087 135.41333008]
[382.82025146 135.87525940]
[367.82736206 136.33717346]
[361.23483276 139.68717957]
[352.60043335 136.68898010]
[337.60220337 136.91996765]
[330.95886230 140.16806030]
[322.37167358 137.03724670]
[307.37167358 137.03724670]
[292.37167358 137.03724670]
[285.67910767 140.18264771]
[277.14111328 136.91996765]
[262.14288330 136.68898010]
[247.14466858 136.45799255]
[232.14645386 136.22700500]
[217.14822388 135.99601746]
[213.15335083 138.62249756]
[207.46502686 138.76350403]
[201.69357300 135.51985168]
[186.70957947 134.82710266]
[171.72558594 134.13435364]
[156.74159241 133.44160461]
[141.75759888 132.74885559]
[126.77360535 132.05609131]
[90.33463287 111.94318390]
[76.04050446 116.49047852]
[61.74637604 121.03776550]
[47.45224762 125.58505249]
[33.15811539 130.13233948]
[18.86398506 134.67964172]
[17.81640816 146.66184998]
[12.80209160 157.55661011]
[4.43027163 166.09609985]
[-6.30062675 171.29524231]
[-18.12203026 172.56536865]
[-29.64517403 169.78077698]
[-39.52424622 163.29069519]
[-46.61357498 153.87574768]
[-61.10246277 157.75802612]
[-75.59135437 161.64031982]
[-90.08023834 165.52259827]
[-76.83190155 172.55691528]
[-69.15198517 185.44175720]
[-69.26718140 200.44131470]
[-77.14408112 213.20666504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 88]
[6 87]
[9 84]
[10 83]
[11 82]
[13 81]
[14 80]
[15 79]
[18 76]
[19 75]
[21 74]
[22 73]
[24 71]
[25 70]
[27 68]
[28 67]
[30 65]
[31 64]
[32 63]
[33 62]
[34 61]
[36 58]
[39 55]
[40 54]
[41 52]
[42 50]
[43 49]
[90 199]
[91 198]
[92 197]
[93 196]
[98 188]
[99 187]
[100 186]
[101 185]
[102 184]
[103 183]
[104 122]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[127 182]
[128 181]
[129 180]
[130 179]
[131 178]
[132 177]
[133 174]
[134 173]
[135 172]
[136 171]
[137 170]
[138 168]
[139 167]
[140 166]
[141 164]
[142 163]
[143 161]
[144 160]
[145 159]
[146 158]
[147 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
