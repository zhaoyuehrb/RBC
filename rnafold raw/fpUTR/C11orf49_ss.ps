%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCUCCAGCUCCCGUCCCCCUUCCGCCGCGUGGGUGCCAUGGCAACGGAGAGAGACGGCAACCUGGGUUCCGGAAGCCGGAGAGCUGGAGCUUUGAAGCCACCCCGGUCAAAGG\
) } def
/len { sequence length } bind def

/coor [
[165.26266479 303.70037842]
[153.14335632 294.86169434]
[149.32427979 280.35601807]
[155.51997375 266.69537354]
[168.94897461 260.01242065]
[183.58348083 263.30789185]
[176.31521606 250.18643188]
[169.04696655 237.06498718]
[161.77870178 223.94354248]
[154.51043701 210.82209778]
[147.24217224 197.70065308]
[139.97390747 184.57920837]
[132.70564270 171.45776367]
[125.43737793 158.33631897]
[117.99509430 145.31277466]
[110.38011169 132.38946533]
[102.76512146 119.46615601]
[94.75966644 118.95036316]
[87.62656403 115.27989960]
[82.55326843 109.06580353]
[80.38432312 101.34252167]
[81.48078918 93.39575195]
[85.66014862 86.54838562]
[79.46195984 72.88887024]
[73.26377869 59.22934723]
[67.06559753 45.56982422]
[60.86741638 31.91030312]
[54.66923141 18.25078201]
[40.14793015 12.61433220]
[34.05667496 -1.32666016]
[39.51965714 -15.13576603]
[33.32147598 -28.79528809]
[20.57322121 -38.16505814]
[22.36001205 -52.95210266]
[16.16183090 -66.61162567]
[9.96364689 -80.27114105]
[3.76546454 -93.93066406]
[-2.43271828 -107.59018707]
[-8.81217957 -121.16599274]
[-15.37178993 -134.65567017]
[-21.93140030 -148.14535522]
[-37.18057251 -149.33274841]
[-49.70528412 -157.93673706]
[-56.19857025 -171.56404114]
[-55.00696564 -186.51182556]
[-46.55031967 -198.77357483]
[-61.85142136 -201.35346985]
[-72.68978119 -212.45796204]
[-74.89782715 -227.81713867]
[-67.62651825 -241.52507019]
[-53.67182159 -248.31080627]
[-38.39960861 -245.56507874]
[-27.68234825 -234.34365845]
[-25.64105034 -218.96144104]
[-33.06063461 -205.33319092]
[-18.19394302 -204.41284180]
[-5.70090151 -196.11947632]
[1.00792050 -182.59696960]
[0.04107380 -167.43247986]
[-8.44171715 -154.70497131]
[-1.88210773 -141.21528625]
[4.67750216 -127.72560120]
[10.50689125 -123.02626801]
[11.22680283 -113.78836823]
[17.42498589 -100.12884521]
[23.62316895 -86.46932983]
[29.82135201 -72.80980682]
[36.01953506 -59.15028381]
[48.32445145 -50.75753403]
[46.98099899 -34.99346924]
[53.17918015 -21.33395004]
[67.16894531 -16.35177612]
[73.64936829 -2.58737445]
[68.32875061 12.05259800]
[74.52693939 25.71212006]
[80.72512054 39.37164307]
[86.92330170 53.03116226]
[93.12148285 66.69068146]
[99.31966400 80.35020447]
[117.44673157 90.93419647]
[115.68843079 111.85117340]
[123.30342102 124.77448273]
[130.91841125 137.69779968]
[138.06401062 143.59672546]
[138.55882263 151.06805420]
[145.82708740 164.18949890]
[153.09535217 177.31094360]
[160.36361694 190.43238831]
[167.63188171 203.55383301]
[174.90014648 216.67527771]
[182.16841125 229.79672241]
[189.43667603 242.91818237]
[196.70492554 256.03961182]
[205.16258240 268.42785645]
[214.73625183 279.97534180]
[224.30990601 291.52285767]
[233.88357544 303.07037354]
[243.45724487 314.61788940]
[249.70484924 317.35299683]
[253.03964233 322.15408325]
[253.21327209 327.04431152]
[262.15878296 339.08499146]
[271.10427856 351.12567139]
[286.70199585 354.87951660]
[293.36129761 369.47518921]
[285.97372437 383.71609497]
[270.20645142 386.67785645]
[258.15472412 376.08843994]
[259.06362915 360.07116699]
[250.11810303 348.03048706]
[241.17259216 335.98980713]
[231.90972900 324.19155884]
[222.33605957 312.64404297]
[212.76240540 301.09652710]
[203.18873596 289.54901123]
[193.61508179 278.00149536]
[191.35545349 292.83032227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 93]
[7 92]
[8 91]
[9 90]
[10 89]
[11 88]
[12 87]
[13 86]
[14 85]
[15 83]
[16 82]
[17 81]
[23 79]
[24 78]
[25 77]
[26 76]
[27 75]
[28 74]
[31 71]
[32 70]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[39 62]
[40 61]
[41 60]
[46 55]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[101 111]
[102 110]
[103 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
