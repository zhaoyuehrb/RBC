%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUGUGAGCGCAGUGCCGGAGCGGGGCGGGGCGAGGCGGCGGCGCGCAGUGCCUACUAGCAAUUGUAGUCCUUGCCCCACCUUGGCCUGGCGAAGAUCCCGCCCCUGGAACUACGCUCCCGUCGUGCUCCGCGGCUCCAGGCGGAGACGAGGCGGGGUGAGGUGGGUUGGGCCGGGCCGGUUGCUAAGACUUGGCGAAGCGCUGCGCUCGCGCCCGGAUCCCUCAGGCGGCUGCAGGCUUCAGCCUGCGCUGGUU\
GGUGAAACAGAG\
) } def
/len { sequence length } bind def

/coor [
[172.23611450 310.51068115]
[171.85208130 299.38528442]
[174.86412048 288.64099121]
[181.00454712 279.29214478]
[172.27333069 267.09518433]
[163.54212952 254.89822388]
[154.81091309 242.70126343]
[146.07971191 230.50428772]
[137.34849548 218.30732727]
[128.61729431 206.11035156]
[119.88607788 193.91339111]
[111.15486908 181.71643066]
[102.42366028 169.51945496]
[93.69245148 157.32249451]
[84.96124268 145.12551880]
[76.23003387 132.92855835]
[80.99875641 147.15034485]
[74.99975586 160.89851379]
[61.33034134 167.07484436]
[47.04805374 162.49049377]
[39.52687454 149.51235962]
[42.65000534 134.84109497]
[54.80694580 126.05097198]
[40.60770798 130.88644409]
[26.40847397 135.72190857]
[12.20923901 140.55737305]
[1.64000964 152.33030701]
[-12.90205479 149.10887146]
[-27.10128975 153.94433594]
[-41.30052567 158.77980042]
[-55.49975967 163.61526489]
[-69.69899750 168.45072937]
[-83.89823151 173.28619385]
[-98.09746552 178.12165833]
[-112.29669952 182.95712280]
[-126.49593353 187.79258728]
[-140.66658020 192.71119690]
[-137.46723938 199.13658142]
[-136.98600769 207.38798523]
[-139.92916870 216.35882568]
[-146.57537842 224.71423340]
[-159.95640564 231.49273682]
[-173.33743286 238.27124023]
[-186.71846008 245.04974365]
[-200.09947205 251.82824707]
[-211.49671936 264.37969971]
[-226.71273804 256.90246582]
[-223.73991394 240.21118164]
[-206.87799072 238.44721985]
[-193.49696350 231.66871643]
[-180.11593628 224.89021301]
[-166.73490906 218.11170959]
[-153.35388184 211.33320618]
[-157.93893433 197.05114746]
[-172.76510620 199.32817078]
[-187.59126282 201.60519409]
[-194.58065796 215.45899963]
[-208.39363098 222.52876282]
[-223.71881104 220.09599304]
[-234.66336060 209.09616089]
[-237.01887512 193.75891113]
[-229.87960815 179.98173523]
[-215.99076843 173.06224060]
[-200.69287109 175.66110229]
[-189.86828613 186.77902222]
[-175.04212952 184.50199890]
[-160.21595764 182.22497559]
[-145.66816711 178.56961060]
[-140.42828369 173.39456177]
[-131.33140564 173.59335327]
[-117.13216400 168.75788879]
[-102.93292999 163.92242432]
[-88.73369598 159.08695984]
[-74.53446198 154.25149536]
[-60.33522415 149.41603088]
[-46.13599014 144.58056641]
[-31.93675613 139.74510193]
[-17.73752022 134.90963745]
[-8.18391514 123.48256683]
[7.37377453 126.35813141]
[21.57300949 121.52266693]
[35.77224350 116.68720245]
[49.97148132 111.85173798]
[58.26844788 99.35532379]
[57.21430588 84.39241028]
[56.16016006 69.42949677]
[55.10601807 54.46658325]
[54.05187607 39.50366974]
[52.99773407 24.54075623]
[51.94358826 9.57784367]
[50.88944626 -5.38507032]
[39.78552628 -12.97186947]
[35.13597107 -25.38346481]
[38.42440796 -38.02219391]
[48.23708344 -46.34224701]
[47.35840988 -61.31649017]
[43.74239731 -69.66616821]
[46.55824661 -76.47121429]
[45.85516357 -91.45472717]
[45.15208054 -106.43824005]
[44.44899368 -121.42175293]
[43.74591064 -136.40527344]
[43.04282761 -151.38877869]
[34.10426712 -139.34294128]
[20.47346306 -133.08186340]
[5.51149702 -134.14938354]
[-7.09231567 -142.28227234]
[-14.23013115 -155.47512817]
[-14.14191151 -170.47486877]
[-6.84940815 -183.58285522]
[5.84919500 -191.56694031]
[20.82268143 -192.45838928]
[34.37889481 -186.03739929]
[43.17470169 -173.88839722]
[44.05337524 -188.86264038]
[44.93204880 -203.83688354]
[42.31739426 -212.55216980]
[45.90980530 -218.98118591]
[46.96394730 -233.94409180]
[48.01808929 -248.90701294]
[49.07223129 -263.86993408]
[50.12637711 -278.83282471]
[51.18051910 -293.79574585]
[44.43217087 -308.10556030]
[53.04476547 -320.25759888]
[54.09890747 -335.22052002]
[55.06533432 -350.18936157]
[55.94400787 -365.16360474]
[56.82268143 -380.13784790]
[57.70135498 -395.11209106]
[58.58002853 -410.08633423]
[59.45870209 -425.06057739]
[47.37600708 -434.79647827]
[43.35604095 -449.78381348]
[48.94456100 -464.25958252]
[61.99266434 -472.65759277]
[77.48309326 -471.74862671]
[89.45946503 -461.88220215]
[93.31661224 -446.85217285]
[87.57138824 -432.43786621]
[74.43294525 -424.18188477]
[73.55426788 -409.20764160]
[72.67559814 -394.23339844]
[71.79692078 -379.25915527]
[70.91825104 -364.28491211]
[70.03957367 -349.31069946]
[72.77545929 -342.47308350]
[69.06182098 -334.16638184]
[68.00768280 -319.20346069]
[74.83142853 -305.96392822]
[66.14343262 -292.74160767]
[65.08928680 -277.77868652]
[64.03514862 -262.81579590]
[62.98100281 -247.85287476]
[61.92686081 -232.88995361]
[60.87271881 -217.92704773]
[59.90629196 -202.95820618]
[59.02761841 -187.98396301]
[58.14894485 -173.00971985]
[63.19419479 -163.26274109]
[58.02634048 -152.09187317]
[58.72942352 -137.10835266]
[59.43251038 -122.12483978]
[60.13559341 -107.14132690]
[60.83867645 -92.15781403]
[61.54175949 -77.17430115]
[62.33265305 -62.19516373]
[63.21132660 -47.22092056]
[76.25102997 -36.57535934]
[77.56594086 -19.45415306]
[65.85236359 -6.43921328]
[66.90650177 8.52370071]
[67.96064758 23.48661423]
[69.01478577 38.44952774]
[70.06893158 53.41244125]
[71.12307739 68.37535095]
[72.17721558 83.33827209]
[73.23136139 98.30118561]
[83.90435028 80.49211121]
[103.02624512 76.43428802]
[118.01913452 86.98550415]
[132.42941284 82.82090759]
[146.83969116 78.65630341]
[161.24996948 74.49170685]
[175.66024780 70.32710266]
[190.07052612 66.16250610]
[204.48080444 61.99790573]
[218.01850891 51.79169846]
[231.57347107 61.97499466]
[225.54052734 77.81923676]
[208.64540100 76.40818024]
[194.23512268 80.57278442]
[179.82484436 84.73738098]
[165.41456604 88.90198517]
[151.00428772 93.06658173]
[136.59400940 97.23118591]
[122.18373108 101.39578247]
[112.41771698 121.14894867]
[88.42700195 124.19734955]
[97.15821075 136.39431763]
[105.88941956 148.59127808]
[114.62062836 160.78825378]
[123.35183716 172.98521423]
[132.08305359 185.18217468]
[140.81425476 197.37915039]
[149.54547119 209.57611084]
[158.27667236 221.77308655]
[167.00788879 233.97004700]
[175.73908997 246.16700745]
[184.47030640 258.36398315]
[193.20150757 270.56094360]
[212.29344177 267.88934326]
[230.00128174 275.29904175]
[241.40275574 290.63928223]
[243.37513733 309.56774902]
[235.45008850 326.77944946]
[250.89938354 328.76867676]
[260.15640259 340.84188843]
[258.16476440 355.55816650]
[267.45806885 367.33248901]
[282.08145142 373.37130737]
[283.89324951 388.15530396]
[291.63827515 392.93099976]
[293.22552490 400.12252808]
[302.38018799 412.00497437]
[311.53482056 423.88742065]
[326.08642578 430.09722900]
[327.72479248 444.90145874]
[336.87945557 456.78387451]
[346.03411865 468.66632080]
[355.18878174 480.54876709]
[362.87728882 485.41491699]
[364.38012695 492.62457275]
[373.39486694 504.61349487]
[382.40960693 516.60241699]
[391.42431641 528.59136963]
[400.43905640 540.58032227]
[409.45379639 552.56921387]
[424.74633789 558.49127197]
[426.99624634 574.73535156]
[413.88903809 584.59094238]
[398.90826416 577.91949463]
[397.46487427 561.58398438]
[388.45013428 549.59503174]
[379.43539429 537.60607910]
[370.42065430 525.61718750]
[361.40591431 513.62823486]
[352.39117432 501.63931274]
[343.30633545 489.70343018]
[334.15167236 477.82098389]
[324.99700928 465.93853760]
[315.84237671 454.05609131]
[301.94558716 448.69619751]
[299.65240479 433.04205322]
[290.49774170 421.15963745]
[281.34307861 409.27719116]
[272.11895752 397.44860840]
[258.16027832 392.25195312]
[255.68376160 376.62579346]
[246.39045715 364.85147095]
[231.61408997 363.36996460]
[222.02162170 351.56152344]
[223.67578125 336.07275391]
[213.22813416 339.42715454]
[202.22872925 339.45843506]
[191.71159363 336.14758301]
[182.67030334 329.79052734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 211]
[5 210]
[6 209]
[7 208]
[8 207]
[9 206]
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[15 200]
[16 199]
[23 83]
[24 82]
[25 81]
[26 80]
[28 78]
[29 77]
[30 76]
[31 75]
[32 74]
[33 73]
[34 72]
[35 71]
[36 70]
[37 68]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
[54 67]
[55 66]
[56 65]
[84 178]
[85 177]
[86 176]
[87 175]
[88 174]
[89 173]
[90 172]
[91 171]
[95 168]
[96 167]
[98 166]
[99 165]
[100 164]
[101 163]
[102 162]
[103 161]
[114 159]
[115 158]
[116 157]
[118 156]
[119 155]
[120 154]
[121 153]
[122 152]
[123 151]
[125 149]
[126 148]
[127 146]
[128 145]
[129 144]
[130 143]
[131 142]
[132 141]
[181 197]
[182 196]
[183 195]
[184 194]
[185 193]
[186 192]
[187 191]
[216 263]
[219 260]
[220 259]
[222 257]
[224 256]
[225 255]
[226 254]
[228 252]
[229 251]
[230 250]
[231 249]
[233 248]
[234 247]
[235 246]
[236 245]
[237 244]
[238 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
