%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCCCGGCCCCGCUGCCGCCGCCGCCACACCGGCCCUUCGGGAGCGUCUGAGGAGGCGCGGGCCGCUGCGGGCUCGGGCGCCGCAGCGCGCCGGCCCGAGCCCCUGGACGAGGCCCACGGAGCCGCUCGCCCCGACCCAGCCGCCCGAUGUCCUCAAAAUGGAGGCAGCGGGGGCGGCGGCGUGAAGAAAGCGGCGCUGUGGGCGCGGGAGUAGGGGCCCGGGCGGAGGCGGUGGCGGG\
) } def
/len { sequence length } bind def

/coor [
[94.42146301 391.46282959]
[92.67149353 406.72171021]
[83.51364899 419.05172729]
[69.41135406 425.13619995]
[54.15803909 423.33840942]
[41.85678101 414.14196777]
[35.81655121 400.02066040]
[37.66213989 384.77307129]
[46.89709854 372.50070190]
[61.03726578 366.50476074]
[62.79304504 351.60787964]
[64.54882050 336.71096802]
[66.30460358 321.81408691]
[68.06037903 306.91720581]
[69.81616211 292.02032471]
[71.57193756 277.12344360]
[73.32772064 262.22653198]
[75.08349609 247.32965088]
[76.83927917 232.43276978]
[78.59505463 217.53588867]
[80.35083771 202.63899231]
[74.15647125 189.09355164]
[83.45592499 176.29389954]
[85.21170044 161.39701843]
[86.96748352 146.50013733]
[88.72325897 131.60324097]
[90.47904205 116.70635986]
[84.54629517 112.11805725]
[82.53176117 126.98216248]
[68.65176392 132.66947937]
[56.78646469 123.49262238]
[58.80131912 108.62856293]
[72.68079376 102.94145966]
[66.74804688 98.35315704]
[52.77137756 103.79858398]
[38.79470825 109.24401093]
[24.85382652 114.78042603]
[10.94932556 120.40757751]
[-2.95517397 126.03473663]
[-16.85967445 131.66189575]
[-30.76417351 137.28904724]
[-44.66867447 142.91619873]
[-58.57317352 148.54335022]
[-68.22994232 161.79774475]
[-84.50610352 159.79310608]
[-90.65814209 144.59164429]
[-80.35736084 131.83131409]
[-64.20033264 134.63885498]
[-50.29582977 129.01170349]
[-36.39133072 123.38454437]
[-22.48682976 117.75739288]
[-8.58232975 112.13023376]
[5.32217026 106.50308228]
[19.22667122 100.87592316]
[24.23768806 95.46423340]
[33.34927750 95.26734161]
[47.32595062 89.82191467]
[61.30261993 84.37648773]
[61.88907242 69.38795471]
[48.38060760 62.86711884]
[32.58908463 63.83581161]
[24.49093246 51.33504105]
[10.98246574 44.81420517]
[-2.52600169 38.29336929]
[-16.07668304 31.86071587]
[-29.66900444 25.51651955]
[-43.26132584 19.17232323]
[-56.85364532 12.82812691]
[-70.44596863 6.48393106]
[-84.03828430 0.13973492]
[-97.63060760 -6.20446110]
[-111.22292328 -12.54865742]
[-124.85630798 -18.80412674]
[-138.53016663 -24.97060394]
[-154.78462219 -22.79690552]
[-164.57862854 -35.95021057]
[-157.83695984 -50.89952469]
[-141.49487305 -52.26627731]
[-132.36369324 -38.64447021]
[-118.68983459 -32.47798920]
[-111.31531525 -32.59312057]
[-104.87873077 -26.14097786]
[-91.28640747 -19.79678154]
[-77.69409180 -13.45258522]
[-64.10176849 -7.10838938]
[-50.50944901 -0.76419324]
[-36.91712952 5.58000278]
[-23.32480812 11.92419910]
[-9.73248672 18.26839447]
[-2.35710025 18.24940300]
[3.99483538 24.78490067]
[17.50330162 31.30573845]
[31.01177025 37.82657623]
[45.83707809 36.39146805]
[54.90144348 49.35865021]
[68.40991211 55.87948990]
[101.10952759 68.34692383]
[105.79078674 93.00452423]
[118.64884949 85.27988434]
[126.49389648 71.54067230]
[141.38830566 71.61888885]
[154.24636841 63.89424515]
[167.10443115 56.16960526]
[179.96250916 48.44496536]
[192.82057190 40.72032547]
[205.67864990 32.99568558]
[218.53671265 25.27104568]
[222.43286133 6.71494246]
[238.39222717 -2.91704106]
[256.01043701 2.10765934]
[268.66275024 -5.94954443]
[272.20724487 -18.33735847]
[282.89443970 -24.79051590]
[294.72341919 -22.32174301]
[307.47970581 -30.21333504]
[320.23599243 -38.10492706]
[332.99227905 -45.99652100]
[345.74856567 -53.88811111]
[358.50485229 -61.77970505]
[371.26113892 -69.67129517]
[384.01742554 -77.56288910]
[391.68270874 -91.40319061]
[406.57684326 -91.51914215]
[419.33312988 -99.41073608]
[432.08941650 -107.30232239]
[444.84570312 -115.19391632]
[457.60198975 -123.08551025]
[470.09436035 -131.38854980]
[482.30957031 -140.09423828]
[494.52478027 -148.79991150]
[506.73995972 -157.50559998]
[513.48754883 -171.81576538]
[528.34252930 -172.90155029]
[540.55773926 -181.60723877]
[552.77288818 -190.31291199]
[557.93164062 -197.82606506]
[565.20458984 -199.05123901]
[577.53222656 -207.59695435]
[580.67956543 -213.37409973]
[585.53753662 -216.27388000]
[590.29449463 -216.19981384]
[602.84069824 -224.42126465]
[615.38690186 -232.64271545]
[620.83544922 -239.94844055]
[628.15069580 -240.88832092]
[640.80303955 -248.94551086]
[653.45538330 -257.00271606]
[666.10772705 -265.05993652]
[673.59191895 -278.99896240]
[688.48327637 -279.30905151]
[701.13562012 -287.36627197]
[706.67889404 -294.60034180]
[714.00579834 -295.44479370]
[726.76208496 -303.33636475]
[739.51837158 -311.22796631]
[752.27465820 -319.11956787]
[755.65454102 -334.55819702]
[769.00616455 -343.01458740]
[784.40820312 -339.47164917]
[792.72296143 -326.03137207]
[789.01739502 -310.66766357]
[775.48999023 -302.49548340]
[760.16625977 -306.36328125]
[747.40997314 -298.47167969]
[734.65368652 -290.58007812]
[721.89739990 -282.68850708]
[709.19281006 -274.71392822]
[696.54052734 -266.65673828]
[689.96124268 -253.29399109]
[674.16491699 -252.40759277]
[661.51257324 -244.35038757]
[648.86022949 -236.29318237]
[636.20788574 -228.23597717]
[623.60839844 -220.09648132]
[611.06213379 -211.87504578]
[598.51593018 -203.65359497]
[586.07794189 -195.26930237]
[573.75030518 -186.72358704]
[561.47857666 -178.09771729]
[549.26336670 -169.39202881]
[537.04821777 -160.68635559]
[531.17431641 -146.99887085]
[515.44567871 -145.29039001]
[503.23043823 -136.58471680]
[491.01525879 -127.87903595]
[478.80004883 -119.17335510]
[492.97448730 -114.26564789]
[498.10128784 -100.16899109]
[490.39126587 -87.30213928]
[475.54287720 -85.17492676]
[464.53045654 -95.35955811]
[465.49359131 -110.32922363]
[452.73730469 -102.43763733]
[439.98101807 -94.54604340]
[427.22473145 -86.65444946]
[414.46844482 -78.76285553]
[407.71557617 -65.48701477]
[391.90899658 -64.80660248]
[379.15274048 -56.91501236]
[366.39645386 -49.02342224]
[353.64016724 -41.13182831]
[340.88388062 -33.24023819]
[328.12759399 -25.34864426]
[315.37130737 -17.45705223]
[302.61502075 -9.56546021]
[295.13949585 6.32117558]
[276.71997070 6.70278645]
[264.06762695 14.75998974]
[264.07229614 26.14539909]
[258.53094482 36.22814941]
[248.71481323 42.45561218]
[236.99305725 43.18812180]
[226.26135254 38.12911606]
[213.40328979 45.85375595]
[200.54521179 53.57839584]
[187.68714905 61.30303574]
[174.82907104 69.02767181]
[161.97100830 76.75231171]
[149.11294556 84.47695160]
[142.18759155 97.66364288]
[126.37348938 98.13795471]
[113.51542664 105.86259460]
[105.37592316 118.46213531]
[103.62014771 133.35902405]
[101.86436462 148.25590515]
[100.10858917 163.15280151]
[98.35281372 178.04968262]
[104.42158508 192.66065979]
[95.24771881 204.39477539]
[93.49194336 219.29165649]
[91.73616028 234.18855286]
[89.98038483 249.08543396]
[88.22460175 263.98233032]
[86.46882629 278.87921143]
[84.71305084 293.77609253]
[82.95726776 308.67297363]
[81.20149231 323.56988525]
[79.44570923 338.46676636]
[77.68993378 353.36364746]
[75.93415070 368.26052856]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 240]
[11 239]
[12 238]
[13 237]
[14 236]
[15 235]
[16 234]
[17 233]
[18 232]
[19 231]
[20 230]
[21 229]
[23 227]
[24 226]
[25 225]
[26 224]
[27 223]
[34 58]
[35 57]
[36 56]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[43 48]
[59 96]
[60 95]
[62 93]
[63 92]
[64 91]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[73 80]
[74 79]
[98 222]
[99 221]
[101 219]
[102 218]
[103 217]
[104 216]
[105 215]
[106 214]
[107 213]
[110 208]
[111 207]
[114 205]
[115 204]
[116 203]
[117 202]
[118 201]
[119 200]
[120 199]
[121 198]
[123 196]
[124 195]
[125 194]
[126 193]
[127 192]
[128 186]
[129 185]
[130 184]
[131 183]
[133 181]
[134 180]
[135 179]
[137 178]
[138 177]
[141 176]
[142 175]
[143 174]
[145 173]
[146 172]
[147 171]
[148 170]
[150 168]
[151 167]
[153 166]
[154 165]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
