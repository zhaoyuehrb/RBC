%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGUAACCCGCGGAGCCAGAAGAGGGAGGAAAGGAGAUGAGAUUUCAUCAUGUUGGCCAGCCUGGUCUCAAACUCCUGACCUCAAGUGACCCGCCUGCCUCAGCCUCCCAAAGUGCUGGGAUUACAGGAAUUUAGUGAUUGACA\
) } def
/len { sequence length } bind def

/coor [
[77.03106689 143.87603760]
[70.34403229 139.33142090]
[64.51998138 133.78617859]
[59.70537186 127.39929962]
[56.01805115 120.35065460]
[53.54438400 112.83590698]
[52.33728027 105.06107330]
[52.41512299 97.23691559]
[53.76166153 89.57320404]
[56.32682037 82.27309418]
[60.02840424 75.52775574]
[48.65381622 65.74927521]
[37.27923203 55.97078705]
[25.90464211 46.19230270]
[17.29034996 42.93764877]
[14.39344501 36.07897949]
[-1.04432857 32.61693954]
[-5.34573126 18.35695457]
[-16.50728989 8.33599663]
[-31.59776306 11.43177032]
[-45.45559311 5.12194490]
[-52.85324860 -7.98296642]
[-51.13624191 -22.75421906]
[-62.29780197 -32.77517700]
[-73.45935822 -42.79613495]
[-84.62091827 -52.81709290]
[-102.69423676 -56.16401291]
[-107.55657959 -72.99376678]
[-118.93116760 -82.77225494]
[-130.30575562 -92.55073547]
[-141.68034363 -102.32922363]
[-158.04832458 -98.20423126]
[-173.50668335 -104.56010437]
[-182.06773376 -118.72182465]
[-180.54251099 -135.03321838]
[-192.12486267 -144.56471252]
[-203.70721436 -154.09619141]
[-215.28956604 -163.62767029]
[-226.87191772 -173.15916443]
[-242.44433594 -175.95382690]
[-247.35525513 -190.01554871]
[-258.93759155 -199.54704285]
[-276.27691650 -194.45529175]
[-293.07443237 -200.68389893]
[-302.73220825 -215.58705139]
[-301.57614136 -233.15158081]
[-313.55783081 -242.17593384]
[-325.53952026 -251.20030212]
[-341.15255737 -248.74911499]
[-353.87652588 -258.12335205]
[-356.16250610 -273.76144409]
[-346.65426636 -286.38558960]
[-330.99285889 -288.50610352]
[-318.46997070 -278.86492920]
[-316.51516724 -263.18197632]
[-304.53347778 -254.15762329]
[-292.55178833 -245.13327026]
[-281.52029419 -250.39253235]
[-269.22686768 -250.43417358]
[-258.02880859 -245.18829346]
[-250.09971619 -235.60481262]
[-247.00785828 -223.48202515]
[-249.40611267 -211.12939453]
[-237.82376099 -201.59790039]
[-223.07978821 -199.48498535]
[-217.34042358 -184.74150085]
[-205.75807190 -175.21002197]
[-194.17573547 -165.67854309]
[-182.59338379 -156.14704895]
[-171.01103210 -146.61557007]
[-158.41488647 -151.15956116]
[-145.11482239 -148.84953308]
[-134.62127686 -140.18614197]
[-129.75782776 -127.36117554]
[-131.90185547 -113.70381165]
[-120.52727509 -103.92532349]
[-109.15268707 -94.14683533]
[-97.77809906 -84.36835480]
[-85.65039062 -84.95501709]
[-76.08662415 -76.83847809]
[-74.59996033 -63.97865295]
[-63.43840027 -53.95769501]
[-52.27684402 -43.93673706]
[-41.11528397 -33.91577911]
[-26.61381531 -37.20901489]
[-12.79030704 -31.26135635]
[-5.02889347 -18.16120911]
[-6.48633242 -2.82556295]
[4.67522669 7.19539499]
[19.31465149 9.94067001]
[24.41440201 24.91742134]
[35.68312836 34.81771469]
[47.05771637 44.59620285]
[58.43230057 54.37468719]
[69.80689240 64.15316772]
[88.94722748 53.52493286]
[111.24011230 52.64111710]
[131.92131042 62.06620026]
[146.40211487 80.12139893]
[151.28604126 103.17176056]
[166.27214050 103.81709290]
[181.25825500 104.46242523]
[196.24436951 105.10776520]
[211.23048401 105.75309753]
[226.21659851 106.39842987]
[241.20878601 106.88249207]
[256.20532227 107.20523834]
[268.73889160 97.19082642]
[284.35049438 100.88645935]
[291.06420898 115.45717621]
[283.72985840 129.72555542]
[267.97372437 132.74612427]
[255.88256836 122.20176697]
[240.88603210 121.87902069]
[234.08180237 124.90156555]
[225.57125854 121.38454437]
[210.58514404 120.73920441]
[195.59902954 120.09387207]
[180.61293030 119.44853973]
[165.62681580 118.80320740]
[150.64070129 118.15787506]
[143.65885925 131.43394470]
[152.68322754 143.41563416]
[161.70758057 155.39732361]
[170.73194885 167.37901306]
[179.75630188 179.36070251]
[195.13308716 178.11245728]
[208.73294067 185.39584351]
[216.21620178 198.88674927]
[215.19497681 214.28027344]
[205.99514771 226.66439819]
[191.55233765 232.08740234]
[176.47521973 228.81883240]
[165.57481384 217.90165710]
[162.32940674 202.81950378]
[167.77461243 188.38507080]
[158.75025940 176.40336609]
[149.72589111 164.42167664]
[140.70153809 152.43998718]
[131.67716980 140.45829773]
[124.52867126 144.84899902]
[116.79961395 147.99763489]
[108.70264435 149.83290100]
[100.45806122 150.31936646]
[92.28784943 149.45812988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 95]
[12 94]
[13 93]
[14 92]
[16 91]
[18 89]
[19 88]
[23 84]
[24 83]
[25 82]
[26 81]
[28 78]
[29 77]
[30 76]
[31 75]
[35 70]
[36 69]
[37 68]
[38 67]
[39 66]
[41 64]
[42 63]
[46 57]
[47 56]
[48 55]
[100 121]
[101 120]
[102 119]
[103 118]
[104 117]
[105 116]
[106 114]
[107 113]
[122 140]
[123 139]
[124 138]
[125 137]
[126 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
