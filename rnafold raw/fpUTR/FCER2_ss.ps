%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGCUCUACUUUCAGAAGAAAGUGUCUCUCUUCCUGCUUAAACCUCUGUCUCUGACGGUCCCUGCCAAUCGCUCUGGUCGACCCCAACACACUAGGAGGACAGACACAGGCUCCAAACUCCACUAAGUGACCAGAGCUGUGAUUGUGCCCGCUGAGUGGACUGCGUUGUCAGGGAGUGAGUGCUCCAUCAUCGGGAGAAUCCAAGCAGGACCGCC\
) } def
/len { sequence length } bind def

/coor [
[86.45365906 170.58003235]
[92.50000000 154.74090576]
[92.50000000 139.74090576]
[92.50000000 124.74090576]
[92.50000000 109.74090576]
[85.23724365 107.86945343]
[74.73304749 118.57748413]
[70.71172333 104.12654114]
[63.44896698 102.25508881]
[56.19993973 115.38716888]
[48.95091629 128.51925659]
[41.70188904 141.65133667]
[34.45286560 154.78341675]
[27.20384026 167.91551208]
[19.95481491 181.04759216]
[20.81071281 197.42439270]
[6.91047573 206.12585449]
[-7.44652271 198.20066833]
[-7.49103498 181.80157471]
[6.82273006 173.79856873]
[14.07175541 160.66648865]
[21.32078171 147.53439331]
[28.56980705 134.40231323]
[35.81883240 121.27023315]
[43.06785583 108.13814545]
[50.31688309 95.00605774]
[43.86619949 81.46395111]
[45.29531479 66.53218842]
[54.19758606 54.45951080]
[68.03992462 48.68112564]
[82.88356781 50.84123993]
[94.50485992 60.32520676]
[99.59702301 74.43441772]
[96.71047211 89.15545654]
[102.60016632 75.36011505]
[108.48986816 61.56477356]
[114.37956238 47.76943207]
[120.26925659 33.97408676]
[126.15895081 20.17874527]
[132.04864502 6.38340282]
[137.93833923 -7.41193962]
[125.81837463 -23.06670570]
[122.87516785 -41.59968567]
[128.86395264 -58.29084396]
[141.38145447 -69.34785461]
[156.67567444 -72.76471710]
[158.82984924 -87.60923004]
[160.98402405 -102.45374298]
[151.80123901 -115.03604889]
[154.19734192 -130.05979919]
[166.24923706 -138.73663330]
[168.40341187 -153.58114624]
[170.55758667 -168.42565918]
[172.71174622 -183.27017212]
[174.86592102 -198.11468506]
[177.02009583 -212.95919800]
[179.17427063 -227.80371094]
[181.32844543 -242.64822388]
[182.94651794 -257.56069946]
[184.02641296 -272.52178955]
[185.10629272 -287.48284912]
[186.18618774 -302.44393921]
[187.26606750 -317.40499878]
[188.23812866 -332.37347412]
[189.10231018 -347.34857178]
[189.31846619 -362.34701538]
[188.88619995 -377.34078979]
[188.34590149 -392.33105469]
[187.69761658 -407.31701660]
[187.04931641 -422.30300903]
[186.40103149 -437.28900146]
[185.75273132 -452.27499390]
[184.78068542 -467.24343872]
[183.48530579 -482.18740845]
[182.18992615 -497.13137817]
[180.89456177 -512.07531738]
[179.59918213 -527.01928711]
[178.30381775 -541.96325684]
[177.00843811 -556.90722656]
[175.71307373 -571.85119629]
[174.41769409 -586.79516602]
[173.12232971 -601.73913574]
[158.61077881 -603.41210938]
[144.71160889 -607.89001465]
[131.96127319 -614.99792480]
[120.85150146 -624.45947266]
[111.81031799 -635.90765381]
[105.18554688 -648.89880371]
[101.23143768 -662.93017578]
[100.09890747 -677.45892334]
[101.82978058 -691.92364502]
[106.35523224 -705.76556396]
[113.49856567 -718.45043945]
[122.98206329 -729.48913574]
[134.43778992 -738.45635986]
[147.42192078 -745.00708008]
[161.43185425 -748.89001465]
[160.35195923 -763.85107422]
[159.27207947 -778.81213379]
[158.19218445 -793.77325439]
[143.98063660 -799.34051514]
[133.59832764 -810.52844238]
[129.10665894 -825.11572266]
[131.39746094 -840.20593262]
[140.01589966 -852.80297852]
[153.25076294 -860.40570068]
[168.47427368 -861.50451660]
[182.66378784 -855.88128662]
[193.00196838 -844.65252686]
[197.43615723 -830.04772949]
[195.08595276 -814.96661377]
[186.41796875 -802.40362549]
[173.15325928 -794.85314941]
[174.23315430 -779.89202881]
[175.31304932 -764.93096924]
[176.39292908 -749.96990967]
[191.67980957 -747.93640137]
[206.21800232 -742.77508545]
[219.37461853 -734.70812988]
[230.57641602 -724.08428955]
[239.33474731 -711.36370850]
[245.26689148 -697.09814453]
[248.11276245 -681.90698242]
[247.74632263 -666.45025635]
[244.18115234 -651.40002441]
[237.56999207 -637.41119385]
[228.19816589 -625.09295654]
[216.47126770 -614.98229980]
[202.89762878 -607.52069092]
[188.06628418 -603.03448486]
[189.36166382 -588.09051514]
[190.65702820 -573.14654541]
[191.95240784 -558.20257568]
[193.24777222 -543.25860596]
[194.54315186 -528.31469727]
[195.83851624 -513.37072754]
[197.13389587 -498.42675781]
[198.42927551 -483.48278809]
[199.72463989 -468.53881836]
[202.16906738 -466.00457764]
[203.51007080 -462.16238403]
[203.14712524 -457.54260254]
[200.73872375 -452.92327881]
[201.38700867 -437.93728638]
[202.03530884 -422.95129395]
[202.68359375 -407.96533203]
[203.33189392 -392.97933960]
[206.75961304 -386.43606567]
[203.87997437 -377.77304077]
[204.31224060 -362.77926636]
[215.34602356 -372.94073486]
[230.33824158 -372.45733643]
[240.69447327 -361.60614014]
[240.47795105 -346.60769653]
[229.81278992 -336.05996704]
[214.81288147 -336.00952148]
[204.07739258 -346.48437500]
[203.21321106 -331.50930786]
[205.96456909 -324.65411377]
[202.22715759 -316.32513428]
[201.14726257 -301.36404419]
[200.06736755 -286.40295410]
[198.98748779 -271.44189453]
[197.90759277 -256.48080444]
[210.76982117 -264.19851685]
[224.87432861 -259.09332275]
[229.81695557 -244.93103027]
[221.95181274 -232.15843201]
[207.08058167 -230.19717407]
[196.17295837 -240.49404907]
[194.01878357 -225.64953613]
[191.86460876 -210.80502319]
[189.71043396 -195.96051025]
[187.55625916 -181.11601257]
[185.40208435 -166.27149963]
[183.24792480 -151.42698669]
[181.09375000 -136.58247375]
[190.18215942 -124.83784485]
[188.20899963 -109.75270844]
[175.82852173 -100.29956818]
[173.67436218 -85.45506287]
[171.52018738 -70.61054993]
[188.68028259 -60.58312225]
[197.46131897 -40.43059158]
[192.26799011 -16.90204811]
[202.48565674 -5.92028379]
[212.70333862 5.06148100]
[222.92100525 16.04324532]
[238.52775574 15.06170177]
[251.08338928 24.38317871]
[254.65953064 39.60635757]
[247.56764221 53.54332352]
[233.15628052 59.61346054]
[218.23005676 54.95064163]
[209.83666992 41.75650787]
[211.93923950 26.26091957]
[201.72157288 15.27915382]
[191.50389099 4.29738903]
[181.28622437 -6.68437576]
[173.89808655 -5.39384270]
[180.91877747 7.86171770]
[170.48136902 18.63485527]
[157.01025391 12.03720570]
[159.12182617 -2.81277704]
[151.73368835 -1.52224398]
[145.84399414 12.27309895]
[139.95429993 26.06844139]
[134.06460571 39.86378479]
[128.17489624 53.65912628]
[122.28520966 67.45446777]
[116.39551544 81.24980927]
[110.50581360 95.04515839]
[107.50000000 109.74090576]
[107.50000000 124.74090576]
[107.50000000 139.74090576]
[107.50000000 154.74090576]
[113.54634094 170.58003235]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 216]
[3 215]
[4 214]
[5 213]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[34 212]
[35 211]
[36 210]
[37 209]
[38 208]
[39 207]
[40 206]
[41 205]
[46 182]
[47 181]
[48 180]
[51 177]
[52 176]
[53 175]
[54 174]
[55 173]
[56 172]
[57 171]
[58 170]
[59 164]
[60 163]
[61 162]
[62 161]
[63 160]
[64 158]
[65 157]
[66 150]
[67 149]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[73 139]
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[79 133]
[80 132]
[81 131]
[82 130]
[97 116]
[98 115]
[99 114]
[100 113]
[185 199]
[186 198]
[187 197]
[188 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
