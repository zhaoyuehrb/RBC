%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACAGGGCGGCUUCCGGGAUGUGGUAGGACCGUUGGCUCUCGCUGCACGCGGAGGUCAAGGUGUCGUCCUUACUGCUGUGUGUCGUCCGCUCCUAAAGGCCCAGCUUCUAUGGCCCUGUGACCUGCAGGUAUUGGGAGAUUCACAACUAAGUCGCCAGGACCCCCGGAAGCCUAGAA\
) } def
/len { sequence length } bind def

/coor [
[98.54209900 333.41870117]
[83.46411133 335.15615845]
[68.77765656 331.32568359]
[56.46894836 322.44537354]
[48.20264435 309.71615601]
[45.09669113 294.85958862]
[47.57114792 279.88488770]
[55.29135895 266.81729126]
[67.21323395 257.42401123]
[81.72443390 252.97547913]
[82.77661896 238.01243591]
[83.82880402 223.04937744]
[84.88098145 208.08631897]
[85.93316650 193.12327576]
[86.98535156 178.16021729]
[88.03753662 163.19717407]
[89.08971405 148.23411560]
[90.14189911 133.27107239]
[91.19408417 118.30801392]
[78.23228455 102.34749603]
[85.54998016 81.50299072]
[108.63370514 76.48444366]
[93.84172058 73.99502563]
[79.04973602 71.50560760]
[64.25775146 69.01618958]
[49.46577072 66.52677155]
[34.67378616 64.03735352]
[19.86052513 61.67784119]
[5.02713060 59.44840240]
[-9.80626488 57.21896744]
[-24.63965988 54.98953247]
[-39.54216003 53.28203964]
[-53.90975952 59.90643692]
[-65.98691559 51.18911743]
[-80.94015503 50.00566864]
[-95.89339447 48.82221985]
[-110.84664154 47.63877487]
[-125.79988098 46.45532608]
[-140.75312805 45.27187729]
[-155.12072754 51.89627457]
[-167.19787598 43.17895508]
[-182.15112305 41.99551010]
[-197.10435486 40.81206131]
[-212.05760193 39.62861252]
[-225.14562988 48.90670395]
[-240.51922607 44.32060242]
[-246.38507080 29.38837624]
[-238.24339294 15.56474781]
[-222.33979797 13.45402336]
[-210.87416077 24.67537117]
[-195.92091370 25.85881805]
[-180.96766663 27.04226685]
[-166.01443481 28.22571373]
[-152.71638489 21.51667023]
[-139.56967163 30.31863594]
[-124.61643219 31.50208473]
[-109.66319275 32.68553162]
[-94.70994568 33.86898041]
[-79.75670624 35.05242538]
[-64.80346680 36.23587418]
[-51.50542068 29.52683067]
[-38.35871124 38.32879639]
[-36.12957001 36.58387375]
[-33.06504440 35.63006592]
[-29.46784592 35.79375839]
[-25.75440788 37.28401566]
[-22.41022491 40.15613556]
[-7.57682896 42.38557434]
[7.25656652 44.61500931]
[22.08996201 46.84444427]
[29.19252396 44.72310638]
[37.16320419 49.24537277]
[51.95518875 51.73479080]
[66.74716949 54.22420502]
[81.53915405 56.71362305]
[96.33113861 59.20304108]
[111.12312317 61.69245529]
[125.42116547 57.15746689]
[136.07420349 46.59750366]
[146.72723389 36.03754425]
[157.38027954 25.47758293]
[161.73416138 10.26724625]
[176.22013855 6.80233002]
[186.87316895 -3.75763106]
[197.52621460 -14.31759262]
[201.88008118 -29.52792740]
[216.36607361 -32.99284363]
[227.01910400 -43.55280685]
[237.67214966 -54.11276627]
[248.32518005 -64.67272949]
[248.07362366 -82.15042114]
[260.28961182 -94.17629242]
[277.08670044 -93.67063904]
[287.55276489 -104.41593170]
[298.01882935 -115.16122437]
[297.98251343 -130.73802185]
[308.74966431 -141.48617554]
[323.59997559 -141.42483521]
[334.06604004 -152.17012024]
[344.53210449 -162.91542053]
[354.90347290 -173.75215149]
[358.72088623 -189.10591125]
[373.07635498 -193.07707214]
[383.35223389 -204.00437927]
[393.43475342 -215.11036682]
[403.32080078 -226.39157104]
[413.20687866 -237.67279053]
[413.59075928 -253.71124268]
[426.45608521 -263.29577637]
[441.93365479 -259.07391357]
[448.15042114 -244.28436279]
[440.33740234 -230.27235413]
[424.48809814 -227.78672791]
[414.60202026 -216.50550842]
[404.71597290 -205.22430420]
[404.13464355 -200.45727539]
[400.53372192 -196.01339722]
[394.27954102 -193.72850037]
[384.00366211 -182.80119324]
[380.92126465 -168.22901917]
[365.83081055 -163.47625732]
[363.53240967 -156.42901611]
[355.27740479 -152.44935608]
[344.81134033 -141.70405579]
[334.34527588 -130.95875549]
[334.79748535 -116.11521149]
[324.33648682 -105.06885529]
[308.76412964 -104.69515228]
[298.29806519 -93.94985962]
[287.83200073 -83.20456696]
[289.80120850 -70.45361328]
[283.97167969 -58.72565079]
[272.27539062 -52.41178894]
[258.88513184 -54.01969147]
[248.23210144 -43.45972824]
[237.57907104 -32.89976883]
[226.92602539 -22.33980560]
[223.33412170 -7.88478947]
[208.08616638 -3.66455436]
[197.43313599 6.89540672]
[186.78009033 17.45536804]
[183.18820190 31.91038513]
[167.94023132 36.13061905]
[157.28720093 46.69058228]
[146.63415527 57.25054169]
[135.98112488 67.81050110]
[149.16793823 60.66152573]
[163.34017944 65.57556152]
[169.27093506 79.35330200]
[163.09896851 93.02468109]
[148.84255981 97.68889618]
[135.78367615 90.30963898]
[146.24975586 101.05493164]
[156.71582031 111.80022430]
[172.67399597 113.44829559]
[181.21362305 127.02969360]
[175.78381348 142.12594604]
[160.54986572 147.15649414]
[147.19795227 138.26232910]
[145.97052002 122.26629639]
[135.50445557 111.52100372]
[125.03838348 100.77571106]
[118.09972382 113.67189789]
[106.15713501 119.36019897]
[105.10494995 134.32325745]
[104.05277252 149.28630066]
[103.00058746 164.24935913]
[101.94840240 179.21240234]
[100.89621735 194.17546082]
[99.84403992 209.13850403]
[98.79185486 224.10156250]
[97.73966980 239.06460571]
[96.68748474 254.02766418]
[110.43333435 260.46319580]
[120.92333984 271.43243408]
[126.73883057 285.45187378]
[127.09329224 300.62548828]
[121.93879700 314.90118408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 173]
[11 172]
[12 171]
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[18 165]
[19 164]
[22 77]
[23 76]
[24 75]
[25 74]
[26 73]
[27 72]
[28 70]
[29 69]
[30 68]
[31 67]
[32 62]
[34 60]
[35 59]
[36 58]
[37 57]
[38 56]
[39 55]
[41 53]
[42 52]
[43 51]
[44 50]
[78 146]
[79 145]
[80 144]
[81 143]
[83 141]
[84 140]
[85 139]
[87 137]
[88 136]
[89 135]
[90 134]
[93 130]
[94 129]
[95 128]
[98 125]
[99 124]
[100 123]
[101 121]
[103 119]
[104 118]
[105 115]
[106 114]
[107 113]
[152 162]
[153 161]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
