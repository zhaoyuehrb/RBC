%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCGGCGCGGGCACGGGCACGGGCGCGGGCGGCGCGGCGAGGAGGCGGCCCGCGGAGUCCAGCGAAGUUUGGCGGAACAUGGCGGAAGCGUCUGGGGCACGCAGGAGCGCGGGGCGGCGGCGGCCGGAGCCCGAGGAGCUGUAGCAGCCUUAGUCGCCGCCGCCGCGGGGCGAGGUCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[146.95712280 295.37612915]
[142.73114014 280.98373413]
[138.50514221 266.59133911]
[134.27915955 252.19892883]
[129.36775208 246.65522766]
[130.10525513 237.52917480]
[126.12164307 223.06781006]
[122.13803101 208.60646057]
[118.15441895 194.14509583]
[114.17080688 179.68374634]
[101.13336945 172.57313538]
[96.88741302 157.96400452]
[104.43408203 144.33735657]
[100.45046997 129.87599182]
[96.46685791 115.41464233]
[81.72202301 99.02429962]
[97.53853607 79.35257721]
[89.42891693 66.73377991]
[81.31930542 54.11497498]
[73.20969391 41.49617004]
[65.10008240 28.87736702]
[48.54627609 20.83387375]
[48.37215424 3.29463291]
[40.05170059 -9.18615437]
[31.73124695 -21.66694260]
[17.63849449 -28.85755348]
[17.01655579 -43.73917007]
[8.69610310 -56.21995544]
[0.37564942 -68.70074463]
[-12.10828495 -71.99716949]
[-18.77894592 -82.58113098]
[-16.51605606 -94.47745514]
[-24.62566757 -107.09626007]
[-38.59563446 -114.52260590]
[-38.96748734 -129.41256714]
[-47.07709885 -142.03137207]
[-61.04706573 -149.45771790]
[-61.41891861 -164.34767151]
[-75.38888550 -171.77401733]
[-75.76073456 -186.66398621]
[-83.87035370 -199.28279114]
[-91.97996521 -211.90158081]
[-107.09951782 -210.12385559]
[-121.43317413 -215.06684875]
[-132.15539551 -225.69953918]
[-137.17721558 -239.87495422]
[-135.55305481 -254.76359558]
[-127.65831757 -267.41818237]
[-135.76792908 -280.03698730]
[-143.87753296 -292.65579224]
[-152.09286499 -305.20602417]
[-160.41331482 -317.68682861]
[-168.73376465 -330.16760254]
[-177.05421448 -342.64840698]
[-184.43418884 -348.06732178]
[-185.40756226 -355.40948486]
[-193.51716614 -368.02828979]
[-201.62678528 -380.64706421]
[-209.73638916 -393.26586914]
[-217.95172119 -405.81613159]
[-226.27217102 -418.29690552]
[-234.80111694 -430.63616943]
[-243.53614807 -442.83038330]
[-251.09399414 -447.99832153]
[-252.31346130 -455.30364990]
[-260.84240723 -467.64288330]
[-275.05398560 -474.59573364]
[-275.92581177 -489.46481323]
[-290.13739014 -496.41766357]
[-291.00921631 -511.28671265]
[-299.53817749 -523.62597656]
[-308.06710815 -535.96520996]
[-316.59606934 -548.30450439]
[-331.63998413 -554.83227539]
[-333.23965454 -571.15319824]
[-319.74945068 -580.47772217]
[-305.04693604 -573.21350098]
[-304.25680542 -556.83343506]
[-295.72787476 -544.49420166]
[-287.19891357 -532.15490723]
[-278.66998291 -519.81567383]
[-265.06848145 -513.74542236]
[-263.58657837 -497.99374390]
[-249.98506165 -491.92349243]
[-248.50315857 -476.17184448]
[-239.97421265 -463.83258057]
[-231.34191895 -451.56542969]
[-222.60688782 -439.37118530]
[-218.10502625 -437.72076416]
[-214.60118103 -433.21304321]
[-213.79138184 -426.61737061]
[-205.47093201 -414.13656616]
[-199.13139343 -410.30709839]
[-197.11759949 -401.37548828]
[-189.00798035 -388.75668335]
[-180.89837646 -376.13787842]
[-172.78875732 -363.51907349]
[-164.57344055 -350.96884155]
[-156.25297546 -338.48806763]
[-147.93252563 -326.00726318]
[-139.61207581 -313.52648926]
[-133.27253723 -309.69699097]
[-131.25874329 -300.76541138]
[-123.14912415 -288.14660645]
[-115.03951263 -275.52780151]
[-100.24890137 -277.45220947]
[-86.03102112 -272.74462891]
[-75.22274780 -262.28793335]
[-70.00508118 -248.11769104]
[-71.46318054 -233.02593994]
[-79.36116028 -220.01119995]
[-71.25154877 -207.39239502]
[-63.14193344 -194.77359009]
[-49.75202179 -188.24983215]
[-48.80011749 -172.45729065]
[-35.41020203 -165.93353271]
[-34.45829773 -150.14097595]
[-26.34868431 -137.52217102]
[-12.95877075 -130.99841309]
[-12.00686550 -115.20587158]
[-3.89725304 -102.58706665]
[12.10748863 -95.41046906]
[12.85643673 -77.02119446]
[21.17688942 -64.54041290]
[29.49734306 -52.05961990]
[42.99496078 -45.76171875]
[44.21203613 -29.98739624]
[52.53248596 -17.50660706]
[60.85293961 -5.02582026]
[72.66103363 -2.34029222]
[79.69228363 8.00763226]
[77.71888733 20.76775551]
[85.82849884 33.38655853]
[93.93811035 46.00535965]
[102.04772186 58.62416458]
[110.15733337 71.24296570]
[122.63812256 79.56342316]
[137.40534973 82.19571686]
[152.17257690 84.82800293]
[161.19165039 83.25160217]
[167.16488647 87.63055420]
[181.88580322 90.51055145]
[196.60673523 93.39054871]
[211.32765198 96.27054596]
[228.03298950 93.37781525]
[235.43717957 108.62951660]
[222.83120728 119.96643066]
[208.44766235 110.99147034]
[193.72673035 108.11147308]
[179.00581360 105.23147583]
[164.28488159 102.35147858]
[149.54028320 99.59523773]
[134.77305603 96.96294403]
[120.00582886 94.33065033]
[117.66088104 104.80933380]
[110.92821503 111.43103027]
[114.91182709 125.89238739]
[118.89543915 140.35374451]
[132.35543823 148.19377136]
[136.18937683 162.91639709]
[128.63217163 175.70013428]
[132.61576843 190.16148376]
[136.59938049 204.62284851]
[140.58299255 219.08419800]
[144.56660461 233.54556274]
[148.67155457 247.97294617]
[152.89753723 262.36532593]
[157.12353516 276.75772095]
[161.34951782 291.15011597]
[165.81669617 305.46951294]
[177.49374390 316.14456177]
[174.14117432 330.65695190]
[178.84826660 344.89926147]
[183.55535889 359.14157104]
[188.26246643 373.38388062]
[200.85791016 383.88562012]
[197.79463196 399.99612427]
[182.22384644 405.14227295]
[170.16346741 394.03018188]
[174.02015686 378.09097290]
[169.31306458 363.84866333]
[164.60595703 349.60635376]
[159.89886475 335.36404419]
[148.55850220 325.70770264]
[151.57438660 310.17660522]
[147.76831055 307.26034546]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 169]
[2 168]
[3 167]
[4 166]
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[13 158]
[14 157]
[15 156]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[23 129]
[24 128]
[25 127]
[27 125]
[28 124]
[29 123]
[32 121]
[33 120]
[35 118]
[36 117]
[38 115]
[40 113]
[41 112]
[42 111]
[48 105]
[49 104]
[50 103]
[51 101]
[52 100]
[53 99]
[54 98]
[56 97]
[57 96]
[58 95]
[59 94]
[60 92]
[61 91]
[62 88]
[63 87]
[65 86]
[66 85]
[68 83]
[70 81]
[71 80]
[72 79]
[73 78]
[137 154]
[138 153]
[139 152]
[141 151]
[142 150]
[143 149]
[144 148]
[170 185]
[172 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
