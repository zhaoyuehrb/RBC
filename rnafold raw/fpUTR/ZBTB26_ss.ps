%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCCCUUCCCUGUGACUGGAGUGGGGAGCCUGAGGAUGCCCCUGGGACCGCCUCAUAGGACCCCAGCUGAGGGCCCAGCAGUUGGCUUGGGGGCCUGACUCUGGCAUCUUAUAAGAAGUGCCAGAGGUGAGGCCCUAAGAAAACGAGCCUCGGGAGCCAGCCCAAGACCAGGCAUUCAGUGCCAGUCUUUGAGAACCACUGUCUGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[101.80614471 127.55799866]
[108.22879791 114.00319672]
[100.75346375 114.61093903]
[93.73744965 127.86897278]
[86.72143555 141.12701416]
[79.70542145 154.38505554]
[72.68940735 167.64308167]
[65.67339325 180.90112305]
[66.05734253 196.71766663]
[53.26559830 204.34791565]
[46.34754562 217.65733337]
[39.52783585 231.01739502]
[45.79349899 245.34483337]
[41.33420563 260.33312988]
[28.25549507 268.90524292]
[12.73273277 267.01370239]
[2.09529519 255.55165100]
[1.36585379 239.93109131]
[10.88882923 227.52758789]
[26.16776276 224.19769287]
[32.98747635 210.83761597]
[33.22869492 203.45205688]
[40.00756073 197.33189392]
[39.12178040 182.46365356]
[52.41535568 173.88510132]
[59.43136978 160.62707520]
[66.44738770 147.36903381]
[73.46340179 134.11099243]
[80.47941589 120.85295868]
[87.49542999 107.59492493]
[88.26941681 92.61490631]
[82.65715790 78.70438385]
[77.04489899 64.79386902]
[71.43264008 50.88335037]
[65.82037354 36.97283173]
[60.20811462 23.06231308]
[54.59585571 9.15179348]
[35.75436401 6.82938051]
[21.04837036 -4.94064903]
[14.75411606 -22.53696632]
[-0.09887695 -24.63186455]
[-14.95186996 -26.72676468]
[-29.80486298 -28.82166290]
[-44.71318054 -30.47757339]
[-59.66385269 -31.69305420]
[-74.61452484 -32.90853500]
[-89.56520081 -34.12401199]
[-104.51586914 -35.33949280]
[-120.97010040 -27.07112885]
[-135.00622559 -37.60568619]
[-149.97319031 -38.60052872]
[-159.80258179 -26.59374809]
[-174.82063293 -22.69019890]
[-189.25260925 -28.39087868]
[-197.54911804 -41.50375748]
[-196.51997375 -56.98666763]
[-186.56092834 -68.88611603]
[-171.50140381 -72.62651825]
[-157.13212585 -66.76961517]
[-148.97834778 -53.56750107]
[-134.01138306 -52.57265854]
[-124.70680237 -60.30105972]
[-112.23035431 -59.59569550]
[-103.30039215 -50.29016495]
[-88.34971619 -49.07468414]
[-73.39904785 -47.85920715]
[-58.44837570 -46.64372635]
[-43.49769974 -45.42824554]
[-41.27718735 -47.13685608]
[-38.24658585 -48.06953049]
[-34.69780350 -47.91350174]
[-31.03040504 -46.46726608]
[-27.70996284 -43.67465591]
[-12.85697079 -41.57975769]
[1.99602222 -39.48485947]
[16.84901428 -37.38995743]
[19.43614769 -42.75903702]
[22.91763306 -47.59634018]
[27.18736076 -51.75442886]
[32.11518478 -55.10656357]
[37.55090714 -57.55057144]
[43.32884979 -59.01195908]
[49.27289581 -59.44618607]
[52.77995682 -74.03044128]
[56.28701401 -88.61470032]
[48.29738235 -101.98644257]
[52.06179810 -116.72699738]
[64.85894775 -124.26148224]
[68.36601257 -138.84573364]
[71.87306976 -153.42999268]
[75.38012695 -168.01425171]
[78.88718414 -182.59851074]
[82.39424133 -197.18276978]
[85.90129852 -211.76701355]
[84.86506653 -220.84091187]
[89.56912994 -226.53973389]
[93.29090118 -241.07067871]
[97.01268005 -255.60162354]
[92.94140625 -270.89001465]
[103.59462738 -281.29956055]
[107.31640625 -295.83050537]
[110.93091583 -310.38848877]
[114.43798065 -324.97274780]
[117.94503784 -339.55700684]
[121.45209503 -354.14126587]
[124.95915222 -368.72552490]
[128.46621704 -383.30978394]
[131.97326660 -397.89404297]
[130.93704224 -406.96792603]
[135.64109802 -412.66674805]
[139.36286926 -427.19769287]
[143.08465576 -441.72863770]
[136.18002319 -456.20986938]
[143.32623291 -470.57339478]
[159.04130554 -473.80078125]
[171.26998901 -463.41622925]
[170.63148499 -447.38589478]
[157.61560059 -438.00686646]
[153.89381409 -423.47592163]
[150.17204285 -408.94497681]
[146.55752563 -394.38696289]
[143.05046082 -379.80270386]
[139.54341125 -365.21847534]
[136.03634644 -350.63421631]
[132.52929688 -336.04995728]
[129.02223206 -321.46569824]
[125.51517487 -306.88143921]
[127.00741577 -299.64416504]
[121.84735107 -292.10873413]
[118.12557220 -277.57775879]
[122.46305847 -263.32873535]
[111.54362488 -251.87985229]
[107.82185364 -237.34890747]
[104.10007477 -222.81796265]
[100.48555756 -208.25996399]
[96.97850037 -193.67570496]
[93.47144318 -179.09144592]
[89.96438599 -164.50718689]
[86.45732117 -149.92292786]
[82.95026398 -135.33868408]
[79.44320679 -120.75442505]
[87.41573334 -108.22547913]
[84.06683350 -93.38500977]
[70.87126923 -85.10764313]
[67.36421204 -70.52338409]
[63.85715485 -55.93912888]
[77.27153778 -44.48140717]
[83.23575592 -27.76721954]
[80.06792450 -10.19924927]
[68.50637817 3.53953314]
[74.11863708 17.45005226]
[79.73089600 31.36057091]
[85.34315491 45.27108765]
[90.95541382 59.18160629]
[96.56768036 73.09212494]
[102.17993927 87.00264740]
[103.92377472 72.10435486]
[103.23072815 57.12037659]
[107.27397156 42.67557907]
[115.64517212 30.22876930]
[127.49890137 21.03697777]
[141.63804626 16.02849960]
[156.63464355 15.70914841]
[170.97416687 20.11117554]
[183.20845032 28.79001427]
[192.10192871 40.86917114]
[196.75643921 55.12874985]
[196.70188904 70.12865448]
[191.94381714 84.35400391]
[182.96273804 96.36817169]
[170.66566467 104.95780945]
[156.29055786 109.25595856]
[142.60543823 103.11451721]
[151.67089844 115.06513977]
[160.73635864 127.01576233]
[169.80181885 138.96638489]
[185.21005249 141.25196838]
[194.23348999 153.50073242]
[191.95957947 168.17605591]
[201.02503967 180.12667847]
[210.09049988 192.07730103]
[219.15597534 204.02792358]
[228.22143555 215.97854614]
[240.08709717 215.27195740]
[250.71205139 220.32849121]
[257.50714111 229.78782654]
[258.87854004 241.23306274]
[254.60049438 251.80775452]
[263.30953979 264.02053833]
[272.01858521 276.23336792]
[286.13766479 285.61883545]
[281.02752686 301.78433228]
[264.07916260 301.34893799]
[259.80575562 284.94241333]
[251.09672546 272.72958374]
[242.38768005 260.51678467]
[224.18270874 258.58425903]
[212.98071289 243.70237732]
[216.27081299 225.04400635]
[207.20535278 213.09338379]
[198.13987732 201.14276123]
[189.07441711 189.19213867]
[180.00895691 177.24151611]
[165.26377869 175.47647095]
[155.89987183 163.48597717]
[157.85119629 148.03184509]
[148.78573608 136.08122253]
[139.72027588 124.13059998]
[130.65481567 112.17997742]
[123.17947388 112.78771973]
[131.70735168 125.12770081]
[125.28446198 138.68301392]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 30]
[4 29]
[5 28]
[6 27]
[7 26]
[8 25]
[10 23]
[11 21]
[12 20]
[31 156]
[32 155]
[33 154]
[34 153]
[35 152]
[36 151]
[37 150]
[40 76]
[41 75]
[42 74]
[43 73]
[44 68]
[45 67]
[46 66]
[47 65]
[48 64]
[50 61]
[51 60]
[83 146]
[84 145]
[85 144]
[88 141]
[89 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
[96 134]
[97 133]
[98 132]
[100 130]
[101 129]
[102 127]
[103 126]
[104 125]
[105 124]
[106 123]
[107 122]
[108 121]
[110 120]
[111 119]
[112 118]
[173 209]
[174 208]
[175 207]
[176 206]
[179 203]
[180 202]
[181 201]
[182 200]
[183 199]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
