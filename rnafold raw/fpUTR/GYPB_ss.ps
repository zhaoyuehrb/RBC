%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUUGUCUUUGGUAGUUUUUUUGCACUAACUUCAGGAACCAGCUCAUGAUCUCAGGAUGUAUGGAAAAAUAAUCUUUGUAUUACUAUUGUCAGAUGGAGCCAACCCUGAAAAUUCUGGGAGAAGAGGACAGAAGGCAGAGGGAAGAGCAAGAGCAAAAAUUCUGAAACAGGAGAAAUUGUGAGCAUAUCAGCAUUAAGUACCACUGAGGUGGCA\
) } def
/len { sequence length } bind def

/coor [
[60.22220230 103.70671082]
[63.88579559 87.60098267]
[48.77845764 91.39652252]
[35.74895477 83.54243469]
[32.22359467 69.11650085]
[19.26955795 61.55390167]
[6.31552076 53.99130249]
[-6.63851595 46.42869949]
[-19.59255219 38.86609650]
[-32.54658890 31.30349731]
[-45.50062561 23.74089622]
[-58.45466232 16.17829323]
[-74.27346802 15.90256500]
[-81.36383057 2.80386162]
[-94.31786346 -4.75873995]
[-109.42520142 -0.96320283]
[-122.45470428 -8.81729126]
[-125.98006439 -23.24321938]
[-138.93409729 -30.80582047]
[-151.88813782 -38.36842346]
[-164.84217834 -45.93102264]
[-177.79621887 -53.49362564]
[-190.75024414 -61.05622482]
[-203.70428467 -68.61882782]
[-219.52308655 -68.89455414]
[-226.61344910 -81.99326324]
[-239.56748962 -89.55586243]
[-252.23258972 -81.10858154]
[-267.24819946 -79.00647736]
[-281.62860107 -83.61343384]
[-292.53790283 -93.96468353]
[-297.84912109 -107.96826172]
[-296.55895996 -122.82762909]
[-309.51300049 -130.39022827]
[-322.46701050 -137.95283508]
[-335.42105103 -145.51544189]
[-348.37509155 -153.07803345]
[-361.32913208 -160.64064026]
[-373.09811401 -153.08514404]
[-386.90823364 -151.34484863]
[-400.05816650 -155.70268250]
[-410.00033569 -165.25440979]
[-414.83465576 -178.09544373]
[-413.67126465 -191.70051575]
[-426.51446533 -199.44985962]
[-439.35766602 -207.19920349]
[-452.20086670 -214.94854736]
[-462.58544922 -211.73205566]
[-472.81594849 -214.69818115]
[-479.58447266 -222.63664246]
[-480.84152222 -232.77177429]
[-493.45495605 -240.88967896]
[-506.06842041 -249.00759888]
[-518.68188477 -257.12551880]
[-534.47381592 -258.08779907]
[-540.98876953 -271.48202515]
[-556.78070068 -272.44430542]
[-563.29565430 -285.83850098]
[-575.90911865 -293.95642090]
[-588.52252197 -302.07434082]
[-601.19445801 -310.10073853]
[-613.92413330 -318.03518677]
[-626.65374756 -325.96966553]
[-639.44055176 -333.81176758]
[-652.28375244 -341.56109619]
[-668.09686279 -342.06582642]
[-674.99688721 -355.26580811]
[-687.84008789 -363.01513672]
[-700.68328857 -370.76449585]
[-715.41870117 -365.52990723]
[-730.05328369 -371.04013062]
[-737.67706299 -384.69345093]
[-734.69024658 -400.04312134]
[-722.50311279 -409.84155273]
[-706.87017822 -409.46218872]
[-695.17266846 -399.08416748]
[-692.93395996 -383.60766602]
[-680.09075928 -375.85833740]
[-667.24755859 -368.10897827]
[-652.35302734 -368.15856934]
[-644.53442383 -354.40429688]
[-631.69122314 -346.65496826]
[-624.34350586 -345.89111328]
[-618.71929932 -338.69931030]
[-605.98962402 -330.76486206]
[-593.26000977 -322.83041382]
[-585.92413330 -321.96026611]
[-580.40466309 -314.68780518]
[-567.79119873 -306.56988525]
[-555.17773438 -298.45196533]
[-540.28802490 -298.07034302]
[-532.87084961 -284.09548950]
[-517.98114014 -283.71383667]
[-510.56399536 -269.73898315]
[-497.95053101 -261.62106323]
[-485.33706665 -253.50314331]
[-472.72360229 -245.38523865]
[-453.39074707 -245.86300659]
[-444.45150757 -227.79173279]
[-431.60830688 -220.04238892]
[-418.76513672 -212.29306030]
[-405.92193604 -204.54371643]
[-391.96743774 -212.69548035]
[-375.71249390 -212.69628906]
[-361.59497070 -204.45120239]
[-353.51702881 -190.12948608]
[-353.76654053 -173.59468079]
[-340.81250000 -166.03207397]
[-327.85845947 -158.46946716]
[-314.90441895 -150.90687561]
[-301.95037842 -143.34426880]
[-288.99633789 -135.78166199]
[-276.69091797 -144.21031189]
[-261.88534546 -146.46963501]
[-247.50816345 -142.05857849]
[-236.42671204 -131.80082703]
[-230.87530518 -117.69164276]
[-232.00488281 -102.50989532]
[-219.05085754 -94.94729614]
[-204.15859985 -95.21249390]
[-196.14167786 -81.57286072]
[-183.18765259 -74.01026154]
[-170.23361206 -66.44766235]
[-157.27957153 -58.88505936]
[-144.32554626 -51.32246017]
[-131.37150574 -43.75985718]
[-118.41746521 -36.19725418]
[-104.12207794 -40.21938324]
[-90.87711334 -32.73436356]
[-86.75526428 -17.71277618]
[-73.80122375 -10.15017509]
[-58.90898132 -10.41537380]
[-50.89205933 3.22425747]
[-37.93802261 10.78685856]
[-24.98398781 18.34946060]
[-12.02995110 25.91206169]
[0.92408556 33.47466278]
[13.87812233 41.03726578]
[26.83215904 48.59986496]
[39.78619385 56.16246796]
[54.08158112 52.14033890]
[67.32654572 59.62535858]
[71.44840240 74.64694977]
[83.68257141 63.85703659]
[99.85670471 58.87229156]
[117.25807953 61.05209351]
[132.75048828 70.50774384]
[143.33886719 85.99742889]
[146.74273682 105.07186127]
[161.60108948 107.12838745]
[169.49894714 98.24959564]
[180.58787537 94.32390594]
[192.07643127 96.21689606]
[201.13130188 103.34454346]
[205.57603455 113.84649658]
[220.36862183 116.33232117]
[235.16120911 118.81815338]
[249.95379639 121.30397797]
[261.86593628 109.29277039]
[278.42596436 106.77518463]
[293.07577515 114.54779053]
[300.13302612 129.37142944]
[314.96005249 131.64283752]
[329.78707886 133.91426086]
[344.61410522 136.18568420]
[359.44113159 138.45709229]
[376.01321411 134.87896729]
[384.03909302 149.81286621]
[371.91061401 161.65922546]
[357.16970825 153.28411865]
[342.34268188 151.01271057]
[327.51565552 148.74128723]
[312.68862915 146.46986389]
[297.86163330 144.19845581]
[289.39208984 154.51556396]
[276.83023071 159.34019470]
[263.41790771 157.31274414]
[252.67324829 148.85688782]
[247.46797180 136.09657288]
[232.67538452 133.61073303]
[217.88279724 131.12490845]
[203.09019470 128.63908386]
[188.84144592 140.13723755]
[170.39733887 137.51940918]
[159.54455566 121.98674774]
[144.68620300 119.93021393]
[139.67849731 125.51348114]
[151.73197937 134.44172668]
[163.78546143 143.36997986]
[175.83894348 152.29823303]
[187.89241028 161.22647095]
[202.67773438 163.75515747]
[212.23242188 175.31837463]
[211.92851257 190.31529236]
[201.91322327 201.48193359]
[187.03758240 203.40954590]
[174.50688171 195.16447449]
[170.39056396 180.73986816]
[160.20869446 169.72489929]
[150.02680969 158.70994568]
[139.84494019 147.69497681]
[129.66307068 136.68000793]
[124.65536499 142.26327515]
[128.30993652 156.81126404]
[131.96450806 171.35925293]
[135.61909485 185.90724182]
[147.41409302 197.30065918]
[143.18261719 213.14448547]
[127.27764130 217.13993835]
[116.06084442 205.17684937]
[121.07109833 189.56181335]
[117.41652679 175.01382446]
[113.76194763 160.46583557]
[110.10736847 145.91784668]
[90.70115662 144.28460693]
[74.36050415 135.12037659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 143]
[5 140]
[6 139]
[7 138]
[8 137]
[9 136]
[10 135]
[11 134]
[12 133]
[14 131]
[15 130]
[18 127]
[19 126]
[20 125]
[21 124]
[22 123]
[23 122]
[24 121]
[26 119]
[27 118]
[33 112]
[34 111]
[35 110]
[36 109]
[37 108]
[38 107]
[44 102]
[45 101]
[46 100]
[47 99]
[51 97]
[52 96]
[53 95]
[54 94]
[56 92]
[58 90]
[59 89]
[60 88]
[61 86]
[62 85]
[63 84]
[64 82]
[65 81]
[67 79]
[68 78]
[69 77]
[149 186]
[150 185]
[155 182]
[156 181]
[157 180]
[158 179]
[162 174]
[163 173]
[164 172]
[165 171]
[166 170]
[203 214]
[204 213]
[205 212]
[206 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
