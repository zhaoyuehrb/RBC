%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAGAAGGCUACAAGUAUUCACAGUGUAUCAUAGGCAGUGGGGGAGGGGAGAGAAAGCAAGAAAGACUGCUCUCGGCACUUGUGCUUUUGUUAGUUCUACAGAAGAGGCAGAAAAACAAGAGAUAACAAAGGCUCCGUUUCCUUUCUGUGAGAGAAGGCUUUUGUCUUUCCUCCUGCUACG\
) } def
/len { sequence length } bind def

/coor [
[-21.54290009 337.40673828]
[-28.24930573 350.82406616]
[-34.95571136 364.24136353]
[-33.41402817 382.57934570]
[-48.40002441 391.69061279]
[-54.87511826 405.22106934]
[-61.35021210 418.75152588]
[-60.32809067 434.53967285]
[-72.80139160 442.68008423]
[-79.27648163 456.21051025]
[-85.75157166 469.74096680]
[-87.13491821 486.63839722]
[-103.75492096 489.98678589]
[-111.57333374 474.94320679]
[-99.28202820 463.26586914]
[-92.80693817 449.73544312]
[-86.33184052 436.20498657]
[-87.81710052 421.38461304]
[-74.88066101 412.27642822]
[-68.40557098 398.74597168]
[-61.93047714 385.21551514]
[-65.65727997 373.69097900]
[-60.35328293 362.35739136]
[-48.37302017 357.53494263]
[-41.66661072 344.11764526]
[-34.96020508 330.70034790]
[-42.52098465 322.56997681]
[-47.24835968 312.49465942]
[-48.67574310 301.43045044]
[-46.65056610 290.43280029]
[-41.35039139 280.55584717]
[-33.26747513 272.75134277]
[-23.16308212 267.77691650]
[-11.99581528 266.12268066]
[-0.83066964 267.96282959]
[6.78055668 255.03730774]
[14.39178276 242.11178589]
[22.00300980 229.18624878]
[29.61423683 216.26072693]
[30.30066109 208.88316345]
[37.46868896 203.18025208]
[45.30067825 190.38728333]
[53.13266754 177.59431458]
[60.96465683 164.80134583]
[68.79664612 152.00839233]
[76.62863159 139.21542358]
[84.46062469 126.42245483]
[92.29261017 113.62949371]
[77.24610901 113.32501984]
[62.92110062 100.12660980]
[50.33403397 91.96782684]
[37.74696732 83.80904388]
[25.15990067 75.65026093]
[12.57283401 67.49147034]
[-0.19756460 69.41492462]
[-10.51885319 62.34009933]
[-13.15518570 50.51834869]
[-25.60034180 42.14469147]
[-38.11691284 33.87816620]
[-53.51874924 37.42202759]
[-66.87087250 28.96646881]
[-70.25169373 13.52802467]
[-61.65544128 0.26604927]
[-46.18211746 -2.95136237]
[-33.01176834 5.78462315]
[-29.95812798 21.29109955]
[-22.61681366 22.29342651]
[-17.22668457 29.69953537]
[-4.78152990 38.07319260]
[12.75512505 38.32027054]
[20.73161888 54.90440750]
[33.31868362 63.06319046]
[45.90575027 71.22197723]
[58.49281693 79.38076019]
[71.07987976 87.53954315]
[78.14214325 85.01476288]
[73.09280396 70.89017487]
[87.21747589 65.84104919]
[92.26665497 79.96520233]
[99.32891846 77.44042969]
[103.89064026 63.15089417]
[108.45236206 48.86136627]
[113.01408386 34.57183456]
[117.57580566 20.28230286]
[110.58301544 6.36329985]
[115.41281128 -8.06333351]
[128.72555542 -14.64410973]
[133.28727722 -28.93364143]
[137.84899902 -43.22317123]
[142.41072083 -57.51270294]
[146.97244263 -71.80223083]
[151.53416443 -86.09176636]
[156.09588623 -100.38129425]
[149.10308838 -114.30030060]
[153.93289185 -128.72692871]
[167.24562073 -135.30770874]
[171.80734253 -149.59724426]
[176.36907959 -163.88676453]
[172.35015869 -179.78584290]
[184.29669189 -191.02026367]
[199.91909790 -186.03305054]
[203.14639282 -169.95458984]
[190.65859985 -159.32504272]
[186.09687805 -145.03552246]
[181.53515625 -130.74598694]
[188.57237244 -117.66878510]
[184.14970398 -103.11218262]
[170.38542175 -95.81957245]
[165.82368469 -81.53004456]
[161.26196289 -67.24050903]
[156.70024109 -52.95098114]
[152.13851929 -38.66144943]
[147.57679749 -24.37191772]
[143.01507568 -10.08238697]
[150.05229187 2.99481297]
[145.62962341 17.55141258]
[131.86534119 24.84402657]
[127.30361176 39.13355637]
[122.74188995 53.42308807]
[118.18016815 67.71261597]
[113.61844635 82.00215149]
[122.00298309 69.56432343]
[136.84097290 67.36565399]
[148.47206116 76.83759308]
[149.32379150 91.81339264]
[138.84162903 102.54298401]
[123.85043335 102.04102325]
[138.10028076 106.72522736]
[152.35012817 111.40943909]
[166.59997559 116.09364319]
[180.84983826 120.77785492]
[195.09968567 125.46205902]
[209.34953308 130.14627075]
[223.59938049 134.83047485]
[237.84922791 139.51469421]
[250.41938782 130.60978699]
[265.64477539 130.81173706]
[277.68936157 139.83351135]
[282.05966187 154.04753113]
[296.30950928 158.73173523]
[310.55935669 163.41595459]
[324.80920410 168.10015869]
[339.09872437 172.66188049]
[353.90502930 166.48503113]
[367.89590454 174.33581543]
[370.33877563 190.19178772]
[359.35964966 201.88960266]
[343.38082886 200.45570374]
[334.65982056 186.99003601]
[327.32186890 188.01649475]
[320.12500000 182.35000610]
[305.87515259 177.66580200]
[291.62530518 172.98159790]
[277.37545776 168.29737854]
[265.42395020 177.14610291]
[250.37568665 177.26193237]
[238.00001526 168.39085388]
[233.16502380 153.76454163]
[218.91517639 149.08032227]
[204.66531372 144.39611816]
[190.41546631 139.71191406]
[176.16561890 135.02770996]
[161.91577148 130.34349060]
[147.66592407 125.65928650]
[133.41607666 120.97507477]
[119.16622925 116.29087067]
[105.08557892 121.46147919]
[97.25358582 134.25444031]
[89.42160034 147.04740906]
[81.58960724 159.84037781]
[73.75762177 172.63334656]
[65.92562866 185.42630005]
[58.09364319 198.21926880]
[50.26165390 211.01223755]
[42.53976059 223.87194824]
[34.92853546 236.79748535]
[27.31731033 249.72300720]
[19.70608330 262.64852905]
[12.09485722 275.57406616]
[22.27818489 291.84994507]
[22.80988312 310.96017456]
[13.62587261 327.63439941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 26]
[2 25]
[3 24]
[5 21]
[6 20]
[7 19]
[9 17]
[10 16]
[11 15]
[35 179]
[36 178]
[37 177]
[38 176]
[39 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
[47 168]
[48 167]
[50 75]
[51 74]
[52 73]
[53 72]
[54 71]
[57 69]
[58 68]
[59 66]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[87 114]
[88 113]
[89 112]
[90 111]
[91 110]
[92 109]
[93 108]
[96 105]
[97 104]
[98 103]
[127 166]
[128 165]
[129 164]
[130 163]
[131 162]
[132 161]
[133 160]
[134 159]
[135 158]
[139 154]
[140 153]
[141 152]
[142 151]
[143 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
