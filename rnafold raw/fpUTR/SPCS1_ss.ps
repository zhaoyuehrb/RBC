%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGACGCGGGGGCGCCGGCGGCCGUUGGGCCGCGCAAGUACUGUCAAGGACAGUUUUCGGGACGGGGGACGCGGCUCCAGGCACCCAACAGCACUGACGGCGAACACUUCACGGGCGCGCGAUGCCUCGACAAGGCGGCCGCCACCACCACCUCAGCUGCCCUCGCGGGCAGCACGGCGCGGCAAAAGCGCACGUCGCCUAGCG\
) } def
/len { sequence length } bind def

/coor [
[236.14166260 408.55670166]
[224.20207214 418.91149902]
[208.44369507 417.70755005]
[198.21571350 405.65914917]
[199.58621216 389.91439819]
[211.74206543 379.81436157]
[212.88475037 364.85794067]
[214.02742004 349.90155029]
[206.38990784 340.51779175]
[207.22201538 328.04562378]
[216.62185669 319.20977783]
[217.99247742 304.27252197]
[219.36309814 289.33526611]
[220.73373413 274.39804077]
[222.10435486 259.46078491]
[192.42689514 240.21569824]
[183.93618774 208.69705200]
[197.50572205 182.03538513]
[188.17895508 170.28756714]
[178.85217285 158.53974915]
[169.52540588 146.79193115]
[160.19862366 135.04411316]
[150.87185669 123.29628754]
[141.54507446 111.54846954]
[122.97599792 133.92317200]
[95.77598572 138.59255981]
[73.35238647 125.19755554]
[65.52288055 101.83226013]
[50.53857422 101.14622498]
[35.55426788 100.46019745]
[20.56996536 99.77416229]
[5.58566141 99.08813477]
[-9.39864254 98.40209961]
[-24.38294601 97.71607208]
[-39.36724854 97.03003693]
[-54.35634995 96.45829010]
[-60.06251144 105.48106384]
[-68.93265533 111.27528381]
[-79.32811737 112.85065460]
[-89.36135101 109.98894501]
[-97.23868561 103.27152252]
[-101.58090210 93.96264648]
[-116.53731537 92.81996918]
[-131.49372864 91.67729187]
[-146.45014954 90.53461456]
[-161.40655518 89.39193726]
[-173.33726501 99.40673065]
[-188.48890686 98.03483582]
[-197.96296692 86.59901428]
[-212.91937256 85.45634460]
[-227.87579346 84.31366730]
[-240.93847656 93.62740326]
[-256.32452393 89.08323669]
[-262.23104858 74.16705322]
[-254.12709045 60.32128143]
[-238.22930908 58.16720581]
[-226.73310852 69.35725403]
[-211.77670288 70.49993134]
[-196.82028198 71.64260101]
[-185.71893311 61.77875137]
[-170.53472900 62.72452927]
[-160.26388550 74.43553162]
[-145.30746460 75.57820129]
[-130.35105896 76.72087860]
[-115.39463806 77.86355591]
[-100.43822479 79.00623322]
[-86.62995148 65.26880646]
[-66.86540985 66.12242889]
[-53.89890671 81.46526337]
[-47.11464691 78.52594757]
[-38.68121719 82.04573822]
[-23.69691467 82.73176575]
[-8.71261120 83.41780090]
[6.27169228 84.10382843]
[21.25599670 84.78986359]
[36.24029922 85.47589111]
[51.22460556 86.16191864]
[66.20890808 86.84795380]
[74.42321014 74.29704285]
[67.79742432 60.83974075]
[61.17164612 47.38243484]
[54.44344330 33.97604752]
[47.61321259 20.62134933]
[32.26320648 18.35044861]
[21.20318222 7.46672440]
[18.68594170 -7.84481096]
[25.67941666 -21.69655991]
[39.49447250 -28.76224136]
[54.81893921 -26.32495689]
[65.76024628 -15.32189274]
[68.11123657 0.01604944]
[60.96791077 13.79111671]
[67.79814148 27.14581490]
[73.64498901 31.67131233]
[74.62895203 40.75665665]
[81.25473022 54.21395874]
[87.88050842 67.67126465]
[95.07603455 61.49048233]
[104.49019623 57.11412430]
[107.89170074 42.50488663]
[111.18170166 27.87013817]
[114.36002350 13.21072865]
[117.53834534 -1.44868147]
[109.25013733 -14.63744068]
[112.68222809 -29.45889091]
[125.30677795 -37.27915192]
[115.58712006 -49.52914810]
[116.06726074 -65.15935516]
[126.52046967 -76.78967285]
[142.01107788 -78.92861938]
[155.22488403 -70.56624603]
[159.92274475 -55.65101624]
[153.88645935 -41.22543716]
[139.96618652 -34.10083389]
[148.21833801 -21.75427818]
[145.20390320 -6.84227514]
[132.19775391 1.72963679]
[129.01943970 16.38904572]
[125.84111786 31.04845619]
[127.49671173 38.25434113]
[122.50093842 45.90638733]
[119.09943390 60.51562500]
[125.52687836 64.38059235]
[138.38177490 72.11051941]
[144.80921936 75.97547913]
[156.11817932 66.12117767]
[167.42713928 56.26686859]
[178.73609924 46.41256332]
[181.26628113 30.57028580]
[195.30020142 22.79669189]
[210.07223511 29.05501747]
[214.25053406 44.54441071]
[204.62988281 57.38273621]
[188.59040833 57.72152328]
[177.28144836 67.57582855]
[165.97248840 77.43013763]
[154.66351318 87.28444672]
[153.29289246 102.22169495]
[162.61967468 113.96951294]
[171.94644165 125.71733093]
[181.27322388 137.46514893]
[190.59999084 149.21296692]
[199.92677307 160.96078491]
[209.25354004 172.70861816]
[215.58010864 169.12078857]
[222.59962463 166.68060303]
[230.10061646 165.52124023]
[237.84623718 165.73631287]
[245.58175659 167.37513733]
[253.04287720 170.43936157]
[259.96478271 174.88121033]
[266.09140015 180.60337830]
[271.18469238 187.46075439]
[275.03366089 195.26388550]
[277.46249390 203.78401184]
[278.33801270 212.75982666]
[277.57559204 221.90536499]
[291.73922729 226.84413147]
[305.90286255 231.78288269]
[320.06649780 236.72164917]
[334.23013306 241.66041565]
[348.39376831 246.59916687]
[362.55743408 251.53793335]
[378.55740356 247.94171143]
[389.47134399 260.18173218]
[384.07189941 275.66650391]
[367.91357422 278.46661377]
[357.61865234 265.70156860]
[343.45501709 260.76281738]
[329.29138184 255.82405090]
[315.12774658 250.88528442]
[300.96411133 245.94653320]
[286.80047607 241.00776672]
[272.63684082 236.06900024]
[263.67266846 248.09579468]
[272.45239258 260.25787354]
[281.23211670 272.41998291]
[290.10430908 284.51477051]
[299.06848145 296.54156494]
[308.03265381 308.56832886]
[316.99682617 320.59512329]
[332.61782837 321.31484985]
[344.08651733 331.94515991]
[345.98770142 347.46676636]
[337.42370605 360.55078125]
[322.43817139 365.01940918]
[308.10684204 358.76263428]
[301.19653320 344.73477173]
[304.97003174 329.55929565]
[296.00585938 317.53250122]
[287.04168701 305.50573730]
[278.07751465 293.47894287]
[271.55712891 289.99322510]
[269.07000732 281.19970703]
[260.29028320 269.03759766]
[251.51055908 256.87551880]
[237.04159546 260.83142090]
[235.67097473 275.76864624]
[234.30035400 290.70590210]
[232.92971802 305.64315796]
[231.55909729 320.58041382]
[239.65719604 337.11627197]
[228.98384094 351.04421997]
[227.84115601 366.00064087]
[226.69848633 380.95703125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 205]
[7 204]
[8 203]
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[18 144]
[19 143]
[20 142]
[21 141]
[22 140]
[23 139]
[24 138]
[28 78]
[29 77]
[30 76]
[31 75]
[32 74]
[33 73]
[34 72]
[35 71]
[36 69]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[49 59]
[50 58]
[51 57]
[79 97]
[80 96]
[81 95]
[82 93]
[83 92]
[99 122]
[100 121]
[101 119]
[102 118]
[103 117]
[106 114]
[125 137]
[126 136]
[127 135]
[128 134]
[157 174]
[158 173]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
[175 196]
[176 195]
[177 194]
[178 192]
[179 191]
[180 190]
[181 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
