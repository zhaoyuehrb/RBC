%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCGUCAGGGCGACGAAAAAGGGGAAGGGGUGCUGGGCCUGGCGGGCAAACUAAGGCUGCGGACCGUUGGGCGGUUCCGCGGGGCGUUGUCCGGAGAGCUGCGAGGCCGGGGUUCCCAGGGUUCACGCCACACUCUAGGAAGUGCCUGAGCUAGUGAGCUGGCCAACGAGCUCCGCGGGCUGGGACC\
) } def
/len { sequence length } bind def

/coor [
[-235.38194275 453.64141846]
[-246.74722290 449.31750488]
[-251.90800476 464.27334595]
[-266.55850220 466.95889282]
[-277.76080322 476.93426514]
[-288.96313477 486.90963745]
[-300.16546631 496.88500977]
[-311.36776733 506.86038208]
[-322.57009888 516.83575439]
[-333.77243042 526.81109619]
[-344.97476196 536.78649902]
[-350.13552856 551.74230957]
[-364.78601074 554.42791748]
[-357.73880005 567.75457764]
[-354.08633423 582.38067627]
[-354.04095459 597.45587158]
[-357.60528564 612.10369873]
[-364.57214355 625.47253418]
[-374.53646851 636.78515625]
[-386.91894531 645.38391113]
[-400.99966431 650.76879883]
[-415.95999146 652.62677002]
[-430.93014526 650.84979248]
[-445.03979492 645.54125977]
[-457.46862793 637.00970459]
[-467.49404907 625.75115967]
[-474.53320312 612.42022705]
[-478.17678833 597.79187012]
[-478.21304321 582.71667480]
[-474.63980103 568.07104492]
[-467.66485596 554.70635986]
[-457.69366455 543.39978027]
[-445.30599976 534.80859375]
[-431.22201538 529.43225098]
[-416.26055908 527.58331299]
[-401.29147339 529.36932373]
[-387.18505859 534.68646240]
[-374.76138306 543.22558594]
[-370.40188599 528.98321533]
[-354.95010376 525.58416748]
[-343.74780273 515.60882568]
[-332.54547119 505.63342285]
[-321.34313965 495.65805054]
[-310.14083862 485.68267822]
[-298.93850708 475.70733643]
[-287.73617554 465.73196411]
[-276.53387451 455.75659180]
[-272.17434692 441.51425171]
[-256.72259521 438.11517334]
[-259.29348755 420.65774536]
[-250.80767822 405.00750732]
[-234.48948669 397.50613403]
[-216.77893066 401.32128906]
[-205.91255188 390.98098755]
[-202.02632141 376.60229492]
[-186.69540405 372.69418335]
[-175.82902527 362.35388184]
[-171.94279480 347.97521973]
[-156.61187744 344.06710815]
[-145.74549866 333.72680664]
[-134.87911987 323.38650513]
[-124.01274109 313.04620361]
[-113.14636230 302.70590210]
[-102.27998352 292.36560059]
[-91.41360474 282.02529907]
[-80.63308716 271.59552002]
[-70.02648163 260.98892212]
[-59.50793076 250.29498291]
[-48.98937988 239.60105896]
[-38.47082520 228.90713501]
[-27.95227623 218.21321106]
[-17.43372345 207.51928711]
[-14.02503395 193.01997375]
[1.16829610 188.60711670]
[11.68684769 177.91319275]
[22.20540047 167.21925354]
[32.72395325 156.52532959]
[43.24250412 145.83140564]
[53.76105499 135.13748169]
[56.21451569 128.15158081]
[64.54302979 124.35549927]
[75.23696136 113.83695221]
[72.43295288 93.31216431]
[84.33042145 76.35399628]
[104.58445740 72.00621033]
[110.83618927 58.37111282]
[117.08791351 44.73601532]
[123.33964539 31.10091782]
[129.59136963 17.46582031]
[123.20184326 1.19029284]
[130.41007996 -14.36830711]
[146.31837463 -19.79899406]
[152.34381104 -33.53559494]
[158.36923218 -47.27219391]
[164.28089905 -61.05813980]
[170.07838440 -74.89248657]
[170.51171875 -84.03505707]
[176.08779907 -88.90637207]
[182.11322021 -102.64297485]
[188.13865662 -116.37957001]
[194.16409302 -130.11616516]
[200.18951416 -143.85276794]
[198.64736938 -159.59863281]
[210.84547424 -168.14590454]
[216.87091064 -181.88249207]
[214.53004456 -198.11370850]
[227.58186340 -208.04257202]
[242.59976196 -201.45510864]
[244.13462830 -185.12794495]
[230.60749817 -175.85707092]
[224.58207703 -162.12046814]
[226.55520630 -147.35713196]
[213.92611694 -137.82734680]
[207.90069580 -124.09074402]
[201.87525940 -110.35414124]
[195.84982300 -96.61753845]
[189.82440186 -82.88094330]
[183.91273499 -69.09499359]
[178.11524963 -55.26065063]
[178.43022156 -47.86314392]
[172.10583496 -41.24676132]
[166.08041382 -27.51016235]
[160.05497742 -13.77356339]
[166.37522888 -2.53288388]
[165.04179382 10.48940372]
[156.31900024 20.50969505]
[143.22647095 23.71754837]
[136.97474670 37.35264587]
[130.72300720 50.98774338]
[124.47128296 64.62284088]
[118.21955872 78.25794220]
[121.44523621 81.43197632]
[124.12510681 85.07859039]
[126.19098663 89.10496521]
[127.59027100 93.40862274]
[142.58207703 93.90457153]
[157.57386780 94.40052795]
[166.27236938 91.55263519]
[172.80886841 95.03064728]
[187.79040527 95.77440643]
[202.77195740 96.51815796]
[215.58184814 86.85967255]
[231.08349609 90.99227142]
[237.38537598 105.74577332]
[229.65321350 119.80255890]
[213.81848145 122.37947083]
[202.02821350 111.49971008]
[187.04666138 110.75595093]
[172.06510925 110.01219940]
[157.07792664 109.39232635]
[142.08612061 108.89636993]
[127.09432220 108.40042114]
[120.76129150 119.32972717]
[110.31152344 126.42616272]
[97.81709290 128.28257751]
[85.75550842 124.53087616]
[75.06158447 135.04942322]
[64.45497894 145.65603638]
[53.93642807 156.34996033]
[43.41787720 167.04388428]
[32.89932632 177.73780823]
[22.38077545 188.43173218]
[11.86222267 199.12567139]
[7.70117569 214.38987732]
[-6.73979664 218.03782654]
[-17.25834846 228.73176575]
[-27.77690125 239.42568970]
[-38.29545212 250.11961365]
[-48.81400299 260.81353760]
[-59.33255386 271.50747681]
[-63.12862778 279.83599854]
[-70.11453247 282.28945923]
[-74.04779053 290.55404663]
[-81.07330322 292.89169312]
[-91.93968201 303.23199463]
[-102.80606079 313.57226562]
[-113.67243958 323.91256714]
[-124.53881836 334.25286865]
[-135.40519714 344.59317017]
[-146.27157593 354.93347168]
[-150.93502808 370.05178833]
[-165.48872375 373.22027588]
[-176.35510254 383.56057739]
[-181.01855469 398.67886353]
[-195.57225037 401.84735107]
[-206.43862915 412.18765259]
[-203.16744995 424.27404785]
[-205.33996582 436.53201294]
[-212.48226929 446.64001465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 49]
[4 47]
[5 46]
[6 45]
[7 44]
[8 43]
[9 42]
[10 41]
[11 40]
[13 38]
[53 186]
[54 185]
[56 183]
[57 182]
[59 180]
[60 179]
[61 178]
[62 177]
[63 176]
[64 175]
[65 174]
[66 172]
[67 170]
[68 169]
[69 168]
[70 167]
[71 166]
[72 165]
[74 163]
[75 162]
[76 161]
[77 160]
[78 159]
[79 158]
[81 157]
[82 156]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[92 123]
[93 122]
[94 121]
[95 119]
[96 118]
[98 117]
[99 116]
[100 115]
[101 114]
[102 113]
[104 111]
[105 110]
[135 152]
[136 151]
[137 150]
[139 149]
[140 148]
[141 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
