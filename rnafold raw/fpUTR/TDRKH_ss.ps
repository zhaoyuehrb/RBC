%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGAAGUGGCGGCUGAAGCGCCGCCGGCGGGGCUCACUGUGGUGGUGUGAGUGGGAGGCGGCGGCGCUGGUGGCUGCAGCUGGGGUGAGGCGCGAGGCGGCGCACUCGACGGCUGACUGGAGCAGCGGUAAAGGCGAGGAUGGAGACCGAAGGAUAUAAGUCAAAGAGUACAGCAGAAA\
) } def
/len { sequence length } bind def

/coor [
[35.54090881 176.93934631]
[20.71964073 179.24804688]
[6.10108042 175.88684082]
[-6.22342539 167.33660889]
[-14.49071789 154.82054138]
[-17.51806831 140.12921143]
[-14.87237930 125.36437225]
[-6.93214750 112.63831329]
[5.16829348 103.77086639]
[-9.81789398 104.41443634]
[-24.80408096 105.05800629]
[-39.79026794 105.70157623]
[-54.77645493 106.34514618]
[-68.23195648 114.66741943]
[-81.27947235 107.48329926]
[-96.26566315 108.12687683]
[-111.25184631 108.77044678]
[-117.06112671 112.01041412]
[-122.77288818 111.83736420]
[-126.76169586 109.16992188]
[-141.76113892 109.29867554]
[-156.76058960 109.42742920]
[-171.76004028 109.55618286]
[-186.75949097 109.68492889]
[-201.75892639 109.81368256]
[-216.75837708 109.94243622]
[-231.75782776 110.07118988]
[-246.75727844 110.19994354]
[-261.75671387 110.32869720]
[-275.48995972 118.18416595]
[-288.28320312 110.55638885]
[-297.90820312 124.45077515]
[-313.75805664 129.82582092]
[-329.53320312 124.75404358]
[-339.08749390 111.41916656]
[-354.08255005 111.80538177]
[-369.07757568 112.19160461]
[-384.07260132 112.57781982]
[-399.06762695 112.96404266]
[-414.06265259 113.35025787]
[-421.97830200 126.59208679]
[-435.80657959 133.43182373]
[-451.13494873 131.68693542]
[-463.07217407 121.91421509]
[-467.80914307 107.23208618]
[-463.83425903 92.32557678]
[-452.41595459 81.95129395]
[-437.19775391 79.41963959]
[-423.03567505 85.53844452]
[-414.44885254 98.35523224]
[-399.45382690 97.96900940]
[-384.45880127 97.58279419]
[-369.46377563 97.19657135]
[-354.46875000 96.81035614]
[-339.47372437 96.42414093]
[-332.95117188 84.75942230]
[-321.42080688 77.79037476]
[-307.84439087 77.43225098]
[-295.77160645 83.88584900]
[-288.41192627 95.55694580]
[-275.75155640 87.71068573]
[-261.88546753 95.32924652]
[-246.88603210 95.20049286]
[-231.88658142 95.07173920]
[-216.88713074 94.94299316]
[-201.88768005 94.81423950]
[-186.88822937 94.68548584]
[-171.88879395 94.55673218]
[-156.88934326 94.42797852]
[-141.88989258 94.29922485]
[-126.89044952 94.17047882]
[-111.89541626 93.78425598]
[-96.90923309 93.14068604]
[-81.92304230 92.49711609]
[-69.53945923 84.22087860]
[-55.42002869 91.35896301]
[-40.43384171 90.71539307]
[-25.44765282 90.07181549]
[-10.46146488 89.42824554]
[4.52472210 88.78467560]
[12.67341900 83.27959442]
[23.45583916 85.83623505]
[37.92792892 81.89179993]
[52.40002060 77.94736481]
[66.87211609 74.00293732]
[77.24868774 63.17118454]
[80.56856537 48.54318619]
[83.88844299 33.91518402]
[87.20832062 19.28718376]
[90.52819824 4.65918255]
[86.03711700 -10.51120663]
[96.39939880 -21.21038246]
[91.90830994 -36.38077164]
[102.27059174 -47.07994843]
[105.59046936 -61.70794678]
[108.91034698 -76.33594513]
[106.51956177 -93.12047577]
[121.98630524 -100.06425476]
[132.94033813 -87.12418365]
[123.53835297 -73.01606750]
[120.21846771 -58.38806915]
[116.89859009 -43.76006699]
[121.62713623 -29.63597107]
[111.02739716 -17.89050293]
[115.75594330 -3.76640654]
[105.15620422 7.97906160]
[101.83632660 22.60706329]
[98.51644135 37.23506165]
[95.19656372 51.86306381]
[91.87668610 66.49106598]
[97.59433746 71.34477234]
[109.02964020 81.05217743]
[114.74729156 85.90588379]
[128.64215088 80.25496674]
[138.51072693 67.88880920]
[153.21516418 70.26133728]
[167.11001587 64.61042023]
[178.05786133 49.81843567]
[195.32914734 52.86770630]
[209.12495422 46.97909546]
[222.92076111 41.09048843]
[236.71656799 35.20187759]
[242.37428284 20.44498825]
[256.84341431 14.08730507]
[271.53964233 19.90072632]
[277.74401855 34.43625259]
[271.77554321 49.07021713]
[257.17523193 55.12054443]
[242.60517883 48.99768448]
[228.80937195 54.88629532]
[215.01356506 60.77490234]
[201.21775818 66.66351318]
[196.40913391 77.78022003]
[184.94325256 82.79177856]
[172.76094055 78.50527954]
[158.86607361 84.15619659]
[149.99136353 96.11816406]
[134.29307556 94.14982605]
[120.39821625 99.80074310]
[120.72000122 107.29383850]
[121.68535614 129.77311707]
[136.01351929 134.21202087]
[149.06101990 125.59248352]
[164.59054565 127.42765808]
[175.26951599 138.85104370]
[176.05564880 154.46884155]
[166.57775879 166.90682983]
[151.31101990 170.29216003]
[137.46391296 163.02638245]
[131.57461548 148.54017639]
[117.24645233 144.10127258]
[113.33045959 150.49775696]
[126.12329865 158.32995605]
[118.29088593 171.12266541]
[105.49847412 163.29072571]
[101.58248138 169.68721008]
[112.05164337 180.42948914]
[122.52080536 191.17176819]
[138.44337463 195.09655762]
[142.74517822 210.92143250]
[131.00088501 222.36711121]
[115.29203033 217.65928650]
[111.77851868 201.64093018]
[101.30935669 190.89865112]
[90.84019470 180.15637207]
[75.89340973 178.89395142]
[62.09002304 173.02313232]
[50.81310272 163.13218689]
[43.19257736 150.21212769]
[39.99201202 135.55757141]
[41.53209686 120.63684082]
[47.65851974 106.94497681]
[57.75742340 95.85389709]
[70.81654358 88.47502899]
[56.34445572 92.41945648]
[41.87236404 96.36389160]
[27.40027046 100.30832672]
[41.62275696 105.07497406]
[53.05752182 114.78302002]
[60.06869507 128.04360962]
[61.65325546 142.95968628]
[57.58450699 157.39732361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 80]
[10 79]
[11 78]
[12 77]
[13 76]
[15 74]
[16 73]
[17 72]
[20 71]
[21 70]
[22 69]
[23 68]
[24 67]
[25 66]
[26 65]
[27 64]
[28 63]
[29 62]
[31 60]
[35 55]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[82 177]
[83 176]
[84 175]
[85 174]
[86 110]
[87 109]
[88 108]
[89 107]
[90 106]
[92 104]
[94 102]
[95 101]
[96 100]
[113 139]
[114 138]
[116 136]
[117 135]
[119 132]
[120 131]
[121 130]
[122 129]
[141 151]
[142 150]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
