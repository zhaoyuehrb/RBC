%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCACUCGCUCAGCGACCGCGGCGGAGACACGAGCGGCGGCGGCGGAGCCCAGAGGGCGGCGGGAAUGCGGAACCGGCGCGCGGGCUGAGGCCGCCCGGGAUGGCGCAGGGGCGGCGGCGGCGGGCGGCCUGCGCGGGGCCCUAGCGAGCCGGGCUGACGCUCCCGGCCCCGGCCCCGGCAUCGGCAUCGCGGGCGCAUCGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[-177.68859863 317.01092529]
[-182.45776367 317.31329346]
[-194.30589294 326.51226807]
[-200.46128845 341.08697510]
[-215.25929260 342.78067017]
[-227.10742188 351.97967529]
[-238.95556641 361.17868042]
[-250.59123230 370.64498901]
[-262.00839233 380.37371826]
[-273.42556763 390.10247803]
[-284.84274292 399.83120728]
[-290.32839966 414.67095947]
[-305.03396606 417.03640747]
[-316.45114136 426.76516724]
[-317.85903931 442.27822876]
[-329.57626343 451.98190308]
[-344.35693359 450.54406738]
[-355.77410889 460.27279663]
[-367.19128418 470.00155640]
[-378.60845947 479.73028564]
[-384.09411621 494.57000732]
[-398.79968262 496.93548584]
[-410.21685791 506.66421509]
[-407.35623169 521.75439453]
[-412.43908691 536.24780273]
[-424.09814453 546.24591064]
[-439.19717407 549.05920410]
[-453.67462158 543.93096924]
[-463.63613892 532.24060059]
[-466.40209961 517.13287354]
[-461.22848511 502.67153931]
[-449.50695801 492.74673462]
[-434.39059448 490.02813721]
[-419.94558716 495.24707031]
[-408.52841187 485.51834106]
[-403.85937500 471.37445068]
[-388.33718872 468.31311035]
[-376.92001343 458.58438110]
[-365.50283813 448.85565186]
[-354.08566284 439.12692261]
[-353.15985107 424.30535889]
[-341.71978760 414.27639771]
[-326.17987061 415.34799194]
[-314.76269531 405.61926270]
[-310.09368896 391.47537231]
[-294.57147217 388.41403198]
[-283.15429688 378.68530273]
[-271.73712158 368.95657349]
[-260.31997681 359.22784424]
[-259.67715454 355.75796509]
[-257.31988525 352.42761230]
[-253.33230591 350.04010010]
[-248.15457153 349.33053589]
[-236.30642700 340.13153076]
[-224.45828247 330.93255615]
[-219.15034485 317.01580811]
[-203.50489807 314.66415405]
[-191.65676880 305.46514893]
[-179.94960022 296.08740234]
[-168.38609314 286.53305054]
[-156.82258606 276.97869873]
[-151.93945312 262.90731812]
[-136.37258911 260.08187866]
[-135.22192383 245.27609253]
[-123.63099670 235.42190552]
[-108.10912323 236.72920227]
[-96.54562378 227.17486572]
[-84.98211670 217.62052917]
[-73.41861725 208.06617737]
[-88.35711670 206.70925903]
[-99.01886749 196.15809631]
[-100.53147888 181.23455811]
[-92.20368958 168.75865173]
[-77.84127808 164.43186951]
[-64.00783539 170.23150635]
[-57.02521515 183.50715637]
[-60.08411789 198.19132996]
[-47.57268906 189.91702271]
[-41.22498703 176.44276428]
[-25.44627762 175.28395081]
[-12.93484974 167.00964355]
[-0.42342192 158.73532104]
[12.08800602 150.46101379]
[24.59943390 142.18670654]
[37.04771423 133.81770325]
[49.43212891 125.35446930]
[61.81653976 116.89123535]
[74.20095825 108.42800903]
[86.58537292 99.96477509]
[94.85968018 87.45334625]
[97.79998779 72.74435425]
[100.74029541 58.03535461]
[103.68060303 43.32635880]
[106.62091064 28.61736107]
[109.56121826 13.90836430]
[112.50152588 -0.80063206]
[115.44183350 -15.50962925]
[118.38214874 -30.21862602]
[106.74494171 -42.49139404]
[104.73472595 -59.11700058]
[112.94695282 -73.52091217]
[127.97379303 -80.12579346]
[130.69053650 -94.87772369]
[125.58063507 -109.85101318]
[135.49508667 -120.96644592]
[138.21183777 -135.71836853]
[140.92857361 -150.47029114]
[134.92997742 -165.73295593]
[145.35877991 -178.38888550]
[161.48670959 -175.41873169]
[166.72274780 -159.87794495]
[155.68049622 -147.75355530]
[152.96376038 -133.00163269]
[150.24700928 -118.24970245]
[155.55123901 -104.33156586]
[145.44245911 -92.16098022]
[142.72572327 -77.40904999]
[152.78579712 -68.62933350]
[157.22880554 -55.92300415]
[154.79299927 -42.57444000]
[146.00953674 -32.09029007]
[133.09114075 -27.27831650]
[130.15083313 -12.56932068]
[127.21052551 2.13967633]
[124.27021790 16.84867287]
[121.32991028 31.55767059]
[118.38960266 46.26666641]
[115.44929504 60.97566223]
[112.50897980 75.68466187]
[109.56867218 90.39365387]
[118.94642639 102.10082245]
[133.94253540 102.44227600]
[148.93865967 102.78372192]
[157.59246826 99.84974670]
[164.15928650 103.24586487]
[179.14849854 103.81485748]
[194.13769531 104.38385010]
[209.12690735 104.95284271]
[224.11610413 105.52183533]
[239.10531616 106.09082794]
[254.09451294 106.65982056]
[261.63421631 98.81458282]
[272.03320312 96.46408844]
[281.80300903 100.14920044]
[287.80120850 108.42646790]
[296.57958984 105.88940430]
[302.98504639 109.58088684]
[311.80090332 107.17734528]
[318.14959717 110.96561432]
[333.07669067 112.44294739]
[348.00375366 113.92028809]
[362.93081665 115.39762115]
[377.85787964 116.87496185]
[392.78497314 118.35229492]
[402.99670410 106.66898346]
[418.13290405 103.25212860]
[432.37341309 109.41558075]
[440.24240112 122.78937531]
[438.71414185 138.23100281]
[428.37625122 149.80285645]
[413.20388794 153.05531311]
[399.03109741 146.73773193]
[391.30761719 133.27937317]
[376.38055420 131.80203247]
[361.45349121 130.32469177]
[346.52639771 128.84736633]
[331.59933472 127.37002563]
[316.67227173 125.89268494]
[301.73440552 124.52866364]
[286.77758789 123.39149475]
[270.08297729 133.14381409]
[253.52552795 121.64902496]
[238.53631592 121.08003235]
[223.54711914 120.51103973]
[208.55790710 119.94204712]
[193.56871033 119.37305450]
[178.57949829 118.80406189]
[163.59030151 118.23506927]
[148.59719849 117.77983093]
[133.60108948 117.43838501]
[118.60498047 117.09693909]
[95.04859924 112.34918976]
[82.66418457 120.81242371]
[70.27976990 129.27565002]
[57.89535904 137.73889160]
[45.51094437 146.20211792]
[40.18922043 153.63015747]
[32.87374115 154.69813538]
[20.36231422 162.97244263]
[7.85088634 171.24674988]
[-4.66054106 179.52105713]
[-17.17196846 187.79537964]
[-24.41457176 201.86148071]
[-39.29838181 202.42845154]
[-51.80981064 210.70275879]
[-63.86427689 219.62968445]
[-75.42778015 229.18402100]
[-86.99127960 238.73835754]
[-98.55477905 248.29270935]
[-100.19795227 263.78262329]
[-112.06109619 273.30737305]
[-126.81824493 271.64538574]
[-132.52847290 286.40017700]
[-147.26824951 288.54220581]
[-158.83175659 298.09655762]
[-170.39524841 307.65087891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 58]
[3 57]
[5 55]
[6 54]
[7 53]
[8 49]
[9 48]
[10 47]
[11 46]
[13 44]
[14 43]
[17 40]
[18 39]
[19 38]
[20 37]
[22 35]
[23 34]
[59 206]
[60 205]
[61 204]
[63 202]
[66 199]
[67 198]
[68 197]
[69 196]
[77 195]
[78 194]
[80 192]
[81 191]
[82 190]
[83 189]
[84 188]
[85 186]
[86 185]
[87 184]
[88 183]
[89 182]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
[102 117]
[103 116]
[105 114]
[106 113]
[107 112]
[131 181]
[132 180]
[133 179]
[135 178]
[136 177]
[137 176]
[138 175]
[139 174]
[140 173]
[141 172]
[145 170]
[147 169]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
