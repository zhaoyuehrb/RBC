%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGCUGGGCUGGGGGAAGAGGCGUGGCGGCGCUGUGCGCGUGCACAAAAGAGAGCUGAGGGGCGGGGGCGCUGCGGCACAGCUGGUUUGAGCAACUGAACUGGAAACAAG\
) } def
/len { sequence length } bind def

/coor [
[73.67591858 170.56468201]
[70.36443329 155.93478394]
[73.94013977 141.36720276]
[83.64878082 129.93354797]
[90.10914612 116.39605713]
[77.94942474 125.17906189]
[65.78970337 133.96206665]
[53.62998199 142.74507141]
[46.97335052 157.09776306]
[32.12556458 158.27778625]
[19.96584320 167.06079102]
[7.80612373 175.84381104]
[8.74668694 191.24246216]
[1.19286013 204.69398499]
[-12.44495869 211.90602112]
[-27.81499100 210.57723999]
[-40.01271439 201.13165283]
[-45.14588165 186.58331299]
[-41.57651520 171.57453918]
[-30.44359016 160.89459229]
[-15.29957962 157.95138550]
[-0.97688299 163.68408203]
[11.18283749 154.90107727]
[23.34255791 146.11807251]
[29.12944412 132.39360046]
[44.84697723 130.58535767]
[57.00669861 121.80235291]
[69.16641998 113.01934052]
[81.32613373 104.23633575]
[87.40177917 90.52186584]
[78.18076324 77.66561127]
[84.45782471 64.15828705]
[82.79315948 49.25094604]
[81.12848663 34.34360123]
[71.90747070 21.48734283]
[78.18453217 7.98002005]
[76.51986694 -6.92732334]
[74.85520172 -21.83466721]
[73.19053650 -36.74200821]
[63.96951675 -49.59827042]
[70.24658203 -63.10559082]
[61.02556229 -75.96185303]
[67.30261993 -89.46916962]
[65.63795471 -104.37651825]
[63.97328949 -119.28385925]
[54.75227356 -132.14012146]
[61.02933502 -145.64744568]
[47.70422745 -153.37710571]
[41.55748367 -167.30804443]
[44.75459290 -182.01322937]
[55.86467743 -191.89776611]
[54.20001221 -206.80509949]
[44.04459381 -219.68141174]
[50.36861038 -234.81214905]
[66.66645813 -236.63208008]
[76.17230988 -223.26904297]
[69.10735321 -208.46977234]
[70.77201843 -193.56242371]
[83.78881073 -186.37207031]
[90.15090942 -172.73434448]
[87.22851562 -157.79067993]
[75.93667603 -147.31210327]
[85.03862762 -135.52212524]
[78.88063812 -120.94852448]
[80.54530334 -106.04118347]
[82.20996857 -91.13384247]
[91.31192017 -79.34384918]
[85.15392303 -64.77025604]
[94.25587463 -52.98027039]
[88.09787750 -38.40667725]
[89.76254272 -23.49933243]
[91.42720795 -8.59198952]
[93.09188080 6.31535387]
[102.19382477 18.10533905]
[96.03583527 32.67893600]
[97.70050049 47.58627701]
[99.36516571 62.49362183]
[108.46711731 74.28360748]
[102.30912018 88.85720062]
[106.36629486 88.43350220]
[110.79966736 89.55257416]
[115.02226257 92.36915588]
[118.39959717 96.81915283]
[120.32904816 102.60887146]
[133.17819214 110.34833527]
[146.02734375 118.08780670]
[158.87649536 125.82727814]
[171.72564697 133.56674194]
[184.57479858 141.30621338]
[197.42395020 149.04568481]
[211.66101074 142.87432861]
[226.79911804 146.28279114]
[237.01733398 157.96044922]
[238.38655090 173.41699219]
[230.38029480 186.70907593]
[216.07711792 192.72561646]
[200.97688293 189.15313721]
[190.88595581 177.36532593]
[189.68447876 161.89482117]
[176.83532715 154.15536499]
[163.98617554 146.41589355]
[151.13702393 138.67642212]
[138.28788757 130.93695068]
[125.43872833 123.19748688]
[112.58958435 115.45802307]
[120.15527344 128.41024780]
[130.78294373 138.99574280]
[135.55961609 153.21487427]
[133.47821045 168.06976318]
[124.97757721 180.42852783]
[111.84990692 187.68554688]
[96.86294556 188.31079102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 29]
[6 28]
[7 27]
[8 26]
[10 24]
[11 23]
[12 22]
[30 79]
[32 77]
[33 76]
[34 75]
[36 73]
[37 72]
[38 71]
[39 70]
[41 68]
[43 66]
[44 65]
[45 64]
[47 62]
[51 58]
[52 57]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
