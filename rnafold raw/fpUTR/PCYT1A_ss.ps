%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGGAACUUCCGGCUGGCUCUUCCAUCAGCUGCCUUCCCCGGGCGUCUCCCCGCAACCUCCUCAACUUCCCUAGUCAGUGACGCGGCGCCGGCCAGAAAUCCGACCGGACCGGGCUCGGGGGAGCGUGAGUUGCAGCAUGUGCCGAAGCGCCACCUCAGAAGAUAAAAAGAAAUGAGUCUCAUAUUUGGCAUUCUUUUAGUUAAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[372.09301758 449.08547974]
[368.15734863 463.55996704]
[372.00268555 478.90673828]
[361.19711304 489.15802002]
[357.26141357 503.63247681]
[353.32574463 518.10699463]
[349.39004517 532.58142090]
[351.06869507 549.45208740]
[335.32205200 555.73541260]
[324.92520142 542.34350586]
[334.91555786 528.64575195]
[338.85125732 514.17126465]
[342.78692627 499.69680786]
[346.72262573 485.22232056]
[342.59576416 470.91085815]
[353.68286133 459.62426758]
[357.61856079 445.14981079]
[355.08648682 430.36505127]
[346.55850220 418.02514648]
[338.03054810 405.68521118]
[324.42950439 399.61389160]
[322.94885254 383.86212158]
[314.42086792 371.52218628]
[305.89291382 359.18228149]
[297.36492920 346.84234619]
[288.65588379 334.62954712]
[279.76766968 322.54650879]
[270.87945557 310.46350098]
[256.16192627 308.48117065]
[246.97586060 296.35388184]
[249.15490723 280.93020630]
[240.26667786 268.84716797]
[231.37846375 256.76412964]
[222.49024963 244.68112183]
[213.60202026 232.59808350]
[204.01681519 221.06016541]
[193.76799011 210.10746765]
[183.51914978 199.15478516]
[173.27030945 188.20210266]
[163.02146912 177.24942017]
[152.77262878 166.29672241]
[142.52380371 155.34403992]
[132.27496338 144.39135742]
[122.02612305 133.43867493]
[111.77728271 122.48598480]
[101.52845001 111.53329468]
[109.19303894 124.42725372]
[107.98419189 139.37846375]
[98.34767151 150.87356567]
[83.83702087 154.67369080]
[69.80311584 149.37748718]
[61.42107010 136.93798828]
[61.78180313 121.94232178]
[70.75399017 109.91904449]
[57.99046707 102.03916168]
[45.22694397 94.15928650]
[30.03056717 97.58096313]
[17.19879150 89.40782166]
[14.03039265 74.89931488]
[-1.77679431 74.23342133]
[-8.54185009 60.96377945]
[-21.30537224 53.08390045]
[-34.12665939 45.29836273]
[-47.00501251 37.60758591]
[-59.67848587 39.99926758]
[-70.24618530 33.32970047]
[-73.33471680 21.63507271]
[-86.09824371 13.75519371]
[-98.86176300 5.87531567]
[-114.74208069 8.15458965]
[-126.32608795 -2.94452500]
[-124.72752380 -18.90773773]
[-111.17267609 -27.48943710]
[-96.05965424 -22.10647964]
[-90.98188782 -6.88820744]
[-78.21836090 0.99167132]
[-65.45484161 8.87154961]
[-47.91041565 8.44386768]
[-39.31423569 24.72923470]
[-26.43588257 32.42000961]
[-19.08257675 33.15053177]
[-13.42549419 40.32037735]
[-0.66197157 48.20025635]
[14.23228264 48.30253220]
[21.91027069 62.13579178]
[36.30053329 58.46755981]
[49.35681152 66.27705383]
[53.10682297 81.39575958]
[65.87034607 89.27564240]
[78.63386536 97.15551758]
[91.33893585 89.18172455]
[89.79300690 74.26160431]
[88.24708557 59.34148026]
[86.70116425 44.42135239]
[85.04525757 29.51303482]
[83.27944946 14.61733341]
[73.97138214 1.82395601]
[80.15662384 -11.72565937]
[66.55136871 -19.18734360]
[59.96082306 -33.23527145]
[62.91917801 -48.46772766]
[74.28888702 -59.02752304]
[89.69806671 -60.85420227]
[103.22157288 -53.24536514]
[109.65934753 -39.12677002]
[106.53591919 -23.92730141]
[95.05232239 -13.49146652]
[104.23408508 -1.76352870]
[98.17514801 12.85152626]
[99.94095612 27.74722862]
[103.84937286 34.01851654]
[101.62129211 42.87543106]
[103.16721344 57.79555511]
[104.71313477 72.71568298]
[106.25905609 87.63580322]
[112.48113251 101.28446198]
[122.72997284 112.23714447]
[132.97880554 123.18983459]
[143.22764587 134.14251709]
[153.47648621 145.09519958]
[163.72532654 156.04789734]
[173.97415161 167.00057983]
[184.22299194 177.95326233]
[194.47183228 188.90594482]
[204.72067261 199.85862732]
[214.96951294 210.81132507]
[214.45292664 195.82022095]
[222.75169373 183.32499695]
[236.76982117 177.98721313]
[251.27763367 181.79818726]
[260.86276245 193.33618164]
[261.94931030 208.29678345]
[254.13194275 221.09867859]
[240.32704163 226.96594238]
[225.68505859 223.70986938]
[234.57327271 235.79289246]
[243.46148682 247.87593079]
[252.34971619 259.95895386]
[261.23794556 272.04199219]
[276.61077881 274.55456543]
[285.45257568 286.93508911]
[282.96249390 301.57525635]
[291.85070801 313.65829468]
[300.73892212 325.74133301]
[306.62902832 328.73895264]
[309.66622925 333.54003906]
[309.70486450 338.31436157]
[318.23281860 350.65429688]
[326.76080322 362.99423218]
[335.28878784 375.33413696]
[349.49978638 382.28811646]
[350.37045288 397.15725708]
[358.89843750 409.49716187]
[367.42642212 421.83709717]
[361.48281860 408.06488037]
[362.51541138 393.10046387]
[370.29428101 380.27514648]
[383.08779907 372.44403076]
[398.04788208 371.35043335]
[411.84420776 377.23782349]
[421.40548706 388.79559326]
[424.60327148 403.45077515]
[420.72567749 417.94088745]
[410.63531494 429.04064941]
[421.95837402 438.87875366]
[433.28143311 448.71685791]
[448.77349854 451.92736816]
[453.30624390 466.11550903]
[464.62930298 475.95361328]
[475.95236206 485.79171753]
[487.27542114 495.62982178]
[498.59848022 505.46792603]
[509.92153931 515.30603027]
[521.24462891 525.14410400]
[530.47631836 523.23858643]
[539.41748047 525.75610352]
[546.09771729 532.01068115]
[549.10577393 540.50762939]
[547.88635254 549.29962158]
[558.76318359 559.62896729]
[569.64001465 569.95825195]
[584.87322998 567.00384521]
[598.91943359 573.59796143]
[606.37762451 587.20513916]
[604.37994385 602.59307861]
[593.69458008 613.84484863]
[578.43017578 616.63385010]
[564.45629883 609.88769531]
[557.14617920 596.20043945]
[559.31066895 580.83508301]
[548.43383789 570.50573730]
[537.55706787 560.17639160]
[517.14569092 557.11462402]
[511.40652466 536.46716309]
[500.08346558 526.62908936]
[488.76037598 516.79095459]
[477.43731689 506.95288086]
[466.11425781 497.11477661]
[454.79119873 487.27667236]
[443.46813965 477.43856812]
[428.78601074 474.93176270]
[423.44335938 460.03991699]
[412.12026978 450.20181274]
[400.79721069 440.36370850]
[393.62118530 442.54415894]
[398.84146118 456.60647583]
[404.06173706 470.66879272]
[411.31408691 483.79904175]
[401.85494995 495.44055176]
[387.51834106 491.02899170]
[386.24017334 476.08386230]
[382.75460815 461.49447632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[4 14]
[5 13]
[6 12]
[7 11]
[18 154]
[19 153]
[20 152]
[22 150]
[23 149]
[24 148]
[25 147]
[26 144]
[27 143]
[28 142]
[31 139]
[32 138]
[33 137]
[34 136]
[35 135]
[36 126]
[37 125]
[38 124]
[39 123]
[40 122]
[41 121]
[42 120]
[43 119]
[44 118]
[45 117]
[46 116]
[54 90]
[55 89]
[56 88]
[59 85]
[61 83]
[62 82]
[63 80]
[64 79]
[67 77]
[68 76]
[69 75]
[91 115]
[92 114]
[93 113]
[94 112]
[95 110]
[96 109]
[98 107]
[164 204]
[165 203]
[166 202]
[168 200]
[169 199]
[170 198]
[171 197]
[172 196]
[173 195]
[174 194]
[179 192]
[180 191]
[181 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
