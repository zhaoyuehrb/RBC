%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAUCAGCUGUCGGCGCGCACUCGCUCCCGGCCCGGCCCAGCCCAGCCCGGCGCGGAGGCCGCCGCCUGCCCUGCGGGGCCCGACGCCAGCGGUCCGGGUAGCAGCUCCAGGGCCGGCCCGCGCGUGCGCCCGGGAGCCGCGCGCCACCAUCCCCAGCGGGGACCGAGGAGCCCGGCCGAGCCCGAGAAGCCCGCGGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[-308.85397339 178.44296265]
[-322.92285156 183.64555359]
[-336.99169922 188.84814453]
[-339.67150879 203.90689087]
[-349.46435547 215.52572632]
[-363.66366577 220.64878845]
[-378.42205811 217.99441528]
[-389.79367065 208.37402344]
[-403.86254883 213.57661438]
[-414.12246704 225.62005615]
[-428.74328613 222.77737427]
[-439.00320435 234.82081604]
[-453.62402344 231.97813416]
[-467.69290161 237.18072510]
[-481.76177979 242.38331604]
[-495.83062744 247.58590698]
[-509.89950562 252.78849792]
[-516.86779785 258.70333862]
[-524.22528076 257.96105957]
[-538.37261963 262.94638062]
[-545.43115234 268.75320435]
[-552.77636719 267.89770508]
[-566.99871826 272.66458130]
[-581.22113037 277.43145752]
[-595.40643311 282.30767822]
[-609.55377197 287.29302979]
[-619.99792480 299.17703247]
[-634.57324219 296.10952759]
[-648.72052002 301.09484863]
[-659.16473389 312.97888184]
[-673.74005127 309.91137695]
[-687.88732910 314.89669800]
[-702.03466797 319.88201904]
[-708.91406250 333.85742188]
[-723.33245850 338.71170044]
[-736.61346436 332.06713867]
[-750.76080322 337.05245972]
[-764.90808105 342.03778076]
[-777.83734131 353.00460815]
[-791.95477295 343.61660767]
[-786.84173584 327.45202637]
[-769.89343262 327.89047241]
[-755.74609375 322.90515137]
[-741.59881592 317.91983032]
[-735.41748047 304.41696167]
[-721.14111328 299.15960693]
[-707.01995850 305.73471069]
[-692.87268066 300.74938965]
[-678.72534180 295.76406860]
[-669.29309082 284.23663330]
[-653.70587158 286.94754028]
[-639.55853271 281.96221924]
[-630.12628174 270.43478394]
[-614.53906250 273.14569092]
[-600.39178467 268.16036987]
[-595.12506104 262.96948242]
[-585.98803711 263.20904541]
[-571.76562500 258.44216919]
[-557.54321289 253.67529297]
[-543.35791016 248.79905701]
[-529.21063232 243.81373596]
[-515.10211182 238.71963501]
[-501.03323364 233.51704407]
[-486.96435547 228.31445312]
[-472.89550781 223.11186218]
[-458.82662964 217.90927124]
[-449.57299805 206.23794556]
[-433.94589233 208.70851135]
[-424.69226074 197.03718567]
[-409.06515503 199.50775146]
[-394.99627686 194.30516052]
[-392.61981201 179.60079956]
[-383.13919067 167.98297119]
[-369.02301025 162.63511658]
[-354.02685547 165.08711243]
[-342.19430542 174.77928162]
[-328.12542725 169.57669067]
[-314.05657959 164.37409973]
[-309.18032837 150.18881226]
[-317.07681274 137.43554688]
[-324.97329712 124.68229675]
[-340.19815063 119.62433624]
[-345.60076904 104.51833344]
[-337.03674316 90.95232391]
[-321.07562256 89.33299255]
[-309.96142578 100.90254211]
[-312.22003174 116.78581238]
[-304.32354736 129.53907776]
[-296.42706299 142.29232788]
[-275.66055298 142.46116638]
[-262.73184204 155.73095703]
[-248.03143311 152.74798584]
[-233.33103943 149.76499939]
[-218.63063049 146.78202820]
[-203.93023682 143.79905701]
[-189.22982788 140.81608582]
[-174.55282593 137.72001648]
[-159.90010071 134.51101685]
[-145.24737549 131.30201721]
[-130.59465027 128.09301758]
[-115.94192505 124.88402557]
[-112.93373871 115.05963898]
[-106.06312561 107.31180573]
[-96.52124786 103.08489990]
[-86.00494385 103.20397186]
[-76.41500092 107.71459961]
[-69.51263428 115.86253357]
[-54.72733688 113.33367157]
[-39.94204712 110.80481720]
[-36.49779510 107.48899841]
[-30.93224144 106.30516815]
[-24.66304970 108.43307495]
[-9.80689430 106.36073303]
[5.04926252 104.28838348]
[19.90541840 102.21604156]
[34.74517822 100.02936554]
[49.56766129 97.72849274]
[64.39014435 95.42761993]
[79.21262360 93.12673950]
[94.03510284 90.82586670]
[107.93708801 85.19248962]
[120.18003845 76.52588654]
[132.42298889 67.85927582]
[144.66595459 59.19266891]
[156.90890503 50.52606201]
[169.15185547 41.85945511]
[174.35180664 34.34262848]
[181.65074158 33.15536499]
[194.02569580 24.67831993]
[194.32115173 9.16405773]
[203.70605469 -3.19325185]
[218.57174683 -7.64197063]
[233.20204163 -2.47147560]
[241.97129822 10.33007240]
[241.50756836 25.84021759]
[231.98916626 38.09498978]
[217.07609558 42.38218307]
[202.50274658 37.05328369]
[190.12779236 45.53032684]
[177.81846619 54.10240936]
[165.57551575 62.76901627]
[153.33255005 71.43562317]
[141.08959961 80.10223389]
[128.84664917 88.76883698]
[116.60369873 97.43544769]
[120.03795624 112.03701782]
[134.86044312 114.33789062]
[149.68412781 108.80899048]
[161.07394409 118.40698242]
[173.74644470 109.34909058]
[188.74577332 111.89365387]
[197.30299377 124.03076935]
[212.12547302 126.33164215]
[226.94795227 128.63252258]
[241.77043152 130.93339539]
[256.59292603 133.23426819]
[273.17205811 129.68907166]
[281.16827393 144.63888550]
[269.01626587 156.46112061]
[254.29203796 148.05674744]
[239.46955872 145.75587463]
[224.64707947 143.45500183]
[209.82460022 141.15412903]
[195.00212097 138.85325623]
[183.16818237 147.82507324]
[168.10330200 145.70281982]
[158.77307129 133.22946167]
[145.00958252 138.92294312]
[132.55955505 129.16036987]
[117.73707581 126.85949707]
[110.63594818 125.84187317]
[104.64547729 123.24288177]
[100.07953644 119.45993805]
[97.13957977 114.94637299]
[95.90593719 110.18295288]
[96.33598328 105.64834595]
[81.51349640 107.94922638]
[66.69101715 110.25009918]
[51.86853409 112.55097198]
[37.04605484 114.85184479]
[29.04070663 119.26281738]
[21.97776413 117.07219696]
[7.12160778 119.14454651]
[-7.73454857 121.21688843]
[-22.59070587 123.28923035]
[-37.41318893 125.59011078]
[-52.19847870 128.11897278]
[-66.98377228 130.64782715]
[-77.69881439 147.63781738]
[-97.15261078 151.22373962]
[-112.73293304 139.53674316]
[-127.38565826 142.74574280]
[-142.03837585 145.95474243]
[-156.69110107 149.16374207]
[-171.34382629 152.37274170]
[-179.06245422 157.26815796]
[-186.24685669 155.51649475]
[-200.94725037 158.49946594]
[-215.64765930 161.48243713]
[-230.34806824 164.46540833]
[-245.04846191 167.44837952]
[-259.74887085 170.43135071]
[-269.04461670 188.27330017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 78]
[2 77]
[3 76]
[8 71]
[9 70]
[11 68]
[13 66]
[14 65]
[15 64]
[16 63]
[17 62]
[19 61]
[20 60]
[22 59]
[23 58]
[24 57]
[25 55]
[26 54]
[28 52]
[29 51]
[31 49]
[32 48]
[33 47]
[36 44]
[37 43]
[38 42]
[79 89]
[80 88]
[81 87]
[91 202]
[92 201]
[93 200]
[94 199]
[95 198]
[96 197]
[97 195]
[98 194]
[99 193]
[100 192]
[101 191]
[107 188]
[108 187]
[109 186]
[112 185]
[113 184]
[114 183]
[115 182]
[116 180]
[117 179]
[118 178]
[119 177]
[120 176]
[121 145]
[122 144]
[123 143]
[124 142]
[125 141]
[126 140]
[128 139]
[129 138]
[146 170]
[147 169]
[149 167]
[152 164]
[153 163]
[154 162]
[155 161]
[156 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
