%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGGUUUGGGGGAGGUGCCUGAAUAGGGUUUGAGGGUCUGUUUGAGUUGGGUGAAGAAGGCGGGAAGUUAAUCCUCUUCCAAUCAGCUCCCCAUCUCGCCCUCUGGCGGCUCCGGACCACAGGCCGAGUUACUCUGAUUACCGCCAUGCUCCAAGACCCGCACUGACAGUCCCCACGUGAGGGACCGCGGUGGGAGUCCUAA\
) } def
/len { sequence length } bind def

/coor [
[401.07330322 552.26647949]
[414.99884033 546.69165039]
[429.99884033 546.68762207]
[443.92886353 552.25598145]
[435.29910278 539.98706055]
[426.66931152 527.71807861]
[418.03952026 515.44915771]
[409.40975952 503.18023682]
[400.77996826 490.91128540]
[392.05642700 478.70883179]
[383.23965454 466.57357788]
[374.42288208 454.43832397]
[365.60610962 442.30307007]
[351.86560059 436.55435181]
[350.01367188 420.84191895]
[341.10415649 408.77456665]
[332.10244751 396.77584839]
[323.10073853 384.77713013]
[314.09902954 372.77841187]
[302.16934204 370.75823975]
[294.57208252 360.83142090]
[295.81494141 347.99014282]
[286.99816895 335.85488892]
[278.18136597 323.71963501]
[264.44085693 317.97094727]
[262.58892822 302.25848389]
[253.77215576 290.12322998]
[244.95538330 277.98797607]
[236.13859558 265.85272217]
[227.32182312 253.71746826]
[218.50505066 241.58221436]
[203.84841919 244.34785461]
[189.38497925 240.45964050]
[177.99737549 230.63703918]
[171.97924805 216.78776550]
[172.57341003 201.63739014]
[179.71549988 188.19299316]
[170.89872742 176.05773926]
[162.08193970 163.92248535]
[153.26516724 151.78723145]
[144.44839478 139.65197754]
[135.63160706 127.51671600]
[126.81483459 115.38146210]
[105.32607269 129.84844971]
[80.92142487 122.79650879]
[70.86663818 100.01542664]
[58.93724442 90.92205048]
[47.00785065 81.82866669]
[31.34212303 79.61607361]
[25.91076279 65.74705505]
[13.98136997 56.65367508]
[2.05197716 47.56029510]
[-9.87741566 38.46691132]
[-18.60396767 35.75137329]
[-21.91852379 29.14164162]
[-33.70716476 19.86651802]
[-42.39107895 17.01757050]
[-45.60395813 10.35782146]
[-61.11403656 11.79837036]
[-72.78916168 2.04408622]
[-74.06692505 -12.75128174]
[-85.71205139 -22.20596695]
[-101.22212982 -20.76541710]
[-112.89725494 -30.51970291]
[-114.17501831 -45.31507111]
[-125.82013702 -54.76975632]
[-137.46527100 -64.22444153]
[-149.11038208 -73.67912292]
[-160.75550842 -83.13381195]
[-175.71371460 -79.00687408]
[-190.22904968 -84.49182892]
[-198.72007751 -97.47959900]
[-197.92179871 -112.97612762]
[-188.14120483 -125.02268219]
[-173.13909912 -128.98710632]
[-158.68412781 -123.34501648]
[-150.33450317 -110.26589203]
[-151.30082703 -94.77893829]
[-139.65570068 -85.32424927]
[-128.01057434 -75.86956787]
[-116.36545563 -66.41487885]
[-104.72032928 -56.96019363]
[-89.97799683 -58.74884033]
[-78.03350067 -49.32633209]
[-76.25736237 -33.85109329]
[-64.61223602 -24.39640617]
[-49.86990738 -26.18505096]
[-37.92540741 -16.76254463]
[-36.14927292 -1.28730297]
[-24.43204308 8.07787609]
[-12.64340115 17.35299873]
[-0.78403467 26.53751945]
[11.14535809 35.63090134]
[23.07475090 44.72428131]
[35.00414276 53.81766129]
[49.81660080 55.37983704]
[56.10123062 69.89927673]
[68.03062439 78.99265289]
[79.96001434 88.08603668]
[93.60015106 81.84530640]
[94.51906586 66.87348175]
[95.43798065 51.90165329]
[87.64353943 37.47325516]
[96.47090912 23.65263748]
[112.83925629 24.65726471]
[119.91022491 39.45366669]
[110.40981293 52.82056808]
[109.49089813 67.79239655]
[108.57198334 82.76422119]
[123.20317078 86.07001495]
[128.81042480 72.15747833]
[134.31091309 58.20238495]
[131.23306274 42.09465408]
[143.81901550 31.58152771]
[159.12142944 37.47800446]
[161.39848328 53.71829605]
[148.30773926 63.59578323]
[148.83634949 70.97110748]
[142.72296143 77.76473236]
[137.11570740 91.67726898]
[138.95008850 106.56468201]
[147.76686096 118.69993591]
[156.58364868 130.83518982]
[165.40042114 142.97044373]
[174.21720886 155.10569763]
[183.03398132 167.24095154]
[191.85075378 179.37620544]
[206.84417725 176.73822021]
[221.43664551 180.85487366]
[232.74838257 190.85809326]
[238.57125854 204.72370911]
[237.79972839 219.68078613]
[230.64030457 232.76544189]
[239.45707703 244.90069580]
[248.27386475 257.03594971]
[257.09063721 269.17120361]
[265.90740967 281.30645752]
[274.72418213 293.44171143]
[289.09533691 300.05841064]
[290.31661987 314.90286255]
[299.13342285 327.03811646]
[307.95019531 339.17337036]
[324.94039917 346.26794434]
[326.09774780 363.77670288]
[335.09945679 375.77542114]
[344.10116577 387.77413940]
[353.10287476 399.77285767]
[360.75991821 404.76251221]
[362.14892578 412.02514648]
[376.52005005 418.64184570]
[377.74136353 433.48629761]
[386.55813599 445.62155151]
[395.37490845 457.75680542]
[404.19168091 469.89205933]
[411.77136230 474.99847412]
[413.04891968 482.28149414]
[421.67868042 494.55044556]
[430.30847168 506.81939697]
[438.93826294 519.08831787]
[447.56802368 531.35723877]
[456.19781494 543.62622070]
[466.33450317 548.68444824]
[468.95791626 558.39367676]
[479.84512329 568.71203613]
[490.73233032 579.03039551]
[501.61953735 589.34875488]
[512.50671387 599.66711426]
[520.89239502 603.30139160]
[523.48016357 610.22802734]
[538.75775146 614.33978271]
[542.45227051 628.76892090]
[553.18005371 639.25292969]
[563.90789795 649.73693848]
[574.63568115 660.22088623]
[585.36346436 670.70489502]
[596.17132568 681.10638428]
[612.23712158 684.39624023]
[617.16351318 700.03790283]
[605.88269043 711.94067383]
[589.99932861 707.85992432]
[585.85296631 691.99359131]
[578.83227539 689.67297363]
[574.87951660 681.43273926]
[564.15167236 670.94873047]
[553.42388916 660.46472168]
[542.69610596 649.98071289]
[531.96826172 639.49676514]
[517.45800781 636.13482666]
[512.99615479 620.95581055]
[502.18835449 610.55432129]
[491.30114746 600.23596191]
[480.41394043 589.91760254]
[469.52673340 579.59924316]
[458.63952637 569.28088379]
[462.12805176 583.86956787]
[459.94866943 598.71038818]
[452.41314697 611.68023682]
[440.59954834 620.92352295]
[426.19793701 625.11798096]
[411.26861572 623.66351318]
[397.94738770 616.76818848]
[388.14004517 605.41851807]
[383.24957275 591.23809814]
[383.97564697 576.25573730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 161]
[5 160]
[6 159]
[7 158]
[8 157]
[9 156]
[10 154]
[11 153]
[12 152]
[13 151]
[15 149]
[16 147]
[17 146]
[18 145]
[19 144]
[22 142]
[23 141]
[24 140]
[26 138]
[27 137]
[28 136]
[29 135]
[30 134]
[31 133]
[37 127]
[38 126]
[39 125]
[40 124]
[41 123]
[42 122]
[43 121]
[46 99]
[47 98]
[48 97]
[50 95]
[51 94]
[52 93]
[53 92]
[55 91]
[56 90]
[58 89]
[61 86]
[62 85]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[100 109]
[101 108]
[102 107]
[110 120]
[111 119]
[112 117]
[163 194]
[164 193]
[165 192]
[166 191]
[167 190]
[169 189]
[171 187]
[172 186]
[173 185]
[174 184]
[175 183]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
