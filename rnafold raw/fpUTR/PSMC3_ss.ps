%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCCAGGGGUUGGUCUUUGGAAUCGGAGAGGCAGAUUCGCUGCUCCGCAGCACGGCCGGAGCUGGUCGGGUCAAGAGUCGGGAUUUGUGGGGAGAGGUUUUCCACUGGUCAAGAGAAGGCUUUAAGAAAGACGGUAUUAAUCUCCCGUUGCGGCUCCCGCCUGGUCCCAUCUUCUGCCCGCUCCUCCAGGAA\
) } def
/len { sequence length } bind def

/coor [
[56.44729233 386.09475708]
[41.45989227 385.48004150]
[32.46304703 373.47756958]
[27.71302605 387.70559692]
[22.96300697 401.93365479]
[18.21298790 416.16171265]
[13.46296692 430.38973999]
[19.31576157 445.32708740]
[11.16201210 459.14361572]
[-4.74342251 461.24044800]
[-16.19925499 450.00906372]
[-14.41755009 434.06527710]
[-0.76507950 425.63973999]
[3.98494053 411.41168213]
[8.73496056 397.18362427]
[13.48498058 382.95559692]
[18.23500061 368.72753906]
[22.40826225 354.31976318]
[25.99799728 339.75564575]
[29.58773232 325.19152832]
[33.17746735 310.62738037]
[36.76720047 296.06326294]
[40.35693741 281.49914551]
[38.84501648 278.29986572]
[38.81554413 274.20669556]
[40.67287064 269.92803955]
[44.48798752 266.32656860]
[48.77717209 251.95286560]
[53.06635666 237.57917786]
[57.35554123 223.20549011]
[52.37471008 206.38410950]
[65.84620667 193.83924866]
[69.90327454 179.39833069]
[73.96034241 164.95741272]
[78.01741028 150.51649475]
[82.07447815 136.07556152]
[86.13154602 121.63464355]
[79.79396057 121.43141174]
[73.14228058 119.53655243]
[66.59938049 115.84497833]
[60.61251831 110.35226440]
[45.63636017 111.19763184]
[30.66020012 112.04299164]
[15.68404102 112.88835907]
[0.70788103 113.73372650]
[-14.76531982 120.66310883]
[-25.70731163 107.71285248]
[-16.29220009 93.61349487]
[-0.13748421 98.75756836]
[14.83867550 97.91220093]
[29.81483459 97.06683350]
[44.79099655 96.22146606]
[59.76715469 95.37610626]
[61.20810318 88.01583099]
[64.09000397 73.29527283]
[65.53095245 65.93499756]
[51.97919846 59.50461197]
[38.42744446 53.07422256]
[24.87568665 46.64383698]
[11.32392979 40.21344757]
[-4.96960115 42.07164383]
[-14.50679302 28.73095131]
[-7.47660017 13.91513538]
[8.88891697 12.86543369]
[17.75431824 26.66168976]
[31.30607414 33.09207916]
[44.85783005 39.52246857]
[58.40958786 45.95285416]
[71.96134186 52.38324356]
[86.65820312 49.38285828]
[96.60504150 38.15519714]
[106.55188751 26.92753601]
[109.91163635 11.46718025]
[124.14282990 7.07145929]
[127.50258636 -8.38889694]
[141.73377991 -12.78461838]
[151.68061829 -24.01227951]
[155.03521729 -32.52310944]
[161.87928772 -35.33903885]
[165.37055969 -43.79471970]
[172.25909424 -46.50002670]
[182.56248474 -57.40141296]
[192.86585999 -68.30280304]
[203.16925049 -79.20418549]
[213.47264099 -90.10557556]
[217.32872009 -105.44966888]
[231.69413757 -109.38463593]
[241.99752808 -120.28602600]
[252.30090332 -131.18740845]
[262.60430908 -142.08880615]
[266.36602783 -161.88426208]
[285.10186768 -166.63368225]
[295.04870605 -177.86134338]
[304.99554443 -189.08900452]
[314.94238281 -200.31666565]
[324.88922119 -211.54432678]
[334.83605957 -222.77198792]
[331.05853271 -246.05554199]
[345.52127075 -264.35791016]
[368.52673340 -266.02798462]
[376.94799805 -278.44097900]
[385.36923218 -290.85397339]
[393.79049683 -303.26696777]
[402.21176147 -315.67996216]
[395.63619995 -329.48971558]
[396.84786987 -344.63662720]
[405.42150879 -357.06076050]
[418.97210693 -363.48236084]
[433.81762695 -362.26727295]
[442.23886108 -374.68026733]
[450.66012573 -387.09326172]
[459.08139038 -399.50625610]
[454.63769531 -414.49917603]
[460.91827393 -428.82006836]
[474.95761108 -435.70709229]
[490.12677002 -431.90835571]
[499.26333618 -419.21752930]
[498.05331421 -403.62683105]
[487.06802368 -392.49771118]
[471.49438477 -391.08499146]
[463.07312012 -378.67199707]
[454.65188599 -366.25900269]
[446.23062134 -353.84600830]
[452.84689331 -340.50094604]
[451.88867188 -325.53640747]
[443.51336670 -312.97769165]
[429.88699341 -306.25323486]
[414.62475586 -307.25869751]
[406.20349121 -294.84570312]
[397.78222656 -282.43270874]
[389.36099243 -270.01971436]
[380.93972778 -257.60671997]
[384.92108154 -251.73100281]
[387.33459473 -245.03300476]
[388.02029419 -237.92446899]
[386.92486572 -230.84518433]
[384.10552979 -224.23585510]
[379.72708130 -218.51066589]
[374.05252075 -214.03126526]
[367.42694092 -211.08401489]
[360.25689697 -209.86158752]
[352.98519897 -210.45053101]
[346.06372070 -212.82514954]
[336.11688232 -201.59748840]
[326.17004395 -190.36982727]
[316.22320557 -179.14216614]
[306.27636719 -167.91450500]
[296.32952881 -156.68684387]
[297.86163330 -146.56761169]
[293.47232056 -137.07939148]
[284.39471436 -131.46398926]
[273.50567627 -131.78541565]
[263.20230103 -120.88402557]
[252.89891052 -109.98264313]
[242.59552002 -99.08125305]
[239.47640991 -84.51689911]
[224.37402344 -79.80219269]
[214.07063293 -68.90080261]
[203.76725769 -57.99941635]
[193.46386719 -47.09803009]
[183.16047668 -36.19664001]
[172.94523621 -25.21261215]
[162.90827942 -14.06543922]
[152.96144104 -2.83777809]
[150.31315613 11.81950092]
[135.37049866 17.01829910]
[132.72219849 31.67557716]
[117.77954865 36.87437439]
[107.83270264 48.10203552]
[97.88586426 59.32970047]
[120.74431610 68.49673462]
[132.55905151 87.95862579]
[130.47389221 108.76348877]
[117.51978302 122.73651123]
[100.57247162 125.69171143]
[96.51540375 140.13262939]
[92.45833588 154.57356262]
[88.40126801 169.01448059]
[84.34420013 183.45539856]
[80.28713226 197.89631653]
[85.91085815 209.51361084]
[82.22492981 221.46398926]
[71.72923279 227.49467468]
[67.44004822 241.86836243]
[63.15085983 256.24206543]
[58.86167526 270.61575317]
[54.92106247 285.08886719]
[51.33132935 299.65298462]
[47.74159241 314.21713257]
[44.15185928 328.78125000]
[40.56212616 343.34536743]
[36.97238922 357.90951538]
[50.99124527 352.57363892]
[63.98702621 360.06427002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[23 187]
[27 186]
[28 185]
[29 184]
[30 183]
[32 180]
[33 179]
[34 178]
[35 177]
[36 176]
[37 175]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
[56 69]
[57 68]
[58 67]
[59 66]
[60 65]
[70 170]
[71 169]
[72 168]
[74 166]
[76 164]
[77 163]
[79 162]
[81 161]
[82 160]
[83 159]
[84 158]
[85 157]
[87 155]
[88 154]
[89 153]
[90 152]
[92 148]
[93 147]
[94 146]
[95 145]
[96 144]
[97 143]
[100 132]
[101 131]
[102 130]
[103 129]
[104 128]
[109 123]
[110 122]
[111 121]
[112 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
