%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACCGGGUUUUAUUGGGACACGCCGGCAAGACGCCUCUUCAGUUGUCUGCUACUCAGAGGAAGGGGCGGUUGGUGCGGCCUCCAUUGUUCGUGUUUUAAGGCGCCAUGAGGGGUGACAGAGGCCGUGGUCGUGGUGGGCGCUUUGGUUCCAGAGGAGGCCCAGGAGGAGGGUUCAGGCCCUUUGUACCACAUAUCCCAUUUGACUUCUAUUUGUUGUUUACUUCUGGUUUAGUGUGAA\
) } def
/len { sequence length } bind def

/coor [
[461.73471069 387.59628296]
[458.24176025 377.16665649]
[458.44680786 366.68249512]
[461.98818970 357.35845947]
[449.96939087 348.38360596]
[437.89208984 339.48757935]
[425.75683594 330.67080688]
[413.62158203 321.85403442]
[401.48632812 313.03726196]
[389.35107422 304.22048950]
[377.21582031 295.40368652]
[365.08056641 286.58691406]
[347.54635620 285.68600464]
[340.21591187 268.78393555]
[327.96627808 260.12673950]
[315.71667480 251.46957397]
[303.46704102 242.81239319]
[291.21740723 234.15521240]
[278.96780396 225.49803162]
[266.71817017 216.84086609]
[245.06881714 216.93943787]
[236.06741333 196.40823364]
[223.38150024 188.40400696]
[210.69558716 180.39979553]
[198.00965881 172.39558411]
[183.11712646 172.14776611]
[175.57466125 158.24014282]
[162.88874817 150.23593140]
[146.64913940 154.64172363]
[131.96342468 145.75593567]
[128.18441772 128.66596985]
[115.39482117 120.82849884]
[102.60521698 112.99102020]
[87.78989410 110.64450073]
[73.20434570 114.14617920]
[58.61879349 117.64786530]
[44.03324509 121.14954376]
[29.44769478 124.65122223]
[14.86214733 128.15290833]
[0.27659807 131.65458679]
[-14.30895042 135.15626526]
[-22.59118271 148.34877014]
[-37.43288803 151.69219971]
[-49.95888901 143.71505737]
[-64.54444122 147.21673584]
[-79.12998962 150.71841431]
[-84.11326599 165.31878662]
[-96.21319580 174.88931274]
[-111.56875610 176.37609863]
[-125.28002167 169.30468750]
[-132.97178650 155.93157959]
[-132.18963623 140.52404785]
[-123.18315887 127.99861145]
[-108.82627869 122.35206604]
[-93.70022583 125.38621521]
[-82.63166809 136.13287354]
[-68.04611969 132.63119507]
[-53.46057129 129.12951660]
[-45.92136765 116.33513641]
[-31.17943001 112.57615662]
[-17.81063080 120.57071686]
[-3.22508240 117.06903839]
[11.36046600 113.56735229]
[25.94601440 110.06567383]
[40.53156281 106.56399536]
[55.11711121 103.06231689]
[69.70265961 99.56063080]
[84.28820801 96.05895233]
[87.38351440 89.22747803]
[72.90469360 85.30780029]
[58.36957550 81.60236359]
[56.02751160 66.78633118]
[68.71099854 58.77827072]
[81.08060455 67.26318359]
[93.57411957 75.56451416]
[96.66941833 68.73303986]
[89.68520355 55.45822525]
[82.70098877 42.18341064]
[75.71676636 28.90859413]
[68.73255157 15.63377953]
[61.74833298 2.35896540]
[54.76411438 -10.91584873]
[47.77989578 -24.19066429]
[40.53639221 -37.32579422]
[33.03639221 -50.31617355]
[25.53639221 -63.30655670]
[18.03639221 -76.29693604]
[4.43560696 -84.37958527]
[4.77266932 -99.27037811]
[-2.72733045 -112.26075745]
[-10.22733021 -125.25113678]
[-17.72733116 -138.24151611]
[-25.22733116 -151.23190308]
[-32.72732925 -164.22229004]
[-48.01772690 -163.54226685]
[-61.86778259 -170.05644226]
[-71.09486389 -182.26789856]
[-73.57865143 -197.37051392]
[-68.74839020 -211.89384460]
[-57.71403885 -222.50053406]
[-43.01120758 -226.75321960]
[-28.01850510 -223.67468262]
[-16.18113899 -213.97235107]
[-10.21925163 -199.87573242]
[-11.50284195 -184.62414551]
[-19.73694992 -171.72229004]
[-12.23694992 -158.73190308]
[-4.73694944 -145.74151611]
[2.76305056 -132.75114441]
[10.26305008 -119.76075745]
[17.76305008 -106.77037811]
[30.82738495 -99.61688995]
[31.02677345 -83.79693604]
[38.52677155 -70.80655670]
[46.02677155 -57.81617355]
[53.52677155 -44.82579422]
[56.79936981 -43.56386185]
[59.62904358 -40.66493607]
[61.25786591 -36.35171127]
[61.05471039 -31.17488098]
[68.03893280 -17.90006638]
[75.02314758 -4.62525225]
[82.00736237 8.64956188]
[88.99158478 21.92437744]
[95.97579956 35.19919205]
[102.96001434 48.47400665]
[109.94423676 61.74882126]
[119.91046143 84.90840149]
[110.44269562 100.20141602]
[123.23229980 108.03889465]
[136.02189636 115.87637329]
[148.65792847 111.24728394]
[161.46751404 114.68467712]
[169.83918762 124.71938324]
[170.89297485 137.55001831]
[183.57888794 145.55422974]
[199.37881470 146.37455750]
[206.01388550 159.70965576]
[218.69979858 167.71388245]
[231.38571167 175.71809387]
[244.07164001 183.72232056]
[251.69145203 180.42132568]
[259.90173340 180.38882446]
[267.37475586 183.55624390]
[272.93106079 189.34352112]
[275.72552490 196.76380920]
[275.37533569 204.59123230]
[287.62496948 213.24841309]
[299.87460327 221.90559387]
[312.12420654 230.56277466]
[324.37384033 239.21994019]
[336.62347412 247.87712097]
[348.87307739 256.53430176]
[361.68075562 255.12194824]
[371.70156860 262.56860352]
[373.89733887 274.45166016]
[386.03259277 283.26843262]
[398.16784668 292.08520508]
[410.30310059 300.90200806]
[422.43835449 309.71878052]
[434.57360840 318.53555298]
[446.70886230 327.35232544]
[455.47222900 329.85723877]
[458.94424438 336.36480713]
[470.96304321 345.33966064]
[496.86309814 334.79153442]
[524.77563477 351.74365234]
[539.67163086 349.98059082]
[554.56768799 348.21752930]
[569.46368408 346.45446777]
[584.35974121 344.69140625]
[599.25573730 342.92834473]
[614.15179443 341.16528320]
[626.96075439 330.92504883]
[642.13293457 337.14904785]
[644.06042480 353.43450928]
[630.76043701 363.02838135]
[615.91485596 356.06130981]
[601.01879883 357.82437134]
[586.12280273 359.58743286]
[571.22674561 361.35049438]
[556.33074951 363.11355591]
[541.43469238 364.87661743]
[526.53869629 366.63967896]
[523.80511475 373.62377930]
[537.77325439 379.09106445]
[532.30578613 393.05911255]
[518.33807373 387.59201050]
[515.60455322 394.57611084]
[525.34625244 405.98220825]
[535.08801270 417.38830566]
[544.82971191 428.79437256]
[554.57147217 440.20046997]
[571.42376709 438.64727783]
[585.73522949 447.36459351]
[591.96154785 462.74304199]
[587.82952881 478.63955688]
[597.71966553 489.91714478]
[607.60986328 501.19473267]
[626.60046387 498.64804077]
[643.14630127 508.00836182]
[650.62609863 525.32110596]
[646.17303467 543.49230957]
[656.49835205 554.37292480]
[666.82366943 565.25354004]
[682.38983154 565.82989502]
[692.70617676 577.01147461]
[692.06079102 591.84790039]
[707.99615479 593.70355225]
[716.35827637 607.39495850]
[710.73242188 622.41925049]
[695.43426514 627.25103760]
[682.19927979 618.18383789]
[681.18017578 602.17321777]
[666.33032227 602.04125977]
[655.70397949 591.15380859]
[655.94305420 575.57885742]
[645.61773682 564.69824219]
[635.29241943 553.81762695]
[624.73840332 557.32879639]
[613.58483887 556.65411377]
[603.43841553 551.85247803]
[595.77508545 543.58013916]
[591.72515869 533.00115967]
[591.90686035 521.62365723]
[596.33227539 511.08493042]
[586.44207764 499.80734253]
[576.55187988 488.52972412]
[563.43896484 490.97991943]
[550.72406006 486.60028076]
[541.75848389 476.43225098]
[538.96081543 463.05731201]
[543.16534424 449.94219971]
[533.42364502 438.53610229]
[523.68188477 427.13000488]
[513.94018555 415.72393799]
[504.19845581 404.31784058]
[491.23468018 405.85287476]
[479.00476074 403.08160400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 165]
[5 164]
[6 162]
[7 161]
[8 160]
[9 159]
[10 158]
[11 157]
[12 156]
[14 153]
[15 152]
[16 151]
[17 150]
[18 149]
[19 148]
[20 147]
[22 141]
[23 140]
[24 139]
[25 138]
[27 136]
[28 135]
[31 131]
[32 130]
[33 129]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[39 63]
[40 62]
[41 61]
[44 58]
[45 57]
[46 56]
[76 127]
[77 126]
[78 125]
[79 124]
[80 123]
[81 122]
[82 121]
[83 120]
[84 116]
[85 115]
[86 114]
[87 113]
[89 111]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[167 184]
[168 183]
[169 182]
[170 181]
[171 180]
[172 179]
[173 178]
[189 237]
[190 236]
[191 235]
[192 234]
[193 233]
[197 228]
[198 227]
[199 226]
[203 219]
[204 218]
[205 217]
[208 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
