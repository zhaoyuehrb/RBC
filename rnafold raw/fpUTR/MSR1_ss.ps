%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUUUAGAUUUUGCAAACCUGUGCAUUGAUGAGAGUGCUAUUGAAACACAUUAAGAAAGAUUUUCAACGCAGGAAUGUGUCAUUUCCUUUCUUCAUGUACCAGAUGCUGAAAUACUAUGAGAUAAAGAUUUUAGGUUUCAAUUGUAAAGAGAGAGAAGUGGAUAAAUCAGUGCUGCUUUCUUUAGGACGAAAGAAGU\
) } def
/len { sequence length } bind def

/coor [
[113.46595764 270.15917969]
[98.40060425 272.00296021]
[83.68748474 268.27621460]
[71.31642914 259.48297119]
[62.96052170 246.81240845]
[59.74982452 231.97811890]
[62.11856461 216.98634338]
[69.74638367 203.86457825]
[81.60169220 194.38743591]
[96.08113861 189.83662415]
[97.02772522 174.86651611]
[97.97431183 159.89640808]
[98.92089844 144.92631531]
[99.86747742 129.95620728]
[93.39211273 126.17208099]
[85.82386017 139.12281799]
[78.25559998 152.07354736]
[75.05973816 166.72914124]
[60.13386154 168.21850586]
[54.10507202 154.48336792]
[65.30487061 144.50529480]
[72.87312317 131.55456543]
[80.44137573 118.60382843]
[73.96601105 114.81970215]
[61.38810349 122.99259186]
[48.81019592 131.16549683]
[36.23228455 139.33837891]
[23.65437698 147.51127625]
[20.61813164 163.02117920]
[7.45758677 171.77192688]
[-8.01933765 168.57186890]
[-16.63045692 155.31953430]
[-13.26694775 139.87731934]
[0.07567999 131.40678406]
[15.48148251 134.93336487]
[28.05939102 126.76047516]
[40.63729858 118.58757782]
[53.21520615 110.41468811]
[65.79311371 102.24179077]
[82.24108887 77.23915863]
[107.18046570 77.66769409]
[103.66151428 63.08630371]
[100.14257050 48.50490952]
[96.62361908 33.92351532]
[93.10467529 19.34212494]
[89.58572388 4.76073170]
[86.06678009 -9.82066059]
[82.54782867 -24.40205383]
[48.65908051 -39.66054916]
[37.84525299 -50.05578995]
[27.03142357 -60.45103455]
[16.21759415 -70.84627533]
[0.90667111 -74.83203125]
[-2.90662432 -89.23022461]
[-13.72045422 -99.62547302]
[-24.53428268 -110.02071381]
[-35.34811401 -120.41596222]
[-46.16194153 -130.81120300]
[-56.97577286 -141.20645142]
[-67.78960419 -151.60168457]
[-80.67033386 -145.51219177]
[-94.82643890 -144.18952942]
[-108.55448914 -147.77238464]
[-120.20954132 -155.81036377]
[-128.40225220 -167.32052612]
[-132.16450500 -180.90751648]
[-131.06373596 -194.93276978]
[-125.25259399 -207.71206665]
[-135.90097046 -218.27671814]
[-146.54934692 -228.84136963]
[-157.19773865 -239.40603638]
[-167.84611511 -249.97068787]
[-183.83244324 -253.62707520]
[-188.39984131 -269.37734985]
[-176.84974670 -281.01898193]
[-161.06391907 -276.57604980]
[-157.28146362 -260.61907959]
[-146.63307190 -250.05441284]
[-135.98469543 -239.48976135]
[-125.33631897 -228.92509460]
[-114.68793488 -218.36044312]
[-100.17173004 -224.70578003]
[-84.29342651 -224.99742126]
[-69.48230743 -219.16120911]
[-58.01571655 -208.06274414]
[-51.66891861 -193.37915039]
[-51.44028473 -177.34568787]
[-57.39435959 -162.41551208]
[-46.58052826 -152.02027893]
[-35.76670074 -141.62503052]
[-24.95286942 -131.22978210]
[-14.13903999 -120.83454132]
[-3.32521033 -110.43930054]
[7.48861933 -100.04405975]
[22.02606392 -96.80184174]
[26.61283684 -81.66011047]
[37.42666626 -71.26486206]
[48.24049759 -60.86962128]
[59.05432510 -50.47437668]
[66.54287720 -50.88857269]
[62.03659821 -65.19568634]
[56.29651642 -79.05394745]
[64.28222656 -91.75152588]
[79.25930023 -92.58043671]
[88.59745026 -80.84165955]
[84.42094421 -66.43376923]
[81.51998901 -51.71696472]
[89.00854492 -52.13115692]
[98.60998535 -63.65557861]
[108.21142578 -75.18000031]
[117.81287384 -86.70442200]
[127.41431427 -98.22884369]
[137.01576233 -109.75326538]
[146.61720276 -121.27768707]
[149.71034241 -129.88313293]
[156.46232605 -132.90669250]
[166.24449158 -144.27810669]
[161.74656677 -159.03521729]
[165.96293640 -173.87521362]
[177.54818726 -184.06272888]
[192.80551147 -186.34695435]
[206.86634827 -179.99899292]
[215.24392700 -167.04446411]
[215.26499939 -151.61712646]
[206.92285156 -138.63975525]
[192.87940979 -132.25340271]
[177.61590576 -134.49592590]
[167.83374023 -123.12451935]
[158.14161682 -111.67624664]
[148.54017639 -100.15182495]
[138.93873596 -88.62740326]
[129.33729553 -77.10298157]
[119.73584747 -65.57855988]
[110.13440704 -54.05413818]
[100.53296661 -42.52971649]
[97.12921906 -27.92100143]
[100.64817047 -13.33960819]
[104.16711426 1.24178421]
[107.68606567 15.82317638]
[111.20500946 30.40456963]
[114.72396088 44.98596191]
[118.24290466 59.56735611]
[121.76185608 74.14875031]
[130.80693054 86.11480713]
[146.62809753 86.14768982]
[153.91868591 99.13600922]
[166.98728943 106.49887848]
[180.05587769 113.86174774]
[193.12448120 121.22461700]
[206.19306946 128.58749390]
[219.26167297 135.95036316]
[232.33026123 143.31321716]
[245.39884949 150.67608643]
[258.46743774 158.03895569]
[271.59375000 165.29844666]
[284.77694702 172.45408630]
[300.59667969 172.23721313]
[308.09140015 185.10882568]
[323.91110229 184.89195251]
[331.40582275 197.76356506]
[344.58901978 204.91920471]
[357.77221680 212.07485962]
[373.50067139 208.91331482]
[385.68576050 219.34898376]
[384.98013306 235.37651062]
[371.92507935 244.70094299]
[356.53533936 240.16938782]
[350.61657715 225.25805664]
[337.43338013 218.10240173]
[324.25018311 210.94676208]
[309.37341309 211.67546082]
[300.93572998 198.29202271]
[286.05895996 199.02072144]
[277.62130737 185.63728333]
[264.43811035 178.48164368]
[257.05245972 178.05334473]
[251.10458374 171.10755920]
[238.03598022 163.74468994]
[224.96739197 156.38182068]
[211.89880371 149.01895142]
[198.83020020 141.65608215]
[185.76161194 134.29321289]
[172.69300842 126.93034363]
[159.62442017 119.56747437]
[146.55581665 112.20460510]
[131.66940308 112.69836426]
[123.44406128 99.18340302]
[124.69926453 114.94594574]
[114.83758545 130.90278625]
[113.89099884 145.87289429]
[112.94441223 160.84300232]
[111.99782562 175.81309509]
[111.05124664 190.78320312]
[124.84215546 197.12159729]
[135.40930176 208.01655579]
[141.32354736 221.99459839]
[141.78506470 237.16534424]
[136.73141479 251.47706604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 193]
[11 192]
[12 191]
[13 190]
[14 189]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[41 143]
[42 142]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 99]
[50 98]
[51 97]
[52 96]
[54 94]
[55 93]
[56 92]
[57 91]
[58 90]
[59 89]
[60 88]
[68 81]
[69 80]
[70 79]
[71 78]
[72 77]
[108 135]
[109 134]
[110 133]
[111 132]
[112 131]
[113 130]
[114 129]
[116 128]
[117 127]
[144 187]
[146 185]
[147 184]
[148 183]
[149 182]
[150 181]
[151 180]
[152 179]
[153 178]
[154 177]
[155 175]
[156 174]
[158 172]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
