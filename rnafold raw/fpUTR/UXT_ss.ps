%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAUUCACCCGCGCCACCCGGAAGCCGCGGUUCCUACCAACCGUUCUUAUUGCUGGCGGCCUGAGGUAAAGGCCGCGCUUGGGUGUCCCUGGGUGGUCGGGUCCCCGAGUUGGGAGGGGCGGAAGGCUGAACCUCCAGCUUGAGCCGGACAAGCCGAUUCCCAGCGUUGAGAGGGUAGAGAUGAACUGUGUGUGAGGCCAAACUGGAUCGGUCAAC\
) } def
/len { sequence length } bind def

/coor [
[96.49263763 801.43786621]
[81.43766022 803.36456299]
[66.70425415 799.71887207]
[54.28498840 790.99383545]
[45.85947037 778.36944580]
[42.56718063 763.55303955]
[44.85337448 748.54846191]
[52.40886307 735.38488770]
[64.21183014 725.84265137]
[78.66601562 721.21221924]
[79.53019714 706.23712158]
[80.39437103 691.26202393]
[70.32566833 680.34619141]
[70.98873901 665.14697266]
[82.50659943 654.66003418]
[83.37078094 639.68493652]
[84.23496246 624.70983887]
[71.20453644 614.72161865]
[66.65142059 598.77453613]
[72.56118774 583.10101318]
[86.78939819 573.95013428]
[87.43769073 558.96417236]
[74.27493286 546.23645020]
[74.60653687 527.60992432]
[88.68885040 514.93090820]
[88.90500641 499.93249512]
[89.01309204 484.93286133]
[89.01309204 469.93286133]
[89.01309204 454.93286133]
[89.01309204 439.93286133]
[89.01309204 424.93286133]
[89.01309204 409.93286133]
[89.01309204 394.93286133]
[89.01309204 379.93286133]
[88.58081818 364.93911743]
[87.71664429 349.96401978]
[86.85246277 334.98892212]
[85.98828125 320.01385498]
[85.12409973 305.03875732]
[73.36808014 314.35519409]
[58.72176361 311.11709595]
[51.98895264 297.71301270]
[58.13608932 284.03042603]
[72.62875366 280.16226196]
[84.77652740 288.96194458]
[84.99268341 273.96350098]
[85.20883942 258.96505737]
[85.42499542 243.96659851]
[85.64115143 228.96815491]
[85.85730743 213.96971130]
[78.30422211 201.13226318]
[86.23958588 187.44502258]
[86.45574188 172.44657898]
[86.67189789 157.44815063]
[86.88805389 142.44970703]
[87.10420990 127.45125580]
[87.32036591 112.45281982]
[78.87482452 100.05633545]
[64.83782196 94.76837158]
[50.80081558 89.48040771]
[36.76381683 84.19244385]
[22.72681236 78.90447235]
[8.68981171 73.61650848]
[-4.84990168 81.44020081]
[-20.24185371 78.67944336]
[-30.21843719 66.63777161]
[-30.06901360 51.00090408]
[-19.86413574 39.15208435]
[-4.42223501 36.68596649]
[8.96549416 44.76697922]
[13.97777653 59.57950592]
[28.01477814 64.86746979]
[42.05178070 70.15544128]
[56.08878326 75.44340515]
[70.12578583 80.73136902]
[84.16278839 86.01933289]
[93.13621521 73.99945068]
[84.07640839 62.04453278]
[75.01660919 50.08961868]
[65.95681000 38.13470078]
[56.89700699 26.17978668]
[47.83720779 14.22487164]
[38.77740479 2.26995587]
[29.71760368 -9.68495941]
[14.40289021 -15.54939079]
[12.09184361 -31.78487968]
[25.16187096 -41.68974686]
[40.16764832 -35.07471466]
[41.67251968 -18.74476051]
[50.73232269 -6.78984499]
[59.79212189 5.16507053]
[68.85192108 17.11998558]
[77.91172791 29.07490158]
[86.97152710 41.02981567]
[96.03132629 52.98473358]
[105.09112549 64.93965149]
[120.07205200 64.18339539]
[127.88186646 51.37687683]
[135.69168091 38.57036209]
[143.50149536 25.76384926]
[151.31130981 12.95733452]
[158.84248352 -0.01499506]
[166.09150696 -13.14707947]
[173.34053040 -26.27916336]
[180.58955383 -39.41124725]
[187.64859009 -52.64643097]
[194.41990662 -66.03109741]
[201.09458923 -79.46421051]
[207.76928711 -92.89732361]
[214.44396973 -106.33043671]
[221.11866760 -119.76354980]
[227.79335022 -133.19665527]
[234.46804810 -146.62977600]
[241.14273071 -160.06288147]
[242.15773010 -169.13537598]
[248.01162720 -173.64044189]
[254.87919617 -186.97596741]
[261.74676514 -200.31150818]
[257.15829468 -215.19718933]
[264.31295776 -228.62348938]
[278.53247070 -232.90615845]
[285.40005493 -246.24168396]
[292.26760864 -259.57720947]
[290.94012451 -275.92254639]
[304.58383179 -285.02096558]
[319.16326904 -277.51281738]
[319.68035889 -261.12182617]
[305.60314941 -252.70964050]
[298.73556519 -239.37411499]
[291.86801147 -226.03858948]
[296.63986206 -211.97567749]
[289.86511230 -198.35372925]
[275.08230591 -193.44392395]
[268.21472168 -180.10839844]
[261.34716797 -166.77285767]
[254.57585144 -153.38819885]
[247.90115356 -139.95507812]
[241.22647095 -126.52197266]
[234.55177307 -113.08885956]
[227.87709045 -99.65574646]
[221.20239258 -86.22263336]
[214.52770996 -72.78952026]
[207.85301208 -59.35640717]
[207.69172668 -51.97144699]
[200.98413086 -45.77885437]
[201.55943298 -41.04252625]
[199.16914368 -35.89384079]
[193.72164917 -32.16222000]
[186.47262573 -19.03013802]
[179.22358704 -5.89805365]
[171.97456360 7.23403025]
[172.59284973 10.70035839]
[171.56614685 14.63818455]
[168.69119263 18.27258682]
[164.11781311 20.76714897]
[156.30799866 33.57366180]
[148.49819946 46.38017654]
[140.68838501 59.18669128]
[132.87857056 71.99320984]
[133.08567810 99.76468658]
[117.70606995 114.65305328]
[102.31880951 112.66897583]
[102.10265350 127.66741943]
[101.88649750 142.66586304]
[101.67034149 157.66430664]
[101.45418549 172.66275024]
[101.23802185 187.66117859]
[108.77565765 201.57142639]
[100.85575104 214.18588257]
[100.63959503 229.18431091]
[100.42343903 244.18275452]
[100.20728302 259.18121338]
[99.99112701 274.17965698]
[99.77496338 289.17810059]
[100.09918976 304.17459106]
[100.96337128 319.14965820]
[101.82754517 334.12475586]
[102.69172668 349.09985352]
[103.55590820 364.07492065]
[106.06011963 367.60772705]
[107.19865417 371.37457275]
[107.06523895 374.91842651]
[105.89213562 377.85931396]
[104.01309204 379.93286133]
[104.01309204 394.93286133]
[104.01309204 409.93286133]
[104.01309204 424.93286133]
[104.01309204 439.93286133]
[104.01309204 454.93286133]
[104.01309204 469.93286133]
[104.01309204 484.93286133]
[107.14118195 493.50930786]
[103.90345001 500.14865112]
[103.68729401 515.14709473]
[113.46817017 521.89416504]
[118.72600555 532.41607666]
[118.25908661 544.04931641]
[112.29882050 553.91082764]
[102.42367554 559.61248779]
[101.77538300 574.59844971]
[113.17212677 582.34594727]
[119.20584106 594.61511230]
[118.39703369 608.15527344]
[111.06362915 619.43743896]
[99.21004486 625.57403564]
[98.34586334 640.54913330]
[97.48168182 655.52416992]
[107.71674347 667.26647949]
[106.62701416 682.44104004]
[95.36946106 692.12622070]
[94.50527954 707.10131836]
[93.64109802 722.07641602]
[107.46669006 728.33880615]
[118.09362793 739.17541504]
[124.08472443 753.12072754]
[124.62973022 768.28869629]
[119.65492249 782.62799072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 212]
[11 211]
[12 210]
[15 207]
[16 206]
[17 205]
[21 200]
[22 199]
[25 194]
[26 193]
[27 191]
[28 190]
[29 189]
[30 188]
[31 187]
[32 186]
[33 185]
[34 184]
[35 179]
[36 178]
[37 177]
[38 176]
[39 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[50 169]
[52 167]
[53 166]
[54 165]
[55 164]
[56 163]
[57 162]
[58 76]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[77 96]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[97 159]
[98 158]
[99 157]
[100 156]
[101 155]
[102 151]
[103 150]
[104 149]
[105 148]
[106 145]
[107 143]
[108 142]
[109 141]
[110 140]
[111 139]
[112 138]
[113 137]
[114 136]
[116 135]
[117 134]
[118 133]
[121 130]
[122 129]
[123 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
