%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGUGUCACUGGCUCAGGCUCAGUUGCUGGGUCACCAGUAGAAUGGACCCUUCCUCCACCUCAGUUCAGAGCACAGUGAUGAUUCGUGACUUUCUUUCCCAAUAGAACUUCAAAUCUCUGAAGACGGGGGGUGGGGGGAUGUGCUUGAGUGUUUGUACUCAUGGUCUUGUUCUAGAAGUGACAAAGCUGGGACACAAUACCUUUAUGC\
) } def
/len { sequence length } bind def

/coor [
[81.37809753 218.53405762]
[87.69288635 204.77171326]
[98.13596344 193.80717468]
[111.57452393 186.82980347]
[109.33889008 171.99734497]
[107.10325623 157.16488647]
[104.86762238 142.33242798]
[102.63198853 127.49996185]
[87.87304688 124.82160950]
[80.56821442 137.92272949]
[73.26338196 151.02384949]
[65.95854950 164.12496948]
[58.75191498 177.28038025]
[51.64388657 190.48930359]
[52.67504883 206.85600281]
[38.86875916 215.70576477]
[24.42774391 207.93472290]
[24.20768166 191.53706360]
[38.43495178 183.38127136]
[45.54298401 170.17234802]
[45.94446182 162.79202271]
[52.85742569 156.82014465]
[60.16225815 143.71902466]
[67.46708679 130.61790466]
[74.77191925 117.51677704]
[75.30320740 91.17403412]
[94.04586029 79.09133148]
[95.16680908 64.13327789]
[96.28775787 49.17522049]
[86.25565338 37.25907516]
[87.60553741 22.10544586]
[99.02758789 12.61479664]
[100.14853668 -2.34326005]
[101.26948547 -17.30131721]
[102.39044189 -32.25937271]
[103.51139069 -47.21743011]
[91.84562683 -57.27805328]
[88.38124084 -72.10543823]
[94.24272156 -85.96570587]
[106.98916626 -93.62509155]
[108.11011505 -108.58314514]
[109.23106384 -123.54120636]
[110.35202026 -138.49926758]
[111.47296906 -153.45732117]
[112.59391785 -168.41537476]
[113.71487427 -183.37342834]
[114.72390747 -198.33944702]
[115.62097168 -213.31260681]
[116.51803589 -228.28575134]
[117.41509247 -243.25891113]
[101.48979950 -264.90325928]
[120.01824188 -290.17123413]
[116.02768707 -304.63067627]
[112.03713226 -319.09011841]
[108.04657745 -333.54956055]
[104.05603027 -348.00900269]
[100.06547546 -362.46844482]
[96.07492065 -376.92788696]
[92.08436584 -391.38732910]
[88.09381866 -405.84677124]
[84.10326385 -420.30621338]
[80.11270905 -434.76565552]
[76.12216187 -449.22509766]
[58.14678192 -458.19931030]
[52.65016937 -477.20626831]
[62.74481964 -493.86718750]
[58.10956573 -508.13305664]
[53.47431183 -522.39886475]
[48.83905411 -536.66473389]
[44.20380020 -550.93060303]
[39.56854630 -565.19641113]
[34.93329239 -579.46228027]
[13.33428192 -582.07604980]
[-3.83466959 -596.66131592]
[-10.33929253 -619.03399658]
[-3.21251917 -642.02520752]
[-12.02929783 -654.16046143]
[-20.84607697 -666.29571533]
[-35.21722031 -672.91241455]
[-36.43851852 -687.75683594]
[-45.25529480 -699.89208984]
[-54.07207489 -712.02734375]
[-68.27367401 -721.28753662]
[-63.30678177 -737.49761963]
[-46.35523605 -737.21221924]
[-41.93682098 -720.84417725]
[-33.12004089 -708.70892334]
[-24.30326271 -696.57366943]
[-10.56275272 -690.82495117]
[-8.71082211 -675.11248779]
[0.10595686 -662.97723389]
[8.92273521 -650.84197998]
[22.84445953 -656.42639160]
[20.83096123 -671.29064941]
[18.81746292 -686.15484619]
[16.80396271 -701.01910400]
[3.07639718 -708.25329590]
[-3.74706435 -722.18957520]
[-1.04266083 -737.46917725]
[10.14970970 -748.21679688]
[25.52635193 -750.29968262]
[39.17463303 -742.91699219]
[45.84651184 -728.90753174]
[42.97651291 -713.65814209]
[31.66820908 -703.03259277]
[33.68170929 -688.16839600]
[35.69520950 -673.30413818]
[37.70870590 -658.43988037]
[48.54849625 -654.47198486]
[57.77639389 -647.81201172]
[64.75416565 -639.02929688]
[69.02909088 -628.83514404]
[70.36270905 -618.02581787]
[68.74267578 -607.42059326]
[64.37718964 -597.79931641]
[57.67301941 -589.84552002]
[49.19913864 -584.09753418]
[53.83439255 -569.83166504]
[58.46965027 -555.56585693]
[63.10490417 -541.29998779]
[67.74015808 -527.03411865]
[72.37541199 -512.76831055]
[77.01066589 -498.50244141]
[87.07541656 -496.47784424]
[95.45688629 -490.41036987]
[100.60310364 -481.34078979]
[101.52701569 -470.87283325]
[97.99511719 -460.88980103]
[90.58160400 -453.21563721]
[94.57215118 -438.75619507]
[98.56270599 -424.29675293]
[102.55326080 -409.83731079]
[106.54381561 -395.37786865]
[110.53436279 -380.91842651]
[114.52491760 -366.45898438]
[118.51547241 -351.99954224]
[122.50601959 -337.54010010]
[126.49657440 -323.08065796]
[130.48712158 -308.62121582]
[134.47767639 -294.16177368]
[134.05334473 -309.15576172]
[143.79302979 -320.56359863]
[158.66812134 -322.49536133]
[170.99856567 -313.95370483]
[174.41813660 -299.34869385]
[167.16130066 -286.22091675]
[152.97273254 -281.34838867]
[167.91233826 -282.69296265]
[182.85195923 -284.03756714]
[197.79156494 -285.38214111]
[212.73118591 -286.72674561]
[227.67080688 -288.07131958]
[240.76194763 -297.94827271]
[255.75357056 -291.30120850]
[257.22357178 -274.96807861]
[243.65974426 -265.75100708]
[229.01539612 -273.13171387]
[214.07577515 -271.78710938]
[199.13615417 -270.44253540]
[184.19654846 -269.09793091]
[169.25692749 -267.75335693]
[154.31732178 -266.40875244]
[147.02488708 -249.16075134]
[132.38824463 -242.36184692]
[131.49118042 -227.38870239]
[130.59411621 -212.41554260]
[129.69706726 -197.44239807]
[132.43515015 -190.57702637]
[128.67292786 -182.25248718]
[127.55197906 -167.29441833]
[126.43103027 -152.33636475]
[125.31007385 -137.37831116]
[124.18912506 -122.42024994]
[123.06817627 -107.46219635]
[121.94721985 -92.50413513]
[133.40972900 -83.03054810]
[137.13996887 -68.45147705]
[131.50437927 -54.30603790]
[118.46944427 -46.09648132]
[117.34849548 -31.13842201]
[116.22754669 -16.18036652]
[115.10659027 -1.22230875]
[113.98564148 13.73574829]
[123.86560822 24.82276154]
[122.94188690 40.00832748]
[111.24581909 50.29616928]
[110.12486267 65.25422668]
[109.00391388 80.21228790]
[119.57028961 86.13645172]
[126.12290955 97.67131042]
[125.77597809 112.08834076]
[117.46445465 125.26432800]
[119.70008850 140.09678650]
[121.93572235 154.92924500]
[124.17135620 169.76171875]
[126.40699005 184.59417725]
[141.30513000 187.30047607]
[154.51609802 194.69973755]
[164.60685730 205.98934937]
[170.48284912 219.94467163]
[171.50669861 235.05197144]
[167.56730652 249.67251587]
[159.09202576 262.22036743]
[147.00018311 271.33441162]
[132.60340881 276.02606201]
[117.46335602 275.78637695]
[103.22230530 270.64135742]
[91.42501068 261.14910889]
[83.35117340 248.33927917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 196]
[5 195]
[6 194]
[7 193]
[8 192]
[9 25]
[10 24]
[11 23]
[12 22]
[13 20]
[14 19]
[27 188]
[28 187]
[29 186]
[32 183]
[33 182]
[34 181]
[35 180]
[36 179]
[40 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
[47 167]
[48 166]
[49 165]
[50 164]
[52 140]
[53 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[59 133]
[60 132]
[61 131]
[62 130]
[63 129]
[66 123]
[67 122]
[68 121]
[69 120]
[70 119]
[71 118]
[72 117]
[76 92]
[77 91]
[78 90]
[80 88]
[81 87]
[82 86]
[93 108]
[94 107]
[95 106]
[96 105]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
