%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGCGUCACGUCCGCCCCGCCCGCUGCCACUUGUGGCUCUGCCGCUCUAGCCCCCGGCGGAGCCAGCUGCUGCUCUUCGGUGCUGGCCCCGGUGCCGGCCCCGUUGCCCAGGGAACAGGCUCCCGGCAGCCCCCGCGGCCCGGAGUCCAUCCCGCCUCCUCCGGCCCGGCGGGGCCGACGAGUCCGGAGGGGCUGCCGCGGGAGCCCCCAGGUUUCCCUAGAUGACAAAUAAACAUUCCUUUUCCUGCGUGAAG\
AUAGUCUGUGGAAACCUUGGCC\
) } def
/len { sequence length } bind def

/coor [
[295.01501465 320.33114624]
[280.10156250 325.03469849]
[265.67370605 319.00390625]
[258.54376221 305.08636475]
[262.07833862 289.85348511]
[274.60845947 280.49777222]
[275.28628540 265.51309204]
[275.96408081 250.52841187]
[276.64190674 235.54373169]
[269.86227417 222.16326904]
[257.37847900 213.84735107]
[244.89466858 205.53141785]
[232.41085815 197.21548462]
[217.52902222 196.59895325]
[210.33329773 182.50880432]
[197.84950256 174.19287109]
[185.36569214 165.87695312]
[172.88188171 157.56101990]
[160.39808655 149.24508667]
[147.91427612 140.92916870]
[135.43048096 132.61323547]
[122.94667053 124.29730988]
[98.48983002 133.38604736]
[74.95341492 122.12640381]
[61.76980972 129.28131104]
[53.33138275 142.66426086]
[38.45465469 141.93470764]
[25.27104950 149.08961487]
[39.39712524 154.13481140]
[45.91302872 167.64566040]
[41.06612396 181.84098816]
[27.64784241 188.54544067]
[13.38603020 183.89778137]
[6.49434757 170.57469177]
[10.94284248 156.24800110]
[-2.69522834 162.49324036]
[-16.33329964 168.73847961]
[-29.97137070 174.98371887]
[-43.60944366 181.22895813]
[-57.24751282 187.47419739]
[-70.88558197 193.71943665]
[-84.52365875 199.96467590]
[-98.16172791 206.20991516]
[-111.79979706 212.45515442]
[-125.43786621 218.70039368]
[-126.80221558 233.99856567]
[-135.64598083 246.55577087]
[-149.59025574 252.99417114]
[-164.88407898 251.58187866]
[-177.41349792 242.69879150]
[-183.80815125 228.73442078]
[-182.34793091 213.44509888]
[-173.42561340 200.94358826]
[-159.44125366 194.59272766]
[-144.15658569 196.10086060]
[-131.68310547 205.06231689]
[-118.04503632 198.81707764]
[-104.40696716 192.57183838]
[-90.76889801 186.32659912]
[-77.13082123 180.08135986]
[-63.49275208 173.83612061]
[-49.85468292 167.59088135]
[-36.21660995 161.34564209]
[-22.57853889 155.10040283]
[-8.94046783 148.85516357]
[4.69760323 142.60992432]
[18.11615181 135.90600586]
[31.29975700 128.75111389]
[38.79520416 115.87992096]
[54.61491013 116.09770203]
[67.79851532 108.94280243]
[66.58193970 100.37766266]
[67.60463715 91.78721619]
[54.26270294 84.93209076]
[43.91089249 90.68245697]
[32.18891525 90.73968506]
[21.99172211 85.20476532]
[15.78233814 75.54555511]
[14.99721146 64.20944214]
[1.81360722 57.05453873]
[-11.36999702 49.89964294]
[-27.18970490 50.11742020]
[-34.68515396 37.24623108]
[-47.86875916 30.09133148]
[-61.05236053 22.93643379]
[-74.23596954 15.78153515]
[-87.41957092 8.62663651]
[-100.60317230 1.47173822]
[-115.68266296 6.20298624]
[-129.65208435 -1.18827248]
[-134.22363281 -16.31693459]
[-126.68509674 -30.20743561]
[-111.50894928 -34.61878586]
[-97.69892883 -26.93380737]
[-93.44828033 -11.71186638]
[-80.26467133 -4.55696774]
[-67.08106995 2.59793067]
[-53.89746475 9.75282955]
[-40.71385956 16.90772820]
[-27.53025436 24.06262589]
[-12.65352631 23.33308220]
[-4.21509886 36.71603775]
[8.96850586 43.87093735]
[22.15211105 51.02583313]
[39.39397430 44.79179001]
[55.98397446 53.32251358]
[61.11783218 71.59015656]
[74.45977020 78.44528198]
[76.04045105 74.43429565]
[78.22312927 70.51400757]
[81.00621796 66.77173615]
[84.37582397 63.29540634]
[82.34793091 48.43311691]
[80.32003021 33.57082748]
[78.29213715 18.70853806]
[66.71910095 11.86404133]
[61.26917267 -0.21453016]
[63.72234726 -13.03882313]
[72.96617126 -21.98280144]
[71.10636139 -36.86705780]
[69.24654388 -51.75131607]
[67.38672638 -66.63557434]
[65.52690887 -81.51982880]
[63.66709518 -96.40408325]
[54.27844620 -109.13844299]
[60.37801743 -122.72683716]
[58.51819992 -137.61109924]
[56.65838623 -152.49534607]
[47.26973343 -165.22970581]
[53.36930847 -178.81809998]
[51.50949097 -193.70236206]
[41.18626022 -206.44453430]
[47.31151581 -221.65679932]
[63.58412552 -223.69009399]
[73.26422119 -210.45272827]
[66.39374542 -195.56217957]
[68.25356293 -180.67791748]
[77.50918579 -169.00817871]
[71.54264069 -154.35516357]
[73.40245819 -139.47090149]
[75.26227570 -124.58665466]
[84.51789856 -112.91691589]
[78.55135345 -98.26390076]
[80.41116333 -83.37964630]
[82.27098083 -68.49538422]
[84.13079834 -53.61112976]
[85.99061584 -38.72687531]
[87.85043335 -23.84261894]
[101.56175232 -14.07373905]
[103.99446106 2.92684269]
[93.15442657 16.68064117]
[95.18231964 31.54293060]
[97.21022034 46.40522003]
[99.23811340 61.26750946]
[114.00859070 63.88150406]
[121.01405334 50.61788940]
[128.01951599 37.35427475]
[123.11816406 22.32921791]
[130.35108948 8.27715874]
[145.42712402 3.53493619]
[159.40193176 10.91602421]
[163.98449707 26.04135513]
[156.45606995 39.93733978]
[141.28312683 44.35973358]
[134.27766418 57.62334824]
[127.27220917 70.88696289]
[134.37873840 84.44387054]
[135.55932617 98.86826324]
[131.26260376 111.81350708]
[143.74639893 120.12943268]
[156.23020935 128.44535828]
[168.71401978 136.76129150]
[181.19781494 145.07722473]
[193.68162537 153.39314270]
[206.16542053 161.70907593]
[218.64923096 170.02499390]
[234.42399597 171.23635864]
[240.72679138 184.73168945]
[253.21058655 193.04760742]
[265.69439697 201.36354065]
[278.17819214 209.67947388]
[271.20950317 196.39649963]
[267.87844849 181.77104187]
[271.16564941 167.13565063]
[280.43115234 155.33944702]
[293.87121582 148.67877197]
[308.86947632 148.45028687]
[322.50619507 154.69847107]
[332.12634277 166.20626831]
[320.68676758 175.90863037]
[335.37750244 172.87844849]
[350.06823730 169.84825134]
[364.75900269 166.81806946]
[379.44973755 163.78787231]
[394.14047241 160.75769043]
[406.09310913 150.39210510]
[420.12100220 155.39880371]
[432.00756836 144.10093689]
[447.65631104 149.00492859]
[450.96911621 165.06597900]
[438.53811646 175.76185608]
[423.15118408 170.08955383]
[412.24935913 180.23840332]
[397.17065430 175.44842529]
[382.47991943 178.47862244]
[367.78918457 181.50880432]
[353.09844971 184.53900146]
[338.40768433 187.56918335]
[323.71694946 190.59938049]
[321.70767212 197.82522583]
[315.67984009 219.50274658]
[326.69754028 229.68164062]
[337.71527100 239.86054993]
[348.73297119 250.03944397]
[359.75070190 260.21835327]
[370.76840210 270.39724731]
[381.78613281 280.57614136]
[392.80383301 290.75503540]
[408.19073486 294.43658447]
[412.28860474 308.75637817]
[423.30633545 318.93527222]
[434.32403564 329.11419678]
[445.34176636 339.29309082]
[456.35946655 349.47198486]
[451.64166260 335.23321533]
[451.93426514 320.23608398]
[457.20388794 306.19216919]
[466.84906006 294.70431519]
[479.76904297 287.08367920]
[494.48922729 284.19992065]
[509.32962036 286.38223267]
[522.59649658 293.38150024]
[532.77569580 304.39892578]
[538.70550537 318.17709351]
[539.70910645 333.14346313]
[535.67199707 347.58996582]
[527.05487061 359.86782837]
[514.84130859 368.57574463]
[500.42514038 372.71990967]
[485.45172119 371.82736206]
[471.62780762 365.99856567]
[480.90423584 377.78616333]
[490.18066406 389.57379150]
[499.45709229 401.36141968]
[508.73352051 413.14901733]
[524.45434570 414.77081299]
[534.35894775 427.08645630]
[532.57104492 442.78927612]
[520.15136719 452.56311035]
[504.46832275 450.60928345]
[494.82635498 438.08697510]
[496.94589233 422.42544556]
[487.66946411 410.63784790]
[478.39303589 398.85021973]
[469.11660767 387.06259155]
[459.84020996 375.27496338]
[453.30212402 373.98300171]
[447.94949341 368.69268799]
[446.18057251 360.48968506]
[435.16287231 350.31079102]
[424.14514160 340.13189697]
[413.12744141 329.95300293]
[402.10971069 319.77410889]
[387.51086426 316.82061768]
[382.62493896 301.77276611]
[371.60720825 291.59384155]
[360.58950806 281.41494751]
[349.57177734 271.23605347]
[338.55407715 261.05715942]
[327.53637695 250.87826538]
[316.51864624 240.69935608]
[305.50094604 230.52046204]
[291.62658691 236.22154236]
[290.94876099 251.20622253]
[290.27096558 266.19088745]
[289.59313965 281.17556763]
[301.22747803 291.62432861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 276]
[7 275]
[8 274]
[9 273]
[10 181]
[11 180]
[12 179]
[13 178]
[15 176]
[16 175]
[17 174]
[18 173]
[19 172]
[20 171]
[21 170]
[22 169]
[24 71]
[25 70]
[27 68]
[28 67]
[35 66]
[36 65]
[37 64]
[38 63]
[39 62]
[40 61]
[41 60]
[42 59]
[43 58]
[44 57]
[45 56]
[73 108]
[74 107]
[79 104]
[80 103]
[81 102]
[83 100]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[112 154]
[113 153]
[114 152]
[115 151]
[119 148]
[120 147]
[121 146]
[122 145]
[123 144]
[124 143]
[126 141]
[127 140]
[128 139]
[130 137]
[131 136]
[155 166]
[156 165]
[157 164]
[190 209]
[191 208]
[192 207]
[193 206]
[194 205]
[195 204]
[197 202]
[211 272]
[212 271]
[213 270]
[214 269]
[215 268]
[216 267]
[217 266]
[218 265]
[220 263]
[221 262]
[222 261]
[223 260]
[224 259]
[241 256]
[242 255]
[243 254]
[244 253]
[245 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
