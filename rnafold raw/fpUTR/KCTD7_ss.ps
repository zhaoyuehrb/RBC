%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGGGCGCGAGCGGGUCGGCGUUGAGGGAGCCACCGCCCUCCCGCCUGCGCACUGCCUCUCGCCCCCCUCCGGCCAGCCCGCAGCCGGCCGCGUCAUGCCAGGCGCUGCUCGGCGGUAGGGAGUGCCCGGGGCCGCCGCCUCCGCCCGCCCGAAGCCGCGCCCACUGCCCAGAGCCAGAGGG\
) } def
/len { sequence length } bind def

/coor [
[39.39561844 165.76484680]
[29.31180954 176.86965942]
[14.33242512 176.08349609]
[5.46643972 163.98414612]
[9.22938538 149.46446228]
[-4.87083769 154.58146667]
[-18.97105980 159.69847107]
[-33.07128525 164.81547546]
[-47.17150497 169.93247986]
[-57.50442123 181.91336060]
[-72.10769653 178.98187256]
[-86.20792389 184.09887695]
[-100.30814362 189.21588135]
[-114.36441040 194.45242310]
[-128.37571716 199.80812073]
[-142.38700867 205.16380310]
[-156.35232544 210.63827515]
[-170.27067566 216.23112488]
[-181.95542908 232.63925171]
[-200.95912170 229.14137268]
[-214.67951965 235.20361328]
[-228.39990234 241.26585388]
[-242.12030029 247.32809448]
[-247.50494385 259.06497192]
[-259.07580566 263.82577515]
[-270.41000366 259.55859375]
[-284.23135376 265.38696289]
[-298.05273438 271.21536255]
[-311.87408447 277.04373169]
[-325.69543457 282.87213135]
[-329.09039307 298.01324463]
[-340.75894165 308.24188232]
[-356.21423340 309.62490845]
[-369.51345825 301.63052368]
[-375.54275513 287.33270264]
[-371.98376465 272.22930908]
[-360.20495605 262.12783813]
[-344.73553467 260.91256714]
[-331.52383423 269.05075073]
[-317.70245361 263.22238159]
[-303.88110352 257.39398193]
[-290.05975342 251.56561279]
[-276.23840332 245.73722839]
[-266.42776489 231.19841003]
[-248.18254089 233.60769653]
[-234.46215820 227.54545593]
[-220.74176025 221.48321533]
[-207.02136230 215.42097473]
[-204.19314575 205.57286072]
[-196.23625183 198.77389526]
[-185.63116455 197.46214294]
[-175.86351013 202.31278992]
[-161.94517517 196.71994019]
[-156.89941406 191.29618835]
[-147.74270630 191.15251160]
[-133.73141479 185.79681396]
[-119.72010803 180.44111633]
[-114.58296967 175.10382080]
[-105.42514801 175.11566162]
[-91.32492065 169.99865723]
[-77.22470093 164.88165283]
[-67.90032959 153.26676941]
[-52.28850937 155.83226013]
[-38.18828583 150.71525574]
[-24.08806229 145.59825134]
[-9.98783970 140.48124695]
[4.11238337 135.36424255]
[17.98273087 129.65342712]
[31.59820557 123.35906982]
[45.21368027 117.06472015]
[58.82915497 110.77037048]
[72.44462585 104.47602081]
[70.35156250 88.83409882]
[77.45355988 72.64883423]
[72.69734955 58.42285919]
[67.94113159 44.19688034]
[63.18491745 29.97090530]
[51.47109985 19.33619308]
[54.77356720 4.81231737]
[50.01735306 -9.41365910]
[36.36121750 -17.83324623]
[34.57257080 -33.77627945]
[46.02350998 -45.01262665]
[61.92985535 -42.92272568]
[70.08962250 -29.10976791]
[64.24333191 -14.16987419]
[68.99954224 0.05610274]
[80.37316895 9.67327690]
[77.41089630 25.21468925]
[82.16710663 39.44066620]
[86.92332458 53.66664505]
[91.67953491 67.89262390]
[106.67467499 67.51057434]
[110.70029449 53.06085587]
[114.72590637 38.61113739]
[118.75152588 24.16141891]
[122.77714539 9.71169853]
[114.79366302 -3.92793083]
[118.87393188 -19.19642639]
[132.59719849 -27.03525925]
[147.82170105 -22.79379082]
[155.51501465 -8.98840714]
[151.11282349 6.19040203]
[137.22686768 13.73731709]
[133.20124817 28.18703651]
[129.17562866 42.63675690]
[125.15000916 57.08647537]
[121.12438965 71.53619385]
[127.46992493 84.21677399]
[127.74574280 96.91665649]
[142.55097961 99.32604980]
[157.35620117 101.73544312]
[172.16143799 104.14483643]
[187.00544739 106.30247498]
[201.88394165 108.20774078]
[216.76245117 110.11300659]
[231.64096069 112.01828003]
[246.51947021 113.92354584]
[261.39797974 115.82881165]
[270.33096313 113.81195831]
[276.51214600 117.89483643]
[291.35614014 120.05247498]
[306.20016479 122.21012115]
[320.96975708 116.53833771]
[332.45172119 126.02590179]
[347.29574585 128.18353271]
[362.13973999 130.34118652]
[377.00152588 132.37271118]
[387.66116333 121.25161743]
[402.65008545 118.57101440]
[416.18325806 125.15258789]
[423.16238403 138.28384399]
[438.04089355 140.18910217]
[452.91940308 142.09437561]
[467.79791260 143.99963379]
[482.46908569 138.07788086]
[494.11050415 147.36909485]
[508.78167725 141.44732666]
[520.42309570 150.73855591]
[535.30157471 152.64382935]
[550.21307373 145.81886292]
[563.42077637 155.53933716]
[561.33782959 171.80566406]
[546.10687256 177.88442993]
[533.39630127 167.52232361]
[518.51782227 165.61706543]
[504.91085815 171.67510986]
[492.20523071 162.24760437]
[478.59826660 168.30564880]
[465.89263916 158.87814331]
[451.01412964 156.97288513]
[436.13562012 155.06761169]
[421.25711060 153.16233826]
[411.19439697 164.11129761]
[396.43948364 167.07043457]
[382.60968018 160.69944763]
[375.09628296 147.25122070]
[368.04611206 149.52543640]
[359.98211670 145.18519592]
[345.13809204 143.02754211]
[330.29409790 140.86990356]
[316.58621216 146.69601440]
[304.04251099 137.05412292]
[289.19851685 134.89648438]
[274.35449219 132.73884583]
[259.49270630 130.70732117]
[244.61419678 128.80204773]
[229.73568726 126.89678192]
[214.85719299 124.99151611]
[199.97868347 123.08625031]
[185.10017395 121.18098450]
[180.82479858 123.35565948]
[175.13525391 122.85166931]
[169.75204468 118.95006561]
[154.94680786 116.54067230]
[140.14158630 114.13127899]
[125.33634949 111.72188568]
[112.63619232 124.89296722]
[94.50801086 127.37099457]
[78.73898315 118.09149933]
[65.12350464 124.38584900]
[51.50802994 130.68019104]
[37.89255524 136.97454834]
[24.27708054 143.26889038]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 67]
[6 66]
[7 65]
[8 64]
[9 63]
[11 61]
[12 60]
[13 59]
[14 57]
[15 56]
[16 55]
[17 53]
[18 52]
[20 48]
[21 47]
[22 46]
[23 45]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[68 184]
[69 183]
[70 182]
[71 181]
[72 180]
[74 92]
[75 91]
[76 90]
[77 89]
[79 87]
[80 86]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[110 177]
[111 176]
[112 175]
[113 174]
[114 171]
[115 170]
[116 169]
[117 168]
[118 167]
[119 166]
[121 165]
[122 164]
[123 163]
[125 161]
[126 160]
[127 159]
[128 157]
[132 153]
[133 152]
[134 151]
[135 150]
[137 148]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
