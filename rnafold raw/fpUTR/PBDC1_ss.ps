%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGACGAGUCAAUCACCUCAGAUCUCUCAAGCAGUCCAGCCUACGCAACAGUACUCCACCUCUGCGCCUGUGCGGGGAGGGUAAGGCGGGGCCAGCAACUUCCUCAGCUGGAGGGAGAGCGCACGGUGGAGCCGCCAGUUGAGAAGGACUCUGAUCCGGCUCAGCUUUCCAAUCAGCUGCGGAAGGAGCCACGCUUUCGGGGGUUGCAAG\
) } def
/len { sequence length } bind def

/coor [
[10.32692528 268.71002197]
[-5.32404137 267.96249390]
[-12.00423622 281.39285278]
[-18.68443108 294.82324219]
[-19.70429230 303.90054321]
[-25.56536865 308.40274048]
[-32.44478226 321.73214722]
[-39.32419205 335.06158447]
[-39.07641220 340.27557373]
[-40.69186020 344.62799072]
[-43.53034973 347.55340576]
[-46.82003784 348.82238770]
[-54.28777695 361.83132935]
[-61.75551987 374.84030151]
[-57.38578796 390.02847290]
[-65.10858917 403.81738281]
[-80.34212494 408.02630615]
[-94.04860687 400.15814209]
[-98.09622192 384.88095093]
[-90.08359528 371.25842285]
[-74.76447296 367.37255859]
[-67.29673004 354.36358643]
[-59.82899094 341.35464478]
[-52.65362167 328.18215942]
[-45.77421188 314.85275269]
[-38.89479828 301.52331543]
[-32.11480713 288.14303589]
[-25.43461227 274.71267700]
[-18.75441742 261.28228760]
[-21.28211975 259.09356689]
[-23.59952354 256.68331909]
[-36.66370773 264.05401611]
[-40.66351318 279.34378052]
[-54.34531403 287.25476074]
[-69.59194183 283.09353638]
[-77.35784149 269.32885742]
[-73.03564453 254.12707520]
[-59.18963242 246.50714111]
[-44.03439713 250.98982239]
[-30.97021294 243.61912537]
[-32.42398071 227.05741882]
[-26.39074135 211.49140930]
[-14.05367374 200.14219666]
[2.09294128 195.38706970]
[18.74787331 198.26171875]
[27.34643745 185.97087097]
[35.94500351 173.68003845]
[44.54356766 161.38920593]
[53.14213181 149.09835815]
[52.78758240 146.31764221]
[53.51315308 143.22892761]
[55.44166946 140.24291992]
[58.54515076 137.80715942]
[62.63641357 136.35266113]
[71.95129395 124.59541321]
[81.26618195 112.83815765]
[90.58106232 101.08090973]
[86.99707031 101.25289154]
[83.40488434 101.29466248]
[70.23241425 94.11930084]
[57.05993652 86.94393158]
[43.88745880 79.76856995]
[30.71498299 72.59320068]
[14.89495659 72.78640747]
[7.41950846 59.90359116]
[-5.75296736 52.72822571]
[-18.92544365 45.55286026]
[-35.29718781 46.50046158]
[-44.07636642 32.64917755]
[-36.23170471 18.24801826]
[-19.83312416 18.11166382]
[-11.75007629 32.38038254]
[1.42239904 39.55575180]
[14.59487534 46.73111725]
[29.47271729 46.02468109]
[37.89035034 59.42072678]
[51.06282425 66.59609222]
[64.23529816 73.77146149]
[77.40777588 80.94682312]
[90.58025360 88.12219238]
[105.57360077 87.67558289]
[111.19410706 80.47504425]
[118.54473877 79.70692444]
[131.38368225 71.95053101]
[144.22262573 64.19414520]
[157.06155396 56.43775177]
[169.90049744 48.68135834]
[182.73944092 40.92496872]
[190.55050659 27.16641617]
[205.44505310 27.20781898]
[218.28399658 19.45142746]
[231.12294006 11.69503593]
[230.62234497 2.00588202]
[233.66677856 -7.14516306]
[239.79803467 -14.51433086]
[248.14143372 -19.11628151]
[257.53045654 -20.35575485]
[266.66983032 -18.10428238]
[274.31408691 -12.71209431]
[287.59191895 -19.69054604]
[300.86978149 -26.66899872]
[314.14761353 -33.64744949]
[327.42547607 -40.62590408]
[336.04162598 -53.89513779]
[350.90728760 -52.96726990]
[364.18515015 -59.94572449]
[377.46298218 -66.92417908]
[390.74084473 -73.90262604]
[404.01867676 -80.88108063]
[417.29650879 -87.85953522]
[430.57437134 -94.83798218]
[435.36080933 -109.66119385]
[448.92584229 -116.54919434]
[463.02801514 -111.89469147]
[476.30587769 -118.87314606]
[489.58370972 -125.85159302]
[502.86157227 -132.83004761]
[516.13940430 -139.80850220]
[529.41723633 -146.78695679]
[542.69512939 -153.76541138]
[555.81378174 -161.03863525]
[568.76678467 -168.60301208]
[574.59918213 -175.63301086]
[581.96942139 -176.18194580]
[595.03363037 -183.55262756]
[608.09783936 -190.92332458]
[617.55596924 -208.72515869]
[636.86462402 -207.69383240]
[649.70355225 -215.45021057]
[662.54248047 -223.20660400]
[675.38146973 -230.96299744]
[688.16229248 -238.81475830]
[700.88433838 -246.76144409]
[699.16455078 -261.92736816]
[704.20336914 -276.33474731]
[715.00042725 -287.12298584]
[729.41192627 -292.15008545]
[744.57647705 -290.41787720]
[757.48303223 -282.27035522]
[765.56915283 -269.32516479]
[767.22918701 -254.15258789]
[762.13360596 -239.76515198]
[751.29418945 -229.01951599]
[736.86297607 -224.04920959]
[721.70544434 -225.84109497]
[708.83099365 -234.03939819]
[696.10894775 -226.09271240]
[692.10131836 -219.88301086]
[683.13781738 -218.12405396]
[670.29888916 -210.36767578]
[657.45996094 -202.61128235]
[644.62103271 -194.85488892]
[643.07507324 -184.75424194]
[636.07763672 -177.00926208]
[625.76013184 -174.33912659]
[615.46850586 -177.85913086]
[602.40429688 -170.48844910]
[589.34014893 -163.11775208]
[576.33117676 -155.65000916]
[563.37817383 -148.08563232]
[562.13372803 -144.78659058]
[559.22955322 -141.92640686]
[554.88922119 -140.27859497]
[549.67358398 -140.48756409]
[536.39569092 -133.50910950]
[523.11785889 -126.53065491]
[509.84002686 -119.55220032]
[496.56216431 -112.57374573]
[483.28433228 -105.59529877]
[470.00646973 -98.61684418]
[465.84243774 -84.36214447]
[452.47622681 -77.09585571]
[437.55282593 -81.56013489]
[424.27496338 -74.58168793]
[410.99713135 -67.60323334]
[397.71926880 -60.62478256]
[384.44143677 -53.64632797]
[371.16360474 -46.66787720]
[357.88574219 -39.68942261]
[350.21932983 -26.91933441]
[334.40393066 -27.34805679]
[321.12606812 -20.36960411]
[307.84823608 -13.39115238]
[294.57037354 -6.41270018]
[281.29254150 0.56575215]
[276.88433838 20.52469444]
[258.92489624 30.88586044]
[238.87933350 24.53397560]
[226.04039001 32.29036713]
[213.20144653 40.04676056]
[206.30870056 53.25052261]
[190.49583435 53.76390839]
[177.65689087 61.52029800]
[164.81794739 69.27668762]
[151.97900391 77.03308105]
[139.14007568 84.78947449]
[126.30113220 92.54586792]
[113.52028656 100.39762115]
[102.33831024 110.39579010]
[93.02342987 122.15304565]
[83.70854950 133.91029358]
[74.39366150 145.66754150]
[65.43296814 157.69692993]
[56.83440399 169.98776245]
[48.23583984 182.27859497]
[39.63727570 194.56944275]
[31.03871155 206.86027527]
[39.16675568 220.57188416]
[40.82178497 236.37094116]
[35.74645996 251.36666870]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 29]
[3 28]
[4 27]
[6 26]
[7 25]
[8 24]
[12 23]
[13 22]
[14 21]
[31 40]
[32 39]
[45 207]
[46 206]
[47 205]
[48 204]
[49 203]
[54 202]
[55 201]
[56 200]
[57 199]
[59 80]
[60 79]
[61 78]
[62 77]
[63 76]
[65 74]
[66 73]
[67 72]
[81 198]
[83 197]
[84 196]
[85 195]
[86 194]
[87 193]
[88 192]
[90 190]
[91 189]
[92 188]
[99 185]
[100 184]
[101 183]
[102 182]
[103 181]
[105 179]
[106 178]
[107 177]
[108 176]
[109 175]
[110 174]
[111 173]
[114 170]
[115 169]
[116 168]
[117 167]
[118 166]
[119 165]
[120 164]
[121 160]
[122 159]
[124 158]
[125 157]
[126 156]
[128 152]
[129 151]
[130 150]
[131 149]
[132 147]
[133 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
