%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGAGGGCGGGCGGACGCGGGAGCUGCGGACGUGAGGCAUGAGCGGCGCCCUCCUCCGGCCCGCGAGCGUCCUGCUGGUUCCCCGAGCGAGGGUCUCGCGGCGCGGGGCCUAGCGGAGGGCAUCGAAGGCCUCCGCGUGCGCACGGGUUGCUGCGGCCGCGCCGGGCGCCGGGGAGGGCGGCGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[131.86470032 208.41874695]
[125.47576904 222.55950928]
[111.97864532 230.21505737]
[96.56324005 228.44165039]
[85.15709686 217.92121887]
[82.14610291 202.69908142]
[88.68804932 188.62846375]
[102.26742554 181.11978149]
[103.98173523 166.21806335]
[105.69603729 151.31636047]
[107.41033936 136.41464233]
[109.12464905 121.51291656]
[95.61772919 114.98887634]
[85.01112366 125.59547424]
[74.40452576 136.20207214]
[74.23583221 151.77799988]
[63.32813263 162.38349915]
[48.47991180 162.12669373]
[37.87331009 172.73329163]
[27.26670837 183.33988953]
[16.66010666 193.94648743]
[6.05350542 204.55310059]
[-0.87104481 220.02845764]
[-17.65853310 217.65853882]
[-20.02846146 200.87104797]
[-4.55309629 193.94648743]
[6.05350542 183.33988953]
[16.66010666 172.73329163]
[27.26670837 162.12669373]
[37.87331009 151.52008057]
[37.61649704 136.67187500]
[48.22200394 125.76416779]
[63.79792404 125.59547424]
[74.40452576 114.98887634]
[85.01112366 104.38227081]
[70.39424896 107.75078583]
[55.95916367 103.67300415]
[45.26527023 93.15441895]
[40.94945908 78.78870392]
[44.07592773 64.11814880]
[53.87375259 52.76021194]
[67.92698669 47.51553345]
[82.77038574 49.67734146]
[94.74388123 58.71257782]
[100.89504242 72.39334106]
[99.70751953 87.34506989]
[108.64300537 75.29695892]
[110.64910126 59.60345078]
[124.44538879 53.98991776]
[133.38087463 41.94180298]
[142.31636047 29.89369011]
[151.25186157 17.84557724]
[160.18734741 5.79746437]
[169.12283325 -6.25064850]
[178.05831909 -18.29876137]
[186.99382019 -30.34687424]
[189.59863281 -39.11921692]
[196.17538452 -42.51741409]
[205.30680847 -54.41771317]
[214.43823242 -66.31801605]
[223.56964111 -78.21831512]
[232.70106506 -90.11861420]
[241.73483276 -102.09322357]
[250.67031860 -114.14133453]
[253.27514648 -122.91367340]
[259.85189819 -126.31187439]
[268.98330688 -138.21217346]
[271.73132324 -146.94071960]
[278.36279297 -150.23085022]
[287.68768311 -161.98016357]
[297.01260376 -173.72946167]
[306.33749390 -185.47875977]
[308.60821533 -203.74488831]
[325.15576172 -209.56774902]
[334.28717041 -221.46804810]
[343.41860962 -233.36836243]
[352.55001831 -245.26866150]
[355.29803467 -253.99720764]
[361.92950439 -257.28735352]
[371.25439453 -269.03665161]
[380.57931519 -280.78594971]
[378.96679688 -296.27908325]
[388.59094238 -308.06170654]
[403.37121582 -309.50354004]
[412.69613647 -321.25283813]
[422.02102661 -333.00213623]
[431.34594727 -344.75143433]
[433.86444092 -360.37091064]
[447.83700562 -365.53002930]
[457.16192627 -377.27932739]
[466.48681641 -389.02862549]
[465.55020142 -411.35821533]
[483.51358032 -423.61880493]
[486.91973877 -438.22695923]
[490.32586670 -452.83511353]
[493.73202515 -467.44326782]
[497.13815308 -482.05142212]
[500.54431152 -496.65957642]
[503.95043945 -511.26773071]
[507.35659790 -525.87591553]
[510.76272583 -540.48406982]
[508.47103882 -557.28240967]
[523.97851562 -564.13476562]
[534.85595703 -551.13031006]
[525.37091064 -537.07788086]
[521.96472168 -522.46972656]
[518.55859375 -507.86160278]
[515.15246582 -493.25344849]
[511.74630737 -478.64529419]
[508.34017944 -464.03713989]
[504.93402100 -449.42898560]
[501.52789307 -434.82083130]
[498.12173462 -420.21264648]
[498.82125854 -419.73974609]
[499.50222778 -419.24041748]
[512.10894775 -427.36880493]
[524.71563721 -435.49716187]
[537.32238770 -443.62554932]
[549.92913818 -451.75390625]
[562.53582764 -459.88229370]
[575.14257812 -468.01068115]
[582.54809570 -481.99166870]
[597.43750000 -482.38565063]
[600.52856445 -497.88473511]
[613.71997070 -506.58889771]
[629.18548584 -503.33413696]
[637.74969482 -490.05145264]
[634.33160400 -474.62121582]
[620.95910645 -466.19790649]
[605.56591797 -469.77893066]
[599.06207275 -456.37933350]
[583.27093506 -455.40393066]
[570.66424561 -447.27557373]
[558.05749512 -439.14718628]
[545.45074463 -431.01882935]
[532.84405518 -422.89044189]
[520.23730469 -414.76208496]
[507.63058472 -406.63369751]
[507.44396973 -394.86404419]
[501.19149780 -384.69818115]
[490.48181152 -379.07015991]
[478.23614502 -379.70373535]
[468.91122437 -367.95443726]
[459.58630371 -356.20513916]
[457.73480225 -341.42605591]
[443.09524536 -335.42654419]
[433.77032471 -323.67721558]
[424.44543457 -311.92791748]
[415.12051392 -300.17861938]
[417.07260132 -285.45706177]
[407.78320312 -273.40875244]
[392.32861328 -271.46102905]
[383.00372314 -259.71173096]
[373.67880249 -247.96243286]
[364.45031738 -236.13723755]
[355.31890869 -224.23693848]
[346.18746948 -212.33663940]
[337.05606079 -200.43634033]
[338.32180786 -188.39604187]
[330.79779053 -178.40452576]
[318.08682251 -176.15385437]
[308.76190186 -164.40455627]
[299.43698120 -152.65524292]
[290.11209106 -140.90594482]
[280.88360596 -129.08074951]
[271.75219727 -117.18045044]
[262.71841431 -105.20584106]
[253.78294373 -93.15773010]
[252.32125854 -85.90068054]
[244.60136414 -80.98719025]
[235.46994019 -69.08689117]
[226.33853149 -57.18659210]
[217.20710754 -45.28629303]
[208.07568359 -33.38599396]
[199.04193115 -21.41138458]
[190.10643005 -9.36327171]
[181.17094421 2.68484092]
[172.23545837 14.73295403]
[163.29997253 26.78106689]
[154.36447144 38.82918167]
[145.42898560 50.87729263]
[136.49349976 62.92540741]
[135.12652588 77.75714874]
[120.69111633 84.23245239]
[111.75563049 96.28056335]
[122.26632690 105.23767853]
[124.02635956 123.22722626]
[122.31205750 138.12893677]
[120.59775543 153.03065491]
[118.88344574 167.93237305]
[117.16914368 182.83409119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 191]
[9 190]
[10 189]
[11 188]
[12 187]
[13 35]
[14 34]
[15 33]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[46 185]
[47 184]
[49 182]
[50 181]
[51 180]
[52 179]
[53 178]
[54 177]
[55 176]
[56 175]
[58 174]
[59 173]
[60 172]
[61 171]
[62 170]
[63 168]
[64 167]
[66 166]
[67 165]
[69 164]
[70 163]
[71 162]
[72 161]
[74 158]
[75 157]
[76 156]
[77 155]
[79 154]
[80 153]
[81 152]
[84 149]
[85 148]
[86 147]
[87 146]
[89 144]
[90 143]
[91 142]
[93 113]
[94 112]
[95 111]
[96 110]
[97 109]
[98 108]
[99 107]
[100 106]
[101 105]
[115 138]
[116 137]
[117 136]
[118 135]
[119 134]
[120 133]
[121 132]
[123 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
