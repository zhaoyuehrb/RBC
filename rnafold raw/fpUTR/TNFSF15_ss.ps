%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAGGGAAGGAGGAGACUGAGUGAUUAAGUCACCCACUGUGAGAGCUGGUCUUCUAUUUAAUGGGGGCUCUCUCUGCCCAGGAGUCAGAGGUGCCUCCAGGAGCAGCAGGAGC\
) } def
/len { sequence length } bind def

/coor [
[148.32038879 148.93266296]
[137.62199402 157.56607056]
[125.42014313 163.89900208]
[112.20245361 167.67840576]
[98.49713135 168.75323486]
[84.85186005 167.08055115]
[71.81195068 162.72718811]
[59.89848328 155.86711121]
[49.58755875 146.77447510]
[41.29122162 135.81263733]
[35.34100342 123.41965485]
[31.97469330 110.09076691]
[31.32681465 96.35863495]
[33.42325592 82.77202606]
[19.39801216 77.45294952]
[5.37276888 72.13387299]
[-8.65247440 66.81480408]
[-22.67771912 61.49572754]
[-36.70296097 56.17665482]
[-50.72820663 50.85758209]
[-64.75344849 45.53850937]
[-74.02095795 45.40584183]
[-79.08065033 39.88376236]
[-92.95803070 34.19005585]
[-106.83541107 28.49635124]
[-121.27068329 34.34962463]
[-135.26321411 28.37771034]
[-140.75445557 14.57981873]
[-154.63183594 8.88611317]
[-168.50921631 3.19240713]
[-182.46179199 -2.31447864]
[-196.48703003 -7.63355207]
[-210.51226807 -12.95262527]
[-225.67317200 -7.70604324]
[-239.15016174 -16.40951538]
[-240.60484314 -32.38648224]
[-228.92131042 -43.38078308]
[-213.06216431 -40.95853043]
[-205.19320679 -26.97786903]
[-191.16795349 -21.65879631]
[-177.14271545 -16.33972168]
[-169.67546082 -16.91758728]
[-162.81550598 -10.68497467]
[-148.93812561 -4.99126863]
[-135.06074524 0.70243680]
[-121.46100616 -5.26267672]
[-107.30625916 0.31386206]
[-101.14170837 14.61896896]
[-87.26432800 20.31267548]
[-73.38694763 26.00638008]
[-59.43437576 31.51326561]
[-45.40913391 36.83234024]
[-31.38388824 42.15141296]
[-17.35864449 47.47048569]
[-3.33340120 52.78955841]
[10.69184208 58.10863113]
[24.71708679 63.42770386]
[38.74232864 68.74678040]
[47.78689957 55.24446487]
[59.74742889 44.24162292]
[73.95595551 36.35274124]
[89.61897278 32.01838303]
[105.86174011 31.48061562]
[121.77715302 34.76947403]
[136.47636414 41.70127869]
[149.13847351 51.88890839]
[159.05632019 64.76341248]
[165.67604065 79.60578918]
[168.62792969 95.58712769]
[167.74713135 111.81491089]
[182.15490723 115.98817444]
[196.56266785 120.16143036]
[210.97044373 124.33469391]
[225.37821960 128.50796509]
[239.10284424 121.14097595]
[253.65492249 125.57849884]
[260.59362793 138.70822144]
[275.00140381 142.88148499]
[289.40917969 147.05474854]
[303.81695557 151.22801208]
[318.27944946 155.20747375]
[332.79406738 158.99241638]
[348.10003662 154.98767090]
[358.46313477 165.68606567]
[372.97775269 169.47099304]
[387.49237061 173.25593567]
[402.00698853 177.04087830]
[417.31295776 173.03613281]
[427.67605591 183.73452759]
[442.19067383 187.51945496]
[457.85003662 182.64949036]
[469.71200562 193.97315979]
[465.57400513 209.84164429]
[449.69287109 213.93081665]
[438.40573120 202.03408813]
[423.89111328 198.24914551]
[409.62332153 202.52461243]
[398.22204590 191.55549622]
[383.70742798 187.77055359]
[369.19281006 183.98561096]
[354.67819214 180.20068359]
[340.41040039 184.47615051]
[329.00912476 173.50703430]
[314.49450684 169.72209167]
[307.13223267 171.09710693]
[299.64367676 165.63578796]
[285.23593140 161.46252441]
[270.82815552 157.28926086]
[256.42037964 153.11599731]
[243.53845215 160.50460815]
[228.86747742 156.47756958]
[221.20495605 142.91572571]
[206.79718018 138.74246216]
[192.38941956 134.56919861]
[177.98164368 130.39595032]
[163.57386780 126.22267914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 58]
[15 57]
[16 56]
[17 55]
[18 54]
[19 53]
[20 52]
[21 51]
[23 50]
[24 49]
[25 48]
[28 45]
[29 44]
[30 43]
[31 41]
[32 40]
[33 39]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
[77 109]
[78 108]
[79 107]
[80 106]
[81 104]
[82 103]
[84 101]
[85 100]
[86 99]
[87 98]
[89 96]
[90 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
