%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUUUCCUUGGAGACCGAGACGCUGGCGAAAGCAUCGGGUCUCGGGACUUCUGAGUGGCCUGGGUUACCGCGCGAUCUACACUGAGACAAGGAAGUUGGAAAAGCCGAGUAGUUAUACCAGAAGAUCAGGGUCUCACAGACUCGCAACUUCUCUUCCAUUUUCCCCAAUGGCGC\
) } def
/len { sequence length } bind def

/coor [
[107.21095276 270.77191162]
[107.21095276 255.77191162]
[107.21095276 240.77191162]
[107.21095276 225.77191162]
[107.21095276 210.77191162]
[99.33811951 204.19618225]
[96.33812714 194.15710449]
[99.43952179 183.91880798]
[107.84463501 176.95098877]
[108.38002014 161.96055603]
[108.91540527 146.97010803]
[109.45079041 131.97966003]
[100.16959381 132.14872742]
[91.54175568 129.77328491]
[84.22383118 125.22685242]
[78.71815491 119.04008484]
[65.30477142 125.75434113]
[51.89139175 132.46859741]
[38.47801590 139.18286133]
[25.06463623 145.89710999]
[11.65125656 152.61137390]
[-1.76212263 159.32562256]
[-8.06049347 165.98704529]
[-15.47537613 166.03761292]
[-29.00646210 172.51138306]
[-42.53754807 178.98515320]
[-55.95092392 185.69941711]
[-69.24232483 192.65202332]
[-77.56443024 206.78265381]
[-93.95838928 206.37026978]
[-101.55950928 191.83908081]
[-92.54840088 178.13755798]
[-76.19493103 179.36062622]
[-62.90353012 172.40802002]
[-60.64015198 168.16912842]
[-55.67382050 165.32351685]
[-49.01131821 165.45407104]
[-35.48023605 158.98030090]
[-21.94915009 152.50653076]
[-8.47638130 145.91224670]
[4.93699837 139.19799805]
[18.35037804 132.48373413]
[31.76375580 125.76947784]
[45.17713547 119.05522156]
[58.59051514 112.34095764]
[72.00389099 105.62670135]
[71.45669556 100.84951782]
[71.71881104 96.04825592]
[72.78281403 91.35903168]
[74.61851501 86.91481018]
[77.17388916 82.84161377]
[67.97181702 70.99585724]
[58.76975250 59.15009689]
[44.19347000 52.99847412]
[42.49593353 38.20091629]
[33.29386902 26.35515976]
[24.09180260 14.50940132]
[14.88973618 2.66364336]
[5.06682539 -8.67260075]
[-5.34876919 -19.46682930]
[-20.49911499 -24.02507210]
[-23.76870918 -38.55638504]
[-34.18430328 -49.35061264]
[-44.59989929 -60.14484406]
[-60.50274277 -64.14878082]
[-64.72577667 -79.99485779]
[-52.92469788 -91.38198090]
[-37.23944855 -86.59606171]
[-33.80566788 -70.56044006]
[-23.39007568 -59.76620865]
[-12.97448063 -48.97197723]
[1.43087316 -45.18581009]
[5.44546032 -29.88242531]
[15.86105537 -19.08819580]
[17.42475510 -34.00646591]
[28.97445488 -43.57748795]
[43.92357635 -42.34307861]
[53.74691391 -31.00720215]
[52.84239578 -16.03450012]
[41.72585678 -5.96362305]
[26.73549461 -6.53842258]
[35.93756104 5.30733538]
[45.13962555 17.15309334]
[54.34169388 28.99885178]
[68.25978851 34.30318832]
[70.61550903 49.94802856]
[79.81758118 61.79378891]
[89.01964569 73.63954926]
[104.33470154 70.56376648]
[119.63247681 76.07183838]
[130.27865601 89.19387817]
[132.69474792 106.56278992]
[147.57780457 104.69341278]
[162.46086121 102.82404327]
[177.34391785 100.95466614]
[192.22697449 99.08529663]
[204.95530701 89.68847656]
[218.54762268 95.77931976]
[233.43067932 93.90995026]
[248.31373596 92.04057312]
[263.19677734 90.17120361]
[278.07986450 88.30182648]
[280.11437988 82.24333191]
[283.58361816 76.91861725]
[288.25082397 72.65814972]
[293.80557251 69.72094727]
[299.88458252 68.27882385]
[306.09515381 68.40647125]
[312.04077148 70.07778168]
[317.34634399 73.16866302]
[329.51300049 64.39526367]
[341.67965698 55.62186432]
[347.90603638 40.45070648]
[364.19183350 38.52579117]
[373.78356934 51.82730865]
[366.81411743 66.67179871]
[350.45303345 67.78852081]
[338.28640747 76.56192017]
[326.11975098 85.33531952]
[326.67370605 87.36412811]
[327.04959106 89.43334198]
[341.81124878 92.09663391]
[356.57293701 94.75993347]
[371.33459473 97.42323303]
[386.09625244 100.08653259]
[396.05249023 88.47528839]
[410.38916016 83.43975830]
[425.22280884 86.23781586]
[436.58822632 96.01959991]
[441.49838257 110.08217621]
[456.26004028 112.74546814]
[471.02172852 115.40876770]
[485.78338623 118.07206726]
[500.54504395 120.73536682]
[515.30670166 123.39866638]
[531.96771240 120.26068115]
[539.59533691 135.40190125]
[527.15734863 146.92289734]
[512.64343262 138.16032410]
[497.88174438 135.49703979]
[483.12008667 132.83374023]
[468.35842896 130.17044067]
[453.59674072 127.50714111]
[438.83508301 124.84384155]
[429.32015991 136.30384827]
[415.25296021 141.49707031]
[400.37673950 138.93487549]
[388.70373535 129.20669556]
[383.43295288 114.84819794]
[368.67129517 112.18489838]
[353.90963745 109.52159882]
[339.14794922 106.85830688]
[324.38629150 104.19500732]
[302.20617676 117.50154114]
[279.94921875 103.18489075]
[265.06616211 105.05426025]
[250.18310547 106.92362976]
[235.30004883 108.79300690]
[220.41699219 110.66237640]
[208.75320435 119.92549133]
[194.09635925 113.96835327]
[179.21328735 115.83773041]
[164.33023071 117.70709991]
[149.44717407 119.57647705]
[134.56411743 121.44584656]
[124.44123840 132.51504517]
[123.90585327 147.50549316]
[123.37046814 162.49594116]
[122.83508301 177.48637390]
[133.09600830 194.81329346]
[122.21095276 210.77191162]
[122.21095276 225.77191162]
[122.21095276 240.77191162]
[122.21095276 255.77191162]
[122.21095276 270.77191162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[3 173]
[4 172]
[5 171]
[9 169]
[10 168]
[11 167]
[12 166]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[21 41]
[22 40]
[24 39]
[25 38]
[26 37]
[27 34]
[28 33]
[51 88]
[52 87]
[53 86]
[55 84]
[56 83]
[57 82]
[58 81]
[59 74]
[60 73]
[62 71]
[63 70]
[64 69]
[92 165]
[93 164]
[94 163]
[95 162]
[96 161]
[98 159]
[99 158]
[100 157]
[101 156]
[102 155]
[110 119]
[111 118]
[112 117]
[121 153]
[122 152]
[123 151]
[124 150]
[125 149]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
[135 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
