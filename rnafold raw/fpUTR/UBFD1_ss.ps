%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:58:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGACCCGCCCCCUUCAGCUUGGGAAAGCGAAAGCGUGGCAGGGGCCGGACCUGGGAGCGGAGGAGGCGGGUCUCCAUAGAAACCUCCACCUGUUUCCGGCCGGGCUGUGAGAGAUUAGGGGCUGCUGCGGGGGCCAAUCUCAGCCAGCUCGCCUCUUCCCAGCGGCCUCUGCGGGAGCGGUGGGUGUUGUACACAAUCAUC\
) } def
/len { sequence length } bind def

/coor [
[133.90180969 282.73760986]
[146.83566284 274.83245850]
[136.71110535 263.90805054]
[141.53463745 248.84007263]
[138.53717041 234.14262390]
[135.53970337 219.44515991]
[132.54223633 204.74771118]
[129.54476929 190.05026245]
[126.54729462 175.35279846]
[123.54982758 160.65534973]
[120.21201324 146.03143311]
[116.53565216 131.48892212]
[112.85929108 116.94642639]
[98.26164246 113.49555206]
[88.46267700 124.85250092]
[78.66371155 136.20944214]
[75.42404175 144.75709534]
[68.62416077 147.66481018]
[58.65061188 158.86875916]
[48.67707062 170.07270813]
[38.70352554 181.27665710]
[35.91672897 197.43727112]
[20.43640900 202.84947205]
[8.18739796 191.94563293]
[11.77042484 175.94268799]
[27.49958038 171.30311584]
[37.47312164 160.09916687]
[47.44666672 148.89521790]
[57.42021179 137.69126892]
[67.30676270 126.41048431]
[77.10572815 115.05353546]
[86.90469360 103.69658661]
[72.22982025 106.80274200]
[59.26040268 99.26656342]
[54.69256592 84.97898102]
[60.88470459 71.31671906]
[74.63979340 65.33362579]
[88.85606384 70.11878967]
[96.19390106 83.20365143]
[98.27639008 68.34890747]
[100.35887909 53.49417114]
[102.44136810 38.63943481]
[104.52385712 23.78469467]
[106.60634613 8.92995739]
[108.68883514 -5.92478085]
[110.77131653 -20.77951813]
[112.85380554 -35.63425827]
[114.93629456 -50.48899460]
[112.97219086 -55.33904266]
[113.06036377 -59.99123764]
[114.78062439 -63.69567108]
[117.47568512 -65.97856903]
[120.24534607 -80.72064972]
[123.01501465 -95.46273041]
[125.78467560 -110.20481110]
[128.55433655 -124.94689178]
[131.32400513 -139.68898010]
[129.49331665 -146.05270386]
[130.93872070 -151.55720520]
[134.41424561 -154.84132385]
[137.63880920 -169.49063110]
[140.86335754 -184.13993835]
[137.63880920 -198.78924561]
[128.56118774 -210.73063660]
[119.48357391 -222.67204285]
[110.40596008 -234.61343384]
[101.32835388 -246.55482483]
[92.25074005 -258.49621582]
[83.17312622 -270.43762207]
[74.09551239 -282.37902832]
[65.01789856 -294.32040405]
[55.94028473 -306.26181030]
[41.47045517 -301.74520874]
[26.32863235 -302.45303345]
[12.34326839 -308.29986572]
[1.20316267 -318.57965088]
[-5.74646235 -332.05105591]
[-7.66640615 -347.08731079]
[-4.32482576 -361.87277222]
[3.87476659 -374.62197876]
[15.94223022 -383.79544067]
[30.42036057 -388.28536987]
[45.56085205 -387.54962158]
[59.53541565 -381.67703247]
[70.65655518 -371.37673950]
[77.58134460 -357.89257812]
[79.47357941 -342.85278320]
[76.10475159 -328.07351685]
[67.88168335 -315.33941650]
[76.95929718 -303.39804077]
[86.03690338 -291.45663452]
[95.11451721 -279.51522827]
[104.19213104 -267.57385254]
[113.26974487 -255.63244629]
[122.34735870 -243.69105530]
[131.42497253 -231.74964905]
[140.50257874 -219.80825806]
[149.58020020 -207.86686707]
[164.55146790 -206.93890381]
[175.03425598 -217.66789246]
[185.51702881 -228.39689636]
[189.27928162 -236.72775269]
[196.24601746 -239.20922852]
[206.89358521 -249.77471924]
[217.54113770 -260.34020996]
[228.18870544 -270.90570068]
[238.83625793 -281.47116089]
[249.48381042 -292.03665161]
[247.26287842 -307.28045654]
[254.36085510 -320.75161743]
[267.87033081 -327.38171387]
[282.51806641 -324.81628418]
[293.16561890 -335.38177490]
[303.81320190 -345.94726562]
[314.46075439 -356.51272583]
[325.10830688 -367.07821655]
[335.75585938 -377.64370728]
[337.12738037 -382.69342041]
[340.01296997 -386.34365845]
[343.62426758 -388.25164795]
[347.15133667 -388.43807983]
[358.27777100 -398.49801636]
[369.40423584 -408.55795288]
[380.53067017 -418.61788940]
[385.57800293 -433.61239624]
[400.20773315 -436.40887451]
[404.72546387 -452.17346191]
[420.70019531 -455.88018799]
[431.69848633 -443.71591187]
[426.40625000 -428.19418335]
[410.26766968 -425.28244019]
[406.01617432 -411.00747681]
[390.59060669 -407.49145508]
[379.46417236 -397.43151855]
[368.33770752 -387.37158203]
[357.21127319 -377.31164551]
[346.32135010 -366.99615479]
[335.67379761 -356.43066406]
[325.02624512 -345.86517334]
[314.37866211 -335.29968262]
[303.73110962 -324.73422241]
[293.08355713 -314.16873169]
[295.53558350 -299.50155640]
[288.80114746 -286.04379272]
[275.27545166 -279.05026245]
[260.04931641 -281.38909912]
[249.40174866 -270.82360840]
[238.75418091 -260.25811768]
[228.10662842 -249.69264221]
[217.45906067 -239.12715149]
[206.81150818 -228.56167603]
[196.24601746 -217.91410828]
[185.76324463 -207.18511963]
[175.28045654 -196.45613098]
[155.51266479 -180.91539001]
[152.28811646 -166.26606750]
[149.06355286 -151.61676025]
[146.06608582 -136.91931152]
[143.29641724 -122.17723083]
[140.52676392 -107.43515015]
[137.75709534 -92.69306946]
[134.98742676 -77.95098877]
[132.21775818 -63.20890427]
[129.79103088 -48.40650558]
[127.70854950 -33.55176926]
[125.62606049 -18.69703102]
[123.54357147 -3.84229279]
[121.46108246 11.01244545]
[119.37859344 25.86718369]
[117.29610443 40.72192001]
[115.21361542 55.57666016]
[113.13113403 70.43139648]
[111.04864502 85.28613281]
[127.40179443 113.27006531]
[131.07815552 127.81256866]
[134.75451660 142.35507202]
[138.40344238 146.10554504]
[140.07713318 150.44712830]
[139.88175964 154.52684021]
[138.24728394 157.65788269]
[141.24475098 172.35533142]
[144.24221802 187.05279541]
[147.23968506 201.75024414]
[150.23716736 216.44769287]
[153.23463440 231.14515686]
[156.23210144 245.84260559]
[166.57104492 257.81826782]
[161.53311157 271.83499146]
[176.52966309 274.04388428]
[189.86485291 281.25143433]
[199.92839050 292.58728027]
[205.50505066 306.68252563]
[205.92141724 321.83517456]
[201.12722778 336.21542358]
[191.70140076 348.08679199]
[178.78215027 356.01577759]
[163.92953491 359.04489136]
[148.93707275 356.80834961]
[135.61518860 349.57626343]
[125.57257080 338.22189331]
[120.02189636 324.11639404]
[119.63344574 308.96301270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[4 186]
[5 185]
[6 184]
[7 183]
[8 182]
[9 181]
[10 180]
[11 176]
[12 175]
[13 174]
[14 32]
[15 31]
[16 30]
[18 29]
[19 28]
[20 27]
[21 26]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[44 168]
[45 167]
[46 166]
[47 165]
[48 164]
[52 163]
[53 162]
[54 161]
[55 160]
[56 159]
[57 158]
[60 157]
[61 156]
[62 155]
[63 98]
[64 97]
[65 96]
[66 95]
[67 94]
[68 93]
[69 92]
[70 91]
[71 90]
[72 89]
[99 154]
[100 153]
[101 152]
[103 151]
[104 150]
[105 149]
[106 148]
[107 147]
[108 146]
[112 142]
[113 141]
[114 140]
[115 139]
[116 138]
[117 137]
[121 136]
[122 135]
[123 134]
[124 133]
[126 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
