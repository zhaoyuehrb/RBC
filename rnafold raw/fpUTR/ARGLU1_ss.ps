%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUUGUGGGAAGGGCGGCCGGUGCAGCCGCAGCUGCCAUCUUAGGGGCGCCUGGCGCUACGGGUUUCUCGUUGGAGGCGGCCUUCGUGGCAGCUGUAGACGCCGGGAAAAGGCAUAAAGUCCGUUGGCCGACACCUUUCUUUCCUCCGGCCUCGGUAGAACCGCCAGCCCGCGUCCGAAGGCGGAGGCGAGGGGAACUGGCCGCGUGAGGGGCCUGAGGCGAGCGGUUAGAGCGUCUCCCGGAAGG\
) } def
/len { sequence length } bind def

/coor [
[314.47198486 225.05186462]
[306.88861084 227.57844543]
[298.86444092 227.78540039]
[291.09600830 225.63516235]
[284.26342773 221.29559326]
[278.97079468 215.12713623]
[275.69274902 207.65284729]
[274.73205566 199.51416016]
[260.47799683 194.84278870]
[246.22395325 190.17140198]
[231.96989441 185.50001526]
[217.71583557 180.82862854]
[203.46177673 176.15724182]
[189.20771790 171.48587036]
[174.92434692 166.90486145]
[160.58410645 162.50515747]
[146.21629333 158.19636536]
[131.84846497 153.88757324]
[117.48064423 149.57878113]
[103.11281586 145.26998901]
[88.88863373 150.03157043]
[80.01048279 162.12199402]
[71.13232422 174.21241760]
[66.63102722 190.55789185]
[49.67825317 190.75738525]
[44.79356003 174.52235413]
[59.04190063 165.33425903]
[67.92005157 153.24383545]
[76.79821014 141.15341187]
[70.27773285 127.64476776]
[55.28855896 127.07485962]
[40.29938889 126.50495148]
[25.31022072 125.93504333]
[10.32105064 125.36512756]
[-4.66811848 124.79521942]
[-19.65728760 124.22531128]
[-34.64645767 123.65540314]
[-49.63562775 123.08549500]
[-64.62479401 122.51557922]
[-79.61396790 121.94567108]
[-87.12823486 129.76745605]
[-97.49004364 132.12731934]
[-107.23942566 128.48402405]
[-113.25507355 120.26088715]
[-128.22499084 119.31144714]
[-143.19491577 118.36199951]
[-158.16484070 117.41255951]
[-172.42707825 124.26084137]
[-184.63908386 115.73346710]
[-199.60900879 114.78402710]
[-214.57893372 113.83458710]
[-229.54885864 112.88513947]
[-244.51876831 111.93569946]
[-250.16044617 121.86751556]
[-259.05343628 128.95388794]
[-269.89602661 132.20628357]
[-281.11911011 131.19384766]
[-291.11328125 126.10003662]
[-298.45968628 117.69082642]
[-302.13125610 107.19976807]
[-317.05429077 105.68224335]
[-331.97732544 104.16471863]
[-346.90036011 102.64719391]
[-361.82339478 101.12966919]
[-378.19296265 105.54257202]
[-386.96496582 91.03434753]
[-375.45205688 78.58889008]
[-360.30587769 86.20662689]
[-345.38284302 87.72415161]
[-330.45980835 89.24167633]
[-315.53677368 90.75920105]
[-300.61373901 92.27672577]
[-288.95202637 77.64125824]
[-270.67236328 72.98214722]
[-253.15026855 80.36702728]
[-243.56933594 96.96577454]
[-228.59941101 97.91522217]
[-213.62948608 98.86466217]
[-198.65956116 99.81410217]
[-183.68963623 100.76354980]
[-170.49815369 93.84735107]
[-157.21539307 102.44263458]
[-142.24546814 103.39208221]
[-127.27555084 104.34152222]
[-112.30562592 105.29096222]
[-95.63116455 95.47323608]
[-79.04405975 106.95650482]
[-64.05488586 107.52641296]
[-49.06571579 108.09632111]
[-34.07654953 108.66622925]
[-19.08737755 109.23614502]
[-4.09820890 109.80605316]
[10.89096069 110.37596130]
[25.88013077 110.94586945]
[40.86930084 111.51577759]
[55.85847092 112.08569336]
[70.84764099 112.65560150]
[72.83325958 92.97702026]
[85.16847229 80.70227814]
[80.13749695 66.57112885]
[75.10652161 52.43998718]
[69.63061523 38.47522736]
[63.71527863 24.69086075]
[57.79994202 10.90649414]
[42.77652740 6.56701279]
[34.10025406 -6.44283962]
[35.86778641 -21.98020935]
[47.24455261 -32.70882416]
[62.85879135 -33.56296158]
[75.33793640 -24.13932419]
[78.78971863 -8.88746357]
[71.58430481 4.99115610]
[77.49964905 18.77552414]
[83.41498566 32.55989075]
[91.19890594 19.73762321]
[106.05981445 17.69960785]
[117.00830078 27.95292664]
[115.94815063 42.91541672]
[103.66331482 51.52256012]
[89.23766327 47.40900803]
[94.26864624 61.54015350]
[99.29962158 75.67129517]
[113.67864227 78.09248352]
[124.87760925 88.71959686]
[128.43048096 104.62388611]
[122.20259094 120.60772705]
[107.42160797 130.90217590]
[121.78942871 135.21095276]
[136.15725708 139.51974487]
[150.52507019 143.82853699]
[164.89289856 148.13732910]
[173.98687744 147.60382080]
[179.41479492 152.59277344]
[188.51480103 152.17449951]
[193.87910461 157.23181152]
[208.13314819 161.90319824]
[222.38720703 166.57456970]
[236.64126587 171.24595642]
[250.89532471 175.91734314]
[265.14938354 180.58872986]
[279.40344238 185.26010132]
[298.59347534 173.51147461]
[319.90426636 179.81111145]
[329.38162231 199.60293579]
[343.94924927 203.17846680]
[358.51687622 206.75401306]
[373.10684204 210.23721313]
[387.71859741 213.62792969]
[402.33032227 217.01866150]
[416.94207764 220.40937805]
[429.57998657 209.15016174]
[446.27371216 207.66607666]
[460.41604614 216.34532166]
[466.52816772 231.59272766]
[481.18170166 234.79808044]
[496.31649780 230.18847656]
[507.09640503 240.46675110]
[520.30041504 232.20288086]
[535.11553955 235.66232300]
[542.91247559 248.30126953]
[557.56597900 251.50662231]
[572.21954346 254.71197510]
[586.87304688 257.91732788]
[601.52655029 261.12268066]
[616.18005371 264.32806396]
[629.38409424 256.06417847]
[644.19921875 259.52362061]
[651.99615479 272.16256714]
[666.64965820 275.36791992]
[681.30322266 278.57327271]
[696.29235840 279.14318848]
[711.14697266 277.05978394]
[726.00158691 274.97634888]
[738.59332275 265.39727783]
[752.27191162 271.29183960]
[767.12652588 269.20843506]
[781.98114014 267.12503052]
[796.83575439 265.04159546]
[809.42120361 254.52793884]
[824.72387695 260.42376709]
[827.00164795 276.66397095]
[813.91131592 286.54199219]
[798.91912842 279.89620972]
[784.06451416 281.97961426]
[769.20989990 284.06304932]
[754.35534668 286.14645386]
[742.82604980 295.57650757]
[728.08502197 289.83096313]
[713.23040771 291.91439819]
[698.37579346 293.99780273]
[697.71093750 308.98306274]
[712.32269287 312.37377930]
[726.64331055 305.14196777]
[741.16546631 311.96005249]
[744.74902344 327.59774780]
[734.64495850 340.05917358]
[718.60424805 339.78500366]
[708.93194580 326.98553467]
[694.32025146 323.59478760]
[688.66784668 337.48907471]
[701.49700928 345.26165771]
[714.32617188 353.03421021]
[727.15533447 360.80679321]
[742.96752930 361.34011841]
[749.84362793 374.55255127]
[766.24163818 374.35760498]
[774.37561035 388.59735107]
[765.87805176 402.62316895]
[749.49047852 402.00650024]
[742.07104492 387.38171387]
[727.17645264 387.40432739]
[719.38275146 373.63595581]
[706.55358887 365.86337280]
[693.72442627 358.09078979]
[680.89526367 350.31823730]
[670.15386963 334.18261719]
[666.76550293 317.60482788]
[669.95373535 303.23788452]
[678.09783936 293.22680664]
[663.44433594 290.02145386]
[648.79077148 286.81610107]
[636.42901611 295.04547119]
[621.52264404 292.00350952]
[612.97473145 278.98156738]
[598.32122803 275.77621460]
[583.66766357 272.57086182]
[569.01416016 269.36550903]
[554.36065674 266.16015625]
[539.70709229 262.95477295]
[527.34533691 271.18414307]
[512.43896484 268.14221191]
[503.89105225 255.12026978]
[489.80435181 259.95913696]
[477.97634888 249.45159912]
[463.32281494 246.24624634]
[454.22634888 256.00012207]
[441.39697266 260.02365112]
[428.14807129 257.16580200]
[417.95669556 248.06739807]
[413.55136108 235.02111816]
[398.93960571 231.63040161]
[384.32785034 228.23968506]
[369.71612549 224.84895325]
[362.50759888 226.39472961]
[354.94131470 221.32164001]
[340.37371826 217.74609375]
[325.80609131 214.17054749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 141]
[9 140]
[10 139]
[11 138]
[12 137]
[13 136]
[14 135]
[15 133]
[16 131]
[17 130]
[18 129]
[19 128]
[20 127]
[21 29]
[22 28]
[23 27]
[30 97]
[31 96]
[32 95]
[33 94]
[34 93]
[35 92]
[36 91]
[37 90]
[38 89]
[39 88]
[40 87]
[44 85]
[45 84]
[46 83]
[47 82]
[49 80]
[50 79]
[51 78]
[52 77]
[53 76]
[60 72]
[61 71]
[62 70]
[63 69]
[64 68]
[99 122]
[100 121]
[101 120]
[102 114]
[103 113]
[104 112]
[144 247]
[145 246]
[146 245]
[147 243]
[148 242]
[149 241]
[150 240]
[154 235]
[155 234]
[157 232]
[160 229]
[161 228]
[162 227]
[163 226]
[164 225]
[165 224]
[168 221]
[169 220]
[170 219]
[171 190]
[172 189]
[173 188]
[175 186]
[176 185]
[177 184]
[178 183]
[191 199]
[192 198]
[200 215]
[201 214]
[202 213]
[203 212]
[205 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
