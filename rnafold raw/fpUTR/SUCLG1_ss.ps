%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCUAGGAAGGAGCCGAGUUAUUAUCUGCCUCUCCGAUAGGAUGCCUCUUUGUCUUCACCUGCCAUUCCCGCUGUUUCGUGAAGAAUCCUCUGUAAAGGGAAAUUUGUUCAGGCGACUGCUGUGGCCACCCUCUGCCUCCUCCGGCCUCUGCCCCUGGGAGGUCCCCGGGGGCCUGGGAGUGUCAUUGGCGU\
) } def
/len { sequence length } bind def

/coor [
[-77.79578400 259.34445190]
[-81.19062805 261.63345337]
[-84.68547058 262.19326782]
[-94.67420197 273.38366699]
[-104.66292572 284.57409668]
[-114.65165710 295.76449585]
[-124.45787048 307.11517334]
[-134.07899475 318.62319946]
[-143.70011902 330.13119507]
[-146.61560059 345.68142700]
[-160.71502686 350.48303223]
[-170.33615112 361.99102783]
[-173.44598389 370.59530640]
[-180.20744324 373.60583496]
[-190.01365662 384.95651245]
[-193.18057251 400.45751953]
[-207.35591125 405.03018188]
[-217.16212463 416.38088989]
[-214.49018860 431.78848267]
[-222.39184570 445.28286743]
[-237.13616943 450.49234009]
[-251.76135254 444.95718384]
[-259.36181641 431.29092407]
[-256.34887695 415.94631958]
[-244.14512634 406.16867065]
[-228.51281738 406.57467651]
[-218.70660400 395.22396851]
[-216.24108887 380.53485107]
[-201.36434937 375.15032959]
[-191.55813599 363.79962158]
[-181.84414673 352.36990356]
[-172.22303772 340.86190796]
[-169.99571228 326.13476562]
[-155.20811462 320.51007080]
[-145.58699036 309.00207520]
[-135.96586609 297.49407959]
[-135.49313354 292.72860718]
[-132.01246643 288.21350098]
[-125.84206390 285.77575684]
[-115.85334015 274.58535767]
[-105.86460876 263.39495850]
[-95.87588501 252.20452881]
[-86.16189575 240.77481079]
[-76.72838593 229.11253357]
[-67.29486847 217.45024109]
[-57.86135864 205.78796387]
[-48.42784882 194.12568665]
[-62.68696976 198.78158569]
[-77.65537262 197.80848694]
[-91.19165802 191.34558105]
[-101.35930634 180.31748962]
[-106.70372772 166.30187988]
[-106.46033478 151.30386353]
[-100.66394806 137.46905518]
[-90.14381409 126.77667999]
[-76.40495300 120.75641632]
[-61.41285324 120.26951599]
[-47.31231308 125.38565063]
[-36.12057114 135.37287903]
[-29.43873024 148.80244446]
[-28.22270012 163.75306702]
[-32.64728546 178.08747864]
[-21.13928986 168.46635437]
[-16.33769608 154.36692810]
[-0.78743970 151.45143127]
[10.72055721 141.83030701]
[22.22855377 132.20918274]
[33.73654938 122.58806610]
[45.24454498 112.96694183]
[56.75254440 103.34581757]
[68.26054382 93.72469330]
[74.50180817 80.08480835]
[74.25891113 65.08677673]
[66.29915619 51.41370010]
[73.82935333 38.56280899]
[73.58645630 23.56477547]
[73.34355927 8.56674099]
[65.38380432 -5.10633087]
[72.91399384 -17.95722389]
[64.95424652 -31.63029671]
[72.48443604 -44.48118973]
[72.24153900 -59.47922516]
[71.99864197 -74.47725677]
[71.75574493 -89.47528839]
[63.79599380 -103.14836121]
[71.32618713 -115.99925995]
[71.08329010 -130.99728394]
[70.47618866 -145.98500061]
[69.50524139 -160.95353699]
[68.53429413 -175.92208862]
[64.85146332 -184.29711914]
[67.67082214 -191.14051819]
[66.94238281 -206.12281799]
[57.61273193 -219.60946655]
[64.87130737 -234.31474304]
[81.25110626 -235.11111450]
[89.90200043 -221.17935181]
[81.92469025 -206.85124207]
[82.65312195 -191.86894226]
[83.50283813 -176.89303589]
[84.47378540 -161.92448425]
[85.44473267 -146.95594788]
[87.85218811 -144.36145020]
[89.11531067 -140.46670532]
[88.63438416 -135.82568359]
[86.08132172 -131.24018860]
[86.32421875 -116.24214935]
[94.26660156 -103.64183807]
[86.75378418 -89.71818542]
[86.99668121 -74.72015381]
[87.23957062 -59.72211838]
[87.48246765 -44.72408676]
[95.42485046 -32.12377548]
[87.91203308 -18.20012093]
[95.85440826 -5.59980822]
[88.34159088 8.32384586]
[88.58448792 23.32187843]
[88.82738495 38.31991196]
[96.76976013 50.92022324]
[89.25694275 64.84387970]
[89.49983978 79.84191132]
[99.16297913 78.48573303]
[107.96356201 81.29223633]
[114.29611206 87.28283691]
[117.20861816 94.94559479]
[132.04959106 97.12402344]
[146.89056396 99.30245209]
[161.73153687 101.48088074]
[170.69126892 99.62946320]
[176.79441833 103.81662750]
[191.59815979 106.23509216]
[206.40191650 108.65354919]
[218.25025940 96.59192657]
[234.78825378 93.98972321]
[249.47373962 101.67601776]
[256.61639404 116.44916534]
[271.45736694 118.62759399]
[286.29833984 120.80602264]
[301.13931274 122.98445129]
[315.98028564 125.16287994]
[330.82125854 127.34130859]
[345.66223145 129.51972961]
[359.49581909 118.82334900]
[376.45260620 121.38376617]
[386.12255859 135.13565063]
[400.99688721 137.07347107]
[415.87118530 139.01129150]
[430.79754639 132.21897888]
[443.98397827 141.96833801]
[441.86541748 158.23007202]
[426.62121582 164.27548218]
[413.93334961 153.88558960]
[399.05905151 151.94776917]
[384.18475342 150.00994873]
[375.16546631 159.22381592]
[362.29321289 161.59152222]
[350.23199463 156.02716064]
[343.48379517 144.36070251]
[328.64282227 142.18228149]
[313.80184937 140.00384521]
[298.96087646 137.82542419]
[284.11990356 135.64698792]
[269.27893066 133.46856689]
[254.43797302 131.29013062]
[246.02508545 141.66683960]
[233.48150635 146.56745911]
[220.04803467 144.61091614]
[209.25254822 136.20288086]
[203.98344421 123.45730591]
[189.17970276 121.03884125]
[174.37594604 118.62037659]
[159.55310059 116.32185364]
[144.71212769 114.14342499]
[129.87115479 111.96499634]
[115.03018951 109.78656769]
[96.51145172 120.03069305]
[77.88166046 105.23269653]
[66.37366486 114.85381317]
[54.86566925 124.47493744]
[43.35767365 134.09606934]
[31.84967613 143.71719360]
[20.34168053 153.33830261]
[8.83368397 162.95942688]
[3.20896244 177.74703979]
[-11.51816559 179.97434998]
[-23.02616310 189.59547424]
[-25.10201073 197.41709900]
[-30.41982841 202.37660217]
[-36.76556396 203.55918884]
[-46.19907761 215.22148132]
[-55.63258743 226.88375854]
[-65.06610107 238.54603577]
[-74.49961090 250.20832825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 42]
[4 41]
[5 40]
[6 39]
[7 36]
[8 35]
[9 34]
[11 32]
[12 31]
[14 30]
[15 29]
[17 27]
[18 26]
[43 193]
[44 192]
[45 191]
[46 190]
[47 189]
[62 186]
[63 185]
[65 183]
[66 182]
[67 181]
[68 180]
[69 179]
[70 178]
[71 177]
[72 121]
[73 120]
[75 118]
[76 117]
[77 116]
[79 114]
[81 112]
[82 111]
[83 110]
[84 109]
[86 107]
[87 106]
[88 102]
[89 101]
[90 100]
[92 99]
[93 98]
[125 175]
[126 174]
[127 173]
[128 172]
[130 171]
[131 170]
[132 169]
[136 164]
[137 163]
[138 162]
[139 161]
[140 160]
[141 159]
[142 158]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
