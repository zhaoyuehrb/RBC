%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCCCAUAAAGCACAUGGUCUAAUCUGUUACGUAACAGCAAGACAGCGUCACCUCACCUGUUCUCGCCCUCAAAUGGGAACGCUGGCCUGGGACUAAAGCAUAGACCACCAGGCUGAGUAUCCUGACCUGAGUCAUCCCCAGGGAUCAGGAGCCUCCAGCAGGGAACCUUCCAUUAUAUUCUUCAAGCAACUUACAGCUGCACCGACAGUUGCG\
) } def
/len { sequence length } bind def

/coor [
[131.21794128 194.84611511]
[141.40252686 183.83364868]
[156.40184021 183.92514038]
[147.13462830 172.13027954]
[137.86741638 160.33541870]
[128.60020447 148.54054260]
[119.33299255 136.74568176]
[111.80739594 139.80697632]
[103.82972717 141.34420776]
[95.70543671 141.29850769]
[87.74556732 139.67164612]
[80.25487518 136.52587891]
[73.52015686 131.98167419]
[67.79925537 126.21301270]
[63.31120682 119.44074249]
[60.22784042 111.92415619]
[58.66720963 103.95103455]
[58.68906784 95.82664490]
[44.28284454 91.64803314]
[29.87662315 87.46942139]
[15.47040176 83.29081726]
[1.06418014 79.11220551]
[-13.34204102 74.93359375]
[-27.74826241 70.75498199]
[-41.47562027 78.11687469]
[-56.02605057 73.67395020]
[-62.95989227 60.54164124]
[-77.36611176 56.36303329]
[-86.47519684 56.97810364]
[-91.94982910 52.01824570]
[-106.29404449 47.63151932]
[-120.63826752 43.24478912]
[-129.75529480 43.72792435]
[-135.15754700 38.68933105]
[-149.43676758 34.09540176]
[-163.37150574 41.05679321]
[-177.78720093 36.19448090]
[-184.33795166 22.86694145]
[-198.61715698 18.27301216]
[-212.89636230 13.67908287]
[-220.86775208 20.75816536]
[-230.98054504 23.86835861]
[-241.39221191 22.51306725]
[-250.23472595 17.00299263]
[-255.94963074 8.38816643]
[-257.56259155 -1.74153996]
[-271.62887573 -6.95111895]
[-285.69515991 -12.16069794]
[-299.76141357 -17.37027550]
[-313.82769775 -22.57985497]
[-327.89398193 -27.78943443]
[-342.11782837 -21.43963623]
[-356.30883789 -26.92326927]
[-362.27474976 -40.52266693]
[-376.34103394 -45.73224258]
[-385.05615234 -33.41522980]
[-396.66284180 -23.77429390]
[-410.36965942 -17.46677589]
[-425.24212646 -14.92273045]
[-440.26620483 -16.31561661]
[-454.41748047 -21.55046272]
[-466.73114014 -30.27035141]
[-476.36758423 -41.88074112]
[-482.66979980 -55.59002304]
[-485.20809937 -70.46347046]
[-483.80941772 -85.48699188]
[-478.56912231 -99.63624573]
[-469.84448242 -111.94653320]
[-458.23034668 -121.57849884]
[-444.51864624 -127.87542725]
[-429.64422607 -130.40798950]
[-414.62124634 -129.00350952]
[-400.47399902 -123.75772858]
[-388.16708374 -115.02833557]
[-378.53961182 -103.41050720]
[-372.24798584 -89.69636536]
[-369.72116089 -74.82096100]
[-371.13143921 -59.79852676]
[-357.06515503 -54.58894730]
[-343.68020630 -61.02157211]
[-329.34078979 -55.93869781]
[-322.68441772 -41.85571671]
[-308.61813354 -36.64613724]
[-294.55184937 -31.43655777]
[-280.48556519 -26.22698021]
[-266.41928101 -21.01740074]
[-252.35299683 -15.80782223]
[-235.28994751 -25.21595383]
[-216.52156067 -18.93840027]
[-208.30244446 -0.60012680]
[-194.02322388 3.99380231]
[-179.74401855 8.58773136]
[-166.65098572 1.58001721]
[-152.10440063 6.03550196]
[-144.84283447 19.81619453]
[-130.56362915 24.41012383]
[-116.25153351 28.90056992]
[-101.90731812 33.28730011]
[-87.56310272 37.67403030]
[-73.18750000 41.95681000]
[-58.78128052 46.13542175]
[-45.89661407 38.75159073]
[-31.22713089 42.78407288]
[-23.56965256 56.34876251]
[-9.16343117 60.52737427]
[5.24279022 64.70598602]
[19.64901161 68.88459015]
[34.05523300 73.06320190]
[48.46145630 77.24181366]
[62.86767578 81.42042542]
[71.75578308 69.56524658]
[84.24063873 61.58577728]
[98.73236847 58.49815369]
[113.38552094 60.69557190]
[126.33409882 67.89820099]
[137.78590393 58.21025848]
[149.23770142 48.52231216]
[160.68949890 38.83436584]
[172.07087708 29.06377983]
[183.38121033 19.21106148]
[184.61978149 3.68354821]
[196.23045349 -6.14738750]
[211.02592468 -4.87090826]
[222.33627319 -14.72362518]
[233.64662170 -24.57634163]
[244.95697021 -34.42905807]
[256.26730347 -44.28177643]
[267.57766724 -54.13449097]
[278.74420166 -64.14991760]
[289.76455688 -74.32594299]
[300.78491211 -84.50197601]
[311.80526733 -94.67800140]
[309.02737427 -109.85320282]
[314.91589355 -124.11254883]
[327.59185791 -132.90592957]
[343.01040649 -133.42741394]
[356.25152588 -125.51058960]
[363.09002686 -111.68169403]
[361.34381104 -96.35347748]
[351.57000732 -84.41712189]
[336.88748169 -79.68146515]
[321.98132324 -83.65763855]
[310.96093750 -73.48161316]
[299.94058228 -63.30558014]
[288.92022705 -53.12955093]
[287.83822632 -48.48204041]
[283.82794189 -44.46327591]
[277.43038940 -42.82414246]
[266.12002563 -32.97142792]
[254.80969238 -23.11871147]
[243.49934387 -13.26599407]
[232.18899536 -3.41327715]
[220.87864685 6.43943977]
[220.11457825 21.27021217]
[208.78463745 31.42338753]
[193.23393250 30.52140999]
[181.92358398 40.37412643]
[178.94613647 47.13478851]
[170.37744141 50.28616714]
[158.92564392 59.97410965]
[147.47384644 69.66205597]
[136.02204895 79.35000610]
[141.30816650 104.20063019]
[131.12785339 127.47847748]
[140.39506531 139.27333069]
[149.66227722 151.06820679]
[158.92948914 162.86306763]
[168.19670105 174.65792847]
[165.06605530 159.98826599]
[164.96835327 144.98858643]
[167.90765381 130.27938843]
[173.76235962 116.46915436]
[182.29026794 104.12918854]
[193.13861084 93.76995850]
[205.85861206 85.82001495]
[219.92407227 80.60820770]
[234.75312805 78.35015106]
[249.73236084 79.13925934]
[264.24209595 82.94287109]
[277.68209839 89.60365295]
[289.49642944 98.84606171]
[299.19628906 110.28776550]
[306.38046265 123.45543671]
[310.75173950 137.80436707]
[312.12930298 152.74098206]
[310.45617676 167.64736938]
[305.80154419 181.90690613]
[298.35797119 194.92970276]
[288.43338013 206.17704773]
[276.43832397 215.18363953]
[262.86904907 221.57691956]
[248.28680420 225.09240723]
[233.29489136 225.58465576]
[218.51345825 223.03334045]
[204.55398560 217.54396057]
[191.99394226 209.34364319]
[181.35453796 198.77355957]
[186.25744629 212.94964600]
[191.16035461 227.12573242]
[196.06326294 241.30181885]
[200.96617126 255.47790527]
[205.86907959 269.65399170]
[220.19111633 276.33642578]
[225.51454163 291.21716309]
[218.68106079 305.46774292]
[203.74487305 310.63354492]
[189.56732178 303.64978027]
[184.55972290 288.65982056]
[191.69299316 274.55691528]
[186.79008484 260.38082886]
[181.88717651 246.20472717]
[176.98426819 232.02864075]
[172.08135986 217.85255432]
[167.17843628 203.67646790]
[159.13745117 216.33911133]
[144.36520386 218.94305420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 168]
[4 167]
[5 166]
[6 165]
[7 164]
[18 110]
[19 109]
[20 108]
[21 107]
[22 106]
[23 105]
[24 104]
[27 101]
[28 100]
[30 99]
[31 98]
[32 97]
[34 96]
[35 95]
[38 92]
[39 91]
[40 90]
[46 87]
[47 86]
[48 85]
[49 84]
[50 83]
[51 82]
[54 79]
[55 78]
[115 162]
[116 161]
[117 160]
[118 159]
[119 157]
[120 156]
[123 153]
[124 152]
[125 151]
[126 150]
[127 149]
[128 148]
[129 145]
[130 144]
[131 143]
[132 142]
[197 214]
[198 213]
[199 212]
[200 211]
[201 210]
[202 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
