%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCGCUCUCCGUCCGCAGUGGAAGCCGCCGCCGCGCUCGCAGCUUGCAGGCGCCGCGUAGCCGUCGCCACCGCCGCCAGCCCGUGCGCCCUCGGCGCGUACCCGCCGCGCUCCCAUCCCCGCCGCCGGCCAGGGGCGCGCUCGGCCGCCCCGGACAGUGUCCCGCUGCGGCUCCGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[-19.53313637 342.25640869]
[-23.90786743 344.22808838]
[-31.73985672 357.02102661]
[-39.57184601 369.81399536]
[-41.39126587 378.79141235]
[-47.64968491 382.75772095]
[-55.70012665 395.41436768]
[-63.75057220 408.07098389]
[-65.72383118 417.01583862]
[-72.04941559 420.87414551]
[-80.31594086 433.39071655]
[-88.58246613 445.90728760]
[-96.84899139 458.42385864]
[-92.21953583 473.36047363]
[-98.32186127 487.75823975]
[-112.27463531 494.81896973]
[-127.48978424 491.20883179]
[-136.78318787 478.63238525]
[-135.76676941 463.02786255]
[-124.92046356 451.76324463]
[-109.36556244 450.15734863]
[-101.09903717 437.64074707]
[-92.83251190 425.12417603]
[-84.56598663 412.60760498]
[-76.40720367 400.02053833]
[-68.35675812 387.36392212]
[-60.30632019 374.70727539]
[-52.36481094 361.98202515]
[-44.53282166 349.18905640]
[-36.70083237 336.39608765]
[-29.08960533 323.47055054]
[-21.70138550 310.41629028]
[-14.31316471 297.36199951]
[-6.92494345 284.30773926]
[0.46327779 271.25344849]
[7.85149860 258.19915771]
[15.23971939 245.14488220]
[13.63456535 225.88993835]
[31.11304855 215.87948608]
[38.04879379 202.57928467]
[44.98453903 189.27908325]
[51.92028427 175.97888184]
[58.85602570 162.67868042]
[65.79177094 149.37846375]
[72.72751617 136.07826233]
[59.29367065 119.70848083]
[54.78424072 99.01783752]
[60.18786621 78.54251862]
[48.34659958 69.33467102]
[32.70290756 66.97131348]
[27.40535927 53.05064011]
[15.56409073 43.84279633]
[3.72282243 34.63495636]
[-8.11844635 25.42711258]
[-23.76213837 23.06375694]
[-29.05968666 9.14307880]
[-40.90095520 -0.06476329]
[-49.61991501 -2.87254715]
[-52.86466599 -9.53371525]
[-64.54612732 -18.94347191]
[-80.14694214 -21.57502556]
[-85.20474243 -35.58459091]
[-96.88619995 -44.99434662]
[-113.16444397 -46.98200989]
[-119.33232880 -62.17704773]
[-109.04486847 -74.94811249]
[-92.88491058 -72.15742493]
[-87.47644043 -56.67580795]
[-75.79498291 -47.26604843]
[-61.02970505 -45.30754471]
[-55.13636780 -30.62493134]
[-43.45491028 -21.21517372]
[-31.69311333 -11.90603161]
[-19.85184288 -2.69818974]
[-5.05511808 -0.99343920]
[1.08939588 13.58584499]
[12.93066406 22.79368782]
[24.77193260 32.00152969]
[36.61320114 41.20936966]
[51.40992737 42.91412354]
[57.55443954 57.49340439]
[69.39571381 66.70124817]
[77.43267822 60.80630875]
[86.56570435 56.81494141]
[96.35121155 54.92100525]
[97.63716888 39.97623062]
[98.92312622 25.03145409]
[100.20908356 10.08667850]
[101.49504089 -4.85809708]
[102.78099823 -19.80287170]
[103.93862915 -34.75813675]
[96.25072479 -49.24357986]
[105.17970276 -62.99877548]
[121.54020691 -61.87355042]
[128.50193787 -47.02544403]
[118.90328217 -33.72891235]
[121.58773804 -26.82288551]
[117.72577667 -18.51691437]
[116.43981934 -3.57213950]
[115.15386200 11.37263584]
[113.86790466 26.31741142]
[112.58194733 41.26218796]
[111.29598999 56.20696259]
[118.51448822 58.73690414]
[125.20339966 62.44712830]
[131.17140198 67.23152161]
[143.16899109 58.22830200]
[155.16658020 49.22509003]
[167.16416931 40.22187424]
[172.16589355 32.54810715]
[179.44587708 31.16918945]
[191.59623718 22.37325668]
[188.41427612 7.48047495]
[191.57118225 -7.41763830]
[200.52003479 -19.73989487]
[213.71037292 -27.35139084]
[228.85688782 -28.93338776]
[243.33537292 -24.21179390]
[254.63732910 -14.00465488]
[260.80462646 -0.08041954]
[260.76873779 15.14845467]
[254.53590393 29.04347229]
[243.18597412 39.19723892]
[228.68539429 43.85055161]
[213.54649353 42.19719696]
[200.39218140 34.52362823]
[188.24180603 43.31956100]
[176.16737366 52.21946335]
[164.16978455 61.22267914]
[152.17219543 70.22589111]
[140.17460632 79.22910309]
[144.69479370 85.75041199]
[148.12017822 93.21405029]
[150.26089478 101.42971039]
[164.91685486 104.62390137]
[179.57281494 107.81809998]
[194.22877502 111.01229858]
[208.88473511 114.20649719]
[223.54069519 117.40069580]
[232.61750793 116.16966248]
[238.41981506 120.77756500]
[253.01876831 124.22288513]
[269.82321167 121.97624969]
[276.63397217 137.50202942]
[263.60034180 148.34458923]
[249.57345581 138.82185364]
[234.97448730 135.37652588]
[220.34649658 132.05665588]
[205.69053650 128.86245728]
[191.03457642 125.66825867]
[176.37861633 122.47406006]
[161.72265625 119.27986145]
[147.06669617 116.08566284]
[140.13096619 129.38586426]
[151.13923645 139.57496643]
[162.14752197 149.76406860]
[173.15580750 159.95317078]
[188.88702393 166.27494812]
[187.16714478 183.14143372]
[170.48368835 186.15786743]
[162.96670532 170.96145630]
[151.95841980 160.77235413]
[140.95013428 150.58325195]
[129.94186401 140.39414978]
[107.69746399 147.12936401]
[86.02771759 143.01400757]
[79.09197998 156.31420898]
[72.15623474 169.61441040]
[65.22048950 182.91462708]
[58.28474426 196.21482849]
[51.34899902 209.51502991]
[44.41325378 222.81523132]
[48.27956772 233.01538086]
[45.92841339 243.44201660]
[38.37574387 250.69097900]
[28.29399872 252.53311157]
[20.90577698 265.58740234]
[13.51755619 278.64166260]
[6.12933540 291.69595337]
[-1.25888562 304.75021362]
[-8.64710712 317.80450439]
[-16.03532791 330.85879517]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 30]
[3 29]
[4 28]
[6 27]
[7 26]
[8 25]
[10 24]
[11 23]
[12 22]
[13 21]
[31 182]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[37 176]
[39 172]
[40 171]
[41 170]
[42 169]
[43 168]
[44 167]
[45 166]
[48 82]
[49 81]
[51 79]
[52 78]
[53 77]
[54 76]
[56 74]
[57 73]
[59 72]
[60 71]
[62 69]
[63 68]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
[90 98]
[91 96]
[106 131]
[107 130]
[108 129]
[109 128]
[111 127]
[112 126]
[134 153]
[135 152]
[136 151]
[137 150]
[138 149]
[139 148]
[141 147]
[142 146]
[154 164]
[155 163]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
