%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUGAGUGACGGGGAGGCGGUGCGGGCGUCGGAAGGGAAUCUCCGGGCGGGGUAGUGCAGGCGCCGGGUUUCCCGCGGUCCGAGCUGGCGCGGGCGGAGGAGAAUCGCUCUUAAAGGGCCAGCGCACACGCGUUCUUUUGUUCCGGGGCCGCAGGGCGGGGCAGGCCCGACUUUCGCCGUCUUCUUGUCUACUCUCCAGAACGGCC\
) } def
/len { sequence length } bind def

/coor [
[124.35311127 545.87237549]
[122.77435303 530.82702637]
[125.92411041 516.03057861]
[133.49382019 502.93270874]
[144.74186707 492.81655884]
[158.56628418 486.67318726]
[156.99087524 471.75616455]
[155.41548157 456.83911133]
[153.84007263 441.92208862]
[152.15260315 427.01730347]
[150.35316467 412.12561035]
[148.55372620 397.23394775]
[146.75428772 382.34228516]
[144.95483398 367.45059204]
[143.15539551 352.55892944]
[141.35595703 337.66723633]
[139.55651855 322.77557373]
[137.75708008 307.88388062]
[135.95764160 292.99221802]
[134.15818787 278.10055542]
[132.35874939 263.20886230]
[130.55931091 248.31718445]
[128.75987244 233.42550659]
[126.96042633 218.53384399]
[124.60277557 203.72027588]
[121.69024658 189.00575256]
[118.77771759 174.29122925]
[115.86518097 159.57672119]
[112.95265198 144.86219788]
[74.17201996 130.29081726]
[67.32622528 95.98191071]
[52.54977798 93.40187073]
[37.77333450 90.82182312]
[22.99688721 88.24177551]
[8.22044086 85.66172791]
[-11.41715527 94.23697662]
[-26.67553711 80.34046936]
[-41.55326843 78.42916107]
[-56.43099976 76.51785278]
[-71.30873108 74.60653687]
[-86.18646240 72.69522858]
[-100.86003876 78.61103058]
[-112.49767303 69.31507874]
[-121.40970612 71.32569122]
[-127.58403015 67.26159668]
[-142.43135071 65.12686920]
[-157.27867126 62.99214935]
[-172.12599182 60.85742569]
[-186.98893738 58.83435440]
[-201.86666870 56.92304230]
[-214.29724121 66.31019592]
[-229.35815430 64.15991974]
[-238.23075867 52.25142288]
[-250.58418274 62.10882568]
[-266.28005981 60.26087570]
[-276.00631714 47.80392456]
[-273.99252319 32.12845993]
[-261.43344116 22.53445816]
[-245.78013611 24.71387100]
[-236.31945801 37.37369156]
[-224.72491455 28.09456635]
[-209.60954285 29.82097054]
[-199.95536804 42.04531097]
[-185.07763672 43.95662308]
[-178.04168701 41.69064713]
[-169.99127197 46.01010513]
[-155.14395142 48.14482880]
[-140.29663086 50.27955246]
[-125.44931030 52.41427231]
[-110.58636475 54.43734741]
[-96.97694397 48.38483429]
[-84.27515411 57.81749344]
[-69.39742279 59.72880554]
[-54.51968765 61.64011765]
[-39.64195633 63.55142975]
[-24.76422691 65.46273804]
[-18.71297455 58.96170807]
[-10.21911430 55.92886734]
[-1.14613175 57.16393661]
[6.45304012 62.51515198]
[10.80048847 70.88527679]
[25.57693481 73.46532440]
[40.35338211 76.04537201]
[55.12982559 78.62541962]
[69.90627289 81.20546722]
[81.53265381 71.72774506]
[81.98353577 56.73452377]
[82.43441010 41.74130249]
[82.88529205 26.74808121]
[83.33616638 11.75485897]
[83.78704834 -3.23836350]
[76.46805573 -17.26487160]
[84.58442688 -29.75382042]
[71.62842560 -37.88335037]
[64.52798462 -51.31765747]
[65.10149384 -66.40200043]
[73.09485626 -79.08908844]
[86.27661896 -86.02499390]
[86.72750092 -101.01821136]
[87.17837524 -116.01143646]
[87.62925720 -131.00465393]
[75.27357483 -140.39170837]
[70.82743073 -155.25816345]
[76.00046539 -169.88755798]
[88.80353546 -178.65460205]
[104.31359863 -178.18818665]
[116.56672668 -168.66764832]
[120.85132599 -153.75384521]
[115.51989746 -139.18141174]
[102.62247467 -130.55377197]
[102.17160034 -115.56055450]
[101.72071838 -100.56733704]
[101.26984406 -85.57411194]
[114.01100159 -77.85865021]
[121.22756195 -64.71417236]
[120.89361572 -49.62262344]
[112.99874115 -36.63925552]
[99.57764435 -29.30294228]
[106.92888641 -16.34885025]
[98.78027344 -2.78748512]
[98.32939148 12.20573711]
[97.87851715 27.19895935]
[97.42763519 42.19218063]
[96.97675323 57.18540192]
[96.52587891 72.17862701]
[110.39482880 77.89282990]
[120.63671112 66.93363190]
[123.81395721 50.84521866]
[139.42077637 45.80941010]
[151.40220642 57.00661469]
[147.43278503 72.91810608]
[131.59590149 77.17551422]
[121.35402679 88.13470459]
[124.72374725 94.83507538]
[138.12449646 88.09562683]
[151.52534485 81.35639954]
[158.26434326 94.75736237]
[144.86393738 101.49636841]
[131.46319580 108.23581696]
[134.83293152 114.93618774]
[149.73770142 113.24871826]
[164.64248657 111.56124878]
[179.54725647 109.87377930]
[194.45204163 108.18630981]
[209.35682678 106.49884033]
[224.26159668 104.81137085]
[228.46118164 101.70606232]
[232.98010254 100.63075256]
[236.99125671 101.36695862]
[239.87425232 103.39945221]
[254.83995056 102.38559723]
[269.80563354 101.37173462]
[283.11203003 91.78673553]
[297.95297241 98.76371002]
[299.06140137 115.12535858]
[285.29705811 124.04020691]
[270.81948853 116.33743286]
[255.85380554 117.35128784]
[240.88810730 118.36515045]
[225.94906616 119.71615601]
[211.04429626 121.40361786]
[196.13951111 123.09108734]
[181.23472595 124.77855682]
[166.32995605 126.46602631]
[151.42517090 128.15350342]
[136.52038574 129.84097290]
[127.66717529 141.94966125]
[130.57969666 156.66418457]
[133.49223328 171.37870789]
[136.40476990 186.09323120]
[139.31730652 200.80775452]
[149.71081543 189.99224854]
[164.66038513 191.22111511]
[173.14822388 203.58868408]
[168.91880798 217.98007202]
[155.08920288 223.78886414]
[141.85211182 216.73439026]
[143.65155029 231.62606812]
[145.45098877 246.51774597]
[147.25042725 261.40942383]
[149.04986572 276.30108643]
[150.84930420 291.19277954]
[152.64875793 306.08444214]
[154.44819641 320.97613525]
[156.24763489 335.86779785]
[158.04707336 350.75949097]
[159.84651184 365.65115356]
[161.64596558 380.54281616]
[163.44540405 395.43450928]
[165.24484253 410.32617188]
[167.04428101 425.21786499]
[171.18113708 433.36361694]
[168.75711060 440.34667969]
[170.33251953 455.26373291]
[171.90791321 470.18075562]
[173.48332214 485.09780884]
[188.28604126 488.21780396]
[201.39912415 495.76116943]
[211.53787231 506.98886108]
[217.70899963 520.80090332]
[219.30792236 535.84411621]
[216.17799377 550.64477539]
[208.62585449 563.75280762]
[197.39137268 573.88403320]
[183.57519531 580.04589844]
[168.53091431 581.63470459]
[153.73237610 578.49487305]
[140.62940979 570.93395996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 196]
[7 195]
[8 194]
[9 193]
[10 191]
[11 190]
[12 189]
[13 188]
[14 187]
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 171]
[26 170]
[27 169]
[28 168]
[29 167]
[31 85]
[32 84]
[33 83]
[34 82]
[35 81]
[37 76]
[38 75]
[39 74]
[40 73]
[41 72]
[43 70]
[45 69]
[46 68]
[47 67]
[48 66]
[49 64]
[50 63]
[53 60]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[93 118]
[98 113]
[99 112]
[100 111]
[101 110]
[126 133]
[127 132]
[140 166]
[141 165]
[142 164]
[143 163]
[144 162]
[145 161]
[146 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
