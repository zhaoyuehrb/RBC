%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGUCAUCAGGGUGCGCCACUGCAGCUGGCAUUGGCCGGGACUGGAAGUGCGGGCUUCUGCAGCAGCCGAAGCUGGAGCUGCUAGGGCAGCAGCGGCUCCCCUGUUGUAUGGACAUUCUGCACCCGAAACUGAUAGCUGAGUCCUGAAGUUUUAUGUUAUGAAACAGAAGAACUUUCAUCCCAGCACAUGAUUUGGGAAUUACACUUUGUGAC\
) } def
/len { sequence length } bind def

/coor [
[97.89087677 296.61129761]
[81.50748444 295.89263916]
[74.17921448 281.22198486]
[83.44476318 267.69122314]
[84.10209656 252.70562744]
[84.75942993 237.72003174]
[85.41676331 222.73445129]
[82.57033539 215.91638184]
[86.19476318 207.53517151]
[87.07098389 192.56077576]
[87.94721222 177.58639526]
[88.82343292 162.61201477]
[89.69966125 147.63761902]
[90.57588196 132.66323853]
[91.45211029 117.68885040]
[84.61545563 114.60499573]
[64.10550690 105.35340881]
[53.46022797 115.92119598]
[42.81494904 126.48898315]
[32.16967392 137.05676270]
[27.82697105 152.27029419]
[13.34354019 155.74584961]
[2.69826317 166.31364441]
[-7.94701385 176.88142395]
[-9.44324493 192.85455322]
[-22.94282150 201.52294922]
[-38.09002686 196.23693848]
[-43.26521683 181.05152893]
[-34.49843216 167.61564636]
[-18.51479912 166.23614502]
[-7.86952162 155.66836548]
[2.77575517 145.10057068]
[6.35703564 130.64292908]
[21.60188866 126.41149139]
[32.24716568 115.84370422]
[42.89244080 105.27591705]
[53.53771973 94.70813751]
[56.15443039 79.93813324]
[49.78758240 66.35641479]
[43.42073059 52.77468872]
[37.05387878 39.19296646]
[30.68703079 25.61124229]
[24.32017899 12.02951908]
[17.95332909 -1.55220437]
[10.23297787 -14.41284847]
[1.23982513 -26.41798210]
[-4.67399740 -29.36309624]
[-7.75272989 -34.13543320]
[-7.83460712 -38.90786743]
[-16.47312927 -51.17065048]
[-25.11165237 -63.43343735]
[-33.75017548 -75.69622040]
[-42.38869858 -87.95900726]
[-51.02722168 -100.22179413]
[-59.66574478 -112.48458099]
[-78.32381439 -120.12122345]
[-79.21854401 -139.43841553]
[-88.21169281 -151.44354248]
[-97.20484924 -163.44868469]
[-106.28546906 -175.38778687]
[-115.45307159 -187.26023865]
[-124.62068176 -199.13269043]
[-133.78828430 -211.00512695]
[-142.95588684 -222.87757874]
[-152.12350464 -234.75003052]
[-161.29110718 -246.62246704]
[-170.45870972 -258.49493408]
[-185.88598633 -260.64828491]
[-195.01411438 -272.81924438]
[-192.86613464 -287.51351929]
[-202.03373718 -299.38595581]
[-209.75308228 -304.26376343]
[-211.24703979 -311.49951172]
[-220.24020386 -323.50463867]
[-229.23335266 -335.50979614]
[-238.22650146 -347.51492310]
[-253.62066650 -349.89346313]
[-262.56997681 -362.19650269]
[-260.20751953 -376.85781860]
[-269.20068359 -388.86294556]
[-278.19384766 -400.86807251]
[-287.18698120 -412.87319946]
[-296.18014526 -424.87835693]
[-311.46200562 -430.82788086]
[-313.68267822 -447.07598877]
[-300.55773926 -456.90798950]
[-285.58901978 -450.20956421]
[-284.17501831 -433.87149048]
[-275.18185425 -421.86636353]
[-266.18869019 -409.86123657]
[-257.19555664 -397.85610962]
[-248.20239258 -385.85095215]
[-233.46813965 -383.99694824]
[-224.17678833 -371.95013428]
[-226.22137451 -356.50805664]
[-217.22822571 -344.50292969]
[-208.23506165 -332.49780273]
[-199.24191284 -320.49267578]
[-190.16128540 -308.55355835]
[-180.99368286 -296.68112183]
[-166.23391724 -295.04257202]
[-156.76753235 -283.13281250]
[-158.58625793 -267.66253662]
[-149.41865540 -255.79008484]
[-140.25105286 -243.91763306]
[-131.08345032 -232.04518127]
[-121.91584015 -220.17272949]
[-112.74822998 -208.30029297]
[-103.58062744 -196.42784119]
[-94.41302490 -184.55538940]
[-87.83898926 -181.18342590]
[-85.19971466 -172.44183350]
[-76.20656586 -160.43670654]
[-67.21340942 -148.43156433]
[-57.01283264 -147.89709473]
[-48.61290359 -141.70745850]
[-44.92891312 -131.71105957]
[-47.40295792 -121.12310791]
[-38.76443481 -108.86032104]
[-30.12591171 -96.59753418]
[-21.48738861 -84.33474731]
[-12.84886646 -72.07196045]
[-4.21034384 -59.80917358]
[4.42817926 -47.54638672]
[13.24495792 -35.41113281]
[22.23810959 -23.40600014]
[20.55082321 -38.31080246]
[24.62318039 -52.74741745]
[33.85079193 -64.57328796]
[46.86417389 -72.03330994]
[61.73198318 -74.02032471]
[76.24766541 -70.23944092]
[88.25691223 -61.25178146]
[95.97740936 -48.39122391]
[98.26335144 -33.56643295]
[94.77546692 -18.97757912]
[86.03141022 -6.78982067]
[73.32889557 1.18803108]
[58.55313110 3.77196908]
[43.89701080 0.57850611]
[31.53505325 -7.91905499]
[37.90190506 5.66266870]
[44.26875305 19.24439240]
[50.63560486 32.82611465]
[57.00245285 46.40784073]
[63.36930466 59.98956299]
[69.73615265 73.57128906]
[158.36344910 55.94987869]
[173.35983276 56.27862549]
[188.35623169 56.60736847]
[203.35263062 56.93611526]
[218.34902954 57.26485825]
[233.34542847 57.59360504]
[248.34182739 57.92234802]
[264.27893066 48.69511032]
[278.91336060 58.38248825]
[293.91296387 58.49207687]
[308.91256714 58.60166931]
[323.91217041 58.71125793]
[337.89889526 50.14951324]
[352.17575073 58.21816254]
[352.05593872 74.61687469]
[337.66268921 82.47605896]
[323.80258179 73.71085358]
[308.80297852 73.60126495]
[293.80337524 73.49167633]
[278.80377197 73.38208771]
[269.97250366 81.64582062]
[257.47714233 81.67908478]
[248.01307678 72.91874695]
[233.01667786 72.59000397]
[218.02027893 72.26125336]
[203.02389526 71.93251038]
[188.02749634 71.60376740]
[173.03109741 71.27502441]
[158.03469849 70.94627380]
[154.95083618 77.78292847]
[163.70843506 89.96096802]
[148.78311157 91.45623016]
[145.69924927 98.29288483]
[155.87120056 109.31701660]
[166.04315186 120.34114838]
[176.21510315 131.36528015]
[186.38703918 142.38940430]
[196.55899048 153.41354370]
[211.95388794 151.47010803]
[225.53468323 158.97619629]
[232.07929993 173.04557800]
[229.07119751 188.26829529]
[217.66703796 198.79087830]
[202.25196838 200.56721497]
[188.75340271 192.91423035]
[182.36180115 178.77467346]
[185.53486633 163.58549500]
[175.36291504 152.56135559]
[165.19096375 141.53723145]
[155.01901245 130.51309204]
[144.84707642 119.48896027]
[134.67512512 108.46482849]
[127.61296844 110.98989105]
[132.66287231 125.11428833]
[118.53839874 130.16397095]
[113.48865509 116.04001617]
[106.42649841 118.56507874]
[105.55027008 133.53945923]
[104.67404938 148.51385498]
[103.79782104 163.48823547]
[102.92160034 178.46261597]
[102.04537201 193.43701172]
[101.16915131 208.41139221]
[100.40235138 223.39178467]
[99.74501801 238.37736511]
[99.08768463 253.36296082]
[98.43035126 268.34854126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 214]
[5 213]
[6 212]
[7 211]
[9 210]
[10 209]
[11 208]
[12 207]
[13 206]
[14 205]
[15 204]
[17 37]
[18 36]
[19 35]
[20 34]
[22 32]
[23 31]
[24 30]
[38 147]
[39 146]
[40 145]
[41 144]
[42 143]
[43 142]
[44 141]
[45 126]
[46 125]
[49 124]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[57 114]
[58 113]
[59 112]
[60 110]
[61 109]
[62 108]
[63 107]
[64 106]
[65 105]
[66 104]
[67 103]
[70 100]
[71 99]
[73 98]
[74 97]
[75 96]
[76 95]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[148 176]
[149 175]
[150 174]
[151 173]
[152 172]
[153 171]
[154 170]
[156 167]
[157 166]
[158 165]
[159 164]
[180 199]
[181 198]
[182 197]
[183 196]
[184 195]
[185 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
