%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:04:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAACGGGACGCCGCUCCUGGGUGGCGAGCAGGCGCGUGUGUAGGGACGAAGUUUCACUCUUGUUGCCCAGGCUGGAGUGCAAUGGCACAAUCUCAGCUCACUGCAACCUCUGCCUCCCGGGUUCAAGUGAUUCUCCUGCCUCAGCCUUCCAAGUAGCUGGGAUUACAGGAGUUAGAA\
) } def
/len { sequence length } bind def

/coor [
[65.20884705 120.64427948]
[51.11345673 125.77458191]
[37.01806641 130.90487671]
[22.92267609 136.03518677]
[8.82728672 141.16548157]
[-5.26810217 146.29579163]
[-19.36349106 151.42608643]
[-33.45888138 156.55639648]
[-47.55427170 161.68669128]
[-60.73652649 168.84407043]
[-72.71605682 177.87130737]
[-84.69559479 186.89852905]
[-96.67512512 195.92575073]
[-108.57542419 205.05717468]
[-120.39558411 214.29209900]
[-132.21574402 223.52702332]
[-138.32687378 238.12033081]
[-153.11965942 239.85894775]
[-164.93981934 249.09387207]
[-176.75997925 258.32879639]
[-188.58013916 267.56372070]
[-187.06005859 282.91601562]
[-194.10169983 296.64257812]
[-207.45809937 304.36334229]
[-222.86727905 303.61462402]
[-235.41223145 294.63531494]
[-241.08990479 280.29071045]
[-238.08857727 265.15811157]
[-227.36595154 254.06626892]
[-212.34358215 250.55456543]
[-197.81506348 255.74354553]
[-185.99490356 246.50862122]
[-174.17474365 237.27371216]
[-162.35458374 228.03878784]
[-157.08891296 214.10601807]
[-141.45066833 211.70686340]
[-129.63050842 202.47193909]
[-117.81034851 193.23701477]
[-114.46585083 186.62272644]
[-105.70234680 183.94622803]
[-93.72281647 174.91899109]
[-81.74328613 165.89176941]
[-69.76375580 156.86454773]
[-73.01049805 142.21945190]
[-76.25694275 127.57566071]
[-90.92915344 124.45698547]
[-105.60137177 121.33831024]
[-120.27358246 118.21963501]
[-134.94580078 115.10095978]
[-151.69590759 117.72203827]
[-158.85144043 102.35210419]
[-146.06301880 91.22139740]
[-131.82711792 100.42874908]
[-117.15490723 103.54742432]
[-102.48269653 106.66609955]
[-87.81047821 109.78477478]
[-73.13826752 112.90345001]
[-62.28479004 119.84720612]
[-55.15821075 128.83583069]
[-52.01211929 138.52569580]
[-52.68457413 147.59130859]
[-38.58918381 142.46099854]
[-24.49379349 137.33070374]
[-10.39840412 132.20039368]
[3.69698477 127.07009888]
[17.79237366 121.93979645]
[31.88776398 116.80949402]
[45.98315430 111.67919159]
[60.07854080 106.54888916]
[61.02498245 84.11951447]
[74.09009552 64.78820038]
[96.15637970 54.81490326]
[94.06877899 39.96088028]
[91.98118591 25.10686111]
[89.89358521 10.25283909]
[87.80599213 -4.60118151]
[85.58885193 -19.43641853]
[83.24233246 -34.25174332]
[80.63761139 -49.02386093]
[77.77547455 -63.74826813]
[74.91333771 -78.47267914]
[72.05120850 -93.19708252]
[60.88989258 -105.21195221]
[65.97236633 -120.80363464]
[82.07021332 -123.93273926]
[92.62335205 -111.38031769]
[86.77561188 -96.05921936]
[89.63774872 -81.33480835]
[92.49988556 -66.61040497]
[95.36201477 -51.88599396]
[98.77323914 -48.50713730]
[100.08049011 -42.94023132]
[98.05765533 -36.59826279]
[100.40417480 -21.78293610]
[104.56772614 -15.65110207]
[102.66001129 -6.68877792]
[104.74760437 8.16524315]
[106.83520508 23.01926422]
[108.92279816 37.87328339]
[111.01039886 52.72730637]
[124.91815186 58.34640503]
[136.73831177 49.11148453]
[148.55847168 39.87656021]
[160.37864685 30.64163780]
[162.44430542 15.20237732]
[174.56318665 6.00523615]
[189.26942444 8.06967926]
[201.08958435 -1.16524291]
[212.90975952 -10.40016460]
[224.72991943 -19.63508797]
[236.55007935 -28.87000847]
[235.02998352 -44.22230148]
[242.07162476 -57.94887543]
[255.42802429 -65.66963196]
[270.83721924 -64.92090607]
[283.38217163 -55.94161224]
[289.05984497 -41.59701157]
[286.05850220 -26.46441460]
[275.33587646 -15.37257481]
[260.31350708 -11.86086082]
[245.78500366 -17.04984856]
[233.96482849 -7.81492567]
[222.14466858 1.41999626]
[210.32450867 10.65491867]
[198.50434875 19.88984108]
[196.94970703 34.65868378]
[185.09393311 44.19258881]
[169.61355591 42.46179962]
[157.79339600 51.69672394]
[145.97323608 60.93164444]
[134.15307617 70.16656494]
[140.30252075 82.03559113]
[142.58996582 94.83781433]
[141.01931763 107.38244629]
[135.94384766 118.56477356]
[147.76400757 127.79969788]
[159.58416748 137.03462219]
[171.40432739 146.26954651]
[183.22448730 155.50445557]
[195.04464722 164.73937988]
[216.39303589 166.37750244]
[223.40199280 185.77400208]
[235.68927002 194.37765503]
[247.97654724 202.98129272]
[260.26382446 211.58494568]
[272.55111694 220.18858337]
[284.83840942 228.79223633]
[298.72418213 222.22865295]
[314.03009033 223.50331116]
[326.63891602 232.27333069]
[333.15893555 246.17962646]
[331.83630371 261.48147583]
[323.02679443 274.06274414]
[309.10015869 280.53912354]
[293.80252075 279.16854858]
[281.24893188 270.31964111]
[274.81622314 256.37277222]
[276.23474121 241.07951355]
[263.94747925 232.47587585]
[251.66018677 223.87222290]
[239.37290955 215.26858521]
[227.08563232 206.66493225]
[214.79833984 198.06127930]
[206.37532043 201.01977539]
[197.40147400 199.73506165]
[189.92274475 194.37155151]
[185.70318604 186.03784180]
[185.80972290 176.55953979]
[173.98956299 167.32461548]
[162.16940308 158.08970642]
[150.34924316 148.85478210]
[138.52908325 139.61985779]
[126.70892334 130.38493347]
[119.45040894 135.47241211]
[111.25814056 138.85697937]
[102.52540588 140.37614441]
[93.67144012 139.95697021]
[85.12127686 137.61959839]
[77.28540039 133.47622681]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 69]
[2 68]
[3 67]
[4 66]
[5 65]
[6 64]
[7 63]
[8 62]
[9 61]
[10 43]
[11 42]
[12 41]
[13 40]
[14 38]
[15 37]
[16 36]
[18 34]
[19 33]
[20 32]
[21 31]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
[72 100]
[73 99]
[74 98]
[75 97]
[76 96]
[77 94]
[78 93]
[79 90]
[80 89]
[81 88]
[82 87]
[101 131]
[102 130]
[103 129]
[104 128]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[135 173]
[136 172]
[137 171]
[138 170]
[139 169]
[140 168]
[142 163]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
