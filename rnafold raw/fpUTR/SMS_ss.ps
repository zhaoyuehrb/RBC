%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCCACCAUUAGCGAGGCCUCACACCCGGCGCUCCAAGUUCGGGGCUGGAGGCGUCCCGGCUUCCUCCCUCCCGGAGCGGGACCGGCCCCGCCCCCGCGCCCCGGGUCGCUCCCGGCGGCCCCUCCCACCUCCUAGUCCUGGCCUCCCCGGGCGCAGCACACUCCCAGCCGGCCGCAGCCUGACACGCCGCGCGGCCCCCCAGUCUCCCGCGGCUGCUCCCCCAGGCAUGGCACAGGGCCUCGCCUCACU\
) } def
/len { sequence length } bind def

/coor [
[180.61956787 419.16247559]
[167.25228882 426.19757080]
[152.44419861 429.18032837]
[137.39570618 427.86898804]
[123.32672882 422.36984253]
[111.37779236 413.12866211]
[102.51752472 400.89459229]
[97.46419525 386.65939331]
[96.62744904 371.57708740]
[100.07512665 356.87026978]
[107.52773285 343.73120117]
[118.38112640 333.22497559]
[131.75546265 326.20330811]
[146.56654358 323.23541260]
[147.86872864 308.29205322]
[149.17091370 293.34866333]
[150.47309875 278.40530396]
[151.77526855 263.46194458]
[153.07745361 248.51855469]
[154.37963867 233.57519531]
[155.68182373 218.63182068]
[156.98400879 203.68844604]
[147.74650574 215.50660706]
[132.96882629 218.07952881]
[120.28069305 210.07881165]
[116.23303223 195.63525391]
[122.91565704 182.20608521]
[136.87831116 176.72482300]
[150.91357422 182.02281189]
[142.03663635 169.93150330]
[133.15968323 157.84017944]
[124.28273773 145.74887085]
[113.34939575 151.04580688]
[101.26840973 153.71607971]
[88.67374420 153.51414490]
[76.25083923 150.34802246]
[64.69932556 144.28976440]
[54.69370270 135.57681274]
[46.84420776 124.60404205]
[41.66014481 111.90636444]
[39.51782227 98.13298798]
[40.63509750 84.01428986]
[45.05414963 70.32307434]
[52.63375473 57.83232117]
[38.21540070 53.69577026]
[23.79704475 49.55922318]
[9.37868977 45.42267227]
[-5.03966570 41.28612137]
[-19.48342514 37.23917007]
[-33.95203018 33.28197479]
[-48.42063904 29.32477570]
[-63.77312469 33.14730453]
[-74.00831604 22.32648659]
[-88.47692108 18.36928940]
[-102.94553375 14.41209221]
[-117.41413879 10.45489502]
[-132.46260071 19.39994431]
[-148.99516296 14.77191830]
[-156.89466858 -0.08893179]
[-171.41130066 -3.86616683]
[-185.92793274 -7.64340210]
[-200.44454956 -11.42063713]
[-214.98435974 -15.10767078]
[-229.54676819 -18.70436096]
[-244.10917664 -22.30105209]
[-259.36199951 -18.09846497]
[-269.86273193 -28.66178513]
[-284.42517090 -32.25847626]
[-298.98757935 -35.85516357]
[-313.54998779 -39.45185471]
[-327.97128296 -32.42296982]
[-342.39575195 -39.44540024]
[-345.75814819 -55.13214111]
[-335.47912598 -67.44966888]
[-319.44387817 -66.94902802]
[-309.95327759 -54.01426697]
[-295.39086914 -50.41757584]
[-280.82846069 -46.82088470]
[-266.26605225 -43.22419739]
[-252.05482483 -47.68404007]
[-240.51248169 -36.86346054]
[-225.95007324 -33.26677322]
[-211.38766479 -29.67008209]
[-204.16004944 -31.11346054]
[-196.66731262 -25.93726540]
[-182.15069580 -22.16003036]
[-167.63406372 -18.38279533]
[-153.11743164 -14.60556030]
[-143.04202271 -22.61254120]
[-130.00025940 -23.37419891]
[-118.73069763 -16.38975716]
[-113.45693970 -4.01371193]
[-98.98833466 -0.05651447]
[-84.51972961 3.90068293]
[-70.05111694 7.85788059]
[-55.73352432 3.75230503]
[-44.46343994 14.85616970]
[-29.99483490 18.81336594]
[-15.52622700 22.77056503]
[-8.26499844 21.50710678]
[-0.90311575 26.86776733]
[13.51523876 31.00431824]
[27.93359375 35.14086914]
[42.35194778 39.27741623]
[56.77030182 43.41396713]
[67.34392548 32.77449036]
[63.11793900 18.38209534]
[58.89195251 3.98970056]
[54.66596222 -10.40269375]
[50.43997574 -24.79508781]
[46.21398544 -39.18748474]
[41.98799896 -53.57987976]
[37.76200867 -67.97227478]
[27.49818993 -81.46635437]
[37.62361145 -95.06459808]
[53.49342346 -89.09925079]
[52.15440369 -72.19825745]
[56.38039398 -57.80586624]
[60.60638046 -43.41347122]
[64.83236694 -29.02107620]
[69.05835724 -14.62868214]
[73.28434753 -0.23628786]
[77.51033783 14.15610695]
[81.73632050 28.54850197]
[89.15321350 29.66193199]
[91.38007355 14.82815075]
[93.60694122 -0.00563057]
[95.83380127 -14.83941269]
[98.06066895 -29.67319489]
[95.59483337 -44.46912766]
[108.90470123 -51.38630295]
[119.59617615 -40.86525726]
[112.89444733 -27.44633102]
[110.66758728 -12.61254883]
[108.44071960 2.22123265]
[106.21385956 17.05501366]
[103.98699188 31.88879585]
[111.40388489 33.00222778]
[119.66956329 20.48509407]
[120.81748962 4.70558834]
[134.28738403 -1.65140796]
[142.55305481 -14.16854095]
[150.81872559 -26.68567276]
[159.00653076 -39.25388336]
[167.11613464 -51.87268829]
[175.22575378 -64.49149323]
[183.33537292 -77.11029053]
[183.57476807 -93.50769043]
[198.02494812 -101.26169586]
[211.82078552 -92.39564514]
[210.77030945 -76.03017426]
[195.95416260 -69.00067902]
[187.84455872 -56.38187790]
[179.73493958 -43.76307297]
[171.62533569 -31.14427185]
[170.65563965 -23.83800888]
[163.33586121 -18.41999817]
[155.07019043 -5.90286541]
[146.80450439 6.61426735]
[146.24780273 21.49846458]
[132.18669128 28.75077057]
[123.92102051 41.26790237]
[136.69578552 50.07069016]
[146.67013550 61.48405075]
[153.35876465 74.68782806]
[156.50332642 88.78643799]
[156.07911682 102.86894226]
[152.28649902 116.06768036]
[145.52812195 127.61175537]
[136.37405396 136.87193298]
[145.25099182 148.96324158]
[154.12794495 161.05455017]
[163.00488281 173.14587402]
[202.46350098 174.85795593]
[216.53395081 180.05627441]
[230.60440063 185.25457764]
[244.67485046 190.45288086]
[256.67791748 185.78021240]
[268.27957153 190.37947083]
[273.47518921 201.28465271]
[287.48001099 206.65727234]
[301.48483276 212.02989197]
[315.48965454 217.40251160]
[329.49444580 222.77513123]
[352.04516602 217.32237244]
[365.43313599 235.34494019]
[379.74435425 239.83824158]
[388.84161377 239.42163086]
[394.20471191 244.47721863]
[408.45901489 249.14788818]
[422.71328735 253.81855774]
[436.96759033 258.48922729]
[451.22189331 263.15991211]
[465.47616577 267.83056641]
[485.02111816 262.82415771]
[497.24435425 277.82675171]
[511.61026001 282.14202881]
[525.97613525 286.45727539]
[539.77349854 278.74957275]
[554.95684814 283.13595581]
[562.51824951 297.01400757]
[557.97161865 312.15017700]
[544.01440430 319.56442261]
[528.92712402 314.85800171]
[521.66088867 300.82315063]
[507.29498291 296.50790405]
[492.92910767 292.19262695]
[484.43249512 297.80935669]
[474.02801514 297.83709717]
[465.13433838 292.02624512]
[460.80551147 282.08486938]
[446.55120850 277.41418457]
[432.29690552 272.74353027]
[418.04263306 268.07284546]
[403.78833008 263.40219116]
[389.53402710 258.73150635]
[375.25103760 254.14942932]
[360.93984985 249.65612793]
[355.71578979 254.36666870]
[349.12548828 257.01382446]
[341.95877075 257.22998047]
[335.09207153 254.94189453]
[329.38125610 250.38546753]
[325.55496216 244.08222961]
[324.12182617 236.77995300]
[310.11703491 231.40733337]
[296.11221313 226.03471375]
[282.10739136 220.66209412]
[268.10256958 215.28947449]
[250.92964172 218.95823669]
[239.47654724 204.52333069]
[225.40609741 199.32502747]
[211.33564758 194.12672424]
[197.26519775 188.92840576]
[190.93074036 192.94396973]
[191.55174255 207.93110657]
[178.26182556 200.97508240]
[171.92736816 204.99063110]
[170.62519836 219.93400574]
[169.32301331 234.87738037]
[168.02082825 249.82073975]
[166.71864319 264.76409912]
[165.41645813 279.70748901]
[164.11428833 294.65084839]
[162.81210327 309.59423828]
[161.50991821 324.53759766]
[175.58441162 330.02261353]
[187.54263306 339.25180054]
[196.41517639 351.47695923]
[201.48280334 365.70706177]
[202.33470154 380.78854370]
[198.90179443 395.49877930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 246]
[15 245]
[16 244]
[17 243]
[18 242]
[19 241]
[20 240]
[21 239]
[22 238]
[29 173]
[30 172]
[31 171]
[32 170]
[44 105]
[45 104]
[46 103]
[47 102]
[48 101]
[49 99]
[50 98]
[51 97]
[53 95]
[54 94]
[55 93]
[56 92]
[59 88]
[60 87]
[61 86]
[62 85]
[63 83]
[64 82]
[65 81]
[67 79]
[68 78]
[69 77]
[70 76]
[106 124]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[112 118]
[113 117]
[138 162]
[139 161]
[141 159]
[142 158]
[143 157]
[144 155]
[145 154]
[146 153]
[147 152]
[174 234]
[175 233]
[176 232]
[177 231]
[180 229]
[181 228]
[182 227]
[183 226]
[184 225]
[186 218]
[187 217]
[189 216]
[190 215]
[191 214]
[192 213]
[193 212]
[194 211]
[196 207]
[197 206]
[198 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
