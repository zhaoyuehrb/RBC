%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGGCCGCCCCGGGCCCGCGCGGCCAAUCGGCGCAUUGAGAUGCAAAUAAGCGGCUAUAAAAGGGGCGGGACCGCGGCGGGCCGGAAGCCGCGAGGAGCGCGGACGGCUGGGCUGCUGCUGGGCGGCCGCGGGGCAGCGGAGGGCGCCGGCACUCCGGUCCCCGCCGCUCCCCGUCCCCGCUGCUCCUAGCCCCUGCCGCGUCCCCGGCGGAGCGGGC\
) } def
/len { sequence length } bind def

/coor [
[-45.65200806 692.15850830]
[-45.65200806 677.15850830]
[-45.65200806 662.15850830]
[-53.38930893 649.43127441]
[-45.65200806 635.63110352]
[-45.65200806 620.63110352]
[-53.97893906 611.86248779]
[-54.10563278 599.37005615]
[-45.41907883 589.84149170]
[-45.20488358 574.84301758]
[-45.09778595 559.84338379]
[-45.09778595 544.84338379]
[-45.09778595 529.84338379]
[-45.09778595 514.84338379]
[-45.09778595 499.84338379]
[-52.93829346 493.30322266]
[-55.95135880 483.31832886]
[-52.91232300 473.11206055]
[-44.59220505 466.11907959]
[-44.16386414 451.12518311]
[-43.73552322 436.13131714]
[-43.30718231 421.13742065]
[-42.87884140 406.14352417]
[-42.45050049 391.14965820]
[-42.02215958 376.15576172]
[-48.05815887 371.70416260]
[-52.79517365 385.93655396]
[-67.79479218 385.82940674]
[-72.32800293 371.53079224]
[-60.13014984 362.80096436]
[-66.16614532 358.34936523]
[-76.73287201 370.12457275]
[-91.27561951 366.90621948]
[-105.47382355 371.74472046]
[-119.67202759 376.58322144]
[-133.79969788 381.62396240]
[-147.85394287 386.86590576]
[-161.90818787 392.10787964]
[-165.93690491 407.09283447]
[-178.02528381 416.82168579]
[-193.52510071 417.55349731]
[-206.47634888 409.00686646]
[-211.89900208 394.46817017]
[-207.70796204 379.52777100]
[-195.51475525 369.93063354]
[-180.00791931 369.36700439]
[-167.15014648 378.05361938]
[-153.09590149 372.81167603]
[-139.04165649 367.56970215]
[-136.28018188 363.68054199]
[-131.04907227 361.48107910]
[-124.51052094 362.38500977]
[-110.31231689 357.54650879]
[-96.11411285 352.70803833]
[-86.56294250 341.27893066]
[-71.00463867 344.15118408]
[-85.47919464 340.21578979]
[-93.57818604 327.59014893]
[-91.12008667 312.79293823]
[-79.37401581 303.46395874]
[-64.40450287 304.41979980]
[-53.94033432 315.16693115]
[-53.38484955 330.15856934]
[-45.45625305 317.42526245]
[-37.52766037 304.69192505]
[-29.59906387 291.95861816]
[-21.67046928 279.22528076]
[-13.74187279 266.49197388]
[-5.90439463 253.70237732]
[1.84156740 240.85713196]
[9.58752918 228.01190186]
[17.33349037 215.16667175]
[17.07736206 210.40370178]
[19.80602837 205.42813110]
[25.48851967 202.06970215]
[33.59813309 189.45089722]
[41.70774460 176.83209229]
[49.81735611 164.21328735]
[57.92696762 151.59448242]
[66.03658295 138.97569275]
[74.14619446 126.35688019]
[82.25580597 113.73808289]
[69.72344971 94.96691895]
[78.57658386 67.47904205]
[73.33462524 53.42479324]
[68.09265900 39.37054825]
[53.99438095 32.74662781]
[48.87849426 18.41894913]
[55.28027344 5.01921797]
[49.93809891 -8.99724293]
[44.49598312 -22.97520256]
[39.05386734 -36.95316315]
[33.61175156 -50.93112564]
[28.16963768 -64.90908051]
[14.12036800 -72.65489197]
[11.55884552 -88.49213409]
[22.45005226 -100.27182770]
[38.43918610 -98.95760345]
[47.26074982 -85.55761719]
[42.14759827 -70.35119629]
[47.58971405 -56.37323761]
[53.03182983 -42.39527893]
[58.47394562 -28.41731834]
[63.91606140 -14.43935776]
[69.26839447 -9.35012627]
[69.33451843 -0.22274481]
[82.94762421 5.71182203]
[88.46392822 19.89015198]
[82.14690399 34.12858582]
[87.38887024 48.18283081]
[92.63082886 62.23707962]
[107.62471008 61.80873871]
[112.05578613 47.47815323]
[116.48686218 33.14757156]
[120.91793060 18.81698990]
[125.34900665 4.48640823]
[129.78007507 -9.84417439]
[134.21115112 -24.17475700]
[130.04725647 -40.03646851]
[141.89071655 -51.37950134]
[157.55799866 -46.53511429]
[160.93196106 -30.48679733]
[148.54173279 -19.74368286]
[144.11065674 -5.41310072]
[139.67959595 8.91748142]
[135.24851990 23.24806404]
[130.81744385 37.57864761]
[126.38636780 51.90922928]
[121.95529175 66.23980713]
[132.78663635 76.61680603]
[146.91430664 71.57606506]
[161.04197693 66.53532410]
[175.16963196 61.49457932]
[189.29730225 56.45383835]
[203.42497253 51.41309738]
[210.45021057 45.58563614]
[217.79051208 46.40281677]
[231.98872375 41.56432724]
[246.18692017 36.72583771]
[260.38513184 31.88734436]
[274.58334351 27.04885292]
[285.15005493 15.27366829]
[299.69281006 18.49200058]
[313.89099121 13.65350819]
[328.08920288 8.81501770]
[338.65591431 -2.96016812]
[353.19866943 0.25816366]
[367.39688110 -4.58032751]
[381.59509277 -9.41881847]
[395.79330444 -14.25730991]
[409.99148560 -19.09580040]
[420.37640381 -31.78774834]
[436.51452637 -28.87345314]
[441.80435181 -13.35088921]
[430.80413818 -1.18834233]
[414.82998657 -4.89759684]
[400.63177490 -0.05910580]
[386.43359375 4.77938557]
[372.23538208 9.61787701]
[358.03717041 14.45636749]
[348.48599243 25.88547134]
[332.92770386 23.01322174]
[318.72949219 27.85171318]
[304.53128052 32.69020462]
[294.98013306 44.11930847]
[279.42181396 41.24705887]
[265.22360229 46.08554840]
[251.02540588 50.92404175]
[236.82720947 55.76253128]
[222.62899780 60.60102081]
[208.46571350 65.54076385]
[194.33804321 70.58150482]
[180.21037292 75.62224579]
[166.08271790 80.66298676]
[151.95504761 85.70372772]
[137.82737732 90.74446869]
[121.80575562 121.59884644]
[94.87461090 121.84769440]
[86.76499939 134.46649170]
[78.65538025 147.08529663]
[70.54576874 159.70410156]
[62.43615723 172.32290649]
[54.32654572 184.94171143]
[46.21693420 197.56051636]
[38.10732269 210.17930603]
[30.17872620 222.91262817]
[22.43276405 235.75787354]
[14.68680286 248.60310364]
[6.94084072 261.44833374]
[5.19116020 270.40667725]
[-1.00855553 274.42056274]
[-8.93715096 287.15390015]
[-16.86574554 299.88720703]
[-24.79434204 312.62051392]
[-32.72293854 325.35385132]
[-40.65153122 338.08715820]
[-27.02827644 376.58410645]
[-27.45661736 391.57800293]
[-27.88495827 406.57186890]
[-28.31329918 421.56576538]
[-28.74164009 436.55963135]
[-29.16998100 451.55352783]
[-29.59832191 466.54742432]
[-19.23440933 483.84268188]
[-30.09778595 499.84338379]
[-30.09778595 514.84338379]
[-30.09778595 529.84338379]
[-30.09778595 544.84338379]
[-30.09778595 559.84338379]
[-26.97005272 568.41839600]
[-30.20641518 575.05718994]
[-30.42060661 590.05566406]
[-21.07240105 605.92401123]
[-30.65200806 620.63110352]
[-30.65200806 635.63110352]
[-22.91470718 649.43127441]
[-30.65200806 662.15850830]
[-30.65200806 677.15850830]
[-30.65200806 692.15850830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 219]
[2 218]
[3 217]
[5 215]
[6 214]
[9 212]
[10 211]
[11 209]
[12 208]
[13 207]
[14 206]
[15 205]
[19 203]
[20 202]
[21 201]
[22 200]
[23 199]
[24 198]
[25 197]
[31 56]
[33 54]
[34 53]
[35 52]
[36 49]
[37 48]
[38 47]
[63 196]
[64 195]
[65 194]
[66 193]
[67 192]
[68 191]
[69 189]
[70 188]
[71 187]
[72 186]
[75 185]
[76 184]
[77 183]
[78 182]
[79 181]
[80 180]
[81 179]
[82 178]
[84 111]
[85 110]
[86 109]
[89 106]
[90 104]
[91 103]
[92 102]
[93 101]
[94 100]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[117 124]
[118 123]
[130 176]
[131 175]
[132 174]
[133 173]
[134 172]
[135 171]
[137 170]
[138 169]
[139 168]
[140 167]
[141 166]
[143 164]
[144 163]
[145 162]
[147 160]
[148 159]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
