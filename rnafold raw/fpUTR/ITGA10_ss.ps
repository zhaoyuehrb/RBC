%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUUCCUUGGUCUGGGGCUCCCCACAGUUCCCCACCAUCACUCCUCCCAUUCCUUCCAACUUUAUUUUUAGCUGCCAUUGGGAGGGGGCAGGAUGGGAGGGAAAGUGAAGAAAACAGAAAAGGAGAGGGACAGAGGCCAGAGGACUUCUCAUACUGGACAGAAACCGAUCAGGC\
) } def
/len { sequence length } bind def

/coor [
[115.33762360 294.60647583]
[102.03838348 302.60083008]
[86.58306122 301.21777344]
[74.91455841 290.98910522]
[71.51963806 275.84796143]
[77.70372009 261.61642456]
[91.08890533 253.76679993]
[92.42587280 238.82650757]
[93.76284790 223.88621521]
[95.09981537 208.94590759]
[96.43678284 194.00561523]
[97.77375793 179.06530762]
[99.11072540 164.12501526]
[85.81932831 157.17240906]
[74.30956268 166.79141235]
[62.79979324 176.41041565]
[51.29002762 186.02943420]
[39.78025818 195.64843750]
[38.22393417 211.14732361]
[26.41436577 220.73840332]
[11.64813328 219.15916443]
[10.48928833 234.92091370]
[-1.52979493 245.18333435]
[-17.27840805 243.85791016]
[-27.41317749 231.73098755]
[-25.92132378 215.99726868]
[-13.68793869 205.99128723]
[2.02912807 207.64939880]
[3.09677744 192.83738708]
[14.63229179 182.91838074]
[30.16125488 184.13867188]
[41.67102051 174.51966858]
[53.18078613 164.90065002]
[64.69055176 155.28164673]
[76.20032501 145.66264343]
[59.84129715 127.32014465]
[54.60010529 104.75897217]
[60.45748520 83.81510925]
[74.68280792 69.28451538]
[67.49407196 56.11932755]
[60.30533981 42.95414352]
[53.11660385 29.78895760]
[45.92787170 16.62377357]
[38.38925552 3.65576148]
[30.50617027 -9.10577965]
[22.62308311 -21.86732101]
[14.73999500 -34.62886047]
[6.85690832 -47.39040375]
[-1.02617908 -60.15194321]
[-8.90926647 -72.91348267]
[-16.79235268 -85.67502594]
[-23.98864174 -91.35459137]
[-24.69990349 -98.73545074]
[-32.35395432 -111.63566589]
[-40.00800323 -124.53588104]
[-53.70400620 -132.45611572]
[-53.54416656 -147.34985352]
[-61.19821548 -160.25007629]
[-76.24858856 -164.26554871]
[-83.82711029 -177.45724487]
[-79.90621185 -191.78071594]
[-87.56026459 -204.68093872]
[-95.21431732 -217.58114624]
[-102.86836243 -230.48136902]
[-117.68953705 -227.38110352]
[-132.71400452 -229.26371765]
[-146.31201172 -235.92500305]
[-157.00857544 -246.64239502]
[-163.64338684 -260.25332642]
[-165.49676514 -275.28143311]
[-162.36766052 -290.09655762]
[-154.59550476 -303.09164429]
[-143.02336121 -312.85708618]
[-128.90647888 -318.33364868]
[-113.77616882 -318.92721558]
[-99.27364349 -314.57342529]
[-86.97202301 -305.74456787]
[-78.20570374 -293.39828491]
[-73.92559052 -278.87384033]
[-74.59595490 -263.74673462]
[-80.14408112 -249.65783691]
[-89.96815491 -238.13542175]
[-82.31410217 -225.23519897]
[-74.66004944 -212.33499146]
[-67.00600433 -199.43476868]
[-52.55549622 -196.01155090]
[-44.60943222 -183.03793335]
[-48.29800034 -167.90412903]
[-40.64395142 -155.00390625]
[-27.49541664 -148.00639343]
[-27.10779190 -132.18992615]
[-19.45374107 -119.28971863]
[-11.79969025 -106.38950348]
[-4.03081226 -93.55811310]
[3.85227489 -80.79656982]
[11.73536205 -68.03503418]
[19.61845016 -55.27349091]
[27.50153732 -42.51194763]
[35.38462448 -29.75040817]
[43.26771164 -16.98886681]
[51.15079880 -4.22732544]
[54.51307297 -3.06813455]
[57.47192383 -0.20440181]
[59.22398376 4.15206766]
[59.09305573 9.43503761]
[66.28179169 22.60022354]
[73.47052765 35.76540756]
[80.65925598 48.93059158]
[87.84799194 62.09577560]
[102.28675079 58.58880997]
[117.61503601 60.61577606]
[131.70666504 68.33043671]
[142.45487976 81.07119751]
[148.08308411 97.40129089]
[147.42654419 115.26609802]
[140.14193726 132.25100708]
[154.94879150 134.65039062]
[169.75564575 137.04978943]
[177.41358948 127.12264252]
[188.50726318 121.43798828]
[200.89340210 121.02484131]
[212.20841980 125.90039062]
[220.31932068 135.07847595]
[223.72583008 146.76838684]
[238.43760681 149.69474792]
[253.14938354 152.62109375]
[267.86117554 155.54745483]
[282.57293701 158.47380066]
[297.28472900 161.40016174]
[310.32934570 152.88690186]
[325.20748901 156.06422424]
[333.24319458 168.55274963]
[343.30953979 156.95257568]
[357.83258057 151.95487976]
[372.90567017 154.90402222]
[384.47424316 165.00668335]
[389.42639160 179.54531860]
[386.43002319 194.60908508]
[376.29113770 206.14593506]
[361.73706055 211.05249023]
[346.68273926 208.00891113]
[335.17773438 197.83390808]
[330.31683350 183.26452637]
[318.11367798 191.72727966]
[303.15216064 188.96911621]
[294.35836792 176.11193848]
[279.64657593 173.18557739]
[264.93481445 170.25923157]
[250.22303772 167.33287048]
[235.51126099 164.40652466]
[220.79946899 161.48016357]
[208.43191528 174.05056763]
[190.84338379 176.72839355]
[175.01867676 168.26013184]
[167.35624695 151.85664368]
[152.54939270 149.45724487]
[137.74253845 147.05786133]
[131.81965637 151.65888977]
[143.66357422 160.86334229]
[158.10200500 164.92921448]
[166.07925415 177.63211060]
[163.47035217 192.40348816]
[151.62434387 201.60522461]
[136.66667175 200.47921753]
[126.33178711 189.60768127]
[125.96336365 174.61328125]
[119.97389984 160.86094666]
[114.05102539 165.46199036]
[112.71405792 180.40228271]
[111.37708282 195.34257507]
[110.04011536 210.28288269]
[108.70314026 225.22317505]
[107.36617279 240.16348267]
[106.02920532 255.10377502]
[117.80798340 265.20526123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 174]
[8 173]
[9 172]
[10 171]
[11 170]
[12 169]
[13 168]
[14 35]
[15 34]
[16 33]
[17 32]
[18 31]
[21 28]
[39 109]
[40 108]
[41 107]
[42 106]
[43 105]
[44 101]
[45 100]
[46 99]
[47 98]
[48 97]
[49 96]
[50 95]
[51 94]
[53 93]
[54 92]
[55 91]
[57 89]
[58 88]
[61 85]
[62 84]
[63 83]
[64 82]
[116 157]
[117 156]
[118 155]
[124 151]
[125 150]
[126 149]
[127 148]
[128 147]
[129 146]
[132 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
