%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUUGGUUCCAGCUGCGUGUGGUGAAAGCAACUAGAGGCAGAGCUAUCAAGGGCUGUGACAGAUGAGCAGUGGUCUGUCUGCAAUGAGCAUGUGCUCAAGCUAAC\
) } def
/len { sequence length } bind def

/coor [
[21.73317146 152.00923157]
[13.73281670 139.32087708]
[15.51820374 124.42751312]
[26.29222298 113.98902130]
[11.34930325 112.68168640]
[-3.59361744 111.37435150]
[-18.53653717 110.06701660]
[-33.47945786 108.75968170]
[-48.42237854 107.45233917]
[-55.89637756 119.37548828]
[-67.74018097 126.85078430]
[-81.58693695 128.45245361]
[-94.69884491 123.92176056]
[-104.50844574 114.20676422]
[-109.12135315 101.26461029]
[-124.01992798 99.52321625]
[-138.91850281 97.78182220]
[-153.81707764 96.04042816]
[-168.42218018 102.12331390]
[-180.16514587 92.96078491]
[-194.77026367 99.04366302]
[-206.51322937 89.88113403]
[-221.41180420 88.13973999]
[-236.31037903 86.39834595]
[-251.20895386 84.65695190]
[-262.45840454 95.51899719]
[-278.06146240 96.55723572]
[-290.65087891 87.28142548]
[-294.28231812 72.07134247]
[-287.24108887 58.10870361]
[-272.85186768 51.98625183]
[-257.90881348 56.59481812]
[-249.46755981 69.75837708]
[-234.56898499 71.49977112]
[-219.67041016 73.24116516]
[-204.77183533 74.98255920]
[-191.23237610 68.77512360]
[-178.42375183 78.06221008]
[-164.88429260 71.85476685]
[-152.07568359 81.14185333]
[-137.17710876 82.88324738]
[-122.27853394 84.62464142]
[-107.37995911 86.36603546]
[-98.11270905 73.21617126]
[-83.41250610 66.45472717]
[-67.21141052 67.99342346]
[-53.89497375 77.50984955]
[-47.11504364 92.50942230]
[-32.17212296 93.81675720]
[-17.22920227 95.12409210]
[-2.28628111 96.43142700]
[12.65663910 97.73876953]
[27.59955978 99.04610443]
[42.59797287 98.82794189]
[57.49654770 97.08654785]
[72.39512634 95.34515381]
[87.29370117 93.60375977]
[107.24989319 59.35452271]
[119.78220367 51.11188889]
[132.19331360 42.68785858]
[144.48060608 34.08421326]
[156.76788330 25.48056602]
[169.05516052 16.87691879]
[181.34243774 8.27327251]
[193.62971497 -0.33037442]
[205.91700745 -8.93402100]
[212.78350830 -23.18750000]
[227.64701843 -24.14953804]
[234.08343506 -39.23279190]
[250.39436340 -40.93142700]
[259.80053711 -27.49803352]
[252.62567139 -12.75173283]
[236.25065613 -11.86225700]
[230.26301575 1.77583146]
[214.52064514 3.35325980]
[202.23336792 11.95690632]
[189.94609070 20.56055260]
[177.65881348 29.16419983]
[165.37152100 37.76784515]
[153.08424377 46.37149429]
[140.79696655 54.97513962]
[137.06541443 61.49039078]
[128.02484131 63.64420700]
[115.49252319 71.88684082]
[114.94758606 79.36701965]
[113.85771942 94.32736969]
[113.31278229 101.80754852]
[124.51815796 111.77948761]
[135.72354126 121.75142670]
[146.92890930 131.72335815]
[158.13429260 141.69529724]
[174.29531860 144.47978210]
[179.70971680 159.95932007]
[168.80763245 172.20989990]
[152.80418396 168.62916565]
[148.16235352 152.90068054]
[136.95697021 142.92874146]
[125.75160217 132.95680237]
[114.54622650 122.98486328]
[103.34085083 113.01292419]
[89.03509521 108.50233459]
[74.13652039 110.24372864]
[59.23794174 111.98512268]
[44.33936691 113.72651672]
[55.41173935 123.84593964]
[57.63051224 138.68092346]
[50.00342560 151.59710693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 53]
[5 52]
[6 51]
[7 50]
[8 49]
[9 48]
[15 43]
[16 42]
[17 41]
[18 40]
[20 38]
[22 36]
[23 35]
[24 34]
[25 33]
[54 104]
[55 103]
[56 102]
[57 101]
[58 84]
[59 83]
[60 81]
[61 80]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[68 73]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
