%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGAGACAGGGCUGCUUUAAGAGAGAAACAGGAAGUUGUAACUAGAAGCCAUCUGAAUACUAAGCCAGGGCAGAAUGCUUGUGAAGUAGCAACUAAAGUGGCAGUGUUUCUUCUGAAAUUCUCAGGCAGUCAGACUGUCUUAGGCAAAUCUUGAUAAAAUAGCCUUUAUCCAGGUUUUUAUCUAAGGAAUCCCAAGAAGACUGGGGA\
) } def
/len { sequence length } bind def

/coor [
[63.93009949 115.09725952]
[64.63034821 97.30348969]
[72.82981110 83.39481354]
[58.07086563 80.71646118]
[43.31192017 78.03810883]
[28.55297661 75.35975647]
[13.79403400 72.68140411]
[-0.96491015 70.00305176]
[-15.72385406 67.32469940]
[-30.48279762 64.64633942]
[-43.38230515 73.37792206]
[-58.31182098 70.45143890]
[-66.55654907 58.09992218]
[-81.31549072 55.42156982]
[-96.07444000 52.74321365]
[-110.83338165 50.06486130]
[-125.59232330 47.38650894]
[-140.35127258 44.70815277]
[-155.11021423 42.02980042]
[-169.86915588 39.35144806]
[-158.37626648 48.99060822]
[-151.07745361 62.09508896]
[-148.93289185 76.94099426]
[-152.22471619 91.57533264]
[-160.51985168 104.07295990]
[-172.72708130 112.78980255]
[-187.24055481 116.57916260]
[-202.15100098 114.94253540]
[-215.49694824 108.09523773]
[-225.52275085 96.93801880]
[-230.90946960 82.93862152]
[-230.94851685 67.93866730]
[-225.63475037 53.91141891]
[-215.66717529 42.70215225]
[-202.35705566 35.78546143]
[-187.45243835 34.07143021]
[-201.24536133 28.17605591]
[-215.03826904 22.28067970]
[-228.83119202 16.38530350]
[-242.62409973 10.48992920]
[-256.41702271 4.59455347]
[-272.14761353 6.28540277]
[-280.80975342 -5.83139610]
[-294.60266113 -11.72677135]
[-308.39556885 -17.62214661]
[-322.27514648 -23.31052971]
[-337.94812012 -21.14984894]
[-346.96884155 -33.00209427]
[-360.93194580 -38.48220825]
[-374.89505005 -43.96232224]
[-388.85815430 -49.44244003]
[-403.20193481 -43.36837387]
[-417.28442383 -49.12489700]
[-422.98672485 -62.83691406]
[-436.94982910 -68.31703186]
[-450.91293335 -73.79714203]
[-464.87603760 -79.27725983]
[-474.63964844 -72.49266815]
[-486.34619141 -71.27640533]
[-497.07516479 -75.81558990]
[-504.20596313 -84.87586975]
[-506.05770874 -96.13455200]
[-519.85058594 -102.02993011]
[-535.21582031 -97.41574860]
[-548.32073975 -106.66991425]
[-549.11248779 -122.69342041]
[-536.98364258 -133.19439697]
[-521.23846436 -130.11741638]
[-513.95526123 -115.82284546]
[-500.16232300 -109.92746735]
[-483.61386108 -117.75328827]
[-466.30319214 -110.88069153]
[-459.39593506 -93.24036407]
[-445.43283081 -87.76025391]
[-431.46972656 -82.28013611]
[-417.50662231 -76.80001831]
[-404.00000000 -82.97309113]
[-389.76135254 -77.61438751]
[-383.37805176 -63.40554428]
[-369.41494751 -57.92543030]
[-355.45184326 -52.44531631]
[-341.48873901 -46.96519852]
[-326.81448364 -49.51785278]
[-316.79501343 -37.27363586]
[-312.13644409 -38.32884979]
[-306.76559448 -36.46823502]
[-302.50021362 -31.41506386]
[-288.70727539 -25.51968765]
[-274.91436768 -19.62431335]
[-260.17034912 -21.73683929]
[-250.52165222 -9.19836330]
[-236.72872925 -3.30298781]
[-222.93582153 2.59238768]
[-209.14289856 8.48776340]
[-195.34997559 14.38313866]
[-181.55706787 20.27851486]
[-167.19079590 24.59250450]
[-152.43185425 27.27085686]
[-137.67291260 29.94921112]
[-122.91397095 32.62756348]
[-108.15502930 35.30591583]
[-93.39608002 37.98427200]
[-78.63713837 40.66262436]
[-63.87819672 43.34097672]
[-51.81917953 34.67404556]
[-36.81335831 37.18003082]
[-27.80444527 49.88739777]
[-13.04550076 52.56575012]
[1.71344328 55.24410629]
[16.47238731 57.92245865]
[31.23133087 60.60081100]
[45.99027634 63.27916718]
[60.74921799 65.95751953]
[75.50816345 68.63587189]
[88.97363281 62.02671051]
[95.88327026 48.71292496]
[102.79290771 35.39913559]
[109.70254517 22.08535004]
[106.24951172 6.41831207]
[116.45713043 -5.95844078]
[132.49499512 -5.55052233]
[142.06022644 7.32914686]
[137.81520081 22.80038834]
[123.01633453 28.99498749]
[116.10669708 42.30877304]
[109.19705963 55.62256241]
[102.28742218 68.93634796]
[114.01489258 78.28869629]
[125.45733643 68.58969879]
[136.89978027 58.89070511]
[148.34222412 49.19171143]
[159.78466797 39.49271774]
[167.95767212 24.63881493]
[184.49359131 28.38043976]
[185.47578430 45.30591202]
[169.48365784 50.93516159]
[158.04121399 60.63415527]
[146.59877014 70.33315277]
[135.15632629 80.03214264]
[123.71389008 89.73114014]
[127.37899780 104.27648163]
[142.05120850 107.39515686]
[156.72341919 110.51383209]
[171.39562988 113.63250732]
[186.06785583 116.75118256]
[200.74006653 119.86985779]
[219.61044312 112.78105927]
[233.40565491 126.32955170]
[248.16459656 129.00790405]
[262.92355347 131.68626404]
[277.68249512 134.36460876]
[292.44143677 137.04296875]
[307.20037842 139.72131348]
[322.16030884 134.57247925]
[333.30151367 144.45797729]
[348.06045532 147.13633728]
[362.81939697 149.81468201]
[377.57833862 152.49304199]
[392.33728027 155.17138672]
[407.09622192 157.84974670]
[419.94302368 148.64456177]
[435.52230835 151.30195618]
[444.59115601 164.24536133]
[441.76919556 179.79566956]
[428.73062134 188.72715759]
[413.21102905 185.74093628]
[404.41787720 172.60868835]
[389.65893555 169.93032837]
[374.89999390 167.25198364]
[360.14105225 164.57362366]
[345.38211060 161.89527893]
[330.62316895 159.21691895]
[316.71887207 164.55734253]
[304.52203369 154.48025513]
[289.76309204 151.80191040]
[275.00415039 149.12355042]
[260.24517822 146.44520569]
[245.48625183 143.76684570]
[230.72731018 141.08850098]
[222.88452148 147.64007568]
[212.51235962 148.81756592]
[203.00885010 143.99221802]
[197.62138367 134.54206848]
[182.94917297 131.42340088]
[168.27696228 128.30471802]
[153.60475159 125.18604279]
[138.93254089 122.06736755]
[124.26032257 118.94869232]
[119.15902710 124.44658661]
[123.58038330 138.78016663]
[108.95643616 135.44236755]
[103.85514069 140.94024658]
[108.06154633 155.33837891]
[112.26795959 169.73651123]
[116.47437286 184.13464355]
[127.77115631 195.21133423]
[123.91339111 209.59767151]
[128.11979675 223.99580383]
[140.34049988 234.93138123]
[136.71597290 250.92497253]
[120.97483826 255.52374268]
[109.31021881 243.99687195]
[113.72167206 228.20220947]
[109.51526642 213.80409241]
[98.51934814 203.75724792]
[102.07624054 188.34104919]
[97.86982727 173.94291687]
[93.66342163 159.54478455]
[89.45700836 145.14666748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 114]
[4 113]
[5 112]
[6 111]
[7 110]
[8 109]
[9 108]
[10 107]
[13 104]
[14 103]
[15 102]
[16 101]
[17 100]
[18 99]
[19 98]
[20 97]
[36 96]
[37 95]
[38 94]
[39 93]
[40 92]
[41 91]
[43 89]
[44 88]
[45 87]
[46 84]
[48 82]
[49 81]
[50 80]
[51 79]
[54 76]
[55 75]
[56 74]
[57 73]
[62 70]
[63 69]
[115 127]
[116 126]
[117 125]
[118 124]
[128 140]
[129 139]
[130 138]
[131 137]
[132 136]
[141 188]
[142 187]
[143 186]
[144 185]
[145 184]
[146 183]
[148 179]
[149 178]
[150 177]
[151 176]
[152 175]
[153 174]
[155 172]
[156 171]
[157 170]
[158 169]
[159 168]
[160 167]
[192 209]
[193 208]
[194 207]
[195 206]
[197 204]
[198 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
