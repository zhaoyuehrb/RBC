%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:03:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGCACGGCGGCGAGCGCUAUCUGGAGCUGACCGUGCGGCUCUUAAUCCCUGGCCUUGGGAAAGUGAAUUGGCCUGAAUAGCAAGGAGGAGAACUUGGGUGUGGAAAUACCGGAAUCUCACUCUAUUGCUCAGGCUGGAGUGCAGUGGCCACAAAGCGGGAGAUUGGCACGAGGGAUACCAACACCGGAAUAUGUG\
) } def
/len { sequence length } bind def

/coor [
[96.31774139 115.51779175]
[86.39806366 126.76945496]
[76.47838593 138.02111816]
[73.15600586 153.48954773]
[58.93547440 157.91964722]
[49.01579666 169.17132568]
[39.09611893 180.42298889]
[29.17644119 191.67465210]
[19.25676346 202.92631531]
[9.33708572 214.17797852]
[-0.58259267 225.42965698]
[-10.41359520 236.75888062]
[-20.15531540 248.16496277]
[-29.89703751 259.57104492]
[-39.63875580 270.97714233]
[-32.70651627 284.50537109]
[-31.48396492 299.65704346]
[-36.15753555 314.12170410]
[-46.01453781 325.69357300]
[-59.55185699 332.60800171]
[-74.70514679 333.81060791]
[-89.16363525 329.11804199]
[-100.72251892 319.24581909]
[-107.61914825 305.69940186]
[-108.80182648 290.54455566]
[-104.09021759 276.09225464]
[-94.20280457 264.54635620]
[-80.64734650 257.66757202]
[-65.49094391 256.50482178]
[-51.04484558 261.23541260]
[-41.30312729 249.82933044]
[-31.56140518 238.42324829]
[-21.81968498 227.01715088]
[-19.86439705 219.88284302]
[-11.83425903 215.50997925]
[-1.91458070 204.25830078]
[8.00509739 193.00663757]
[17.92477608 181.75497437]
[27.84445381 170.50331116]
[37.76412964 159.25164795]
[47.68380737 147.99996948]
[50.29666901 133.33633423]
[65.22672272 128.10144043]
[75.14640045 116.84977722]
[85.06607819 105.59811401]
[92.08502960 92.34162903]
[95.81537628 77.81288147]
[99.54572296 63.28413391]
[103.27606964 48.75538635]
[107.00641632 34.22663879]
[110.73677063 19.69789314]
[106.67451477 4.40709019]
[117.33387756 -5.99614286]
[121.06422424 -20.52489090]
[117.00196838 -35.81569290]
[127.66133118 -46.21892548]
[131.39167786 -60.74767303]
[127.32942200 -76.03847504]
[137.98878479 -86.44171143]
[141.71913147 -100.97045898]
[145.44947815 -115.49920654]
[149.06561279 -130.05680847]
[152.56729126 -144.64234924]
[144.57272339 -158.01115417]
[148.33171082 -172.75308228]
[161.12608337 -180.29228210]
[156.82414246 -195.51739502]
[167.31878662 -206.08677673]
[170.82046509 -220.67233276]
[160.31159973 -236.42715454]
[164.57350159 -254.55169678]
[180.44857788 -263.65454102]
[183.49038696 -278.34286499]
[186.53219604 -293.03121948]
[189.57400513 -307.71957397]
[192.61581421 -322.40789795]
[195.65762329 -337.09625244]
[198.69943237 -351.78457642]
[201.74124146 -366.47293091]
[204.78305054 -381.16128540]
[203.13589478 -386.13323975]
[203.52735901 -390.77395630]
[205.48814392 -394.36059570]
[208.32966614 -396.46240234]
[212.06001282 -410.99114990]
[215.79035950 -425.51989746]
[219.52070618 -440.04864502]
[223.13684082 -454.60626221]
[226.63851929 -469.19180298]
[230.14019775 -483.77734375]
[233.64187622 -498.36291504]
[237.02890015 -512.97552490]
[240.30104065 -527.61425781]
[243.57319641 -542.25299072]
[246.84533691 -556.89178467]
[240.60398865 -568.18597412]
[243.63685608 -580.31561279]
[253.78741455 -586.90563965]
[257.28909302 -601.49121094]
[252.98716736 -616.71630859]
[263.48181152 -627.28570557]
[266.98348999 -641.87121582]
[270.48516846 -656.45678711]
[273.98684692 -671.04235840]
[277.48852539 -685.62786865]
[272.31463623 -701.18945312]
[283.40527344 -713.26965332]
[299.35131836 -709.44134521]
[303.74884033 -693.64282227]
[292.07406616 -682.12622070]
[288.57238770 -667.54064941]
[285.07070923 -652.95513916]
[281.56903076 -638.36956787]
[278.06735229 -623.78399658]
[282.61975098 -609.60217285]
[271.87463379 -597.98950195]
[268.37295532 -583.40399170]
[274.25930786 -566.87567139]
[261.48410034 -553.61962891]
[258.21194458 -538.98083496]
[254.93978882 -524.34210205]
[251.66764832 -509.70333862]
[253.27798462 -502.48336792]
[248.22743225 -494.86120605]
[244.72573853 -480.27566528]
[241.22406006 -465.69012451]
[237.72238159 -451.10458374]
[239.21911621 -443.86016846]
[234.04945374 -436.31829834]
[230.31910706 -421.78955078]
[226.58876038 -407.26080322]
[222.85841370 -392.73205566]
[219.47138977 -378.11947632]
[216.42958069 -363.43112183]
[213.38777161 -348.74276733]
[210.34596252 -334.05444336]
[207.30415344 -319.36608887]
[204.26234436 -304.67776489]
[201.22053528 -289.98941040]
[198.17872620 -275.30105591]
[195.13691711 -260.61273193]
[203.32514954 -252.65299988]
[206.68505859 -241.61358643]
[204.27000427 -230.20712280]
[196.56747437 -221.29522705]
[185.40602112 -217.17063904]
[181.90434265 -202.58509827]
[186.45674133 -188.40324402]
[175.71162415 -176.79060364]
[183.68878174 -164.26460266]
[180.34535217 -149.42289734]
[167.15283203 -141.14067078]
[163.65115356 -126.55512238]
[165.14788818 -119.31072235]
[159.97822571 -111.76885223]
[156.24787903 -97.24010468]
[152.51753235 -82.71135712]
[156.84660339 -68.45975494]
[145.92042542 -57.01732635]
[142.19007874 -42.48857880]
[146.51914978 -28.23696709]
[135.59297180 -16.79454231]
[131.86262512 -2.26579428]
[136.19169617 11.98581505]
[125.26551819 23.42824173]
[121.53516388 37.95698929]
[117.80481720 52.48573685]
[114.07447052 67.01448059]
[110.34412384 81.54322815]
[106.61377716 96.07197571]
[117.72164917 94.94222260]
[129.16036987 99.41419983]
[138.77993774 109.40126038]
[147.01527405 121.93836975]
[162.23336792 125.26216125]
[170.40658569 138.09388733]
[167.14407349 152.58152771]
[182.64967346 153.17793274]
[194.82257080 162.80084229]
[198.98200989 177.75004578]
[193.52862549 192.27726746]
[180.55934143 200.79649353]
[165.06111145 200.03192139]
[152.99333191 190.27752686]
[148.99630737 175.28407288]
[154.60696411 160.81686401]
[140.01516724 158.05731201]
[131.48475647 145.46022034]
[134.47816467 130.17370605]
[126.24282837 117.63660431]
[118.76155853 117.10690308]
[119.97814178 132.05747986]
[121.19472504 147.00807190]
[124.55455780 161.62693787]
[114.80212402 173.02386475]
[99.83959961 171.96415710]
[91.79080963 159.30647278]
[97.17701721 145.30752563]
[100.48801422 130.67750549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 45]
[2 44]
[3 43]
[5 41]
[6 40]
[7 39]
[8 38]
[9 37]
[10 36]
[11 35]
[12 33]
[13 32]
[14 31]
[15 30]
[46 170]
[47 169]
[48 168]
[49 167]
[50 166]
[51 165]
[53 163]
[54 162]
[56 160]
[57 159]
[59 157]
[60 156]
[61 155]
[62 153]
[63 152]
[66 149]
[68 147]
[69 146]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
[77 136]
[78 135]
[79 134]
[80 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 127]
[89 126]
[90 125]
[91 124]
[92 122]
[93 121]
[94 120]
[95 119]
[98 117]
[99 116]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[173 190]
[174 189]
[177 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
