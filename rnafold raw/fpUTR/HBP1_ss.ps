%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGACGGGUUUGGUAAGUAGGAAAGUUUCGGUUGAGGAGUAAGAGCUGCCGCGGGAGCAGUAACCCGCGCGGGGGAGGCCGACGUCGGUCGGAGAGGGGGUACGAGAGCUGCUGGUGGUGUUGUCGUGGCCGGAGCGGCCCGCGCCUGGGCUGCCGGCACUUCGCGGCAGUCAGAGCACCAUAAC\
) } def
/len { sequence length } bind def

/coor [
[273.80401611 445.38281250]
[264.66427612 433.48892212]
[255.52452087 421.59500122]
[246.38476562 409.70111084]
[239.80239868 406.30596924]
[237.19338989 397.52975464]
[228.25473022 385.48397827]
[219.31608582 373.43823242]
[210.37742615 361.39245605]
[201.43878174 349.34667969]
[192.50012207 337.30093384]
[193.81352234 352.24331665]
[189.39138794 366.57666016]
[179.88754272 378.18170166]
[166.70719910 385.34255981]
[151.79910278 387.00051880]
[137.36750793 382.91040039]
[125.54619598 373.67694092]
[118.08300018 360.66537476]
[116.08139038 345.79953003]
[119.83731842 331.27737427]
[128.79545593 319.24609375]
[141.63128662 311.48455811]
[156.44697571 309.14035034]
[171.05195618 312.56008911]
[183.28514099 321.23638916]
[177.39970398 307.43920898]
[171.51425171 293.64205933]
[165.62881470 279.84490967]
[159.74336243 266.04776001]
[153.85792542 252.25059509]
[147.97248840 238.45343018]
[142.08703613 224.65628052]
[136.20159912 210.85911560]
[130.67367554 205.92994690]
[130.33532715 196.78039551]
[118.37214661 187.90733337]
[120.33831787 172.20877075]
[114.68548584 158.31468201]
[109.24114990 153.29335022]
[109.05656433 144.13940430]
[103.63793945 130.15232849]
[98.21931458 116.16523743]
[87.85768127 110.81895447]
[83.73722076 99.91171265]
[87.97586060 89.04984283]
[82.79296875 74.97370911]
[77.61008453 60.89756775]
[72.42719269 46.82143021]
[67.24430847 32.74529266]
[62.06141663 18.66915512]
[56.76047134 4.63704872]
[51.34184647 -9.35003471]
[45.92322159 -23.33711815]
[40.50459671 -37.32419968]
[25.33527946 -38.60995865]
[12.28168583 -46.32297897]
[3.90567040 -58.88731384]
[1.82400024 -73.78119659]
[6.39651680 -88.04308319]
[16.66528130 -98.86057281]
[11.24665642 -112.84765625]
[5.82803154 -126.83473969]
[-0.20252809 -133.72393799]
[0.43803272 -141.10258484]
[-4.74485636 -155.17871094]
[-9.92774487 -169.25485229]
[-21.95681572 -179.53163147]
[-19.09366417 -194.14845276]
[-31.12273598 -204.42521667]
[-28.25958443 -219.04205322]
[-39.70024109 -220.19978333]
[-49.83227921 -225.52816772]
[-57.20314789 -234.21990967]
[-60.77244186 -244.98873901]
[-60.05863571 -256.25970459]
[-55.20367432 -266.39953613]
[-46.94680786 -273.95318604]
[-51.41398239 -288.27255249]
[-55.88115311 -302.59191895]
[-60.34832382 -316.91128540]
[-64.81549835 -331.23068237]
[-77.23274994 -341.94253540]
[-73.89925385 -357.99929810]
[-58.24422073 -362.88314819]
[-46.37221146 -351.57000732]
[-50.49612808 -335.69784546]
[-46.02895355 -321.37847900]
[-41.56178284 -307.05911255]
[-37.09461212 -292.73971558]
[-32.62743759 -278.42034912]
[-14.62096691 -273.49288940]
[-3.11128831 -258.60485840]
[-2.87349200 -239.63835144]
[-14.18344688 -224.22494507]
[-2.52509046 -214.95498657]
[-5.01752710 -199.33134460]
[6.64082956 -190.06138611]
[4.14839268 -174.43774414]
[9.33128166 -160.36160278]
[14.51417065 -146.28546143]
[19.81511497 -132.25335693]
[25.23373985 -118.26628113]
[30.65236473 -104.27919769]
[45.52876663 -103.20300293]
[58.51606750 -95.74382019]
[67.01163483 -83.33470154]
[69.28622437 -68.40665436]
[64.83573151 -53.91251755]
[54.49168015 -42.74282455]
[59.91030502 -28.75574303]
[65.32893372 -14.76865959]
[70.74755859 -0.78157616]
[76.10677338 4.33051634]
[76.13755798 13.48626614]
[81.32044220 27.56240463]
[86.50333405 41.63854218]
[91.68621826 55.71467972]
[96.86911011 69.79081726]
[102.05200195 83.86695862]
[115.21363068 94.25270844]
[112.20639801 110.74661255]
[117.62502289 124.73369598]
[123.04364777 138.72077942]
[128.57957458 152.66184998]
[134.23240662 166.55593872]
[146.59991455 176.42280579]
[144.22941589 191.12756348]
[149.99874878 204.97367859]
[155.88420105 218.77082825]
[161.76963806 232.56799316]
[167.65509033 246.36514282]
[173.54052734 260.16229248]
[179.42596436 273.95947266]
[185.31141663 287.75662231]
[191.19685364 301.55377197]
[197.08230591 315.35095215]
[204.54589844 328.36227417]
[213.48454285 340.40802002]
[222.42320251 352.45379639]
[231.36184692 364.49957275]
[240.30050659 376.54534912]
[249.23915100 388.59109497]
[258.27868652 400.56137085]
[267.41842651 412.45526123]
[276.55816650 424.34918213]
[285.69793701 436.24307251]
[293.37185669 438.61715698]
[298.09820557 444.07662964]
[299.06228638 450.41729736]
[310.39852905 460.24020386]
[321.73477173 470.06311035]
[333.07101440 479.88601685]
[344.40725708 489.70892334]
[355.74349976 499.53186035]
[367.07974243 509.35476685]
[378.41598511 519.17767334]
[393.49871826 515.53204346]
[407.83087158 521.47924805]
[415.90145874 534.73236084]
[414.60711670 550.19537354]
[404.44558716 561.92242432]
[389.32418823 565.40417480]
[375.05740356 559.30187988]
[367.13107300 545.96197510]
[368.59307861 530.51391602]
[357.25683594 520.69097900]
[345.92059326 510.86810303]
[334.58435059 501.04516602]
[323.24810791 491.22225952]
[311.91183472 481.39935303]
[300.57559204 471.57644653]
[289.23934937 461.75354004]
[293.35745239 476.17718506]
[291.82388306 491.09857178]
[284.85809326 504.38305664]
[273.45657349 514.13012695]
[259.25048828 518.94537354]
[244.27210999 518.13989258]
[230.66432190 511.82897949]
[220.37385559 500.91540527]
[214.87286377 486.96051025]
[214.94833374 471.96069336]
[220.58946228 458.06185913]
[230.98924255 447.25238037]
[244.65985107 441.07867432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 147]
[2 146]
[3 145]
[4 144]
[6 143]
[7 142]
[8 141]
[9 140]
[10 139]
[11 138]
[26 137]
[27 136]
[28 135]
[29 134]
[30 133]
[31 132]
[32 131]
[33 130]
[34 129]
[36 128]
[38 126]
[39 125]
[41 124]
[42 123]
[43 122]
[46 120]
[47 119]
[48 118]
[49 117]
[50 116]
[51 115]
[52 113]
[53 112]
[54 111]
[55 110]
[61 104]
[62 103]
[63 102]
[65 101]
[66 100]
[67 99]
[69 97]
[71 95]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[150 173]
[151 172]
[152 171]
[153 170]
[154 169]
[155 168]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
