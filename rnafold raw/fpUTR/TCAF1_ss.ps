%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUCUCCGCCUAAGACUUUCCAAGUCCUGUAGUUUCGAGCCCGCUGCCCUUUGCCUCCUGGGCGGAGAAGCUGCUUCCUCCUGGGAACAACCGCCUCCCGCUCCUAGCAGGUUGCUACUGCCCCGAACCCGCGCUGCAGGGAACAGCGGGGCAAACAAAACCAAUAGAGCC\
) } def
/len { sequence length } bind def

/coor [
[83.15116882 110.69719696]
[68.39499664 113.39077759]
[53.63882446 116.08435822]
[38.88265228 118.77793884]
[24.12648010 121.47151947]
[9.42134380 124.43106842]
[-5.22796488 127.65562439]
[-19.87727356 130.88017273]
[-34.52658081 134.10473633]
[-49.17588806 137.32929993]
[-63.82519913 140.55384827]
[-78.47451019 143.77841187]
[-93.12381744 147.00296021]
[-107.77312469 150.22752380]
[-99.83326721 168.13975525]
[-107.68016052 191.99627686]
[-118.38208008 202.50669861]
[-129.08399963 213.01712036]
[-139.78591919 223.52754211]
[-150.48783875 234.03796387]
[-157.55181885 249.45018005]
[-174.31723022 246.92880249]
[-176.53550720 230.12060547]
[-160.99826050 223.33602905]
[-150.29634094 212.82562256]
[-139.59442139 202.31520081]
[-128.89250183 191.80477905]
[-118.19058228 181.29435730]
[-121.46212769 174.54551697]
[-128.00521851 161.04780579]
[-131.27676392 154.29896545]
[-146.15711975 156.18969727]
[-161.03749084 158.08044434]
[-175.91784668 159.97119141]
[-190.79820251 161.86193848]
[-197.34346008 175.83201599]
[-210.41462708 184.02642822]
[-225.84074402 183.83033752]
[-238.69938660 175.30633545]
[-244.88742065 161.17439270]
[-242.43026733 145.94395447]
[-232.11198425 134.47502136]
[-217.22509766 130.42726135]
[-202.51997375 135.09231567]
[-192.68894958 146.98158264]
[-177.80859375 145.09083557]
[-162.92822266 143.20008850]
[-148.04786682 141.30934143]
[-133.16751099 139.41859436]
[-146.90254211 133.38960266]
[-156.47789001 121.84349060]
[-159.86181641 107.23017120]
[-156.33627319 92.65036774]
[-146.64936829 81.19770050]
[-132.85647583 75.30224609]
[-117.88426971 76.21493530]
[-104.90961456 83.74210358]
[-96.68553925 96.28660583]
[-94.95706177 111.18668365]
[-100.09094238 125.28076935]
[-110.99768066 135.57821655]
[-96.34837341 132.35365295]
[-81.69906616 129.12910461]
[-67.04975128 125.90454102]
[-52.40044785 122.67998505]
[-37.75113678 119.45542908]
[-23.10182953 116.23087311]
[-8.45252132 113.00631714]
[6.19678688 109.78176117]
[9.49335480 106.28270721]
[15.03498840 104.83888245]
[21.43290138 106.71533966]
[36.18907547 104.02176666]
[50.94524765 101.32818604]
[65.70141602 98.63460541]
[80.45759583 95.94102478]
[65.45874786 96.12731934]
[52.94682693 87.85375977]
[47.24559784 73.97946167]
[50.32525253 59.29901123]
[61.12154770 48.88555527]
[75.90357971 46.33770370]
[89.56308746 52.53592300]
[97.37971497 65.33827972]
[96.65213776 80.32096100]
[99.87670135 65.67164612]
[103.10125732 51.02233887]
[106.32581329 36.37303162]
[95.37126160 25.51018715]
[92.05091858 10.44437027]
[97.42428589 -4.01697254]
[109.77674866 -13.25927925]
[125.16667938 -14.33336258]
[138.68319702 -6.89648771]
[146.01324463 6.67826653]
[144.81782532 22.05924606]
[135.47839355 34.33843613]
[120.97512054 39.59758759]
[117.75056458 54.24689865]
[114.52600861 68.89620209]
[111.30145264 83.54551697]
[119.26554108 96.25666046]
[133.85424805 99.74517059]
[148.44294739 103.23368073]
[163.03166199 106.72219086]
[172.14138794 105.67396545]
[177.85108948 110.40762329]
[192.37443542 114.15895081]
[203.13214111 106.01988220]
[216.41979980 105.58034515]
[227.36622620 112.77677917]
[232.08789062 124.78730774]
[246.54113770 128.80023193]
[260.99438477 132.81315613]
[275.44763184 136.82608032]
[285.54284668 125.43099213]
[299.52746582 119.57289886]
[314.60705566 120.36431885]
[327.79345703 127.59479523]
[336.49697876 139.78323364]
[339.03491211 154.48100281]
[353.48815918 158.49392700]
[367.94140625 162.50685120]
[382.39465332 166.51977539]
[396.84793091 170.53269958]
[411.30117798 174.54563904]
[425.75442505 178.55856323]
[442.64810181 167.74240112]
[461.76995850 172.70655823]
[470.98110962 189.83929443]
[485.63040161 193.06385803]
[500.27972412 196.28842163]
[511.79602051 185.88867188]
[527.22924805 184.27770996]
[540.64501953 192.07495117]
[546.88464355 206.28221130]
[543.54895020 221.43650818]
[531.92053223 231.71069336]
[516.47070312 233.15415955]
[503.14035034 225.21183777]
[497.05517578 210.93772888]
[482.40585327 207.71316528]
[467.75656128 204.48861694]
[460.87332153 212.18367004]
[451.33544922 216.34298706]
[440.85098267 216.14814758]
[431.32833862 211.56715393]
[424.52893066 203.37252808]
[421.74148560 193.01181030]
[407.28823853 188.99888611]
[392.83499146 184.98596191]
[378.38174438 180.97303772]
[363.92849731 176.96011353]
[349.47525024 172.94717407]
[335.02200317 168.93424988]
[325.26986694 180.21969604]
[311.52838135 186.17631531]
[296.50180054 185.57350159]
[283.17272949 178.47731018]
[274.21008301 166.24792480]
[271.43472290 151.27934265]
[256.98147583 147.26641846]
[242.52821350 143.25347900]
[228.07496643 139.24055481]
[213.82072449 148.13612366]
[197.21217346 143.90296936]
[188.62310791 128.68229675]
[174.09976196 124.93096924]
[159.54315186 121.31089783]
[144.95443726 117.82238770]
[130.36573792 114.33387756]
[115.77703094 110.84535980]
[105.93547058 118.48654175]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 76]
[2 75]
[3 74]
[4 73]
[5 72]
[6 69]
[7 68]
[8 67]
[9 66]
[10 65]
[11 64]
[12 63]
[13 62]
[14 61]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[31 49]
[32 48]
[33 47]
[34 46]
[35 45]
[85 101]
[86 100]
[87 99]
[88 98]
[102 172]
[103 171]
[104 170]
[105 169]
[107 168]
[108 167]
[112 164]
[113 163]
[114 162]
[115 161]
[121 155]
[122 154]
[123 153]
[124 152]
[125 151]
[126 150]
[127 149]
[130 143]
[131 142]
[132 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
