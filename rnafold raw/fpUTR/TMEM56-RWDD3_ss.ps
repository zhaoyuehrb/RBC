%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGGCGCCCCGCAUUCCUCUCGCGUUUCUCGGGCUGCACGAUUCCGGCUGCCCUGUCUGCCUGGCGGUGCCUCUCGGGUCUGAGCUUAAAGCGGGUGGGUGCAAACCUUUGGGCAUCCAGGGAGAGCUUUCUUGUUAGAGCCCACACACAAUCGGGCGCAUCAAGUGGGUUGAAGAAAU\
) } def
/len { sequence length } bind def

/coor [
[80.38003540 212.18421936]
[91.11452484 201.70706177]
[105.40656281 197.15321350]
[120.22360229 199.48890686]
[132.42155457 208.21841431]
[128.30923462 193.79312134]
[124.19692993 179.36784363]
[120.08462524 164.94255066]
[115.97231293 150.51725769]
[111.86000061 136.09197998]
[78.64090729 125.16367340]
[72.31079102 95.69348907]
[58.64671707 89.50534821]
[44.98264313 83.31721497]
[31.31856537 77.12908173]
[22.18289375 76.43457031]
[17.47248459 70.71313477]
[3.91786718 64.28878021]
[-11.86634827 65.37004089]
[-20.05342293 52.92733002]
[-33.60803986 46.50297165]
[-47.16265488 40.07861710]
[-60.71727371 33.65425873]
[-74.27188873 27.22990417]
[-88.46789551 37.54982376]
[-105.84517670 39.26612473]
[-121.62429810 31.99706459]
[-131.51098633 17.81985664]
[-132.86473083 0.67800999]
[-146.63415527 -5.27203941]
[-160.40356445 -11.22208881]
[-174.17298889 -17.17213821]
[-187.94241333 -23.12218666]
[-201.71182251 -29.07223701]
[-215.48124695 -35.02228546]
[-229.25067139 -40.97233582]
[-234.48864746 -40.35889435]
[-238.97985840 -41.69844818]
[-242.10140991 -44.37324905]
[-243.56912231 -47.60716248]
[-257.01019287 -54.26580811]
[-270.45126343 -60.92444992]
[-282.50878906 -51.63049316]
[-297.34539795 -48.50603104]
[-312.00729370 -52.11837006]
[-323.59918213 -61.69901657]
[-329.85601807 -75.30641937]
[-329.58544922 -90.21923828]
[-343.02655029 -96.87788391]
[-356.46762085 -103.53652954]
[-369.90869141 -110.19516754]
[-383.34976196 -116.85381317]
[-396.79083252 -123.51245880]
[-409.53207397 -114.93593597]
[-424.85565186 -113.89507294]
[-438.63961792 -120.66986084]
[-447.17614746 -133.43791199]
[-448.16897583 -148.76467896]
[-441.35101318 -162.52734375]
[-428.55627441 -171.02381897]
[-413.22647095 -171.96859741]
[-399.48522949 -165.10752869]
[-391.02890015 -152.28622437]
[-390.13220215 -136.95353699]
[-376.69110107 -130.29489136]
[-363.25003052 -123.63624573]
[-349.80895996 -116.97760010]
[-336.36788940 -110.31896210]
[-322.92681885 -103.66031647]
[-311.22686768 -112.91107178]
[-296.61056519 -116.17801666]
[-281.96527100 -112.76089478]
[-270.20800781 -103.28530121]
[-263.70434570 -89.58898163]
[-263.79263306 -74.36552429]
[-250.35154724 -67.70687866]
[-236.91047668 -61.04823685]
[-223.30061340 -54.74175644]
[-209.53120422 -48.79170609]
[-195.76177979 -42.84165573]
[-181.99235535 -36.89160538]
[-168.22294617 -30.94155693]
[-154.45352173 -24.99150848]
[-140.68409729 -19.04145813]
[-126.91468048 -13.09140968]
[-117.62189484 -21.69402695]
[-105.71871185 -26.15075111]
[-92.96764374 -25.76382446]
[-81.27111816 -20.55550957]
[-72.38765717 -11.27005577]
[-67.66751862 0.73246276]
[-67.84753418 13.67528629]
[-54.29291534 20.09964371]
[-40.73830032 26.52400017]
[-27.18368340 32.94835663]
[-13.62906647 39.37271118]
[1.18563211 37.83193970]
[10.34222412 50.73416519]
[23.89684105 57.15851974]
[37.50669861 63.46500397]
[51.17077637 69.65313721]
[64.83485413 75.84127045]
[78.49893188 82.02941132]
[83.53231812 75.80410767]
[90.38481140 71.04025269]
[98.61731720 68.26979828]
[107.63618469 67.88909912]
[116.73587036 70.11453247]
[125.15412140 74.95174408]
[132.13531494 82.18183899]
[136.99668884 91.36664581]
[151.45712280 87.37967682]
[165.91755676 83.39270782]
[180.37799072 79.40574646]
[194.83842468 75.41877747]
[202.30372620 70.10726166]
[209.58448792 71.49043274]
[224.11193848 67.75504303]
[235.55056763 56.82488632]
[249.80368042 61.14901352]
[264.33114624 57.41362381]
[275.76977539 46.48347092]
[290.02288818 50.80759811]
[304.55032349 47.07220459]
[319.07778931 43.33681488]
[333.60522461 39.60142136]
[344.93289185 27.74326324]
[360.79998779 31.88659859]
[364.88381958 47.76911926]
[352.98327637 59.05224991]
[337.34063721 54.12887192]
[322.81317139 57.86426544]
[308.28573608 61.59965515]
[293.75827026 65.33504486]
[283.35873413 75.99802399]
[268.06652832 71.94107819]
[253.53907776 75.67646790]
[243.13954163 86.33943939]
[227.84733582 82.28249359]
[213.31988525 86.01788330]
[198.82539368 89.87921143]
[184.36495972 93.86617279]
[169.90452576 97.85314178]
[155.44409180 101.84011078]
[140.98365784 105.82707977]
[137.30906677 112.36522675]
[151.91075134 115.79903412]
[166.90628052 116.16482544]
[176.83125305 127.41181946]
[175.32876587 142.33638000]
[163.36114502 151.37939453]
[148.59361267 148.74887085]
[140.48461914 136.12934875]
[129.95988464 125.44152069]
[126.28529358 131.97966003]
[130.39759827 146.40495300]
[134.50990295 160.83024597]
[138.62222290 175.25552368]
[142.73452759 189.68081665]
[146.84683228 204.10609436]
[154.90612793 212.44236755]
[153.94062805 222.69850159]
[160.48237610 236.19686890]
[167.02412415 249.69522095]
[173.56587219 263.19357300]
[188.18920898 269.79187012]
[192.00814819 285.37374878]
[182.09313965 297.98614502]
[166.05012512 297.95388794]
[156.18592834 285.30172729]
[160.06752014 269.73532104]
[153.52577209 256.23696899]
[146.98402405 242.73860168]
[140.44227600 229.24024963]
[137.15922546 243.87657166]
[127.66373444 255.48843384]
[113.97060394 261.61203003]
[98.98530579 260.94796753]
[85.88750458 253.63717651]
[77.45634460 241.23091125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 160]
[6 159]
[7 158]
[8 157]
[9 156]
[10 155]
[12 103]
[13 102]
[14 101]
[15 100]
[17 99]
[18 98]
[20 96]
[21 95]
[22 94]
[23 93]
[24 92]
[29 85]
[30 84]
[31 83]
[32 82]
[33 81]
[34 80]
[35 79]
[36 78]
[40 77]
[41 76]
[42 75]
[48 69]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[111 145]
[112 144]
[113 143]
[114 142]
[115 141]
[117 140]
[118 139]
[120 137]
[121 136]
[123 134]
[124 133]
[125 132]
[126 131]
[162 174]
[163 173]
[164 172]
[165 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
