%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUCUGCCGCCGCCACCCUGGCAGGAUGGGGCAACGGUGUGCGGUAGGAGGAUGAGGUUGAUUCCCUUUCCUGCAGGGCUGGGCUUGUGGGUUAGGACCGUCACCAAGAGGCUCCUCCUAGGCCUCCGUGACCUCUGGAUCCCCAAGAAAGGAAGGAAGCAGCCACCCUCGCC\
) } def
/len { sequence length } bind def

/coor [
[-33.72006226 214.22589111]
[-36.78315353 216.12899780]
[-39.92741776 216.79330444]
[-42.72753906 216.35650635]
[-55.19958115 224.69006348]
[-67.67162323 233.02362061]
[-80.14366913 241.35717773]
[-92.61571503 249.69071960]
[-105.08776093 258.02429199]
[-117.55979919 266.35781860]
[-130.03184509 274.69137573]
[-142.50389099 283.02493286]
[-154.90106201 291.46948242]
[-167.22238159 300.02432251]
[-179.54368591 308.57916260]
[-191.86500549 317.13400269]
[-199.74444580 337.03948975]
[-220.34344482 338.00640869]
[-232.18920898 347.20846558]
[-244.03495789 356.41052246]
[-255.88072205 365.61260986]
[-267.72647095 374.81466675]
[-269.44717407 390.52499390]
[-281.82489014 400.35189819]
[-297.51614380 398.46520996]
[-307.21160889 385.98428345]
[-305.15914917 370.31384277]
[-292.57641602 360.75085449]
[-276.92855835 362.96890259]
[-265.08279419 353.76684570]
[-253.23703003 344.56478882]
[-241.39126587 335.36270142]
[-229.54551697 326.16064453]
[-229.88710022 317.23214722]
[-226.00605774 309.03121948]
[-218.66534424 303.46765137]
[-209.44874573 301.90155029]
[-200.41983032 304.81268311]
[-188.09852600 296.25784302]
[-175.77722168 287.70300293]
[-163.45590210 279.14816284]
[-159.74279785 272.72976685]
[-150.83744812 270.55288696]
[-138.36540222 262.21932983]
[-125.89335632 253.88578796]
[-113.42131042 245.55223083]
[-100.94926453 237.21868896]
[-88.47722626 228.88513184]
[-76.00518036 220.55157471]
[-63.53313446 212.21801758]
[-51.06109238 203.88446045]
[-38.89443970 195.11106873]
[-27.04867935 185.90899658]
[-23.68443489 179.30105591]
[-14.90836620 176.65066528]
[-2.90024710 167.66149902]
[9.10787106 158.67233276]
[21.11598969 149.68316650]
[33.12410736 140.69400024]
[38.67602539 126.87280273]
[54.36042023 124.79669952]
[66.36853790 115.80753326]
[63.09400177 104.34745789]
[63.61590958 92.44017029]
[67.88057709 81.31054688]
[75.44930267 72.10346985]
[85.54351044 65.76605225]
[82.61715698 51.05427551]
[79.69080353 36.34249496]
[66.83361816 27.54871178]
[64.07545471 12.58718872]
[72.53821564 0.38402343]
[69.61186218 -14.32775593]
[66.68550873 -29.03953552]
[63.75915146 -43.75131607]
[60.83279800 -58.46309280]
[57.90644073 -73.17487335]
[54.98008728 -87.88665009]
[52.05373383 -102.59843445]
[38.77535629 -111.16932678]
[35.52838135 -126.63647461]
[44.23918533 -139.82348633]
[59.73979950 -142.90675354]
[72.83398438 -134.05702209]
[75.75319672 -118.52467346]
[66.76551056 -105.52478790]
[69.69186401 -90.81300354]
[72.61822510 -76.10122681]
[75.54457855 -61.38945007]
[78.47093201 -46.67766953]
[81.39728546 -31.96588898]
[84.32363892 -17.25411034]
[87.24999237 -2.54233146]
[99.73851776 5.49336386]
[102.91583252 20.37151337]
[94.40258026 33.41614151]
[97.32893372 48.12791824]
[100.25528717 62.83969879]
[108.18569946 63.75158691]
[115.73838043 66.33612823]
[122.56483459 70.47405243]
[128.35005188 75.97443390]
[141.51524353 68.78569794]
[154.68041992 61.59696579]
[167.84561157 54.40822983]
[181.01078796 47.21949768]
[183.47930908 36.58451462]
[191.24641418 29.22833443]
[201.56646729 27.41733170]
[210.97067261 31.51401329]
[224.38404846 24.79975510]
[237.79742432 18.08549690]
[251.21080017 11.37123871]
[264.62417603 4.65698004]
[278.03756714 -2.05727792]
[281.48770142 -17.30950737]
[293.96585083 -26.73447990]
[309.58016968 -25.88201141]
[320.95809937 -15.15461349]
[322.72729492 0.38256663]
[314.05239868 13.39334679]
[299.02944946 17.73443413]
[284.75183105 11.35610104]
[271.33843994 18.07035828]
[257.92504883 24.78461647]
[244.51168823 31.49887466]
[231.09829712 38.21313477]
[217.68492126 44.92739105]
[208.28666687 61.80443192]
[188.19952393 60.38468170]
[175.03434753 67.57341766]
[161.86915588 74.76215363]
[148.70396423 81.95088196]
[135.53878784 89.13961792]
[137.12304688 98.31680298]
[136.37577820 107.59970093]
[133.34394836 116.40530396]
[145.18971252 125.60736847]
[157.03546143 134.80943298]
[172.51098633 133.03567505]
[184.39317322 142.53662109]
[185.98881531 157.30108643]
[197.83457947 166.50315857]
[209.68034363 175.70521545]
[221.68846130 184.69438171]
[233.85511780 193.46778870]
[249.41384888 190.69265747]
[262.32986450 199.80043030]
[264.94036865 215.38763428]
[255.69653320 228.20664978]
[240.08261108 230.65219116]
[227.36203003 221.27336121]
[225.08171082 205.63444519]
[212.91505432 196.86103821]
[208.11140442 196.73446655]
[203.34378052 193.56719971]
[200.47827148 187.55097961]
[188.63250732 178.34890747]
[176.78675842 169.14685059]
[162.08630371 171.25212097]
[149.94192505 162.08865356]
[147.83340454 146.65519714]
[135.98764038 137.45312500]
[124.14188385 128.25106812]
[99.66834259 137.15969849]
[75.35770416 127.81565094]
[63.34958649 136.80482483]
[56.93877029 151.26898193]
[42.11327362 152.70211792]
[30.10515594 161.69128418]
[18.09703636 170.68045044]
[6.08891773 179.66961670]
[-5.91920090 188.65878296]
[-17.84661484 197.75476074]
[-29.69237137 206.95683289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 51]
[5 50]
[6 49]
[7 48]
[8 47]
[9 46]
[10 45]
[11 44]
[12 43]
[13 41]
[14 40]
[15 39]
[16 38]
[18 33]
[19 32]
[20 31]
[21 30]
[22 29]
[52 175]
[53 174]
[55 173]
[56 172]
[57 171]
[58 170]
[59 169]
[61 167]
[62 166]
[67 98]
[68 97]
[69 96]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[102 134]
[103 133]
[104 132]
[105 131]
[106 130]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[137 164]
[138 163]
[139 162]
[142 159]
[143 158]
[144 157]
[145 154]
[146 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
