%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUGCUUUUGGGGGUGGGGGAGGCGUCCCUCCCUGGACCCCGGCGACUUCCUCUCUCGGUUUGUCUGGGUCAUCUUGUCUGCCCGCCGCUGGCCUGGCCCCGUCUGUCUCUCUCAGCAGCUGUCUUUCUCGCGCCCACUGGCCGGUCUCUCCUCUUCCCCGCAGUUGCCUCCUUCUCUGCCUGCCUGGGUGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[274.90356445 369.98583984]
[273.45013428 355.05642700]
[282.86517334 343.37921143]
[297.76269531 341.63345337]
[286.74380493 331.45581055]
[275.72494507 321.27816772]
[260.89859009 322.12359619]
[249.57890320 311.95898438]
[248.79264832 296.40200806]
[237.77377319 286.22436523]
[226.75489807 276.04675293]
[215.73602295 265.86911011]
[201.13684082 262.91726685]
[196.24919128 247.86997986]
[185.23030090 237.69233704]
[174.21142578 227.51469421]
[163.19255066 217.33705139]
[152.17367554 207.15940857]
[141.15480042 196.98176575]
[130.13592529 186.80412292]
[119.11705780 176.62649536]
[108.09817505 166.44885254]
[97.07929993 156.27120972]
[86.06042480 146.09356689]
[71.11750793 144.78622437]
[58.49870300 152.89584351]
[45.87990189 161.00544739]
[33.26109695 169.11506653]
[30.14698219 184.60951233]
[16.94264793 193.29403687]
[1.48199379 190.01628113]
[-7.06244993 176.72087097]
[-3.62141538 161.29573059]
[9.76359272 152.89233398]
[25.15148544 156.49626160]
[37.77029037 148.38665771]
[50.38909149 140.27703857]
[63.00789642 132.16741943]
[62.41352081 124.69101715]
[48.86948776 118.24436951]
[61.22476959 109.73818970]
[60.63039780 102.26177979]
[46.88877106 96.24782562]
[33.14714050 90.23386383]
[19.35823822 84.32910919]
[5.52292347 78.53393555]
[-8.31239128 72.73876190]
[-18.62505531 83.82363129]
[-32.08271027 90.69847107]
[-47.05232620 92.55073547]
[-61.72479248 89.17601013]
[-74.33356476 81.00041962]
[-83.36734772 69.02689362]
[-87.75122833 54.71219635]
[-86.97455597 39.78965759]
[-100.80986786 33.99448395]
[-114.64518738 28.19930649]
[-128.48049927 22.40412903]
[-142.31581116 16.60895157]
[-157.64712524 21.33445930]
[-170.81886292 12.17559242]
[-171.72680664 -3.84174871]
[-159.67443848 -14.43043137]
[-143.90733337 -11.46772385]
[-136.52062988 2.77363753]
[-122.68531799 8.56881428]
[-108.85000610 14.36399078]
[-95.01469421 20.15916824]
[-81.17937469 25.95434570]
[-71.08898926 14.93302917]
[-57.81180573 8.01599121]
[-42.94137192 6.05518961]
[-28.26993942 9.30641747]
[-15.57242584 17.39611626]
[-6.39171267 29.36418915]
[-1.85116792 43.77791214]
[-2.51721406 58.90344620]
[11.31809998 64.69862366]
[25.15341377 70.49379730]
[32.54537582 70.17798615]
[39.16109848 76.49224091]
[52.90272903 82.50619507]
[66.64435577 88.52015686]
[80.73201752 78.81933594]
[94.83753204 78.62345123]
[96.50009918 63.71587753]
[90.34006500 49.14314651]
[99.44035339 37.35188293]
[101.10292816 22.44430542]
[102.76550293 7.53672886]
[104.42807770 -7.37084770]
[106.09064484 -22.27842522]
[93.44135284 -33.49979401]
[90.00323486 -49.88614273]
[96.93656158 -64.94358063]
[111.33103943 -72.82495880]
[112.75688171 -87.75703430]
[114.18271637 -102.68911743]
[103.08512878 -113.70626831]
[101.71706390 -129.28388977]
[110.72447968 -142.06671143]
[125.85433960 -146.01907349]
[139.96279907 -139.27479553]
[146.38827515 -125.01831055]
[142.09684753 -109.98110199]
[129.11479187 -101.26327515]
[127.68895721 -86.33119965]
[126.26311493 -71.39911652]
[137.05024719 -63.52273178]
[142.57873535 -51.24511719]
[141.30583191 -37.73173904]
[133.45771790 -26.52504730]
[120.99822235 -20.61585236]
[119.33565521 -5.70827484]
[117.67308044 9.19930172]
[116.01050568 24.10687828]
[114.34793091 39.01445770]
[120.62689209 52.52089691]
[111.40767670 65.37844849]
[109.74510956 80.28602600]
[127.49471283 107.99476624]
[96.23806763 135.07469177]
[107.25694275 145.25233459]
[118.27581787 155.42997742]
[129.29469299 165.60762024]
[140.31356812 175.78524780]
[151.33244324 185.96289062]
[162.35131836 196.14053345]
[173.37019348 206.31817627]
[184.38906860 216.49581909]
[195.40794373 226.67346191]
[206.42681885 236.85110474]
[221.81414795 240.53088379]
[225.91366577 254.85021973]
[236.93254089 265.02786255]
[247.95141602 275.20550537]
[258.97030640 285.38314819]
[274.54064941 284.93402100]
[285.57037354 295.41256714]
[285.90258789 310.25930786]
[296.92144775 320.43695068]
[307.94033813 330.61456299]
[319.43099976 340.25637817]
[331.36743164 349.34054565]
[343.30386353 358.42468262]
[355.24029541 367.50881958]
[367.17672729 376.59298706]
[382.84414673 378.79345703]
[388.28625488 392.65826416]
[397.02047729 395.36941528]
[400.33847046 401.98242188]
[412.12927246 411.25482178]
[423.47256470 404.02362061]
[436.47082520 400.64816284]
[449.85379028 401.44384766]
[462.31808472 406.31906128]
[472.65414429 414.78561401]
[479.86358643 426.00756836]
[483.25567627 438.88366699]
[482.51342773 452.15557861]
[477.72320557 464.53063965]
[489.21386719 474.17245483]
[500.70452881 483.81427002]
[512.19519043 493.45608521]
[526.08636475 487.13165283]
[541.34576416 487.46923828]
[554.94360352 494.40185547]
[564.18005371 506.55300903]
[567.22119141 521.51007080]
[563.46325684 536.30334473]
[553.65228271 547.99554443]
[539.73632812 554.26525879]
[524.47839355 553.86755371]
[510.90795898 546.88146973]
[501.71942139 534.69403076]
[498.73718262 519.72509766]
[502.55337524 504.94674683]
[491.06271362 495.30493164]
[479.57205200 485.66311646]
[468.08139038 476.02130127]
[453.50646973 484.05398560]
[436.92822266 485.88098145]
[420.88330078 481.19436646]
[407.83770752 470.68505859]
[399.80770874 455.94110107]
[398.04821777 439.20776367]
[402.85687256 423.04562378]
[391.06607056 413.77322388]
[379.20208740 404.59466553]
[364.38842773 403.04397583]
[358.09255981 388.52938843]
[346.15612793 379.44525146]
[334.21972656 370.36111450]
[322.28329468 361.27697754]
[310.34686279 352.19281006]
[311.21435547 367.16772461]
[301.34912109 378.46713257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 142]
[5 141]
[6 140]
[9 137]
[10 136]
[11 135]
[12 134]
[14 132]
[15 131]
[16 130]
[17 129]
[18 128]
[19 127]
[20 126]
[21 125]
[22 124]
[23 123]
[24 122]
[25 38]
[26 37]
[27 36]
[28 35]
[42 83]
[43 82]
[44 81]
[45 79]
[46 78]
[47 77]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[85 120]
[86 119]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
[96 108]
[97 107]
[98 106]
[143 195]
[144 194]
[145 193]
[146 192]
[147 191]
[149 189]
[151 188]
[152 187]
[161 180]
[162 179]
[163 178]
[164 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
