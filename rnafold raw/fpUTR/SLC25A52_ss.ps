%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUCCUGCGGGGCGCCGGCGGCGAUGGGUUGGGGAAAUGGACGCCUGGAGAACGGAAAUCCAGUUAUCAAAAUGGACUCGGGAAGAGAGAACCUAACAGAACAAUAACAAUGGAAGAAAUUGGGAACAUUAUCACAAAGCUAUCAUCCUGCCAAACUCCAGGCUCAGAUGAUGUCACAGGUUAAAAA\
) } def
/len { sequence length } bind def

/coor [
[52.70779037 341.98742676]
[51.14626694 327.06893921]
[52.67319870 312.14685059]
[57.22551727 297.84997559]
[46.53158951 308.36853027]
[35.83766174 318.88708496]
[25.14373589 329.40563965]
[29.63300514 340.58651733]
[30.08007622 352.59204102]
[26.45577812 364.00979614]
[19.20853424 373.50448608]
[9.20901775 379.97402954]
[-2.35440278 382.67742920]
[-14.11687469 381.31964111]
[-24.69815445 376.08355713]
[-29.85892487 391.03939819]
[-44.50941849 393.72497559]
[-55.71174240 403.70034790]
[-66.91406250 413.67568970]
[-78.11638641 423.65106201]
[-89.31871033 433.62643433]
[-87.64786530 449.05328369]
[-95.39299774 462.49920654]
[-109.57593536 468.79394531]
[-124.74306488 465.51705933]
[-135.06230164 453.92858887]
[-136.56568909 438.48449707]
[-128.67515564 425.12341309]
[-114.42475891 418.98287964]
[-99.29407501 422.42413330]
[-88.09175110 412.44876099]
[-76.88943481 402.47338867]
[-65.68711090 392.49801636]
[-54.48478699 382.52264404]
[-50.12528229 368.28030396]
[-34.67352295 364.88125610]
[-39.16078949 347.34487915]
[-34.11754608 329.87182617]
[-20.85254097 317.30688477]
[-2.96646309 313.17926025]
[14.62518501 318.71170044]
[25.31911087 308.19314575]
[36.01303864 297.67459106]
[46.70696640 287.15606689]
[54.70244217 274.46463013]
[59.57293320 260.27737427]
[64.44342804 246.09010315]
[69.31391907 231.90284729]
[74.18441010 217.71559143]
[79.05490112 203.52833557]
[83.92539215 189.34106445]
[88.79588318 175.15380859]
[80.10449219 163.08741760]
[80.18582916 148.03892517]
[89.21827698 135.78053284]
[103.90667725 131.13757324]
[108.77717590 116.95030975]
[98.26768494 118.24594879]
[89.13026428 113.80156708]
[84.10559082 105.46591949]
[84.41670990 96.16606140]
[73.21438599 86.19068909]
[62.01206589 76.21532440]
[50.80974579 66.23995209]
[36.25436401 71.14265442]
[21.20086098 68.09510040]
[9.69855118 57.91706085]
[4.84149790 43.34638596]
[7.93622446 28.30250740]
[18.15026474 16.83215714]
[32.73609543 12.02079964]
[47.77019882 15.16266727]
[59.20847702 25.41261101]
[63.97409058 40.01345062]
[60.78511429 55.03763199]
[71.98743439 65.01300049]
[83.18975830 74.98836517]
[94.39208221 84.96373749]
[104.52626038 83.55001831]
[114.09067535 88.67981720]
[119.06288147 99.02101898]
[128.85166931 87.65529633]
[138.64045715 76.28957367]
[148.42924500 64.92385101]
[158.21803284 53.55812454]
[161.36116028 38.05227661]
[175.52946472 33.45788574]
[185.31825256 22.09216309]
[188.46138000 6.58631563]
[202.62968445 1.99192441]
[212.41845703 -9.37379837]
[203.31701660 -20.84838104]
[196.48979187 -33.80099869]
[192.16964722 -47.78659439]
[190.50332642 -62.32493210]
[191.54647827 -76.91708374]
[195.26182556 -91.06256104]
[201.52041626 -104.27648926]
[210.10618591 -116.10618591]
[220.72332764 -126.14672852]
[233.00660706 -134.05476379]
[246.53378296 -139.56030273]
[260.84024048 -142.47586060]
[275.43484497 -142.70291138]
[289.81692505 -140.23518372]
[303.49334717 -135.15884399]
[315.99545288 -127.64946747]
[315.26293945 -143.20907593]
[325.53897095 -154.42771912]
[340.37719727 -155.03013611]
[350.35256958 -166.23246765]
[360.32794189 -177.43478394]
[370.30331421 -188.63710022]
[367.86276245 -204.08306885]
[375.96597290 -217.45739746]
[390.78677368 -222.44511414]
[405.32730103 -216.69120789]
[412.72192383 -202.91247559]
[409.47912598 -187.61480713]
[397.13009644 -178.02131653]
[381.50561523 -178.66174316]
[371.53024292 -167.45941162]
[361.55487061 -156.25709534]
[351.57952881 -145.05476379]
[352.69470215 -130.24626160]
[342.73785400 -118.74340820]
[327.19775391 -117.67410278]
[336.52517700 -105.44454193]
[343.29925537 -91.63088989]
[347.25994873 -76.75939941]
[348.25436401 -61.39703369]
[346.24273682 -46.12983322]
[341.30010986 -31.54054832]
[333.61328125 -18.18642044]
[323.47399902 -6.57787275]
[311.26782227 2.84097910]
[297.45928955 9.70932961]
[282.57452393 13.76350021]
[267.18096924 14.84706211]
[251.86584473 12.91687202]
[237.21369934 8.04478645]
[223.78417969 0.41498777]
[213.99540710 11.78071117]
[211.55242920 26.47360611]
[196.68397522 31.88094902]
[186.89518738 43.24667358]
[184.45220947 57.93956757]
[169.58375549 63.34691238]
[159.79496765 74.71263123]
[150.00617981 86.07836151]
[140.21739197 97.44408417]
[130.42860413 108.80980682]
[122.96443176 121.82080078]
[118.09394073 136.00805664]
[126.83338928 148.69381714]
[126.43199921 163.91525269]
[117.25320435 175.84059143]
[102.98314667 180.02430725]
[98.11265564 194.21156311]
[93.24215698 208.39881897]
[88.37166595 222.58607483]
[83.50117493 236.77334595]
[78.63068390 250.96060181]
[73.76019287 265.14785767]
[68.88970184 279.33511353]
[79.81655884 269.05874634]
[92.61643982 261.23806763]
[106.74670410 256.20462036]
[121.60832214 254.17176819]
[136.57124329 255.22573853]
[151.00115967 259.32180786]
[164.28630066 266.28634644]
[175.86349487 275.82409668]
[185.24191284 287.53073120]
[192.02400208 300.90994263]
[195.92221069 315.39453125]
[196.77131653 330.37048340]
[194.53527832 345.20288086]
[189.30892944 359.26293945]
[181.31382751 371.95462036]
[170.88888550 382.73980713]
[158.47608948 391.16134644]
[144.60163879 396.86221313]
[129.85372925 399.60067749]
[114.85758209 399.26068115]
[100.24893188 395.85665894]
[86.64710236 389.53286743]
[74.62872314 380.55743408]
[64.70328522 369.31085205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 44]
[5 43]
[6 42]
[7 41]
[15 36]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[51 159]
[52 158]
[56 154]
[57 153]
[61 78]
[62 77]
[63 76]
[64 75]
[81 152]
[82 151]
[83 150]
[84 149]
[85 148]
[87 146]
[88 145]
[90 143]
[91 142]
[107 127]
[110 124]
[111 123]
[112 122]
[113 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
