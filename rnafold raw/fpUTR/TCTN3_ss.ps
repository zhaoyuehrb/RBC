%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:02:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUGCCAGGCAACGGAGGCACGGCCCGGCCCGCGUUAAGGAGGAGGGCGCAGACCGAAGGACACUGAAAGAGCUGUAACAACCCCACUUUCGAUUGGUUGAAGAGCUCUCAGCCUUCUCAUGAGCCAAUGAGAAGAGGCACGCGGAUGGCGUCAGACGCUAUGCGACUCCUCCCACCCACGCUCUGGCAAUGCGAUUGGAGACCGCGGAGGCCUACGUCGGACCCGGAGGCCCUGAAUGCCCC\
) } def
/len { sequence length } bind def

/coor [
[203.69027710 432.11972046]
[209.90141296 413.99057007]
[200.77635193 402.08538818]
[191.65129089 390.18020630]
[182.52622986 378.27502441]
[173.40116882 366.36987305]
[164.27609253 354.46469116]
[155.15103149 342.55950928]
[146.02597046 330.65432739]
[136.82476807 318.80789185]
[127.54780579 307.02069092]
[112.55058289 307.30920410]
[103.73380280 319.44445801]
[94.91702271 331.57971191]
[86.10024261 343.71496582]
[88.37023926 359.12551880]
[79.25589752 371.30679321]
[64.55030823 373.37591553]
[55.73353195 385.51116943]
[46.91675186 397.64642334]
[44.41296387 406.40698242]
[37.90830231 409.87976074]
[28.93664360 421.90097046]
[24.30871010 438.21105957]
[7.35489893 438.27905273]
[2.59626794 422.00662231]
[16.91543961 412.92932129]
[25.88709641 400.90811157]
[34.78149796 388.82965088]
[43.59827805 376.69439697]
[52.41505432 364.55914307]
[49.83863068 349.93389893]
[58.60722733 337.50140381]
[73.96498871 334.89819336]
[82.78176880 322.76293945]
[91.59854889 310.62768555]
[100.41532898 298.49243164]
[86.77519226 279.99346924]
[87.25237274 258.02468872]
[100.41942596 241.71141052]
[94.61260223 227.88098145]
[88.80577850 214.05055237]
[82.99895477 200.22012329]
[77.19213867 186.38969421]
[71.38531494 172.55924988]
[65.57849121 158.72882080]
[52.14851761 152.04782104]
[37.61500168 155.75953674]
[29.76910591 169.47877502]
[14.49851322 173.55117798]
[0.86299378 165.56068420]
[-3.04774094 150.24787903]
[5.08647919 136.69760132]
[20.43976593 132.94898987]
[33.90328598 141.22601318]
[48.43680573 137.51429749]
[47.62096786 130.05880737]
[45.98929214 115.14781189]
[45.17345428 107.69231415]
[30.18115997 107.21154022]
[15.98682499 115.42451477]
[1.91401899 107.00500488]
[2.43963742 90.61428070]
[17.02297020 83.11371613]
[30.66193390 92.21924591]
[45.65422821 92.70001984]
[48.46873093 85.74814606]
[39.24198532 73.92160034]
[54.09773636 71.84439850]
[56.91223526 64.89251709]
[45.80806732 54.80800629]
[34.70389557 44.72349167]
[23.59972763 34.63898087]
[12.49555683 24.55446625]
[1.39138734 14.46995354]
[-14.02637005 10.91983795]
[-18.24629593 -3.36447096]
[-31.12873840 -3.52195239]
[-40.16785431 -12.13107014]
[-40.90273666 -24.19109917]
[-51.87668228 -34.41716766]
[-62.85063171 -44.64323425]
[-73.82457733 -54.86930084]
[-84.79853058 -65.09536743]
[-98.99964905 -59.50153732]
[-114.22085571 -60.63186646]
[-127.43996429 -68.26193237]
[-136.03231812 -80.87677002]
[-138.29188538 -95.97171021]
[-133.77005005 -110.54962921]
[-123.36460876 -121.71607208]
[-109.14157104 -127.25393677]
[-93.92493439 -126.06367493]
[-80.73596954 -118.38161469]
[-72.19335938 -105.73303223]
[-69.99324799 -90.62931824]
[-74.57246399 -76.06932068]
[-63.59851456 -65.84324646]
[-52.62456512 -55.61718369]
[-41.65061569 -45.39111710]
[-30.67666817 -35.16504669]
[-13.38090420 -32.13854599]
[-8.16178226 -14.46864128]
[6.46173048 -11.63983822]
[11.47590065 3.36578345]
[22.58007050 13.45029640]
[33.68424225 23.53481102]
[44.78841019 33.61932373]
[55.89258194 43.70383835]
[66.99674988 53.78834915]
[74.13192749 55.96686172]
[80.59543610 59.00905609]
[86.29375458 62.81086349]
[87.82979584 47.88971710]
[89.36583710 32.96857452]
[90.90187836 18.04742813]
[92.24646759 3.10781336]
[93.39938354 -11.84781361]
[94.55230713 -26.80344009]
[95.70522308 -41.75906754]
[96.85813904 -56.71469498]
[98.01105499 -71.67032623]
[87.53871155 -83.50694275]
[88.58677673 -99.27644348]
[100.53345490 -109.62305450]
[116.29099274 -108.40831757]
[126.51071930 -96.35292053]
[125.12945557 -80.60910797]
[112.96668243 -70.51740265]
[111.81376648 -55.56177902]
[110.66085052 -40.60615158]
[109.50792694 -25.65052414]
[108.35501099 -10.69489765]
[107.20209503 4.26072979]
[109.55916595 8.39088535]
[109.36221313 14.04216385]
[105.82302856 19.58346939]
[104.28698730 34.50461578]
[102.75094604 49.42575836]
[101.21489716 64.34690857]
[107.90833282 67.73039246]
[120.46212006 59.52049637]
[121.29518890 74.49737549]
[127.98861694 77.88085938]
[139.09278870 67.79634857]
[144.10696411 52.79072571]
[158.73046875 49.96192551]
[169.83464050 39.87741089]
[180.93881226 29.79289627]
[192.04298401 19.70838356]
[203.14715576 9.62386990]
[214.25132751 -0.46064311]
[225.35549927 -10.54515648]
[233.01589966 -25.66979218]
[249.67005920 -22.49567604]
[251.23033142 -5.61367702]
[235.44000244 0.55901349]
[224.33583069 10.64352703]
[213.23165894 20.72804070]
[202.12750244 30.81255341]
[191.02333069 40.89706802]
[179.91915894 50.98157883]
[168.81498718 61.06609344]
[164.59506226 75.35040283]
[149.17730713 78.90052032]
[138.07313538 88.98503113]
[132.53198242 135.57994080]
[79.40892029 152.92199707]
[85.21574402 166.75244141]
[91.02256775 180.58287048]
[96.82939148 194.41329956]
[102.63620758 208.24372864]
[108.44303131 222.07415771]
[114.24985504 235.90458679]
[125.09693146 235.43959045]
[135.66627502 238.68565369]
[144.70310974 245.39656067]
[151.08885193 254.90737915]
[153.97879028 266.19869995]
[152.91180420 278.00546265]
[147.87802124 288.95858765]
[139.33500671 297.74374390]
[148.61196899 309.53094482]
[156.36015320 314.32489014]
[157.93115234 321.52926636]
[167.05621338 333.43444824]
[176.18127441 345.33963013]
[185.30633545 357.24478149]
[194.43139648 369.14996338]
[203.55645752 381.05514526]
[212.68151855 392.96032715]
[221.80657959 404.86550903]
[233.00245667 402.58782959]
[244.19113159 404.63265991]
[253.77096558 410.66848755]
[260.38513184 419.79534912]
[263.11367798 430.67883301]
[261.60131836 441.74502563]
[256.10327148 451.40823364]
[264.76373291 463.65554810]
[272.25595093 468.84045410]
[273.45550537 476.11587524]
[288.71081543 475.01007080]
[302.38113403 481.64480591]
[310.83883667 494.14816284]
[311.89541626 509.10607910]
[305.36706543 522.49432373]
[313.86975098 534.85168457]
[322.37243652 547.20904541]
[329.79754639 552.48962402]
[330.90374756 559.77984619]
[339.24728394 572.24517822]
[347.59085083 584.71057129]
[355.93438721 597.17590332]
[364.27792358 609.64123535]
[378.38397217 616.80578613]
[379.03347778 631.68621826]
[387.37701416 644.15155029]
[402.94152832 645.66156006]
[413.85708618 656.85906982]
[414.96969604 672.45703125]
[405.75402832 685.09051514]
[390.56143188 688.79443359]
[376.56536865 681.81982422]
[370.37438965 667.45996094]
[374.91165161 652.49511719]
[366.56811523 640.02978516]
[353.05883789 633.75683594]
[351.81256104 617.98480225]
[343.46902466 605.51947021]
[335.12548828 593.05407715]
[326.78192139 580.58874512]
[318.43838501 568.12335205]
[310.01510620 555.71173096]
[301.51239014 543.35443115]
[293.00970459 530.99707031]
[278.17251587 532.30975342]
[264.57995605 525.97741699]
[255.92481995 513.60992432]
[254.61358643 498.47128296]
[261.09817505 484.61859131]
[252.51641846 472.31600952]
[243.85597229 460.06869507]
[225.16242981 460.89395142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[9 185]
[10 183]
[11 182]
[12 37]
[13 36]
[14 35]
[15 34]
[18 31]
[19 30]
[20 29]
[22 28]
[23 27]
[40 174]
[41 173]
[42 172]
[43 171]
[44 170]
[45 169]
[46 168]
[47 56]
[48 55]
[59 66]
[60 65]
[70 110]
[71 109]
[72 108]
[73 107]
[74 106]
[75 105]
[77 103]
[80 101]
[81 100]
[82 99]
[83 98]
[84 97]
[113 140]
[114 139]
[115 138]
[116 137]
[117 134]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[144 166]
[145 165]
[147 163]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
[153 157]
[199 243]
[200 242]
[202 241]
[207 236]
[208 235]
[209 234]
[211 233]
[212 232]
[213 231]
[214 230]
[215 229]
[217 227]
[218 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
