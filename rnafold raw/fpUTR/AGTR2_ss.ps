%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGACCAAACAUAUAAGAAGGAAACCAGAGAUCUGGUGCUAUUACGUCCCAGCGUCUGAGAGAACGAGUAAGCACAGAAUUCAAAGCAUUCUGCAGCCUGAAUUUUGAAGGAGUGUGUUUAGGCACUAAGCAAGCUGAUUUAUGAUAACUGCUUUAAACUUCAACAACCAAAGGCAUAAGAACUAGGAGCUGCUGACAUUUCAAU\
) } def
/len { sequence length } bind def

/coor [
[275.21170044 226.86753845]
[270.48706055 220.07109070]
[266.90597534 212.60343933]
[264.56158447 204.65547180]
[263.51541138 196.43061829]
[263.79580688 188.13964844]
[265.39700317 179.99523926]
[251.71852112 173.83905029]
[237.99392700 167.78633118]
[224.22399902 161.83743286]
[210.45408630 155.88853455]
[196.68417358 149.93963623]
[182.91426086 143.99072266]
[169.14434814 138.04182434]
[155.37442017 132.09292603]
[141.60450745 126.14402771]
[136.04983521 134.04458618]
[128.99851990 140.77119446]
[120.69756317 146.04122925]
[111.44717407 149.62385559]
[101.58985138 151.34996033]
[91.49778748 151.11987305]
[81.55877686 148.90840149]
[72.16132355 144.76719666]
[63.67948532 138.82392883]
[56.45796967 131.27862549]
[43.98592758 139.61218262]
[31.51388168 147.94573975]
[19.04183769 156.27929688]
[6.56979322 164.61283875]
[-0.19413067 179.55209351]
[-16.53824234 180.89451599]
[-25.64912033 167.25910950]
[-18.15427399 152.67285156]
[-1.76376033 152.14079285]
[10.70828342 143.80725098]
[23.18032837 135.47369385]
[35.65237045 127.14013672]
[48.12441635 118.80658722]
[44.97620010 104.14067841]
[30.18274689 101.66000366]
[15.38929558 99.17932129]
[0.57753134 96.81043243]
[-14.25169945 94.55346680]
[-29.08093071 92.29649353]
[-38.03814316 94.09927368]
[-44.11640549 89.89182281]
[-58.90985870 87.41114807]
[-73.70330811 84.93046570]
[-88.51507568 82.56157684]
[-103.36093140 80.41666412]
[-118.23748016 78.49620819]
[-133.12811279 76.68816376]
[-148.01875305 74.88011169]
[-164.47120667 78.97316742]
[-172.95880127 64.29675293]
[-161.20553589 52.07802582]
[-146.21069336 59.98947906]
[-131.32006836 61.79752731]
[-116.42943573 63.60557938]
[-109.40882111 61.29064178]
[-101.32818604 65.55503082]
[-94.27341461 63.34639359]
[-86.25811005 67.73234558]
[-79.17078400 65.63050842]
[-71.22263336 70.13701630]
[-56.42918015 72.61769104]
[-41.63572693 75.09837341]
[-26.82396317 77.46726227]
[-11.99473190 79.72423553]
[2.83449888 81.98120117]
[9.92182541 79.87936401]
[17.86997414 84.38587189]
[32.66342545 86.86654663]
[47.45687866 89.34722900]
[58.87429428 69.21002197]
[77.06943512 56.54157639]
[72.17639160 42.36207581]
[67.28334808 28.18258095]
[62.39030838 14.00308323]
[57.49726868 -0.17641403]
[52.60422516 -14.35591125]
[47.71118164 -28.53540802]
[42.81814194 -42.71490479]
[37.92509842 -56.89440155]
[26.69022179 -63.23316574]
[22.90747833 -75.14585114]
[28.08522034 -86.07988739]
[23.40689278 -100.33167267]
[8.59418964 -104.95372772]
[-0.64573449 -117.41982269]
[-0.75994039 -132.93647766]
[8.29548645 -145.53723145]
[23.03854942 -150.37681580]
[37.80024338 -145.59434509]
[46.90438843 -133.02874756]
[46.85026169 -117.51177216]
[37.65867233 -105.00999451]
[42.33700180 -90.75821686]
[56.02539825 -79.77824402]
[52.10459518 -61.78744507]
[56.99763870 -47.60794830]
[61.89068222 -33.42845154]
[66.78372192 -19.24895287]
[71.67676544 -5.06945610]
[76.56980896 9.11004162]
[81.46284485 23.28953934]
[86.35588837 37.46903610]
[91.24893188 51.64853287]
[107.58669281 51.45221329]
[123.08560944 56.62373734]
[136.03199768 66.59130096]
[144.99436951 80.25280762]
[148.98181152 96.09772491]
[147.55340576 112.37411499]
[161.32333374 118.32301331]
[175.09324646 124.27191162]
[188.86315918 130.22080994]
[202.63307190 136.16970825]
[216.40298462 142.11862183]
[230.17291260 148.06752014]
[243.94282532 154.01641846]
[253.06420898 154.54743958]
[257.87472534 160.16055298]
[271.55322266 166.31674194]
[287.74212646 150.37519836]
[309.15826416 142.90850830]
[331.66995239 145.32102966]
[350.94955444 157.11466980]
[363.30545044 175.99122620]
[366.38891602 198.30012512]
[381.00558472 201.66947937]
[395.62228394 205.03884888]
[410.23895264 208.40820312]
[419.30664062 207.28636169]
[425.05014038 211.94039917]
[439.61428833 215.53013611]
[454.17840576 219.11987305]
[460.44030762 206.51977539]
[469.19259644 195.51097107]
[480.04690552 186.57775879]
[492.52246094 180.11236572]
[506.06741333 176.39782715]
[520.08319092 175.59556580]
[533.95104980 177.73832703]
[547.05920410 182.72895813]
[558.83013916 190.34468079]
[568.74566650 200.24714661]
[576.37005615 211.99740601]
[581.36889648 225.07539368]
[583.52410889 238.90292358]
[582.74316406 252.86926270]
[597.19219971 256.89724731]
[611.64129639 260.92523193]
[626.09033203 264.95318604]
[640.53942871 268.98117065]
[654.98846436 273.00915527]
[664.04687500 260.83093262]
[676.89501953 252.75065613]
[691.79516602 249.86112976]
[706.73229980 252.55314636]
[719.68621826 260.46261597]
[728.90509033 272.51986694]
[733.14208984 287.09423828]
[731.82415771 302.21469116]
[725.12963867 315.83627319]
[713.96380615 326.11679077]
[699.83685303 331.66589355]
[684.65924072 331.73312378]
[670.48364258 326.30935669]
[659.22717285 316.12814331]
[652.41223145 302.56637573]
[650.96051025 287.45822144]
[636.51141357 283.43023682]
[622.06237793 279.40225220]
[607.61328125 275.37426758]
[593.16424561 271.34631348]
[578.71514893 267.31832886]
[571.01556396 281.31707764]
[560.19726562 293.08489990]
[546.88012695 301.94158936]
[531.82867432 307.37387085]
[515.90808105 309.06524658]
[500.03454590 306.91430664]
[485.12249756 301.04092407]
[472.03195190 291.77954102]
[461.51892090 279.66006470]
[454.19165039 265.37765503]
[450.47561646 249.75274658]
[450.58865356 233.68400574]
[436.02453613 230.09426880]
[421.46041870 226.50453186]
[406.86959839 223.02488708]
[392.25289917 219.65551758]
[377.63623047 216.28616333]
[363.01953125 212.91680908]
[359.44546509 220.31642151]
[354.73333740 227.05436707]
[349.00283813 232.95698547]
[342.39987183 237.87187195]
[335.09292603 241.67179871]
[327.26870728 244.25801086]
[319.12747192 245.56277466]
[310.87771606 245.55117798]
[302.73110962 244.22206116]
[294.89675903 241.60804749]
[287.57608032 237.77479553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 125]
[8 124]
[9 122]
[10 121]
[11 120]
[12 119]
[13 118]
[14 117]
[15 116]
[16 115]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[40 75]
[41 74]
[42 73]
[43 71]
[44 70]
[45 69]
[47 68]
[48 67]
[49 66]
[50 64]
[51 62]
[52 60]
[53 59]
[54 58]
[77 109]
[78 108]
[79 107]
[80 106]
[81 105]
[82 104]
[83 103]
[84 102]
[85 101]
[88 99]
[89 98]
[131 196]
[132 195]
[133 194]
[134 193]
[136 192]
[137 191]
[138 190]
[152 178]
[153 177]
[154 176]
[155 175]
[156 174]
[157 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
