%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCCCAGCACGUUGUCCCAGGCAACCCCAGGAAGCCGGGCGGCGCAGCGCGAGCCACUGACCCGGUCCCCGGGGUCAGAGGAGCAAAGGGCAAGCUGUCGGAGGCCAGU\
) } def
/len { sequence length } bind def

/coor [
[96.95642853 448.38842773]
[91.81649017 433.74734497]
[96.29624176 418.89099121]
[108.67311859 409.53189087]
[108.25614166 394.53768921]
[107.83917236 379.54348755]
[107.21381378 364.55654907]
[106.38019562 349.57971191]
[97.94753265 337.30212402]
[104.90593719 323.09326172]
[104.07231903 308.11645508]
[103.23869324 293.13964844]
[92.00092316 283.43148804]
[90.94216919 268.25473022]
[101.20116425 256.53335571]
[100.36753845 241.55654907]
[99.53392029 226.57972717]
[98.70029449 211.60290527]
[97.86667633 196.62608337]
[97.03305054 181.64927673]
[84.43598175 173.74662781]
[78.84162903 159.77639771]
[82.58999634 145.01824951]
[94.44672394 135.18341064]
[93.61310577 120.20658875]
[79.01247406 102.93638611]
[88.31266785 82.32219696]
[85.00389862 67.69167328]
[81.69513702 53.06115723]
[78.38636780 38.43063736]
[75.07759857 23.80012131]
[70.06659698 15.99037361]
[71.88619995 8.71704292]
[68.98541260 -5.99979830]
[56.14352798 -14.81590939]
[53.41136551 -29.78220177]
[61.89532089 -41.97064209]
[58.99453354 -56.68748474]
[56.09374619 -71.40432739]
[53.19295883 -86.12117004]
[50.29217148 -100.83801270]
[47.39138412 -115.55485535]
[44.28630829 -130.22994995]
[40.97753906 -144.86047363]
[37.66877365 -159.49098206]
[27.07795715 -171.24450684]
[31.81723213 -185.36500549]
[27.47122002 -190.64842224]
[26.67760468 -196.45654297]
[28.75517273 -200.90005493]
[26.26460648 -215.69183350]
[15.40928555 -227.98387146]
[20.88264465 -243.44267273]
[37.05416107 -246.16554260]
[47.28796768 -233.35144043]
[41.05639648 -218.18240356]
[43.54696274 -203.39060974]
[46.44775009 -188.67376709]
[56.80190277 -177.96672058]
[52.29929352 -162.79975891]
[55.60805893 -148.16923523]
[58.91682434 -133.53871155]
[63.52649307 -127.62574768]
[62.10822678 -118.45564270]
[65.00901031 -103.73880005]
[67.90979767 -89.02195740]
[70.81058502 -74.30511475]
[73.71137238 -59.58827209]
[76.61215973 -44.87142944]
[89.08670044 -36.81404877]
[92.23815918 -21.93040085]
[83.70225525 -8.90058517]
[86.60304260 5.81625605]
[89.70811462 20.49135399]
[93.01688385 35.12187195]
[96.32565308 49.75239182]
[99.63441467 64.38291168]
[102.94318390 79.01342773]
[109.45455170 81.03397369]
[114.98739624 85.01745605]
[118.96908569 90.55159760]
[120.98752594 97.06361389]
[120.83380890 103.87954712]
[118.52385712 110.29395294]
[114.29672241 115.64295959]
[108.58992004 119.37296295]
[109.42354584 134.34977722]
[122.29848480 142.80804443]
[127.66152191 157.05905151]
[123.65211487 171.56382751]
[112.00987244 180.81564331]
[112.84349060 195.79246521]
[113.67711639 210.76928711]
[114.51073456 225.74610901]
[115.34436035 240.72291565]
[116.17797852 255.69973755]
[127.67441559 266.21020508]
[128.30647278 281.41070557]
[118.21551514 292.30603027]
[119.04913330 307.28283691]
[119.88275909 322.25964355]
[128.37504578 335.60848999]
[121.35700989 348.74609375]
[122.19063568 363.72293091]
[125.83536530 372.25628662]
[122.83337402 379.12652588]
[123.25035095 394.12072754]
[123.66732025 409.11492920]
[136.54519653 417.77172852]
[141.84365845 432.35617065]
[137.52534485 447.26025391]
[125.25071716 456.75305176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 108]
[5 107]
[6 106]
[7 104]
[8 103]
[10 101]
[11 100]
[12 99]
[15 96]
[16 95]
[17 94]
[18 93]
[19 92]
[20 91]
[24 87]
[25 86]
[27 78]
[28 77]
[29 76]
[30 75]
[31 74]
[33 73]
[34 72]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 62]
[44 61]
[45 60]
[47 58]
[50 57]
[51 56]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
