%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGUUGGGCUUUGAGAAUUCCAUCCCACUGGCACUGAGGAGAAUAUUUCUCCGUCUUGCUUACCCAUCUCCCAGUUUUUUGGAAUUUUCUCUAGCUGUUACUCCAGAGGAUU\
) } def
/len { sequence length } bind def

/coor [
[172.28666687 442.25567627]
[169.03451538 427.61245728]
[165.78236389 412.96923828]
[161.19815063 407.04159546]
[162.64715576 397.88180542]
[159.79620361 383.15521240]
[145.50250244 374.41088867]
[141.81909180 357.72027588]
[151.47692871 343.21279907]
[148.22477722 328.56961060]
[144.97262573 313.92639160]
[141.72047424 299.28317261]
[127.19326782 290.93255615]
[123.05532837 274.34878540]
[132.31329346 259.58291626]
[128.66238403 245.03399658]
[125.01147461 230.48509216]
[121.36055756 215.93617249]
[117.70964813 201.38726807]
[114.05873108 186.83834839]
[110.40782166 172.28944397]
[106.75690460 157.74052429]
[103.10599518 143.19161987]
[99.45508575 128.64270020]
[85.23703766 124.55110168]
[74.95650482 113.91132355]
[71.35546875 99.56118011]
[75.39438629 85.32807922]
[85.99600983 75.00820923]
[82.34509277 60.45929337]
[78.69418335 45.91038132]
[75.04326630 31.36147118]
[69.06725311 17.60330200]
[60.92632294 5.00467777]
[52.78540039 -7.59394646]
[40.28194046 -11.10397148]
[33.77930450 -21.87782669]
[36.33219910 -33.78879929]
[28.53844070 -46.60509109]
[20.57035446 -59.31373215]
[12.42942810 -71.91236115]
[4.28850269 -84.51097870]
[-3.85242271 -97.10960388]
[-11.99334812 -109.70822906]
[-20.13427353 -122.30685425]
[-33.80899048 -132.32875061]
[-27.96429062 -148.24339294]
[-11.05362606 -147.03271484]
[-7.53565025 -130.44778442]
[0.60527563 -117.84915924]
[8.74620152 -105.25053406]
[16.88712692 -92.65190887]
[25.02805328 -80.05328369]
[33.16897964 -67.45465851]
[39.52828217 -63.49091339]
[41.35473251 -54.39884949]
[49.14849091 -41.58255768]
[64.94882965 -34.08072662]
[65.38402557 -15.73487186]
[73.52494812 -3.13624811]
[81.66587067 9.46237564]
[83.19180298 -5.45980692]
[90.90676117 -18.32368660]
[103.35208893 -26.69709587]
[118.17473602 -28.99687386]
[132.57220459 -24.78820610]
[143.82237244 -14.86682129]
[149.79815674 -1.10855258]
[149.36973572 13.88532829]
[142.61810303 27.27993202]
[130.81977844 36.54274750]
[116.20549011 39.92245865]
[101.53833771 36.78005981]
[89.59217834 27.71055794]
[93.24309540 42.25946808]
[96.89400482 56.80838013]
[100.54491425 71.35729218]
[114.76296234 75.44889832]
[125.04349518 86.08867645]
[128.64453125 100.43881989]
[124.60561371 114.67192078]
[114.00399017 124.99179077]
[117.65490723 139.54071045]
[121.30581665 154.08961487]
[124.95673370 168.63853455]
[128.60765076 183.18743896]
[132.25856018 197.73635864]
[135.90946960 212.28526306]
[139.56037903 226.83418274]
[143.21130371 241.38308716]
[146.86221313 255.93200684]
[159.20506287 261.52310181]
[165.93782043 273.05648804]
[164.77233887 286.16409302]
[156.36369324 296.03103638]
[159.61584473 310.67425537]
[162.86798096 325.31744385]
[166.12013245 339.96066284]
[178.30566406 345.88684082]
[184.72088623 357.59979248]
[183.19779968 370.67068481]
[174.52276611 380.30426025]
[177.37373352 395.03082275]
[180.42556763 409.71710205]
[183.67771912 424.36029053]
[186.92987061 439.00350952]
[201.44302368 444.23532104]
[210.80557251 456.49691772]
[212.02998352 471.87561035]
[204.72552490 485.46414185]
[191.22302246 492.92648315]
[175.83110046 491.88137817]
[163.46125793 482.66235352]
[158.06065369 468.21118164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 106]
[2 105]
[3 104]
[5 103]
[6 102]
[9 98]
[10 97]
[11 96]
[12 95]
[15 91]
[16 90]
[17 89]
[18 88]
[19 87]
[20 86]
[21 85]
[22 84]
[23 83]
[24 82]
[29 77]
[30 76]
[31 75]
[32 74]
[33 61]
[34 60]
[35 59]
[38 57]
[39 56]
[40 54]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
