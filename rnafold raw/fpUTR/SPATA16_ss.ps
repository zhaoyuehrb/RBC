%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGCCUCGUGGCACGGGACGUUUCAAGUCCUGGCGUCCCCGCGAGCAAGCAGCCUGAUCAGGCCUCGCAGUGGGACGUUGGGAAGCCGGUGUUGGCAGAUGCUGUGGCUGGGAGGAGUCCAGAGCUUCGCCCUGUCCCCGCGGGGCUGAGCCACAACUGCUUAGGAGUUUUGGGCAGGAUCG\
) } def
/len { sequence length } bind def

/coor [
[305.14483643 277.25015259]
[303.01831055 262.40164185]
[306.91458130 247.91651917]
[316.20324707 236.13853455]
[329.38128662 228.97343445]
[344.31906128 227.58087158]
[331.28643799 220.15452576]
[318.25381470 212.72817993]
[305.22119141 205.30183411]
[290.33255005 205.72317505]
[282.17303467 192.16836548]
[269.14041138 184.74201965]
[256.10778809 177.31567383]
[243.07516479 169.88932800]
[229.97994995 162.57389832]
[216.82308960 155.36991882]
[203.66624451 148.16595459]
[190.50938416 140.96197510]
[185.73524475 141.42630005]
[180.62208557 138.88056946]
[177.03414917 133.28341675]
[164.12951660 125.63684082]
[151.22486877 117.99025726]
[138.32022095 110.34367371]
[125.41558838 102.69709778]
[118.56679535 116.13186646]
[105.75180054 122.92310333]
[91.93343353 121.18780518]
[82.05097198 112.21138763]
[79.25473022 99.74672699]
[65.33639526 94.15387726]
[51.41805649 88.56103516]
[37.49972153 82.96818542]
[23.58138657 77.37533569]
[9.66305065 71.78249359]
[-4.25528431 66.18964386]
[-18.17362022 60.59679794]
[-32.09195709 55.00394821]
[-46.01029205 49.41110229]
[-59.92862701 43.81825638]
[-73.84696198 38.22540665]
[-87.81227875 32.75093842]
[-101.86855316 27.51440048]
[-115.96877289 22.39739799]
[-130.06900024 17.28039742]
[-144.16921997 12.16339493]
[-158.26943970 7.04639292]
[-153.05722046 21.11169624]
[-159.17402649 34.80785370]
[-173.12693787 40.31386566]
[-186.94834900 34.48560333]
[-192.74572754 20.65121460]
[-187.20857239 6.71062994]
[-173.49844360 0.62441391]
[-187.00506592 -5.90022993]
[-200.51170349 -12.42487431]
[-214.01832581 -18.94951820]
[-230.32441711 -17.20488167]
[-239.76843262 -30.61169052]
[-232.63519287 -45.37817001]
[-216.26275635 -46.31383133]
[-207.49368286 -32.45614624]
[-193.98706055 -25.93150330]
[-180.48042297 -19.40685844]
[-166.97380066 -12.88221455]
[-153.15243530 -7.05383015]
[-139.05221558 -1.93682814]
[-124.95199585 3.18017387]
[-110.85176849 8.29717541]
[-96.75154877 13.41417789]
[-89.37449646 12.73893547]
[-82.45658875 18.73963928]
[-75.06912994 18.18976212]
[-68.25411224 24.30707359]
[-54.33577728 29.89991951]
[-40.41744232 35.49276733]
[-26.49910736 41.08561325]
[-12.58077240 46.67846298]
[1.33756268 52.27130890]
[15.25589848 57.86415482]
[29.17423439 63.45700455]
[43.09256744 69.04985046]
[57.01090622 74.64270020]
[70.92923737 80.23554230]
[84.84757233 85.82839203]
[95.51792908 77.28542328]
[110.63581848 76.75982666]
[110.63581848 61.75982666]
[110.63581848 46.75982666]
[110.63581848 31.75982666]
[101.97211456 17.83602333]
[109.93624878 3.50058842]
[126.33539581 3.50058842]
[134.29951477 17.83602333]
[125.63581848 31.75982666]
[125.63581848 46.75982666]
[125.63581848 61.75982666]
[125.63581848 76.75982666]
[133.06216431 89.79244995]
[145.96681213 97.43903351]
[158.87144470 105.08561707]
[171.77609253 112.73219299]
[184.68074036 120.37877655]
[197.71336365 127.80512238]
[210.87020874 135.00909424]
[224.02706909 142.21307373]
[237.18391418 149.41703796]
[246.23680115 150.79953003]
[250.50151062 156.85668945]
[263.53414917 164.28303528]
[276.56677246 171.70939636]
[289.59939575 179.13574219]
[305.42022705 179.24557495]
[312.64755249 192.26921082]
[325.68017578 199.69555664]
[338.71279907 207.12190247]
[351.74542236 214.54824829]
[363.02413940 214.79914856]
[369.53491211 222.40838623]
[383.80078125 227.04364014]
[398.06661987 231.67889404]
[412.33245850 236.31416321]
[426.59829712 240.94941711]
[440.86416626 245.58467102]
[455.13000488 250.21992493]
[469.39584351 254.85517883]
[483.66171265 259.49041748]
[497.92755127 264.12567139]
[512.19342041 268.76092529]
[526.45922852 273.39620972]
[549.06958008 252.98431396]
[564.06469727 253.36634827]
[579.05981445 253.74839783]
[594.05493164 254.13044739]
[609.05010986 254.51248169]
[624.04522705 254.89453125]
[639.04034424 255.27658081]
[653.18029785 246.97032166]
[667.30822754 255.29698181]
[666.89056396 271.69079590]
[652.35693359 279.28723145]
[638.65832520 270.27169800]
[623.66320801 269.88967896]
[608.66802979 269.50762939]
[593.67291260 269.12557983]
[578.67779541 268.74353027]
[563.68267822 268.36148071]
[548.68750000 267.97943115]
[543.93127441 282.20541382]
[556.14099121 290.91885376]
[568.35064697 299.63226318]
[580.56036377 308.34570312]
[592.77001953 317.05911255]
[607.86413574 312.97244263]
[622.03198242 319.59106445]
[628.58392334 333.78985596]
[624.42633057 348.86462402]
[611.52227783 357.69747925]
[595.96466064 356.11785889]
[585.09936523 344.87158203]
[584.05657959 329.26879883]
[571.84692383 320.55535889]
[559.63720703 311.84194946]
[547.42755127 303.12850952]
[535.21789551 294.41510010]
[521.82397461 287.66204834]
[507.55813599 283.02679443]
[493.29229736 278.39154053]
[479.02645874 273.75628662]
[464.76058960 269.12103271]
[450.49475098 264.48577881]
[436.22891235 259.85052490]
[421.96304321 255.21525574]
[407.69720459 250.58000183]
[393.43136597 245.94474792]
[379.16549683 241.30949402]
[364.89965820 236.67424011]
[373.92697144 248.65371704]
[377.50363159 263.22106934]
[375.05096436 278.01916504]
[366.96578979 290.65365601]
[354.55636597 299.08016968]
[339.83056641 301.93524170]
[325.17117310 298.75689697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 117]
[7 116]
[8 115]
[9 114]
[11 112]
[12 111]
[13 110]
[14 109]
[15 107]
[16 106]
[17 105]
[18 104]
[21 103]
[22 102]
[23 101]
[24 100]
[25 99]
[30 85]
[31 84]
[32 83]
[33 82]
[34 81]
[35 80]
[36 79]
[37 78]
[38 77]
[39 76]
[40 75]
[41 74]
[42 72]
[43 70]
[44 69]
[45 68]
[46 67]
[47 66]
[54 65]
[55 64]
[56 63]
[57 62]
[87 98]
[88 97]
[89 96]
[90 95]
[119 177]
[120 176]
[121 175]
[122 174]
[123 173]
[124 172]
[125 171]
[126 170]
[127 169]
[128 168]
[129 167]
[130 166]
[131 148]
[132 147]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
[149 165]
[150 164]
[151 163]
[152 162]
[153 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
