%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGCGCGCGCCCGCGUUCUCCUGGCGGGCUUGGUAUUUGGCGCCUGCGCGCUGAGUGCGUGCCGCUCCGCCGACCGAAGAGGCUGGUAAGUCCUCAAGCUGGCAGGUGGUCGGGGGAGCGGCCGGAGAGGAGCUGCCGGGAGUUCGUGCCCUGCAGGACAUGACACCAGUGGCAUAUCACGGCC\
) } def
/len { sequence length } bind def

/coor [
[68.53179169 168.73860168]
[65.77555084 183.48320007]
[63.01931000 198.22779846]
[68.97700500 213.50646973]
[58.51435089 226.13441467]
[42.39442825 223.12107849]
[37.20003510 207.56632996]
[48.27471161 195.47155762]
[51.03095627 180.72695923]
[53.78719711 165.98236084]
[56.29535294 151.19354248]
[58.55471802 136.36468506]
[60.81407928 121.53581238]
[73.11885071 100.98252869]
[91.74055481 96.21752167]
[86.08772278 82.32344055]
[80.43489075 68.42935944]
[66.14798737 62.22272491]
[60.61314011 48.05162430]
[66.61826324 34.46949768]
[60.96542740 20.57541847]
[55.31259537 6.68133688]
[49.65976334 -7.21274424]
[44.00693130 -21.10682487]
[38.35409927 -35.00090790]
[32.70127106 -48.89498901]
[27.04843712 -62.78907013]
[21.39560509 -76.68315125]
[15.74277401 -90.57723236]
[9.59733295 -97.36415100]
[10.11384869 -104.75251007]
[4.69522333 -118.73959351]
[-0.72340178 -132.72668457]
[-24.41651917 -139.63574219]
[-34.05016708 -164.63186646]
[-49.04540634 -165.00982666]
[-64.04064178 -165.38778687]
[-79.03588104 -165.76574707]
[-94.03112030 -166.14370728]
[-109.02635956 -166.52166748]
[-124.02159119 -166.89962769]
[-139.01683044 -167.27758789]
[-154.01206970 -167.65554810]
[-169.00730896 -168.03350830]
[-184.00254822 -168.41146851]
[-198.14022827 -160.10134888]
[-212.27043152 -168.42416382]
[-211.85722351 -184.81809998]
[-197.32566833 -192.41848755]
[-183.62458801 -183.40669250]
[-168.62934875 -183.02874756]
[-153.63410950 -182.65078735]
[-138.63887024 -182.27282715]
[-123.64363098 -181.89486694]
[-108.64839935 -181.51690674]
[-93.65316010 -181.13894653]
[-78.65792084 -180.76098633]
[-63.66268539 -180.38302612]
[-48.66744614 -180.00506592]
[-33.67221069 -179.62710571]
[-23.02115440 -190.18907166]
[-26.29989052 -198.73767090]
[-23.14926910 -205.44052124]
[-23.14926910 -220.44052124]
[-23.14926910 -235.44052124]
[-23.14926910 -250.44052124]
[-23.14926910 -265.44052124]
[-23.14926910 -280.44052124]
[-23.14926910 -295.44052124]
[-23.14926910 -310.44052124]
[-30.88656998 -324.24069214]
[-23.14926910 -336.96798706]
[-23.14926910 -351.96798706]
[-23.14926910 -366.96798706]
[-23.14926910 -381.96798706]
[-23.14926910 -396.96798706]
[-23.14926910 -411.96798706]
[-23.14926910 -426.96798706]
[-34.16269684 -432.93191528]
[-41.54578018 -442.95938110]
[-43.94272232 -455.10516357]
[-40.95763016 -467.04544067]
[-33.21839523 -476.52236938]
[-22.24581528 -481.77093506]
[-21.74191093 -496.76248169]
[-21.23800659 -511.75399780]
[-20.73410225 -526.74554443]
[-20.23019791 -541.73706055]
[-19.72629547 -556.72857666]
[-30.24069786 -568.22143555]
[-29.51610565 -583.41778564]
[-18.49465370 -593.37084961]
[-26.68571663 -607.57781982]
[-18.24450302 -621.63763428]
[-1.85461259 -621.08673096]
[5.62344217 -606.49182129]
[-3.50312090 -592.86694336]
[6.82511473 -582.19628906]
[6.52764463 -566.98553467]
[-4.73476124 -556.22473145]
[-5.23866510 -541.23315430]
[-5.74256897 -526.24163818]
[-6.24647284 -511.25009155]
[-6.75037718 -496.25857544]
[-7.25428104 -481.26702881]
[7.15813923 -471.08993530]
[12.63959122 -454.15447998]
[6.82212973 -437.16546631]
[-8.14926910 -426.96798706]
[-8.14926910 -411.96798706]
[-8.14926910 -396.96798706]
[-8.14926910 -381.96798706]
[-8.14926910 -366.96798706]
[-8.14926910 -351.96798706]
[-8.14926910 -336.96798706]
[-0.41196868 -324.24069214]
[-8.14926910 -310.44052124]
[-8.14926910 -295.44052124]
[-8.14926910 -280.44052124]
[-8.14926910 -265.44052124]
[-8.14926910 -250.44052124]
[-8.14926910 -235.44052124]
[-8.14926910 -220.44052124]
[-8.14926910 -205.44052124]
[-8.02327061 -190.44105530]
[3.67126250 -189.43147278]
[13.92933083 -184.27658081]
[21.37607956 -175.88018799]
[25.09340858 -165.56414795]
[24.73074150 -154.86244202]
[20.52983475 -145.29360962]
[13.26368141 -138.14530945]
[18.68230629 -124.15821838]
[24.10093117 -110.17113495]
[29.63685608 -96.23006439]
[35.28968811 -82.33598328]
[40.94252014 -68.44190216]
[46.59535217 -54.54782104]
[52.24818039 -40.65373993]
[57.90101242 -26.75965691]
[63.55384445 -12.86557579]
[69.20668030 1.02850533]
[74.85951233 14.92258644]
[80.51234436 28.81666756]
[94.29400635 34.34850311]
[100.22470856 48.35855103]
[94.32897186 62.77652359]
[99.98180389 76.67060852]
[105.63463593 90.56468964]
[114.16358185 102.90393829]
[125.16343689 113.10212708]
[136.16329956 123.30032349]
[147.24842834 133.40576172]
[158.41806030 143.41772461]
[169.58767700 153.42968750]
[185.14959717 152.74810791]
[196.33456421 163.06077576]
[196.88844299 177.90089417]
[212.34231567 175.51091003]
[225.69004822 183.65780640]
[230.62925720 198.49485779]
[224.82780457 213.01646423]
[211.02494812 220.36596680]
[195.73799133 217.07316589]
[186.18493652 204.69279480]
[186.87648010 189.07051086]
[172.06439209 190.13725281]
[160.59417725 180.14280701]
[159.57571411 164.59930420]
[148.40609741 154.58734131]
[137.23646545 144.57537842]
[130.14230347 142.44755554]
[125.96510315 134.30018616]
[114.96524811 124.10198975]
[103.96538544 113.90379333]
[96.88478088 116.37664032]
[101.83046722 130.53785706]
[110.91000366 142.47779846]
[102.36003876 154.80247498]
[87.99652863 150.47933960]
[87.66925049 135.48355103]
[82.72355652 121.32233429]
[75.64294434 123.79517365]
[73.38358307 138.62403870]
[71.12422180 153.45291138]
[73.18069458 159.77189636]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[11 185]
[12 184]
[13 183]
[15 149]
[16 148]
[17 147]
[20 144]
[21 143]
[22 142]
[23 141]
[24 140]
[25 139]
[26 138]
[27 137]
[28 136]
[29 135]
[31 134]
[32 133]
[33 132]
[35 60]
[36 59]
[37 58]
[38 57]
[39 56]
[40 55]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[61 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
[70 117]
[72 115]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[78 109]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[92 97]
[150 175]
[151 174]
[152 173]
[153 171]
[154 170]
[155 169]
[158 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
