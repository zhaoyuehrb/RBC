%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUGCCCUGUGGCAGCUUAUCGGGUAACCAGAGCCGGCAGCUUCAUCCACGUCUGAAACAGGAAGCCCCAGCCUGUGCAUGAGUCGCCACUGAGAGCCCGGGCCAGAGG\
) } def
/len { sequence length } bind def

/coor [
[15.24184608 459.22204590]
[5.30657864 471.29782104]
[-10.07582474 474.11129761]
[-23.64226341 466.33404541]
[-28.98708153 451.63821411]
[-23.58661652 436.96276855]
[-9.99080467 429.23696899]
[-7.45579243 414.45272827]
[-4.92078018 399.66848755]
[-10.39586735 385.81668091]
[-0.43762019 373.52261353]
[2.09739208 358.73840332]
[4.63240433 343.95416260]
[7.16741657 329.16992188]
[-6.14786100 336.07666016]
[-20.52366257 331.79458618]
[-27.88940430 318.72760010]
[-24.10995102 304.21154785]
[-11.30709171 296.39575195]
[3.33163881 299.66799927]
[11.58816433 312.19183350]
[16.58526230 298.04867554]
[21.58235931 283.90551758]
[26.57945442 269.76235962]
[31.57655144 255.61918640]
[36.57365036 241.47602844]
[27.99044800 229.33244324]
[28.20627975 214.28526306]
[37.34792709 202.10809326]
[52.07723999 197.59658813]
[57.07433701 183.45343018]
[62.07143021 169.31027222]
[56.85788345 161.81048584]
[55.74924088 152.60406494]
[59.13317490 143.82142639]
[66.34243011 137.55651855]
[75.78211212 135.36776733]
[81.96063232 121.69934082]
[88.13915253 108.03091431]
[86.94761658 94.09995270]
[98.19242096 85.79056549]
[104.37094116 72.12213898]
[110.54946136 58.45370865]
[111.25946045 49.19613647]
[117.10109711 44.48975754]
[123.66394806 31.00164795]
[130.22679138 17.51353836]
[129.30725098 1.71907783]
[141.83316040 -6.34012985]
[148.39599609 -19.82823753]
[154.95884705 -33.31634521]
[161.52169800 -46.80445480]
[159.73812866 -65.06352234]
[174.50848389 -74.42311096]
[180.68699646 -88.09153748]
[186.86552429 -101.75997162]
[171.99140930 -99.82068634]
[161.00239563 -110.03056335]
[161.84455872 -125.00690460]
[173.90895081 -133.92041016]
[188.47186279 -130.32579041]
[195.00296021 -116.82344055]
[203.04753113 -129.48381042]
[203.20256042 -145.88221741]
[217.61264038 -153.71047974]
[231.45391846 -144.91554260]
[230.48768616 -128.54487610]
[215.70790100 -121.43923950]
[207.66333008 -108.77886963]
[200.53395081 -95.58145142]
[194.35542297 -81.91302490]
[188.17691040 -68.24459839]
[192.15873718 -56.72516632]
[187.00486755 -45.23732758]
[175.00979614 -40.24160767]
[168.44696045 -26.75350189]
[161.88410950 -13.26539326]
[155.32125854 0.22271514]
[156.71022034 15.05241680]
[143.71490479 24.07638359]
[137.15205383 37.56449127]
[130.58920288 51.05260086]
[124.21788788 64.63222504]
[118.03936768 78.30065918]
[111.86084747 91.96908569]
[113.05238342 105.90004730]
[101.80757904 114.20943451]
[95.62905884 127.87786102]
[89.45053864 141.54629517]
[93.08695984 162.56430054]
[76.21459198 174.30737305]
[71.21749878 188.45053101]
[66.22039795 202.59368896]
[74.84612274 215.35704041]
[74.30870056 230.57429504]
[65.02368927 242.41711426]
[50.71681213 246.47311401]
[45.71971512 260.61627197]
[40.72261810 274.75942993]
[35.72552109 288.90261841]
[30.72842407 303.04577637]
[25.73132706 317.18893433]
[21.95165443 331.70492554]
[19.41664314 346.48916626]
[16.88162994 361.27340698]
[14.34661865 376.05764771]
[19.64038467 390.96691895]
[9.86345863 402.20352173]
[7.32844639 416.98776245]
[4.79343414 431.77200317]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 110]
[8 109]
[9 108]
[11 106]
[12 105]
[13 104]
[14 103]
[21 102]
[22 101]
[23 100]
[24 99]
[25 98]
[26 97]
[30 93]
[31 92]
[32 91]
[37 89]
[38 88]
[39 87]
[41 85]
[42 84]
[43 83]
[45 82]
[46 81]
[47 80]
[49 78]
[50 77]
[51 76]
[52 75]
[54 72]
[55 71]
[56 70]
[62 69]
[63 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
