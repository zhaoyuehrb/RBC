%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGGACGAGCGGCAGCAGCUGGGCGAGUGACAGCCCCGGCUCCGCGCGCCGCGGCCGCCAGAGCCGGCGCAGGGGAAGCGCCCGCGGCCCCGGGUGCAGCAGCGGCCGCCGCCUCCCGCGCCUCCCCGGCCCGCAGCCCGCGGUCCCGCGGCCCCGGGGCCGGCACCUCUCGGGCUCCGGCUCCCCGCGCGCAAG\
) } def
/len { sequence length } bind def

/coor [
[19.29156685 727.57299805]
[11.74533463 729.91534424]
[7.74822712 744.37298584]
[3.75112009 758.83062744]
[-0.24598722 773.28826904]
[7.76438904 786.91210938]
[3.71424580 802.18859863]
[-9.99353790 810.05450439]
[-25.22637749 805.84307861]
[-32.94689941 792.05291748]
[-28.57465553 776.86541748]
[-14.70361996 769.29113770]
[-10.70651245 754.83349609]
[-6.70940542 740.37585449]
[-2.71229792 725.91827393]
[-10.20360088 705.61645508]
[5.93370628 690.07635498]
[9.00580597 675.39428711]
[7.29676008 668.19567871]
[12.24487495 660.50451660]
[15.54953289 645.87310791]
[18.73801231 631.21588135]
[21.81011200 616.53387451]
[24.88221359 601.85180664]
[27.95431328 587.16979980]
[26.24526596 579.97119141]
[31.19338226 572.28002930]
[34.49803925 557.64855957]
[37.80269623 543.01715088]
[41.10735703 528.38568115]
[31.15976143 517.33203125]
[29.61014366 502.36331177]
[37.26124573 489.19842529]
[51.36011887 482.99133301]
[54.66477966 468.35989380]
[57.96943665 453.72845459]
[61.27409363 439.09698486]
[64.57875061 424.46554565]
[66.83119202 409.63562012]
[68.01994324 394.68280029]
[69.20869446 379.72998047]
[70.39744568 364.77716064]
[71.58618927 349.82434082]
[72.77494049 334.87152100]
[73.96369171 319.91870117]
[75.15244293 304.96588135]
[72.54585266 298.04153442]
[76.48052216 289.78585815]
[69.98806000 276.38073730]
[79.00211334 263.37854004]
[80.42795563 248.44645691]
[81.85379791 233.51437378]
[83.27963257 218.58230591]
[84.70547485 203.65022278]
[86.13131714 188.71813965]
[87.55715942 173.78607178]
[88.74591064 158.83325195]
[89.69726562 143.86344910]
[90.64862823 128.89364624]
[91.59998322 113.92384338]
[84.44130707 104.72870636]
[85.27263641 93.10519409]
[93.66705322 85.02243042]
[91.22574615 76.20893860]
[94.99513245 69.84242249]
[96.42097473 54.91034317]
[97.60971832 39.95751953]
[98.56108093 24.98772049]
[99.51243591 10.01792145]
[96.93160248 1.24427164]
[100.59950256 -5.18125105]
[101.78825378 -20.13407326]
[95.16895294 -34.50402069]
[103.89055634 -46.57808304]
[105.07929993 -61.53090286]
[106.26805115 -76.48372650]
[107.45680237 -91.43654633]
[108.64555359 -106.38936615]
[102.02625275 -120.75931549]
[110.74784851 -132.83337402]
[111.93659973 -147.78619385]
[113.12535095 -162.73902893]
[114.31409454 -177.69184875]
[104.33611298 -189.65335083]
[105.75467682 -204.80070496]
[117.21963501 -214.23947144]
[110.60033417 -228.60942078]
[119.32192993 -240.68347168]
[120.51068115 -255.63630676]
[121.69943237 -270.58911133]
[111.72144318 -282.55062866]
[113.14001465 -297.69796753]
[124.60496521 -307.13674927]
[125.79371643 -322.08956909]
[126.98246765 -337.04238892]
[120.36316681 -351.41235352]
[129.08476257 -363.48638916]
[130.27351379 -378.43920898]
[131.46226501 -393.39205933]
[123.92927551 -407.95864868]
[133.00444031 -421.61782837]
[149.35200500 -420.31820679]
[156.15499878 -405.39669800]
[146.41508484 -392.20330811]
[145.22633362 -377.25048828]
[144.03758240 -362.29763794]
[150.74191284 -348.99722290]
[141.93528748 -335.85363770]
[140.74653625 -320.90081787]
[139.55778503 -305.94799805]
[149.38739014 -294.81631470]
[148.39483643 -279.63510132]
[136.65225220 -269.40036011]
[135.46350098 -254.44755554]
[134.27474976 -239.49473572]
[140.97908020 -226.19430542]
[132.17245483 -213.05072021]
[142.00205994 -201.91903687]
[141.00950623 -186.73780823]
[129.26692200 -176.50309753]
[128.07817078 -161.55027771]
[126.88941956 -146.59745789]
[125.70066833 -131.64462280]
[132.40499878 -118.34420776]
[123.59837341 -105.20062256]
[122.40962219 -90.24779510]
[121.22087097 -75.29497528]
[120.03212738 -60.34215546]
[118.84337616 -45.38933182]
[125.54770660 -32.08890915]
[116.74107361 -18.94532394]
[115.55233002 -3.99250174]
[114.48223877 10.96928024]
[113.53088379 25.93907928]
[112.57952118 40.90887833]
[115.01448059 45.02868652]
[114.87989044 50.72358322]
[111.35305023 56.33618546]
[109.92720795 71.26826477]
[108.61987305 86.21118164]
[116.21998596 101.16007996]
[106.56978607 114.87520599]
[105.61842346 129.84500122]
[104.66706848 144.81480408]
[103.71570587 159.78460693]
[106.31144714 165.88395691]
[105.54454041 171.52857971]
[102.48923492 175.21191406]
[101.06339264 190.14398193]
[99.63755798 205.07606506]
[98.21171570 220.00814819]
[96.78587341 234.94021606]
[95.36003113 249.87229919]
[93.93418884 264.80438232]
[100.32466888 279.27752686]
[91.41259766 291.21170044]
[90.10526276 306.15463257]
[88.91651154 321.10745239]
[87.72776031 336.06027222]
[86.53901672 351.01309204]
[85.35026550 365.96591187]
[84.16151428 380.91873169]
[82.97276306 395.87155151]
[81.78401947 410.82437134]
[92.07365417 399.91000366]
[106.60283661 396.18133545]
[120.87668610 400.79190063]
[130.47933960 412.31530762]
[132.44004822 427.18661499]
[126.15221405 440.80508423]
[113.56111145 448.95764160]
[98.56201172 449.12210083]
[85.79515839 441.24761963]
[79.21019745 427.77020264]
[75.90554047 442.40164185]
[72.60088348 457.03311157]
[69.29622650 471.66455078]
[65.99156952 486.29598999]
[76.05404663 497.96014404]
[77.30422974 513.13549805]
[69.47155762 525.98510742]
[55.73880386 531.69030762]
[52.43414307 546.32177734]
[49.12948608 560.95324707]
[45.82482910 575.58465576]
[42.63634872 590.24188232]
[39.56425095 604.92388916]
[36.49214935 619.60595703]
[33.42004776 634.28796387]
[34.72599411 643.33959961]
[30.18098068 649.17773438]
[26.87632179 663.80920410]
[23.68784332 678.46643066]
[20.61574364 693.14843750]
[26.41700935 699.18389893]
[29.32163811 706.93499756]
[28.92457390 715.10882568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[17 194]
[18 193]
[20 192]
[21 191]
[22 189]
[23 188]
[24 187]
[25 186]
[27 185]
[28 184]
[29 183]
[30 182]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[39 164]
[40 163]
[41 162]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[48 156]
[50 154]
[51 153]
[52 152]
[53 151]
[54 150]
[55 149]
[56 148]
[57 145]
[58 144]
[59 143]
[60 142]
[63 140]
[65 139]
[66 138]
[67 135]
[68 134]
[69 133]
[71 132]
[72 131]
[74 129]
[75 128]
[76 127]
[77 126]
[78 125]
[80 123]
[81 122]
[82 121]
[83 120]
[86 117]
[88 115]
[89 114]
[90 113]
[93 110]
[94 109]
[95 108]
[97 106]
[98 105]
[99 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
