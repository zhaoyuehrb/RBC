%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGACUGUAGAGGCGCCUAUAAGGGAAGUUGUUCAGUCAACUCGGAAAAAGGGUAACAACCCGGAAAGUAGACUCACCGUCUUGGUCUAGAGACUGACCCCUGCACAGACAGACCCCUUCCCCUCUCUGCGAAAGGACCAAGCCCCAGAAGUCACUCCAUCUCCUACGGCUCGCAAUUUCCAGAGGCCCCCUGGCACCUUCCAGCCUG\
) } def
/len { sequence length } bind def

/coor [
[73.29900360 433.04034424]
[75.77632141 413.81762695]
[75.99964905 398.81927490]
[76.22297668 383.82095337]
[76.44630432 368.82260132]
[73.40274048 362.08773804]
[76.78627014 353.60308838]
[77.23287964 338.60974121]
[77.67948151 323.61636353]
[69.61540222 314.59988403]
[69.86477661 302.10501099]
[78.83921051 292.84097290]
[79.50899506 277.85595703]
[80.17877960 262.87091064]
[80.84856415 247.88586426]
[73.68728638 234.82580566]
[82.03307343 221.38488770]
[82.70286560 206.39984131]
[83.37265015 191.41481018]
[81.58266449 189.25747681]
[80.53937531 186.26110840]
[80.56663513 182.70658875]
[81.88073730 178.98667908]
[84.55473328 175.56561279]
[86.11524963 160.64700317]
[87.67577362 145.72840881]
[89.23629761 130.80979919]
[81.69210052 127.01706696]
[75.37345886 121.41575623]
[62.09561539 128.39421082]
[48.81776810 135.37266541]
[35.53992081 142.35112000]
[22.26207542 149.32955933]
[17.80881119 164.49346924]
[3.89753461 171.99360657]
[-11.21843910 167.38026428]
[-18.57107162 153.39047241]
[-13.79817486 138.32411194]
[0.26857424 131.11979675]
[15.28362370 136.05172729]
[28.56147003 129.07327271]
[41.83931732 122.09481812]
[55.11716461 115.11636353]
[68.39501190 108.13790894]
[68.22935486 92.53495026]
[75.32639313 78.63848877]
[66.54579163 66.47703552]
[57.76518631 54.31557465]
[48.98458481 42.15412140]
[38.16439438 41.04410553]
[29.91125870 34.30125427]
[26.79727554 24.33875275]
[29.62022209 14.51816463]
[21.20560265 2.10066891]
[12.79098511 -10.31682682]
[4.37636614 -22.73432159]
[2.51653266 -7.85006809]
[-4.43894291 5.43982887]
[-15.60880089 15.45153618]
[-29.57781792 20.91656876]
[-44.57611465 21.14250565]
[-58.70340729 16.10072136]
[-70.16976166 6.43000889]
[-77.52259827 -6.64492941]
[-90.00238800 -14.96687317]
[-102.48218536 -23.28881645]
[-117.78904724 -20.40131378]
[-130.32678223 -29.01872826]
[-132.98524475 -43.62928009]
[-145.46504211 -51.95122147]
[-161.85604858 -52.46801376]
[-169.36445618 -67.04730225]
[-160.26626587 -80.69116974]
[-143.92091370 -79.36396790]
[-137.14309692 -64.43101501]
[-124.66329956 -56.10907364]
[-110.15342712 -59.27119827]
[-97.37859344 -51.00934601]
[-94.16024017 -35.76861191]
[-81.68045044 -27.44666672]
[-69.20065308 -19.12472343]
[-63.32202911 -23.78216362]
[-72.63672638 -35.53955841]
[-60.87919235 -44.85408020]
[-51.56477737 -33.09704590]
[-45.68615341 -37.75448990]
[-50.93286896 -51.80696106]
[-56.17958832 -65.85942841]
[-61.42630768 -79.91190338]
[-76.41262817 -83.93555450]
[-86.14557648 -96.02064514]
[-86.88262939 -111.52020264]
[-78.34038544 -124.47434235]
[-63.80350113 -129.90191650]
[-48.86170959 -125.71593475]
[-39.26043701 -113.52597046]
[-38.69156265 -98.01932526]
[-47.37383652 -85.15862274]
[-42.12711716 -71.10614777]
[-36.88039780 -57.05367661]
[-31.63368034 -43.00120544]
[-24.20091629 -44.00321198]
[-1.90262389 -47.00923538]
[-0.56438971 -61.94942093]
[0.77384448 -76.88960266]
[-9.55095291 -88.85514069]
[-8.30746937 -104.61043549]
[3.76656032 -114.80815125]
[19.50782776 -113.39816284]
[29.57731628 -101.21698761]
[28.00098038 -85.49150848]
[15.71402931 -75.55136871]
[14.37579536 -60.61118317]
[13.03756142 -45.67100143]
[16.79386139 -31.14894104]
[25.20848083 -18.73144531]
[33.62310028 -6.31394958]
[42.03771591 6.10354567]
[60.00582886 13.24735451]
[61.14604187 33.37351608]
[69.92664337 45.53497314]
[78.70724487 57.69643021]
[87.48784637 69.85788727]
[105.57258606 67.84339142]
[121.92492676 75.82566071]
[131.46130371 91.32318878]
[146.45091248 90.76497650]
[161.44052124 90.20676422]
[176.43014526 89.64855194]
[191.41975403 89.09033966]
[206.40936279 88.53213501]
[214.86860657 85.08553314]
[221.62594604 88.07887268]
[236.62220764 87.74389648]
[251.61845398 87.40892029]
[266.61471558 87.07394409]
[273.60079956 75.19179535]
[285.45175171 68.36734009]
[299.01876831 68.29043579]
[310.75750732 74.87422943]
[317.65408325 86.30574036]
[331.39627075 78.46591949]
[344.18078613 86.10826111]
[359.18035889 85.99658966]
[374.17993164 85.88492584]
[389.17953491 85.77325439]
[400.23123169 74.79612732]
[415.44454956 74.89655304]
[425.84146118 85.50032043]
[440.84103394 85.38865662]
[454.58322144 77.54883575]
[467.36773682 85.19116974]
[482.36734009 85.07950592]
[490.52404785 71.98479462]
[504.47521973 65.39933014]
[519.76910400 67.42450714]
[531.52539062 77.41411591]
[535.99279785 92.18048859]
[531.74578857 107.01174164]
[520.13946533 117.17527008]
[504.87744141 119.42793274]
[490.82977295 113.05091095]
[482.47900391 100.07908630]
[467.47940063 100.19075775]
[454.81008911 108.02259064]
[440.95269775 100.38823700]
[425.95312500 100.49990845]
[415.71524048 111.25729370]
[400.50512695 111.58421326]
[389.29119873 100.77284241]
[374.29162598 100.88450623]
[359.29202271 100.99617767]
[344.29244995 101.10784149]
[331.62313843 108.93967438]
[317.76574707 101.30532837]
[308.64849854 114.95645142]
[293.03457642 120.53922272]
[277.01077271 115.66692352]
[266.94970703 102.07020569]
[251.95343018 102.40518188]
[236.95718384 102.74015808]
[221.96092224 103.07513428]
[206.96757507 103.52174377]
[191.97795105 104.07994843]
[176.98834229 104.63816071]
[161.99873352 105.19637299]
[147.00912476 105.75458527]
[132.01951599 106.31279755]
[126.73462677 118.71792603]
[116.88602448 127.92781830]
[104.15490723 132.37031555]
[102.59438324 147.28892517]
[101.03385925 162.20753479]
[99.47333527 177.12614441]
[98.35768890 192.08459473]
[97.68790436 207.06962585]
[97.01811218 222.05467224]
[104.13148499 236.18656921]
[95.83360291 248.55564880]
[95.16381836 263.54067993]
[94.49403381 278.52572632]
[93.82424927 293.51077271]
[102.68704224 309.65179443]
[92.67282867 324.06298828]
[92.22622681 339.05633545]
[91.77961731 354.04968262]
[91.44464111 369.04592896]
[91.22131348 384.04428101]
[90.99798584 399.04260254]
[90.77465820 414.04095459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 210]
[3 209]
[4 208]
[5 207]
[7 206]
[8 205]
[9 204]
[12 202]
[13 201]
[14 200]
[15 199]
[17 197]
[18 196]
[19 195]
[24 194]
[25 193]
[26 192]
[27 191]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[46 123]
[47 122]
[48 121]
[49 120]
[53 118]
[54 117]
[55 116]
[56 115]
[64 81]
[65 80]
[66 79]
[69 76]
[70 75]
[86 101]
[87 100]
[88 99]
[89 98]
[103 114]
[104 113]
[105 112]
[126 188]
[127 187]
[128 186]
[129 185]
[130 184]
[131 183]
[133 182]
[134 181]
[135 180]
[136 179]
[141 175]
[143 173]
[144 172]
[145 171]
[146 170]
[149 167]
[150 166]
[152 164]
[153 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
