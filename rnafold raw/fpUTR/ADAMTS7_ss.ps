%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCUUUCUUUCUCUCCUUCUAGCUCUCUUGUCUUUUCUUUGCCUCUGCAGCGGCCAAGGGGGCGGGCCCUGCAGCCUUUGUUGCCCGCGGACCGAGCGCAGCCGAACGGAGUCGGGGCCGGGUCGCCGGGAGCUGCACGCCGGCCGGGCAUGUCCUGAGCCGGACCUGGGACCAGGCAGCGACCGGACGGGACGGACGAGAGCGUGCGCGCGGGGUCACCCGGCGGCCGCCCGGUUCCUGCC\
) } def
/len { sequence length } bind def

/coor [
[448.81106567 187.94073486]
[440.33975220 200.31961060]
[428.52929688 209.56697083]
[414.47976685 214.82150269]
[399.49966431 215.59379578]
[384.98422241 211.81193542]
[372.28543091 203.82815552]
[362.58602905 192.38604736]
[356.78942871 178.55134583]
[355.43548584 163.61257935]
[358.65029907 148.96112061]
[366.13449097 135.96162415]
[377.19097900 125.82483673]
[390.79064941 119.49467468]
[375.81054688 118.72249603]
[360.83044434 117.95030975]
[345.85034180 117.17813110]
[330.86557007 116.50240326]
[315.87673950 115.92315674]
[300.88793945 115.34391022]
[291.81335449 123.32168579]
[279.33489990 122.97530365]
[270.14474487 113.94574738]
[255.16462708 113.17356873]
[240.18452454 112.40138245]
[225.19975281 111.72565460]
[212.18318176 118.96569824]
[198.69209290 110.70125580]
[183.70327759 110.12200928]
[168.71446228 109.54276276]
[153.72566223 108.96351624]
[138.73342896 108.48076630]
[123.73839569 108.09455109]
[108.74337006 107.70833588]
[93.05841827 132.76173401]
[78.82880402 137.50704956]
[64.59918976 142.25238037]
[50.36957550 146.99769592]
[36.13996124 151.74301147]
[21.91034698 156.48834229]
[11.26667023 168.19401550]
[-3.25467324 164.88043213]
[-17.48428726 169.62574768]
[-31.71390152 174.37106323]
[-36.26622391 189.20535278]
[-48.68870926 198.50381470]
[-64.20465851 198.69102478]
[-76.84786224 189.69497681]
[-81.75676727 174.97483826]
[-77.04378510 160.19081116]
[-64.52116394 151.02764893]
[-49.00410080 151.00878906]
[-36.45922470 160.14144897]
[-22.22961044 155.39613342]
[-7.99999571 150.65081787]
[1.62588322 139.28456116]
[17.16502380 142.25872803]
[31.39463806 137.51339722]
[45.62425232 132.76808167]
[59.85386658 128.02276611]
[74.08348083 123.27743530]
[88.31309509 118.53211212]
[88.79583740 103.53988647]
[74.90097809 97.88896179]
[61.00611877 92.23804474]
[47.11125946 86.58712769]
[33.21640015 80.93621063]
[19.32153893 75.28529358]
[9.58642864 80.07425690]
[-0.96130073 78.75453186]
[-8.88248158 71.99900818]
[-11.72783661 62.21287155]
[-25.47258949 56.20606232]
[-39.21734238 50.19925690]
[-54.61936569 54.68893433]
[-67.64900208 45.32901382]
[-68.31103516 29.29962730]
[-56.09760284 18.89714432]
[-40.37781143 22.10146332]
[-33.21053314 36.45450211]
[-19.46578217 42.46131134]
[-5.72102785 48.46812057]
[13.30260468 44.93586349]
[24.97245789 61.39043427]
[38.86731720 67.04135132]
[52.76217651 72.69226837]
[66.65703583 78.34318542]
[80.55189514 83.99410248]
[94.44675446 89.64502716]
[109.12959290 92.71330261]
[124.12461853 93.09952545]
[139.11964417 93.48574066]
[147.75695801 90.58330536]
[154.30490112 93.97470093]
[169.29371643 94.55394745]
[184.28253174 95.13319397]
[199.27133179 95.71244812]
[213.36000061 88.51383209]
[225.77899170 96.73684692]
[234.45295715 93.94585419]
[240.95669556 97.42127228]
[255.93681335 98.19345093]
[270.91693115 98.96563721]
[287.13153076 90.21685028]
[301.46719360 100.35509491]
[316.45599365 100.93434143]
[331.44479370 101.51358795]
[340.11877441 98.72260284]
[346.62249756 102.19802094]
[361.60263062 102.97019958]
[376.58273315 103.74238586]
[391.56283569 104.51456451]
[398.31948853 100.23712158]
[405.50973511 100.16986847]
[410.95248413 103.51508331]
[425.77377319 101.20672607]
[440.59509277 98.89836884]
[455.41641235 96.59001160]
[470.23773193 94.28164673]
[485.05905151 91.97328949]
[499.88037109 89.66493225]
[514.70172119 87.35657501]
[529.52301025 85.04821777]
[544.34436035 82.73986053]
[559.11828613 80.14569855]
[573.83941650 77.26671600]
[588.56054688 74.38773346]
[603.28167725 71.50874329]
[618.00280762 68.62976074]
[632.72393799 65.75077820]
[647.44506836 62.87179184]
[658.60150146 44.28351974]
[683.81622314 44.30370331]
[695.57806396 34.99456406]
[707.33984375 25.68542099]
[719.10162354 16.37627792]
[730.86346436 7.06713581]
[722.62390137 0.95459044]
[717.34063721 -9.83325100]
[717.03240967 -23.82942009]
[723.03009033 -38.80845642]
[733.63671875 -49.41505814]
[744.24334717 -60.02165985]
[754.84991455 -70.62825775]
[765.45654297 -81.23486328]
[775.99462891 -91.90952301]
[786.46380615 -102.65180969]
[796.93292236 -113.39408875]
[807.40209961 -124.13637543]
[808.63415527 -140.13204956]
[821.98858643 -149.02236938]
[837.22113037 -143.98744202]
[842.64654541 -128.88963318]
[834.10302734 -115.31068420]
[818.14440918 -113.66721344]
[807.67523193 -102.92492676]
[797.20605469 -92.18264771]
[786.73693848 -81.44036102]
[784.32464600 -74.47198486]
[776.06311035 -70.62825775]
[765.45654297 -60.02165985]
[754.84991455 -49.41505814]
[744.24334717 -38.80845642]
[733.63671875 -28.20185471]
[737.49768066 -21.77199364]
[745.21954346 -8.91227436]
[749.08050537 -2.48241496]
[763.42761230 -6.85978127]
[777.77465820 -11.23714733]
[788.56408691 -23.58704185]
[804.59967041 -20.15300560]
[809.38537598 -4.46768236]
[797.99804688 7.33321333]
[782.15203857 3.10993099]
[767.80493164 7.48729753]
[753.45788574 11.86466408]
[740.17260742 18.82893372]
[728.41076660 28.13807487]
[716.64898682 37.44721603]
[704.88720703 46.75635910]
[693.12536621 56.06550217]
[694.85968018 70.96490479]
[708.44519043 77.32362366]
[722.03076172 83.68233490]
[735.61627197 90.04105377]
[745.58502197 85.75959015]
[756.05084229 87.62054443]
[763.61370850 94.77488708]
[765.95153809 104.69452667]
[779.36883545 111.40093231]
[795.17224121 110.64998627]
[803.09729004 123.26118469]
[812.15051270 124.29392242]
[816.64337158 130.14128113]
[829.97320557 137.01988220]
[845.78491211 136.47247314]
[853.54699707 149.18466187]
[866.87683105 156.06326294]
[880.20666504 162.94186401]
[896.55310059 161.62788391]
[905.64025879 175.27911377]
[898.12005615 189.85232544]
[881.72863770 190.35585022]
[873.32806396 176.27171326]
[859.99822998 169.39311218]
[846.66839600 162.51451111]
[831.81011963 163.55392456]
[823.09460449 150.34973145]
[809.76477051 143.47113037]
[796.39086914 136.67849731]
[781.54724121 137.90911865]
[772.66241455 124.81823730]
[759.24511719 118.11183167]
[740.06488037 120.66008759]
[729.25756836 103.62658691]
[715.67205811 97.26786804]
[702.08648682 90.90915680]
[688.50097656 84.55043793]
[665.80834961 90.55659485]
[650.32403564 77.59291840]
[635.60290527 80.47190094]
[620.88177490 83.35088348]
[606.16064453 86.22986603]
[591.43951416 89.10885620]
[576.71844482 91.98783875]
[561.99731445 94.86682129]
[559.74237061 97.55054474]
[556.08496094 99.28539276]
[551.48046875 99.42813873]
[546.65270996 97.56117249]
[531.83135986 99.86953735]
[517.01007080 102.17789459]
[502.18875122 104.48625183]
[487.36743164 106.79460907]
[472.54611206 109.10296631]
[457.72479248 111.41132355]
[442.90347290 113.71968842]
[428.08215332 116.02804565]
[413.26083374 118.33640289]
[427.43862915 123.23432159]
[439.47891235 132.18035889]
[448.26025391 144.34129333]
[452.96475220 158.58445740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 112]
[15 111]
[16 110]
[17 109]
[18 107]
[19 106]
[20 105]
[23 103]
[24 102]
[25 101]
[26 99]
[28 97]
[29 96]
[30 95]
[31 94]
[32 92]
[33 91]
[34 90]
[35 62]
[36 61]
[37 60]
[38 59]
[39 58]
[40 57]
[42 55]
[43 54]
[44 53]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[72 82]
[73 81]
[74 80]
[115 239]
[116 238]
[117 237]
[118 236]
[119 235]
[120 234]
[121 233]
[122 232]
[123 231]
[124 230]
[125 226]
[126 225]
[127 224]
[128 223]
[129 222]
[130 221]
[131 220]
[133 181]
[134 180]
[135 179]
[136 178]
[137 177]
[141 164]
[142 163]
[143 162]
[144 161]
[145 160]
[146 158]
[147 157]
[148 156]
[149 155]
[167 176]
[168 175]
[169 174]
[182 218]
[183 217]
[184 216]
[185 215]
[189 213]
[190 212]
[192 210]
[194 209]
[195 208]
[197 206]
[198 205]
[199 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
