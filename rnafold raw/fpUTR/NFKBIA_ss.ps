%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCACAGCAGUCCGUGCCGCCGUCCCGCCCGCCAGCGCCCCAGCGAGGAAGCAGCGCGCAGCCCGCGGCCCAGCGCACCCGCAGCAGCGCCCGCAGCUCGUCCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[104.90272522 161.54447937]
[90.77862549 166.59521484]
[75.88899231 164.77894592]
[63.39317703 156.48107910]
[55.94260406 143.46229553]
[55.11817169 128.48497009]
[61.09481049 114.72706604]
[72.60437012 105.10781097]
[87.20449829 101.66826630]
[74.00708008 94.53888702]
[63.33271027 100.15749359]
[51.39447403 99.85849762]
[41.22268677 93.83563995]
[35.34180069 83.72062683]
[35.14422989 72.14276123]
[22.37129211 64.27815247]
[9.59835529 56.41353989]
[-3.17458224 48.54893112]
[-15.94751930 40.68432236]
[-31.75549126 40.03732681]
[-38.53641129 26.77578926]
[-51.30934906 18.91118050]
[-64.11270142 21.12767792]
[-74.62368011 14.19570923]
[-77.44084167 2.33755803]
[-89.98610687 -5.88536119]
[-102.53136444 -14.10828018]
[-115.19173431 -22.15284920]
[-127.96466827 -30.01745987]
[-140.73760986 -37.88206863]
[-158.85037231 -32.73780441]
[-174.77902222 -42.17378235]
[-178.82942200 -59.91574097]
[-192.02684021 -67.04512024]
[-208.39518738 -66.04042816]
[-217.22261047 -79.86101532]
[-209.42822266 -94.28944397]
[-193.03021240 -94.48298645]
[-184.89746094 -80.24254608]
[-171.70004272 -73.11315918]
[-161.57452393 -78.73098755]
[-149.87422180 -78.69550323]
[-139.57238770 -72.89790344]
[-133.34432983 -62.70858383]
[-132.87300110 -50.65500641]
[-120.10005951 -42.79039764]
[-107.32712555 -34.92578506]
[-99.87258148 -34.08638382]
[-94.30844879 -26.65354156]
[-81.76318359 -18.43062401]
[-69.21792603 -10.20770454]
[-51.73178482 -10.22939491]
[-43.44474030 6.13824368]
[-30.67180252 14.00285339]
[-15.77743626 14.08731747]
[-8.08290958 27.91138458]
[4.69002724 35.77599335]
[17.46296501 43.64060211]
[30.23590088 51.50521469]
[43.00883865 59.36982346]
[60.39902496 54.00658798]
[76.53514862 63.08322144]
[81.13646698 81.34146118]
[94.33388519 88.47084808]
[104.29249573 88.02560425]
[111.47123718 94.80004120]
[126.13456726 97.96022797]
[140.79789734 101.12041473]
[155.46122742 104.28060913]
[170.12455750 107.44079590]
[185.24507141 102.78456879]
[196.05659485 113.02957916]
[211.17710876 108.37335205]
[221.98863220 118.61836243]
[236.65196228 121.77854919]
[251.31529236 124.93874359]
[266.02188110 127.89111328]
[280.76876831 130.63508606]
[292.04049683 120.13487244]
[307.15704346 118.30656433]
[320.29620361 125.64323425]
[326.52127075 139.14830017]
[341.26812744 141.89225769]
[356.01501465 144.63623047]
[371.28872681 138.66581726]
[383.92538452 149.11796570]
[380.92547607 165.24038696]
[365.37506104 170.44772339]
[353.27105713 159.38311768]
[338.52416992 156.63914490]
[323.77728271 153.89518738]
[313.11123657 164.25729370]
[298.21255493 166.37693787]
[284.76531982 159.23373413]
[278.02478027 145.38197327]
[263.27789307 142.63800049]
[256.02035522 144.53608704]
[248.15510559 139.60206604]
[233.49177551 136.44187927]
[218.82844543 133.28169250]
[204.75674438 138.16395569]
[192.89640808 127.69290924]
[178.82470703 132.57518005]
[166.96437073 122.10412598]
[152.30104065 118.94393921]
[137.63771057 115.78374481]
[122.97438049 112.62355804]
[108.31105042 109.46337128]
[117.17078400 121.56729889]
[119.66496277 136.35847473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 64]
[10 63]
[15 60]
[16 59]
[17 58]
[18 57]
[19 56]
[21 54]
[22 53]
[25 51]
[26 50]
[27 49]
[28 47]
[29 46]
[30 45]
[33 40]
[34 39]
[66 108]
[67 107]
[68 106]
[69 105]
[70 104]
[72 102]
[74 100]
[75 99]
[76 98]
[77 96]
[78 95]
[82 91]
[83 90]
[84 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
