%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGAUCCGAGGCCCGGCCCCGGCCCCGCCCCGCGCCGCGCCGCGCCGCUUGCCGCCGGGCUAGCACUGACGUGUCUCUCGGCGGAGCUGCUGUGCAGUGGAACGCGCUGGGCCGCGGGCAGCGUCGCCUCACGCGGAGCAGAGCUGAGCUGAAGCGGGACCCGGAGCCCGAGCAGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[106.78825378 304.40008545]
[112.62493896 296.94296265]
[108.84526825 282.42697144]
[105.23330688 279.27075195]
[103.57957458 273.80355835]
[105.19266510 267.35379028]
[101.90808105 252.71781921]
[98.62350464 238.08186340]
[95.33892822 223.44589233]
[90.79608154 217.59445190]
[92.12507629 208.53355408]
[89.08950043 193.84393311]
[85.92931366 179.18060303]
[82.64473724 164.54463196]
[79.36016083 149.90866089]
[76.07558441 135.27268982]
[68.64923859 122.24006653]
[57.73215866 111.95330811]
[46.81508255 101.66654968]
[35.89800644 91.37978363]
[24.89398193 81.18608856]
[13.80380249 71.08619690]
[2.71362281 60.98629761]
[-8.37655735 50.88639832]
[-19.46673584 40.78650284]
[-30.55691528 30.68660545]
[-45.96973801 27.11512184]
[-50.16985703 12.82497597]
[-61.26003647 2.72507906]
[-74.17187500 2.54323006]
[-83.20290375 -6.11645937]
[-83.88044739 -18.20836639]
[-94.79752350 -28.49512672]
[-110.37157440 -28.20093536]
[-121.29650879 -38.78869247]
[-121.48099518 -53.63798523]
[-132.39807129 -63.92474747]
[-143.31515503 -74.21150970]
[-154.23222351 -84.49826813]
[-169.80627441 -84.20407104]
[-180.73121643 -94.79183197]
[-180.91569519 -109.64112091]
[-191.83277893 -119.92788696]
[-202.74984741 -130.21464539]
[-213.75387573 -140.40834045]
[-224.84405518 -150.50823975]
[-240.25688171 -154.07972717]
[-244.45700073 -168.36987305]
[-255.54718018 -178.46977234]
[-266.63735962 -188.56965637]
[-273.03979492 -190.36134338]
[-276.97119141 -194.50492859]
[-277.92520142 -199.20578003]
[-288.66601562 -209.67643738]
[-299.40686035 -220.14709473]
[-310.14767456 -230.61775208]
[-320.88848877 -241.08840942]
[-331.62933350 -251.55906677]
[-342.37014771 -262.02972412]
[-353.11096191 -272.50036621]
[-366.48355103 -270.78051758]
[-378.23013306 -276.99240112]
[-384.15985107 -288.66592407]
[-382.30407715 -301.43026733]
[-392.86557007 -312.08178711]
[-403.42703247 -322.73333740]
[-413.98852539 -333.38485718]
[-429.94436646 -337.17208862]
[-434.38256836 -352.95922852]
[-422.73751831 -364.50585938]
[-406.98858643 -359.93377686]
[-403.33697510 -343.94635010]
[-392.77551270 -333.29479980]
[-382.21401978 -322.64328003]
[-371.65255737 -311.99172974]
[-354.85775757 -312.64541626]
[-342.53640747 -300.72338867]
[-342.64031982 -283.24121094]
[-331.89950562 -272.77053833]
[-321.15866089 -262.29989624]
[-310.41784668 -251.82923889]
[-299.67700195 -241.35858154]
[-288.93618774 -230.88792419]
[-278.19537354 -220.41726685]
[-267.45452881 -209.94659424]
[-256.53747559 -199.65983582]
[-245.44728088 -189.55995178]
[-234.35710144 -179.46005249]
[-219.73751831 -176.61097717]
[-214.74415588 -161.59841919]
[-203.65397644 -151.49851990]
[-196.57540894 -149.31430054]
[-192.46308899 -141.13172913]
[-181.54602051 -130.84495544]
[-170.62893677 -120.55820465]
[-155.79490662 -121.25609589]
[-144.57690430 -110.97937012]
[-143.94546509 -95.41534424]
[-133.02839661 -85.12858582]
[-122.11131287 -74.84181976]
[-111.19423676 -64.55506134]
[-96.36019897 -65.25295258]
[-85.14219666 -54.97623444]
[-84.51075745 -39.41220474]
[-73.59368134 -29.12544441]
[-56.33016968 -26.02758598]
[-51.16014099 -8.36510086]
[-40.06996155 1.73479629]
[-25.45038223 4.58386850]
[-20.45701981 19.59642601]
[-9.36683941 29.69632339]
[1.72333992 39.79621887]
[12.81351948 49.89611816]
[23.90369987 59.99601364]
[34.99387741 70.09590912]
[42.07244492 72.28012085]
[46.18476868 80.46270752]
[57.10184479 90.74947357]
[68.01892090 101.03623199]
[78.93599701 111.32299042]
[71.39384460 77.20381927]
[113.04579926 52.51728058]
[127.52918243 48.61449432]
[138.84092712 37.55307007]
[153.14299011 41.71243286]
[167.62635803 37.80964661]
[182.10974121 33.90686035]
[196.59312439 30.00407600]
[205.80902100 16.87218094]
[221.83015442 16.03371620]
[232.36647034 28.13188362]
[229.33540344 43.88600159]
[215.06214905 51.21086121]
[200.49591064 44.48745728]
[186.01252747 48.39023972]
[171.52914429 52.29302597]
[157.04576111 56.19581223]
[146.76997375 66.97808075]
[131.43196106 63.09787369]
[116.94858551 67.00065613]
[116.88491058 74.50038910]
[116.75754547 89.49984741]
[116.69387054 96.99958038]
[131.10888672 101.14773560]
[145.52391052 105.29589844]
[162.41740417 103.86557770]
[168.46841431 119.70292664]
[154.92509460 129.90167236]
[141.37574768 119.71092224]
[126.96072388 115.56275940]
[112.54570770 111.41459656]
[107.08716583 116.55797577]
[117.37375641 127.47521210]
[106.45636749 137.76164246]
[96.17008972 126.84473419]
[90.71155548 131.98811340]
[93.99613190 146.62408447]
[97.28070831 161.26005554]
[100.56528473 175.89602661]
[105.50849152 183.60514832]
[103.77913666 190.80834961]
[106.81471252 205.49798584]
[109.97489929 220.16131592]
[113.25947571 234.79728699]
[116.54405212 249.43324280]
[119.82862854 264.06921387]
[123.36125946 278.64730835]
[127.14093018 293.16329956]
[143.10087585 307.44128418]
[136.86593628 327.10317993]
[141.37989807 341.40786743]
[146.95907593 348.66998291]
[145.84683228 355.99392700]
[150.11723328 370.37319946]
[162.38644409 381.25430298]
[158.83308411 397.26385498]
[143.11256409 401.93258667]
[131.39678955 390.45770264]
[135.73796082 374.64358521]
[131.46754456 360.26431274]
[127.07521057 345.92181396]
[122.56124878 331.61712646]
[114.08546448 328.84201050]
[107.75031281 322.37030029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[6 166]
[7 165]
[8 164]
[9 163]
[11 162]
[12 161]
[13 159]
[14 158]
[15 157]
[16 156]
[17 120]
[18 119]
[19 118]
[20 117]
[21 115]
[22 114]
[23 113]
[24 112]
[25 111]
[26 110]
[28 108]
[29 107]
[32 105]
[33 104]
[36 101]
[37 100]
[38 99]
[39 98]
[42 95]
[43 94]
[44 93]
[45 91]
[46 90]
[48 88]
[49 87]
[50 86]
[53 85]
[54 84]
[55 83]
[56 82]
[57 81]
[58 80]
[59 79]
[60 78]
[64 75]
[65 74]
[66 73]
[67 72]
[122 140]
[123 139]
[125 137]
[126 136]
[127 135]
[128 134]
[143 151]
[144 150]
[145 149]
[170 182]
[171 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
