%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUCCUGAGGGGUGGUUGCUGCUUUUGCUACAUGACUUGCCAGCGCCCGAGCCUGCGGUCCAACUGCGCUGCUGCCGGAGCGCUCAGUGCCGCCGCUGCCGCCCGCGCCCCCCGCGCCCCGUUCGGCACCCACCGGUCGCCGCCGCCCGCCGCGCCGCUGUCCCGCUCCCGCGCCGCCGCCGCCGUUUCCCCCCGACGACUGGGUG\
) } def
/len { sequence length } bind def

/coor [
[112.87576294 386.02352905]
[108.44532776 379.10781860]
[105.74832916 371.33346558]
[104.94103241 363.12844849]
[106.07547760 354.94631958]
[109.09613037 347.24111938]
[113.84261322 340.44210815]
[120.05816650 334.92996216]
[127.40355682 331.01531982]
[125.15730286 316.18447876]
[122.91105652 301.35360718]
[113.35509491 289.92849731]
[118.93856812 275.12527466]
[116.69232178 260.29443359]
[114.44606781 245.46357727]
[112.19982147 230.63270569]
[109.95356750 215.80184937]
[107.70731354 200.97099304]
[98.15135193 189.54589844]
[103.73483276 174.74267578]
[101.48857880 159.91181946]
[91.93261719 148.48672485]
[97.51609802 133.68350220]
[95.26984406 118.85264587]
[88.54434204 115.53337097]
[81.90558624 128.98428345]
[68.45478058 122.34532166]
[75.09333038 108.89482880]
[68.36782074 105.57555389]
[55.22974396 112.81371307]
[55.00216675 128.17091370]
[47.11270142 141.34863281]
[33.68357849 148.80209351]
[18.32715988 148.52638245]
[5.17424822 140.59565735]
[-2.23709011 127.14322662]
[-1.91324282 111.78775024]
[6.05867720 98.65976715]
[19.53426361 91.29062653]
[34.88864899 91.66260529]
[47.99158478 99.67563629]
[61.12966156 92.43747711]
[58.66074371 77.64205933]
[43.88429642 75.06201172]
[29.10785294 72.48196411]
[14.33140659 69.90191650]
[-0.44503990 67.32186890]
[-15.22148609 64.74182129]
[-30.11316109 62.94238281]
[-45.07885742 61.92852783]
[-60.04455566 60.91467285]
[-71.78332520 71.49658203]
[-87.56188965 70.59513092]
[-98.01909637 58.74514389]
[-96.95087433 42.97699356]
[-84.99098969 32.64565659]
[-69.23501587 33.88052368]
[-59.03070068 45.94897461]
[-44.06500244 46.96282959]
[-29.09930611 47.97668457]
[-39.02188492 36.72757721]
[-39.51904678 21.73582077]
[-30.36354065 9.85403919]
[-15.74028683 6.51331568]
[-2.33347154 13.24067116]
[3.72874212 26.96107864]
[-0.32464138 41.40303421]
[-12.64143848 49.96537781]
[2.13500714 52.54542542]
[16.91145325 55.12547302]
[31.68789864 57.70552063]
[46.46434402 60.28556824]
[61.24079132 62.86561584]
[82.68527985 66.12036896]
[96.91347504 77.79522705]
[101.32360840 93.34146881]
[109.99382019 81.10106659]
[111.65667725 65.36749268]
[125.32706451 59.45396805]
[133.99728394 47.21356964]
[142.66749573 34.97317123]
[151.33770752 22.73277283]
[160.00793457 10.49237442]
[168.67814636 -1.74802470]
[165.41844177 -18.93428802]
[175.39976501 -32.88646317]
[192.04911804 -35.25593567]
[200.53436279 -47.62527466]
[209.01962280 -59.99461365]
[217.50486755 -72.36395264]
[225.99011230 -84.73329163]
[227.41629028 -100.49008179]
[240.99624634 -106.60841370]
[249.48150635 -118.97775269]
[257.96676636 -131.34709167]
[259.39294434 -147.10388184]
[272.97290039 -153.22221375]
[281.45812988 -165.59155273]
[282.45965576 -183.97775269]
[298.57440186 -190.92457581]
[306.87277222 -203.42005920]
[308.06195068 -219.19651794]
[321.54843140 -225.51828003]
[329.84680176 -238.01376343]
[317.36148071 -242.15150452]
[307.35772705 -254.38523865]
[303.95629883 -272.96881104]
[307.74777222 -287.48171997]
[311.53921509 -301.99462891]
[315.33068848 -316.50756836]
[308.49563599 -331.02175903]
[315.71069336 -345.35083008]
[331.44107056 -348.50274658]
[343.61978149 -338.05963135]
[342.90435791 -322.03256226]
[329.84359741 -312.71609497]
[326.05215454 -298.20318604]
[322.26068115 -283.69024658]
[318.46920776 -269.17733765]
[324.71694946 -265.02816772]
[333.01531982 -277.52362061]
[337.04626465 -291.97186279]
[352.03295898 -292.60296631]
[357.26431274 -278.54476929]
[345.51080322 -269.22528076]
[337.21243286 -256.72979736]
[343.46017456 -252.58059692]
[355.36621094 -261.70455933]
[367.27221680 -270.82852173]
[379.10931396 -280.04171753]
[390.87686157 -289.34362793]
[402.64437866 -298.64550781]
[408.19503784 -314.07672119]
[424.37997437 -316.71862793]
[434.54953003 -303.85345459]
[428.24212646 -288.71582031]
[411.94628906 -286.87799072]
[400.17874146 -277.57608032]
[388.41122437 -268.27420044]
[385.11270142 -261.65914917]
[376.39617920 -258.92251587]
[364.49017334 -249.79855347]
[352.58413696 -240.67457581]
[342.34228516 -229.71539307]
[334.04391479 -217.21990967]
[333.44827271 -202.33721924]
[319.36825562 -195.12168884]
[311.06988525 -182.62620544]
[313.15496826 -170.70973206]
[306.34240723 -160.23129272]
[293.82748413 -157.10630798]
[285.34222412 -144.73696899]
[284.52297974 -129.86491394]
[270.33609009 -122.86183929]
[261.85083008 -110.49250031]
[253.36558533 -98.12316132]
[252.54634094 -83.25110626]
[238.35945129 -76.24803925]
[229.87420654 -63.87870026]
[221.38894653 -51.50936127]
[212.90370178 -39.14002228]
[204.41845703 -26.77068520]
[208.52691650 -14.55703545]
[204.79443359 -2.02011204]
[194.36904907 6.19854736]
[180.91854858 6.92219067]
[172.24832153 19.16259003]
[163.57810974 31.40298843]
[154.90789795 43.64338684]
[146.23768616 55.88378525]
[137.56745911 68.12418365]
[136.52476501 82.98224640]
[122.23422241 89.77128601]
[113.56400299 102.01168060]
[110.10070801 116.60639191]
[112.34695435 131.43725586]
[122.06358337 143.92315674]
[116.31944275 157.66557312]
[118.56568909 172.49642944]
[128.28231812 184.98233032]
[122.53817749 198.72474670]
[124.78442383 213.55560303]
[127.03067780 228.38645935]
[129.27693176 243.21731567]
[131.52317810 258.04818726]
[133.76942444 272.87902832]
[143.48605347 285.36492920]
[137.74191284 299.10736084]
[139.98815918 313.93820190]
[142.23442078 328.76907349]
[162.96331787 337.41784668]
[174.21704102 356.70825195]
[171.57427979 378.75573730]
[156.25758362 394.65594482]
[160.26676941 409.11022949]
[164.27593994 423.56451416]
[168.28512573 438.01882935]
[181.48443604 447.13790894]
[182.44067383 463.15243530]
[170.42031860 473.77743530]
[154.64433289 470.86230469]
[147.21472168 456.64328003]
[153.83082581 442.02798462]
[149.82165527 427.57369995]
[145.81246948 413.11941528]
[141.80329895 398.66513062]
[133.66670227 398.19549561]
[125.85002136 395.83309937]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 190]
[10 189]
[11 188]
[13 186]
[14 185]
[15 184]
[16 183]
[17 182]
[18 181]
[20 179]
[21 178]
[23 176]
[24 175]
[29 42]
[30 41]
[43 73]
[44 72]
[45 71]
[46 70]
[47 69]
[48 68]
[49 60]
[50 59]
[51 58]
[76 174]
[77 173]
[79 171]
[80 170]
[81 169]
[82 168]
[83 167]
[84 166]
[87 162]
[88 161]
[89 160]
[90 159]
[91 158]
[93 156]
[94 155]
[95 154]
[97 152]
[98 151]
[100 148]
[101 147]
[103 145]
[104 144]
[107 119]
[108 118]
[109 117]
[110 116]
[127 143]
[128 142]
[129 141]
[130 139]
[131 138]
[132 137]
[194 206]
[195 205]
[196 204]
[197 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
