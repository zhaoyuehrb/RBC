%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUGGGCGAUCAGGCAGCGACCCUAGAGGCGUCUGUAGGGUAAAGCUGGGGGUUCUGUAGCCGGAGGCGGCGGCGAGUCCAGAACGUCCUGGCCUUACAGGGAGAAGGCGUCACUCGCGGUUACAAGUGCCUGACCCUCACUCCAGUUGGCGGAGGAGGAGAAGGAAGGGGCCGGGCCGGGUCCCCUCCCCUCGCGCCCCGG\
) } def
/len { sequence length } bind def

/coor [
[274.04763794 279.57128906]
[288.97012329 278.05630493]
[278.08291626 267.73791504]
[267.19570923 257.41955566]
[256.30850220 247.10118103]
[245.42131042 236.78282166]
[234.53410339 226.46444702]
[223.56816101 216.22979736]
[208.96171570 213.31414795]
[204.03678894 198.27900696]
[192.99275208 188.12867737]
[181.71830750 178.23489380]
[170.21943665 168.60287476]
[158.72056580 158.97084045]
[147.22169495 149.33880615]
[135.72282410 139.70678711]
[124.22395325 130.07475281]
[112.72508240 120.44272614]
[93.71805573 123.24585724]
[78.71014404 111.25055695]
[77.25547028 92.09308624]
[65.32608032 82.99971008]
[53.39668655 73.90632629]
[41.46729279 64.81294250]
[29.46857262 55.81123734]
[13.77077961 53.83896637]
[8.12752533 40.05481339]
[-3.93981647 31.14530754]
[-19.63760948 29.17303658]
[-25.28086472 15.38888168]
[-37.34820557 6.47937727]
[-49.41554642 -2.43012714]
[-61.48289108 -11.33963203]
[-73.55023193 -20.24913597]
[-85.61756897 -29.15863991]
[-97.68491364 -38.06814575]
[-112.71126556 -29.76408195]
[-129.80049133 -28.86408997]
[-145.51400757 -35.50082779]
[-156.71118164 -48.29533005]
[-161.17703247 -64.64321899]
[-158.06031799 -81.24474335]
[-170.39501953 -89.78026581]
[-182.72972107 -98.31578064]
[-195.06442261 -106.85130310]
[-210.81529236 -108.34158325]
[-216.87831116 -121.94632721]
[-229.21301270 -130.48184204]
[-241.54771423 -139.01736450]
[-253.88241577 -147.55288696]
[-266.21713257 -156.08839417]
[-278.55181885 -164.62391663]
[-290.88653564 -173.15943909]
[-303.28628540 -181.60018921]
[-315.75033569 -189.94569397]
[-328.21438599 -198.29118347]
[-340.67843628 -206.63667297]
[-353.14251709 -214.98217773]
[-365.60656738 -223.32766724]
[-385.07601929 -218.38365173]
[-401.65304565 -229.17900085]
[-404.90289307 -248.38308716]
[-417.73733521 -256.14694214]
[-430.57177734 -263.91079712]
[-443.40618896 -271.67462158]
[-458.14755249 -266.45669556]
[-472.77590942 -271.98348999]
[-480.38421631 -285.64538574]
[-477.38003540 -300.99169922]
[-465.18191528 -310.77633667]
[-449.54934692 -310.37930298]
[-437.86361694 -299.98806763]
[-435.64236450 -284.50906372]
[-422.80792236 -276.74520874]
[-409.97348022 -268.98135376]
[-397.13906860 -261.21752930]
[-388.19354248 -266.26889038]
[-377.87759399 -267.15570068]
[-368.04901123 -263.65093994]
[-360.50576782 -256.32452393]
[-356.65722656 -246.45176697]
[-357.26107788 -235.79171753]
[-344.79699707 -227.44622803]
[-332.33294678 -219.10073853]
[-319.86889648 -210.75523376]
[-307.40484619 -202.40974426]
[-294.94079590 -194.06425476]
[-287.63031006 -192.95443726]
[-282.35101318 -185.49414062]
[-270.01629639 -176.95861816]
[-257.68161011 -168.42311096]
[-245.34690857 -159.88758850]
[-233.01219177 -151.35206604]
[-220.67749023 -142.81655884]
[-208.34278870 -134.28103638]
[-193.47418213 -133.40126038]
[-186.52891541 -119.18600464]
[-174.19419861 -110.65048981]
[-161.85949707 -102.11496735]
[-149.52479553 -93.57945251]
[-138.78695679 -100.89888763]
[-126.16949463 -104.14022827]
[-113.16977692 -102.89637756]
[-101.33815765 -97.29387665]
[-92.09310913 -87.98035431]
[-86.55114746 -76.04978180]
[-85.39201355 -62.91396332]
[-88.77540588 -50.13548660]
[-76.70806885 -41.22598267]
[-64.64072418 -32.31647873]
[-52.57338333 -23.40697289]
[-40.50604248 -14.49746895]
[-28.43870163 -5.58796406]
[-16.37136078 3.32154036]
[-1.53670406 4.65654325]
[4.96968794 19.07796669]
[17.03702927 27.98747063]
[31.87168503 29.32247353]
[38.37807846 43.74389648]
[45.62982941 45.18851089]
[50.56067276 52.88355255]
[62.49006653 61.97693253]
[74.41945648 71.07031250]
[86.34885406 80.16369629]
[95.75838470 76.29680634]
[105.92498779 76.66060638]
[115.03405762 81.19016266]
[121.45976257 89.07701874]
[124.05519104 98.91347504]
[122.35710907 108.94385529]
[133.85597229 118.57588196]
[145.35484314 128.20791626]
[156.85371399 137.83993530]
[168.35258484 147.47196960]
[179.85145569 157.10400391]
[191.35034180 166.73602295]
[196.50141907 167.63748169]
[200.39947510 170.17338562]
[202.63139343 173.59147644]
[203.14306641 177.08464050]
[214.18711853 187.23495483]
[229.58351135 190.87661743]
[233.71847534 205.18576050]
[242.15882874 208.69108582]
[244.85247803 215.57723999]
[255.73968506 225.89561462]
[266.62689209 236.21397400]
[277.51409912 246.53234863]
[288.40130615 256.85070801]
[299.28851318 267.16909790]
[310.63842773 276.97619629]
[322.42706299 286.25131226]
[334.21569824 295.52642822]
[346.00436401 304.80157471]
[357.86370850 313.98608398]
[369.79312134 323.07946777]
[381.72250366 332.17285156]
[393.65188599 341.26623535]
[402.37844849 343.98175049]
[405.69299316 350.59149170]
[417.48165894 359.86660767]
[429.27029419 369.14175415]
[441.05892944 378.41687012]
[440.39334106 363.43164062]
[450.41369629 352.26953125]
[465.38363647 351.32052612]
[476.73333740 361.12786865]
[477.96545410 376.07717896]
[468.37460327 387.61041260]
[453.45208740 389.12539673]
[464.33929443 399.44378662]
[475.22650146 409.76214600]
[486.11370850 420.08050537]
[497.00091553 430.39889526]
[507.88812256 440.71725464]
[523.67803955 440.04296875]
[535.26330566 450.79272461]
[535.77062988 466.58886719]
[524.89898682 478.05981445]
[509.09835815 478.40011597]
[497.74295044 467.40780640]
[497.56976318 451.60446167]
[486.68255615 441.28610229]
[475.79534912 430.96771240]
[464.90814209 420.64935303]
[454.02093506 410.33099365]
[443.13372803 400.01260376]
[431.78381348 390.20550537]
[419.99517822 380.93038940]
[408.20651245 371.65527344]
[396.41787720 362.38012695]
[384.55850220 353.19561768]
[372.62911987 344.10223389]
[360.69973755 335.00885010]
[348.77032471 325.91546631]
[341.54156494 324.35989380]
[336.72921753 316.59020996]
[324.94058228 307.31509399]
[313.15194702 298.03994751]
[301.36331177 288.76483154]
[302.02890015 303.75006104]
[292.00854492 314.91217041]
[277.03860474 315.86117554]
[265.68890381 306.05383301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 143]
[10 141]
[11 140]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[21 124]
[22 123]
[23 122]
[24 121]
[25 119]
[27 117]
[28 116]
[30 114]
[31 113]
[32 112]
[33 111]
[34 110]
[35 109]
[36 108]
[42 100]
[43 99]
[44 98]
[45 97]
[47 95]
[48 94]
[49 93]
[50 92]
[51 91]
[52 90]
[53 89]
[54 87]
[55 86]
[56 85]
[57 84]
[58 83]
[59 82]
[62 76]
[63 75]
[64 74]
[65 73]
[151 200]
[152 199]
[153 198]
[154 197]
[155 195]
[156 194]
[157 193]
[158 192]
[160 191]
[161 190]
[162 189]
[163 188]
[170 187]
[171 186]
[172 185]
[173 184]
[174 183]
[175 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
