%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCGGGAGGGGCGGGAACUGGGGAGUUUCGCCAAUCGGUGCAGACUCCGGUUCUCCCCAACCCCGGGCCUGGGCAGCUGGGCACUGGGGCGCCGUUCCCCACCCGGCGCGGACUUCGGAACCGGCCCUGGGACUGACUGGCUCUACCACUCGAGCGCGUCUCCGCUGGACCCGGAACCCCGGUCGGUCCAUUCCCCGCGAAG\
) } def
/len { sequence length } bind def

/coor [
[279.26461792 117.60462189]
[264.28060913 116.91186523]
[249.29663086 116.21911621]
[236.22560120 123.36036682]
[222.79748535 114.99398804]
[207.81349182 114.30123138]
[192.82949829 113.60848236]
[177.84550476 112.91573334]
[162.86151123 112.22297668]
[149.79048157 119.36423492]
[136.36236572 110.99784851]
[121.37837219 110.30509949]
[106.39437866 109.61234283]
[91.76679993 112.93407440]
[78.55162048 120.03047180]
[65.33643341 127.12687683]
[52.12125015 134.22328186]
[38.90606689 141.31968689]
[25.69088554 148.41609192]
[12.47570229 155.51249695]
[8.67124462 160.93069458]
[3.47992730 163.26029968]
[-1.25752175 162.61682129]
[-14.68497086 169.30288696]
[-28.11242104 175.98896790]
[-41.53987122 182.67503357]
[-54.96731949 189.36111450]
[-68.39476776 196.04719543]
[-81.82221985 202.73326111]
[-95.19778442 209.52253723]
[-108.52068329 216.41459656]
[-121.84358215 223.30664062]
[-135.16647339 230.19869995]
[-143.55278015 244.29132080]
[-159.94470215 243.80433655]
[-167.47962952 229.23873901]
[-158.40626526 215.57833862]
[-142.05853271 216.87580872]
[-128.73564148 209.98374939]
[-115.41274261 203.09169006]
[-102.08984375 196.19963074]
[-97.59077454 190.33087158]
[-88.50829315 189.30581665]
[-75.08084106 182.61973572]
[-61.65339279 175.93367004]
[-48.22594452 169.24758911]
[-34.79849625 162.56150818]
[-21.37104607 155.87544250]
[-7.94359732 149.18936157]
[5.37929869 142.29730225]
[18.59448242 135.20089722]
[31.80966377 128.10450745]
[45.02484894 121.00809479]
[58.24003220 113.91169739]
[71.45521545 106.81529236]
[84.67039490 99.71888733]
[85.70656586 92.29080963]
[70.93713379 94.91067505]
[63.88150787 81.67367554]
[74.29035187 70.87293243]
[87.77891541 77.43465424]
[88.81508636 70.00657654]
[78.04640961 59.56456757]
[67.27773285 49.12255478]
[56.50905228 38.68054581]
[45.74037170 28.23853874]
[34.97169113 17.79652977]
[24.12293053 7.43774700]
[13.19472885 -2.83719325]
[2.26652646 -13.11213303]
[-8.66167545 -23.38707352]
[-19.58987808 -33.66201401]
[-30.51807976 -43.93695450]
[-46.59682465 -47.16279221]
[-51.58546448 -62.78474808]
[-40.35211182 -74.73229218]
[-24.45268059 -70.71482086]
[-20.24313927 -54.86515808]
[-9.31493759 -44.59021759]
[1.61326456 -34.31527710]
[12.54146671 -24.04033470]
[23.46966934 -13.76539516]
[34.39786911 -3.49045491]
[41.42830658 -1.19764841]
[45.41370010 7.02785015]
[56.18238068 17.46986008]
[66.95105743 27.91186905]
[77.71974182 38.35387802]
[88.48841858 48.79588699]
[99.25709534 59.23789597]
[110.84533691 77.66282654]
[107.08713531 94.62834930]
[122.07112885 95.32110596]
[137.05511475 96.01385498]
[151.19790649 88.92214966]
[163.55426025 97.23898315]
[178.53825378 97.93173218]
[193.52224731 98.62448883]
[208.50624084 99.31723785]
[223.49023438 100.00999451]
[237.63302612 92.91828918]
[249.98937988 101.23512268]
[264.97335815 101.92787170]
[279.95736694 102.62062073]
[290.33752441 89.26927185]
[306.46963501 84.77837372]
[321.94534302 90.72637177]
[330.73892212 104.58518219]
[345.73178101 105.04711151]
[360.72467041 105.50903320]
[375.71755981 105.97096252]
[390.71044922 106.43288422]
[397.80731201 92.96455383]
[409.99838257 83.94985199]
[424.83380127 81.13372803]
[439.36105347 85.02213287]
[450.71261597 94.79207611]
[456.67187500 108.46513367]
[471.66476440 108.92706299]
[486.65762329 109.38899231]
[495.33718872 106.52410126]
[501.87734985 109.97523499]
[516.86132812 110.66799164]
[531.84533691 111.36074066]
[546.82934570 112.05348969]
[561.81335449 112.74624634]
[576.79730225 113.43899536]
[586.84082031 105.34051514]
[599.31011963 106.22927856]
[607.55621338 115.08437347]
[622.52777100 116.00778198]
[637.49932861 116.93119812]
[643.77154541 105.82917786]
[655.77679443 99.09028625]
[670.55383301 99.56370544]
[683.82147217 108.14922333]
[698.67761230 106.07688141]
[713.53381348 104.00453186]
[723.05499268 91.67633820]
[738.15075684 89.78632355]
[749.84515381 98.93931580]
[764.70129395 96.86696625]
[779.55749512 94.79462433]
[794.41363525 92.72228241]
[801.59338379 78.96617126]
[815.50256348 72.08757782]
[830.79272461 74.73145294]
[841.58453369 85.88117218]
[843.72833252 101.24945068]
[836.39971924 114.92685699]
[822.41680908 121.65415955]
[807.15618896 118.84457397]
[796.48596191 107.57843781]
[781.62982178 109.65077972]
[766.77368164 111.72312927]
[751.91748047 113.79547119]
[743.17437744 125.79936981]
[728.13763428 128.11265564]
[715.60614014 118.86068726]
[700.75000000 120.93303680]
[685.89379883 123.00537872]
[683.25122070 137.77076721]
[696.46636963 144.86717224]
[709.68157959 151.96356201]
[722.89672852 159.05996704]
[737.35156250 153.09397888]
[752.24371338 157.86437988]
[760.54168701 171.11872864]
[758.32733154 186.59873962]
[746.64630127 196.99522400]
[731.01391602 197.39927673]
[718.81140137 187.62010193]
[715.80035400 172.27516174]
[702.58514404 165.17875671]
[689.36999512 158.08235168]
[676.15478516 150.98594666]
[649.55499268 150.97306824]
[636.57592773 131.90274048]
[621.60437012 130.97933960]
[606.63281250 130.05592346]
[591.37127686 138.71443176]
[576.10455322 128.42298889]
[561.12054443 127.73023987]
[546.13659668 127.03748322]
[531.15258789 126.34473419]
[516.16857910 125.65198517]
[501.18460083 124.95922852]
[486.19570923 124.38187408]
[471.20281982 123.91995239]
[456.20993042 123.45802307]
[449.42025757 136.73829651]
[437.48880005 145.79089355]
[422.74969482 148.77760315]
[408.11578369 145.05355835]
[396.50277710 135.30545044]
[390.24853516 121.42577362]
[375.25564575 120.96384430]
[360.26275635 120.50192261]
[345.26986694 120.03999329]
[330.27697754 119.57807159]
[323.11312866 130.84767151]
[311.22015381 137.15516663]
[297.65560913 136.75784302]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 104]
[2 103]
[3 102]
[5 100]
[6 99]
[7 98]
[8 97]
[9 96]
[11 94]
[12 93]
[13 92]
[14 56]
[15 55]
[16 54]
[17 53]
[18 52]
[19 51]
[20 50]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[28 44]
[29 43]
[30 41]
[31 40]
[32 39]
[33 38]
[62 90]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[68 83]
[69 82]
[70 81]
[71 80]
[72 79]
[73 78]
[108 200]
[109 199]
[110 198]
[111 197]
[112 196]
[118 190]
[119 189]
[120 188]
[122 187]
[123 186]
[124 185]
[125 184]
[126 183]
[127 182]
[130 180]
[131 179]
[132 178]
[136 161]
[137 160]
[138 159]
[141 156]
[142 155]
[143 154]
[144 153]
[162 176]
[163 175]
[164 174]
[165 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
