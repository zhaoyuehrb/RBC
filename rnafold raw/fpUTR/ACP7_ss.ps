%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGCGGCAAGAGGCCUCGGCACCCGCGAACUCAUAAAUACCGGGGCGGCGCUGGUGGCGGGAGAGGCGCGUGCGGGCAGCCGGCGCCCCCGAGGCACCUGGAUAACCACCCAUCUUGAAGGAGACCUCCCUGCCCUGCCUCUGUUGUCCCCCAGAGCACUGCCUGAUCAUCCUCUGUUCCCCAUCCUCCCAGCCCUUCCUGCUGUACCUGUGGGGAGCUGAUCUCCUCAGUCCCCCUGCUUUUCCCCGGUCUG\
CCAUCACCACCCCACCACC\
) } def
/len { sequence length } bind def

/coor [
[32.13384247 388.17871094]
[40.55753326 375.65097046]
[52.04954147 365.86138916]
[65.75708008 359.53634644]
[63.36825943 344.72778320]
[60.97943878 329.91921997]
[58.59062195 315.11065674]
[56.20180130 300.30209351]
[48.82674026 298.93884277]
[39.09047318 310.34957886]
[34.07661438 296.21234131]
[26.70155334 294.84906006]
[19.17683411 307.82516479]
[11.65211391 320.80123901]
[15.49177551 335.89739990]
[7.67579031 348.94979858]
[-6.73977613 352.51730347]
[-6.96928453 368.33685303]
[-20.04721642 375.46545410]
[-27.57193565 388.44152832]
[-35.09665680 401.41760254]
[-37.81180573 418.15274048]
[-54.64454269 420.17642212]
[-61.24892044 404.56173706]
[-48.07273483 393.89288330]
[-40.54801178 380.91680908]
[-33.02329254 367.94073486]
[-33.33200455 353.04931641]
[-19.71585274 344.99258423]
[-23.77973175 330.70901489]
[-16.33344460 317.44223022]
[-1.32396328 313.27651978]
[6.20075655 300.30044556]
[13.72547626 287.32434082]
[7.80625010 273.54165649]
[10.72398567 258.82815552]
[21.45477295 248.34722900]
[36.23290634 245.77685547]
[49.87236023 252.01907349]
[57.58670044 264.88333130]
[56.66907120 279.85440063]
[59.73184967 265.17044067]
[62.79463196 250.48645020]
[65.85741425 235.80245972]
[68.92019653 221.11848450]
[71.98297882 206.43449402]
[75.04575348 191.75051880]
[67.70240784 173.83961487]
[81.45458984 159.06706238]
[84.18110657 144.31694031]
[86.90761566 129.56681824]
[89.63413239 114.81668854]
[85.40814209 100.42429352]
[75.13993073 89.48976135]
[64.87172699 78.55523682]
[54.60351944 67.62070465]
[39.51640320 62.85735703]
[36.44423676 48.28303146]
[26.17602921 37.34849930]
[15.84553242 26.47280121]
[5.45308256 15.65628624]
[-4.93936729 4.83977175]
[-20.07991409 0.24908754]
[-23.31837654 -14.28919411]
[-33.71082687 -25.10570908]
[-44.10327530 -35.92222214]
[-54.49572372 -46.73873901]
[-64.88817596 -57.55525208]
[-75.28062439 -68.37176514]
[-85.67307281 -79.18828583]
[-88.36335754 -64.43151093]
[-101.52202606 -57.23085403]
[-115.40102386 -62.92061615]
[-119.71868134 -77.28578186]
[-111.27643585 -89.68450928]
[-96.32805634 -90.93160248]
[-106.08605957 -102.32376862]
[-115.84405518 -113.71593475]
[-125.60205841 -125.10810852]
[-135.36006165 -136.50027466]
[-145.11805725 -147.89244080]
[-162.59861755 -148.93214417]
[-173.68579102 -162.04666138]
[-171.87522888 -178.78384399]
[-181.76272583 -190.06379700]
[-191.71449280 -201.28707886]
[-206.68885803 -206.39385986]
[-209.42726135 -221.03457642]
[-219.44297791 -232.20083618]
[-234.98681641 -233.21408081]
[-244.98510742 -244.68093872]
[-243.92335510 -259.49337769]
[-253.93907166 -270.65963745]
[-263.95477295 -281.82589722]
[-273.97048950 -292.99215698]
[-283.98620605 -304.15841675]
[-298.97415161 -301.10739136]
[-313.38177490 -305.93615723]
[-323.37158203 -317.25299072]
[-326.33569336 -331.95230103]
[-321.57626343 -346.06658936]
[-331.59197998 -357.23284912]
[-341.60769653 -368.39913940]
[-357.35424805 -372.97937012]
[-360.99758911 -388.96868896]
[-348.78976440 -399.91864014]
[-333.28915405 -394.56484985]
[-330.44143677 -378.41485596]
[-320.42572021 -367.24856567]
[-310.41000366 -356.08230591]
[-295.86322021 -359.28494263]
[-281.57147217 -354.74609375]
[-271.40325928 -343.58932495]
[-268.16345215 -328.74343872]
[-272.81994629 -314.17413330]
[-262.80422974 -303.00787354]
[-252.78851318 -291.84161377]
[-242.77279663 -280.67535400]
[-232.75708008 -269.50909424]
[-217.91679382 -268.96020508]
[-207.60035706 -257.77868652]
[-208.27671814 -242.21655273]
[-198.26100159 -231.05029297]
[-184.00303650 -226.74218750]
[-180.54823303 -211.30279541]
[-173.76850891 -208.43280029]
[-170.48277283 -199.95129395]
[-160.59527588 -188.67134094]
[-147.76826477 -189.63633728]
[-136.55401611 -182.94740295]
[-131.14939880 -170.84762573]
[-133.72589111 -157.65043640]
[-123.96788788 -146.25827026]
[-114.20989227 -134.86610413]
[-104.45188904 -123.47393799]
[-94.69389343 -112.08177185]
[-84.93589020 -100.68960571]
[-74.85655975 -89.58073425]
[-64.46411133 -78.76422119]
[-54.07165909 -67.94770050]
[-43.67921066 -57.13118744]
[-33.28675842 -46.31467438]
[-22.89431000 -35.49815750]
[-12.50186062 -24.68164444]
[1.89534938 -20.86462975]
[5.87714767 -5.55267763]
[16.26959801 5.26383686]
[26.66204643 16.08035088]
[33.53613663 18.71635056]
[37.11055756 27.08029366]
[47.37876511 38.01482391]
[61.73143005 41.99605942]
[65.53804779 57.35249710]
[75.80625916 68.28702545]
[86.07446289 79.22155762]
[96.34266663 90.15608978]
[99.43712616 86.80503845]
[104.25146484 84.66590118]
[110.25851440 84.46299744]
[116.65898132 86.68907928]
[131.28833008 83.37513733]
[145.91767883 80.06119537]
[160.54702759 76.74725342]
[167.02218628 61.10186386]
[181.41117859 52.49644089]
[197.92706299 54.16050339]
[210.06430054 65.23898315]
[224.65483093 61.75812912]
[239.24536133 58.27728271]
[253.83590698 54.79643250]
[268.42642212 51.31558609]
[256.10317993 42.76353073]
[253.33216858 28.02170181]
[261.70898438 15.57866383]
[276.41009521 12.59929562]
[288.97045898 20.79916382]
[292.15756226 35.45666122]
[284.13516235 48.13258362]
[298.92984009 45.65921783]
[313.72451782 43.18585205]
[328.51919556 40.71248627]
[343.31387329 38.23911667]
[358.10855103 35.76575089]
[372.90322876 33.29238510]
[387.69790649 30.81901741]
[402.49258423 28.34565163]
[406.82406616 13.75115299]
[417.02111816 2.53030872]
[431.02151489 -3.12731743]
[446.02835083 -2.14922857]
[459.06851196 5.21712828]
[467.58197021 17.46404076]
[482.37661743 14.99067307]
[497.17129517 12.51730633]
[511.96597290 10.04393959]
[519.74841309 -3.51955080]
[534.44622803 -8.85879803]
[549.11962891 -3.45277309]
[556.84027100 10.14596558]
[553.96270752 25.51650810]
[541.84564209 35.40135574]
[526.21032715 35.13318253]
[514.43933105 24.83861732]
[499.64468384 27.31198311]
[484.85000610 29.78535080]
[470.05532837 32.25871658]
[465.98837280 46.60881424]
[456.05331421 57.81615448]
[442.18069458 63.62229538]
[427.10134888 62.82620621]
[413.80902100 55.53230286]
[404.96594238 43.14032745]
[390.17126465 45.61369324]
[375.37658691 48.08706284]
[360.58190918 50.56042862]
[345.78723145 53.03379440]
[330.99255371 55.50716019]
[316.19787598 57.98052979]
[301.40319824 60.45389557]
[286.60852051 62.92726135]
[271.90728760 65.90612030]
[257.31674194 69.38697052]
[242.72621155 72.86781311]
[228.13568115 76.34866333]
[213.54515076 79.82951355]
[209.59472656 92.56048584]
[199.79740906 101.75778198]
[186.63233948 104.94776154]
[173.50378418 101.19577789]
[163.86096191 91.37659454]
[149.23161316 94.69054413]
[134.60227966 98.00448608]
[119.97292328 101.31842804]
[134.46936035 105.17245483]
[141.40138245 118.47459412]
[136.25585938 132.56443787]
[122.38282776 138.26872253]
[108.81437683 131.87365723]
[104.38425446 117.54319763]
[101.65773773 132.29331970]
[98.93122864 147.04344177]
[96.20471191 161.79356384]
[102.85111237 170.34335327]
[103.69884491 180.91963196]
[98.70928955 190.03440857]
[89.72974396 194.81329346]
[86.66696167 209.49728394]
[83.60417938 224.18125916]
[80.54139709 238.86524963]
[77.47861481 253.54922485]
[74.41583252 268.23321533]
[71.35305023 282.91720581]
[71.01036072 297.91326904]
[73.39918518 312.72183228]
[75.78800201 327.53039551]
[78.17682648 342.33895874]
[80.56564331 357.14752197]
[95.56674957 358.84146118]
[109.55412292 364.52090454]
[121.48979950 373.76440430]
[130.48808289 385.88601685]
[135.88124084 399.98623657]
[137.26905823 415.01873779]
[134.54855347 429.86804199]
[127.92160797 443.43218994]
[117.87998199 454.70465088]
[105.16883087 462.84893799]
[90.73141479 467.26065063]
[75.63906860 467.61248779]
[61.01175690 463.87826538]
[47.93492508 456.33511353]
[37.37895203 445.54281616]
[30.12716866 432.30218506]
[26.71770287 417.59576416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 257]
[5 256]
[6 255]
[7 254]
[8 253]
[12 34]
[13 33]
[14 32]
[17 29]
[19 27]
[20 26]
[21 25]
[41 252]
[42 251]
[43 250]
[44 249]
[45 248]
[46 247]
[47 246]
[49 242]
[50 241]
[51 240]
[52 239]
[53 156]
[54 155]
[55 154]
[56 153]
[58 151]
[59 150]
[60 148]
[61 147]
[62 146]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 138]
[76 137]
[77 136]
[78 135]
[79 134]
[80 133]
[81 132]
[84 128]
[85 127]
[86 125]
[88 123]
[89 122]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
[101 110]
[102 109]
[103 108]
[160 233]
[161 232]
[162 231]
[163 230]
[167 225]
[168 224]
[169 223]
[170 222]
[171 221]
[178 220]
[179 219]
[180 218]
[181 217]
[182 216]
[183 215]
[184 214]
[185 213]
[186 212]
[192 206]
[193 205]
[194 204]
[195 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
