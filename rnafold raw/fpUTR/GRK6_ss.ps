%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCUGGCUGCGGCGGCCGGGGAGGCCGGGGAGGCCGCGGCGCGGUCACUGCGAGCCGAGCCGAGCCGCGCCGAGCCGCGCCGAUCGCCAUCCGGCCUCGGCACUCGCGCGCGAUCCCGGCCGGCGGCGCGGCCCGGCGGGCCAGGCGGCGCCACAGCCC\
) } def
/len { sequence length } bind def

/coor [
[86.45365906 187.57460022]
[92.50000000 171.73547363]
[92.50000000 156.73547363]
[92.50000000 141.73547363]
[92.50000000 126.73547363]
[92.50000000 111.73547363]
[77.81373596 108.68363190]
[71.83772278 122.44180298]
[74.23690796 138.66450500]
[61.22086716 148.64019775]
[46.17938614 142.10676575]
[44.58584976 125.78522491]
[58.07955170 116.46578217]
[64.05557251 102.70761871]
[63.61658859 87.71404266]
[56.84587860 74.32906342]
[50.07517242 60.94409561]
[43.30446243 47.55912018]
[36.53375244 34.17414856]
[29.76304245 20.78917694]
[22.99233246 7.40420341]
[14.22298050 -4.76536703]
[3.66824603 -15.42358398]
[-6.88648796 -26.08180046]
[-17.44122124 -36.74001694]
[-27.99595642 -47.39823532]
[-38.55068970 -58.05645370]
[-49.10542297 -68.71466827]
[-59.66016006 -79.37288666]
[-70.21488953 -90.03110504]
[-83.11795807 -90.88328552]
[-91.69161224 -100.02030945]
[-91.71910095 -112.14846802]
[-102.06386566 -123.01059723]
[-112.40863037 -133.87272644]
[-129.87762451 -133.96473694]
[-141.66186523 -146.40022278]
[-140.84735107 -163.17547607]
[-151.40208435 -173.83369446]
[-161.95681763 -184.49191284]
[-172.51155090 -195.15013123]
[-183.06628418 -205.80834961]
[-193.62101746 -216.46656799]
[-204.17575073 -227.12478638]
[-214.73049927 -237.78300476]
[-225.28523254 -248.44122314]
[-241.94212341 -245.64331055]
[-256.84521484 -253.23291016]
[-264.23062134 -268.05316162]
[-261.37423706 -284.19497681]
[-272.13491821 -294.64523315]
[-282.89559937 -305.09548950]
[-293.65628052 -315.54571533]
[-302.03781128 -319.30545044]
[-304.52249146 -326.30642700]
[-315.07720947 -336.96463013]
[-325.73541260 -347.51937866]
[-336.49612427 -357.96960449]
[-352.07116699 -364.66696167]
[-349.94714355 -381.48733521]
[-333.19613647 -384.10266113]
[-326.04586792 -368.73028564]
[-315.28518677 -358.28005981]
[-308.26031494 -355.86383057]
[-304.41900635 -347.51937866]
[-293.86425781 -336.86114502]
[-283.20605469 -326.30642700]
[-272.44534302 -315.85617065]
[-261.68466187 -305.40591431]
[-250.92398071 -294.95568848]
[-238.00959778 -298.44943237]
[-224.95381165 -295.06613159]
[-215.20610046 -285.58886719]
[-211.39660645 -272.42514038]
[-214.62701416 -258.99594116]
[-204.07228088 -248.33773804]
[-193.51754761 -237.67951965]
[-182.96281433 -227.02130127]
[-172.40806580 -216.36308289]
[-161.85333252 -205.70486450]
[-151.29859924 -195.04664612]
[-140.74386597 -184.38842773]
[-130.18913269 -173.73020935]
[-117.39202118 -175.46781921]
[-105.76450348 -169.41319275]
[-99.67176819 -157.58593750]
[-101.54650116 -144.21749878]
[-91.20173645 -133.35536194]
[-80.85697174 -122.49323273]
[-63.79476929 -118.48163605]
[-59.55667496 -100.58583832]
[-49.00194168 -89.92761993]
[-38.44720840 -79.26940155]
[-27.89247322 -68.61118317]
[-17.33773994 -57.95296860]
[-6.78300524 -47.29475021]
[3.77172899 -36.63653564]
[14.32646275 -25.97831726]
[24.88119698 -15.32010078]
[28.94885254 -24.88093376]
[34.52930450 -33.77178574]
[47.26894760 -41.69021606]
[54.90507889 -55.54662323]
[69.79895782 -55.69392776]
[77.05104828 -70.40240479]
[93.43049622 -71.20600128]
[102.08752441 -57.27804565]
[94.11653137 -42.94643021]
[77.71738434 -42.95428467]
[70.99247742 -29.66425514]
[55.18737411 -28.95057297]
[42.44773483 -21.03214455]
[57.22130203 -18.43567276]
[61.41726303 -4.03449583]
[50.35036850 6.09091234]
[36.37730408 0.63349420]
[43.14801407 14.01846695]
[49.91872406 27.40344048]
[56.68943405 40.78841400]
[63.46014404 54.17338562]
[70.23085022 67.55835724]
[77.00156403 80.94332886]
[143.88140869 86.99148560]
[155.60888672 96.34383392]
[167.33636475 105.69618225]
[179.06382751 115.04853058]
[194.67736816 117.60353088]
[199.80381775 131.58811951]
[211.53129578 140.94046021]
[223.25875854 150.29281616]
[235.16648865 159.41455078]
[247.24992371 168.30221558]
[259.33334351 177.18988037]
[271.41677856 186.07756042]
[283.50021362 194.96522522]
[299.84216309 199.47937012]
[300.02832031 216.43229675]
[283.78942871 221.30421448]
[274.61254883 207.04866028]
[262.52911377 198.16099548]
[250.44569397 189.27331543]
[238.36225891 180.38565063]
[226.27882385 171.49798584]
[221.45983887 171.33016968]
[216.70722961 168.09936523]
[213.90641785 162.02027893]
[202.17893982 152.66793823]
[190.45147705 143.31559753]
[175.67675781 141.42953491]
[169.71148682 126.77600098]
[157.98400879 117.42365265]
[146.25653076 108.07130432]
[134.52906799 98.71895599]
[121.01393890 105.22750854]
[107.50000000 111.73547363]
[107.50000000 126.73547363]
[107.50000000 141.73547363]
[107.50000000 156.73547363]
[107.50000000 171.73547363]
[113.54634094 187.57460022]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 159]
[3 158]
[4 157]
[5 156]
[6 155]
[7 14]
[8 13]
[15 122]
[16 121]
[17 120]
[18 119]
[19 118]
[20 117]
[21 116]
[22 99]
[23 98]
[24 97]
[25 96]
[26 95]
[27 94]
[28 93]
[29 92]
[30 91]
[33 89]
[34 88]
[35 87]
[38 83]
[39 82]
[40 81]
[41 80]
[42 79]
[43 78]
[44 77]
[45 76]
[46 75]
[50 70]
[51 69]
[52 68]
[53 67]
[55 66]
[56 65]
[57 63]
[58 62]
[101 112]
[102 111]
[104 109]
[123 153]
[124 152]
[125 151]
[126 150]
[128 148]
[129 147]
[130 146]
[131 143]
[132 142]
[133 141]
[134 140]
[135 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
