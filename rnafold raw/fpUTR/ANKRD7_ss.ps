%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAACGGCCGUAACUGCCAUAACGGCCGGCUGCGCGAGGCCCUUCCAGCAUUUCCACUUUCGUCAGGUACUGGAGAGGGCUGCCGGCCGGAUGCCAGGGCAGAGGGGCAGGGCGGACGGCUAGGAGUUCAAGAAACAUCCUGGUCUGAGGGAAAGGCUGCAGCCUGCACCGCC\
) } def
/len { sequence length } bind def

/coor [
[3.02868509 81.15015411]
[-5.89219713 81.41894531]
[-14.36945534 78.77040100]
[-21.48052025 73.52259827]
[-26.46128654 66.27479553]
[-28.78817177 57.83916092]
[-28.23305893 49.14976120]
[-41.35672760 41.88551331]
[-54.48040009 34.62126541]
[-70.30136871 34.70752716]
[-77.68955994 21.77447128]
[-90.30186462 24.58092499]
[-101.09255981 18.23281670]
[-104.53719330 6.61447906]
[-117.52757263 -0.88552088]
[-130.51795959 -8.38552094]
[-143.50833130 -15.88552094]
[-156.49871826 -23.38552094]
[-168.13166809 -13.69533730]
[-182.35136414 -8.57943916]
[-197.43502808 -8.63711929]
[-211.56224060 -13.84211636]
[-223.03460693 -23.54810905]
[-230.47994995 -36.56891251]
[-233.01643372 -51.32341385]
[-230.35691833 -66.02757263]
[-243.34730530 -73.52757263]
[-256.33767700 -81.02757263]
[-269.32806396 -88.52757263]
[-282.31845093 -96.02757263]
[-295.30883789 -103.52757263]
[-308.29919434 -111.02757263]
[-317.33007812 -112.61797333]
[-321.45465088 -118.78206635]
[-334.30752563 -126.51537323]
[-340.95578003 -127.02034760]
[-345.62991333 -130.32894897]
[-347.47763062 -134.76702881]
[-360.04293823 -142.95932007]
[-372.60821533 -151.15161133]
[-385.17349243 -159.34388733]
[-397.73880005 -167.53617859]
[-410.30407715 -175.72846985]
[-422.94281006 -183.80697632]
[-435.65396118 -191.77107239]
[-448.36511230 -199.73516846]
[-461.07623291 -207.69926453]
[-473.78738403 -215.66336060]
[-489.58981323 -216.43376160]
[-496.26699829 -229.74783325]
[-508.97814941 -237.71192932]
[-521.68927002 -245.67602539]
[-534.40045166 -253.64012146]
[-547.14617920 -251.52059937]
[-557.57739258 -258.44360352]
[-560.38793945 -270.23138428]
[-572.95324707 -278.42367554]
[-589.34869385 -278.77072144]
[-597.00769043 -293.27148438]
[-588.05120850 -307.00881958]
[-571.69299316 -305.85092163]
[-564.76092529 -290.98895264]
[-552.19567871 -282.79666138]
[-534.66137695 -282.80850220]
[-526.43634033 -266.35125732]
[-513.72521973 -258.38717651]
[-501.01403809 -250.42308044]
[-488.30291748 -242.45898438]
[-473.40963745 -242.25822449]
[-465.82330322 -228.37451172]
[-453.11215210 -220.41041565]
[-440.40100098 -212.44631958]
[-427.68984985 -204.48222351]
[-414.97872925 -196.51812744]
[-407.61553955 -195.62825012]
[-402.11178589 -188.29374695]
[-389.54650879 -180.10147095]
[-376.98123169 -171.90917969]
[-364.41592407 -163.71688843]
[-351.85064697 -155.52461243]
[-339.28533936 -147.33232117]
[-326.57421875 -139.36822510]
[-313.72134399 -131.63491821]
[-300.79919434 -124.01795959]
[-287.80883789 -116.51795959]
[-274.81845093 -109.01795959]
[-261.82806396 -101.51795959]
[-248.83767700 -94.01795959]
[-235.84730530 -86.51795959]
[-222.85691833 -79.01795959]
[-211.45249939 -88.67324066]
[-197.40647888 -93.85383606]
[-182.40747070 -93.91637421]
[-168.26564026 -88.83401489]
[-156.69438171 -79.20198822]
[-149.10260010 -66.16799164]
[-146.42324829 -51.29542923]
[-148.99871826 -36.37590027]
[-136.00833130 -28.87590218]
[-123.01795197 -21.37590218]
[-110.02757263 -13.87590218]
[-97.03719330 -6.37590218]
[-79.52928925 -7.33701515]
[-70.42531586 8.65080261]
[-55.54303360 8.04495430]
[-47.21615219 21.49759674]
[-34.09247971 28.76184464]
[-20.96881104 36.02609253]
[-1.23649383 28.22598076]
[18.11163330 37.60141754]
[24.38003922 58.46184921]
[38.10516357 64.51337433]
[51.83028793 70.56490326]
[65.55541229 76.61643219]
[79.28053284 82.66796112]
[95.45362091 69.32807922]
[119.17789459 70.72045135]
[137.64544678 89.82862854]
[152.63566589 90.37016296]
[167.62590027 90.91169739]
[182.61611938 91.45323944]
[197.60633850 91.99477386]
[212.59655762 92.53630829]
[227.58677673 93.07784271]
[242.57699585 93.61938477]
[257.57150269 94.02557373]
[272.56906128 94.29638672]
[287.56661987 94.56719971]
[300.06546021 84.50944519]
[315.68975830 88.15100098]
[322.45388794 102.69837952]
[315.16897583 116.99207306]
[299.42340088 120.06718445]
[287.29580688 109.56475067]
[272.29824829 109.29393768]
[257.30068970 109.02312469]
[250.53271484 112.05673981]
[242.03546143 108.60960388]
[227.04524231 108.06806946]
[212.05502319 107.52652740]
[197.06480408 106.98499298]
[182.07458496 106.44345856]
[167.08435059 105.90192413]
[152.09413147 105.36038971]
[137.10391235 104.81884766]
[133.23725891 111.24527740]
[146.13279724 118.90721893]
[159.02832031 126.56915283]
[171.79479980 134.44424438]
[164.06198120 147.29739380]
[151.12353516 139.70701599]
[138.31373596 131.90257263]
[125.50395203 124.09813690]
[121.63729858 130.52456665]
[129.13729858 143.51495361]
[136.63729858 156.50532532]
[144.13729858 169.49571228]
[158.60218811 177.22222900]
[158.87277222 193.61914062]
[144.67068481 201.81871033]
[130.60583496 193.38592529]
[131.14691162 176.99571228]
[123.64691925 164.00532532]
[116.14691925 151.01495361]
[108.64691925 138.02456665]
[90.79806519 134.80380249]
[77.73206329 124.36002350]
[71.79190063 110.23782349]
[73.22900391 96.39308167]
[59.50388336 90.34155273]
[45.77875900 84.29002380]
[32.05363464 78.23850250]
[18.32851219 72.18697357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 108]
[8 107]
[9 106]
[11 104]
[14 102]
[15 101]
[16 100]
[17 99]
[18 98]
[26 90]
[27 89]
[28 88]
[29 87]
[30 86]
[31 85]
[32 84]
[34 83]
[35 82]
[38 81]
[39 80]
[40 79]
[41 78]
[42 77]
[43 76]
[44 74]
[45 73]
[46 72]
[47 71]
[48 70]
[50 68]
[51 67]
[52 66]
[53 65]
[56 63]
[57 62]
[111 173]
[112 172]
[113 171]
[114 170]
[115 169]
[118 145]
[119 144]
[120 143]
[121 142]
[122 141]
[123 140]
[124 139]
[125 138]
[126 136]
[127 135]
[128 134]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
