%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGCGCAGCCGCCCGAACACGCCCAGACCGAGCGCUUGAGGUGCCGCAGCCGCCGCCGCCGCCGCCGCCGCGAUGUGACCUUCAGGGCCGCCAGGACGGGAUGACCGGAGCCUCCGCCCCGCGGCGCCCGCGGCUCGCCUCGGCCUCCCGGGCGCUCUGACCGCGCGUCCCCGGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[18.01107979 926.76757812]
[2.99301124 931.12554932]
[-11.29177189 924.76324463]
[-18.09843254 910.68475342]
[-14.21307182 895.53753662]
[-1.47024071 886.47363281]
[-0.44660458 871.50860596]
[0.57703161 856.54357910]
[-7.14015770 847.20904541]
[-6.39467669 834.71862793]
[2.95837855 825.81439209]
[4.23736429 810.86901855]
[5.51634979 795.92364502]
[6.79533529 780.97827148]
[-0.48181114 773.76348877]
[-2.61874199 763.51666260]
[1.33020401 753.58587646]
[10.28089046 747.35296631]
[4.11629343 733.79394531]
[13.44383144 721.01477051]
[15.23232269 706.12176514]
[9.06772614 692.56274414]
[18.39526367 679.78356934]
[20.18375587 664.89056396]
[21.97224808 649.99755859]
[14.94566250 642.53857422]
[13.15981579 632.22479248]
[17.44550896 622.43457031]
[26.60377502 616.51092529]
[20.90569115 602.74932861]
[30.66408730 590.29602051]
[24.96600342 576.53448486]
[34.72439957 564.08117676]
[37.02031326 549.25793457]
[39.31622314 534.43469238]
[41.61213684 519.61145020]
[43.90805054 504.78817749]
[46.20396042 489.96493530]
[48.49987411 475.14166260]
[50.79578781 460.31842041]
[53.09169769 445.49517822]
[51.00344467 438.38690186]
[55.55543137 430.43933105]
[58.10408401 415.65744019]
[51.15457916 399.55416870]
[63.02466965 385.49087524]
[65.32057953 370.66760254]
[67.61649323 355.84436035]
[69.53205872 340.96719360]
[71.06602478 326.04583740]
[72.47254944 311.11190796]
[73.75153351 296.16653442]
[75.03051758 281.22116089]
[76.30950165 266.27578735]
[77.58849335 251.33041382]
[78.86747742 236.38504028]
[72.24355316 223.04438782]
[81.12935638 209.95420837]
[74.50543213 196.61355591]
[83.39123535 183.52336121]
[84.67022705 168.57798767]
[85.94921112 153.63261414]
[87.22819519 138.68724060]
[88.50717926 123.74187469]
[89.78616333 108.79650116]
[85.00501251 94.57888031]
[74.95537567 83.44314575]
[64.90573120 72.30740356]
[49.14533615 67.77508545]
[45.45336914 51.79693222]
[57.62781143 40.80989456]
[73.14463806 46.11649704]
[76.04147339 62.25776291]
[86.09111023 73.39350128]
[96.14075470 84.52924347]
[103.56191254 83.44460297]
[100.08127594 68.85401154]
[96.60064697 54.26342773]
[93.12001801 39.67284012]
[86.35189056 26.28656006]
[93.26239014 12.97322178]
[108.10474396 10.80419922]
[118.53604126 21.58325195]
[115.88197327 36.34605789]
[116.72272491 51.32247543]
[117.56346893 66.29889679]
[118.40422058 81.27531433]
[125.82537842 80.19067383]
[132.26762390 66.64455414]
[138.70988464 53.09843063]
[145.15213013 39.55231094]
[144.09172058 23.76667976]
[156.54522705 15.59604454]
[156.39950562 8.94759369]
[159.22340393 3.98118639]
[163.44566345 1.70316327]
[170.34663391 -11.61511517]
[177.24760437 -24.93339348]
[175.39968872 -44.99127197]
[192.08337402 -54.73844147]
[198.52563477 -68.28456116]
[204.96788025 -81.83068085]
[200.97186279 -97.36810303]
[210.74270630 -110.09249878]
[226.78504944 -110.24279785]
[236.79258728 -97.70371246]
[233.08839417 -82.09414673]
[218.51400757 -75.38842773]
[212.07174683 -61.84230804]
[205.62950134 -48.29618835]
[209.91207886 -38.98656464]
[208.31730652 -28.64148140]
[201.13459778 -20.72795868]
[190.56588745 -18.03241730]
[183.66491699 -4.71413946]
[176.76393127 8.60413837]
[170.09135437 22.03829575]
[171.61256409 36.85501480]
[158.69825745 45.99456024]
[152.25599670 59.54068375]
[145.81375122 73.08679962]
[139.37149048 86.63292694]
[124.25160980 110.31715393]
[104.73154449 110.07548523]
[103.45255280 125.02085876]
[102.17356873 139.96623230]
[100.89458466 154.91160583]
[99.61560059 169.85697937]
[98.33660889 184.80235291]
[104.86905670 199.21199036]
[96.07472992 211.23318481]
[102.60717010 225.64283752]
[93.81285095 237.66403198]
[92.53386688 252.60940552]
[91.25487518 267.55477905]
[89.97589111 282.50015259]
[88.69690704 297.44552612]
[87.41792297 312.39089966]
[89.80816650 321.23236084]
[85.98738098 327.57977295]
[84.45342255 342.50112915]
[86.61077881 347.30667114]
[86.68534851 351.98773193]
[85.07752991 355.76672363]
[82.43974304 358.14028931]
[80.14383698 372.96353149]
[77.84792328 387.78677368]
[84.82682800 398.65234375]
[82.59383392 410.96411133]
[72.88597870 418.20608521]
[70.33732605 432.98797607]
[67.91494751 447.79107666]
[65.61904144 462.61434937]
[63.32312393 477.43759155]
[61.02721405 492.26083374]
[58.73130035 507.08410645]
[56.43538666 521.90734863]
[54.13947678 536.73059082]
[51.84356308 551.55383301]
[49.54764938 566.37707520]
[55.08151627 581.19891357]
[45.48733902 592.59197998]
[51.02120209 607.41381836]
[41.42702484 618.80682373]
[49.57187653 637.22949219]
[36.86524200 651.78607178]
[35.07675171 666.67907715]
[33.28825760 681.57208252]
[39.32493210 696.19635010]
[30.12531853 707.91027832]
[28.33682632 722.80328369]
[34.37349701 737.42755127]
[25.17388535 749.14147949]
[33.94295883 767.27532959]
[21.74070930 782.25726318]
[20.46172333 797.20263672]
[19.18273735 812.14801025]
[17.90375137 827.09338379]
[26.10665321 843.56719971]
[15.54206276 857.56719971]
[14.51842690 872.53222656]
[13.49479103 887.49725342]
[24.88473320 898.21191406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 182]
[7 181]
[8 180]
[11 178]
[12 177]
[13 176]
[14 175]
[18 173]
[20 171]
[21 170]
[23 168]
[24 167]
[25 166]
[29 164]
[31 162]
[33 160]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[40 153]
[41 152]
[43 151]
[44 150]
[46 147]
[47 146]
[48 145]
[49 141]
[50 140]
[51 138]
[52 137]
[53 136]
[54 135]
[55 134]
[56 133]
[58 131]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[66 75]
[67 74]
[68 73]
[88 122]
[89 121]
[90 120]
[91 119]
[93 117]
[96 116]
[97 115]
[98 114]
[100 110]
[101 109]
[102 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
