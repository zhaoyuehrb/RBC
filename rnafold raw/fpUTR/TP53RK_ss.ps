%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCACAAGAGCCCUUCCUGCAGGGAACCUCAGGCUUCAGAGAGCCGAAAAGUUGGGAGGCGUAACCACUUACAGGCCGGAAGUGUCCGGGGUGGACGCAUUCGGGUAGCCGAAGAAGUCCCAGGAUUGCCGAAGAAGUCCCAGGAUUUCCGAAGCGAGCCGAAGCAUCGCGACAGUUUUCAGAGACAGCUGAUCGGUUGGAGCUGUUGCGCCGAGCAGUC\
) } def
/len { sequence length } bind def

/coor [
[-37.20686722 625.46246338]
[-40.95351410 639.98699951]
[-44.70016098 654.51159668]
[-48.44680786 669.03613281]
[-52.19345474 683.56066895]
[-55.83815765 698.11114502]
[-50.70795059 713.68719482]
[-61.83241272 725.73620605]
[-77.76764679 721.86315918]
[-82.12085724 706.05236816]
[-70.41382599 694.56860352]
[-71.88706207 687.33349609]
[-66.71800995 679.81402588]
[-62.97135925 665.28948975]
[-59.22471237 650.76495361]
[-55.47806549 636.24035645]
[-51.73141861 621.71582031]
[-60.88721848 607.60369873]
[-56.92102432 590.90832520]
[-41.81320953 582.08050537]
[-38.27062988 567.50482178]
[-34.72805023 552.92913818]
[-31.18547249 538.35345459]
[-39.12744904 525.80517578]
[-35.74240494 510.97286987]
[-22.52671432 502.72769165]
[-18.98413658 488.15200806]
[-26.92611313 475.60369873]
[-23.54107094 460.77142334]
[-10.32537842 452.52621460]
[-18.26735687 439.97790527]
[-14.88231277 425.14562988]
[-1.66662133 416.90042114]
[1.87595773 402.32476807]
[5.41853666 387.74908447]
[3.94529867 380.51400757]
[9.11435604 372.99456787]
[12.86100292 358.47000122]
[16.60765076 343.94546509]
[20.35429764 329.42089844]
[24.10094452 314.89636230]
[22.80332184 312.42163086]
[22.40306664 309.28613281]
[23.15586090 305.82742310]
[25.19121742 302.46893311]
[28.48640251 299.67407227]
[33.04155350 285.38244629]
[37.59670639 271.09082031]
[42.15185547 256.79919434]
[46.70700836 242.50758362]
[39.66378021 229.43360901]
[44.07976151 214.87498474]
[57.84069061 207.57603455]
[62.39583969 193.28440857]
[66.95098877 178.99278259]
[71.50614166 164.70115662]
[76.06129456 150.40953064]
[60.55823517 139.47822571]
[49.61260605 123.98526764]
[44.48915100 105.72085571]
[45.77988052 86.79541016]
[53.33565140 69.39573669]
[42.01194000 59.55837631]
[30.68823051 49.72101974]
[19.36452103 39.88366318]
[12.97245979 38.25516129]
[8.95884132 34.24851608]
[7.86616993 29.60810852]
[-3.17718482 19.45703506]
[-14.22054005 9.30595970]
[-25.26389503 -0.84511477]
[-36.30725098 -10.99618912]
[-36.69735336 3.99873710]
[-47.48635101 14.41975403]
[-62.48578262 14.28947926]
[-73.09214783 3.68263769]
[-73.22174072 -11.31680202]
[-62.80023575 -22.10532570]
[-47.80612946 -22.49507141]
[-57.95720673 -33.53842545]
[-68.10828400 -44.58177948]
[-78.25935364 -55.62513733]
[-88.41043091 -66.66848755]
[-104.21162415 -71.05646515]
[-108.04958344 -87.00018311]
[-95.97614288 -98.09811401]
[-80.41142273 -92.93365479]
[-77.36707306 -76.81956482]
[-67.21600342 -65.77620697]
[-57.06492615 -54.73285675]
[-46.91385269 -43.68949890]
[-36.76277542 -32.64614487]
[-26.15617371 -22.03954506]
[-15.11281967 -11.88846970]
[-4.06946516 -1.73739481]
[6.97388983 8.41368008]
[18.01724434 18.56475449]
[29.20187759 28.55995369]
[40.52558899 38.39730835]
[51.84929657 48.23466492]
[63.17300797 58.07202148]
[77.23580933 46.85000610]
[94.70508575 40.39999008]
[93.65407562 25.43685532]
[92.60305786 10.47372055]
[91.55204773 -4.48941278]
[90.50103760 -19.45254707]
[80.88302612 -32.73508453]
[87.82313538 -47.59331512]
[104.18197632 -48.74235916]
[113.13098145 -35.00018311]
[105.46417236 -20.50355721]
[106.51518250 -5.54042339]
[107.56619263 9.42271042]
[108.61720276 24.38584518]
[109.66821289 39.34897995]
[124.08197784 43.50151062]
[132.93275452 31.39103508]
[141.78353882 19.28055763]
[150.63432312 7.17008209]
[159.48510742 -4.94039392]
[168.33589172 -17.05087090]
[177.18667603 -29.16134644]
[174.95991516 -44.57819748]
[184.10839844 -56.73386002]
[198.81973267 -58.76172256]
[207.67050171 -70.87220001]
[216.52128601 -82.98267365]
[225.37207031 -95.09315491]
[234.22285461 -107.20362854]
[229.34121704 -121.93282318]
[234.08157349 -136.70809937]
[246.62113953 -145.84805298]
[262.13821411 -145.83819580]
[274.66613770 -136.68231201]
[279.38772583 -121.90103149]
[274.48736572 -107.17804718]
[261.84939575 -98.17465973]
[246.33332825 -98.35284424]
[237.48255920 -86.24237061]
[228.63177490 -74.13188934]
[219.78099060 -62.02141571]
[210.93020630 -49.91093826]
[213.46559143 -35.27853012]
[204.66215515 -22.87070465]
[189.29714966 -20.31056213]
[180.44636536 -8.20008659]
[171.59558105 3.91038942]
[162.74479675 16.02086639]
[153.89401245 28.13134193]
[145.04324341 40.24181747]
[136.19245911 52.35229492]
[148.67630005 68.79507446]
[154.47251892 87.87866211]
[164.65055847 76.08691406]
[179.82682800 75.02125549]
[191.00573730 84.79712677]
[205.95265198 83.53636932]
[220.89958191 82.27561188]
[235.84649658 81.01485443]
[250.78421021 79.64930725]
[265.71197510 78.17905426]
[278.71954346 68.19229889]
[293.76657104 74.71295929]
[295.37396240 91.03314209]
[281.88818359 100.36403656]
[267.18225098 93.10682678]
[252.25447083 94.57707977]
[245.91198730 98.35723877]
[237.10725403 95.96177673]
[222.16033936 97.22253418]
[207.21340942 98.48329163]
[192.26649475 99.74404907]
[182.88305664 111.25433350]
[167.74270630 112.74584198]
[155.73327637 102.82558441]
[154.89370728 110.04309082]
[153.12347412 117.09032440]
[150.45259094 123.84780884]
[146.92636108 130.20098877]
[142.60453796 136.04214478]
[137.56040955 141.27224731]
[131.87948608 145.80262756]
[125.65808868 149.55648804]
[119.00168610 152.47016907]
[112.02313995 154.49427795]
[104.84074402 155.59451294]
[97.57628632 155.75219727]
[90.35292053 154.96469116]
[85.79776764 169.25631714]
[81.24262238 183.54794312]
[76.68746948 197.83956909]
[72.13231659 212.13119507]
[79.13150787 226.04698181]
[74.30834198 240.47583008]
[60.99863434 247.06272888]
[56.44348526 261.35437012]
[51.88833237 275.64599609]
[47.33317947 289.93762207]
[42.77803040 304.22924805]
[38.62549591 318.64300537]
[34.87884903 333.16754150]
[31.13220215 347.69210815]
[27.38555527 362.21664429]
[23.63890839 376.74121094]
[19.99420547 391.29168701]
[16.45162773 405.86734009]
[12.90904808 420.44302368]
[20.86607742 433.83419800]
[17.06576157 448.56552124]
[4.25029087 456.06881714]
[12.20731926 469.45999146]
[8.40700436 484.19131470]
[-4.40846682 491.69461060]
[-7.95104551 506.27026367]
[0.00598297 519.66143799]
[-3.79433179 534.39276123]
[-16.60980225 541.89605713]
[-20.15238190 556.47174072]
[-23.69496155 571.04742432]
[-27.23753929 585.62304688]
[-18.95716286 596.23895264]
[-18.30920982 609.49200439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[5 13]
[6 11]
[20 221]
[21 220]
[22 219]
[23 218]
[26 215]
[27 214]
[30 211]
[33 208]
[34 207]
[35 206]
[37 205]
[38 204]
[39 203]
[40 202]
[41 201]
[46 200]
[47 199]
[48 198]
[49 197]
[50 196]
[53 193]
[54 192]
[55 191]
[56 190]
[57 189]
[62 101]
[63 100]
[64 99]
[65 98]
[68 97]
[69 96]
[70 95]
[71 94]
[72 93]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[103 116]
[104 115]
[105 114]
[106 113]
[107 112]
[117 152]
[118 151]
[119 150]
[120 149]
[121 148]
[122 147]
[123 146]
[126 143]
[127 142]
[128 141]
[129 140]
[130 139]
[154 176]
[157 173]
[158 172]
[159 171]
[160 170]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
