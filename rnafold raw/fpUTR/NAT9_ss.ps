%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGAUUGGGGCCUGGCGGCUGCCGUCAGCAUGGCGGAAGUGGGCGGGGCGCGUUCUCACGCGCAUGCGGAAGGGGCGGUAGCCGGCCGGGCCUGGGAACGUGGCUGGUUGGAGGAGGUAGAUCACCCUUUCUGCGGGGGACGAUUUCGUCGGUGGUAGAAUUUUGGAGUCUGUAUUCUUUGAAGUGUCUAGACGGAACUAAUGACGGAAGUCAACUUAGCCCCAGCAGGAAAGCUGGAGCGCCUACCCAAAGUU\
GGAGGAAAUUCAGGGUCCUGAAGUCUUUGCUCUCCCCAUCUGC\
) } def
/len { sequence length } bind def

/coor [
[113.35266113 272.59375000]
[109.99378204 256.90628052]
[120.27555084 244.59103394]
[120.27555084 229.59103394]
[120.27555084 214.59103394]
[120.27555084 199.59103394]
[117.14833832 192.93435669]
[120.35517883 184.43363953]
[120.51277924 169.43447876]
[120.67038727 154.43530273]
[120.82798767 139.43612671]
[106.59164429 134.71102905]
[97.74938202 146.82772827]
[88.90711975 158.94442749]
[80.06486511 171.06112671]
[78.17991638 186.76965332]
[64.42736053 192.48947144]
[62.54241180 208.19799805]
[48.78985214 213.91781616]
[39.94759369 226.03451538]
[31.10533333 238.15121460]
[29.22038841 253.85972595]
[15.46782780 259.57955933]
[6.62556744 271.69625854]
[-2.21669269 283.81295776]
[-11.05895329 295.92965698]
[-19.90121269 308.04635620]
[-28.74347305 320.16305542]
[-33.19627762 336.52182007]
[-50.14838409 336.77157593]
[-55.08120346 320.55111694]
[-40.86017609 311.32080078]
[-32.01791382 299.20410156]
[-23.17565346 287.08740234]
[-14.33339310 274.97070312]
[-5.49113274 262.85400391]
[3.35112739 250.73728943]
[4.60361385 235.89544678]
[18.98863220 229.30895996]
[27.83089256 217.19226074]
[36.67315292 205.07554626]
[37.92564011 190.23370361]
[52.31065750 183.64721680]
[53.56314468 168.80535889]
[67.94815826 162.21887207]
[76.79042053 150.10217285]
[85.63268280 137.98547363]
[94.47494507 125.86877441]
[85.25521088 114.03675842]
[71.34482574 119.64936066]
[57.43444824 125.26197052]
[43.52406693 130.87457275]
[29.61368561 136.48718262]
[15.70330620 142.09977722]
[6.03267479 155.34405518]
[-10.24138165 153.32238770]
[-16.37751007 138.11450195]
[-6.06338644 125.36495972]
[10.09070206 128.18939209]
[24.00108337 122.57679749]
[37.91146088 116.96418762]
[51.82184219 111.35158539]
[65.73222351 105.73898315]
[79.64260101 100.12638092]
[80.27227783 92.65286255]
[81.53163910 77.70581818]
[82.16131592 70.23229980]
[69.38614655 62.37131882]
[56.61097336 54.51033401]
[43.83580399 46.64935303]
[31.06063461 38.78837204]
[18.28546524 30.92739105]
[5.51029539 23.06640816]
[-7.26487446 15.20542622]
[-20.04004478 7.34444475]
[-32.81521225 -0.51653689]
[-48.62336731 -1.15904200]
[-55.40805435 -14.41865349]
[-68.18322754 -22.27963638]
[-80.95839691 -30.14061737]
[-102.88854980 -22.91460800]
[-122.65168762 -34.31554794]
[-127.26260376 -56.38065338]
[-140.58088684 -63.28162766]
[-153.89915466 -70.18260193]
[-167.21743774 -77.08358002]
[-180.53572083 -83.98455811]
[-193.85400391 -90.88552856]
[-207.17227173 -97.78650665]
[-220.49055481 -104.68748474]
[-229.50189209 -105.84580231]
[-233.91194153 -111.73157501]
[-247.15698242 -118.77210236]
[-260.43881226 -125.74294281]
[-273.75711060 -132.64392090]
[-290.10571289 -131.35740662]
[-299.16992188 -145.02386475]
[-291.62524414 -159.58442688]
[-275.23300171 -160.06042480]
[-266.85610962 -145.96220398]
[-253.53784180 -139.06121826]
[-246.18875122 -138.77531433]
[-240.11645508 -132.01713562]
[-226.87141418 -124.97660828]
[-213.58958435 -118.00576019]
[-200.27130127 -111.10478210]
[-186.95301819 -104.20381165]
[-173.63475037 -97.30283356]
[-160.31646729 -90.40185547]
[-146.99818420 -83.50088501]
[-133.67990112 -76.59990692]
[-120.36163330 -69.69892883]
[-114.74415588 -74.39054108]
[-108.06297302 -77.44379425]
[-100.78629303 -78.62915039]
[-93.42816925 -77.84852600]
[-86.51222229 -75.14324188]
[-80.53435516 -70.69207001]
[-75.92718506 -64.79950714]
[-73.02879333 -57.87495041]
[-72.05789185 -50.40428543]
[-73.09741211 -42.91578674]
[-60.32224274 -35.05480576]
[-47.54707336 -27.19382286]
[-32.65268326 -27.11358833]
[-24.95423317 -13.29170704]
[-12.17906284 -5.43072510]
[0.59610748 2.43025684]
[13.37127781 10.29123878]
[26.14644814 18.15221977]
[38.92161560 26.01320267]
[51.69678879 33.87418365]
[64.47195435 41.73516464]
[77.24712372 49.59614563]
[90.02229309 57.45713043]
[104.87165070 59.57766724]
[119.33647156 55.60665131]
[133.80128479 51.63563538]
[145.06076050 40.52101135]
[159.38227844 44.61291122]
[173.84709167 40.64189529]
[185.10656738 29.52727127]
[199.42807007 33.61916733]
[213.89289856 29.64815331]
[228.35771179 25.67713737]
[242.82254028 21.70612144]
[257.28735352 17.73510551]
[271.75216675 13.76408958]
[286.21701050 9.79307365]
[298.00039673 0.51130629]
[305.24880981 -12.62112713]
[305.14343262 -28.44198227]
[318.06756592 -35.84578705]
[325.31594849 -48.97821808]
[322.49526978 -61.53208160]
[328.76483154 -72.30755615]
[340.30734253 -75.82483673]
[347.69329834 -88.88039398]
[355.07928467 -101.93594360]
[362.46524048 -114.99149323]
[369.78253174 -128.08566284]
[377.03094482 -141.21809387]
[384.27932739 -154.35052490]
[391.52770996 -167.48297119]
[398.77609253 -180.61540222]
[406.02450562 -193.74783325]
[413.27288818 -206.88026428]
[420.52127075 -220.01269531]
[427.76968384 -233.14512634]
[421.06475830 -247.13882446]
[423.89874268 -262.39489746]
[435.18191528 -273.04711914]
[450.57568359 -274.99945068]
[464.16082764 -267.50119019]
[470.71356201 -253.43557739]
[467.71423340 -238.21113586]
[456.31616211 -227.68196106]
[440.90209961 -225.89674377]
[433.65371704 -212.76431274]
[426.40533447 -199.63186646]
[419.15692139 -186.49943542]
[411.90853882 -173.36700439]
[404.66015625 -160.23457336]
[397.41174316 -147.10214233]
[390.16336060 -133.96971130]
[382.91497803 -120.83727264]
[382.43615723 -113.49822998]
[375.52081299 -107.60552216]
[368.13482666 -94.54997253]
[360.74887085 -81.49441528]
[353.36288452 -68.43886566]
[354.44064331 -50.90269089]
[338.44839478 -41.72982788]
[331.19998169 -28.59739494]
[331.82382202 -13.71585846]
[318.38122559 -5.37273455]
[311.13284302 7.75969887]
[315.95709229 13.50221729]
[323.89849854 0.77687085]
[338.45501709 4.39725018]
[339.51004028 19.36010361]
[325.60562134 24.98725319]
[330.42987061 30.72977257]
[344.61578369 25.85535812]
[358.80169678 20.98094177]
[372.98760986 16.10652733]
[383.34036255 3.38833427]
[399.48580933 6.26177263]
[404.81491089 21.77089691]
[393.84552002 33.96124649]
[377.86203003 30.29243851]
[363.67611694 35.16685486]
[349.49020386 40.04126740]
[335.30429077 44.91568375]
[336.05166626 52.37835312]
[350.97702026 50.88359070]
[364.65011597 57.05172729]
[352.47177124 65.80892944]
[337.54644775 67.30368805]
[338.29382324 74.76635742]
[353.16464233 76.73075867]
[367.85922241 70.86737061]
[379.46362305 80.20480347]
[394.33444214 82.16920471]
[409.20523071 84.13360596]
[424.07604980 86.09801483]
[438.94686890 88.06241608]
[451.33541870 78.24916840]
[467.02459717 80.15312958]
[476.70629883 92.64472198]
[474.63656616 108.31289673]
[462.04333496 117.86200714]
[446.39791870 115.62673950]
[436.98248291 102.93322754]
[422.11166382 100.96882629]
[407.24084473 99.00442505]
[392.37002563 97.04001617]
[377.49920654 95.07561493]
[363.86828613 101.07951355]
[351.20022583 91.60157776]
[336.32940674 89.63716888]
[333.23336792 96.46831512]
[346.89553833 102.66062164]
[340.70303345 116.32270813]
[327.04125977 110.13059235]
[323.94522095 116.96173096]
[335.22497559 126.84944916]
[346.50473022 136.73716736]
[357.78451538 146.62489319]
[373.33792114 145.77110291]
[384.63635254 155.95933533]
[385.35446167 170.79240417]
[396.63421631 180.68013000]
[407.91397095 190.56784058]
[419.19372559 200.45556641]
[434.94552612 199.16850281]
[446.93957520 209.46015930]
[448.06002808 225.22467041]
[437.64215088 237.10925293]
[421.86666870 238.06297302]
[410.09289551 227.52001953]
[409.30603027 211.73532104]
[398.02624512 201.84761047]
[386.74649048 191.95988464]
[375.46673584 182.07217407]
[360.66735840 183.30279541]
[349.08721924 173.43592834]
[347.89678955 157.90464783]
[336.61703491 148.01693726]
[325.33724976 138.12921143]
[314.05749512 128.24148560]
[284.23971558 93.38661957]
[277.01336670 55.23950958]
[290.18801880 24.25789452]
[275.72320557 28.22891045]
[261.25836182 32.19992447]
[246.79354858 36.17094040]
[232.32873535 40.14195633]
[217.86390686 44.11297226]
[203.39909363 48.08398819]
[193.17424011 58.91457748]
[177.81811523 55.10671616]
[163.35328674 59.07773209]
[153.12843323 69.90832520]
[137.77230835 66.10045624]
[123.30748749 70.07147217]
[108.84266663 74.04248810]
[139.57518005 91.82991028]
[135.82716370 139.59373474]
[135.66955566 154.59289551]
[135.51194763 169.59207153]
[135.35435486 184.59124756]
[135.27554321 199.59103394]
[135.27554321 214.59103394]
[135.27554321 229.59103394]
[135.27554321 244.59103394]
[145.55731201 256.90628052]
[142.19844055 272.59375000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 296]
[4 295]
[5 294]
[6 293]
[8 292]
[9 291]
[10 290]
[11 289]
[12 48]
[13 47]
[14 46]
[15 45]
[17 43]
[19 41]
[20 40]
[21 39]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[72 130]
[73 129]
[74 128]
[75 127]
[76 126]
[78 124]
[79 123]
[80 122]
[83 112]
[84 111]
[85 110]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[92 104]
[93 103]
[94 101]
[95 100]
[136 287]
[137 286]
[138 285]
[140 283]
[141 282]
[143 280]
[144 279]
[145 278]
[146 277]
[147 276]
[148 275]
[149 274]
[150 197]
[151 196]
[153 194]
[154 193]
[157 191]
[158 190]
[159 189]
[160 188]
[161 186]
[162 185]
[163 184]
[164 183]
[165 182]
[166 181]
[167 180]
[168 179]
[169 178]
[203 214]
[204 213]
[205 212]
[206 211]
[220 241]
[221 240]
[223 238]
[224 237]
[225 236]
[226 235]
[227 234]
[246 271]
[247 270]
[248 269]
[249 268]
[252 265]
[253 264]
[254 263]
[255 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
