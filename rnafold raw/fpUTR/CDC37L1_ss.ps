%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCGCCGACUAUUUCUUCCGCCGUCCGCCGGUGGCGAGGCCCAGGCUGUCGCCGGGUGUGCAGCGGCGUCGCGGCCAGUAGAGGGAUUCUGGGUAACGGCCCGGACCCCCGGCUGGGCUUCUGGCUCGGCGCAGCAGGUUCCAUUCACGCCAAGUCUGUUGGCAGUGGCAGUUGUAGGGCCAAGGGCGGUUGUAGGACCCGGAGCAGCCGGAC\
) } def
/len { sequence length } bind def

/coor [
[-191.39836121 549.05627441]
[-200.27055359 549.02374268]
[-209.05200195 561.18463135]
[-210.85821533 576.90234375]
[-224.58193970 582.69104004]
[-233.36338806 594.85186768]
[-242.14482117 607.01269531]
[-250.92626953 619.17358398]
[-237.09574890 613.36694336]
[-222.09768677 613.60815430]
[-208.46102905 619.85644531]
[-198.48515320 631.05834961]
[-193.85218811 645.32495117]
[-195.34330750 660.25061035]
[-202.70712280 673.31872559]
[-214.70191956 682.32562256]
[-229.30517578 685.75268555]
[-244.05453491 683.02197266]
[-256.46295166 674.59399414]
[-264.43820190 661.88983154]
[-266.63543701 647.05163574]
[-262.68368530 632.58032227]
[-273.59429932 642.87396240]
[-284.50488281 653.16760254]
[-295.41549683 663.46118164]
[-297.31747437 679.39111328]
[-311.03317261 687.71337891]
[-326.04101562 682.04382324]
[-330.82833862 666.73168945]
[-321.72265625 653.52313232]
[-305.70910645 652.55059814]
[-294.79852295 642.25695801]
[-283.88790894 631.96337891]
[-272.97729492 621.66973877]
[-263.08712769 610.39215088]
[-254.30567932 598.23126221]
[-245.52423096 586.07043457]
[-236.74279785 573.90960693]
[-235.56468201 559.06164551]
[-221.21284485 552.40313721]
[-212.43141174 540.24230957]
[-212.12374878 519.60369873]
[-192.42463684 511.16210938]
[-184.18199158 498.62979126]
[-183.13310242 491.31680298]
[-175.72723389 485.97634888]
[-167.30320740 473.56524658]
[-158.87918091 461.15414429]
[-150.45513916 448.74301147]
[-142.03111267 436.33190918]
[-140.87597656 429.03494263]
[-133.39321899 423.80276489]
[-132.43118286 408.93927002]
[-118.17769623 402.07275391]
[-109.57405090 389.78549194]
[-100.97040558 377.49819946]
[-92.36676025 365.21090698]
[-83.76311493 352.92364502]
[-75.15946198 340.63635254]
[-74.57240295 323.09558105]
[-57.81579208 315.45614624]
[-49.39176178 303.04501343]
[-40.96772766 290.63391113]
[-32.54369736 278.22280884]
[-24.11966515 265.81167603]
[-15.69563389 253.40057373]
[-14.94987106 238.52464294]
[-0.79776508 231.45156860]
[7.62626648 219.04045105]
[8.78140163 211.74349976]
[16.26416206 206.51132202]
[24.86780739 194.22404480]
[22.03652954 179.64599609]
[30.58681297 167.06237793]
[45.89680481 164.19151306]
[54.50045395 151.90423584]
[63.10409927 139.61695862]
[71.70774841 127.32967377]
[65.49498749 118.88826752]
[61.73192596 109.10588837]
[60.68572235 98.67702484]
[62.43065262 88.34208679]
[66.84283447 78.83480835]
[73.60902405 70.83016205]
[82.24885559 64.89644623]
[78.15625763 50.46555328]
[74.06365967 36.03466034]
[60.54488754 28.29640198]
[56.59998322 13.60312557]
[64.06053925 0.76273394]
[59.96794128 -13.66815758]
[55.87533951 -28.09904861]
[51.78274155 -42.52994156]
[47.69013977 -56.96083069]
[43.59754181 -71.39172363]
[39.50494003 -85.82261658]
[27.37097359 -96.85433197]
[31.12166023 -112.81880951]
[46.89861298 -117.29315186]
[58.47185898 -105.67454529]
[53.93583298 -89.91521454]
[58.02843094 -75.48432159]
[62.12103271 -61.05343246]
[66.21363068 -46.62253952]
[70.30622864 -32.19165039]
[74.39883423 -17.76075745]
[78.49143219 -3.32986593]
[91.58214569 3.68218756]
[95.93819427 18.25886345]
[88.49454498 31.94206047]
[92.58715057 46.37295151]
[96.67974854 60.80384445]
[103.14334106 60.78926086]
[109.52206421 61.83335114]
[115.86134338 48.23873520]
[122.20061493 34.64411926]
[128.53988647 21.04950142]
[134.87916565 7.45488453]
[141.21842957 -6.13973236]
[147.55770874 -19.73434830]
[153.89698792 -33.32896423]
[155.11103821 -50.23938751]
[171.69668579 -53.75404358]
[179.66534424 -38.78952789]
[167.49160767 -26.98969269]
[161.15232849 -13.39507484]
[154.81304932 0.19954161]
[148.47378540 13.79415798]
[142.13450623 27.38877487]
[135.79522705 40.98339081]
[129.45596313 54.57801056]
[123.11668396 68.17262268]
[127.54883575 71.92110443]
[131.38108826 76.28101349]
[134.52999878 81.15743256]
[136.92698669 86.44416046]
[151.73541260 84.05455780]
[166.54385376 81.66495514]
[181.35229492 79.27535248]
[193.74362183 69.43840027]
[207.54095459 75.04934692]
[219.93228149 65.21239471]
[233.72961426 70.82334137]
[248.53805542 68.43373871]
[263.34649658 66.04413605]
[278.15493774 63.65453339]
[292.96337891 61.26493073]
[297.00372314 57.97183990]
[301.45767212 56.68403625]
[305.49310303 57.22369766]
[308.46862793 59.10879898]
[323.36718750 57.36740494]
[338.26577759 55.62601089]
[353.16433716 53.88462067]
[368.06292725 52.14322662]
[379.10122681 40.50126648]
[395.07260132 42.01623154]
[403.72515869 55.52596664]
[398.42138672 70.66696167]
[383.22991943 75.82434082]
[369.80432129 67.04180145]
[354.90573120 68.78319550]
[340.00717163 70.52458954]
[325.10858154 72.26598358]
[310.21002197 74.00737762]
[295.35296631 76.07336426]
[280.54452515 78.46296692]
[265.73608398 80.85256958]
[250.92765808 83.24217224]
[236.11923218 85.63177490]
[224.78709412 95.29780579]
[209.93055725 89.85778046]
[198.59843445 99.52381134]
[183.74189758 94.08378601]
[168.93345642 96.47338867]
[154.12501526 98.86299133]
[139.31658936 101.25259399]
[130.47521973 124.87214661]
[109.10683441 138.26785278]
[83.99502563 135.93331909]
[75.39138031 148.22059631]
[66.78773499 160.50788879]
[58.18408585 172.79516602]
[60.72268295 188.16374207]
[51.82232666 200.50222778]
[37.15509033 202.82768250]
[28.55144310 215.11495972]
[20.03737831 227.46449280]
[11.61334610 239.87559509]
[10.26504040 255.63925171]
[-3.28452206 261.82461548]
[-11.70855331 274.23571777]
[-20.13258553 286.64682007]
[-28.55661774 299.05795288]
[-36.98064804 311.46905518]
[-45.40467834 323.88015747]
[-43.75121307 336.66943359]
[-51.02004242 346.83248901]
[-62.87218475 349.23999023]
[-71.47583008 361.52728271]
[-80.07947540 373.81457520]
[-88.68312073 386.10183716]
[-97.28677368 398.38912964]
[-105.89041901 410.67642212]
[-107.46784210 426.41879272]
[-121.10593414 432.40640259]
[-129.61999512 444.75595093]
[-138.04403687 457.16705322]
[-146.46806335 469.57815552]
[-154.89208984 481.98928833]
[-163.31613159 494.40039062]
[-171.64967346 506.87243652]
[-179.89231873 519.40472412]
[-176.77563477 528.29669189]
[-178.07817078 537.48974609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[5 38]
[6 37]
[7 36]
[8 35]
[22 34]
[23 33]
[24 32]
[25 31]
[43 213]
[44 212]
[46 211]
[47 210]
[48 209]
[49 208]
[50 207]
[52 206]
[54 204]
[55 203]
[56 202]
[57 201]
[58 200]
[59 199]
[61 196]
[62 195]
[63 194]
[64 193]
[65 192]
[66 191]
[68 189]
[69 188]
[71 187]
[72 186]
[75 183]
[76 182]
[77 181]
[78 180]
[85 112]
[86 111]
[87 110]
[90 107]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
[96 101]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[121 125]
[136 177]
[137 176]
[138 175]
[139 174]
[141 172]
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
