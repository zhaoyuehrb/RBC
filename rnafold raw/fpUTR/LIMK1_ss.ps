%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGGCCCCGCCUCGGUCCGCCCCUCCGCUCGCUCCCCAAGCCGCCGCGGCGCCGAGCCGGUUUCCCCGCCGGUGUCCGAGAGGCGCCCCCGGCCCGGCCCGGCCCGGCCCGCGCCCUCCGCCCCCGCCUCCCCGGGCCGGCGGCGGUGGGCGAGCUCGCGGGCCCGGCCGCCCCCAGCCCCAGCCCCGCCGGGCCCCGCCCCCCGUCGAGUGC\
) } def
/len { sequence length } bind def

/coor [
[87.65639496 256.02072144]
[79.84475708 267.38217163]
[67.95790863 274.23687744]
[54.34359360 275.29678345]
[48.78099060 289.22723389]
[43.21839142 303.15768433]
[46.99979401 322.96029663]
[31.30007362 334.25070190]
[26.14689445 348.33773804]
[20.99371338 362.42477417]
[21.23058891 379.37707520]
[5.00637245 384.29754639]
[-4.21312332 370.06951904]
[6.90667248 357.27160645]
[12.05985260 343.18457031]
[17.21303177 329.09753418]
[12.09487152 320.25772095]
[12.69832706 309.84109497]
[19.06517220 301.29925537]
[29.28793907 297.59509277]
[34.85054016 283.66464233]
[40.41314316 269.73419189]
[30.10529518 257.28808594]
[27.46628189 241.24948120]
[33.30999374 225.98139954]
[46.12960434 215.68577576]
[62.48478317 213.24705505]
[67.84324646 199.23681641]
[73.20170593 185.22657776]
[78.56017303 171.21633911]
[83.91863251 157.20608521]
[89.27709961 143.19584656]
[94.53305817 129.14683533]
[91.10374451 122.47676849]
[84.95043945 136.15657043]
[70.41865540 139.87507629]
[58.45089340 130.83224487]
[58.05893326 115.83737183]
[69.53791809 106.18164825]
[84.24510956 109.13663483]
[80.81578827 102.46656799]
[66.36051941 98.46092987]
[51.90525055 94.45528412]
[36.54004669 98.22636414]
[26.34115982 87.37132263]
[11.85700989 83.47139740]
[-2.65524554 79.67739868]
[-11.74626541 80.53449249]
[-17.35103607 75.72048187]
[-31.80630684 71.71484375]
[-46.26157761 67.70919800]
[-60.71684647 63.70355988]
[-75.17211914 59.69791794]
[-89.62738800 55.69227600]
[-104.08265686 51.68663025]
[-113.18522644 52.41080093]
[-118.71906281 47.51541519]
[-133.11425781 43.29898834]
[-148.53292847 46.84515762]
[-158.57211304 35.84225082]
[-172.96731567 31.62582207]
[-188.76502991 36.02628708]
[-200.28378296 24.35365105]
[-195.67405701 8.61571980]
[-179.67794800 5.00232744]
[-168.75088501 17.23062325]
[-154.35568237 21.44705200]
[-139.96665955 17.59929466]
[-128.89782715 28.90378952]
[-114.50263214 33.12021637]
[-100.07701111 37.23136139]
[-85.62174225 41.23700333]
[-71.16647339 45.24264526]
[-56.71120453 49.24828720]
[-42.25593567 53.25392914]
[-27.80066490 57.25957108]
[-13.34539413 61.26521301]
[1.13875532 65.16513824]
[15.65101051 68.95914459]
[22.91519356 67.61016083]
[30.34680176 72.91605377]
[44.67807007 68.85845947]
[55.91089249 80.00001526]
[70.36616516 84.00565338]
[84.82143402 88.01129913]
[99.69190979 86.04434967]
[112.60861969 78.41816711]
[113.27541351 66.55198669]
[119.52228546 56.58238220]
[129.70010376 50.92350388]
[141.22537231 50.87946320]
[151.23573303 56.34556580]
[164.36976624 49.10005951]
[177.50378418 41.85455704]
[190.63781738 34.60905075]
[203.77185059 27.36354637]
[216.90586853 20.11804199]
[230.03990173 12.87253857]
[243.17391968 5.62703371]
[250.36817932 -22.52598763]
[285.50512695 -26.61208344]
[296.60327148 -36.70321655]
[307.70144653 -46.79435349]
[318.79959106 -56.88548660]
[329.89773560 -66.97662354]
[334.90295410 -81.98522949]
[349.52478027 -84.82275391]
[360.62295532 -94.91388702]
[371.72109985 -105.00502014]
[382.81924438 -115.09615326]
[393.91738892 -125.18729401]
[405.01556396 -135.27842712]
[416.11370850 -145.36955261]
[427.21185303 -155.46069336]
[428.11978149 -171.01104736]
[439.51864624 -181.08679199]
[454.33792114 -180.12539673]
[465.43606567 -190.21653748]
[476.53424072 -200.30767822]
[480.77658081 -208.39369202]
[487.86904907 -210.46371460]
[499.11346436 -220.39161682]
[510.35787964 -230.31950378]
[521.60229492 -240.24740601]
[532.77386475 -250.25718689]
[543.87200928 -260.34832764]
[554.97021484 -270.43945312]
[566.06835938 -280.53057861]
[577.16650391 -290.62173462]
[582.17169189 -305.63034058]
[596.79351807 -308.46786499]
[607.89166260 -318.55899048]
[607.08911133 -334.17596436]
[616.55383301 -346.62393188]
[631.81701660 -350.02536011]
[645.67181396 -342.77420044]
[651.57635498 -328.29418945]
[646.74279785 -313.42239380]
[633.45330811 -305.18081665]
[617.98284912 -307.46084595]
[606.88464355 -297.36968994]
[602.67327881 -283.08288574]
[587.25762939 -279.52355957]
[576.15948486 -269.43243408]
[565.06134033 -259.34130859]
[553.96319580 -249.25016785]
[542.86499023 -239.15902710]
[540.03167725 -232.33551025]
[531.53021240 -229.00299072]
[520.28576660 -219.07508850]
[509.04135132 -209.14720154]
[497.79693604 -199.21929932]
[486.62536621 -189.20951843]
[475.52722168 -179.11837769]
[464.42904663 -169.02725220]
[463.98071289 -154.18357849]
[452.86935425 -143.79164124]
[437.30300903 -144.36253357]
[426.20483398 -134.27140808]
[415.10668945 -124.18027496]
[404.00854492 -114.08913422]
[392.91036987 -103.99800110]
[381.81222534 -93.90686798]
[370.71408081 -83.81573486]
[359.61593628 -73.72460175]
[355.40451050 -59.43777847]
[339.98889160 -55.87846756]
[328.89071655 -45.78733444]
[317.79257202 -35.69619751]
[306.69442749 -25.60506439]
[295.59625244 -15.51393032]
[296.14373779 -8.03393841]
[308.55206299 -16.46207809]
[322.05514526 -9.93012619]
[323.14974976 5.02988195]
[310.74124146 13.45775127]
[297.23864746 6.92604589]
[297.78613281 14.40603828]
[310.23529053 22.77373123]
[326.62429810 23.35067940]
[334.07913208 37.95743179]
[324.93093872 51.56781006]
[308.59057617 50.18062592]
[301.86758423 35.22289658]
[289.41842651 26.85520363]
[277.58920288 31.04333878]
[266.09194946 30.43810463]
[256.65008545 25.88207245]
[250.41943359 18.76106071]
[237.28540039 26.00656509]
[224.15138245 33.25207138]
[211.01734924 40.49757385]
[197.88331604 47.74308014]
[184.74929810 54.98858261]
[171.61526489 62.23408508]
[158.48124695 69.47959137]
[154.46498108 87.34198761]
[138.39039612 96.75500488]
[120.23480225 91.33486938]
[107.31809998 98.96105957]
[111.98981476 101.24226379]
[115.71726990 105.69292450]
[117.74355316 111.92601776]
[117.45833588 119.32277679]
[114.46324158 127.08423615]
[108.62010193 134.30001831]
[108.61118317 143.43133545]
[103.28733826 148.55430603]
[97.92887878 162.56455994]
[92.57041168 176.57479858]
[87.21195221 190.58503723]
[81.85348511 204.59527588]
[76.49502563 218.60551453]
[85.86193848 228.99194336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 22]
[5 21]
[6 20]
[8 16]
[9 15]
[10 14]
[27 213]
[28 212]
[29 211]
[30 210]
[31 209]
[32 208]
[33 206]
[41 85]
[42 84]
[43 83]
[45 81]
[46 79]
[47 78]
[49 77]
[50 76]
[51 75]
[52 74]
[53 73]
[54 72]
[55 71]
[57 70]
[58 69]
[60 67]
[61 66]
[86 200]
[87 199]
[92 196]
[93 195]
[94 194]
[95 193]
[96 192]
[97 191]
[98 190]
[99 189]
[101 171]
[102 170]
[103 169]
[104 168]
[105 167]
[107 165]
[108 164]
[109 163]
[110 162]
[111 161]
[112 160]
[113 159]
[114 158]
[117 155]
[118 154]
[119 153]
[121 152]
[122 151]
[123 150]
[124 149]
[125 147]
[126 146]
[127 145]
[128 144]
[129 143]
[131 141]
[132 140]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
