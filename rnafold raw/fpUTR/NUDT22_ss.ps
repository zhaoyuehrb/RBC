%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCCUGAGGGACCCGGCGGCUGGUGAGCGCCCGCUGGAGGCUGGAGCUUCCGGGCCCUGGAAAGGGGUCCCCGCGCGCCCCGGGUCGGAGGCAGACCCCUGGGUUUGGGGGACAUGGGCAUUUGGGGCGCCUGAACCCAAGACCUCUGGAUGAGCUGCCCCGUUCAGACC\
) } def
/len { sequence length } bind def

/coor [
[304.93051147 304.53561401]
[290.29925537 299.64376831]
[280.65322876 287.60391235]
[279.07043457 272.25796509]
[286.05593872 258.50274658]
[299.38067627 250.72747803]
[299.92535400 235.73736572]
[300.47000122 220.74725342]
[301.01467896 205.75715637]
[301.55932617 190.76704407]
[292.81533813 177.84117126]
[300.02655029 162.26733398]
[285.47503662 158.62675476]
[270.92355347 154.98619080]
[256.37203979 151.34561157]
[241.82054138 147.70503235]
[227.26902771 144.06446838]
[212.71752930 140.42388916]
[205.43948364 141.85598755]
[197.93605042 136.58283997]
[183.45304871 132.67863464]
[168.97006226 128.77441406]
[156.22796631 136.40167236]
[141.48454285 132.64855957]
[133.57078552 119.23177338]
[119.08778381 115.32756805]
[104.60478973 111.42336273]
[89.63507080 112.37609100]
[75.76388550 118.08486938]
[61.89270020 123.79364777]
[52.31399918 137.10456848]
[36.02633667 135.19563293]
[29.78506088 120.03058624]
[40.01066208 107.20993805]
[56.18392181 109.92246246]
[70.05510712 104.21368408]
[83.92629242 98.50490570]
[81.62014008 83.68324280]
[66.67019653 82.45883942]
[51.72025299 81.23443604]
[36.77030945 80.01003265]
[21.82036400 78.78563690]
[6.87041998 77.56123352]
[-7.71410942 85.05946350]
[-21.35161972 75.95175934]
[-20.01301003 59.60733414]
[-5.07532644 52.83993912]
[8.09482193 62.61128616]
[23.04476738 63.83568954]
[37.99471283 65.06008911]
[52.94465637 66.28449249]
[67.89459991 67.50889587]
[82.84454346 68.73329926]
[88.67903137 54.91451645]
[77.37528229 45.05422974]
[66.07153320 35.19394302]
[54.76778412 25.33365631]
[43.46403503 15.47336864]
[32.16028595 5.61308241]
[20.85653877 -4.24720430]
[4.81724405 -4.59447813]
[-4.79661989 -17.43788719]
[-0.61011970 -32.92506790]
[14.16521931 -39.17558289]
[28.19502258 -31.39456558]
[30.71682358 -15.55095387]
[42.02057266 -5.69066668]
[53.32432175 4.16961956]
[64.62807465 14.02990627]
[75.93182373 23.89019203]
[87.23557281 33.75048065]
[98.53932190 43.61076736]
[118.47425842 72.98807526]
[108.50899506 96.94036102]
[122.99198914 100.84457397]
[137.47499084 104.74877930]
[151.06002808 97.12746429]
[165.69223022 101.29319763]
[172.87426758 114.29142761]
[187.35725403 118.19563293]
[201.84025574 122.09983826]
[216.35810852 125.87238312]
[230.90960693 129.51295471]
[245.46110535 133.15353394]
[260.01260376 136.79411316]
[274.56411743 140.43467712]
[289.11563110 144.07525635]
[303.66711426 147.71583557]
[318.64486694 148.53260803]
[333.50595093 146.49597168]
[341.61734009 142.21661377]
[348.65512085 144.55981445]
[363.55075073 142.79338074]
[378.44638062 141.02693176]
[393.34201050 139.26049805]
[408.23764038 137.49404907]
[418.01031494 125.36423492]
[433.14175415 123.78501129]
[444.64544678 133.17651367]
[459.50656128 131.13989258]
[474.32821655 128.83374023]
[488.37582397 116.95359802]
[504.48455811 123.87762451]
[519.26190186 121.30271149]
[534.03924561 118.72779846]
[548.81658936 116.15289307]
[563.59393311 113.57798004]
[578.37127686 111.00306702]
[590.63842773 101.01167297]
[604.50494385 106.44934845]
[619.28228760 103.87443542]
[634.05963135 101.29952240]
[643.15734863 88.65556335]
[658.18035889 86.25475311]
[670.17834473 95.00593567]
[684.95568848 92.43102264]
[692.90637207 87.85995483]
[700.02453613 89.94606781]
[714.84625244 87.63991547]
[729.64636230 85.19928741]
[744.42370605 82.62437439]
[752.11273193 69.00775909]
[766.77355957 63.56769943]
[781.48376465 68.87282562]
[789.29760742 82.41822052]
[786.52563477 97.80816650]
[774.47674561 107.77599335]
[758.83996582 107.61520386]
[746.99859619 97.40171814]
[732.22125244 99.97663116]
[726.14971924 104.23781586]
[717.15240479 102.46157837]
[702.33068848 104.76773071]
[687.53057861 107.20836639]
[672.75323486 109.78327942]
[664.42224121 122.07674408]
[649.47259521 124.89858246]
[636.63452148 116.07686615]
[621.85717773 118.65177917]
[607.07983398 121.22668457]
[595.86968994 131.03390503]
[580.94616699 125.78041077]
[566.16882324 128.35531616]
[551.39147949 130.93023682]
[536.61413574 133.50514221]
[521.83679199 136.08004761]
[507.05947876 138.65496826]
[499.82864380 148.38038635]
[487.51214600 150.62963867]
[476.63436890 143.65539551]
[461.81271362 145.96154785]
[458.30410767 149.24946594]
[452.68182373 150.34527588]
[446.41189575 148.07214355]
[437.42382812 159.89373779]
[422.34271240 161.89735413]
[410.00405884 152.38967896]
[395.10845947 154.15612793]
[380.21282959 155.92256165]
[365.31719971 157.68901062]
[350.42156982 159.45544434]
[335.54260254 161.35707092]
[320.68148804 163.39369202]
[326.18518066 179.35716248]
[316.54943848 191.31170654]
[316.00479126 206.30181885]
[315.46011353 221.29193115]
[314.91543579 236.28202820]
[314.37078857 251.27214050]
[327.09609985 259.99392700]
[333.06491089 274.21984863]
[330.37255859 289.41049194]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 169]
[7 168]
[8 167]
[9 166]
[10 165]
[12 88]
[13 87]
[14 86]
[15 85]
[16 84]
[17 83]
[18 82]
[20 81]
[21 80]
[22 79]
[25 76]
[26 75]
[27 74]
[28 37]
[29 36]
[30 35]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[43 48]
[54 72]
[55 71]
[56 70]
[57 69]
[58 68]
[59 67]
[60 66]
[89 163]
[90 162]
[92 161]
[93 160]
[94 159]
[95 158]
[96 157]
[99 154]
[100 151]
[101 150]
[103 147]
[104 146]
[105 145]
[106 144]
[107 143]
[108 142]
[110 140]
[111 139]
[112 138]
[115 135]
[116 134]
[118 133]
[119 132]
[120 130]
[121 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
