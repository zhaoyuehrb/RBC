%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCGUGACGGCGGCGCUAGGACCCGGCGGGCCGCGGGUGCGGCGAGGCCUGGGCGGCCUGAGGAGCGCGGACCCCGGCGCUCGGCUCCCGGCGCCAUGUGAGGGGGCUCGGGGGCCGCGGGGGGCCGGGCGCUCCCCGCCGGAGAUGAGGAAACUGAGGCUCAGAGAGGUCAC\
) } def
/len { sequence length } bind def

/coor [
[54.95365143 305.54650879]
[57.65911102 321.13467407]
[46.12837219 330.56289673]
[41.13809967 344.70846558]
[36.14782715 358.85403442]
[31.15755272 372.99960327]
[26.16728020 387.14517212]
[29.70524216 403.15814209]
[17.42558289 414.02743530]
[1.96056330 408.57168579]
[-0.78073090 392.40328979]
[12.02170944 382.15490723]
[17.01198196 368.00933838]
[22.00225639 353.86376953]
[26.99252892 339.71820068]
[31.98280144 325.57263184]
[28.92040443 310.99624634]
[40.80808258 300.55621338]
[32.21902466 288.41677856]
[32.42759705 273.36950684]
[41.56336594 261.18792725]
[56.29050064 256.66931152]
[61.28077316 242.52375793]
[66.27104950 228.37817383]
[71.26132202 214.23260498]
[103.79248047 190.37455750]
[101.92311096 175.49150085]
[100.05373383 160.60842896]
[98.18436432 145.72537231]
[96.31498718 130.84231567]
[94.44561768 115.95925903]
[82.27896118 107.18585968]
[67.56718445 110.11221313]
[52.85540771 113.03856659]
[38.14362717 115.96492004]
[23.43184662 118.89128113]
[11.46579075 130.10490417]
[-4.14791679 125.09051514]
[-7.34723186 109.00646973]
[5.15902710 98.39866638]
[20.50549316 104.17949677]
[35.21727371 101.25314331]
[49.92905045 98.32678986]
[64.64083099 95.40043640]
[79.35260773 92.47408295]
[79.95439911 84.99826050]
[81.75976562 62.57080841]
[67.70552063 57.32884598]
[53.65127182 52.08688354]
[39.59702682 46.84492111]
[25.54277992 41.60295868]
[10.41092300 46.93272781]
[-3.11366129 38.30340576]
[-4.65606880 22.33467102]
[6.96690321 11.27636814]
[22.83910561 13.61148167]
[30.78474236 27.54871178]
[44.83898926 32.79067612]
[58.89323425 38.03263855]
[72.94747925 43.27460098]
[87.00172424 48.51656342]
[90.74952698 63.27674484]
[94.48127747 78.04098511]
[98.19698334 92.80925751]
[104.67075348 79.27817535]
[111.14453125 65.74709320]
[117.61830139 52.21600342]
[124.09207916 38.68492126]
[130.56584167 25.15383530]
[137.03962708 11.62274933]
[143.27084351 -2.02173066]
[149.25753784 -15.77525806]
[149.81864929 -24.92562103]
[155.47578430 -29.71934128]
[161.70701599 -43.36381912]
[167.93823242 -57.00830078]
[174.16946411 -70.65277863]
[170.39949036 -83.00980377]
[175.89537048 -94.25688934]
[187.21162415 -98.58812714]
[193.68539429 -112.11920929]
[200.15916443 -125.65029907]
[200.02861023 -132.31280518]
[202.87422180 -137.27912903]
[207.11311340 -139.54251099]
[214.06571960 -152.83390808]
[221.01831055 -166.12530518]
[227.97091675 -179.41670227]
[234.92352295 -192.70809937]
[241.87612915 -205.99951172]
[248.82873535 -219.29090881]
[255.78134155 -232.58230591]
[262.61505127 -245.93522644]
[269.32928467 -259.34860229]
[268.58761597 -275.15240479]
[281.20343018 -283.07012939]
[287.91769409 -296.48348999]
[281.53936768 -310.76113892]
[285.88046265 -325.78408813]
[298.89123535 -334.45895386]
[314.42840576 -332.68975830]
[325.15582275 -321.31185913]
[326.00827026 -305.69750977]
[316.58331299 -293.21939087]
[301.33108521 -289.76922607]
[294.61682129 -276.35586548]
[295.83877563 -261.51147461]
[282.74267578 -252.63433838]
[276.02841187 -239.22096252]
[275.84552002 -231.80816650]
[269.07272339 -225.62969971]
[262.12014771 -212.33830261]
[255.16752625 -199.04690552]
[248.21492004 -185.75550842]
[241.26231384 -172.46409607]
[234.30972290 -159.17269897]
[227.35711670 -145.88130188]
[220.40451050 -132.58990479]
[213.69024658 -119.17652130]
[207.21647644 -105.64543915]
[200.74270630 -92.11435699]
[203.05290222 -74.73198700]
[187.81394958 -64.42155457]
[181.58271790 -50.77707672]
[175.35150146 -37.13259506]
[169.12026978 -23.48811531]
[163.01106262 -9.78856564]
[157.02436829 3.96496153]
[157.92178345 8.68573666]
[155.84033203 14.01766396]
[150.57070923 18.09652138]
[144.09693909 31.62760735]
[137.62315369 45.15869141]
[131.14938354 58.68977737]
[124.67561340 72.22086334]
[118.20184326 85.75194550]
[111.72806549 99.28303528]
[109.32867432 114.08988953]
[111.19805145 128.97294617]
[113.06742096 143.85600281]
[114.93679047 158.73905945]
[116.80616760 173.62211609]
[118.67553711 188.50518799]
[125.26982117 201.97795105]
[135.87641907 212.58454895]
[146.48301697 223.19114685]
[164.36428833 227.52603149]
[168.27426147 244.61978149]
[183.57765198 248.63436890]
[187.36381531 263.03970337]
[198.15805054 273.45532227]
[214.19366455 276.88909912]
[218.97958374 292.57434082]
[207.59246826 304.37542725]
[191.74638367 300.15237427]
[187.74244690 284.24954224]
[176.94822693 273.83395386]
[162.41691589 270.56436157]
[157.85867310 255.41400146]
[145.74229431 255.31047058]
[136.66247559 246.69313049]
[135.87641907 233.79776001]
[125.26982117 223.19114685]
[114.66321564 212.58454895]
[107.34913635 214.24414062]
[115.02603912 227.13076782]
[105.14228058 238.41400146]
[91.35711670 232.50051880]
[92.72097015 217.56329346]
[85.40689087 219.22288513]
[80.41661835 233.36845398]
[75.42634583 247.51402283]
[70.43607330 261.65960693]
[79.06794739 274.41879272]
[78.53787231 289.63629150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 18]
[3 16]
[4 15]
[5 14]
[6 13]
[7 12]
[22 173]
[23 172]
[24 171]
[25 170]
[26 143]
[27 142]
[28 141]
[29 140]
[30 139]
[31 138]
[32 45]
[33 44]
[34 43]
[35 42]
[36 41]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 128]
[72 127]
[74 126]
[75 125]
[76 124]
[77 123]
[80 121]
[81 120]
[82 119]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
[93 109]
[94 108]
[96 106]
[97 105]
[144 164]
[145 163]
[146 162]
[148 159]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
