%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAAGAAGUCACGUGGCAGCCGGAAAGCGUGGCGGCUGCUGCUAGAGCCUUUCCCUUUACCGCACCCAAGGAGCUGGAGCGACAACAACGACGUCGUUUCCGUUUCCACCACCUCUUCCUGUUCCCGUCCUUGAGGACGCCGUGCCGGGUCAGUGUUAGCCUCCAGCCCUGGUUGUGGAAGGCGACAGAAGUC\
) } def
/len { sequence length } bind def

/coor [
[103.82781219 130.67279053]
[101.75061035 115.81704712]
[94.79872894 113.00254059]
[82.63527679 121.78037262]
[70.47181702 130.55821228]
[58.30836105 139.33604431]
[46.14490509 148.11386108]
[45.96406555 163.51754761]
[36.85420609 175.71853638]
[22.47683144 180.16319275]
[8.40754795 175.34725952]
[-3.75590825 184.12509155]
[-6.40835667 199.47442627]
[-18.86887550 208.20312500]
[-33.48577881 205.57983398]
[-45.64923477 214.35766602]
[-57.81269073 223.13549805]
[-69.97615051 231.91333008]
[-82.13960266 240.69116211]
[-94.30306244 249.46899414]
[-106.46652222 258.24682617]
[-118.62997437 267.02465820]
[-130.79342651 275.80249023]
[-142.95689392 284.58032227]
[-141.32061768 299.85180664]
[-147.55398560 313.88891602]
[-159.98022461 322.91577148]
[-175.25675964 324.50415039]
[-189.27427673 318.22683716]
[-198.26213074 305.77233887]
[-199.80262756 290.49090576]
[-193.48139954 276.49313354]
[-180.99879456 267.54437256]
[-165.71260071 266.05178833]
[-151.73472595 272.41687012]
[-139.57125854 263.63903809]
[-127.40780640 254.86119080]
[-115.24434662 246.08335876]
[-103.08089447 237.30552673]
[-90.91743469 228.52769470]
[-78.75398254 219.74986267]
[-66.59052277 210.97203064]
[-54.42706680 202.19419861]
[-42.26361084 193.41636658]
[-40.14735794 178.71749878]
[-27.93692780 169.64225769]
[-12.53374004 171.96163940]
[-0.37028316 163.18380737]
[-0.50753140 148.31372070]
[8.24113560 136.06935120]
[22.69113541 131.26821899]
[37.36707306 135.95040894]
[49.53052902 127.17257690]
[61.69398880 118.39475250]
[73.85744476 109.61692047]
[86.02089691 100.83908844]
[97.12506866 90.75457001]
[107.03031158 79.49019623]
[116.93555450 68.22582245]
[126.84079742 56.96144104]
[130.16346741 48.43908310]
[136.99620056 45.59753799]
[147.08071899 34.49337006]
[157.16522217 23.38919830]
[167.24974060 12.28502846]
[177.33425903 1.18085885]
[180.88436890 -14.23689938]
[195.16868591 -18.45682526]
[205.25318909 -29.56099510]
[215.33770752 -40.66516495]
[218.79655457 -49.13317108]
[225.67395020 -51.86483765]
[235.93513489 -62.80595016]
[239.52926636 -71.21743011]
[246.44955444 -73.83851624]
[256.88479614 -84.61376190]
[267.32003784 -95.38899994]
[277.75527954 -106.16423798]
[288.19052124 -116.93947601]
[298.62576294 -127.71472168]
[309.06097412 -138.48995972]
[312.78945923 -146.84275818]
[319.75088501 -149.35258484]
[319.91958618 -164.92851257]
[330.82727051 -175.53401184]
[345.67550659 -175.27720642]
[356.28210449 -185.88380432]
[366.88870239 -196.49040222]
[377.49530029 -207.09700012]
[377.66400146 -222.67292786]
[388.57168579 -233.27842712]
[403.41992188 -233.02162170]
[414.02651978 -243.62821960]
[424.63311768 -254.23481750]
[414.30816650 -259.10034180]
[406.27590942 -269.67395020]
[402.97875977 -284.76638794]
[404.17962646 -299.71826172]
[396.65841675 -314.29095459]
[405.74462891 -327.94277954]
[422.09115601 -326.62991333]
[428.88204956 -311.70291138]
[419.13146973 -298.51739502]
[417.93060303 -283.56555176]
[423.97698975 -279.12802124]
[432.19912720 -291.67379761]
[440.42126465 -304.21957397]
[448.64343262 -316.76531982]
[456.86557007 -329.31109619]
[458.39974976 -344.23242188]
[470.53997803 -353.04235840]
[485.20153809 -349.87393188]
[492.62057495 -336.83715820]
[487.85644531 -322.61383057]
[474.08169556 -316.67590332]
[464.57870483 -305.07019043]
[455.07568359 -293.46444702]
[445.57269287 -281.85873413]
[436.06970215 -270.25299072]
[442.11605835 -265.81549072]
[456.01980591 -271.44448853]
[465.90786743 -283.79507446]
[480.60855103 -281.39935303]
[494.51229858 -287.02838135]
[498.36502075 -303.49200439]
[511.14184570 -314.31134033]
[527.68377686 -315.37701416]
[541.46423340 -306.46691895]
[555.27593994 -312.31805420]
[569.08770752 -318.16915894]
[582.89947510 -324.02029419]
[596.71118164 -329.87142944]
[606.15252686 -343.28015137]
[622.45892334 -341.53881836]
[628.85583496 -326.43875122]
[618.76263428 -313.51361084]
[602.56231689 -316.05969238]
[588.75054932 -310.20855713]
[574.93884277 -304.35742188]
[561.12707520 -298.50628662]
[547.31536865 -292.65518188]
[545.52032471 -279.41870117]
[537.35131836 -268.71371460]
[524.85876465 -263.40377808]
[511.26687622 -264.97561646]
[500.14129639 -273.12460327]
[486.23754883 -267.49560547]
[477.34396362 -255.54765320]
[461.64880371 -257.54074097]
[447.74505615 -251.91172791]
[435.23971558 -243.62821960]
[424.63311768 -233.02162170]
[414.02651978 -222.41502380]
[414.28332520 -207.56680298]
[403.67782593 -196.65910339]
[388.10189819 -196.49040222]
[377.49530029 -185.88380432]
[366.88870239 -175.27720642]
[356.28210449 -164.67059326]
[356.53890991 -149.82237244]
[345.93341064 -138.91468811]
[330.35748291 -138.74598694]
[319.83624268 -128.05471802]
[309.40100098 -117.27947998]
[298.96575928 -106.50424194]
[288.53051758 -95.72900391]
[278.09527588 -84.95375824]
[267.66003418 -74.17852020]
[257.22479248 -63.40327835]
[246.87625122 -52.54475403]
[236.61505127 -41.60364532]
[226.44187927 -30.58065033]
[216.35736084 -19.47648048]
[206.27284241 -8.37231064]
[203.44404602 6.25120211]
[188.43843079 11.26537228]
[178.35391235 22.36954308]
[168.26939392 33.47371292]
[158.18489075 44.57788086]
[148.10037231 55.68205261]
[138.10517883 66.86668396]
[128.19993591 78.13105774]
[118.29468536 89.39543915]
[108.38945007 100.65981293]
[124.63416290 107.66242981]
[137.37368774 121.62952423]
[140.00471497 136.39697266]
[142.63574219 151.16442871]
[153.60739136 163.35275269]
[148.28118896 178.86285400]
[132.13627625 181.73930359]
[121.78115845 169.02302551]
[127.86828613 153.79545593]
[125.23725891 139.02799988]
[122.60623169 124.26055145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 56]
[4 55]
[5 54]
[6 53]
[7 52]
[11 48]
[12 47]
[15 44]
[16 43]
[17 42]
[18 41]
[19 40]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[57 184]
[58 183]
[59 182]
[60 181]
[62 180]
[63 179]
[64 178]
[65 177]
[66 176]
[68 174]
[69 173]
[70 172]
[72 171]
[73 170]
[75 169]
[76 168]
[77 167]
[78 166]
[79 165]
[80 164]
[81 163]
[83 162]
[86 159]
[87 158]
[88 157]
[89 156]
[92 153]
[93 152]
[94 151]
[97 104]
[98 103]
[120 150]
[121 149]
[123 147]
[124 146]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
[186 195]
[187 194]
[188 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
