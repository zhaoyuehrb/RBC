%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUCAGGCGGAGGCAAGCUCAGAGCGCACGGACAGAGCGGUAGCGCGCGCCCGCGCGCGUUCUUAGUACUCUCCCCGGUGACGUGCCUGACCGAGGCCGCGCCAGGGCGCUGUUGCUGCCAAUACAGCUGUCAUGGCGUCCAAGGCGCUGGCUGCGGAGAAGUGGCCGCGGUCUCCAUAGAGCUGGGGGCGGGCGGCCCGGU\
) } def
/len { sequence length } bind def

/coor [
[61.07073593 115.83422089]
[46.39060211 118.91541290]
[31.71047020 121.99660492]
[17.05437851 125.19018555]
[2.42318845 128.49597168]
[-12.20800209 131.80177307]
[-26.83919334 135.10755920]
[-41.41800690 138.63717651]
[-55.94102097 142.38978577]
[-63.47117996 147.56892395]
[-70.71535492 146.08680725]
[-85.29417419 149.61640930]
[-99.87298584 153.14602661]
[-114.45179749 156.67564392]
[-129.03060913 160.20526123]
[-134.67765808 172.43646240]
[-146.17112732 179.08369446]
[-159.20129395 177.91337585]
[-169.02938843 169.57614136]
[-183.66056824 172.88192749]
[-198.29176331 176.18771362]
[-210.04743958 186.77613831]
[-224.16697693 182.03399658]
[-238.79815674 185.33978271]
[-253.42935181 188.64556885]
[-268.06054688 191.95137024]
[-282.69174194 195.25715637]
[-297.32293701 198.56294250]
[-311.95410156 201.86874390]
[-326.12322998 216.20309448]
[-344.32254028 209.67886353]
[-358.84555054 213.43147278]
[-373.36856079 217.18408203]
[-378.82751465 229.50038147]
[-390.21777344 236.32296753]
[-403.26434326 235.35246277]
[-413.21902466 227.16680908]
[-424.81106567 237.93414307]
[-439.00161743 233.40892029]
[-453.58044434 236.93853760]
[-468.15924072 240.46815491]
[-479.65344238 252.16496277]
[-495.46038818 247.79769897]
[-499.31921387 231.85902405]
[-487.26034546 220.74528503]
[-471.68887329 225.88934326]
[-457.11004639 222.35972595]
[-442.53121948 218.83010864]
[-431.98196411 208.31524658]
[-416.74865723 212.58799744]
[-408.61257935 197.87165833]
[-392.02432251 193.50485229]
[-377.12118530 202.66107178]
[-362.59817505 198.90846252]
[-348.07516479 195.15585327]
[-343.69677734 185.91671753]
[-334.76684570 180.50122070]
[-324.11117554 180.90554810]
[-315.25991821 187.23754883]
[-300.62872314 183.93174744]
[-285.99752808 180.62596130]
[-271.36633301 177.32017517]
[-256.73513794 174.01438904]
[-242.10395813 170.70858765]
[-227.47276306 167.40280151]
[-216.76361084 157.05082703]
[-201.59754944 161.55651855]
[-186.96636963 158.25073242]
[-172.33517456 154.94494629]
[-163.97451782 140.35501099]
[-147.32130432 136.24291992]
[-132.56022644 145.62644958]
[-117.98141479 142.09683228]
[-103.40260315 138.56721497]
[-88.82378387 135.03759766]
[-74.24497223 131.50798035]
[-59.69363022 127.86676788]
[-45.17061615 124.11415863]
[-42.01511383 120.52345276]
[-36.56869888 118.87977600]
[-30.14498329 120.47637177]
[-15.51379299 117.17057800]
[-0.88260198 113.86478424]
[13.74858856 110.55899811]
[19.58292198 106.01638031]
[28.62928009 107.31647491]
[43.30941391 104.23528290]
[57.98954391 101.15409088]
[61.29705429 83.62036896]
[71.58102417 69.03918457]
[86.98770142 60.03889084]
[104.73992920 58.24184418]
[121.63775635 63.97198486]
[131.53153992 52.69754410]
[141.42532349 41.42310715]
[144.71214294 25.94707870]
[158.92245483 21.48430252]
[168.81623840 10.20986366]
[178.71002197 -1.06457531]
[188.60382080 -12.33901405]
[198.41091919 -23.68893242]
[208.13078308 -35.11366272]
[217.85063171 -46.53839111]
[227.57048035 -57.96311951]
[237.29034424 -69.38784790]
[240.18777466 -87.57041168]
[256.93258667 -92.81520081]
[266.47619629 -104.38753510]
[276.01983643 -115.95987701]
[285.56347656 -127.53221130]
[295.10711670 -139.10455322]
[304.65075684 -150.67687988]
[314.19439697 -162.24922180]
[323.73803711 -173.82156372]
[333.28167725 -185.39390564]
[335.52276611 -206.70257568]
[355.13781738 -213.11433411]
[364.13952637 -225.11305237]
[373.14123535 -237.11177063]
[382.14294434 -249.11048889]
[379.66226196 -264.71887207]
[389.01245117 -277.46054077]
[404.64617920 -279.77606201]
[417.28826904 -270.29168701]
[419.43835449 -254.63432312]
[409.82086182 -242.09323120]
[394.14166260 -240.10879517]
[385.13995361 -228.11007690]
[376.13824463 -216.11134338]
[367.13653564 -204.11262512]
[369.80780029 -195.63652039]
[368.25277710 -186.74682617]
[362.69604492 -179.46189880]
[354.28482056 -175.49456787]
[344.85400391 -175.85026550]
[335.31036377 -164.27792358]
[325.76672363 -152.70558167]
[316.22308350 -141.13325500]
[306.67944336 -129.56091309]
[297.13583374 -117.98857880]
[287.59219360 -106.41623688]
[278.04855347 -94.84390259]
[268.50491333 -83.27156067]
[269.34860229 -71.20147705]
[261.48822021 -61.48168564]
[248.71507263 -59.66799927]
[238.99520874 -48.24326706]
[229.27536011 -36.81853867]
[219.55551147 -25.39380836]
[209.83564758 -13.96907806]
[207.89477539 -6.83410692]
[199.87825012 -2.44522691]
[189.98446655 8.82921219]
[180.09068298 20.10365105]
[170.19689941 31.37808990]
[167.61775208 46.04769516]
[152.69976807 51.31689453]
[142.80598450 62.59133148]
[132.91218567 73.86576843]
[138.76527405 83.76841736]
[141.71412659 94.88710022]
[141.53785706 106.38882446]
[138.24964905 117.41191864]
[132.09585571 127.13054657]
[139.97410583 131.76303101]
[141.69543457 138.95413208]
[151.06060791 150.67135620]
[160.42578125 162.38858032]
[169.79096985 174.10580444]
[179.15614319 185.82304382]
[188.52131653 197.54026794]
[205.81964111 203.84651184]
[207.78044128 221.28356934]
[217.32408142 232.85591125]
[226.86770630 244.42825317]
[236.41134644 256.00057983]
[245.95498657 267.57293701]
[255.49862671 279.14526367]
[265.04226685 290.71759033]
[280.79611206 291.97933960]
[290.97979736 304.06518555]
[289.55157471 319.80480957]
[277.35873413 329.86016846]
[261.63510132 328.26559448]
[251.70919800 315.96713257]
[253.46992493 300.26123047]
[243.92628479 288.68890381]
[234.38264465 277.11654663]
[224.83900452 265.54421997]
[215.29537964 253.97187805]
[205.75173950 242.39955139]
[196.20809937 230.82720947]
[184.19816589 229.35743713]
[176.15270996 219.79026794]
[176.80409241 206.90544128]
[167.43891907 195.18821716]
[158.07373047 183.47099304]
[148.70855713 171.75376892]
[139.34338379 160.03652954]
[129.97819519 148.31930542]
[120.52351379 136.67417908]
[107.16227722 141.41149902]
[92.98609924 141.43688965]
[79.60797882 136.74745178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 88]
[2 87]
[3 86]
[4 84]
[5 83]
[6 82]
[7 81]
[8 78]
[9 77]
[11 76]
[12 75]
[13 74]
[14 73]
[15 72]
[19 69]
[20 68]
[21 67]
[23 65]
[24 64]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[31 55]
[32 54]
[33 53]
[37 50]
[39 48]
[40 47]
[41 46]
[93 159]
[94 158]
[95 157]
[97 155]
[98 154]
[99 153]
[100 152]
[101 150]
[102 149]
[103 148]
[104 147]
[105 146]
[107 143]
[108 142]
[109 141]
[110 140]
[111 139]
[112 138]
[113 137]
[114 136]
[115 135]
[117 130]
[118 129]
[119 128]
[120 127]
[164 201]
[166 200]
[167 199]
[168 198]
[169 197]
[170 196]
[171 195]
[173 192]
[174 191]
[175 190]
[176 189]
[177 188]
[178 187]
[179 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
