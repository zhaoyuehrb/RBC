%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCCCCGCUUCUGCCUGCGCUGUGAACCCCCCCCCAGCCGCCGGCACGGCCCCGCCCCCGCUGCCCCGGUGGUGGCCCACGGCCCCCCGGCUGCCCGUGGUCAAA\
) } def
/len { sequence length } bind def

/coor [
[80.01677704 104.65292358]
[65.17515564 102.47894287]
[50.33353043 100.30496216]
[38.75314713 112.53112793]
[22.34003067 115.47342682]
[7.53021717 108.17720795]
[0.01328192 93.66399384]
[-14.88529301 91.92259979]
[-29.78386879 90.18120575]
[-34.02051544 92.22520447]
[-38.24955750 92.66408539]
[-41.93668365 91.71671295]
[-44.68431473 89.76155090]
[-46.27383041 87.27358246]
[-60.86950302 83.81434631]
[-75.46517181 80.35510254]
[-90.06085205 76.89586639]
[-105.27337646 81.24206543]
[-115.87324524 70.77822113]
[-130.46891785 67.31897736]
[-145.06459045 63.85974121]
[-159.70903015 60.61314774]
[-174.39913940 57.57988358]
[-189.08924866 54.54661942]
[-204.16893005 59.33343506]
[-215.06864929 49.18230438]
[-226.44836426 59.73132324]
[-241.85926819 61.54339600]
[-255.37556458 53.92174911]
[-261.79995728 39.79705811]
[-258.66210938 24.60055733]
[-247.16864014 14.17560959]
[-231.73898315 12.53081989]
[-218.30616760 20.29864311]
[-212.03538513 34.49219513]
[-198.00643921 29.48842049]
[-186.05598450 39.85651016]
[-171.36587524 42.88977432]
[-156.67576599 45.92303848]
[-149.37599182 44.16623306]
[-141.60534668 49.26406860]
[-127.00967407 52.72330475]
[-112.41400146 56.18254471]
[-98.24545288 51.58891678]
[-86.60160828 62.30019379]
[-72.00593567 65.75942993]
[-57.41026306 69.21867371]
[-42.81459045 72.67790985]
[-28.04247475 75.28263092]
[-13.14389992 77.02402496]
[1.75467563 78.76541901]
[9.91896725 68.09415436]
[22.40538788 62.84484100]
[35.95798874 64.50345612]
[46.98428345 72.73914337]
[52.50750732 85.46334076]
[67.34912872 87.63732147]
[82.19075775 89.81129456]
[101.49077606 79.53646088]
[119.09787750 92.50000000]
[134.09786987 92.50000000]
[149.09786987 92.50000000]
[164.09786987 92.50000000]
[179.73086548 82.90642548]
[194.61138916 92.08278656]
[209.60504150 91.64651489]
[224.95237732 81.60232544]
[240.09350586 90.34200287]
[255.06811523 89.46982574]
[270.04275513 88.59765625]
[285.01736450 87.72548676]
[293.55517578 84.05445099]
[300.43899536 87.05216217]
[315.43264771 86.61589050]
[324.07363892 83.19473267]
[330.86734009 86.39138794]
[345.86734009 86.39138794]
[360.86734009 86.39138794]
[375.86734009 86.39138794]
[391.70645142 80.34504700]
[401.90121460 93.89138794]
[391.70645142 107.43772888]
[375.86734009 101.39138794]
[360.86734009 101.39138794]
[345.86734009 101.39138794]
[330.86734009 101.39138794]
[315.86892700 101.60954285]
[300.87527466 102.04581451]
[285.88952637 102.70010376]
[270.91491699 103.57228088]
[255.94029236 104.44445038]
[240.96566772 105.31661987]
[232.60601807 114.19350433]
[220.03266907 114.95621490]
[210.04130554 106.64016724]
[195.04765320 107.07643890]
[186.43336487 115.70642853]
[173.84313965 116.10311890]
[164.09786987 107.50000000]
[149.09786987 107.50000000]
[134.09786987 107.50000000]
[119.09787750 107.50000000]
[115.19496918 113.78737640]
[109.31539154 118.28119659]
[102.22401428 120.39688110]
[94.84331512 119.85919189]
[88.13343048 116.73808289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 58]
[2 57]
[3 56]
[7 51]
[8 50]
[9 49]
[14 48]
[15 47]
[16 46]
[17 45]
[19 43]
[20 42]
[21 41]
[22 39]
[23 38]
[24 37]
[26 35]
[60 102]
[61 101]
[62 100]
[63 99]
[65 96]
[66 95]
[68 92]
[69 91]
[70 90]
[71 89]
[73 88]
[74 87]
[76 86]
[77 85]
[78 84]
[79 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
