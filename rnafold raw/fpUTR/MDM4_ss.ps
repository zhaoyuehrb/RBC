%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUGGGAGGCCGGAAGUUGCGGCUUCAUUACUCGCCAUUUCAAAAUGCUGCCGAGGCCCUAGGAUCUGUGACUGCCACCCCUCCCCCCACCCGGGCUCGGCGGGGGAGCGACUCAUGGAGCUGCCGUAAGUUUUACCAACAGACUGCAGUUUCUUCACUACCAAA\
) } def
/len { sequence length } bind def

/coor [
[98.54325104 221.38063049]
[96.57369995 206.51049805]
[94.60415649 191.64036560]
[85.26271057 180.03921509]
[91.12101746 165.34259033]
[89.15146637 150.47245789]
[74.63259125 146.70385742]
[65.67940521 158.73883057]
[56.72621918 170.77378845]
[47.77303314 182.80876160]
[38.81984329 194.84371948]
[29.86665726 206.87869263]
[20.91347122 218.91366577]
[24.70084381 234.08566284]
[17.80332947 248.11985779]
[3.47772217 254.38969421]
[-11.51186466 249.93478394]
[-20.08780479 236.85856628]
[-18.20080376 221.33525085]
[-6.74184418 210.69447327]
[8.87850380 209.96047974]
[17.83168983 197.92550659]
[26.78487778 185.89053345]
[35.73806381 173.85557556]
[44.69124985 161.82060242]
[53.64443588 149.78564453]
[62.59762573 137.75067139]
[59.51705551 130.91253662]
[45.84069061 137.07345581]
[39.67997360 123.39700317]
[53.35591507 117.23626709]
[50.27534485 110.39813232]
[35.32905960 109.12983704]
[20.38277435 107.86154938]
[5.43648863 106.59326172]
[-9.52106476 105.46561432]
[-24.50448036 104.76042175]
[-39.49850845 104.33721161]
[-54.49253464 103.91400146]
[-69.48656464 103.49078369]
[-83.64926147 111.75819397]
[-97.75428772 103.39276886]
[-97.29160309 87.00015259]
[-82.73717499 79.44365692]
[-69.06335449 88.49675751]
[-54.06932449 88.91996765]
[-39.07529449 89.34318542]
[-24.08126640 89.76639557]
[-20.02951813 87.16511536]
[-14.29269028 87.11098480]
[-8.53415203 90.49811554]
[-1.62325239 87.78881073]
[6.70477772 91.64698029]
[21.65106392 92.91526794]
[36.59734726 94.18355560]
[51.54363251 95.45184326]
[61.68278122 88.65975189]
[72.30810547 85.51634216]
[61.07325363 75.57762909]
[45.20370483 69.61157227]
[46.54347992 52.71064377]
[63.15479660 49.31941605]
[71.01196289 64.34277344]
[82.24681854 74.28148651]
[100.72442627 66.38658905]
[121.70343781 71.28845215]
[126.95140839 57.23644638]
[132.19938660 43.18444061]
[137.44735718 29.13243866]
[142.69532776 15.08043575]
[147.94329834 1.02843189]
[153.19126892 -13.02357197]
[149.71049500 -31.08557510]
[163.62899780 -41.74399185]
[168.61170959 -55.89222717]
[173.59442139 -70.04045868]
[167.01672363 -84.16036224]
[172.27143860 -98.43770599]
[185.77314758 -104.62152100]
[190.75585938 -118.76976013]
[195.73857117 -132.91799927]
[200.72128296 -147.06622314]
[198.00749207 -162.65295410]
[209.53320312 -172.08732605]
[214.51591492 -186.23556519]
[209.88217163 -205.82531738]
[225.01119995 -217.82684326]
[229.45820618 -232.15248108]
[233.90521240 -246.47813416]
[229.75894165 -262.34445190]
[241.61500549 -273.67431641]
[257.27688599 -268.81253052]
[260.63299561 -252.76046753]
[248.23085022 -242.03112793]
[243.78385925 -227.70549011]
[239.33685303 -213.37983704]
[244.91172791 -204.75395203]
[244.79286194 -194.26391602]
[238.77693176 -185.40217590]
[228.66413879 -181.25285339]
[223.68142700 -167.10461426]
[226.75161743 -152.52987671]
[214.86952209 -142.08351135]
[209.88681030 -127.93527985]
[204.90409851 -113.78704834]
[199.92138672 -99.63880920]
[206.56842041 -86.35903168]
[201.71678162 -71.93972778]
[187.74266052 -65.05774689]
[182.75994873 -50.90951538]
[177.77723694 -36.76127625]
[182.72329712 -25.69270897]
[178.65476990 -13.84715652]
[167.24327087 -7.77560043]
[161.99530029 6.27640295]
[156.74732971 20.32840729]
[151.49935913 34.38040924]
[146.25138855 48.43241501]
[141.00341797 62.48441696]
[135.75544739 76.53642273]
[141.65823364 90.32616425]
[155.44798279 96.22895050]
[169.23771667 102.13174438]
[183.02746582 108.03453064]
[196.81721497 113.93731689]
[212.54872131 112.25492096]
[221.20433044 124.37638092]
[234.99407959 130.27915955]
[249.51615906 124.64472198]
[263.41683960 130.82742310]
[268.69891357 144.70674133]
[282.48867798 150.60952759]
[296.27841187 156.51231384]
[311.64605713 151.90638733]
[324.74606323 161.16760254]
[325.52917480 177.19152832]
[313.39468384 187.68598938]
[297.65112305 184.60054016]
[290.37561035 170.30206299]
[276.58587646 164.39927673]
[262.79614258 158.49647522]
[249.10778809 164.25537109]
[235.03894043 158.46554565]
[229.09129333 144.06890869]
[215.30154419 138.16612244]
[200.55638123 140.27072144]
[190.91442871 127.72706604]
[177.12467957 121.82427979]
[163.33493042 115.92148590]
[149.54519653 110.01869965]
[135.75544739 104.11591339]
[133.80632019 121.78483582]
[122.87078094 138.10702515]
[104.02159882 148.50289917]
[105.99114990 163.37304688]
[115.47346497 176.03779602]
[109.47428894 189.67082214]
[111.44384003 204.54095459]
[113.41338348 219.41108704]
[127.11950684 226.68582153]
[133.90173340 240.64222717]
[131.15217590 255.91374207]
[119.92808533 266.62820435]
[104.54535675 268.66564941]
[90.91896057 261.24264526]
[84.28852081 247.21348572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 159]
[2 158]
[3 157]
[5 155]
[6 154]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[13 21]
[32 56]
[33 55]
[34 54]
[35 53]
[36 51]
[37 48]
[38 47]
[39 46]
[40 45]
[58 64]
[59 63]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
[74 111]
[75 110]
[76 109]
[79 106]
[80 105]
[81 104]
[82 103]
[84 101]
[85 100]
[87 96]
[88 95]
[89 94]
[121 151]
[122 150]
[123 149]
[124 148]
[125 147]
[127 145]
[128 144]
[131 141]
[132 140]
[133 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
