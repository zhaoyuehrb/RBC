%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGGGCGUGGGCCCUGGCAAGUGCACUCCUCAGCCAAUCAGCGUCCUGCCCGGCUGGUGGAUUCGGUUACAAGCCCAAGAUCACCCCAUACUCCAGCCUCUUUCCUCCUCCUCCCGCAGCUCCAUUCAUUGGUCCCGCCGCACCGGGCCUGCUGGGCUCCGCUUCCGUUCCACUGCUCAGCUGCCGCCUGGUGGGGCCACCAAGGGCAGGCAUCCCAGGGGCUUUGUCUGACUGGACUGGGCCAGUGCAGA\
) } def
/len { sequence length } bind def

/coor [
[8.08619595 559.54400635]
[-6.32845306 563.29675293]
[-2.39494395 578.62121582]
[-13.14142513 588.93444824]
[-16.99383545 603.43127441]
[-20.84624481 617.92816162]
[-24.69865417 632.42498779]
[-28.55106544 646.92187500]
[-23.75397873 662.60369873]
[-35.13270187 674.41290283]
[-50.98177719 670.20111084]
[-54.99703598 654.30114746]
[-43.04792404 643.06945801]
[-39.19551468 628.57257080]
[-35.34310532 614.07574463]
[-31.49069405 599.57885742]
[-27.63828468 585.08203125]
[-31.84734344 570.79449463]
[-20.82531166 559.44439697]
[-31.47538948 549.03082275]
[-35.50995255 534.58862305]
[-31.74902153 519.96936035]
[-21.10565948 509.12429810]
[-6.36680555 505.03610229]
[-2.51439548 490.53924561]
[1.33801425 476.04238892]
[5.19042397 461.54553223]
[9.04283428 447.04867554]
[12.89524364 432.55181885]
[7.42073154 415.86627197]
[20.55608559 402.94299316]
[24.22890091 388.39959717]
[27.90171814 373.85620117]
[31.57453346 359.31280518]
[35.24734879 344.76940918]
[38.83015442 330.20355225]
[42.32281494 315.61584473]
[45.81547546 301.02813721]
[41.25431061 286.84912109]
[51.99222946 275.22982788]
[55.48488998 260.64212036]
[58.97755051 246.05441284]
[62.47021103 231.46669006]
[65.87258911 216.85766602]
[69.18455505 202.22787476]
[61.17029572 194.15287781]
[58.00444794 183.10076904]
[60.58098221 171.77384949]
[68.37494659 162.99961853]
[79.54454041 159.02510071]
[83.21735382 144.48170471]
[86.89017487 129.93830872]
[90.56298828 115.39491272]
[83.44095612 102.19351959]
[69.26963043 97.27687836]
[55.09829712 92.36022949]
[40.92696762 87.44358826]
[26.75563431 82.52694702]
[12.58430386 77.61029816]
[-7.58817673 89.84642792]
[-29.92393875 83.11681366]
[-39.75235748 62.25440979]
[-54.34006882 58.76174927]
[-68.92778015 55.26908875]
[-83.51549530 51.77643204]
[-102.58755493 58.35968781]
[-115.99282837 44.40274429]
[-130.66247559 41.27196884]
[-145.33210754 38.14119720]
[-160.00173950 35.01042557]
[-176.75401306 37.61768341]
[-183.89686584 22.24186134]
[-171.09927368 11.12169933]
[-156.87097168 20.34078789]
[-142.20133972 23.47155952]
[-127.53170013 26.60233307]
[-112.86206055 29.73310471]
[-104.85174561 23.44330597]
[-94.48480988 22.56784058]
[-85.14762115 27.63404655]
[-80.02283478 37.18872070]
[-65.43511963 40.68137741]
[-50.84741211 44.17403793]
[-36.25970078 47.66669846]
[-32.25632095 41.99729919]
[-26.97390938 37.46189117]
[-20.72485352 34.34278488]
[-13.88217926 32.83812332]
[-6.85728121 33.04932022]
[-0.07518435 34.97429657]
[6.05116510 38.50696945]
[11.14604473 43.44301987]
[14.89399147 49.49172211]
[17.05932617 56.29301834]
[17.50094795 63.43896866]
[31.67227936 68.35561371]
[45.84360886 73.27225494]
[60.01493835 78.18890381]
[74.18627167 83.10554504]
[88.35760498 88.02218628]
[78.27825165 76.91333008]
[64.96863556 69.99567413]
[54.68419647 59.07640839]
[48.57518387 45.37677383]
[47.32484436 30.42897415]
[51.07301712 15.90481663]
[59.40050125 3.42871761]
[71.37592316 -5.60396004]
[85.65991974 -10.18297768]
[100.65493774 -9.79620457]
[114.68387604 -4.48689938]
[126.17771912 5.15113068]
[133.85095215 18.03994179]
[136.84538269 32.73801804]
[134.82611084 47.60147858]
[128.01896667 60.96796036]
[117.18688965 71.34143829]
[110.63037872 84.83262634]
[122.85227966 76.13635254]
[130.13322449 59.20895767]
[147.66827393 58.26076508]
[159.78167725 49.41399384]
[171.89509583 40.56722260]
[184.00849915 31.72045135]
[169.35275269 28.52525711]
[161.15260315 15.96510506]
[164.12318420 1.26219332]
[176.55641174 -7.12917519]
[191.30305481 -4.38389015]
[199.88366699 7.91948509]
[197.36422729 22.70655632]
[210.10021973 14.78225708]
[222.83621216 6.85795784]
[235.57220459 -1.06634212]
[248.30819702 -8.99064159]
[250.15036011 -19.67528725]
[257.40762329 -27.43295479]
[267.51983643 -29.87900734]
[277.10751343 -26.44343185]
[290.03561401 -34.05028915]
[302.96371460 -41.65714645]
[310.93392944 -55.32411575]
[325.82699585 -55.10984802]
[338.75509644 -62.71670532]
[351.68319702 -70.32356262]
[364.61129761 -77.93041992]
[377.53939819 -85.53727722]
[390.46749878 -93.14413452]
[403.39559937 -100.75099182]
[416.32369995 -108.35785675]
[420.39508057 -126.88205719]
[436.45266724 -136.36003113]
[454.02371216 -131.15443420]
[466.75970459 -139.07873535]
[479.49569702 -147.00303650]
[492.23168945 -154.92733765]
[504.96768188 -162.85163879]
[517.70367432 -170.77593994]
[530.43969727 -178.70024109]
[527.02764893 -193.45275879]
[528.59313965 -208.51356506]
[534.96624756 -222.24897766]
[545.45574951 -233.16909790]
[558.92382812 -240.08937073]
[573.90948486 -242.25914001]
[588.78729248 -239.44305420]
[601.94335938 -231.94657898]
[611.95056152 -220.58287048]
[617.72351074 -206.58457947]
[618.63592529 -191.47013855]
[614.58880615 -176.87905884]
[606.02124023 -164.39405823]
[593.86254883 -155.36941528]
[579.43151855 -150.78405762]
[564.29364014 -151.13537598]
[550.09094238 -156.38526917]
[538.36395264 -165.96424866]
[525.62799072 -158.03994751]
[512.89196777 -150.11564636]
[500.15600586 -142.19134521]
[487.42001343 -134.26704407]
[474.68402100 -126.34274292]
[461.94802856 -118.41844177]
[461.83471680 -107.04210663]
[456.19622803 -97.02317810]
[446.32693481 -90.89662933]
[434.60739136 -90.27593231]
[423.93054199 -95.42975616]
[411.00244141 -87.82289886]
[398.07434082 -80.21604156]
[385.14624023 -72.60918427]
[372.21817017 -65.00232697]
[359.29006958 -57.39546585]
[346.36196899 -49.78860855]
[333.43386841 -42.18175125]
[326.38833618 -29.05887604]
[310.57055664 -28.72904968]
[297.64248657 -21.12219238]
[284.71438599 -13.51533413]
[276.40762329 3.96309280]
[256.23248291 3.74534941]
[243.49650574 11.66964912]
[230.76051331 19.59394836]
[218.02452087 27.51824951]
[205.28852844 35.44254684]
[192.85527039 43.83385849]
[180.74186707 52.68062973]
[168.62844849 61.52740097]
[156.51504517 70.37416840]
[154.35093689 82.25801849]
[144.35543823 89.73017120]
[131.54855347 88.35825348]
[119.32665253 97.05452728]
[134.25836182 95.62482452]
[147.08924866 103.39453125]
[152.74156189 117.28882599]
[148.97843933 131.80911255]
[137.28909302 141.20907593]
[122.29953766 141.76873779]
[109.94179535 133.26660156]
[105.10638428 119.06772614]
[101.43357086 133.61112976]
[97.76075745 148.15452576]
[94.08793640 162.69792175]
[104.40622711 178.61190796]
[99.86549377 196.69671631]
[83.81435394 205.53984070]
[80.50238037 220.16963196]
[81.65904236 229.20213318]
[77.05792236 234.95935059]
[73.56526184 249.54707336]
[70.07260132 264.13476562]
[66.57994080 278.72250366]
[70.89128876 293.94494629]
[60.40318680 304.52081299]
[56.91052628 319.10852051]
[53.41786575 333.69622803]
[54.46272278 342.74234009]
[49.79074860 348.44223022]
[46.11793137 362.98562622]
[42.44511414 377.52902222]
[38.77230072 392.07241821]
[35.09948349 406.61581421]
[41.02178955 418.05368042]
[37.68249893 430.07833862]
[27.39210320 436.40420532]
[23.53969383 450.90106201]
[19.68728447 465.39794922]
[15.83487415 479.89480591]
[11.98246384 494.39166260]
[8.13005447 508.88851929]
[18.89506149 519.75415039]
[22.75057602 534.45214844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 19]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[24 251]
[25 250]
[26 249]
[27 248]
[28 247]
[29 246]
[31 243]
[32 242]
[33 241]
[34 240]
[35 239]
[36 237]
[37 236]
[38 235]
[40 233]
[41 232]
[42 231]
[43 230]
[44 228]
[45 227]
[50 224]
[51 223]
[52 222]
[53 221]
[54 100]
[55 99]
[56 98]
[57 97]
[58 96]
[59 95]
[62 84]
[63 83]
[64 82]
[65 81]
[67 77]
[68 76]
[69 75]
[70 74]
[118 213]
[119 212]
[121 209]
[122 208]
[123 207]
[124 206]
[131 205]
[132 204]
[133 203]
[134 202]
[135 201]
[139 199]
[140 198]
[141 197]
[143 195]
[144 194]
[145 193]
[146 192]
[147 191]
[148 190]
[149 189]
[150 188]
[153 183]
[154 182]
[155 181]
[156 180]
[157 179]
[158 178]
[159 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
