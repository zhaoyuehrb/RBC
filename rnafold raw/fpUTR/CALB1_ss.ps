%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGGAGAGAACUCUGGAGGAACGCUGAGCUGAGCAGCACCGAGGACAGCGCCCGGCAGCGCCCGCGCCCAGGUCUCCCUCCGCAGCCCUGACUCGCGCACACGCUGAGCUUUUGCUCACUCCCCCUCGCGCGGACACAGACACACGCAUAUUCACACACCCAGACACACACCCCGCUGUACA\
) } def
/len { sequence length } bind def

/coor [
[157.05366516 521.51068115]
[155.52796936 506.58850098]
[146.53627014 494.71420288]
[152.82977295 480.19860840]
[151.30407715 465.27642822]
[149.77838135 450.35421753]
[136.17980957 446.84060669]
[124.57479095 438.87628174]
[116.37097168 427.40255737]
[112.57189178 413.78784180]
[113.65426636 399.66455078]
[119.50823212 386.73330688]
[129.44815063 376.55813599]
[142.29283142 370.37744141]
[141.02075195 355.43145752]
[139.74865723 340.48550415]
[138.47656250 325.53955078]
[137.20448303 310.59356689]
[125.68708801 301.21887207]
[124.18409729 286.07965088]
[134.09524536 274.06271362]
[124.68200684 271.54016113]
[116.67318726 267.01663208]
[110.45124817 261.00320435]
[106.23976898 254.07162476]
[92.96248627 261.05114746]
[79.68520355 268.03067017]
[66.40791321 275.01019287]
[63.26158524 290.32797241]
[50.97323227 299.99908447]
[35.34504318 299.45712280]
[23.75617218 288.95797729]
[21.67852592 273.45901489]
[30.09310913 260.27841187]
[45.02681351 255.63960266]
[59.42839432 261.73291016]
[72.70568085 254.75338745]
[85.98296356 247.77386475]
[99.26024628 240.79434204]
[98.72893524 226.54252625]
[104.55207062 213.37962341]
[115.65663910 204.01647949]
[112.37206268 189.38050842]
[109.08748627 174.74453735]
[105.80290985 160.10856628]
[102.51833344 145.47261047]
[81.33200836 141.54040527]
[64.32482910 128.30868530]
[55.30414581 108.73957825]
[56.28939438 87.21397400]
[42.78276443 80.68932343]
[29.27613640 74.16468048]
[15.76950741 67.64003754]
[3.34021235 71.14163208]
[-7.78246021 65.41136932]
[-11.87445545 54.01273727]
[-25.26834297 47.25968170]
[-38.66223145 40.50662613]
[-55.52748489 38.77471924]
[-58.53203201 22.08912659]
[-43.33026123 14.58296680]
[-31.90917397 27.11273766]
[-18.51528740 33.86579132]
[-5.12139893 40.61885071]
[12.30966568 38.67369843]
[22.29415131 54.13341141]
[35.80078125 60.65805435]
[49.30740738 67.18270111]
[62.81403732 73.70734406]
[62.97400284 61.02443314]
[66.86154938 47.62818527]
[61.38707733 33.66286469]
[55.91260910 19.69754219]
[50.43813705 5.73222113]
[38.19797134 -4.29219341]
[40.75655746 -18.96539688]
[35.28208923 -32.93071747]
[20.23233795 -36.71021271]
[10.30421448 -48.63547897]
[9.31528568 -64.12100983]
[17.64581490 -77.21230316]
[32.09254456 -82.87548065]
[47.10041046 -78.93295288]
[56.89858246 -66.90068054]
[57.71946716 -51.40533829]
[49.24740982 -38.40518570]
[54.72188187 -24.43986511]
[66.57047272 -15.41434479]
[64.40345764 0.25775194]
[69.87792969 14.22307301]
[75.35239410 28.18839455]
[80.82686615 42.15371323]
[88.32254028 41.89904022]
[87.81343842 26.90768242]
[102.80480957 26.39883041]
[103.31388855 41.38969040]
[110.80956268 41.13501358]
[115.32352448 26.83032608]
[119.83748627 12.52563572]
[115.76548004 -3.35991812]
[127.67441559 -14.63419724]
[143.31340027 -9.69918919]
[146.59439087 6.36839151]
[134.14218140 17.03959656]
[129.62821960 31.34428596]
[125.11425781 45.64897537]
[138.20947266 52.96440125]
[148.02362061 41.62057877]
[157.83778381 30.27675629]
[167.65194702 18.93293381]
[177.46609497 7.58911085]
[180.02415466 -8.60929585]
[195.42642212 -14.23978901]
[207.82835388 -3.51020145]
[204.47190857 12.54178810]
[188.80992126 17.40326881]
[178.99575806 28.74709129]
[169.18161011 40.09091187]
[159.36744690 51.43473434]
[149.55328369 62.77855682]
[155.85696411 80.27745819]
[156.46391296 98.04443359]
[151.80860901 114.34877014]
[142.81588745 127.74604034]
[130.77001953 137.20585632]
[117.15430450 142.18803406]
[120.43888092 156.82398987]
[123.72345734 171.45996094]
[127.00803375 186.09593201]
[130.29260254 200.73190308]
[157.02836609 208.35643005]
[170.87353516 236.33546448]
[185.84704590 237.22647095]
[200.82055664 238.11747742]
[208.20307922 224.75854492]
[220.65570068 215.93272400]
[235.70593262 213.39239502]
[250.36553955 217.64193726]
[261.72384644 227.83760071]
[267.52566528 241.95501709]
[266.61904907 257.19119263]
[259.18395996 270.52093506]
[246.69668579 279.29763794]
[231.63656616 281.77868652]
[216.99380493 277.47146606]
[205.67572021 267.23117065]
[199.92955017 253.09098816]
[184.95603943 252.19998169]
[169.98252869 251.30897522]
[164.74719238 256.67938232]
[177.46051025 264.64001465]
[192.02398682 268.23242188]
[199.06095886 281.47933960]
[193.88456726 295.55786133]
[179.94245911 301.09121704]
[166.52058411 294.39395142]
[162.55838013 279.92666626]
[154.27653503 267.42022705]
[149.04121399 272.79061890]
[160.84066772 282.95971680]
[161.91783142 298.13516235]
[152.15043640 309.32150269]
[153.42253113 324.26745605]
[154.69462585 339.21340942]
[155.96670532 354.15936279]
[157.23880005 369.10534668]
[172.58296204 373.87203979]
[184.89659119 384.13375854]
[192.31584167 398.29888916]
[193.73249817 414.18783569]
[188.95935059 429.36862183]
[178.75439453 441.52893066]
[164.70059204 448.82852173]
[166.22628784 463.75073242]
[167.75198364 478.67291260]
[176.85281372 491.61453247]
[170.45018005 505.06280518]
[171.97587585 519.98498535]
[185.01594543 528.61578369]
[189.40788269 543.62396240]
[183.07792664 557.92309570]
[169.01489258 564.76159668]
[153.85893250 560.91052246]
[144.76620483 548.18829346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[4 175]
[5 174]
[6 173]
[14 166]
[15 165]
[16 164]
[17 163]
[18 162]
[21 159]
[25 39]
[26 38]
[27 37]
[28 36]
[42 130]
[43 129]
[44 128]
[45 127]
[46 126]
[50 69]
[51 68]
[52 67]
[53 66]
[56 64]
[57 63]
[58 62]
[71 92]
[72 91]
[73 90]
[74 89]
[76 87]
[77 86]
[97 106]
[98 105]
[99 104]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
[132 149]
[133 148]
[134 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
