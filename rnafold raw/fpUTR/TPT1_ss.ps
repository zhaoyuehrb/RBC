%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGUGCCACGUCACCGCCUGCGUCGCUUCCGGAGGCGCAGCGGGCGAUGACGUAGAGGGACGUGCCCUCUAUAUGAGGUUGGGGAGCGGCUGAGUCGGCCUUUUCCGCCCGCUCCCCCCUCCCCCCGAGCGCCGCUCCGGCUGCACCGCGCUCGCUCCGAGUUUCAGGCUCGUGCUAAGCUAGCGCCGUCGUCGUCUCCCUUCAGUCGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[154.77192688 179.22463989]
[153.19427490 172.33093262]
[153.22230530 165.53353882]
[154.73387146 159.18774414]
[157.53218079 153.59953308]
[145.63188171 144.46810913]
[133.73158264 135.33670044]
[121.83128357 126.20527649]
[89.88034821 140.54994202]
[54.18091583 118.67762756]
[42.02006531 127.45906830]
[29.85921669 136.24050903]
[17.69836617 145.02195740]
[5.53751516 153.80339050]
[-6.62333536 162.58483887]
[-13.28181458 176.93667603]
[-28.12975502 178.11479187]
[-40.29060364 186.89622498]
[-52.45145416 195.67767334]
[-64.61230469 204.45910645]
[-76.77315521 213.24055481]
[-88.93400574 222.02198792]
[-101.09485626 230.80343628]
[-103.74275208 246.15356445]
[-116.20067596 254.88595581]
[-130.81835938 252.26699829]
[-142.97920227 261.04843140]
[-155.14006042 269.82989502]
[-167.30090332 278.61132812]
[-179.46176147 287.39276123]
[-185.67813110 302.56802368]
[-201.96263123 304.50372314]
[-211.56317139 291.20855713]
[-204.60354614 276.35943604]
[-188.24320984 275.23190308]
[-176.08235168 266.45046997]
[-163.92150879 257.66903687]
[-151.76065063 248.88758850]
[-139.59980774 240.10614014]
[-137.48791504 225.40664673]
[-125.28017426 216.32777405]
[-109.87629700 218.64257812]
[-97.71544647 209.86114502]
[-85.55459595 201.07969666]
[-73.39374542 192.29826355]
[-61.23289871 183.51681519]
[-49.07204819 174.73538208]
[-36.91119766 165.95393372]
[-31.12254333 152.23020935]
[-15.40477753 150.42398071]
[-3.24392653 141.64254761]
[8.91692352 132.86109924]
[21.07777405 124.07966614]
[33.23862457 115.29821777]
[45.39947510 106.51677704]
[42.90224838 91.72611237]
[28.53240395 87.42406464]
[14.16256142 83.12201691]
[-0.20728146 78.81996918]
[-14.57712460 74.51792145]
[-28.94696617 70.21586609]
[-43.69366837 76.53365326]
[-57.75878525 68.81665039]
[-60.35276031 52.98469543]
[-49.48572159 41.18270493]
[-33.49393082 42.46415329]
[-24.64491844 55.84602737]
[-10.27507591 60.14807510]
[4.09476709 64.45012665]
[18.46460915 68.75217438]
[32.83445358 73.05422211]
[47.20429611 77.35626984]
[52.65959930 72.20945740]
[42.36614227 61.29869461]
[53.27706528 51.00540543]
[63.57020187 61.91583252]
[69.02550507 56.76902008]
[65.56626892 42.17334747]
[62.10702896 27.57767487]
[58.64778900 12.98200130]
[54.39993286 7.92364597]
[53.47956848 2.32041621]
[55.30675888 -2.08841324]
[52.27349472 -16.77852249]
[49.24023438 -31.46863174]
[46.20697021 -46.15874100]
[43.17370605 -60.84885025]
[40.14044189 -75.53896332]
[37.10717773 -90.22907257]
[34.07391357 -104.91918182]
[31.04065132 -119.60929108]
[27.90063858 -134.27694702]
[17.35984039 -146.07534790]
[22.15904999 -160.17558289]
[18.91245461 -174.82002258]
[15.66586113 -189.46446228]
[1.38260889 -195.52815247]
[-6.57975960 -208.84657288]
[-5.15955114 -224.29852295]
[5.09713507 -235.94241333]
[20.24639320 -239.30091858]
[34.46302414 -233.08264160]
[42.28044510 -219.67861938]
[40.69269562 -204.24299622]
[30.31030083 -192.71105957]
[33.55689621 -178.06661987]
[36.80348969 -163.42218018]
[47.11207199 -152.67124939]
[42.54507828 -137.52354431]
[47.05998993 -131.67585754]
[45.73075867 -122.64255524]
[48.76402283 -107.95243835]
[51.79728699 -93.26232910]
[54.83055115 -78.57221985]
[57.86381531 -63.88211441]
[60.89707947 -49.19200516]
[63.93034363 -34.50189590]
[66.96360779 -19.81178665]
[69.99687195 -5.12167692]
[73.24346161 9.52276325]
[76.70269775 24.11843681]
[80.16194153 38.71410751]
[83.62117767 53.30978394]
[97.92836761 55.69276428]
[109.47556305 61.92993927]
[117.37779236 70.65151978]
[127.67141724 59.74091339]
[131.51376343 44.39337540]
[145.87565613 40.44554901]
[156.16928101 29.53494644]
[166.46290588 18.62434006]
[176.75653076 7.71373606]
[183.22805786 -7.95648098]
[200.07736206 -6.07581472]
[202.93455505 10.63564301]
[187.66712952 18.00736046]
[177.37350464 28.91796494]
[167.07987976 39.82857132]
[156.78625488 50.73917389]
[153.68019104 65.30631256]
[138.58203125 70.03453827]
[128.28840637 80.94514465]
[133.03936768 91.53115082]
[133.96656799 103.09729004]
[130.96270752 114.30496979]
[142.86300659 123.43639374]
[154.76330566 132.56781006]
[166.66360474 141.69923401]
[195.41694641 133.33062744]
[220.71405029 158.22656250]
[235.40415955 161.25982666]
[250.09426880 164.29309082]
[264.78439331 167.32635498]
[279.47448730 170.35961914]
[294.55416870 165.57279968]
[305.45388794 175.72393799]
[320.14401245 178.75720215]
[334.83410645 181.79046631]
[349.58688354 184.50254822]
[364.41232300 186.78439331]
[379.25393677 188.95837402]
[394.09558105 191.13235474]
[408.93719482 193.30632019]
[423.77880859 195.48030090]
[438.62045288 197.65428162]
[455.16864014 193.96737671]
[463.29244995 208.84823608]
[451.24206543 220.77400208]
[436.44647217 212.49591064]
[421.60482788 210.32192993]
[406.76321411 208.14794922]
[391.92160034 205.97396851]
[377.07995605 203.79998779]
[362.23834229 201.62602234]
[355.16723633 203.76600647]
[347.19729614 199.31097412]
[344.14236450 201.06449890]
[340.08724976 201.42762756]
[335.69369507 199.94676208]
[331.80084229 196.48057556]
[317.11074829 193.44731140]
[302.42062378 190.41404724]
[288.39166260 195.41781616]
[276.44122314 185.04972839]
[261.75112915 182.01646423]
[247.06100464 178.98320007]
[232.37089539 175.94993591]
[217.68078613 172.91667175]
[212.90179443 178.69691467]
[224.46211243 188.25509644]
[214.90373230 199.81526184]
[203.34379578 190.25740051]
[198.56478882 196.03762817]
[210.99421692 205.82640076]
[208.71640015 220.54579163]
[214.45664978 234.40399170]
[226.88609314 244.19274902]
[224.60827637 258.91213989]
[230.34852600 272.77035522]
[245.04385376 278.58605957]
[251.24592590 293.12255859]
[245.27516174 307.75558472]
[230.67390442 313.80364990]
[216.10482788 307.67849731]
[210.21150208 293.01409912]
[216.49032593 278.51058960]
[210.75007629 264.65240479]
[198.73123169 255.85487366]
[200.59846497 240.14424133]
[194.85821533 226.28604126]
[182.83937073 217.48852539]
[184.70660400 201.77787781]
[176.43875122 200.03811646]
[169.02444458 196.59913635]
[162.79309082 191.74752808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 148]
[6 147]
[7 146]
[8 145]
[10 55]
[11 54]
[12 53]
[13 52]
[14 51]
[15 50]
[17 48]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[77 123]
[78 122]
[79 121]
[80 120]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
[92 109]
[94 107]
[95 106]
[96 105]
[126 142]
[127 141]
[129 139]
[130 138]
[131 137]
[132 136]
[150 188]
[151 187]
[152 186]
[153 185]
[154 184]
[156 182]
[157 181]
[158 180]
[159 176]
[160 174]
[161 173]
[162 172]
[163 171]
[164 170]
[165 169]
[193 212]
[195 210]
[196 209]
[198 207]
[199 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
