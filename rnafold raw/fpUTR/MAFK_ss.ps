%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUGGCGGCGGGCGGCGCGGGGGCACUUGUUGUUCUUCGCGAAGUCGGAGCCCGAGCGCCAGGCGGCGGCGGCGGCCGAGGGGAGCGCGACAGUGAGCGCCGGCGCGAGGACAGCGCGUGCCCGCGAGGAGCCGCCGCGCGCCCGCGCCCUCCGCGCGACGCCAGCUACGAGUUCCAGGGAGCUCUGUCCUGGUGACCGUGCCCGGGUU\
) } def
/len { sequence length } bind def

/coor [
[587.92028809 460.60336304]
[575.86389160 451.67901611]
[563.80749512 442.75469971]
[551.75109863 433.83038330]
[539.62890625 424.99560547]
[527.44165039 416.25091553]
[515.18988037 407.59677124]
[502.87432861 399.03363037]
[490.55877686 390.47048950]
[478.24322510 381.90734863]
[465.92767334 373.34423828]
[453.61212158 364.78109741]
[441.29660034 356.21795654]
[434.01086426 354.98046875]
[428.86328125 347.43554688]
[414.25357056 350.09863281]
[401.76934814 341.40386963]
[399.07510376 326.06182861]
[384.22369385 324.92852783]
[377.52191162 310.59686279]
[365.33462524 301.85217285]
[350.48318481 300.71887207]
[343.78140259 286.38720703]
[331.59411621 277.64251709]
[319.40679932 268.89782715]
[307.21951294 260.15313721]
[295.03219604 251.40844727]
[282.84490967 242.66374207]
[267.99346924 241.53047180]
[261.29168701 227.19879150]
[249.10438538 218.45410156]
[236.91708374 209.70941162]
[224.72978210 200.96472168]
[212.54248047 192.22003174]
[200.35517883 183.47532654]
[193.08857727 182.13003540]
[188.05337524 174.50965881]
[175.99697876 165.58532715]
[163.94059753 156.66101074]
[151.88421631 147.73667908]
[139.82783508 138.81234741]
[127.77145386 129.88803101]
[115.71506500 120.96369934]
[102.03725433 127.99885559]
[85.69589233 126.30856323]
[72.10964966 115.31513977]
[66.38742828 97.69512177]
[52.17753601 92.89107513]
[37.96763992 88.08702850]
[23.75774384 83.28298187]
[5.79018259 87.31550598]
[-5.27348185 73.69296265]
[-19.55300522 69.10001373]
[-33.83252716 64.50705719]
[-43.14950943 71.89006042]
[-54.75468826 73.83924103]
[-65.74622345 69.98450470]
[-73.43209076 61.39250946]
[-75.98930359 50.27466583]
[-90.12644958 45.26057816]
[-104.26359558 40.24649048]
[-118.40074921 35.23240662]
[-134.41964722 38.74339676]
[-145.26826477 26.44545174]
[-139.78648376 10.98964119]
[-123.61347961 8.27557755]
[-113.38665771 21.09525681]
[-99.24951172 26.10934448]
[-85.11236572 31.12343025]
[-70.97521973 36.13751602]
[-54.95156097 27.28436089]
[-37.24179459 33.05484390]
[-29.23957443 50.22753525]
[-14.96005058 54.82048798]
[-0.68052799 59.41344070]
[10.22032928 54.17070770]
[22.15409088 57.87972641]
[28.56179237 69.07308197]
[42.77168655 73.87712860]
[56.98158264 78.68118286]
[71.19147491 83.48522949]
[81.39794922 72.49304962]
[75.55517578 58.67776871]
[63.05355453 48.98136902]
[65.22225189 34.24549484]
[50.85160828 28.23530579]
[45.12300491 14.14141369]
[50.94136429 0.47824076]
[45.09859085 -13.33703995]
[39.25581741 -27.15232086]
[25.85280800 -36.60173416]
[27.60400581 -52.90711212]
[42.70792770 -59.29487991]
[55.62695312 -49.19384766]
[53.07109833 -32.99509430]
[58.91387177 -19.17981529]
[64.75664520 -5.36453342]
[78.61285400 -0.02215021]
[84.73506165 13.90527725]
[79.03752899 28.40272141]
[91.12123108 37.11095810]
[89.37045288 52.83499527]
[95.21322632 66.65027618]
[116.15007782 73.31176758]
[127.05574036 90.43367767]
[124.63939667 108.90731812]
[136.69578552 117.83164215]
[148.75216675 126.75596619]
[160.80854797 135.68029785]
[172.86492920 144.60462952]
[184.92131042 153.52894592]
[196.97769165 162.45327759]
[209.09986877 171.28802490]
[221.28717041 180.03271484]
[233.47447205 188.77742004]
[245.66178894 197.52210999]
[257.84909058 206.26679993]
[270.03637695 215.01148987]
[285.75952148 216.77024841]
[291.58959961 230.47644043]
[303.77688599 239.22114563]
[315.96420288 247.96583557]
[328.15148926 256.71051025]
[340.33880615 265.45520020]
[352.52609253 274.19992065]
[368.24923706 275.95867920]
[374.07931519 289.66485596]
[386.26660156 298.40954590]
[401.98974609 300.16830444]
[407.81979370 313.87451172]
[423.21661377 311.51321411]
[435.45172119 320.55517578]
[437.60797119 335.24826050]
[449.85974121 343.90240479]
[462.17526245 352.46554565]
[474.49081421 361.02868652]
[486.80636597 369.59182739]
[499.12191772 378.15493774]
[511.43746948 386.71807861]
[523.75299072 395.28121948]
[532.58459473 397.61065674]
[536.18634033 404.06362915]
[548.37359619 412.80831909]
[557.16973877 415.26834106]
[560.67541504 421.77398682]
[572.73181152 430.69830322]
[584.78820801 439.62265015]
[596.84460449 448.54696655]
[609.03186035 457.29165649]
[621.34741211 465.85479736]
[633.66296387 474.41793823]
[645.97851562 482.98107910]
[658.87231445 479.08840942]
[671.47003174 483.27124023]
[679.24340820 493.79000854]
[679.53491211 506.67150879]
[691.72222900 515.41619873]
[703.90954590 524.16088867]
[716.09680176 532.90557861]
[728.28411865 541.65026855]
[746.64605713 543.04107666]
[753.24877930 559.30096436]
[765.56433105 567.86407471]
[777.87988281 576.42718506]
[790.19543457 584.99035645]
[802.51098633 593.55346680]
[814.82653809 602.11663818]
[827.63555908 600.60729980]
[837.71679688 607.99249268]
[839.98840332 619.87335205]
[852.17572021 628.61804199]
[864.42749023 637.27215576]
[876.74304199 645.83532715]
[889.05859375 654.39843750]
[901.37414551 662.96160889]
[913.68969727 671.52471924]
[926.00518799 680.08789062]
[942.38305664 680.92340088]
[949.60644531 695.64599609]
[940.24456787 709.11029053]
[923.92810059 707.46539307]
[917.44207764 692.40344238]
[905.12652588 683.84027100]
[892.81097412 675.27716064]
[880.49542236 666.71398926]
[868.17987061 658.15087891]
[855.86431885 649.58770752]
[848.57861328 648.35028076]
[843.43103027 640.80535889]
[831.24371338 632.06066895]
[813.71209717 631.27294922]
[806.26336670 614.43218994]
[793.94781494 605.86901855]
[781.63232422 597.30590820]
[769.31677246 588.74273682]
[757.00122070 580.17962646]
[744.68566895 571.61645508]
[732.72888184 573.44696045]
[722.39868164 566.41430664]
[719.53942871 553.83758545]
[707.35211182 545.09289551]
[695.16485596 536.34820557]
[682.97753906 527.60351562]
[670.79022217 518.85882568]
[654.32672119 522.29455566]
[640.19427490 512.56829834]
[637.41540527 495.29663086]
[625.09985352 486.73348999]
[612.78430176 478.17034912]
[600.46875000 469.60720825]
[595.69384766 469.55514526]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 143]
[6 142]
[7 140]
[8 139]
[9 138]
[10 137]
[11 136]
[12 135]
[13 134]
[15 133]
[18 130]
[20 128]
[21 127]
[23 125]
[24 124]
[25 123]
[26 122]
[27 121]
[28 120]
[30 118]
[31 117]
[32 116]
[33 115]
[34 114]
[35 113]
[37 112]
[38 111]
[39 110]
[40 109]
[41 108]
[42 107]
[43 106]
[47 81]
[48 80]
[49 79]
[50 78]
[52 75]
[53 74]
[54 73]
[59 70]
[60 69]
[61 68]
[62 67]
[82 103]
[83 102]
[85 100]
[88 97]
[89 96]
[90 95]
[149 210]
[150 209]
[151 208]
[152 207]
[156 204]
[157 203]
[158 202]
[159 201]
[160 200]
[162 197]
[163 196]
[164 195]
[165 194]
[166 193]
[167 192]
[170 190]
[171 189]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
