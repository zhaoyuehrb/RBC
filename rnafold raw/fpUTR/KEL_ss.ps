%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGGAGAAGCCUGGGUGCCCCCCACUGAUAAGCAGGCUCCACCCAGAGGCCAGUCCUGUGUGUCUGGGGACAAGGCGAAAGAGCAGCAGAAGUGCCCCUUCUCCAGGAUCAAGGAACUGGGGCGGGGGGUGUUUCCUGGACCCCAGUCCUCCGAAUCAGCUCCUAGAGUGGAACCAGGAAGGAUUCUGGAGCCACAGAAGAUAGACAG\
) } def
/len { sequence length } bind def

/coor [
[130.46536255 151.96241760]
[121.32656097 140.06777954]
[112.18775177 128.17315674]
[103.04895020 116.27851868]
[89.87648010 109.10314941]
[74.92674255 107.87617493]
[59.97700882 106.64920044]
[45.02727509 105.42222595]
[30.07754326 104.19525146]
[15.12780952 102.96827698]
[0.17807588 101.74130249]
[-4.54005337 103.97431183]
[-9.17904663 104.15606689]
[-12.97080803 102.66020966]
[-15.40684605 100.11107635]
[-30.28688049 98.21778870]
[-45.16691589 96.32449341]
[-60.04695129 94.43120575]
[-74.92698669 92.53791046]
[-89.80702209 90.64461517]
[-97.98725128 110.42832184]
[-126.16918945 118.05274200]
[-140.91015625 120.82834625]
[-155.65110779 123.60395813]
[-170.39207458 126.37957001]
[-185.13304138 129.15518188]
[-190.38859558 133.16650391]
[-196.03359985 133.82298279]
[-200.35382080 131.78712463]
[-215.17088318 134.12260437]
[-229.98796082 136.45809937]
[-244.80502319 138.79357910]
[-257.23220825 148.58518982]
[-271.00894165 142.92387390]
[-285.82601929 145.25936890]
[-300.64309692 147.59484863]
[-315.46014404 149.93034363]
[-330.27722168 152.26582336]
[-345.07650757 154.71156311]
[-359.85714722 157.26739502]
[-374.59811401 160.04299927]
[-389.29611206 163.03778076]
[-396.59420776 176.86787415]
[-411.09414673 182.72331238]
[-425.94946289 177.83934021]
[-434.14596558 164.52200317]
[-431.81350708 149.05935669]
[-420.05337524 138.75236511]
[-404.41839600 138.46771240]
[-392.29089355 148.33976746]
[-377.59289551 145.34500122]
[-374.25765991 141.92660522]
[-368.73962402 140.56709290]
[-362.41299438 142.48674011]
[-347.63232422 139.93090820]
[-341.57693481 135.69366455]
[-332.61270142 137.44876099]
[-317.79565430 135.11328125]
[-302.97857666 132.77778625]
[-288.16149902 130.44230652]
[-273.34445190 128.10681152]
[-261.97708130 118.48224640]
[-247.14050293 123.97651672]
[-232.32344055 121.64102936]
[-217.50637817 119.30554199]
[-202.68930054 116.97005463]
[-187.90864563 114.41422272]
[-173.16769409 111.63861084]
[-158.42672729 108.86299896]
[-143.68576050 106.08738708]
[-128.94479370 103.31177521]
[-126.47900391 96.22870636]
[-141.47573853 95.91587067]
[-145.81228638 81.55640411]
[-133.49557495 72.99494171]
[-121.54740906 82.06257629]
[-119.08161163 74.97950745]
[-128.91220093 63.64991379]
[-144.69270325 62.78326416]
[-155.17602539 50.95635986]
[-154.14257812 35.18589783]
[-142.20550537 24.82820702]
[-126.44684601 26.02832603]
[-116.21594238 38.07424545]
[-117.58260345 53.81933212]
[-107.75202179 65.14892578]
[-111.36876678 50.59148407]
[-105.31771088 36.86614990]
[-92.13111877 29.71675873]
[-77.32736969 32.13521194]
[-67.10158539 43.10942459]
[-65.73309326 58.04686737]
[-73.79459381 70.69646454]
[-87.91372681 75.76457977]
[-73.03369141 77.65787506]
[-58.15365982 79.55117035]
[-43.27362442 81.44445801]
[-28.39358902 83.33775330]
[-13.51355362 85.23104095]
[1.40505135 86.79156494]
[16.35478401 88.01853943]
[31.30451775 89.24552155]
[46.25425339 90.47249603]
[61.20398712 91.69947052]
[76.15371704 92.92644501]
[91.10345459 94.15341949]
[92.92998505 82.99571991]
[105.23623657 74.34358978]
[115.56290436 63.46425629]
[125.88957214 52.58492279]
[126.75276947 48.32947540]
[128.72668457 44.91360474]
[131.41101074 42.58339691]
[134.36659241 41.42964172]
[137.16952515 41.38863373]
[148.12542725 31.14324379]
[159.08134460 20.89785194]
[163.21185303 12.75066376]
[170.27746582 10.58298111]
[181.38470459 0.50184202]
[192.49194336 -9.57929707]
[203.59916687 -19.66043472]
[214.70640564 -29.74157524]
[225.81364441 -39.82271194]
[236.84552002 -49.98625946]
[241.64030457 -65.06341553]
[256.22100830 -68.10519409]
[267.17691040 -78.35058594]
[278.13281250 -88.59597778]
[289.08874512 -98.84136963]
[291.06097412 -114.76273346]
[304.81323242 -123.02439117]
[319.79592896 -117.28871155]
[324.51565552 -101.95561981]
[315.35180664 -88.78733826]
[299.33413696 -87.88545990]
[288.37820435 -77.64006805]
[277.42230225 -67.39467621]
[266.46640015 -57.14928818]
[262.45526123 -42.80495071]
[247.09091187 -39.03034973]
[244.35253906 -32.16572571]
[235.89477539 -28.71547890]
[224.78755188 -18.63434029]
[213.68031311 -8.55320168]
[202.57307434 1.52793694]
[191.46585083 11.60907555]
[180.35861206 21.69021416]
[169.32673645 31.85376167]
[158.37081909 42.09915161]
[147.41491699 52.34454346]
[136.76890564 62.91159058]
[126.44223785 73.79092407]
[116.11557007 84.67025757]
[126.94916534 74.29561615]
[141.74024963 71.80083466]
[155.37741089 78.04803467]
[163.14805603 90.87835693]
[162.36683655 105.85800171]
[153.30372620 117.81040955]
[139.09069824 122.60516357]
[124.63936615 118.58532715]
[114.94358826 107.13971710]
[124.08238983 119.03434753]
[133.22119141 130.92898560]
[142.35998535 142.82360840]
[165.92665100 139.84925842]
[186.46420288 151.54521179]
[195.83503723 173.11262512]
[190.42500305 195.87457275]
[201.38092041 206.11996460]
[212.33682251 216.36535645]
[223.29273987 226.61074829]
[238.86557007 226.25764465]
[249.83045959 236.80400085]
[250.07112122 251.65249634]
[261.02703857 261.89788818]
[271.98294067 272.14328003]
[282.93884277 282.38867188]
[293.89477539 292.63406372]
[304.85067749 302.87945557]
[320.93807983 306.06185913]
[325.96887207 321.67028809]
[314.76782227 333.64813232]
[298.85760498 329.67358398]
[294.60528564 313.83535767]
[283.64938354 303.58996582]
[272.69345093 293.34457397]
[261.73754883 283.09918213]
[250.78164673 272.85379028]
[239.82572937 262.60839844]
[224.99444580 263.36239624]
[213.73764038 253.12818909]
[213.04734802 237.56665039]
[202.09143066 227.32125854]
[191.13552856 217.07586670]
[180.17961121 206.83047485]
[174.00730896 210.40264893]
[167.25440979 212.72529602]
[160.17141724 213.70835876]
[153.02185059 213.31147766]
[146.07237244 211.54573059]
[139.58294678 208.47331238]
[133.79705811 204.20536804]
[128.93257141 198.89797974]
[125.17356873 192.74645996]
[122.66333008 185.97813416]
[121.49892426 178.84400940]
[121.72743225 171.60937500]
[123.34406281 164.54403687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[5 106]
[6 105]
[7 104]
[8 103]
[9 102]
[10 101]
[11 100]
[15 99]
[16 98]
[17 97]
[18 96]
[19 95]
[20 94]
[22 71]
[23 70]
[24 69]
[25 68]
[26 67]
[29 66]
[30 65]
[31 64]
[32 63]
[34 61]
[35 60]
[36 59]
[37 58]
[38 57]
[39 55]
[40 54]
[41 51]
[42 50]
[77 86]
[78 85]
[108 154]
[109 153]
[110 152]
[115 151]
[116 150]
[117 149]
[119 148]
[120 147]
[121 146]
[122 145]
[123 144]
[124 143]
[125 141]
[127 139]
[128 138]
[129 137]
[130 136]
[170 197]
[171 196]
[172 195]
[173 194]
[176 191]
[177 190]
[178 189]
[179 188]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
