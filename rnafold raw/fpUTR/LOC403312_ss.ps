%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACAAUGGCUGGCACUCUGAGGAAGCCGGACUCAUCCCGUGCAGGCCGCAUACACACUCCACUGCCCUUCCGGCCAAACAAGCCCGGACACGGGAGAGGGAUGAGAGUCGGGG\
) } def
/len { sequence length } bind def

/coor [
[87.92377472 285.17471313]
[74.98950958 292.77108765]
[60.41547775 296.32040405]
[45.43674850 295.52191162]
[31.32265854 290.44329834]
[19.26929283 281.51489258]
[10.29809093 269.49334717]
[5.16930485 255.39739990]
[4.31756639 240.42160034]
[7.81505442 225.83505249]
[15.36781788 212.87078857]
[1.75418687 219.16912842]
[-11.85944462 225.46746826]
[-25.47307587 231.76580811]
[-39.08670807 238.06413269]
[-39.78793716 253.35357666]
[-47.52420807 266.55996704]
[-60.51778412 274.64855957]
[-75.78283691 275.76071167]
[-89.81156158 269.64077759]
[-99.38027191 257.69512939]
[-102.29013824 242.66877747]
[-97.87249756 228.01466370]
[-87.14249420 217.10020447]
[-72.56580353 212.43344116]
[-57.49203873 215.08679199]
[-45.38504410 224.45051575]
[-31.77141190 218.15217590]
[-18.15778160 211.85383606]
[-4.54414988 205.55549622]
[9.06948185 199.25715637]
[13.07493401 192.79119873]
[20.96322250 189.69670105]
[30.04083633 177.75531006]
[39.11845016 165.81391907]
[48.19606400 153.87251282]
[57.27367783 141.93112183]
[66.35128784 129.98973083]
[75.42890167 118.04833221]
[84.50651550 106.10693359]
[84.91270447 91.11243439]
[76.49490356 78.69709778]
[68.07709503 66.28176117]
[59.65929031 53.86642838]
[44.23803711 49.44324875]
[38.21452713 34.57392120]
[46.20948410 20.66492271]
[62.08985519 18.38604736]
[73.67358398 29.48545074]
[72.07462311 45.44862366]
[80.49243164 57.86396027]
[88.91023254 70.27929688]
[97.32804108 82.69462585]
[93.64211273 68.15454865]
[101.89099121 55.62634277]
[116.70420837 53.26655197]
[128.43754578 62.61153412]
[129.45196533 77.57719421]
[119.08744049 88.41989899]
[132.52552795 81.75522614]
[145.96360779 75.09054565]
[159.40168762 68.42587280]
[164.53497314 53.71916580]
[178.25804138 47.15166855]
[192.24699402 52.13609695]
[205.68508911 45.47142410]
[208.09843445 41.49501801]
[211.36361694 38.84164429]
[214.92965698 37.61709213]
[218.27140808 37.72644424]
[220.95625305 38.90224075]
[235.03614807 33.72954559]
[249.11602783 28.55685234]
[263.19592285 23.38415718]
[277.27581787 18.21146393]
[287.56127930 6.18983698]
[302.17602539 9.06357193]
[308.58377075 -5.38344622]
[323.36016846 -10.99003506]
[337.73864746 -4.42990494]
[343.18869019 10.40493584]
[336.47689819 24.71323967]
[321.58526611 30.00614166]
[307.34872437 23.14345932]
[298.07034302 34.79510117]
[282.44851685 32.29135132]
[268.36862183 37.46404648]
[254.28872681 42.63674164]
[240.20884705 47.80943298]
[226.12895203 52.98212814]
[212.34976196 58.90950775]
[198.91168213 65.57418060]
[194.41398621 79.72714996]
[180.88079834 86.67750549]
[166.06636047 81.86395264]
[152.62828064 88.52863312]
[139.19020081 95.19330597]
[125.75211334 101.85797882]
[112.27425385 116.67671204]
[96.44791412 115.18454742]
[87.37030029 127.12594604]
[78.29268646 139.06733704]
[69.21507263 151.00872803]
[60.13745880 162.95013428]
[51.05984497 174.89152527]
[41.98223114 186.83291626]
[32.90462112 198.77432251]
[47.18553925 194.18569946]
[62.18290329 193.90452576]
[76.62578583 197.95460510]
[89.29024506 205.99273682]
[99.10305023 217.33773804]
[105.23262787 231.02816772]
[107.15954590 245.90390015]
[104.72049713 260.70425415]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[33 107]
[34 106]
[35 105]
[36 104]
[37 103]
[38 102]
[39 101]
[40 100]
[41 53]
[42 52]
[43 51]
[44 50]
[59 98]
[60 97]
[61 96]
[62 95]
[65 92]
[66 91]
[71 90]
[72 89]
[73 88]
[74 87]
[75 86]
[77 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
