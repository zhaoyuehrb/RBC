%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGUGGCGAAAGGAAGGGCGGGCCCUCAGGUGACGCAGAUUGGCCCUCCAGAGAAGGGGCGGCCCCUUCUCAGGUGCCGUCACCCCCAAACCUCAGCACUGCCAUUCCAGGUCCUUAAAGGGGAGACCGCGAUUCUAAGAAGCAGCCAAGCCCAGGGCUGGCCUGAAGCCCCCGGACGGCAGUGCCCAGCAGGCAGCGCCCAGCACCCUGGCUCCCACCUCCCAGUGGCCCCAAAGGAAAACAGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[15.41320515 339.78341675]
[1.89867198 346.29165649]
[-11.61586094 352.79992676]
[-25.13039398 359.30816650]
[-38.64492798 365.81643677]
[-52.15946198 372.32470703]
[-65.67399597 378.83294678]
[-79.18852997 385.34121704]
[-92.70305634 391.84945679]
[-106.21759033 398.35772705]
[-104.04145813 412.64526367]
[-106.01039886 426.94476318]
[-111.95218658 440.07989502]
[-121.36817169 450.97299194]
[-133.47515869 458.73355103]
[-147.27050781 462.73098755]
[-161.61520386 462.64575195]
[-175.32783508 458.49511719]
[-187.28196716 450.63061523]
[-198.77262878 460.27243042]
[-204.37072754 475.07012939]
[-219.09382629 477.32394409]
[-230.58450317 486.96575928]
[-242.07516479 496.60757446]
[-253.56582642 506.24938965]
[-265.05648804 515.89117432]
[-270.96591187 533.34423828]
[-288.36917114 535.68676758]
[-299.73873901 545.47113037]
[-305.15194702 560.33746338]
[-319.84579468 562.77459717]
[-320.77679443 578.55145264]
[-332.64633179 588.98651123]
[-348.41244507 587.88873291]
[-358.72137451 575.90954590]
[-357.45703125 560.15594482]
[-345.36950684 549.97418213]
[-329.63012695 551.40502930]
[-325.03015137 537.23852539]
[-309.52307129 534.10150146]
[-298.15350342 524.31719971]
[-296.94342041 512.29803467]
[-287.57446289 504.05282593]
[-274.69830322 504.40054321]
[-263.20764160 494.75872803]
[-251.71697998 485.11691284]
[-240.22631836 475.47509766]
[-228.73564148 465.83328247]
[-223.95942688 451.72521973]
[-208.41444397 448.78176880]
[-196.92378235 439.13995361]
[-201.19047546 430.26315308]
[-203.62788391 420.72055054]
[-218.62788391 420.72055054]
[-233.62788391 420.72055054]
[-248.62788391 420.72055054]
[-263.62789917 420.72055054]
[-278.62789917 420.72055054]
[-293.62789917 420.72055054]
[-308.62789917 420.72055054]
[-323.62789917 420.72055054]
[-339.46701050 426.76687622]
[-349.66177368 413.22055054]
[-339.46701050 399.67419434]
[-323.62789917 405.72055054]
[-308.62789917 405.72055054]
[-293.62789917 405.72055054]
[-278.62789917 405.72055054]
[-263.62789917 405.72055054]
[-248.62788391 405.72055054]
[-233.62788391 405.72055054]
[-218.62788391 405.72055054]
[-203.62788391 405.72055054]
[-198.33598328 389.60659790]
[-187.93281555 376.17663574]
[-173.60728455 366.99536133]
[-157.00660706 363.14013672]
[-140.04685974 365.07473755]
[-124.69187927 372.59350586]
[-112.72584534 384.84317017]
[-99.21131897 378.33493042]
[-85.69678497 371.82666016]
[-72.18225098 365.31842041]
[-58.66771698 358.81015015]
[-45.15318298 352.30191040]
[-31.63865089 345.79364014]
[-18.12411690 339.28540039]
[-4.60958433 332.77713013]
[8.90494919 326.26889038]
[7.53975773 317.37854004]
[8.22110844 308.39193726]
[10.92176533 299.77502441]
[15.50959301 291.97631836]
[21.75399399 285.40377808]
[29.33749390 280.40322876]
[37.87187195 277.24035645]
[46.91803741 276.08648682]
[56.00861740 277.00936890]
[62.00699997 263.26092529]
[68.00537872 249.51248169]
[74.00376129 235.76405334]
[80.00214386 222.01562500]
[86.00051880 208.26718140]
[91.99890137 194.51875305]
[97.99728394 180.77032471]
[93.87258911 169.41636658]
[98.73625183 157.92266846]
[110.48813629 152.64918518]
[116.65744781 138.97659302]
[122.82675171 125.30400848]
[78.74723053 128.04978943]
[67.46823883 83.88319397]
[65.60308075 68.99960327]
[63.73792648 54.11601639]
[61.87276840 39.23242950]
[59.91487885 24.36075592]
[57.86432266 9.50157642]
[55.81377029 -5.35760307]
[45.32796860 -17.96632957]
[51.25762177 -33.25590897]
[67.50281525 -35.49773026]
[77.35188293 -22.38560295]
[70.67295074 -7.40815735]
[72.72350311 7.45102262]
[74.77405548 22.31020164]
[78.79107666 28.49011612]
[76.75635529 37.36727524]
[78.62151337 52.25086212]
[80.48667145 67.13445282]
[82.35182190 82.01803589]
[97.29474640 83.32537079]
[101.71607208 68.99178314]
[90.81747437 58.24565887]
[86.17227173 43.66208267]
[88.84789276 28.59225655]
[98.22949219 16.49911499]
[112.16126251 10.16157436]
[127.44177246 11.03595257]
[140.55967712 18.92132568]
[148.50057983 32.00569153]
[149.43971252 47.28236008]
[143.16128540 61.24086380]
[131.10801697 70.67364502]
[116.04966736 73.41310883]
[111.62833405 87.74670410]
[118.14677429 91.45614624]
[137.70208740 102.58446503]
[147.76681519 91.46235657]
[157.83154297 80.34024048]
[167.89625549 69.21813202]
[171.32124329 60.77931976]
[178.15644836 58.02109909]
[188.35903931 47.02532196]
[198.56163025 36.02954102]
[204.90269470 20.30608177]
[221.76705933 22.04664803]
[224.76303101 38.73378372]
[209.55740356 46.23213196]
[199.35481262 57.22791290]
[189.15222168 68.22368622]
[179.01837158 79.28285217]
[168.95364380 90.40496063]
[158.88893127 101.52707672]
[148.82420349 112.64918518]
[162.60513306 106.72585297]
[177.57916260 107.60826111]
[190.56901550 115.10917664]
[198.81845093 127.63701630]
[200.57705688 142.53356934]
[195.47167969 156.63801575]
[184.58561707 166.95758057]
[170.22871399 171.30264282]
[155.44731140 168.75122070]
[143.37776184 159.84469604]
[136.58106995 146.47290039]
[136.49934387 131.47331238]
[130.33003235 145.14590454]
[124.16072845 158.81848145]
[126.40912628 177.10716248]
[111.74571228 186.76869202]
[105.74733734 200.51713562]
[99.74895477 214.26556396]
[93.75057220 228.01399231]
[87.75219727 241.76243591]
[81.75381470 255.51086426]
[75.75543213 269.25930786]
[69.75704956 283.00772095]
[76.67658997 289.14230347]
[81.99540710 296.67846680]
[85.43994904 305.21023560]
[86.83728790 314.28085327]
[86.12377930 323.40740967]
[83.34787750 332.10644531]
[78.66701508 339.91952515]
[88.73174286 351.04165649]
[98.79646301 362.16375732]
[108.86118317 373.28585815]
[118.92590332 384.40798950]
[128.99063110 395.53009033]
[141.00382996 404.51245117]
[154.51837158 411.02072144]
[168.03289795 417.52896118]
[177.09584045 418.42745972]
[181.67457581 424.20352173]
[195.10691833 430.87973022]
[211.43161011 429.31872559]
[220.72415161 442.83096313]
[213.42518616 457.51623535]
[197.04327393 458.26757812]
[188.43069458 444.31210327]
[174.99835205 437.63586426]
[161.52464294 431.04348755]
[148.01011658 424.53524780]
[134.49557495 418.02697754]
[129.92987061 423.97714233]
[120.79844666 435.87744141]
[116.23273468 441.82757568]
[126.01705170 453.19717407]
[135.80136108 464.56674194]
[145.58567810 475.93630981]
[161.36251831 476.86727905]
[171.79753113 488.73681641]
[170.69979858 504.50296021]
[158.72059631 514.81188965]
[142.96696472 513.54754639]
[132.78524780 501.46002197]
[134.21609497 485.72061157]
[124.43178558 474.35104370]
[114.64747620 462.98147583]
[104.86315918 451.61190796]
[92.16173553 459.59274292]
[79.46143341 467.57284546]
[85.45981598 481.32128906]
[98.96865845 490.61877441]
[97.40166473 506.94290161]
[82.37081909 513.50079346]
[69.33857727 503.54623413]
[71.71138000 487.31967163]
[65.71300507 473.57122803]
[64.38572693 488.51239014]
[63.05844879 503.45355225]
[61.73117447 518.39471436]
[75.37397003 390.78894043]
[89.53881836 395.72424316]
[103.70366669 400.65951538]
[117.86851501 405.59481812]
[107.80379486 394.47268677]
[97.73906708 383.35058594]
[87.67434692 372.22848511]
[77.60962677 361.10635376]
[67.54490662 349.98425293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 89]
[2 88]
[3 87]
[4 86]
[5 85]
[6 84]
[7 83]
[8 82]
[9 81]
[10 80]
[19 51]
[20 50]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[28 41]
[29 40]
[31 38]
[53 73]
[54 72]
[55 71]
[56 70]
[57 69]
[58 68]
[59 67]
[60 66]
[61 65]
[98 187]
[99 186]
[100 185]
[101 184]
[102 183]
[103 182]
[104 181]
[105 180]
[108 178]
[109 177]
[110 176]
[112 130]
[113 129]
[114 128]
[115 127]
[116 125]
[117 124]
[118 123]
[131 145]
[132 144]
[147 164]
[148 163]
[149 162]
[150 161]
[152 160]
[153 159]
[154 158]
[194 251]
[195 250]
[196 249]
[197 248]
[198 247]
[199 246]
[200 214]
[201 213]
[202 212]
[204 211]
[205 210]
[217 230]
[218 229]
[219 228]
[220 227]
[232 239]
[233 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
