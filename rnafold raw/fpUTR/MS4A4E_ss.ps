%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCAGAUUUAAACUGAGUGAGGUGUGGAGUGGGGGAAGCUGACUGUGUCUGGAACAAAGAACUUUGAGGAACUUGCCCAGAGCCCUGCACUCAUCAGACCUGCAGCAGACAUUGCAGGCCUGAAGAAAGCACCUUUUCUGCUGCCAUGACAACCAUGCAAGGAAUGGAACAGACCACUCCAGGGGCUGGCCCUGAUGUGCCCCAGCUGGGAAACAUAG\
) } def
/len { sequence length } bind def

/coor [
[52.24073029 84.51770782]
[64.07408142 72.16471863]
[78.18308258 65.65454865]
[92.15135956 64.93737030]
[79.12558746 57.49900436]
[66.09981537 50.06064224]
[53.07403946 42.62228012]
[40.04826736 35.18392181]
[46.29236984 48.82251358]
[46.23944473 63.82241821]
[39.89925385 77.41661072]
[28.44137383 87.09735870]
[13.97943878 91.07887268]
[-0.81876075 88.62667084]
[-13.22340107 80.19311523]
[-20.94620132 67.33393860]
[-22.56253433 52.42127609]
[-17.77423668 38.20606613]
[-7.46460533 27.31058502]
[6.46454287 21.74472237]
[21.44075012 22.53439903]
[9.73229504 13.15825558]
[-1.97616029 3.78211188]
[-13.68461609 -5.59403181]
[-25.39307213 -14.97017479]
[-37.10152817 -24.34631920]
[-48.80998230 -33.72246170]
[-73.48071289 -31.99595451]
[-87.57189178 -51.65145493]
[-102.33570862 -54.30282593]
[-117.09951782 -56.95420074]
[-131.86332703 -59.60557556]
[-146.62715149 -62.25695038]
[-161.57765198 -57.08077240]
[-172.73689270 -66.94589233]
[-187.50071716 -69.59726715]
[-202.26452637 -72.24864197]
[-213.47013855 -61.67790604]
[-228.57493591 -59.75477600]
[-241.75987244 -67.00885010]
[-248.06954956 -80.47458649]
[-262.83337402 -83.12596130]
[-277.59716797 -85.77732849]
[-290.30633545 -72.83689880]
[-308.08413696 -70.14527130]
[-323.77722168 -78.59436798]
[-331.18563843 -94.63153076]
[-346.01885986 -96.86214447]
[-360.81619263 -91.26306915]
[-372.25137329 -100.80698395]
[-387.08459473 -103.03759003]
[-401.91778564 -105.26820374]
[-416.71511841 -99.66912842]
[-428.15029907 -109.21304321]
[-442.98352051 -111.44365692]
[-457.81671143 -113.67426300]
[-468.60644531 -102.52252960]
[-483.89614868 -99.87580109]
[-497.80657959 -106.75179291]
[-504.98892212 -120.50656128]
[-502.68142700 -135.85110474]
[-491.77133179 -146.88513184]
[-476.45385742 -149.36584473]
[-462.61883545 -142.33935547]
[-455.58612061 -128.50749207]
[-440.75289917 -126.27687073]
[-425.91967773 -124.04625702]
[-412.18331909 -129.80488586]
[-399.68719482 -120.10142517]
[-384.85397339 -117.87081146]
[-370.02075195 -115.64019775]
[-356.28439331 -121.39882660]
[-343.78826904 -111.69536591]
[-328.95504761 -109.46475220]
[-321.82067871 -119.27675629]
[-311.12966919 -125.16171265]
[-298.87918091 -125.95028687]
[-287.38757324 -121.43180084]
[-278.85583496 -112.40576935]
[-274.94580078 -100.54114532]
[-260.18197632 -97.88977051]
[-245.41816711 -95.23839569]
[-234.81736755 -105.66724396]
[-219.93226624 -107.88033295]
[-206.44047546 -100.82165527]
[-199.61315918 -87.01245880]
[-184.84933472 -84.36108398]
[-170.08552551 -81.70970917]
[-156.19102478 -87.07553101]
[-143.97576904 -77.02076721]
[-129.21195984 -74.36939240]
[-114.44814301 -71.71801758]
[-99.68433380 -69.06664276]
[-84.92051697 -66.41526794]
[-78.99877930 -73.71769714]
[-70.76461792 -78.25542450]
[-70.76461792 -93.25542450]
[-70.76461792 -108.25542450]
[-70.76461792 -123.25542450]
[-78.50191498 -137.05560303]
[-70.76461792 -149.78286743]
[-70.76461792 -164.78286743]
[-70.76461792 -179.78286743]
[-70.76461792 -194.78286743]
[-70.76461792 -209.78286743]
[-70.76461792 -224.78286743]
[-70.76461792 -239.78286743]
[-82.11576080 -250.77955627]
[-82.28285217 -266.58297729]
[-71.16676331 -277.81719971]
[-55.36247253 -277.81719971]
[-44.24638748 -266.58297729]
[-44.41347885 -250.77955627]
[-55.76461792 -239.78286743]
[-55.76461792 -224.78286743]
[-55.76461792 -209.78286743]
[-55.76461792 -194.78286743]
[-55.76461792 -179.78286743]
[-55.76461792 -164.78286743]
[-55.76461792 -149.78286743]
[-48.02731705 -137.05560303]
[-55.76461792 -123.25542450]
[-55.76461792 -108.25542450]
[-55.76461792 -93.25542450]
[-55.76461792 -78.25542450]
[-49.64241028 -75.52347565]
[-44.44560242 -71.20809174]
[-40.57741165 -65.60844421]
[-38.34749603 -59.12452698]
[-37.94727325 -52.22862625]
[-39.43383789 -45.43091583]
[-27.72538376 -36.05477524]
[-16.01692772 -26.67863083]
[-4.30847263 -17.30248642]
[7.39998341 -7.92634392]
[19.10843849 1.44979966]
[30.81689453 10.82594299]
[41.19355774 12.20649147]
[47.48662949 22.15814590]
[60.51240158 29.59650803]
[73.53817749 37.03487015]
[86.56394958 44.47323227]
[99.58972168 51.91159439]
[114.55184937 52.97684860]
[128.50006104 47.45894623]
[142.44828796 41.94104004]
[149.27085876 35.87864304]
[156.63420105 36.44538879]
[170.65943909 31.12631607]
[184.68467712 25.80724335]
[192.55364990 11.82658291]
[208.41279602 9.40433025]
[220.09632874 20.39863014]
[218.64164734 36.37559891]
[205.16465759 45.07906723]
[190.00375366 39.83248520]
[175.97851562 45.15156174]
[161.95326233 50.47063446]
[147.96618652 55.88925934]
[134.01797485 61.40716171]
[120.06974792 66.92506409]
[120.76176453 74.39307404]
[122.83779907 96.79708862]
[137.56243896 99.65805817]
[152.28706360 102.51903534]
[167.30964661 97.55590057]
[178.32752991 107.57865143]
[193.05216980 110.43962097]
[207.77679443 113.30059814]
[220.73663330 104.25525665]
[236.28179932 107.10543823]
[245.18960571 120.16017914]
[242.17523193 135.67433167]
[229.02703857 144.44363403]
[213.54562378 141.26539612]
[204.91583252 128.02522278]
[190.19119263 125.16426086]
[175.46655273 122.30328369]
[161.49717712 127.47105408]
[149.42610168 117.24366760]
[134.70146179 114.38269806]
[119.97682953 111.52172089]
[113.77206421 125.17825317]
[125.61261749 134.38702393]
[137.45317078 143.59577942]
[149.29373169 152.80453491]
[165.32714844 152.24894714]
[175.64831543 164.53117371]
[172.33970642 180.22935486]
[157.93939209 187.30117798]
[143.49407959 180.32174683]
[140.08496094 164.64509583]
[128.24441528 155.43634033]
[116.40385437 146.22756958]
[104.56330109 137.01881409]
[98.57817078 141.53857422]
[80.62278748 155.09785461]
[86.23969269 169.00650024]
[91.85659027 182.91514587]
[97.47349548 196.82379150]
[111.74430084 203.06732178]
[117.24250793 217.25268555]
[111.20230103 230.81924438]
[116.81920624 244.72789001]
[122.43610382 258.63653564]
[135.68338013 268.30307007]
[133.66673279 284.57775879]
[118.46074677 290.71856689]
[105.70801544 280.40838623]
[108.52745819 264.25341797]
[102.91056061 250.34478760]
[97.29365540 236.43614197]
[83.52632904 230.86869812]
[77.63185883 216.84336853]
[83.56484985 202.44068909]
[77.94794464 188.53204346]
[72.33104706 174.62339783]
[66.71414185 160.71475220]
[51.67609406 142.69311523]
[44.49104691 122.03676605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 143]
[5 142]
[6 141]
[7 140]
[8 139]
[21 137]
[22 136]
[23 135]
[24 134]
[25 133]
[26 132]
[27 131]
[29 94]
[30 93]
[31 92]
[32 91]
[33 90]
[35 88]
[36 87]
[37 86]
[41 82]
[42 81]
[43 80]
[47 74]
[48 73]
[50 71]
[51 70]
[52 69]
[54 67]
[55 66]
[56 65]
[96 125]
[97 124]
[98 123]
[99 122]
[101 120]
[102 119]
[103 118]
[104 117]
[105 116]
[106 115]
[107 114]
[144 161]
[145 160]
[146 159]
[148 158]
[149 157]
[150 156]
[163 182]
[164 181]
[165 180]
[167 178]
[168 177]
[169 176]
[183 195]
[184 194]
[185 193]
[186 192]
[197 218]
[198 217]
[199 216]
[200 215]
[203 212]
[204 211]
[205 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
