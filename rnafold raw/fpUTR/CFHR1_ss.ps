%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUUAGUACACUGAAAUUCAAAGUCAUGCUCAUAACUGUUAAUGAAAGCAGAUUCAAAGCAACACCACCACCACUGAAGUAUUUUUAGUUAUAUAAGAUUGGAACUACCAAGC\
) } def
/len { sequence length } bind def

/coor [
[74.71757507 177.03123474]
[68.74155426 190.78941345]
[62.76554108 204.54757690]
[56.78952408 218.30574036]
[62.81982040 232.91433716]
[56.67698669 247.47596741]
[42.00545502 253.35148621]
[27.50958061 247.05503845]
[21.78951454 232.32220459]
[28.23886681 217.89370728]
[43.03135300 212.32972717]
[49.00737000 198.57156372]
[54.98338699 184.81338501]
[60.95940399 171.05522156]
[48.47014999 162.59143066]
[37.76532364 151.96015930]
[29.21562767 139.52955627]
[23.11712837 125.73007202]
[19.68101120 111.03958893]
[19.02626228 95.96681976]
[21.17556000 81.03370667]
[26.05447197 66.75738525]
[33.49404907 53.63221741]
[43.23666382 42.11272812]
[33.77034378 30.47705841]
[18.29333687 28.71638870]
[8.85889721 16.78131294]
[10.63280678 2.03720140]
[1.16648710 -9.59846783]
[-8.29983234 -21.23413658]
[-17.76615143 -32.86980820]
[-33.49541092 -28.96578979]
[-49.30278778 -32.26794815]
[-62.06190872 -42.07180023]
[-69.27161407 -56.39209366]
[-69.54618835 -72.36463165]
[-62.88143539 -86.81909943]
[-72.66204834 -98.19185638]
[-82.44265747 -109.56461334]
[-92.22327423 -120.93737030]
[-102.00388336 -132.31013489]
[-117.78042603 -133.24623108]
[-128.21157837 -145.11917114]
[-127.10872650 -160.88493347]
[-115.12617493 -171.18997192]
[-99.37294769 -169.92050171]
[-89.19517517 -157.82966614]
[-90.63112640 -142.09074402]
[-80.85051727 -130.71798706]
[-71.06990051 -119.34523010]
[-61.28929138 -107.97247314]
[-51.50867844 -96.59971619]
[-38.22894669 -100.85127258]
[-24.28991318 -99.69152069]
[-11.81807518 -93.26396179]
[-2.72888398 -82.51831055]
[1.56742013 -69.07025146]
[0.38453999 -54.95858383]
[-6.13048172 -42.33612442]
[3.33583736 -30.70045662]
[12.80215645 -19.06478691]
[22.26847649 -7.42911768]
[37.06511307 -6.16614532]
[46.83106232 5.49922657]
[45.40601349 21.01073837]
[54.87233353 32.64640808]
[67.65557861 25.65720749]
[81.48330688 21.06873322]
[95.90899658 19.02916336]
[110.46678925 19.60436058]
[124.68658447 22.77574730]
[138.10917664 28.44091225]
[150.30113220 36.41691208]
[160.86872864 46.44618225]
[169.47070312 58.20484924]
[175.82928467 71.31319427]
[179.73913574 85.34790802]
[181.07398987 99.85578156]
[179.79075623 114.36831665]
[175.93086243 128.41685486]
[189.43266296 134.95146179]
[202.93447876 141.48608398]
[218.72697449 140.53349304]
[226.81236267 153.04252625]
[240.31417847 159.57713318]
[253.81597900 166.11175537]
[267.31777954 172.64636230]
[280.81961060 179.18098450]
[294.32141113 185.71559143]
[307.82321167 192.25021362]
[321.32501221 198.78482056]
[336.16839600 193.35804749]
[350.46615601 200.09225464]
[355.73568726 214.99215698]
[348.85070801 229.21792603]
[333.89590454 234.32965088]
[319.74374390 227.29463196]
[314.79040527 212.28663635]
[301.28860474 205.75201416]
[287.78680420 199.21740723]
[274.28497314 192.68278503]
[260.78317261 186.14817810]
[247.28137207 179.61355591]
[233.77955627 173.07894897]
[220.27775574 166.54432678]
[205.45098877 167.96430969]
[196.39985657 154.98788452]
[182.89805603 148.45327759]
[169.39624023 141.91865540]
[160.11784363 154.39537048]
[148.62831116 164.87141418]
[135.35020447 172.96147156]
[120.77191162 178.36798096]
[105.42961884 180.89210510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[24 66]
[25 65]
[28 62]
[29 61]
[30 60]
[31 59]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[80 109]
[81 108]
[82 107]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
