%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACCUACCAGGGUCGAGCUCACACACGUGCCUACGACCCGCCGCGGCGCCUGCGCGGUAGCAUCGCGGAGUCGGUGCUUUAGUACGCCGCUGGCACCUUUACUCUCGCCGGCCGCGCGAACCCGUUUGAGCUCGGUAUCCUAGUGCACACGCCUUGCAAGCGACGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[209.41300964 426.16983032]
[217.19616699 414.76934814]
[211.11170959 401.05880737]
[205.02726746 387.34823608]
[198.94281006 373.63769531]
[191.07983398 372.42367554]
[184.26823425 368.13293457]
[179.67121887 361.40972900]
[178.10865784 353.32046509]
[179.91172791 345.18487549]
[184.85621643 338.36065674]
[179.78283691 324.24465942]
[174.70945740 310.12869263]
[169.63607788 296.01272583]
[164.56269836 281.89672852]
[159.23382568 267.87521362]
[153.65122986 253.95275879]
[148.06863403 240.03031921]
[142.48603821 226.10786438]
[136.90342712 212.18540955]
[131.32083130 198.26296997]
[125.73823547 184.34051514]
[120.15563965 170.41806030]
[108.23741150 161.48469543]
[110.28282928 145.79626465]
[104.70023346 131.87382507]
[90.22260284 130.69909668]
[77.73223877 123.28474426]
[69.76783752 111.13772583]
[54.87221146 112.90416718]
[39.97658539 114.67060852]
[25.08095932 116.43704987]
[10.18533230 118.20349121]
[1.58495522 127.84710693]
[-10.88258648 128.99438477]
[-20.46329880 121.57289124]
[-35.38854599 123.06855774]
[-45.19859695 135.45962524]
[-60.90658188 137.20166016]
[-73.19323730 127.26114655]
[-74.76910400 111.53562164]
[-64.69924927 99.35475159]
[-48.95793915 97.94523621]
[-36.88421249 108.14331055]
[-21.95896721 106.64764404]
[-8.30698586 95.64507294]
[8.41889000 103.30786896]
[23.31451607 101.54142761]
[38.21014404 99.77497864]
[53.10577011 98.00853729]
[68.00139618 96.24209595]
[75.91396332 78.60150909]
[92.50000000 68.66658783]
[92.50000000 53.66659164]
[92.50000000 38.66659164]
[92.50000000 23.66658974]
[92.50000000 8.66659069]
[92.50000000 -6.33340931]
[92.50000000 -21.33341026]
[92.50000000 -36.33340836]
[83.87751007 -40.95383453]
[77.58336639 -48.36644745]
[74.45948792 -57.51404953]
[74.89957428 -67.11220551]
[78.80004120 -75.82955933]
[85.58025360 -82.47252655]
[94.26860809 -86.14867401]
[95.35721588 -101.10911560]
[96.44583130 -116.06956482]
[97.39855957 -131.03927612]
[98.21533966 -146.01702881]
[99.03211212 -160.99476624]
[99.84888458 -175.97251892]
[89.91326904 -193.48544312]
[101.08810425 -209.24008179]
[101.36048126 -224.23760986]
[101.63285828 -239.23513794]
[101.90523529 -254.23265076]
[102.17761230 -269.23019409]
[102.44999695 -284.22772217]
[99.56300354 -290.23971558]
[100.09275055 -295.94326782]
[103.01444244 -299.76220703]
[103.83121490 -314.73995972]
[104.64798737 -329.71771240]
[95.05205536 -342.57452393]
[99.26016235 -358.05584717]
[114.04420471 -364.28573608]
[128.06314087 -356.48513794]
[130.56283569 -340.63803101]
[119.62573242 -328.90093994]
[118.80895996 -313.92318726]
[117.99218750 -298.94543457]
[117.44751740 -283.95532227]
[117.17514038 -268.95779419]
[116.90276337 -253.96028137]
[116.63038635 -238.96275330]
[116.35800934 -223.96522522]
[116.08563232 -208.96769714]
[123.84051514 -202.24696350]
[126.65647888 -192.15037537]
[123.36421204 -181.96742249]
[114.82662964 -175.15574646]
[114.00985718 -160.17799377]
[113.19308472 -145.20025635]
[112.37631226 -130.22250366]
[115.16179657 -123.34777069]
[111.40627289 -114.98094940]
[110.31766510 -100.02050781]
[109.22904968 -85.06005859]
[123.86564636 -70.83571625]
[123.31368256 -50.14134979]
[107.50000000 -36.33340836]
[107.50000000 -21.33341026]
[107.50000000 -6.33340931]
[107.50000000 8.66659069]
[107.50000000 23.66658974]
[107.50000000 38.66659164]
[107.50000000 53.66659164]
[107.50000000 68.66658783]
[118.63260651 73.71581268]
[127.08296204 82.54876709]
[131.63459778 93.89390564]
[131.63229370 106.11804199]
[127.07637024 117.46145630]
[118.62268066 126.29122162]
[124.20528412 140.21366882]
[136.52281189 150.14286804]
[134.07807922 164.83546448]
[139.66069031 178.75791931]
[145.24328613 192.68037415]
[150.82588196 206.60281372]
[156.40847778 220.52526855]
[161.99108887 234.44770813]
[167.57368469 248.37016296]
[173.15628052 262.29260254]
[178.15438843 266.70825195]
[179.88484192 272.16870117]
[178.67868042 276.82336426]
[183.75205994 290.93933105]
[188.82543945 305.05529785]
[193.89881897 319.17129517]
[198.97219849 333.28726196]
[217.12886047 346.39001465]
[212.65336609 367.55322266]
[218.73782349 381.26379395]
[224.82228088 394.97433472]
[230.90673828 408.68490601]
[247.47851562 411.98574829]
[258.71582031 424.38177490]
[260.34698486 440.86663818]
[251.92735291 454.93966675]
[258.25976562 468.53747559]
[264.59219360 482.13531494]
[270.92459106 495.73312378]
[277.38021851 509.27285767]
[283.95849609 522.75347900]
[290.53677368 536.23406982]
[304.42922974 544.94793701]
[303.55865479 561.32397461]
[288.82064819 568.51586914]
[275.37640381 559.12524414]
[277.05621338 542.81231689]
[270.47790527 529.33172607]
[263.89962769 515.85113525]
[258.11965942 511.20220947]
[257.32678223 502.06552124]
[250.99436951 488.46771240]
[244.66195679 474.86990356]
[238.32952881 461.27209473]
[225.02569580 459.93896484]
[214.03494263 452.13626099]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 148]
[3 147]
[4 146]
[5 145]
[11 143]
[12 142]
[13 141]
[14 140]
[15 139]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[23 129]
[25 127]
[26 126]
[29 51]
[30 50]
[31 49]
[32 48]
[33 47]
[36 45]
[37 44]
[53 120]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[67 110]
[68 109]
[69 108]
[70 106]
[71 105]
[72 104]
[73 103]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[83 93]
[84 92]
[85 91]
[152 170]
[153 169]
[154 168]
[155 167]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
