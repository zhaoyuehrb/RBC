%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:41:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGCUUCCAACGCAUGCGCCCCACCCCACAUUUCACAGUCGCCAUGACGACCGGGAGGUCCGCAACGGCUGCGGGGACAAGUCCGUUGAGGCUGCCAGGCGAGUCAGGUCUCUCUGGACCUCGCCUGACUCGGCUGGGCUGUGCCUGAAAUUGACCCAGCUCCACCAUACUCCUUGAUU\
) } def
/len { sequence length } bind def

/coor [
[48.54421616 120.49756622]
[61.27104187 112.55856323]
[75.59516907 108.10666656]
[90.57635498 107.43267059]
[75.71914673 105.36787415]
[60.86193848 103.30307007]
[46.00473022 101.23826599]
[31.14752579 99.17346191]
[16.29031944 97.10865784]
[7.33307743 99.02988434]
[1.19534874 94.87785339]
[-13.62400436 92.55691528]
[-28.44335747 90.23597717]
[-43.26271057 87.91503143]
[-58.09387589 93.42385864]
[-69.47068024 83.81046295]
[-84.29003906 81.48951721]
[-96.97479248 90.53025055]
[-111.97065735 87.96537781]
[-120.51144409 75.81668854]
[-135.35028076 73.62373352]
[-150.20747375 71.55892944]
[-165.06468201 69.49413300]
[-179.92189026 67.42932892]
[-168.95301819 77.66082764]
[-162.90307617 91.38665009]
[-162.75100708 106.38587952]
[-168.52139282 120.23155212]
[-179.28056335 130.68334961]
[-193.28762817 136.05010986]
[-208.27615356 135.46347046]
[-221.82090759 129.01834106]
[-231.73027039 117.75759888]
[-236.40084839 103.50327301]
[-235.07691956 88.56181335]
[-227.97268677 75.35083771]
[-216.23767090 66.00794983]
[-201.76808167 62.04472351]
[-215.88305664 56.96852875]
[-229.99801636 51.89233017]
[-244.11297607 46.81613541]
[-258.22793579 41.73994064]
[-272.34289551 36.66374207]
[-281.92871094 41.87257004]
[-292.57855225 40.95014191]
[-300.78125000 34.44377899]
[-303.96664429 24.70138741]
[-317.89797974 19.14102173]
[-332.27645874 25.13245583]
[-346.32562256 19.29499817]
[-351.94891357 5.55039883]
[-365.88024902 -0.00996685]
[-379.81161499 -5.57033253]
[-393.74295044 -11.13069820]
[-409.88632202 -8.24565887]
[-420.24822998 -20.95641136]
[-414.16918945 -36.18722153]
[-397.90283203 -38.26993942]
[-388.18258667 -25.06204224]
[-374.25125122 -19.50167656]
[-360.31988525 -13.94131088]
[-346.38854980 -8.38094521]
[-332.84664917 -14.47620010]
[-318.63906860 -9.03565598]
[-312.33761597 5.20967817]
[-298.40628052 10.77004433]
[-279.54446411 6.58207512]
[-267.26672363 22.54877853]
[-253.15174866 27.62497520]
[-239.03678894 32.70117188]
[-224.92181396 37.77736664]
[-210.80685425 42.85356140]
[-196.69189453 47.92975998]
[-186.91595459 45.90674973]
[-177.85708618 52.57212067]
[-162.99987793 54.63692093]
[-148.14268494 56.70172501]
[-133.28547668 58.76652908]
[-126.20912933 56.56733322]
[-118.19049835 60.99733353]
[-106.34442902 52.04154205]
[-91.28244019 54.18419647]
[-81.96909332 66.67016602]
[-67.14974213 68.99110413]
[-53.37855911 63.31626892]
[-40.94177246 73.09568024]
[-26.12241745 75.41661835]
[-11.30306435 77.73756409]
[3.51628876 80.05850220]
[18.35512161 82.25145721]
[33.21232986 84.31625366]
[48.06953430 86.38105774]
[62.92674255 88.44586182]
[77.78395081 90.51066589]
[92.64115143 92.57546997]
[90.15055084 82.17694092]
[93.13498688 70.51512146]
[101.90170288 59.86150360]
[112.41636658 49.16375351]
[122.93103027 38.46600342]
[133.44569397 27.76825714]
[143.96035767 17.07050896]
[154.47502136 6.37275982]
[164.98968506 -4.32498837]
[175.50436401 -15.02273655]
[185.83280945 -25.90038109]
[195.97195435 -36.95468140]
[206.11111450 -48.00897980]
[216.25027466 -59.06328201]
[226.38941956 -70.11758423]
[229.41638184 -86.23494720]
[244.97552490 -91.41619110]
[257.06094360 -80.33129120]
[253.24017334 -64.38344574]
[237.44372559 -59.97842407]
[227.30456543 -48.92412567]
[217.16542053 -37.86982727]
[207.02626038 -26.81552696]
[196.88710022 -15.76122665]
[196.19754028 -11.01156616]
[192.50035095 -6.65266705]
[186.20210266 -4.50807190]
[175.68743896 6.18967628]
[165.17277527 16.88742447]
[154.65811157 27.58517265]
[144.14344788 38.28292084]
[133.62878418 48.98067093]
[123.11411285 59.67841721]
[112.59944916 70.37616730]
[114.01498413 77.74137115]
[128.74543762 74.91053772]
[131.57604980 89.64103699]
[116.84604645 92.47178650]
[118.26158142 99.83699036]
[131.99270630 105.87490082]
[145.72381592 111.91281128]
[159.45494080 117.95072174]
[173.18606567 123.98862457]
[186.91717529 130.02653503]
[200.64830017 136.06443787]
[214.43101501 141.98362732]
[230.14956665 140.18420410]
[238.89514160 152.24090576]
[252.72843933 158.04090881]
[266.54638672 150.71983337]
[281.82653809 154.04409790]
[291.35409546 166.44410706]
[290.63040161 182.06492615]
[279.99716187 193.53091431]
[264.47509766 195.42814636]
[251.39324951 186.86083984]
[246.92843628 171.87419128]
[233.09513855 166.07418823]
[218.36604309 168.28846741]
[208.63101196 155.81690979]
[201.22747803 156.13098145]
[194.61039734 149.79556274]
[180.87927246 143.75765991]
[167.14814758 137.71974182]
[153.41703796 131.68183899]
[139.68591309 125.64392853]
[125.95478821 119.60602570]
[112.22367096 113.56811523]
[124.62602997 122.00502014]
[134.48330688 133.31140137]
[141.15097046 146.74800110]
[144.19308472 161.43627930]
[143.41073608 176.41586304]
[138.85507202 190.70733643]
[130.82397461 203.37625122]
[119.84252930 213.59426880]
[106.62876129 220.69329834]
[92.04663086 224.20918274]
[77.04957581 223.91204834]
[62.61816025 219.82128906]
[49.69596481 212.20440674]
[39.12789536 201.55941772]
[31.60493279 188.58232117]
[27.61895561 174.12161255]
[27.43058586 159.12280273]
[31.05213737 144.56654358]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 95]
[5 94]
[6 93]
[7 92]
[8 91]
[9 90]
[11 89]
[12 88]
[13 87]
[14 86]
[16 84]
[17 83]
[20 80]
[21 78]
[22 77]
[23 76]
[24 75]
[38 73]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[47 66]
[48 65]
[51 62]
[52 61]
[53 60]
[54 59]
[98 129]
[99 128]
[100 127]
[101 126]
[102 125]
[103 124]
[104 123]
[105 122]
[106 119]
[107 118]
[108 117]
[109 116]
[110 115]
[134 163]
[135 162]
[136 161]
[137 160]
[138 159]
[139 158]
[140 157]
[141 155]
[143 153]
[144 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
