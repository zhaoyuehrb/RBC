%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:54:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACACUUACAGGAUGUGUGUAGUGUGGCAUGACAGAGAACUUUGGUUUCCUUUAAUGUGACUGUAGACCUGGCAGUGUUACUAUAAGAAUCACUGGCAAUCAGACACCCGGGUGUGCUGAGCUAGCACUCAGUGGGGGCGGCUACUGCUCAUGUGAUUGUGGAGUAGACAGUUGGAAGAAGUACCCAGUCCAUUUGGAGAGUUAAAACUGUGCCUAACAGAGGUGUCCUCUGACUUUUCUUCUGCAAGCUCC\
) } def
/len { sequence length } bind def

/coor [
[69.67270660 335.62503052]
[56.15340424 342.12338257]
[41.96136856 337.26681519]
[35.25771332 323.84790039]
[29.66718483 337.76715088]
[24.07665443 351.68643188]
[18.48612404 365.60568237]
[12.89559460 379.52496338]
[7.39091253 393.47839355]
[1.97228777 407.46548462]
[-3.44633722 421.45257568]
[-8.86496258 435.43963623]
[-3.72627068 450.63745117]
[-12.52531147 464.05224609]
[-28.51221466 465.39331055]
[-39.42319489 453.63195801]
[-36.88828278 437.79043579]
[-22.85204506 430.02102661]
[-17.43342018 416.03393555]
[-12.01479530 402.04684448]
[-6.59617090 388.05978394]
[-7.10901785 380.70809937]
[-1.02367175 373.93441772]
[4.56685829 360.01516724]
[10.15738773 346.09588623]
[15.74791813 332.17663574]
[21.33844757 318.25735474]
[26.41082191 304.14102173]
[30.95811272 289.84689331]
[35.50540161 275.55276489]
[31.99051094 261.07882690]
[43.54726791 250.27365112]
[48.09455872 235.97952271]
[47.13010788 228.67337036]
[52.78691864 221.53791809]
[57.50996399 207.30088806]
[62.23300552 193.06387329]
[66.95604706 178.82684326]
[71.59130859 164.56098938]
[76.13859558 150.26686096]
[80.68588257 135.97273254]
[69.47953033 131.51831055]
[59.39878464 123.51178741]
[51.57102203 112.27959442]
[47.01572037 98.50266266]
[46.53464890 83.17783356]
[31.65998077 85.11282349]
[16.78530884 87.04781342]
[1.91063905 88.98280334]
[-12.96403122 90.91779327]
[-25.65079308 100.37065125]
[-39.26983261 94.33980560]
[-44.01403046 108.84688568]
[-54.58898926 119.85293579]
[-68.89503479 125.17269135]
[-84.09169006 123.74991608]
[-97.16165924 115.86710358]
[-105.50988007 103.08938599]
[-107.47881317 87.95379639]
[-102.67752075 73.46551514]
[-92.05930328 62.50119781]
[-77.73241425 57.23781967]
[-62.54147720 58.72042847]
[-49.50265503 66.65464783]
[-41.20481873 79.46514130]
[-29.58199310 70.15068054]
[-14.89901924 76.04312134]
[-0.02434919 74.10813141]
[14.85032082 72.17314148]
[29.72499084 70.23815155]
[44.59966278 68.30316925]
[47.71833801 53.63095093]
[34.91667938 45.81317902]
[19.10644531 45.22409058]
[12.27699757 31.98747635]
[-0.52465928 24.16970253]
[-13.32631588 16.35193062]
[-26.12797356 8.53415680]
[-38.92963028 0.71638328]
[-51.44287491 9.39616203]
[-66.40589142 12.22955990]
[-81.22623444 8.72567368]
[-93.33620453 -0.50842714]
[-100.63766479 -13.87287903]
[-101.86559296 -29.05220985]
[-96.80725098 -43.41650772]
[-86.33902740 -54.47707367]
[-72.27459717 -60.31759262]
[-57.05070877 -59.92616653]
[-43.30500031 -53.37060928]
[-33.41899490 -41.78670883]
[-29.10549927 -27.18144608]
[-31.11185646 -12.08527374]
[-18.31019974 -4.26750040]
[-5.50854301 3.55027270]
[7.29311419 11.36804581]
[20.09477043 19.18581963]
[34.98934555 19.21573067]
[42.73445511 33.01152039]
[55.53610992 40.82929611]
[61.88829803 36.84185028]
[53.91340637 24.13747597]
[45.93851471 11.43310356]
[37.96383286 -1.27140236]
[50.66846848 -9.24587250]
[58.64288712 3.45821118]
[66.61777496 16.16258430]
[74.59267426 28.86695671]
[80.94485474 24.87951088]
[79.46884918 9.95230770]
[77.99285126 -4.97489595]
[76.51684570 -19.90209961]
[65.44271851 -34.63035965]
[73.33117676 -50.31975174]
[64.11436462 -63.17902374]
[70.39584351 -76.68429565]
[68.73605347 -91.59217834]
[67.07626343 -106.50006866]
[65.41647339 -121.40795135]
[63.75668335 -136.31584167]
[62.09689331 -151.22372437]
[54.33504105 -166.29655457]
[66.67012024 -177.92764282]
[81.26134491 -169.29443359]
[77.00478363 -152.88351440]
[78.66457367 -137.97563171]
[80.32436371 -123.06774902]
[81.98415375 -108.15985870]
[83.64394379 -93.25196838]
[85.30373383 -78.34408569]
[94.40182495 -66.55112457]
[88.23906708 -51.97954178]
[97.47727966 -44.19773483]
[98.99654388 -31.81118965]
[91.44404602 -21.37810326]
[92.92005157 -6.45090008]
[94.39605713 8.47630310]
[95.87206268 23.40350723]
[108.52706909 31.45650673]
[122.67438507 26.47118378]
[136.82170105 21.48586273]
[133.74436951 13.96133804]
[134.24990845 4.46573496]
[139.17634583 -5.34444237]
[149.00559998 -16.67518425]
[158.83486938 -28.00592422]
[168.66412354 -39.33666611]
[178.49337769 -50.66740799]
[181.69178772 -66.16194916]
[195.87638855 -70.70578003]
[199.07479858 -86.20031738]
[213.25938416 -90.74415588]
[223.08865356 -102.07489777]
[221.72015381 -117.81982422]
[231.94964600 -129.86692810]
[247.70816040 -131.06889343]
[259.64645386 -120.71260071]
[260.68173218 -104.94225311]
[250.19979858 -93.11412811]
[234.41938782 -92.24563599]
[224.59013367 -80.91489410]
[222.09477234 -66.23080444]
[207.20712280 -60.87652206]
[204.71177673 -46.19243240]
[189.82412720 -40.83815002]
[179.99485779 -29.50740814]
[170.16560364 -18.17666626]
[160.33634949 -6.84592581]
[150.50709534 4.48481560]
[156.69242859 18.15015602]
[171.69215393 18.24255371]
[186.69186401 18.33495331]
[201.69157410 18.42735291]
[216.69129944 18.51975250]
[231.69100952 18.61215210]
[237.14506531 9.49980640]
[245.81457520 3.50682259]
[256.10754395 1.65261078]
[266.16714478 4.20392179]
[274.20642090 10.63877678]
[278.82601929 19.75161171]
[293.81207275 20.39820862]
[307.93295288 13.26297855]
[320.31484985 21.54171562]
[331.90725708 11.13719940]
[347.09603882 12.00642395]
[356.94372559 23.12212753]
[371.92977905 23.76872635]
[386.91583252 24.41532326]
[401.90188599 25.06192207]
[414.64889526 15.32057667]
[430.17700195 19.35256958]
[436.57440186 34.06490326]
[428.93356323 48.17153168]
[413.11584473 50.85105896]
[401.25527954 40.04797745]
[386.26922607 39.40138245]
[371.28317261 38.75478363]
[356.29711914 38.10818481]
[345.52862549 48.33436966]
[330.32141113 47.89210892]
[319.66827393 36.52777100]
[306.61929321 43.70925140]
[293.16546631 35.38426590]
[278.17941284 34.73766708]
[264.78945923 48.91977692]
[244.98054504 48.63312912]
[231.59861755 33.61186600]
[216.59889221 33.51946640]
[201.59918213 33.42706680]
[186.59947205 33.33466721]
[171.59974670 33.24227142]
[156.60003662 33.14987183]
[141.80702209 35.63317871]
[127.65970612 40.61849976]
[113.51239014 45.60382462]
[135.58673096 61.74992752]
[146.04731750 84.96549988]
[143.82913208 108.44172668]
[131.32966614 126.18253326]
[140.87677002 137.75199890]
[150.42388916 149.32147217]
[159.97100830 160.89094543]
[169.51811218 172.46040344]
[179.06523132 184.02987671]
[193.80996704 192.39822388]
[189.85040283 208.88331604]
[172.91343689 209.64201355]
[167.49575806 193.57699585]
[157.94865417 182.00752258]
[148.40153503 170.43804932]
[138.85441589 158.86857605]
[129.30731201 147.29911804]
[119.76019287 135.72964478]
[115.12533569 137.92488098]
[110.25185394 139.52178955]
[105.21662903 140.49517822]
[100.09910583 140.82968140]
[94.98001862 140.52001953]
[90.43272400 154.81416321]
[85.88543701 169.10829163]
[86.26777649 178.20597839]
[81.19307709 183.54988098]
[76.47003174 197.78691101]
[71.74698639 212.02394104]
[67.02394104 226.26095581]
[62.38868713 240.52680969]
[57.84139633 254.82093811]
[61.03103638 270.31729126]
[49.79953384 280.10006714]
[45.25224304 294.39419556]
[40.70495224 308.68832397]
[54.41603088 302.60504150]
[68.45345306 307.89187622]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 27]
[5 26]
[6 25]
[7 24]
[8 23]
[9 21]
[10 20]
[11 19]
[12 18]
[28 252]
[29 251]
[30 250]
[32 248]
[33 247]
[35 246]
[36 245]
[37 244]
[38 243]
[39 241]
[40 240]
[41 239]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[52 65]
[72 100]
[73 99]
[75 97]
[76 96]
[77 95]
[78 94]
[79 93]
[109 138]
[110 137]
[111 136]
[112 135]
[114 132]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[121 125]
[139 216]
[140 215]
[141 214]
[144 169]
[145 168]
[146 167]
[147 166]
[148 165]
[150 163]
[152 161]
[153 160]
[170 213]
[171 212]
[172 211]
[173 210]
[174 209]
[175 208]
[181 205]
[182 204]
[184 202]
[187 199]
[188 198]
[189 197]
[190 196]
[220 234]
[221 233]
[222 232]
[223 231]
[224 230]
[225 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
