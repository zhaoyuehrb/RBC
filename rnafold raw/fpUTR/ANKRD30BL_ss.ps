%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACGGUUCUGCUCAGCUGCCUAAAGGUUCUGCUCAGGUGCCUAACGGUUCUGCUCAGCUGCCUAACGGUUUUGCGCAGCCAUUUUCUCCCGGGAGAGGUUGGAGUGUCCAAAAGCUUGGCCCGACUGAGAUUUCUAGUCUUGUCAGGGCGGAUGCAGGGACUGAAGAAGGGCGAGGGCGAGCGGCGGGGACUGGGGAAGGGCGAGCAGCGGGAGGCACGGGCUCUCUCUAGCAGGUGGCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[33.54637527 920.87695312]
[28.50353050 935.28295898]
[17.70349121 946.06823730]
[3.29061389 951.09130859]
[-11.87341499 949.35498047]
[-24.77776527 941.20385742]
[-32.86027145 928.25640869]
[-34.51614380 913.08337402]
[-29.41660500 898.69738770]
[-18.57417870 887.95471191]
[-4.14163113 882.98840332]
[-2.43519211 868.08581543]
[-0.72875339 853.18316650]
[0.88326073 838.27001953]
[2.40078568 823.34698486]
[3.91831040 808.42395020]
[5.43583536 793.50091553]
[6.95336008 778.57788086]
[8.47088528 763.65484619]
[9.98841000 748.73181152]
[11.50593472 733.80877686]
[13.02345943 718.88574219]
[1.84652424 706.30468750]
[3.26670408 689.19671631]
[16.89128304 678.20599365]
[18.21965027 663.26495361]
[19.54801941 648.32385254]
[7.28068447 639.87530518]
[0.84649211 626.33068848]
[2.06388736 611.28460693]
[10.70573425 598.78601074]
[24.53352356 592.24847412]
[25.86189079 577.30737305]
[27.19025803 562.36633301]
[28.51862526 547.42529297]
[26.21130562 543.26885986]
[26.47382355 537.62237549]
[30.07459641 532.12414551]
[31.78103447 517.22155762]
[33.48747253 502.31890869]
[35.19391251 487.41629028]
[36.90035248 472.51367188]
[38.60678864 457.61105347]
[29.16902542 446.14526367]
[30.68730354 431.00759888]
[42.77766037 421.18612671]
[44.48410034 406.28350830]
[42.60964584 403.32403564]
[42.06190872 399.31616211]
[43.31529999 394.88705444]
[46.54898071 390.85104370]
[48.82039642 376.02401733]
[51.09181595 361.19699097]
[53.36323166 346.36996460]
[55.63464737 331.54293823]
[57.90606308 316.71591187]
[55.81738663 309.64556885]
[60.30131149 301.71594238]
[62.76036453 286.91885376]
[65.21942139 272.12179565]
[57.13898849 254.53964233]
[70.24142456 239.19938660]
[72.32484436 224.34477234]
[74.40825653 209.49017334]
[72.31441498 205.22224426]
[72.86258698 199.59629822]
[76.73722076 194.28750610]
[79.19627380 179.49044800]
[81.65532684 164.69337463]
[84.11437988 149.89631653]
[86.57343292 135.09925842]
[89.03248596 120.30219269]
[91.49153900 105.50513458]
[89.60430145 97.69032288]
[94.07660675 90.53669739]
[96.72290039 75.77197266]
[99.36920166 61.00724792]
[94.18788147 46.05851746]
[104.04916382 34.89588547]
[106.69545746 20.13116074]
[109.24818420 5.34997129]
[103.87792206 -9.53192520]
[113.59701538 -20.81857872]
[116.05606842 -35.61564255]
[118.51512146 -50.41270447]
[120.97417450 -65.20976257]
[123.43322754 -80.00682831]
[118.06296539 -94.88872528]
[127.78205872 -106.17537689]
[130.24110413 -120.97244263]
[132.70016479 -135.76950073]
[119.85718536 -143.85241699]
[111.11083221 -156.20330811]
[107.76850128 -170.92207336]
[110.30914307 -185.75895691]
[118.31491852 -198.45826721]
[130.53952026 -207.10144043]
[145.10212708 -210.39683533]
[147.56118774 -225.19389343]
[150.02023315 -239.99095154]
[152.47929382 -254.78802490]
[141.76365662 -265.85513306]
[139.64414978 -280.93365479]
[146.72605896 -294.21185303]
[160.10855103 -300.69619751]
[162.56761169 -315.49325562]
[165.02665710 -330.29031372]
[167.48571777 -345.08737183]
[169.94476318 -359.88442993]
[172.40382385 -374.68148804]
[161.43579102 -364.44909668]
[146.69331360 -361.68151855]
[132.76100159 -367.23944092]
[123.97152710 -379.39450073]
[123.05822754 -394.36666870]
[130.30511475 -407.49990845]
[143.45858765 -414.71008301]
[158.42814636 -413.75494385]
[170.55856323 -404.93154907]
[176.07774353 -390.98181152]
[180.20417786 -405.40307617]
[184.33062744 -419.82431030]
[188.45706177 -434.24557495]
[192.49208069 -448.69265747]
[196.43551636 -463.16503906]
[200.37893677 -477.63739014]
[199.61521912 -486.71493530]
[204.46507263 -492.26751709]
[208.59152222 -506.68875122]
[212.71795654 -521.10998535]
[216.84440613 -535.53125000]
[220.97084045 -549.95251465]
[225.09729004 -564.37377930]
[223.64151001 -581.26507568]
[239.46972656 -587.33996582]
[249.68887329 -573.81201172]
[239.51853943 -560.24731445]
[235.39208984 -545.82604980]
[231.26565552 -531.40484619]
[227.13920593 -516.98358154]
[223.01277161 -502.56231689]
[218.88632202 -488.14105225]
[214.85130310 -473.69396973]
[210.90788269 -459.22158813]
[206.96444702 -444.74923706]
[208.23522949 -437.48718262]
[202.87831116 -430.11914062]
[198.75187683 -415.69787598]
[194.62542725 -401.27661133]
[190.49899292 -386.85537720]
[187.20088196 -372.22244263]
[184.74183655 -357.42538452]
[182.28277588 -342.62832642]
[179.82371521 -327.83126831]
[177.36466980 -313.03421021]
[174.90560913 -298.23715210]
[185.47151184 -287.77291870]
[187.87808228 -272.91787720]
[180.99554443 -259.33538818]
[167.27635193 -252.32896423]
[164.81729126 -237.53190613]
[162.35824585 -222.73484802]
[159.89918518 -207.93777466]
[172.61320496 -200.10942078]
[181.38517761 -187.97691345]
[184.85319519 -173.37083435]
[182.45848083 -158.50970459]
[174.53518677 -145.66310120]
[162.26420593 -136.80499268]
[147.49722290 -133.31045532]
[145.03817749 -118.51338959]
[142.57911682 -103.71632385]
[148.12527466 -89.89281464]
[138.23028564 -77.54777527]
[135.77124023 -62.75071335]
[133.31217957 -47.95364761]
[130.85313416 -33.15658569]
[128.39407349 -18.35952568]
[133.94023132 -4.53601313]
[124.04524994 7.80902481]
[126.04419708 14.90524292]
[121.46018219 22.77745819]
[118.81388855 37.54218292]
[124.18448639 51.43484116]
[114.13392639 63.65354538]
[111.48762512 78.41827393]
[108.84133148 93.18299866]
[106.28860474 107.96418762]
[103.82955170 122.76124573]
[101.37049866 137.55830383]
[98.91144562 152.35537720]
[96.45238495 167.15243530]
[93.99333191 181.94949341]
[91.53427887 196.74656677]
[89.26286316 211.57357788]
[87.17945099 226.42819214]
[85.09603119 241.28280640]
[92.11748505 249.54983521]
[93.41694641 260.09722900]
[88.80602264 269.42800903]
[80.01647949 274.58087158]
[77.55742645 289.37792969]
[75.09837341 304.17498779]
[72.73309326 318.98733521]
[70.46166992 333.81436157]
[68.19025421 348.64135742]
[65.91883850 363.46838379]
[63.64742279 378.29541016]
[61.37600708 393.12243652]
[59.38671875 407.98995972]
[57.68028259 422.89257812]
[67.23757172 435.19281006]
[65.29470825 450.28189087]
[53.50941086 459.31750488]
[51.80297089 474.22012329]
[50.09653091 489.12274170]
[48.39009476 504.02536011]
[46.68365479 518.92797852]
[44.97721481 533.83056641]
[43.45969009 548.75366211]
[42.13132477 563.69470215]
[40.80295563 578.63574219]
[39.47459030 593.57684326]
[51.93213654 602.45135498]
[58.23343658 616.27850342]
[56.77730942 631.30334473]
[48.05449677 643.50042725]
[34.48908234 649.65222168]
[33.16071701 664.59332275]
[31.83234978 679.53436279]
[41.59858322 688.78875732]
[44.22107697 701.78686523]
[38.96347427 713.74798584]
[27.94649887 720.40325928]
[26.42897415 735.32629395]
[24.91144943 750.24932861]
[23.39392471 765.17236328]
[21.87639999 780.09539795]
[20.35887527 795.01843262]
[18.84135056 809.94146729]
[17.32382584 824.86450195]
[15.80630016 839.78753662]
[18.04783058 848.61706543]
[14.17386627 854.88958740]
[12.46742725 869.79223633]
[10.76098824 884.69482422]
[23.69733810 892.79504395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 246]
[12 245]
[13 244]
[14 242]
[15 241]
[16 240]
[17 239]
[18 238]
[19 237]
[20 236]
[21 235]
[22 234]
[25 230]
[26 229]
[27 228]
[32 223]
[33 222]
[34 221]
[35 220]
[38 219]
[39 218]
[40 217]
[41 216]
[42 215]
[43 214]
[46 211]
[47 210]
[51 209]
[52 208]
[53 207]
[54 206]
[55 205]
[56 204]
[58 203]
[59 202]
[60 201]
[62 197]
[63 196]
[64 195]
[67 194]
[68 193]
[69 192]
[70 191]
[71 190]
[72 189]
[73 188]
[75 187]
[76 186]
[77 185]
[79 183]
[80 182]
[81 180]
[83 178]
[84 177]
[85 176]
[86 175]
[87 174]
[89 172]
[90 171]
[91 170]
[98 163]
[99 162]
[100 161]
[101 160]
[105 156]
[106 155]
[107 154]
[108 153]
[109 152]
[110 151]
[120 150]
[121 149]
[122 148]
[123 147]
[124 145]
[125 144]
[126 143]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
