%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGAAGUGAGGUGAGGUGUGGUGUUGGGCCGGUGCUGCUGCCGCUGCCGCCGGGGAGGAGGUGGAAAGCGGGGCUGUGGCGGGCCGGCGGGGGCGGCCUGUCAGCCGCUGCUUUGUCUCCUUAGCUCGGGUCCCUUCUGCGCUGCCGCAGGGAGGCCGCCCGGGCCAGGCGAGCCGAACCA\
) } def
/len { sequence length } bind def

/coor [
[19.42448997 652.57714844]
[16.62112999 667.51733398]
[8.30960941 680.24475098]
[-4.24262524 688.81854248]
[-19.12144852 691.93127441]
[-34.05794907 689.10827637]
[-46.77441788 680.78002930]
[-55.33168793 668.21649170]
[-58.42483521 653.33361816]
[-55.58218002 638.40081787]
[-47.23720169 625.69531250]
[-34.66245651 617.15460205]
[-19.77549362 614.08099365]
[-16.98979759 599.34197998]
[-14.20410442 584.60290527]
[-22.78304482 572.48114014]
[-20.16791916 557.49395752]
[-7.39532089 548.57775879]
[-4.60962629 533.83868408]
[-1.82393181 519.09960938]
[-10.50913620 509.56344604]
[-12.13321018 496.57131958]
[-5.87953758 484.84689331]
[6.16284609 478.78353882]
[9.19841957 464.09390259]
[2.81294203 453.80319214]
[5.23794556 441.52844238]
[15.70683193 433.96862793]
[18.99140930 419.33264160]
[22.27598572 404.69668579]
[17.51337433 390.58404541]
[28.08474731 378.81301880]
[31.36932373 364.17706299]
[34.65390015 349.54110718]
[37.93847656 334.90512085]
[36.33168793 327.67358398]
[41.40509033 320.04953003]
[44.93772507 305.47143555]
[40.41544342 291.27996826]
[51.18517303 279.69015503]
[54.71780777 265.11206055]
[58.25043869 250.53398132]
[53.72815704 236.34249878]
[64.49788666 224.75270081]
[68.03052521 210.17462158]
[66.54676056 202.91683960]
[71.74889374 195.38002014]
[75.52856445 180.86402893]
[79.30823517 166.34803772]
[83.08790588 151.83203125]
[78.80725861 137.56581116]
[89.77223969 126.16055298]
[93.55191040 111.64456177]
[88.02700806 108.55561066]
[84.12776947 102.81942749]
[83.10383606 95.34487152]
[85.68676758 87.61033630]
[91.84426880 81.37135315]
[91.33492279 66.37999725]
[90.82556915 51.38864899]
[90.31622314 36.39730072]
[89.80686951 21.40595245]
[89.29752350 6.41460180]
[88.78816986 -8.57674789]
[80.40373230 -15.55076218]
[77.31753540 -25.78129959]
[80.32073212 -35.80720901]
[88.18570709 -42.37427521]
[88.18570709 -57.37427521]
[88.18570709 -72.37427521]
[88.18570709 -87.37427521]
[88.18570709 -102.37427521]
[88.18570709 -117.37427521]
[88.18570709 -132.37428284]
[88.05834961 -147.37373352]
[87.80364227 -162.37156677]
[87.54892731 -177.36941528]
[87.29421234 -192.36724854]
[87.03950500 -207.36508179]
[83.95281219 -213.25352478]
[84.27246094 -218.95640564]
[87.03950500 -222.87451172]
[87.29421234 -237.87234497]
[87.54892731 -252.87017822]
[87.80364227 -267.86801147]
[88.05834961 -282.86584473]
[88.31306458 -297.86370850]
[88.56777191 -312.86154175]
[88.82248688 -327.85937500]
[81.32064056 -341.78894043]
[89.27294159 -354.38299561]
[83.49643707 -370.32250977]
[97.21393585 -380.28576660]
[110.58520508 -369.86245728]
[104.27077484 -354.12826538]
[111.79084778 -341.27145386]
[103.82032013 -327.60464478]
[103.56561279 -312.60681152]
[103.31089783 -297.60897827]
[103.05619049 -282.61114502]
[102.80147552 -267.61331177]
[102.54676819 -252.61547852]
[102.29205322 -237.61763000]
[102.03733826 -222.61979675]
[102.03733826 -207.61979675]
[102.29205322 -192.62196350]
[102.54676819 -177.62411499]
[102.80147552 -162.62628174]
[103.05619049 -147.62844849]
[106.32087708 -140.97872925]
[103.18570709 -132.37428284]
[103.18570709 -117.37427521]
[103.18570709 -102.37427521]
[103.18570709 -87.37427521]
[103.18570709 -72.37427521]
[103.18570709 -57.37427521]
[103.18570709 -42.37427521]
[114.06552124 -26.40539932]
[103.77952576 -9.08609676]
[104.28887177 5.90525246]
[104.79821777 20.89660263]
[105.30757141 35.88795090]
[105.81691742 50.87930298]
[106.32627106 65.87065125]
[106.83561707 80.86199951]
[118.09570312 90.77211761]
[133.03033447 89.37317657]
[147.96495056 87.97423553]
[160.98336792 78.98361206]
[174.37677002 85.50020599]
[189.31140137 84.10125732]
[204.24601746 82.70231628]
[219.18064880 81.30336761]
[230.48327637 69.91786194]
[246.41566467 71.79904175]
[254.75582886 85.50382996]
[249.10591125 100.51908875]
[233.80004883 105.32639313]
[220.57958984 96.23799133]
[205.64495850 97.63694000]
[190.71034241 99.03588104]
[175.77572632 100.43482971]
[163.82551575 109.32538605]
[149.36389160 102.90885162]
[134.42927551 104.30780029]
[119.49465179 105.70674133]
[108.06790924 115.42423248]
[104.28823853 129.94023132]
[108.29853821 145.24473572]
[97.60390472 155.61170959]
[93.82423401 170.12770081]
[90.04456329 184.64369202]
[86.26488495 199.15968323]
[82.60860443 213.70726013]
[79.07597351 228.28533936]
[83.34557343 243.51954651]
[72.82852173 254.06661987]
[69.29589081 268.64471436]
[65.76325989 283.22277832]
[70.03285980 298.45700073]
[59.51580811 309.00405884]
[55.98317337 323.58215332]
[52.57444763 338.18969727]
[49.28986740 352.82568359]
[46.00529099 367.46163940]
[42.72071457 382.09762573]
[47.24839401 397.25711060]
[36.91195297 407.98126221]
[33.62737656 422.61724854]
[30.34280014 437.25320435]
[36.24676514 454.68408203]
[23.88805199 467.12948608]
[20.85247803 481.81912231]
[30.72814751 496.24505615]
[27.19582176 513.02221680]
[12.91512871 521.88531494]
[10.12943459 536.62438965]
[7.34373999 551.36346436]
[15.98120594 564.32617188]
[12.94615173 579.23394775]
[0.53495651 587.38861084]
[-2.25073791 602.12768555]
[-5.03643227 616.86669922]
[7.70190382 625.16149902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 183]
[14 182]
[15 181]
[18 178]
[19 177]
[20 176]
[24 173]
[25 172]
[28 170]
[29 169]
[30 168]
[32 166]
[33 165]
[34 164]
[35 163]
[37 162]
[38 161]
[40 159]
[41 158]
[42 157]
[44 155]
[45 154]
[47 153]
[48 152]
[49 151]
[50 150]
[52 148]
[53 147]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
[63 120]
[64 119]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
[74 111]
[75 109]
[76 108]
[77 107]
[78 106]
[79 105]
[82 104]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[91 95]
[126 146]
[127 145]
[128 144]
[130 142]
[131 141]
[132 140]
[133 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
