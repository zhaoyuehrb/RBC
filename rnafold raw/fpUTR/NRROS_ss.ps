%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCCGAGCAGCCCGCUCUCCAUGUGACUUCAGUUUCCGUCCGUUCCUUCCGCUGGUGCUAAAAUAAUCUGAUGCCCCACAGCAAGGAGGUAGCCCAGCCCCGCGUUCGGCUGCUCUCGAGGAGGCCGGAGCCCCCGGAGACGAUGCGCCCCGCGCAGCCGCCUGCGCCUGCGGGAGCCGGCUGCCCUUGAG\
) } def
/len { sequence length } bind def

/coor [
[276.93341064 226.78596497]
[262.39044189 230.46041870]
[248.41908264 225.00135803]
[240.21966553 212.44071960]
[240.84413147 197.45372009]
[250.06001282 185.61871338]
[264.43536377 181.34080505]
[250.84646606 174.98930359]
[237.25755310 168.63780212]
[223.66865540 162.28630066]
[210.07974243 155.93479919]
[196.49082947 149.58329773]
[182.90193176 143.23179626]
[169.31301880 136.88029480]
[155.57385254 130.86071777]
[141.69253540 125.17661285]
[127.81121826 119.49250793]
[120.38988495 129.04821777]
[109.67994690 135.73007202]
[96.80873108 138.41378784]
[83.28189087 136.42033386]
[70.80739594 129.64001465]
[61.08044815 118.58709717]
[47.70434189 125.37529755]
[34.32823181 132.16351318]
[28.08078003 138.84736633]
[20.68011093 138.95135498]
[7.19583464 145.52206421]
[-6.28844118 152.09278870]
[-7.28528214 167.41929626]
[-15.82516956 180.18510437]
[-29.61091614 186.95626831]
[-44.93422318 185.91139221]
[-57.67320251 177.33154297]
[-64.40113068 163.52464294]
[-63.30822754 148.20468140]
[-54.68848038 135.49266052]
[-40.86055374 128.80804443]
[-25.54409790 129.94895935]
[-12.85915661 138.60850525]
[0.62511957 132.03779602]
[14.10939598 125.46707916]
[27.54002762 118.78739929]
[40.91613770 111.99919128]
[54.29224396 105.21099091]
[55.91883469 97.88949585]
[42.44223404 104.47594452]
[28.89015770 98.04623413]
[25.46737671 83.44197083]
[34.75126266 71.66022491]
[49.75100708 71.57270813]
[59.17201614 83.24652100]
[60.79860687 75.92503357]
[51.55517960 64.11151886]
[42.31175232 52.29800797]
[33.06832504 40.48449707]
[23.82489967 28.67098427]
[16.06043625 23.83180237]
[14.52929592 16.59050941]
[5.47837830 4.62886715]
[-3.57254004 -7.33277512]
[-12.62345791 -19.29441643]
[-22.23954582 -17.78314590]
[-31.68722153 -19.87346840]
[-39.67200089 -25.23565292]
[-45.11569214 -33.09468079]
[-47.30191803 -42.34204102]
[-45.97017670 -51.69198990]
[-41.34611130 -59.86032104]
[-49.60377502 -72.38274384]
[-57.86143494 -84.90516663]
[-70.32470703 -88.26226807]
[-76.94295502 -98.87408447]
[-74.62719727 -110.75600433]
[-82.68099976 -123.41049957]
[-90.73480225 -136.06500244]
[-106.21534729 -139.24751282]
[-114.84147644 -152.49006653]
[-111.49546814 -167.93609619]
[-98.16245270 -176.42173767]
[-82.75266266 -172.91261292]
[-74.40845490 -159.49063110]
[-78.08030701 -144.11880493]
[-70.02650452 -131.46430969]
[-61.97270203 -118.80980682]
[-45.99853516 -111.55859375]
[-45.33901596 -93.16282654]
[-37.08135223 -80.64040375]
[-28.82369041 -68.11798096]
[-8.53570747 -65.72973633]
[3.58798671 -48.92544937]
[-0.66181582 -28.34533501]
[8.38910198 -16.38369370]
[17.44001961 -4.42205095]
[26.49093819 7.53959131]
[35.63841248 19.42755699]
[44.88183594 31.24106979]
[54.12526321 43.05458069]
[63.36869049 54.86809158]
[72.61212158 66.68160248]
[96.66246033 59.29846573]
[119.29915619 66.63316345]
[132.79759216 84.55081940]
[133.49531555 105.61119080]
[147.37663269 111.29529572]
[161.25794983 116.97939301]
[166.45812988 116.27007294]
[170.95594788 117.51100159]
[174.12399292 120.10483551]
[175.66452026 123.29138184]
[189.25343323 129.64288330]
[202.84233093 135.99438477]
[216.43124390 142.34588623]
[230.02015686 148.69738770]
[243.60905457 155.04888916]
[257.19796753 161.40039062]
[270.78686523 167.75189209]
[284.75842285 173.21046448]
[299.05398560 177.75321960]
[313.34957886 182.29597473]
[327.64514160 186.83871460]
[341.94070435 191.38146973]
[356.23629761 195.92422485]
[374.11865234 191.55838013]
[385.43908691 204.95996094]
[399.80633545 209.27061462]
[414.17358398 213.58128357]
[428.54086304 217.89195251]
[442.90811157 222.20262146]
[457.27536011 226.51329041]
[471.06973267 219.27770996]
[485.57876587 223.85400391]
[492.39178467 237.04939270]
[506.75903320 241.36006165]
[521.12628174 245.67073059]
[535.52795410 249.86492920]
[550.05792236 253.59057617]
[564.67407227 256.96221924]
[579.86029053 252.52484131]
[590.52270508 262.92492676]
[605.13885498 266.29656982]
[620.32507324 261.85919189]
[630.98748779 272.25930786]
[645.60363770 275.63092041]
[663.07434082 269.83306885]
[675.44158936 282.27511597]
[690.11041260 285.40963745]
[704.77923584 288.54415894]
[719.44812012 291.67864990]
[734.11694336 294.81317139]
[750.86987305 292.21020508]
[758.00878906 307.58782959]
[745.20837402 318.70474243]
[730.98242188 309.48202515]
[716.31359863 306.34750366]
[701.64477539 303.21298218]
[686.97589111 300.07846069]
[672.30706787 296.94396973]
[661.97894287 303.25842285]
[649.72515869 300.75686646]
[642.23199463 290.24710083]
[627.61584473 286.87545776]
[613.47509766 291.55398560]
[601.76721191 280.91271973]
[587.15106201 277.54107666]
[573.01031494 282.21960449]
[561.30249023 271.57836914]
[546.68627930 268.20672607]
[543.50939941 269.76702881]
[539.41595459 269.85760498]
[535.10888672 268.06323242]
[531.45056152 264.30010986]
[524.14855957 265.50909424]
[516.81561279 260.03799438]
[502.44836426 255.72732544]
[488.08111572 251.41665649]
[475.12921143 258.68191528]
[460.49734497 254.51495361]
[452.96472168 240.88053894]
[438.59744263 236.56988525]
[424.23019409 232.25921631]
[409.86291504 227.94854736]
[395.49566650 223.63787842]
[381.12841797 219.32720947]
[370.32339478 224.78562927]
[358.31210327 221.30120850]
[351.69354248 210.21980286]
[337.39794922 205.67704773]
[323.10238647 201.13429260]
[308.80682373 196.59153748]
[294.51123047 192.04879761]
[280.21566772 187.50604248]
[287.88400269 200.39776611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 117]
[8 116]
[9 115]
[10 114]
[11 113]
[12 112]
[13 111]
[14 110]
[15 106]
[16 105]
[17 104]
[23 45]
[24 44]
[25 43]
[27 42]
[28 41]
[29 40]
[53 100]
[54 99]
[55 98]
[56 97]
[57 96]
[59 95]
[60 94]
[61 93]
[62 92]
[69 89]
[70 88]
[71 87]
[74 85]
[75 84]
[76 83]
[118 192]
[119 191]
[120 190]
[121 189]
[122 188]
[123 187]
[125 184]
[126 183]
[127 182]
[128 181]
[129 180]
[130 179]
[133 176]
[134 175]
[135 174]
[136 172]
[137 168]
[138 167]
[140 165]
[141 164]
[143 162]
[144 161]
[146 158]
[147 157]
[148 156]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
