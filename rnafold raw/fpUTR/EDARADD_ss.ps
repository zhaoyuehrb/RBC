%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:26:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUGCCAAAGCAGGAAGUGAGCUCGUGGAAGAAGCGAAGGAGGAGAAGAAGAAGGGAGGGGAAGGCGGAGGAGGGCAGGGGCGCGCAGAGCCACGGUUUGCUCCAGGCGCGUCGGAACCGCAGGACUUUUCAUCCCCGUGGUCCCACGGUCCUCCCGCGCCCCGGAGGCCUGCCAGCCCCGCUCGGACGCUCGUUUGCCCCUAACCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[100.41536713 206.47888184]
[91.07555389 216.16737366]
[78.27236176 219.94570923]
[74.58449554 234.48529053]
[70.89662170 249.02487183]
[67.20874786 263.56445312]
[72.18324280 279.19091797]
[60.93907928 291.12829590]
[45.04328918 287.09643555]
[40.84809875 271.24298096]
[52.66915894 259.87658691]
[56.35703278 245.33700562]
[60.04490662 230.79742432]
[63.73277664 216.25782776]
[52.83285904 203.98124695]
[51.38482666 187.46121216]
[60.15684509 173.19233704]
[75.85995483 166.90287781]
[79.33498383 152.31095886]
[82.81002045 137.71903992]
[81.30216217 130.48616028]
[86.44390106 122.94005585]
[90.13177490 108.40047455]
[77.56167603 100.21557617]
[65.75652313 109.46967316]
[53.95137024 118.72377777]
[42.14622116 127.97787476]
[41.80671692 143.61177063]
[31.45855141 155.33566284]
[15.98781204 157.61387634]
[2.69930911 149.37071228]
[-2.13253307 134.49833679]
[3.77373338 120.01905060]
[17.62935066 112.76950073]
[32.89212036 116.17272186]
[44.69726944 106.91862488]
[56.50242233 97.66452026]
[68.30757904 88.41042328]
[53.51092911 90.87197113]
[40.12497711 84.10319519]
[29.71939468 73.29930878]
[23.45797539 59.66866302]
[22.04101372 44.73573685]
[25.62698746 30.17068291]
[33.81483078 17.60250092]
[45.68879318 8.43685436]
[59.92084503 3.69885731]
[74.91924286 3.91842246]
[89.00650024 9.07099247]
[100.60707855 18.58028984]
[108.42351532 31.38276291]
[111.58159637 46.04654312]
[109.72812653 60.93159103]
[103.07100677 74.37226105]
[100.07070160 89.06913757]
[109.74977875 77.60984039]
[119.42884827 66.15054321]
[128.93945312 54.55104065]
[138.27955627 42.81381607]
[147.61965942 31.07658768]
[156.95976257 19.33936119]
[166.29986572 7.60213327]
[168.83856201 -8.01406193]
[182.81779480 -13.15510941]
[192.15789795 -24.89233589]
[201.49800110 -36.62956238]
[210.83810425 -48.36679077]
[220.17820740 -60.10401917]
[229.51831055 -71.84124756]
[231.82188416 -90.11215973]
[248.39178467 -95.89581299]
[245.84452820 -113.20423126]
[256.39682007 -126.73243713]
[273.13232422 -128.40786743]
[282.12548828 -140.41299438]
[291.11862183 -152.41812134]
[300.11178589 -164.42326355]
[302.75106812 -173.16485596]
[309.32510376 -176.53681946]
[318.49270630 -188.40927124]
[327.66030884 -200.28170776]
[336.82791138 -212.15415955]
[345.99551392 -224.02661133]
[344.17678833 -239.49690247]
[353.64318848 -251.40666199]
[368.40295410 -253.04519653]
[377.57055664 -264.91763306]
[386.73815918 -276.79010010]
[395.90576172 -288.66253662]
[398.67248535 -297.36462402]
[405.29507446 -300.64019775]
[414.63519287 -312.37741089]
[423.97528076 -324.11465454]
[426.27886963 -342.38555908]
[442.84875488 -348.16921997]
[452.01635742 -360.04165649]
[461.18395996 -371.91409302]
[446.63174438 -368.27645874]
[432.38983154 -372.98477173]
[422.87332153 -384.57943726]
[421.03237915 -399.46603394]
[427.43768311 -413.02966309]
[440.10360718 -421.06552124]
[455.10357666 -421.08245850]
[467.78759766 -413.07519531]
[474.22351074 -399.52606201]
[472.41653442 -384.63619995]
[483.06179810 -395.20397949]
[493.70709229 -405.77175903]
[504.35235596 -416.33953857]
[514.99761963 -426.90731812]
[525.64294434 -437.47512817]
[525.38732910 -454.96810913]
[537.62243652 -466.99575806]
[554.43310547 -466.46221924]
[564.92285156 -477.18441772]
[575.41259766 -487.90661621]
[579.17535400 -496.22662354]
[586.13476562 -498.70742798]
[596.78009033 -509.27520752]
[607.42535400 -519.84301758]
[607.65093994 -535.41821289]
[618.59729004 -545.98376465]
[633.44445801 -545.67272949]
[644.08978271 -556.24053955]
[654.73504639 -566.80828857]
[665.38031006 -577.37609863]
[676.02557373 -587.94390869]
[670.98852539 -602.35186768]
[672.71020508 -617.51757812]
[680.84875488 -630.42980957]
[693.78833008 -638.52490234]
[708.95977783 -640.19549561]
[723.35070801 -635.10986328]
[734.10388184 -624.27789307]
[739.08416748 -609.85015869]
[737.30279541 -594.69134521]
[729.11346436 -581.81121826]
[716.14208984 -573.76721191]
[700.96417236 -572.15637207]
[686.59338379 -577.29858398]
[675.94812012 -566.73083496]
[665.30279541 -556.16302490]
[654.65753174 -545.59527588]
[644.01226807 -535.02746582]
[644.21484375 -520.17840576]
[633.56958008 -509.30950928]
[617.99310303 -509.19772339]
[607.34783936 -498.62994385]
[596.70257568 -488.06216431]
[586.13476562 -477.41687012]
[575.64508057 -466.69467163]
[565.15533447 -455.97247314]
[567.09802246 -443.23629761]
[561.26409912 -431.53152466]
[549.58258057 -425.23037720]
[536.21069336 -426.82983398]
[525.56542969 -416.26205444]
[514.92016602 -405.69427490]
[504.27487183 -395.12649536]
[493.62960815 -384.55868530]
[482.98431396 -373.99090576]
[473.05642700 -362.74649048]
[463.88882446 -350.87405396]
[454.72122192 -339.00161743]
[455.95242310 -326.96978760]
[448.41452026 -317.00408936]
[435.71252441 -314.77453613]
[426.37240601 -303.03732300]
[417.03231812 -291.30007935]
[407.77819824 -279.49493408]
[398.61059570 -267.62249756]
[389.44299316 -255.75004578]
[380.27539062 -243.87759399]
[382.42337036 -229.18331909]
[373.29522705 -217.01237488]
[357.86795044 -214.85900879]
[348.70034790 -202.98655701]
[339.53274536 -191.11410522]
[330.36514282 -179.24166870]
[321.19754028 -167.36921692]
[312.11691284 -155.43009949]
[303.12377930 -143.42497253]
[294.13061523 -131.41984558]
[285.13745117 -119.41471100]
[288.73345947 -107.04324341]
[284.48480225 -94.67455292]
[273.73040771 -86.89600372]
[260.26422119 -86.72821045]
[261.49545288 -74.69638062]
[253.95753479 -64.73067474]
[241.25553894 -62.50114441]
[231.91543579 -50.76391602]
[222.57533264 -39.02668762]
[213.23522949 -27.28946114]
[203.89512634 -15.55223465]
[194.55502319 -3.81500745]
[192.68438721 10.96166325]
[178.03709412 16.94223595]
[168.69699097 28.67946243]
[159.35688782 40.41669083]
[150.01678467 52.15391541]
[140.67668152 63.89114380]
[140.31616211 68.65064240]
[136.96391296 73.23498535]
[130.88815308 75.82962036]
[121.20907593 87.28891754]
[111.52999878 98.74821472]
[104.67136383 112.08834839]
[100.98348999 126.62792969]
[97.40193939 141.19407654]
[93.92691040 155.78599548]
[90.45187378 170.37791443]
[100.17559814 180.14483643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[6 11]
[18 213]
[19 212]
[20 211]
[22 210]
[23 209]
[24 38]
[25 37]
[26 36]
[27 35]
[55 208]
[56 207]
[57 206]
[58 203]
[59 202]
[60 201]
[61 200]
[62 199]
[64 197]
[65 196]
[66 195]
[67 194]
[68 193]
[69 192]
[71 189]
[74 185]
[75 184]
[76 183]
[77 182]
[79 181]
[80 180]
[81 179]
[82 178]
[83 177]
[86 174]
[87 173]
[88 172]
[89 171]
[91 170]
[92 169]
[93 168]
[95 165]
[96 164]
[97 163]
[107 162]
[108 161]
[109 160]
[110 159]
[111 158]
[112 157]
[115 153]
[116 152]
[117 151]
[119 150]
[120 149]
[121 148]
[124 145]
[125 144]
[126 143]
[127 142]
[128 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
