%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUGGCCCCCGGUGGGGGAAGGAGGAGUUUCCUCUUGGCCUGAACUUGGCUGACCUCCGCAGCUUCCGCCCGACUCUGGCUAAAGUCUUGGAGGCUACUGCCUUGAAG\
) } def
/len { sequence length } bind def

/coor [
[183.49415588 257.03656006]
[174.18167114 245.15615845]
[172.05216980 230.11082458]
[177.77670288 215.92713928]
[168.61698914 204.04859924]
[159.45727539 192.17007446]
[150.29754639 180.29153442]
[141.13783264 168.41300964]
[128.16679382 168.54602051]
[117.35293579 161.03361511]
[112.81822968 148.46385193]
[116.44984436 135.40103149]
[107.63307190 123.26577759]
[98.81629181 111.13052368]
[89.82712555 99.12240601]
[80.66740417 87.24387360]
[71.50769043 75.36534119]
[62.17928314 63.61881256]
[52.68409729 52.00668716]
[43.18891144 40.39456558]
[33.69372559 28.78244019]
[24.19853783 17.17031479]
[5.40187025 16.10465622]
[-6.56305408 1.97952485]
[-4.59086037 -16.10960197]
[-14.73348427 -27.16071892]
[-24.87610817 -38.21183777]
[-35.01873016 -49.26295471]
[-42.13890839 -47.68673325]
[-49.33640289 -48.47296906]
[-55.85359573 -51.50518799]
[-61.01532364 -56.43229294]
[-64.29877472 -62.70889664]
[-65.38635254 -69.65558624]
[-64.19614410 -76.53240967]
[-60.88705444 -82.61769104]
[-68.99666595 -95.23648834]
[-77.10627747 -107.85529327]
[-85.21588898 -120.47409821]
[-93.32550049 -133.09289551]
[-101.43511200 -145.71170044]
[-116.96875763 -147.51168823]
[-127.67357635 -158.91085815]
[-128.49508667 -174.52684021]
[-119.04540253 -186.98626709]
[-103.78636169 -190.40617371]
[-89.92282867 -183.17178345]
[-84.00073242 -168.69895935]
[-88.81631470 -153.82131958]
[-80.70669556 -141.20251465]
[-72.59708405 -128.58370972]
[-64.48747253 -115.96490479]
[-56.37786102 -103.34610748]
[-48.26824951 -90.72730255]
[-26.38524055 -83.13607788]
[-23.96761322 -59.40557861]
[-13.82499027 -48.35446167]
[-3.68236685 -37.30334473]
[6.46025658 -26.25222588]
[17.86906242 -28.25239754]
[28.91776085 -24.39216042]
[36.75893784 -15.54151058]
[39.31120300 -3.87206149]
[35.81066132 7.67512894]
[45.30584717 19.28725243]
[54.80103683 30.89937782]
[64.29621887 42.51150131]
[73.79141235 54.12362671]
[80.56253815 57.35761261]
[83.38622284 66.20561981]
[92.54593658 78.08415222]
[101.70565796 89.96268463]
[108.83783722 93.99085236]
[110.95154572 102.31374359]
[119.76832581 114.44899750]
[128.58509827 126.58425903]
[145.84495544 128.95271301]
[155.91468811 142.75585938]
[153.01637268 159.25328064]
[162.17608643 171.13182068]
[171.33580017 183.01034546]
[180.49551392 194.88888550]
[189.65524292 206.76742554]
[204.82823181 204.83670044]
[218.83792114 210.72103882]
[227.96060181 222.74780273]
[229.82606506 237.62651062]
[224.03263855 251.34883118]
[233.19236755 263.22735596]
[242.35208130 275.10589600]
[256.90631104 281.30950928]
[258.55099487 296.11303711]
[267.71072388 307.99157715]
[276.87045288 319.87011719]
[286.03015137 331.74862671]
[295.18988037 343.62716675]
[310.55322266 349.36300659]
[313.00030518 365.57852173]
[300.01379395 375.59265137]
[284.95309448 369.10366821]
[283.31134033 352.78689575]
[274.15164185 340.90835571]
[264.99191284 329.02981567]
[255.83218384 317.15127563]
[246.67247009 305.27276611]
[232.77340698 299.91876221]
[230.47354126 284.26562500]
[221.31382751 272.38708496]
[212.15411377 260.50854492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 83]
[5 82]
[6 81]
[7 80]
[8 79]
[12 76]
[13 75]
[14 74]
[15 72]
[16 71]
[17 70]
[18 68]
[19 67]
[20 66]
[21 65]
[22 64]
[25 59]
[26 58]
[27 57]
[28 56]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[88 109]
[89 108]
[90 107]
[92 105]
[93 104]
[94 103]
[95 102]
[96 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
