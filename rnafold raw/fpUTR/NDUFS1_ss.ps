%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:47:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAUUGCCGACAAACUUGUCGAAUGCAAGGAUUCUAGUCCCUCCGGGCUUUCCGUUCUCCAGGCCCGGCUGACAGAGUUAGCCGAGGCCGCCAUAUUGAAUAAGCGACCCGGCCUCCUAGGGGGUCGUCGUGGUCCAGACAGUUUAGCAGAACAGCCUCCGCGGCUCCGGGGAGAAGCAAU\
) } def
/len { sequence length } bind def

/coor [
[81.45510864 342.45394897]
[66.58639526 348.47897339]
[52.67658234 340.48544312]
[50.39608383 324.60528564]
[61.49430466 313.02041626]
[62.51794052 298.05538940]
[63.54157639 283.09036255]
[64.56520844 268.12533569]
[65.58885193 253.16030884]
[51.33093643 248.50070190]
[43.31949997 261.18206787]
[35.30806351 273.86343384]
[27.29662704 286.54476929]
[19.28519058 299.22613525]
[19.17304802 315.62490845]
[4.78348732 323.49081421]
[-9.08074474 314.73208618]
[-8.15731621 298.35897827]
[6.60383034 291.21469116]
[14.61526680 278.53335571]
[22.62670326 265.85198975]
[30.63813972 253.17062378]
[38.64957428 240.48925781]
[34.01643372 234.59146118]
[22.22084236 243.85775757]
[13.86598587 256.31552124]
[-0.56385666 252.21923828]
[-1.12708890 237.22981262]
[12.95455837 232.06216431]
[24.75015068 222.79586792]
[20.11701012 216.89807129]
[5.89939451 221.67922974]
[-8.31822014 226.46038818]
[-22.53583527 231.24153137]
[-32.97188568 243.89147949]
[-49.09811401 240.91207886]
[-54.32523727 225.36828613]
[-43.27603912 213.25022888]
[-27.31698799 217.02392578]
[-13.09937382 212.24276733]
[1.11824143 207.46162415]
[15.33585644 202.68046570]
[27.13144875 193.41418457]
[35.14288330 180.73281860]
[43.15431976 168.05146790]
[51.16575623 155.37010193]
[59.17719269 142.68873596]
[67.18862915 130.00738525]
[82.70391846 60.04117203]
[75.80294800 46.72289658]
[68.90196991 33.40461731]
[62.00099564 20.08633804]
[57.56144714 17.25124168]
[54.93175888 13.37792683]
[54.20358658 9.33618641]
[55.10747910 5.90477085]
[48.89744186 -7.74936438]
[42.68740082 -21.40349960]
[36.47736359 -35.05763626]
[17.30360985 -36.06965637]
[1.35404956 -46.61228180]
[-7.01894283 -63.70965195]
[-5.58075142 -82.61106873]
[5.18975067 -98.11096191]
[-1.93760240 -111.30947876]
[-9.06495571 -124.50799561]
[-16.19230843 -137.70651245]
[-23.43207550 -150.84370422]
[-30.78372955 -163.91860962]
[-38.13538361 -176.99351501]
[-45.48703384 -190.06842041]
[-52.83868790 -203.14332581]
[-60.19034195 -216.21823120]
[-67.54199219 -229.29313660]
[-74.89364624 -242.36805725]
[-87.92692566 -253.21102905]
[-81.11566925 -268.73657227]
[-64.31130981 -266.48941040]
[-61.81874084 -249.71971130]
[-54.46708679 -236.64479065]
[-47.11543655 -223.56988525]
[-39.76378250 -210.49497986]
[-32.41212845 -197.42007446]
[-25.06047630 -184.34516907]
[-17.70882225 -171.27026367]
[-10.35716915 -158.19535828]
[-4.32388067 -153.89562988]
[-2.99379253 -144.83386230]
[4.13356066 -131.63534546]
[11.26091385 -118.43682861]
[18.38826752 -105.23831177]
[29.38467789 -106.75415802]
[40.34489822 -104.83464050]
[50.21882629 -99.64713287]
[58.05539322 -91.67293549]
[63.09418106 -81.66261292]
[64.83917236 -70.56536102]
[63.10755539 -59.43905640]
[58.04871750 -49.34935760]
[50.13149643 -41.26767349]
[56.34153748 -27.61353874]
[62.55157471 -13.95940399]
[68.76161194 -0.30526814]
[75.31927490 13.18536282]
[82.22024536 26.50364113]
[89.12122345 39.82191849]
[96.02220154 53.14019775]
[110.43088531 57.31030655]
[123.37837219 49.73649597]
[136.32585144 42.16268539]
[149.27334595 34.58887482]
[161.95469666 26.57743835]
[174.35514832 18.13771629]
[186.75559998 9.69799519]
[199.15605164 1.25827408]
[211.55648804 -7.18144751]
[223.95693970 -15.62116909]
[236.35739136 -24.06089020]
[242.99353027 -39.05734634]
[259.32559204 -40.53923416]
[268.55255127 -26.98211479]
[261.18249512 -12.33239174]
[244.79710388 -11.66044331]
[232.39666748 -3.22072148]
[219.99621582 5.21899986]
[207.59576416 13.65872192]
[195.19531250 22.09844398]
[182.79487610 30.53816414]
[170.39442444 38.97788620]
[169.74705505 41.72864532]
[167.95794678 44.38530731]
[165.05867004 46.50683212]
[161.24139404 47.67224884]
[156.84715271 47.53636169]
[143.89967346 55.11017227]
[130.95217896 62.68398285]
[118.00469208 70.25778961]
[118.51651001 77.74031067]
[133.48153687 76.71667480]
[148.44659424 75.69326782]
[149.46977234 90.65833282]
[134.50517273 91.68170166]
[119.54014587 92.70533752]
[120.05196381 100.18785858]
[133.91015625 105.92810822]
[147.76835632 111.66835785]
[161.62654114 117.40860748]
[177.80592346 114.73280334]
[188.00239563 127.57662964]
[181.72671509 142.72746277]
[165.43475342 144.59942627]
[155.88629150 131.26679993]
[142.02810669 125.52655029]
[128.16990662 119.78630066]
[114.31171417 114.04605103]
[105.76644135 126.37399292]
[116.00473785 137.33653259]
[126.24303436 148.29907227]
[136.48133850 159.26161194]
[152.40141296 161.24417114]
[160.65417480 175.00177002]
[154.90879822 189.98075867]
[139.57264709 194.69053650]
[126.41030121 185.51817322]
[125.51879120 169.49990845]
[115.28049469 158.53736877]
[105.04219818 147.57482910]
[94.80390167 136.61228943]
[79.86998749 138.01881409]
[71.85855103 150.70018005]
[63.84711838 163.38153076]
[55.83568192 176.06289673]
[47.82424545 188.74426270]
[39.81280899 201.42561340]
[51.52022552 202.18190002]
[63.31037903 208.20596313]
[73.26515198 219.43685913]
[79.53980255 235.18693542]
[80.55387878 254.18394470]
[79.53024292 269.14898682]
[78.50660706 284.11401367]
[77.48297119 299.07904053]
[76.45933533 314.04406738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[31 42]
[32 41]
[33 40]
[34 39]
[43 174]
[44 173]
[45 172]
[46 171]
[47 170]
[48 169]
[49 107]
[50 106]
[51 105]
[52 104]
[56 103]
[57 102]
[58 101]
[59 100]
[64 91]
[65 90]
[66 89]
[67 88]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[73 81]
[74 80]
[75 79]
[108 137]
[109 136]
[110 135]
[111 134]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[117 124]
[118 123]
[144 155]
[145 154]
[146 153]
[147 152]
[156 168]
[157 167]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
