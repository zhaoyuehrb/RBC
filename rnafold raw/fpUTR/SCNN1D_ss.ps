%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGGGCGACAGCGAGACUCCAUCUCAAUAAAUAAAAAAAAAAAAGAGUUGUUAUCAGUAGAAGGGAAUGUCUGGUUACAGUAUGGCGUUGUGCAGAUGAAGGUCUUAUCGCAGAUGAAGCCACCAGGUCACAAGCCUCAGAGAGAAUCAACUAUAAAUGCUUCUCAUCAGACUCAAGGCCUGAGGUGAUGCUGAUGCUGUGCCUGAAUUCCAGCAGGGAGGAGGC\
) } def
/len { sequence length } bind def

/coor [
[73.16724396 291.53820801]
[64.91601562 294.76263428]
[61.21784592 309.29962158]
[67.12310028 320.75811768]
[63.75162888 332.78448486]
[53.43381500 339.08489990]
[49.53482437 353.56930542]
[54.28147125 369.26647949]
[42.86484528 381.03903198]
[27.02939224 376.77636719]
[23.06526756 360.86352539]
[35.05042267 349.67031860]
[38.94941711 335.18591309]
[33.52346420 318.49169922]
[46.68087387 305.60144043]
[50.37903976 291.06448364]
[43.09203339 271.74838257]
[58.33704758 256.67800903]
[61.42864227 242.00007629]
[64.52024078 227.32212830]
[67.61183167 212.64418030]
[65.91666412 205.45944214]
[70.84911346 197.78515625]
[74.14354706 183.15139771]
[77.43797302 168.51765442]
[80.73240662 153.88389587]
[70.82547760 165.14678955]
[60.91854858 176.40968323]
[51.01161575 187.67257690]
[46.96381378 202.11608887]
[39.35239029 215.04150391]
[28.68490982 225.58686829]
[15.67273140 233.04899597]
[1.18356836 236.93025208]
[-13.81637383 236.97181702]
[-28.32682800 233.17094421]
[-41.38017273 225.78106689]
[-52.10594177 215.29498291]
[-59.78889465 202.41197205]
[-63.91669846 187.99110413]
[-64.21408844 172.99404907]
[-60.66123581 158.42088318]
[-53.49505997 145.24340820]
[-43.19343185 134.34036255]
[-30.44331741 126.43880463]
[-16.09495354 122.06565094]
[-1.10515451 121.51253510]
[13.52648735 124.81632996]
[26.82367706 131.75631714]
[41.81559753 132.24859619]
[56.80751801 132.74089050]
[71.79943848 133.23318481]
[58.87880325 125.61364746]
[45.95817566 117.99411011]
[33.03754425 110.37458038]
[20.11691093 102.75504303]
[4.29947472 102.40970612]
[-2.73317623 89.27993011]
[-15.65380764 81.66039276]
[-28.57443810 74.04086304]
[-44.39187622 73.69551849]
[-51.42452621 60.56574249]
[-64.34515381 52.94620895]
[-80.16259766 52.60087204]
[-87.19524384 39.47109222]
[-102.31913757 43.20011139]
[-115.31395721 35.28876114]
[-118.77580261 20.84745789]
[-131.69642639 13.22792530]
[-144.61706543 5.60839128]
[-153.58740234 3.94809914]
[-157.66273499 -2.20705295]
[-170.47668457 -10.00466824]
[-183.29063416 -17.80228233]
[-199.68896484 -17.63936615]
[-207.79512024 -31.89497185]
[-199.27017212 -45.90415955]
[-182.88386536 -45.25547409]
[-175.49301147 -30.61622810]
[-162.67907715 -22.81861305]
[-149.86512756 -15.02099895]
[-136.99752808 -7.31224012]
[-124.07689667 0.30729377]
[-111.15626526 7.92682743]
[-96.84331512 3.96764803]
[-83.63141632 11.51087952]
[-79.57571411 26.55046082]
[-64.68244171 26.35079956]
[-56.72562408 40.02557755]
[-43.80499268 47.64511108]
[-28.91172600 47.44544983]
[-20.95490456 61.12022781]
[-8.03427315 68.73976135]
[4.88635731 76.35929871]
[19.77962494 76.15963745]
[27.73644638 89.83441162]
[40.65707779 97.45394897]
[53.57770920 105.07347870]
[66.49833679 112.69301605]
[79.41896820 120.31254578]
[74.02209473 94.23559570]
[91.54696655 77.21465302]
[90.92436218 62.22758102]
[90.30175781 47.24050903]
[81.99832153 33.77338028]
[89.20068359 20.73592377]
[88.57807922 5.74885130]
[87.95547485 -9.23822212]
[87.33287811 -24.22529602]
[86.71027374 -39.21236801]
[80.01171112 -54.78688431]
[93.12322235 -65.53511810]
[107.08103943 -55.91141891]
[101.69734192 -39.83497238]
[102.31994629 -24.84789848]
[102.94255066 -9.86082554]
[103.56515503 5.12624741]
[104.18775940 20.11332130]
[112.44666290 32.50847244]
[105.28883362 46.61790466]
[105.91143799 61.60497665]
[106.53404236 76.59204865]
[123.15538788 88.52943420]
[125.43878174 110.12249756]
[110.00886536 127.12934113]
[124.87940979 125.16287231]
[139.74995422 123.19640350]
[154.62049866 121.22993469]
[162.70686340 117.00685883]
[169.71026611 119.34062195]
[184.60659790 117.58013916]
[199.50292969 115.81965637]
[214.39926147 114.05916595]
[222.54330444 109.94841003]
[229.51374817 112.37886810]
[244.43301392 110.82470703]
[257.35723877 101.69920349]
[270.81768799 108.07617950]
[285.73693848 106.52201080]
[300.65621948 104.96784973]
[315.57550049 103.41368866]
[325.82815552 86.95672607]
[349.03829956 85.67093658]
[362.63534546 79.33689117]
[376.23239136 73.00284576]
[389.82943726 66.66880035]
[403.42648315 60.33475113]
[412.66870117 47.49372101]
[427.47283936 49.13301086]
[441.06988525 42.79896545]
[443.90423584 27.54294777]
[455.18768311 16.89102364]
[470.58151245 14.93907166]
[484.16644287 22.43765831]
[490.71884155 36.50342560]
[487.71914673 51.72779465]
[476.32083130 62.25669098]
[460.90673828 64.04153442]
[447.40393066 56.39601898]
[433.80688477 62.73006439]
[425.53723145 75.11804199]
[409.76052856 73.93180084]
[396.16348267 80.26585388]
[382.56643677 86.59989929]
[368.96939087 92.93394470]
[355.37234497 99.26799011]
[356.92648315 114.18726349]
[371.53710938 117.58287811]
[386.14770508 120.97848511]
[400.75830078 124.37409973]
[412.09176636 118.23226166]
[424.18551636 121.35336304]
[430.69879150 131.53817749]
[445.26098633 135.13565063]
[459.82321167 138.73313904]
[474.38543701 142.33062744]
[488.80712891 135.30253601]
[503.23120117 142.32575989]
[506.59274292 158.01268005]
[496.31304932 170.32965088]
[480.27783203 169.82812500]
[470.78793335 156.89285278]
[456.22570801 153.29536438]
[441.66351318 149.69787598]
[427.10128784 146.10038757]
[410.52331543 151.87170410]
[397.36270142 138.98471069]
[382.75210571 135.58909607]
[368.14147949 132.19348145]
[353.53088379 128.79786682]
[330.55407715 132.32344055]
[317.12963867 118.33295441]
[302.21038818 119.88712311]
[287.29110718 121.44128418]
[272.37185669 122.99544525]
[260.51473999 132.00978088]
[245.98716736 125.74397278]
[231.06790161 127.29814148]
[216.15974426 128.95550537]
[201.26341248 130.71598816]
[186.36708069 132.47647095]
[171.47074890 134.23695374]
[156.58695984 136.10047913]
[141.71641541 138.06694031]
[126.84587860 140.03341675]
[111.97533417 141.99987793]
[126.88812256 140.38467407]
[140.73925781 146.14193726]
[150.11332703 157.85205078]
[152.69889832 172.62753296]
[147.85839844 186.82505798]
[136.78540039 196.94378662]
[122.21029663 200.48867798]
[107.72699738 196.58560181]
[96.90678406 186.19700623]
[92.41770935 171.88449097]
[95.36615753 157.17832947]
[92.07173157 171.81207275]
[88.77729797 186.44583130]
[85.48286438 201.07958984]
[82.28977966 215.73577881]
[79.19818115 230.41372681]
[76.10659027 245.09167480]
[73.01499176 259.76962280]
[79.15734863 266.89663696]
[81.30661774 275.91528320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[6 13]
[7 12]
[18 224]
[19 223]
[20 222]
[21 221]
[23 220]
[24 219]
[25 218]
[26 217]
[52 100]
[53 99]
[54 98]
[55 97]
[56 96]
[58 94]
[59 93]
[60 92]
[62 90]
[63 89]
[65 87]
[68 84]
[69 83]
[70 82]
[72 81]
[73 80]
[74 79]
[102 122]
[103 121]
[104 120]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[125 206]
[126 205]
[127 204]
[128 203]
[130 202]
[131 201]
[132 200]
[133 199]
[135 198]
[136 197]
[138 195]
[139 194]
[140 193]
[141 192]
[143 166]
[144 165]
[145 164]
[146 163]
[147 162]
[149 160]
[150 159]
[167 190]
[168 189]
[169 188]
[170 187]
[173 185]
[174 184]
[175 183]
[176 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
