%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCAGCAGAGACGCUGCAGAGGGCUUUUCUUAGACAUCAACUGCAGACGGCUGGCAGGAUAGAAGCAGCGGCUCACUUGGACUUUUUCACCAGGGAAAUCAGAGACA\
) } def
/len { sequence length } bind def

/coor [
[83.93584442 175.64895630]
[88.49600220 161.35891724]
[97.55825043 149.40417480]
[99.90178680 134.58837891]
[90.74206543 146.46690369]
[81.58235168 158.34544373]
[72.42263031 170.22396851]
[63.26291275 182.10250854]
[65.53680420 197.74235535]
[56.01880646 210.35914612]
[40.35578537 212.46755981]
[27.84033394 202.81669617]
[25.89764595 187.13226318]
[35.68028259 174.71954346]
[51.38438034 172.94279480]
[60.54409790 161.06425476]
[69.70381927 149.18572998]
[78.86353302 137.30718994]
[88.02325439 125.42865753]
[76.13512421 103.74581146]
[86.20378113 85.23680878]
[80.76166534 71.25885010]
[75.31954956 57.28088760]
[60.70720673 46.19009399]
[63.86643600 28.99293709]
[58.02738571 15.17608166]
[52.18833160 1.35922658]
[46.15258026 -12.37284088]
[39.92135239 -26.01732063]
[33.69012833 -39.66180038]
[27.45890427 -53.30628204]
[21.22767830 -66.95075989]
[12.89120388 -54.48066711]
[-2.02870941 -52.93270111]
[-12.74765015 -63.42576218]
[-11.51775360 -78.37525940]
[0.77198541 -86.97539520]
[15.23780060 -83.01024628]
[11.01181221 -97.40264130]
[6.78582430 -111.79502869]
[2.10552645 -116.80339050]
[0.95016581 -122.56133270]
[2.75476503 -127.13077545]
[-0.64268643 -141.74095154]
[-4.04013777 -156.35113525]
[-7.43758965 -170.96130371]
[-11.04332066 -185.52148438]
[-14.85659504 -200.02868652]
[-26.77535439 -211.29257202]
[-22.71720314 -227.18167114]
[-6.85681820 -231.35063171]
[4.48999405 -219.51080322]
[-0.34939250 -203.84196472]
[3.46388245 -189.33476257]
[8.27967548 -183.58018494]
[7.17258930 -174.35876465]
[10.57004070 -159.74858093]
[13.96749210 -145.13839722]
[17.36494446 -130.52822876]
[21.17821884 -116.02101898]
[25.40420723 -101.62862396]
[29.63019562 -87.23622894]
[34.87215805 -73.18198395]
[41.10338211 -59.53750610]
[47.33460999 -45.89302444]
[53.56583405 -32.24854660]
[59.79705811 -18.60406685]
[65.52359772 -13.75498104]
[66.00518799 -4.47982502]
[71.84423828 9.33702946]
[77.68328857 23.15388489]
[88.84512329 28.05372620]
[93.77823639 39.64002991]
[89.29750824 51.83877182]
[94.73962402 65.81673431]
[100.18173981 79.79469299]
[120.66950226 87.49660492]
[125.01236725 112.82343292]
[139.51957703 116.63671112]
[154.02677917 120.44998169]
[168.53398132 124.26325989]
[183.04118347 128.07653809]
[194.33737183 117.56941223]
[209.52493286 114.85993195]
[223.75758362 120.81268311]
[232.49372864 133.52815247]
[232.94569397 148.94889832]
[224.96926880 162.15420532]
[211.10968018 168.93031311]
[195.78948975 167.11497498]
[183.89732361 157.28747559]
[179.22790527 142.58374023]
[164.72070312 138.77046204]
[150.21350098 134.95718384]
[135.70629883 131.14390564]
[121.19908905 127.33063507]
[132.10217285 137.63221741]
[146.57749939 141.56480408]
[158.91513062 150.09606934]
[167.70489502 162.25091553]
[171.94209290 176.64001465]
[171.14241028 191.61868286]
[165.39724731 205.47485352]
[155.36329651 216.62472534]
[142.18743896 223.79388428]
[127.37569427 226.16287231]
[112.62104797 223.46093750]
[99.60998535 215.99687195]
[89.82966614 204.62385559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 19]
[5 18]
[6 17]
[7 16]
[8 15]
[21 76]
[22 75]
[23 74]
[25 71]
[26 70]
[27 69]
[28 67]
[29 66]
[30 65]
[31 64]
[32 63]
[38 62]
[39 61]
[40 60]
[43 59]
[44 58]
[45 57]
[46 56]
[47 54]
[48 53]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
