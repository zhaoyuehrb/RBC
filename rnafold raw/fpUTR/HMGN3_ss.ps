%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCAGCAGGGAGGCGAGCAGAGGGCCCCCAGAGGGAGCCGCGGAGGUGCAGGUCGAAGAGGCCGGGCUACGUCGUGCCCUGCGCGUGAGCAGCUGCAGAGGCAGAGGCAGCAUCCAGCGGCGGCGCCAGCAGUUCCAGUCCGUUGCUUUACUUUUUGCUUCACCGACAUAGUCAUU\
) } def
/len { sequence length } bind def

/coor [
[255.05259705 734.33526611]
[251.91676331 719.66668701]
[241.68971252 708.83819580]
[246.37104797 693.72540283]
[236.14399719 682.89691162]
[240.82531738 667.78411865]
[237.68948364 653.11560059]
[234.55363464 638.44702148]
[231.41780090 623.77844238]
[228.28195190 609.10992432]
[225.14611816 594.44134521]
[222.01026917 579.77282715]
[218.87443542 565.10424805]
[215.73860168 550.43566895]
[203.13676453 542.57891846]
[199.74760437 527.74755859]
[208.07398987 514.58288574]
[204.93814087 499.91430664]
[201.80230713 485.24575806]
[198.66645813 470.57720947]
[195.53062439 455.90866089]
[192.39479065 441.24011230]
[182.16773987 430.41159058]
[186.84906006 415.29882812]
[183.71322632 400.63024902]
[180.57737732 385.96170044]
[177.44154358 371.29315186]
[164.03486633 364.56552124]
[150.40034485 370.81851196]
[136.76582336 377.07150269]
[127.72113037 390.75088501]
[111.37070465 389.48770142]
[104.53446198 374.58139038]
[114.24494171 361.36630249]
[130.51283264 363.43698120]
[144.14735413 357.18399048]
[157.78187561 350.93099976]
[139.00422668 319.95352173]
[155.91134644 293.96975708]
[151.50199890 279.63247681]
[147.09265137 265.29519653]
[142.68330383 250.95791626]
[138.27395630 236.62063599]
[133.73896790 222.32260132]
[129.07867432 208.06491089]
[124.41839600 193.80722046]
[119.63317108 179.59097290]
[108.15621185 170.09736633]
[110.95022583 154.52482605]
[106.04044342 140.35112000]
[101.13065338 126.17740631]
[67.52127075 127.83501434]
[41.79897308 88.39298248]
[28.63665581 81.19899750]
[15.47433853 74.00501251]
[2.31202269 66.81102753]
[-13.42556381 69.92678070]
[-25.58023071 59.45569611]
[-24.82795906 43.43029022]
[-11.74582481 34.14388275]
[3.63067532 38.72021103]
[9.50600815 53.64870834]
[22.66832542 60.84269333]
[35.83064270 68.03668213]
[48.99295807 75.23066711]
[59.26883698 64.30334473]
[51.28039551 51.60749054]
[43.29195786 38.91163254]
[35.30351639 26.21577263]
[19.81254578 25.31606293]
[7.83028650 15.45679951]
[3.96416092 0.42906880]
[9.70077324 -13.98865986]
[22.83428001 -22.25247574]
[38.31457901 -21.18477249]
[50.18917847 -11.19610405]
[53.89205170 3.87268281]
[47.99937439 18.22733116]
[55.98781586 30.92318916]
[63.97625351 43.61904907]
[71.96469879 56.31490707]
[86.22238922 51.65462112]
[85.17020416 36.69157028]
[84.11801910 21.72851753]
[72.02347565 11.55514717]
[70.74825287 -4.19761038]
[81.04892731 -16.18392181]
[96.81428528 -17.29252243]
[108.69102478 -6.86569834]
[109.63288116 8.91050053]
[99.08106995 20.67633438]
[100.13325500 35.63938522]
[101.18544006 50.60243988]
[108.59207153 51.78219604]
[130.81196594 55.32147217]
[136.46087646 41.42580032]
[142.10980225 27.53012848]
[147.75871277 13.63445568]
[144.97648621 -2.52695560]
[157.75292969 -12.80774117]
[172.94473267 -6.63191032]
[174.92388916 9.64737129]
[161.65438843 19.28337479]
[156.00546265 33.17904663]
[150.35655212 47.07471848]
[144.70762634 60.97039032]
[147.66017151 92.17234039]
[134.42295837 114.23521423]
[115.30435944 121.26761627]
[120.21414948 135.44132996]
[125.12393951 149.61503601]
[136.95208740 160.12243652]
[133.80688477 174.68118286]
[139.58924866 181.79080200]
[138.67608643 189.14692688]
[143.33636475 203.40461731]
[147.99665833 217.66230774]
[153.65336609 224.87231445]
[152.61123657 232.21128845]
[157.02058411 246.54856873]
[161.42993164 260.88586426]
[165.83927917 275.22314453]
[170.24862671 289.56042480]
[196.42881775 297.67755127]
[205.52313232 328.35440063]
[220.21864319 325.34738159]
[232.12301636 314.06829834]
[247.76399231 318.99697876]
[251.05148315 335.06323242]
[238.60359192 345.73947144]
[223.22564697 340.04290771]
[208.53013611 343.04989624]
[204.42512512 349.32675171]
[219.35885620 347.91833496]
[229.77113342 358.71575928]
[227.82147217 373.58853149]
[214.97796631 381.33734131]
[200.91183472 376.12734985]
[196.21510315 361.88046265]
[192.11009216 368.15731812]
[195.24594116 382.82586670]
[198.38177490 397.49441528]
[201.51762390 412.16296387]
[211.96896362 424.04067993]
[207.06333923 438.10424805]
[210.19917297 452.77282715]
[213.33502197 467.44137573]
[216.47085571 482.10992432]
[219.60670471 496.77847290]
[222.74253845 511.44702148]
[235.72381592 520.05657959]
[238.69503784 534.97723389]
[230.40715027 547.29986572]
[233.54298401 561.96838379]
[236.67883301 576.63696289]
[239.81466675 591.30554199]
[242.95051575 605.97406006]
[246.08634949 620.64263916]
[249.22219849 635.31115723]
[252.35803223 649.97973633]
[255.49388123 664.64831543]
[265.94522095 676.52600098]
[261.03958130 690.58959961]
[271.49093628 702.46728516]
[266.58532715 716.53088379]
[269.72116089 731.19940186]
[273.36984253 745.74890137]
[277.52691650 760.16137695]
[281.68395996 774.57379150]
[291.88305664 788.11688232]
[281.69265747 801.66650391]
[265.85159302 795.62524414]
[267.27148438 778.73083496]
[263.11444092 764.31842041]
[258.95739746 749.90594482]
[256.53936768 748.43389893]
[254.56767273 745.90136719]
[253.45439148 742.47686768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[4 163]
[6 161]
[7 160]
[8 159]
[9 158]
[10 157]
[11 156]
[12 155]
[13 154]
[14 153]
[17 150]
[18 149]
[19 148]
[20 147]
[21 146]
[22 145]
[24 143]
[25 142]
[26 141]
[27 140]
[28 37]
[29 36]
[30 35]
[39 123]
[40 122]
[41 121]
[42 120]
[43 119]
[44 117]
[45 116]
[46 115]
[47 113]
[49 111]
[50 110]
[51 109]
[53 65]
[54 64]
[55 63]
[56 62]
[66 81]
[67 80]
[68 79]
[69 78]
[82 93]
[83 92]
[84 91]
[95 106]
[96 105]
[97 104]
[98 103]
[125 132]
[126 131]
[167 175]
[168 174]
[169 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
