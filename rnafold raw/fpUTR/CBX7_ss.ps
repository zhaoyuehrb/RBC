%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGGAAAACGUUGCGCAGGUUCAAAAAUGGAACGUCGGCGGCGUGAGGGAGCGCGAGGGGGUGUGCGCGCGUGCGCGUGCGCGUGCGCGCCCGGACGAGGGUGACGGGGACCCCGCCAGCCCCAGCAUCGCGCGCCGCAGCCGCGGCCCCGCAGCUCCGCCCCCGGCCCGGCCCGGCCCCGGGCCCGCUCGCCCGCCGCCCCGC\
) } def
/len { sequence length } bind def

/coor [
[54.50278854 330.61523438]
[51.02311325 345.20605469]
[42.37318039 357.46078491]
[29.79046440 365.62628174]
[15.07506180 368.53436279]
[0.33217481 365.76898193]
[-12.32906055 357.72579956]
[-21.09731293 345.55541992]
[-24.71818542 330.99902344]
[-22.67310333 316.13732910]
[-32.48818970 327.48034668]
[-42.30327988 338.82336426]
[-52.11836624 350.16638184]
[-61.93345642 361.50939941]
[-65.11249542 377.00790405]
[-79.29140472 381.56945801]
[-89.10649109 392.91247559]
[-82.99358368 406.89801025]
[-83.56272888 422.15051270]
[-90.70090485 435.64160156]
[-102.99083710 444.69259644]
[-117.99234772 447.50640869]
[-132.72686768 443.52435303]
[-144.26885986 433.53710938]
[-150.32662964 419.52761841]
[-149.69743347 404.27746582]
[-142.50617981 390.81460571]
[-130.18070984 381.81207275]
[-115.16823578 379.05737305]
[-100.44950867 383.09741211]
[-90.63442230 371.75439453]
[-88.15742493 357.06719971]
[-73.27647400 351.69430542]
[-63.46138382 340.35128784]
[-53.64629745 329.00827026]
[-43.83120728 317.66525269]
[-34.01612091 306.32223511]
[-32.35896683 296.38394165]
[-22.74471474 290.35427856]
[-15.34350586 277.30737305]
[-7.94229650 264.26043701]
[-0.54108775 251.21353149]
[6.86012125 238.16661072]
[14.26133060 225.11968994]
[21.66253853 212.07276917]
[22.22880363 204.70146179]
[29.27636337 198.88523865]
[29.95443153 191.52337646]
[37.08944702 185.81477356]
[37.09143448 170.92016602]
[50.87268066 163.14921570]
[58.66644287 150.33291626]
[66.46019745 137.51663208]
[74.25395966 124.70034027]
[82.04772186 111.88404846]
[80.58365631 101.01257324]
[84.60961914 91.97695923]
[91.92011261 87.04354095]
[99.67102051 86.82138062]
[103.71797180 72.37761688]
[107.76492310 57.93385696]
[111.81187439 43.49010086]
[115.85882568 29.04633904]
[119.90577698 14.60258102]
[123.95272827 0.15882131]
[118.97586823 -17.56853104]
[131.99095154 -29.33831215]
[135.81823730 -43.84182358]
[139.53535461 -58.37396240]
[143.14208984 -72.93389130]
[146.74882507 -87.49381256]
[142.55676270 -102.74954224]
[153.12731934 -113.24298859]
[145.22933960 -126.66907501]
[149.09449768 -141.38352966]
[161.94288635 -148.83030701]
[165.54962158 -163.39022827]
[169.15635681 -177.95016479]
[172.76309204 -192.51008606]
[171.78892517 -201.59565735]
[176.53662109 -207.26277161]
[180.36390686 -221.76628113]
[184.08102417 -236.29843140]
[187.68775940 -250.85835266]
[191.29449463 -265.41827393]
[190.32032776 -274.50384521]
[195.06802368 -280.17095947]
[198.89530945 -294.67446899]
[202.72259521 -309.17797852]
[206.54988098 -323.68151855]
[210.37716675 -338.18502808]
[214.20445251 -352.68853760]
[204.56677246 -364.70608521]
[203.86164856 -379.91647339]
[212.15013123 -392.47692871]
[226.07867432 -397.68594360]
[225.24250793 -406.78527832]
[230.07565308 -412.37966919]
[222.58879089 -426.03927612]
[226.89872742 -440.62963867]
[239.96719360 -447.68304443]
[244.01414490 -462.12683105]
[248.06109619 -476.57058716]
[252.10804749 -491.01434326]
[243.25656128 -506.10134888]
[247.96095276 -522.59783936]
[262.84118652 -530.43176270]
[266.66845703 -544.93524170]
[270.49572754 -559.43878174]
[274.32302856 -573.94226074]
[272.51821899 -590.79986572]
[288.21737671 -597.20080566]
[298.71414185 -583.88714600]
[288.82653809 -570.11499023]
[284.99926758 -555.61151123]
[281.17196655 -541.10797119]
[277.34469604 -526.60443115]
[285.32446289 -516.48516846]
[286.02841187 -503.42245483]
[278.97567749 -492.17437744]
[266.55181885 -486.96737671]
[262.50485229 -472.52362061]
[258.45791626 -458.07986450]
[254.41096497 -443.63610840]
[261.91207886 -430.81936646]
[258.01364136 -416.11367798]
[244.51940918 -408.33273315]
[240.58218384 -393.85867310]
[250.12693787 -382.45535278]
[251.13871765 -367.44070435]
[243.02038574 -354.55868530]
[228.70796204 -348.86123657]
[224.88067627 -334.35772705]
[221.05339050 -319.85421753]
[217.22610474 -305.35070801]
[213.39881897 -290.84719849]
[209.57153320 -276.34368896]
[205.85441589 -261.81155396]
[202.24768066 -247.25161743]
[198.64094543 -232.69168091]
[200.08444214 -225.44094849]
[194.86741638 -217.93899536]
[191.04014587 -203.43548584]
[187.32302856 -188.90335083]
[183.71629333 -174.34342957]
[180.10955811 -159.78349304]
[176.50282288 -145.22357178]
[184.38945007 -132.64038086]
[180.93911743 -117.82317352]
[167.68724060 -109.63625336]
[172.13728333 -95.42195129]
[161.30874634 -83.88707733]
[157.70201111 -69.32715607]
[154.09527588 -54.76722717]
[155.53877258 -47.51649475]
[150.32174683 -40.01454163]
[146.49446106 -25.51102638]
[152.30990601 -14.90183830]
[149.23771667 -2.78591061]
[138.39648438 4.20577288]
[134.34953308 18.64953232]
[130.30258179 33.09329224]
[126.25563049 47.53705215]
[122.20867920 61.98080826]
[118.16172791 76.42456818]
[114.11477661 90.86833191]
[118.81493378 105.11292267]
[130.66307068 114.31192780]
[142.51121521 123.51092529]
[154.35934448 132.70993042]
[166.20748901 141.90893555]
[178.05563354 151.10792542]
[189.90376282 160.30693054]
[205.15051270 156.83264160]
[219.03974915 164.01754761]
[225.01341248 178.46917725]
[220.25091553 193.36389160]
[207.00096130 201.66886902]
[191.51977539 199.46276855]
[181.11709595 187.78721619]
[180.70475769 172.15507507]
[168.85662842 162.95606995]
[157.00848389 153.75706482]
[145.16035461 144.55805969]
[133.31221008 135.35906982]
[121.46407318 126.16006470]
[109.61593628 116.96105957]
[94.86401367 119.67780304]
[87.07025146 132.49409485]
[79.27648926 145.31039429]
[71.48273468 158.12667847]
[63.68897247 170.94296265]
[63.12952423 186.75428772]
[49.90573883 193.60853577]
[42.20945740 206.48359680]
[34.70945740 219.47398376]
[27.30825043 232.52088928]
[19.90703964 245.56781006]
[12.50583172 258.61474609]
[5.10462284 271.66165161]
[-2.29658628 284.70858765]
[-9.69779491 297.75549316]
[3.61923862 290.85211182]
[18.54767227 289.38861084]
[32.95182800 293.57434082]
[44.77102661 302.81048584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 37]
[11 36]
[12 35]
[13 34]
[14 33]
[16 31]
[17 30]
[39 202]
[40 201]
[41 200]
[42 199]
[43 198]
[44 197]
[45 196]
[47 195]
[49 194]
[51 192]
[52 191]
[53 190]
[54 189]
[55 188]
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[64 161]
[65 160]
[67 157]
[68 156]
[69 154]
[70 153]
[71 152]
[73 150]
[76 147]
[77 146]
[78 145]
[79 144]
[81 143]
[82 142]
[83 140]
[84 139]
[85 138]
[87 137]
[88 136]
[89 135]
[90 134]
[91 133]
[92 132]
[96 128]
[98 127]
[101 124]
[102 123]
[103 122]
[104 121]
[107 117]
[108 116]
[109 115]
[110 114]
[167 187]
[168 186]
[169 185]
[170 184]
[171 183]
[172 182]
[173 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
