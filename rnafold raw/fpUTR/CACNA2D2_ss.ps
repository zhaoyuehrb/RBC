%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAGCCCGCAGAGGCGCUGCGGCCCGUGCAGCCCCGGAGGCCCCUCGCGGAGAAGGCGGCGGCGGAGGAGAGGCCGAGUUACCGCCCGCCGCCCGCGCCCCCCCAACCCCGCCGCCGCCGCCGCCGCCGCCACUGCCCCCCCUCCCCGCGGCGCCGCAUCUUGAAUGGAAAC\
) } def
/len { sequence length } bind def

/coor [
[38.25201035 803.83044434]
[32.98138809 817.87396240]
[27.71076393 831.91748047]
[22.44014168 845.96099854]
[28.72810364 860.21228027]
[23.18288803 874.37933350]
[9.55770874 880.28613281]
[14.85659885 895.42883301]
[6.19970608 908.93579102]
[-9.77214336 910.44561768]
[-20.80671310 898.80010986]
[-18.43922615 882.93267822]
[-4.48581457 875.01550293]
[-10.86024666 861.60272217]
[-5.71514082 847.28552246]
[8.39661884 840.69036865]
[13.66724205 826.64685059]
[18.93786430 812.60333252]
[24.20848656 798.55981445]
[27.54630089 783.93591309]
[28.89089012 768.99627686]
[30.23547935 754.05664062]
[31.58006859 739.11706543]
[32.92465973 724.17742920]
[34.26924896 709.23779297]
[35.47968674 694.28674316]
[36.55588150 679.32537842]
[37.63207245 664.36407471]
[38.70826340 649.40270996]
[39.78445816 634.44134521]
[26.11900902 628.39648438]
[15.32602406 618.02148438]
[8.72152328 604.55462646]
[7.11995649 589.61285400]
[10.73381424 574.99749756]
[19.14566422 562.47705078]
[31.35626984 553.57348633]
[45.90326309 549.37701416]
[46.97945404 534.41571045]
[44.31417847 527.49530029]
[48.21162415 519.19622803]
[49.55621338 504.25659180]
[50.90080261 489.31698608]
[39.22564316 482.19689941]
[31.72724152 470.68191528]
[29.92018890 456.99322510]
[34.21458435 443.80093384]
[43.82475662 433.70312500]
[56.91231537 428.71438599]
[58.52487183 413.80133057]
[60.13742447 398.88824463]
[61.74997711 383.97518921]
[49.64569855 375.29461670]
[43.47051620 361.62994385]
[44.97411728 346.60977173]
[53.85232925 334.27795410]
[67.80206299 328.00482178]
[69.41461945 313.09176636]
[71.02717590 298.17868042]
[72.63972473 283.26562500]
[74.25228119 268.35253906]
[75.86483765 253.43946838]
[77.47738647 238.52639771]
[79.08994293 223.61332703]
[80.70249939 208.70025635]
[82.31504822 193.78718567]
[83.92760468 178.87411499]
[77.60337067 165.38882446]
[86.77940369 152.50041199]
[88.39195251 137.58734131]
[68.51126099 125.91872406]
[58.00872421 104.47165680]
[61.19131470 79.96838379]
[77.90663147 60.66102600]
[74.43769073 46.06765747]
[70.96875000 31.47428703]
[60.24972916 19.83756828]
[64.83393860 5.66596699]
[51.98283768 -3.93761826]
[51.62273407 -19.97662926]
[64.02986145 -30.14731026]
[79.68653870 -26.64758301]
[86.58229828 -12.16214085]
[79.42730713 2.19702554]
[89.89820099 12.78992844]
[85.56211853 28.00534630]
[89.03105927 42.59871674]
[92.50000000 57.19208527]
[107.50000000 57.19208527]
[110.96894073 42.59871674]
[114.43788147 28.00534630]
[107.28289032 13.64617920]
[114.17865753 -0.83926296]
[129.83532715 -4.33898926]
[142.24246216 5.83169079]
[141.88235474 21.87070274]
[129.03125000 31.47428703]
[125.56230927 46.06765747]
[122.09336853 60.66102600]
[129.56227112 66.55577850]
[135.55371094 73.81576538]
[139.83071899 82.08649445]
[142.23861694 90.97544098]
[142.71025085 100.07069397]
[141.26719666 108.95995331]
[138.01684570 117.24926758]
[133.14572144 124.58046722]
[126.90921021 130.64662170]
[119.61856079 135.20483398]
[111.62542725 138.08581543]
[103.30502319 139.19989014]
[101.69246674 154.11296082]
[107.90135956 168.66494751]
[98.84067535 180.48667908]
[97.22811890 195.39974976]
[95.61557007 210.31282043]
[94.00301361 225.22589111]
[92.39045715 240.13896179]
[90.77790833 255.05203247]
[89.16535187 269.96508789]
[87.55279541 284.87817383]
[85.94024658 299.79122925]
[84.32769012 314.70431519]
[82.71513367 329.61737061]
[95.00148773 338.72741699]
[101.03842163 352.67202759]
[99.29653931 367.66644287]
[90.34311676 379.69525146]
[76.66304779 385.58773804]
[75.05049133 400.50079346]
[73.43794250 415.41387939]
[71.82538605 430.32693481]
[85.26309204 439.93402100]
[91.99277496 454.91699219]
[90.26791382 471.15679932]
[80.65217590 484.24075317]
[65.84041595 490.66156006]
[64.49582672 505.60119629]
[63.15123749 520.54083252]
[61.94079590 535.49188232]
[60.86460495 550.45324707]
[74.66122437 556.68847656]
[85.47182465 567.24798584]
[92.00511932 580.84344482]
[93.48998260 595.82562256]
[89.76640320 610.38433838]
[81.30249023 622.76727295]
[69.13572693 631.49072266]
[54.74580002 635.51757812]
[53.66960907 650.47888184]
[52.59341431 665.44024658]
[51.51722336 680.40161133]
[50.44103241 695.36291504]
[52.95267868 704.18090820]
[49.20886230 710.58239746]
[47.86427307 725.52203369]
[46.51968384 740.46160889]
[45.17509460 755.40124512]
[43.83050537 770.34088135]
[42.48591614 785.28045654]
[51.41710663 773.22918701]
[64.05162048 765.14404297]
[78.73600769 762.08325195]
[93.54855347 764.44720459]
[106.55077362 771.92669678]
[116.04109192 783.54278564]
[120.77752686 797.77539062]
[120.14024353 812.76184082]
[114.21263123 826.54089355]
[103.77042389 837.30938721]
[90.18018341 843.65802002]
[75.22042084 844.75598145]
[60.84889221 840.45959473]
[48.94637299 831.33105469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[4 16]
[7 13]
[20 160]
[21 159]
[22 158]
[23 157]
[24 156]
[25 155]
[26 153]
[27 152]
[28 151]
[29 150]
[30 149]
[38 141]
[39 140]
[41 139]
[42 138]
[43 137]
[49 132]
[50 131]
[51 130]
[52 129]
[57 124]
[58 123]
[59 122]
[60 121]
[61 120]
[62 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
[69 112]
[70 111]
[74 88]
[75 87]
[76 86]
[78 84]
[89 99]
[90 98]
[91 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
