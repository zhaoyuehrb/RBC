%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGCGAUGUGACGCCGCGCGCCCCGGGGUCCUCGGCGCCUGCGCCCUCUCCUAUAAAGCAGACGCCGCGCCGCGCUGCGACGCUGUAGUGGCUUCGUCUUCGGUUUUUCUCUUCCUUCGCUAACGCCUCCCGGCUCUCGUCAGCCUCCCGCCGGCCGUCUCCUUAACACCGAACACC\
) } def
/len { sequence length } bind def

/coor [
[-93.57812500 134.84677124]
[-101.77893066 122.28704834]
[-102.27770996 107.29534912]
[-94.92984772 94.21830750]
[-81.86813354 86.84803772]
[-96.42256927 83.21920776]
[-110.97700500 79.59037781]
[-125.53144073 75.96154785]
[-140.79351807 80.13045502]
[-151.27090454 69.54398346]
[-165.82534790 65.91515350]
[-181.08741760 70.08406067]
[-191.56481934 59.49758148]
[-206.11924744 55.86875153]
[-220.70480347 52.36707306]
[-235.32034302 48.99280548]
[-250.50733948 53.42743683]
[-261.16790771 43.02542877]
[-275.78344727 39.65116501]
[-290.39898682 36.27689743]
[-305.04342651 33.03030396]
[-319.71563721 29.91162872]
[-334.38787842 26.79295349]
[-347.54281616 35.13472748]
[-362.37808228 31.76293564]
[-370.24963379 19.17029953]
[-384.92184448 16.05162430]
[-400.02911377 20.75062943]
[-410.86959839 10.53625870]
[-425.54180908 7.41758347]
[-440.21401978 4.29890823]
[-449.00872803 10.75884151]
[-459.68807983 11.28535748]
[-468.69699097 5.94584274]
[-473.16983032 -3.27951264]
[-487.72424316 -6.90834093]
[-502.27868652 -10.53716946]
[-516.83312988 -14.16599751]
[-531.38757324 -17.79482651]
[-546.64965820 -13.62592030]
[-557.12701416 -24.21239662]
[-571.68145752 -27.84122467]
[-586.23590088 -31.47005272]
[-600.79034424 -35.09888077]
[-609.51019287 -22.67598343]
[-622.13104248 -14.24520493]
[-636.94610596 -10.94674206]
[-651.95159912 -13.22668266]
[-665.11834717 -20.77668571]
[-674.66546631 -32.57567215]
[-679.30194092 -47.02793121]
[-678.40063477 -62.17890549]
[-672.08349609 -75.97956085]
[-661.20483398 -86.56346130]
[-647.23590088 -92.49922943]
[-632.06585693 -92.98409271]
[-617.74639893 -87.95248413]
[-606.21405029 -78.08489227]
[-599.02850342 -64.71581268]
[-597.16149902 -49.65331650]
[-582.60705566 -46.02449036]
[-568.05261230 -42.39566040]
[-553.49816895 -38.76683044]
[-539.27716064 -43.19529724]
[-527.75872803 -32.34926224]
[-513.20428467 -28.72043419]
[-498.64987183 -25.09160614]
[-484.09542847 -21.46277618]
[-469.54098511 -17.83394814]
[-451.41909790 -24.53147316]
[-437.09536743 -10.37330532]
[-422.42312622 -7.25463057]
[-407.75091553 -4.13595486]
[-393.69311523 -9.05802822]
[-381.80316162 1.37941074]
[-367.13095093 4.49808598]
[-354.81805420 -3.80421686]
[-339.89392090 -0.85044789]
[-331.26919556 12.12073994]
[-316.59698486 15.23941517]
[-301.92477417 18.35809135]
[-294.70812988 16.66853714]
[-287.02471924 21.66134834]
[-272.40917969 25.03561401]
[-257.79364014 28.40987968]
[-243.65203857 23.73389816]
[-231.94607544 34.37725449]
[-217.33053589 37.75152206]
[-210.08549500 36.18817139]
[-202.49041748 41.31431580]
[-187.93598938 44.94314575]
[-173.71495056 40.51468277]
[-162.19651794 51.36071396]
[-147.64207458 54.98954391]
[-133.42103577 50.56108093]
[-121.90261841 61.40711212]
[-107.34818268 65.03594208]
[-92.79374695 68.66477203]
[-78.23931122 72.29360199]
[-68.07051849 69.18746185]
[-58.14203644 75.83728790]
[-43.22420883 77.40522003]
[-28.30637932 78.97314453]
[-13.38854980 80.54106903]
[1.52927828 82.10900116]
[16.44710732 83.67692566]
[20.30069542 70.07426453]
[26.35234642 57.29693604]
[34.43515396 45.69733429]
[44.32620239 35.59536743]
[55.75270081 27.26963997]
[68.39951324 20.94977570]
[81.91784668 16.81007004]
[95.93487549 14.96469212]
[110.06402588 15.46453857]
[123.91561127 18.29582405]
[137.10762024 23.38046074]
[149.27621460 30.57822037]
[160.08580017 39.69058990]
[169.23826599 50.46625900]
[176.48117065 62.60803986]
[190.48487854 57.23252106]
[200.37907410 44.15441132]
[216.61645508 46.45220566]
[222.49337769 61.76213074]
[211.96418762 74.33464813]
[195.86039734 71.23622894]
[181.85668945 76.61174774]
[184.14772034 87.08916473]
[185.10324097 97.77149200]
[184.70809937 108.48918915]
[182.96855164 119.07215118]
[197.23440552 123.70740509]
[211.50025940 128.34266663]
[225.76609802 132.97792053]
[240.03195190 137.61317444]
[249.59715271 125.82880402]
[262.77539062 118.29895020]
[277.78439331 116.04196167]
[292.59432983 119.36308289]
[305.20230103 127.81315613]
[313.90316772 140.24937439]
[317.52017212 154.98985291]
[315.56420898 170.04104614]
[308.29974365 183.36743164]
[296.70928955 193.16668701]
[282.36032104 198.11357117]
[267.19342041 197.53904724]
[253.25982666 191.52082825]
[242.44390869 180.87280273]
[236.20841980 167.03506470]
[235.39669800 151.87901306]
[221.13084412 147.24375916]
[206.86500549 142.60850525]
[192.59915161 137.97325134]
[178.33329773 133.33799744]
[170.30079651 148.01380920]
[159.55326843 160.83532715]
[146.50576782 171.30737305]
[131.66223145 179.02551270]
[115.59587097 183.69168091]
[98.92720795 185.12565613]
[82.29997253 183.27206421]
[66.35631561 178.20249939]
[51.71198654 170.11274719]
[38.93254471 159.31521606]
[28.51153755 146.22692871]
[20.85142708 131.35334778]
[16.24804688 115.26889038]
[14.87917995 98.59475708]
[-0.03864861 97.02682495]
[-14.95647717 95.45890045]
[-29.87430573 93.89097595]
[-44.79213333 92.32304382]
[-59.70996094 90.75511932]
[-49.95571518 102.15049744]
[-47.52489471 116.95222473]
[-53.12228394 130.86872864]
[-65.12499237 139.86511230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 99]
[6 98]
[7 97]
[8 96]
[10 94]
[11 93]
[13 91]
[14 90]
[15 88]
[16 87]
[18 85]
[19 84]
[20 83]
[21 81]
[22 80]
[23 79]
[26 76]
[27 75]
[29 73]
[30 72]
[31 71]
[35 69]
[36 68]
[37 67]
[38 66]
[39 65]
[41 63]
[42 62]
[43 61]
[44 60]
[101 175]
[102 174]
[103 173]
[104 172]
[105 171]
[106 170]
[121 128]
[122 127]
[132 156]
[133 155]
[134 154]
[135 153]
[136 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
