%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGCUCCGGUUUUCAGCCUCUUUCCGGGCUACCUGGUAGCAAUUUGAGGCUCUGUCAUCAGUUUCUGCUACGUUUCAAAGAUCCUGGAGAAGCCUAGUGUUGUGUCAAGACGCCG\
) } def
/len { sequence length } bind def

/coor [
[53.45880508 161.53268433]
[47.60003281 157.32156372]
[35.10032272 165.61357117]
[22.71210098 174.07122803]
[10.43756008 182.69303894]
[-1.83698153 191.31484985]
[-7.14698792 198.90830994]
[-14.55501461 199.99766541]
[-27.05472374 208.28967285]
[-39.55443192 216.58166504]
[-52.05414200 224.87367249]
[-49.10388184 239.78555298]
[-52.08963394 254.69038391]
[-60.55608749 267.31524658]
[-73.21217346 275.73498535]
[-88.12792969 278.66561890]
[-103.02880859 275.66027832]
[-115.64253998 267.17721558]
[-124.04562378 254.51007080]
[-126.95663452 239.59046936]
[-123.93168640 224.69355774]
[-115.43204498 212.09100342]
[-102.75385284 203.70458984]
[-87.83043671 200.81320190]
[-72.93750763 203.85774231]
[-60.34614182 212.37396240]
[-47.84643173 204.08195496]
[-35.34672546 195.78996277]
[-22.84701538 187.49795532]
[-10.45879269 179.04029846]
[1.81574893 170.41848755]
[14.09029102 161.79667664]
[17.80255508 155.29402161]
[26.80832291 153.11386108]
[39.30803299 144.82185364]
[40.61296844 121.28494263]
[58.61608887 105.69845581]
[82.57508850 107.81848907]
[82.10148621 93.33670807]
[91.92990112 82.69018555]
[106.40329742 82.00683594]
[116.57797241 70.98522186]
[126.75265503 59.96360779]
[136.92733765 48.94199753]
[147.10200500 37.92038345]
[144.21566772 22.78845787]
[150.71693420 9.01940155]
[163.92309570 1.80407131]
[178.66914368 3.72562099]
[188.84381104 -7.29599142]
[199.01849365 -18.31760406]
[209.19317627 -29.33921623]
[219.36784363 -40.36082840]
[220.55795288 -45.70957947]
[223.45303345 -49.60720444]
[227.17767334 -51.63878250]
[230.82138062 -51.81436539]
[241.84300232 -61.98904037]
[246.73471069 -77.03503418]
[261.33468628 -79.98291779]
[272.35629272 -90.15760040]
[283.37789917 -100.33227539]
[294.39950562 -110.50695038]
[295.18994141 -126.06372070]
[306.51235962 -136.22528076]
[321.33850098 -135.37585449]
[332.36010742 -145.55053711]
[343.38171387 -155.72521973]
[338.87060547 -170.30645752]
[341.14126587 -185.39971924]
[349.74285889 -198.00825500]
[362.96759033 -205.62860107]
[378.18960571 -206.74774170]
[392.38662720 -201.14347839]
[402.73977661 -189.92852783]
[407.19345093 -175.32965088]
[404.86337280 -160.24543762]
[396.21215820 -147.67088318]
[382.95755005 -140.10266113]
[367.73123169 -139.04347229]
[353.55639648 -144.70359802]
[342.53479004 -134.52893066]
[331.51318359 -124.35424805]
[331.17697144 -109.50761414]
[320.14443970 -99.03203583]
[304.57418823 -99.48534393]
[293.55258179 -89.31066132]
[282.53097534 -79.13598633]
[271.50936890 -68.96131134]
[267.40597534 -54.64308167]
[252.01766968 -50.96743011]
[240.99606323 -40.79275131]
[230.38946533 -30.18614960]
[220.21478271 -19.16453743]
[210.04010010 -8.14292622]
[199.86543274 2.87868643]
[189.69075012 13.90029907]
[192.78269958 28.44601440]
[186.64404297 42.18576813]
[173.43759155 49.76488876]
[158.12362671 48.09506226]
[147.94894409 59.11667252]
[137.77426147 70.13829041]
[127.59958649 81.15989685]
[117.42491150 92.18151093]
[117.89851379 106.66329193]
[108.07009888 117.30981445]
[93.59670258 117.99316406]
[96.82507324 124.67156982]
[98.36676788 131.90853882]
[98.14171600 139.28604126]
[96.17161560 146.38008118]
[92.57821655 152.78501892]
[87.57582092 158.13682556]
[81.45852661 162.13366699]
[74.58293152 164.55307007]
[67.34735870 165.26412964]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 35]
[3 34]
[4 32]
[5 31]
[6 30]
[8 29]
[9 28]
[10 27]
[11 26]
[38 108]
[41 105]
[42 104]
[43 103]
[44 102]
[45 101]
[49 97]
[50 96]
[51 95]
[52 94]
[53 93]
[57 92]
[58 91]
[60 89]
[61 88]
[62 87]
[63 86]
[66 83]
[67 82]
[68 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
