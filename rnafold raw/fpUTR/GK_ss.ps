%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCGGAGGGGCGGGGUGAGAAGGCUGCGCGCGGGUAAAGGGGCCGCCUCGAGCGCGGUCCGAGCGUUCAGCGGACGCGCGCGGCCUCGAUCUCUGGACUCGUCACCUGCCCCUCCCCCUCCCGCCGCCGUCACCCAGGAAACCGGCCGCAAUCGCCGGCCGACCUGAAGCUGGUUUC\
) } def
/len { sequence length } bind def

/coor [
[262.01861572 281.49002075]
[276.39105225 277.19448853]
[264.73385620 267.75466919]
[253.07667542 258.31488037]
[238.31648254 256.31835938]
[232.46096802 241.62060547]
[220.80378723 232.18080139]
[209.14659119 222.74099731]
[197.48941040 213.30119324]
[185.83221436 203.86137390]
[174.17503357 194.42156982]
[162.51783752 184.98176575]
[145.07266235 183.18884277]
[138.58847046 165.96792603]
[126.76831055 156.73300171]
[114.94815063 147.49807739]
[103.12799072 138.26315308]
[91.30782318 129.02824402]
[78.45031738 121.30266571]
[64.74713135 115.20161438]
[51.04395294 109.10057068]
[37.34077072 102.99951935]
[23.48257828 97.25926971]
[9.47887135 91.88374329]
[-4.52483511 86.50822449]
[-18.52854156 81.13270569]
[-32.53224945 75.75718689]
[-46.53595352 70.38166809]
[-60.53966141 65.00614929]
[-74.54336548 59.63063049]
[-88.54707336 54.25511169]
[-102.55078125 48.87959290]
[-116.55448914 43.50407410]
[-130.55819702 38.12855530]
[-137.35177612 47.65711975]
[-147.00526428 54.88843155]
[-158.73733521 58.96720886]
[-171.51310730 59.30482864]
[-184.13523865 55.65336609]
[-195.35609436 48.14862442]
[-204.00062561 37.31630325]
[-209.08770752 24.03897476]
[-223.64215088 20.41014671]
[-238.19657898 16.78131866]
[-252.75102234 13.15248966]
[-267.30545044 9.52366161]
[-281.85989380 5.89483309]
[-296.41433716 2.26600456]
[-308.95819092 11.60330677]
[-324.56619263 10.64144421]
[-335.86865234 -0.16542007]
[-337.52893066 -15.71461582]
[-328.76306152 -28.66428947]
[-313.71008301 -32.89999771]
[-299.47747803 -26.42177200]
[-292.78549194 -12.28843117]
[-278.23107910 -8.65960312]
[-263.67663574 -5.03077459]
[-249.12219238 -1.40194607]
[-234.56776428 2.22688246]
[-220.01332092 5.85571098]
[-205.45887756 9.48453903]
[-201.59609985 3.05578446]
[-193.87052917 -9.80172539]
[-190.00773621 -16.23048019]
[-200.04470825 -27.37765121]
[-215.92604065 -29.64980125]
[-223.92687988 -43.55541229]
[-217.90968323 -58.42729187]
[-202.49029541 -62.85700226]
[-189.49717712 -53.44645309]
[-188.89753723 -37.41461182]
[-178.86056519 -26.26743889]
[-154.94810486 -26.27363014]
[-135.35559082 -14.82905483]
[-124.82623291 3.88014579]
[-125.18267059 24.12484741]
[-111.17897034 29.50036812]
[-97.17526245 34.87588501]
[-83.17155457 40.25140762]
[-69.16784668 45.62692642]
[-55.16414261 51.00244522]
[-41.16043472 56.37796402]
[-27.15672874 61.75348282]
[-13.15302277 67.12900543]
[0.85068399 72.50452423]
[14.85439014 77.88004303]
[28.85809708 83.25556183]
[32.23193741 82.14350128]
[36.31547928 82.62771606]
[40.34453583 85.02528381]
[43.44182205 89.29633331]
[57.14500046 95.39738464]
[70.84818268 101.49843597]
[84.55136871 107.59948730]
[86.11536407 92.36860657]
[98.43275452 85.61445618]
[104.77202606 72.01983643]
[97.13170624 58.51409912]
[98.92247009 43.10070038]
[109.45574951 31.70641708]
[124.68127441 28.71257782]
[138.74452209 35.27037811]
[146.23788452 48.85820770]
[144.28001404 64.25126648]
[133.62374878 75.53061676]
[118.36664581 78.35911560]
[112.02737427 91.95372772]
[114.09089661 107.24346161]
[100.54274750 117.20807648]
[112.36290741 126.44300079]
[124.18306732 135.67791748]
[136.00323486 144.91284180]
[147.82339478 154.14776611]
[160.71559143 153.35600281]
[170.37461853 161.31436157]
[171.95764160 173.32458496]
[183.61483765 182.76438904]
[195.27201843 192.20419312]
[206.92921448 201.64399719]
[218.58639526 211.08380127]
[230.24359131 220.52360535]
[241.90077209 229.96340942]
[257.49478149 232.63513184]
[262.51647949 246.65768433]
[274.17367554 256.09747314]
[285.83084106 265.53729248]
[297.88870239 274.45962524]
[310.32427979 282.84753418]
[322.75982666 291.23541260]
[335.19540405 299.62332153]
[347.44705200 292.84201050]
[361.35922241 292.01107788]
[374.20825195 297.23596191]
[383.50332642 307.44216919]
[387.46914673 320.59558105]
[385.38500977 334.10787964]
[397.67230225 342.71151733]
[409.95959473 351.31518555]
[422.24685669 359.91882324]
[431.27987671 357.04574585]
[440.48309326 358.64437866]
[447.79882812 364.22821045]
[451.65109253 372.43432617]
[451.28454590 381.35427856]
[463.10470581 390.58920288]
[474.92486572 399.82412720]
[486.74502563 409.05905151]
[498.56518555 418.29397583]
[510.38534546 427.52890015]
[522.28564453 436.66030884]
[538.61962891 438.12072754]
[545.27551270 453.10842896]
[535.40625000 466.20538330]
[519.16448975 463.93853760]
[513.25842285 448.63983154]
[506.00387573 447.12121582]
[501.15042114 439.34906006]
[489.33026123 430.11413574]
[477.51010132 420.87921143]
[465.68994141 411.64428711]
[453.86978149 402.40936279]
[442.04962158 393.17443848]
[421.45141602 392.14273071]
[413.64321899 372.20611572]
[401.35592651 363.60244751]
[389.06866455 354.99880981]
[376.78137207 346.39517212]
[362.32131958 353.57867432]
[346.11785889 352.49148560]
[332.59167480 343.33551025]
[325.48074341 328.52679443]
[326.80749512 312.05886841]
[314.37194824 303.67098999]
[301.93637085 295.28308105]
[289.50082397 286.89520264]
[289.59536743 301.89489746]
[278.04052734 311.45971680]
[263.32247925 308.56497192]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 127]
[3 126]
[4 125]
[6 123]
[7 122]
[8 121]
[9 120]
[10 119]
[11 118]
[12 117]
[14 114]
[15 113]
[16 112]
[17 111]
[18 110]
[19 95]
[20 94]
[21 93]
[22 92]
[23 88]
[24 87]
[25 86]
[26 85]
[27 84]
[28 83]
[29 82]
[30 81]
[31 80]
[32 79]
[33 78]
[34 77]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[65 73]
[66 72]
[97 108]
[98 107]
[128 176]
[129 175]
[130 174]
[131 173]
[137 168]
[138 167]
[139 166]
[140 165]
[145 163]
[146 162]
[147 161]
[148 160]
[149 159]
[150 158]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
