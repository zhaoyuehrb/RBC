%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUUAAGGCACCUGGGCCACCGCCCCUGCCGGCCCCUCCUCCCGCGGCCGGGAAGAGGAAAGUCGCGGCGGGGGCGCGGCCCGGUCUCCGUCCCCACCCGCCCGCCGUCCCGCCGGCCCGAGCCGUGGCGCCCAGAGCUGCGAGCCGCUCGCCCCUCCGCCGCUCCGGCCCGGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[72.08966064 102.48265076]
[57.33807373 99.76404572]
[42.58649063 97.04544830]
[27.83490562 94.32685089]
[16.58125877 104.84643555]
[1.46785700 106.70074463]
[-11.68389225 99.38668060]
[-17.93216515 85.89234924]
[-32.68375015 83.17375183]
[-47.43533325 80.45515442]
[-62.27238464 78.25016785]
[-77.17702484 76.56146240]
[-92.08166504 74.87275696]
[-100.98855591 77.01985931]
[-107.22951508 73.02320862]
[-122.10260010 71.07607269]
[-136.97567749 69.12893677]
[-151.84877014 67.18180084]
[-166.72184753 65.23466492]
[-177.42240906 72.46762085]
[-189.78492737 70.52242279]
[-197.25181580 60.98402786]
[-212.08886719 58.77904510]
[-226.92591858 56.57406616]
[-241.76296997 54.36908340]
[-256.60003662 52.16410446]
[-271.43707275 49.95912170]
[-286.27410889 47.75414276]
[-301.11117554 45.54916000]
[-315.94821167 43.34418106]
[-330.78527832 41.13919830]
[-345.62231445 38.93421936]
[-360.49542236 36.98707962]
[-375.40005493 35.29837418]
[-393.47155762 44.19058990]
[-408.53826904 32.09603882]
[-423.49252319 30.92564201]
[-438.44680786 29.75524330]
[-453.40106201 28.58484650]
[-467.76287842 35.22177887]
[-479.84762573 26.51500320]
[-494.80191040 25.34460449]
[-509.75616455 24.17420769]
[-524.71044922 23.00380898]
[-539.66473389 21.83341217]
[-554.22204590 29.38427544]
[-567.89239502 20.32588387]
[-566.61279297 3.97673225]
[-551.69964600 -2.84457231]
[-538.49432373 6.87914276]
[-523.54003906 8.04954052]
[-508.58578491 9.21993828]
[-493.63150024 10.39033508]
[-478.67724609 11.56073284]
[-465.38504028 4.84008598]
[-452.23065186 13.63057709]
[-437.27639771 14.80097389]
[-422.32214355 15.97137165]
[-407.36785889 17.14176941]
[-400.20312500 9.81007862]
[-389.96789551 7.60015202]
[-380.00653076 11.48199654]
[-373.71133423 20.39373398]
[-358.80670166 22.08244133]
[-354.56057739 19.84316254]
[-348.85925293 20.26633835]
[-343.41735840 24.09716797]
[-328.58029175 26.30214882]
[-313.74325562 28.50712967]
[-298.90618896 30.71211052]
[-284.06915283 32.91709137]
[-269.23208618 35.12207413]
[-254.39503479 37.32705307]
[-239.55799866 39.53203583]
[-224.72094727 41.73701477]
[-209.88389587 43.94199753]
[-195.04684448 46.14697647]
[-179.11097717 38.82492065]
[-164.77471924 50.36157990]
[-149.90162659 52.30871582]
[-135.02854919 54.25585175]
[-120.15546417 56.20299149]
[-105.28237915 58.15012741]
[-90.39295197 59.96811676]
[-75.48831940 61.65682220]
[-60.58367538 63.34553146]
[-58.29768753 61.67920303]
[-55.20516968 60.83056641]
[-51.61887741 61.11470032]
[-47.96083450 62.72602081]
[-44.71673584 65.70356750]
[-29.96515083 68.42216492]
[-15.21356678 71.14076233]
[-4.56536245 60.76031494]
[10.32966423 58.61505127]
[23.78916168 65.73511505]
[30.55350494 79.57527161]
[45.30508804 82.29386902]
[60.05667114 85.01246643]
[74.80825806 87.73106384]
[79.95066833 78.70879364]
[88.32688904 71.85448456]
[99.01976776 68.32016754]
[110.70747375 68.87020111]
[121.82645416 73.74239349]
[131.01800537 61.88847351]
[128.78607178 46.24258041]
[138.33787537 33.65136719]
[154.00650024 31.58498573]
[166.49601746 41.26937866]
[168.39662170 56.95896912]
[158.58073425 69.34539795]
[142.87191772 71.08002472]
[133.68037415 82.93394470]
[137.66734314 97.39437866]
[151.63496399 102.86294556]
[165.60260010 108.33152008]
[179.57023621 113.80009460]
[193.53785706 119.26866913]
[207.50549316 124.73723602]
[221.47312927 130.20581055]
[237.14430237 128.03218079]
[246.17483521 139.87696838]
[260.14245605 145.34553528]
[274.11007690 150.81410217]
[288.07772827 156.28268433]
[303.74890137 154.10905457]
[312.77941895 165.95382690]
[326.74707031 171.42240906]
[340.71469116 176.89097595]
[354.68231201 182.35954285]
[368.69686890 187.70669556]
[378.33850098 182.59912109]
[388.97921753 183.63504028]
[397.11279297 190.22964478]
[400.19354248 200.00695801]
[414.06414795 205.71713257]
[427.93478394 211.42730713]
[442.37698364 205.59115601]
[456.36242676 211.57968140]
[461.83728027 225.38407898]
[475.70788574 231.09425354]
[489.57849121 236.80441284]
[503.44912720 242.51458740]
[517.31976318 248.22476196]
[534.26800537 248.66326904]
[538.53839111 265.07058716]
[523.95440674 273.71609497]
[511.60955811 262.09536743]
[497.73895264 256.38519287]
[483.86834717 250.67503357]
[469.99771118 244.96485901]
[456.12710571 239.25468445]
[442.52029419 245.20365906]
[428.37216187 239.61032104]
[422.22460938 225.29791260]
[408.35400391 219.58773804]
[394.48336792 213.87757874]
[375.57836914 217.86299133]
[363.47155762 201.76713562]
[356.08645630 202.38595581]
[349.21374512 196.32717896]
[335.24612427 190.85861206]
[321.27847290 185.39002991]
[307.31085205 179.92146301]
[292.63873291 182.48625183]
[282.60916138 170.25030518]
[268.64151001 164.78173828]
[254.67388916 159.31317139]
[240.70625305 153.84458923]
[226.03413391 156.40937805]
[216.00454712 144.17344666]
[202.03692627 138.70486450]
[188.06929016 133.23629761]
[174.10165405 127.76772308]
[160.13403320 122.29914856]
[146.16639709 116.83058167]
[132.19876099 111.36200714]
[117.13435364 127.74998474]
[96.11688232 130.83908081]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 100]
[2 99]
[3 98]
[4 97]
[8 93]
[9 92]
[10 91]
[11 86]
[12 85]
[13 84]
[15 83]
[16 82]
[17 81]
[18 80]
[19 79]
[22 77]
[23 76]
[24 75]
[25 74]
[26 73]
[27 72]
[28 71]
[29 70]
[30 69]
[31 68]
[32 67]
[33 64]
[34 63]
[36 59]
[37 58]
[38 57]
[39 56]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[105 114]
[106 113]
[115 178]
[116 177]
[117 176]
[118 175]
[119 174]
[120 173]
[121 172]
[123 170]
[124 169]
[125 168]
[126 167]
[128 165]
[129 164]
[130 163]
[131 162]
[132 160]
[136 158]
[137 157]
[138 156]
[141 153]
[142 152]
[143 151]
[144 150]
[145 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
