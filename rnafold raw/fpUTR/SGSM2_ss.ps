%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGAUGGCUGCGGAGCCGAGCACCGGGCAGUGGCUGCGGCGGCGGCGGCGGCGGCGGGCCGGGAGCGCGGCGGGCGGGGGCUCCGCCUUGCGCGUGGGGCGCUGAGCCGAGAGGCGCGGAGGCGGCGAGGGCGCGGGGGCUCUGAGGACCGCUCGGCGCCGCCUCCUGCCACACC\
) } def
/len { sequence length } bind def

/coor [
[299.00790405 260.56008911]
[291.40594482 256.06976318]
[284.90054321 250.08561707]
[279.78073120 242.86793518]
[276.27523804 234.73184204]
[274.54208374 226.03366089]
[274.66165161 217.15528870]
[276.63284302 208.48739624]
[263.55511475 201.14076233]
[250.47738647 193.79411316]
[237.39965820 186.44747925]
[230.00569153 185.91114807]
[224.15762329 178.85403442]
[211.21157837 171.27774048]
[198.26554871 163.70144653]
[183.37303162 163.95089722]
[175.37054443 150.30279541]
[162.42451477 142.72650146]
[149.47846985 135.15020752]
[135.17884827 139.15722656]
[121.94179535 131.65820312]
[117.83583069 116.63226318]
[104.88980103 109.05596924]
[95.97868347 124.85001373]
[70.82468414 127.44425201]
[55.82468414 127.44425201]
[40.82468414 127.44425201]
[25.82468414 127.44425201]
[12.02451134 135.18154907]
[-0.70276040 127.44425201]
[-14.50293255 135.18154907]
[-27.23020554 127.44425201]
[-42.23020554 127.44425201]
[-56.03037643 135.18154907]
[-68.75765228 127.44425201]
[-83.75765228 127.44425201]
[-98.75765228 127.44425201]
[-113.75765228 127.44425201]
[-128.75764465 127.44425201]
[-142.55781555 135.18154907]
[-155.28509521 127.44425201]
[-170.28509521 127.44425201]
[-184.20889282 136.10795593]
[-198.54432678 128.14382935]
[-198.54432678 111.74467468]
[-184.20889282 103.78054810]
[-170.28509521 112.44425201]
[-155.28509521 112.44425201]
[-142.55781555 104.70694733]
[-128.75764465 112.44425201]
[-113.75765228 112.44425201]
[-98.75765228 112.44425201]
[-83.75765228 112.44425201]
[-68.75765228 112.44425201]
[-56.03037643 104.70694733]
[-42.23020554 112.44425201]
[-27.23020554 112.44425201]
[-14.50293255 104.70694733]
[-0.70276040 112.44425201]
[12.02451134 104.70694733]
[25.82468414 112.44425201]
[40.82468414 112.44425201]
[55.82468414 112.44425201]
[70.82468414 112.44425201]
[75.32889557 106.44741058]
[84.33731079 94.45372772]
[88.84152222 88.45689392]
[84.66174316 74.05101013]
[80.48196411 59.64512634]
[76.30217743 45.23924637]
[71.86880493 30.90937424]
[67.18322754 16.65997887]
[62.49764252 2.41058087]
[57.81205750 -11.83881569]
[53.12647629 -26.08821297]
[48.31533051 -40.29570770]
[43.37899780 -54.46018982]
[30.61570358 -64.75729370]
[33.41859055 -80.91513824]
[48.90428925 -86.31191254]
[61.14243698 -75.39588165]
[57.54348373 -59.39652252]
[62.47981644 -45.23204041]
[67.66582489 -39.93451309]
[67.37586975 -30.77379608]
[72.06145477 -16.52439880]
[76.74703979 -2.27500176]
[81.43261719 11.97439575]
[86.11820221 26.22379303]
[89.92800140 29.14907837]
[91.92303467 34.51099014]
[90.70806122 41.05946350]
[94.88784027 55.46534729]
[99.06762695 69.87123108]
[103.24740601 84.27710724]
[112.46609497 96.10993958]
[125.41212463 103.68623352]
[140.52346802 99.90666962]
[153.54466248 107.77452850]
[157.05476379 122.20417786]
[170.00080872 129.78047180]
[182.94683838 137.35676575]
[198.76533508 137.64921570]
[205.84184265 150.75541687]
[218.78787231 158.33171082]
[231.73391724 165.90800476]
[244.74629211 173.36975098]
[257.82403564 180.71638489]
[270.90176392 188.06303406]
[283.97949219 195.40966797]
[301.94815063 182.77464294]
[323.76034546 180.85060120]
[343.53765869 190.08627319]
[355.98507690 207.93222046]
[357.80853271 229.54420471]
[371.88369751 234.72975159]
[385.95886230 239.91529846]
[400.03402710 245.10084534]
[409.19924927 245.13436890]
[414.31045532 250.50410461]
[428.29193115 255.93724060]
[442.27337646 261.37039185]
[456.25482178 266.80352783]
[470.23626709 272.23666382]
[484.21771240 277.66983032]
[498.19915771 283.10296631]
[512.18060303 288.53610229]
[526.16204834 293.96923828]
[540.14349365 299.40240479]
[554.46679688 293.28015137]
[568.56854248 298.98928833]
[574.31689453 312.68206787]
[588.29840088 318.11520386]
[597.46160889 318.31048584]
[602.47723389 323.76959229]
[616.36059570 329.44863892]
[630.24401855 335.12768555]
[644.12738037 340.80673218]
[655.42864990 330.54788208]
[670.06433105 326.21664429]
[685.12854004 328.67300415]
[697.63018799 337.42922974]
[705.08709717 350.74679565]
[706.01867676 365.98144531]
[700.24005127 380.10836792]
[688.89843750 390.32263184]
[674.24584961 394.59619141]
[659.19146729 392.08053589]
[646.72436523 383.27514648]
[639.31994629 369.92831421]
[638.44836426 354.69012451]
[624.56494141 349.01107788]
[610.68157959 343.33203125]
[596.79821777 337.65295410]
[582.86523438 332.09664917]
[568.88378906 326.66351318]
[555.39801025 332.88195801]
[541.14141846 327.57113647]
[534.71038818 313.38385010]
[520.72894287 307.95071411]
[506.74746704 302.51754761]
[492.76602173 297.08441162]
[478.78457642 291.65127563]
[464.80313110 286.21813965]
[450.82168579 280.78497314]
[436.84020996 275.35183716]
[422.85876465 269.91870117]
[408.87731934 264.48556519]
[394.84848022 259.17599487]
[380.77331543 253.99046326]
[366.69815063 248.80491638]
[352.62298584 243.61936951]
[347.43917847 250.67967224]
[340.88912964 256.50997925]
[333.25827026 260.85061646]
[324.88024902 263.50695801]
[316.12246704 264.35821533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 110]
[9 109]
[10 108]
[11 107]
[13 106]
[14 105]
[15 104]
[17 102]
[18 101]
[19 100]
[22 97]
[23 96]
[25 64]
[26 63]
[27 62]
[28 61]
[30 59]
[32 57]
[33 56]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[41 48]
[42 47]
[67 95]
[68 94]
[69 93]
[70 92]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[76 83]
[77 82]
[115 172]
[116 171]
[117 170]
[118 169]
[120 168]
[121 167]
[122 166]
[123 165]
[124 164]
[125 163]
[126 162]
[127 161]
[128 160]
[129 159]
[132 156]
[133 155]
[135 154]
[136 153]
[137 152]
[138 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
