%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:52:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGUGCAGUGUUGCCUCGCCCAAAGAAGACUACAAUCUCCAGGGAAACCUGGGGCGUCUCGCGCAAACGUCCAUAACUGAAAGUAGCUAAGGCACCCCAGCCGGAGGAAGUGAGCUCUCCUGGGGCGUGGUUGUUCGUGAUCCUUGCAUCUGUUACUUAGGGUCAAGGCUUGGGUCUUGCCCCGCAGACCCUUGGGACGACCCGGCCCCAGCGCAGCU\
) } def
/len { sequence length } bind def

/coor [
[124.84841156 127.29759979]
[109.85674286 127.79737091]
[102.78668213 114.56694031]
[97.76785278 128.70240784]
[92.74903107 142.83787537]
[96.50667572 160.86802673]
[82.71121979 171.71984863]
[77.89382935 185.92523193]
[73.07644653 200.13061523]
[76.80943298 216.09922791]
[64.66325378 227.11749268]
[49.13284302 221.85075378]
[46.19456482 205.71699524]
[58.87106705 195.31321716]
[63.68845367 181.10784912]
[68.50583649 166.90246582]
[63.43620300 155.92459106]
[67.32773590 144.05352783]
[78.61356354 137.81904602]
[83.63239288 123.68358612]
[88.65121460 109.54811859]
[77.46987915 119.54700470]
[70.33640289 132.74221802]
[57.67699814 140.78828430]
[42.70149231 141.64512634]
[29.20697212 135.09547424]
[20.61502075 122.80001831]
[19.10415268 107.87630463]
[25.05745506 94.10829163]
[36.96545029 84.98690033]
[51.80882263 82.82489777]
[65.82500458 88.17118835]
[80.82233429 88.45407104]
[67.79656219 81.01570892]
[54.77079010 73.57734680]
[39.70044327 77.51720428]
[26.59642029 69.78808594]
[22.93324661 55.39653778]
[9.90747356 47.95817566]
[-3.11829972 40.51981354]
[-16.14407349 33.08145142]
[-29.16984749 25.64308929]
[-38.16656876 24.10709381]
[-42.32683182 18.00528145]
[-55.24555206 10.38251209]
[-54.04339218 25.33426094]
[-64.88329315 35.70232010]
[-79.76677704 33.83638000]
[-87.71174622 21.11326981]
[-82.85581207 6.92102146]
[-68.78347778 1.73157775]
[-81.12823486 -6.78939342]
[-93.47299194 -15.31036472]
[-105.81774902 -23.83133507]
[-118.16250610 -32.35230637]
[-130.50726318 -40.87327957]
[-146.25987244 -42.34499741]
[-152.33892822 -55.94258499]
[-164.68368530 -64.46355438]
[-177.02844238 -72.98452759]
[-189.37319946 -81.50550079]
[-207.76029968 -82.56421661]
[-214.65270996 -98.70644379]
[-227.11734009 -107.05107880]
[-238.35406494 -96.99190521]
[-251.73976135 -90.04394531]
[-266.43298340 -86.64396667]
[-281.51010132 -87.00567627]
[-296.02340698 -91.10635376]
[-309.06051636 -98.68820953]
[-319.80191040 -109.27465820]
[-327.57241821 -122.20021820]
[-331.88354492 -136.65237427]
[-332.46432495 -151.72265625]
[-329.27819824 -166.46374512]
[-322.52548218 -179.94898987]
[-312.63067627 -191.33068848]
[-300.21572876 -199.89340210]
[-286.06106567 -205.09884644]
[-271.05648804 -206.61982727]
[-256.14517212 -204.36070251]
[-242.26448059 -198.46351624]
[-230.28692627 -189.29895020]
[-220.96546936 -177.44311523]
[-214.88603210 -163.64125061]
[-212.43078613 -148.76097107]
[-213.75407410 -133.73767090]
[-218.77270508 -119.51570892]
[-206.30807495 -111.17108154]
[-194.38972473 -113.21257019]
[-183.93846130 -106.36879730]
[-180.85221863 -93.85025787]
[-168.50746155 -85.32928467]
[-156.16270447 -76.80831146]
[-143.81794739 -68.28734589]
[-128.94831848 -67.42510223]
[-121.98628998 -53.21803665]
[-109.64153290 -44.69706345]
[-97.29677582 -36.17609406]
[-84.95201874 -27.65512276]
[-72.60726166 -19.13415146]
[-60.26250458 -10.61318016]
[-47.62278366 -2.53620982]
[-34.70405960 5.08656025]
[-21.73148537 12.61731625]
[-8.70571136 20.05567741]
[4.32006216 27.49403954]
[17.34583473 34.93239975]
[30.37160873 42.37076187]
[44.62787247 38.21209717]
[57.94382477 45.57009888]
[62.20915222 60.55157852]
[75.23492432 67.98993683]
[88.26069641 75.42829895]
[122.22962952 87.06855774]
[137.21107483 87.81455994]
[152.19250488 88.56055450]
[167.17395020 89.30654907]
[176.93925476 77.39249420]
[191.67523193 73.55786133]
[205.67794800 79.07039642]
[213.65414429 91.62102509]
[228.63558960 92.36702728]
[243.61701965 93.11302185]
[258.59844971 93.85901642]
[273.57989502 94.60501862]
[288.56134033 95.35101318]
[303.54278564 96.09701538]
[315.20394897 85.76963043]
[330.38662720 86.73959351]
[340.16033936 97.92037964]
[355.14178467 98.66638184]
[370.12322998 99.41237640]
[385.10464478 100.15837097]
[400.08609009 100.90437317]
[415.06753540 101.65036774]
[430.04898071 102.39636993]
[445.03042603 103.14236450]
[445.21441650 98.68746185]
[446.58123779 94.03448486]
[449.20385742 89.48722076]
[453.07971191 85.36782074]
[458.12698364 81.99855804]
[464.18493652 79.68290710]
[478.72317505 75.98974609]
[493.26141357 72.29658508]
[507.79965210 68.60342407]
[522.33789062 64.91026306]
[529.87823486 59.76790237]
[537.10906982 61.26950073]
[551.69836426 57.78337097]
[566.28759766 54.29724503]
[580.87689209 50.81111526]
[586.70568848 36.43041992]
[599.89184570 28.25087929]
[615.36499023 29.41769409]
[627.17541504 39.48220062]
[630.78167725 54.57439423]
[624.79724121 68.89101410]
[611.52313232 76.92702484]
[596.06353760 75.59242249]
[584.36303711 65.40039062]
[569.77374268 68.88652039]
[555.18444824 72.37264252]
[540.59521484 75.85877228]
[526.03106689 79.44850922]
[511.49282837 83.14167023]
[496.95458984 86.83483124]
[482.41632080 90.52799225]
[467.87808228 94.22115326]
[465.96423340 109.09855652]
[480.97708130 104.94487762]
[494.18963623 112.48693848]
[498.05700684 126.82496643]
[511.18719482 134.07742310]
[524.31738281 141.32986450]
[537.44757080 148.58232117]
[550.57775879 155.83476257]
[563.70794678 163.08721924]
[572.72564697 164.49517822]
[576.97222900 170.53723145]
[589.99798584 177.97558594]
[606.75073242 180.57952881]
[608.88623047 197.39843750]
[593.31573486 204.10639954]
[582.55963135 191.00135803]
[569.53381348 183.56300354]
[556.45550537 176.21740723]
[543.32531738 168.96496582]
[530.19512939 161.71250916]
[517.06494141 154.46006775]
[503.93475342 147.20761108]
[490.80456543 139.95515442]
[476.60885620 144.31605530]
[463.18966675 137.14808655]
[458.71179199 122.22875214]
[444.28442383 118.12380219]
[429.30297852 117.37780762]
[414.32153320 116.63180542]
[399.34008789 115.88581085]
[384.35867310 115.13980865]
[369.37722778 114.39381409]
[354.39578247 113.64781952]
[339.41433716 112.90181732]
[328.57824707 123.05634308]
[313.37429810 122.51320648]
[302.79678345 111.07845306]
[287.81533813 110.33245087]
[272.83389282 109.58645630]
[257.85244751 108.84046173]
[242.87101746 108.09445953]
[227.88958740 107.34846497]
[212.90814209 106.60246277]
[203.72459412 118.29862976]
[189.24351501 122.39281464]
[174.96138000 117.11323547]
[166.42794800 104.28799438]
[151.44651794 103.54199219]
[136.46507263 102.79599762]
[121.48363495 102.04999542]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[5 19]
[7 16]
[8 15]
[9 14]
[33 114]
[34 113]
[35 112]
[38 109]
[39 108]
[40 107]
[41 106]
[42 105]
[44 104]
[45 103]
[51 102]
[52 101]
[53 100]
[54 99]
[55 98]
[56 97]
[58 95]
[59 94]
[60 93]
[61 92]
[63 89]
[64 88]
[115 220]
[116 219]
[117 218]
[118 217]
[122 213]
[123 212]
[124 211]
[125 210]
[126 209]
[127 208]
[128 207]
[131 204]
[132 203]
[133 202]
[134 201]
[135 200]
[136 199]
[137 198]
[138 197]
[144 170]
[145 169]
[146 168]
[147 167]
[148 166]
[150 165]
[151 164]
[152 163]
[153 162]
[171 196]
[174 193]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
