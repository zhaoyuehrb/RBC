%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGAGAGAGGGAGAGACUCGAGAGCGAGCGAGCGCGGGAGCGAGGGCCGCAGCGGCAGGGCCGGCGGGGAAGUGGGAAGAGGGACCUGGACUUCGGGACCCCAGCUGUCCCCGCCCCCGCCCCCGCCCCCGCCCUCUCCACCAGCUCAGGCUGAACGCGCCCGGAACGUCCCAGGCUGUUUCCUCUGCCACC\
) } def
/len { sequence length } bind def

/coor [
[109.82562256 279.68170166]
[96.69985199 287.40402222]
[81.56718445 289.11349487]
[67.04945374 284.51400757]
[55.66194534 274.40240479]
[49.37760925 260.53060913]
[49.28524780 245.30195618]
[55.40085983 231.35494995]
[66.66487885 221.10595703]
[81.12575531 216.33070374]
[82.58090210 201.40145874]
[76.11476898 187.98361206]
[85.15432739 174.99913025]
[86.60947418 160.06987000]
[88.06462097 145.14062500]
[89.51976776 130.21138000]
[86.69464874 129.07800293]
[83.99008942 127.68113708]
[73.64423370 138.54222107]
[63.29837799 149.40330505]
[52.95252228 160.26440430]
[49.62209320 176.32180786]
[33.96799469 181.20864868]
[22.09382057 169.89776611]
[26.21470451 154.02482605]
[42.09143066 149.91854858]
[52.43729019 139.05744934]
[62.78314590 128.19636536]
[73.12900543 117.33528137]
[69.08985138 91.80699921]
[85.24332428 71.63095093]
[81.63545227 57.07130814]
[78.02757263 42.51166153]
[74.41970062 27.95201874]
[63.78995132 20.63001823]
[61.09031677 8.41838741]
[67.23669434 -2.01064634]
[63.86505890 -16.62680435]
[50.74683762 -25.02620697]
[47.53573227 -39.89709854]
[55.62412262 -52.35155869]
[44.98287201 -64.05943298]
[49.66139603 -78.20018005]
[46.28976059 -92.81633759]
[42.91812515 -107.43249512]
[39.54648972 -122.04865265]
[36.17485046 -136.66481018]
[32.80321503 -151.28097534]
[22.16196442 -162.98884583]
[26.84049034 -177.12959290]
[13.72226715 -185.52899170]
[10.51116085 -200.39988708]
[18.59955025 -212.85433960]
[15.22791481 -227.47050476]
[11.85627937 -242.08665466]
[8.48464298 -256.70281982]
[4.24855566 -261.80889893]
[3.36995244 -267.44177246]
[5.24861479 -271.84671021]
[2.35204601 -286.56439209]
[-0.54452288 -301.28207397]
[-3.44109178 -315.99975586]
[-17.37742615 -330.55191040]
[-10.37217808 -348.56567383]
[-13.74381447 -363.18182373]
[-17.11544991 -377.79797363]
[-20.48708725 -392.41412354]
[-23.85872269 -407.03030396]
[-27.23035812 -421.64645386]
[-30.60199356 -436.26260376]
[-33.97362900 -450.87875366]
[-37.46350098 -465.46713257]
[-41.07137299 -480.02679443]
[-44.79701614 -494.55673218]
[-48.64018250 -509.05606079]
[-52.48334885 -523.55535889]
[-56.32651520 -538.05468750]
[-74.20523071 -547.19256592]
[-79.53980255 -566.23321533]
[-69.33055115 -582.81091309]
[-73.87330627 -597.10644531]
[-78.41605377 -611.40203857]
[-82.95880890 -625.69763184]
[-97.72694397 -630.46014404]
[-106.84804535 -643.01342773]
[-106.81486511 -658.53045654]
[-97.64015961 -671.04467773]
[-82.85179901 -675.74401855]
[-68.13619995 -670.82153320]
[-59.15180969 -658.17004395]
[-59.35331726 -642.65423584]
[-68.66323090 -630.24035645]
[-64.12048340 -615.94476318]
[-59.57773209 -601.64923096]
[-55.03498077 -587.35363770]
[-44.96127319 -585.25738525]
[-36.60585785 -579.11486816]
[-31.52124023 -569.98394775]
[-30.68666840 -559.48504639]
[-34.32021713 -549.51361084]
[-41.82720566 -541.89782715]
[-37.98403549 -527.39855957]
[-34.14086914 -512.89923096]
[-30.29770470 -498.39990234]
[-25.53822899 -492.73175049]
[-26.51173019 -483.63467407]
[-22.90385628 -469.07501221]
[-18.23678970 -463.33053589]
[-19.35747337 -454.25039673]
[-15.98583603 -439.63424683]
[-12.61420059 -425.01809692]
[-9.24256420 -410.40191650]
[-5.87092876 -395.78576660]
[-2.49929261 -381.16961670]
[0.87234342 -366.55346680]
[4.24397945 -351.93728638]
[13.37510109 -347.31219482]
[18.55515862 -338.23019409]
[17.85934830 -327.57769775]
[11.27658081 -318.89630127]
[14.17315006 -304.17864990]
[17.06971931 -289.46096802]
[19.96628761 -274.74328613]
[23.10080147 -260.07446289]
[26.47243690 -245.45829773]
[29.84407234 -230.84213257]
[33.21570969 -216.22598267]
[45.94242859 -208.57312012]
[49.56995773 -193.79829407]
[41.45664978 -180.50122070]
[51.85673523 -169.83879089]
[47.41937256 -154.65260315]
[50.79100800 -140.03645325]
[54.16264725 -125.42028809]
[57.53428268 -110.80413055]
[60.90591812 -96.18797302]
[64.27755737 -81.57181549]
[74.67764282 -70.90938568]
[70.24028015 -55.72319412]
[82.96699524 -48.07033920]
[86.59452820 -33.29550552]
[78.48121643 -19.99843979]
[81.85285187 -5.38228226]
[94.49354553 6.78189230]
[88.97934723 24.34414482]
[92.58721924 38.90378952]
[96.19509125 53.46343231]
[99.80297089 68.02307892]
[110.62370300 69.83877563]
[120.19371796 75.20532227]
[127.38636017 83.49091339]
[131.35482788 93.72010803]
[131.63192749 104.68862152]
[128.18504333 115.10514832]
[139.37545776 125.09387207]
[150.56587219 135.08259583]
[161.75628662 145.07133484]
[172.94670105 155.06005859]
[181.44575500 158.44686890]
[184.23576355 165.30227661]
[195.26295471 175.47090149]
[206.29014587 185.63952637]
[221.68048096 189.30673218]
[225.79170227 203.62271118]
[236.81890869 213.79133606]
[252.59811401 212.90133667]
[264.32919312 223.49176025]
[265.05233765 239.27949524]
[254.33847046 250.89796448]
[238.54396057 251.45413208]
[227.03941345 240.61802673]
[226.65026855 224.81852722]
[215.62307739 214.64990234]
[201.02148438 211.71003723]
[196.12152100 196.66673279]
[185.09432983 186.49810791]
[174.06713867 176.32948303]
[162.95796204 166.25047302]
[151.76754761 156.26174927]
[140.57714844 146.27301025]
[129.38673401 136.28428650]
[118.19631958 126.29555511]
[111.63677979 129.78501892]
[104.44902039 131.66651917]
[102.99387360 146.59577942]
[101.53872681 161.52502441]
[100.08357239 176.45426941]
[106.44563293 190.93995667]
[97.51015472 202.85659790]
[96.05500793 217.78585815]
[109.32157135 225.26368713]
[118.39445496 237.49490356]
[121.70172882 252.36036682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 190]
[11 189]
[13 187]
[14 186]
[15 185]
[16 184]
[18 29]
[19 28]
[20 27]
[21 26]
[31 148]
[32 147]
[33 146]
[34 145]
[37 143]
[38 142]
[41 139]
[43 137]
[44 136]
[45 135]
[46 134]
[47 133]
[48 132]
[50 130]
[53 127]
[54 126]
[55 125]
[56 124]
[59 123]
[60 122]
[61 121]
[62 120]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
[70 110]
[71 109]
[72 107]
[73 106]
[74 104]
[75 103]
[76 102]
[77 101]
[80 95]
[81 94]
[82 93]
[83 92]
[154 182]
[155 181]
[156 180]
[157 179]
[158 178]
[160 177]
[161 176]
[162 175]
[164 173]
[165 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
