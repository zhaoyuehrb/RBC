%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGAGGAGGGGGGAGAAGGAGGAGCUGAAGCGGGAAGAGCGGCAGGCAGCGGCUCGGCGGAGUUGCAGCAGAGGCGGCGGCGACGCUGAGACACCGCAGCUUCCCUGAGCGCCGAGUCCCUCCGGGGACAGCAGCAGGGAGCGCCCGCGCAGCCACCGAGCCUCUGCCCAGCCAAGCCGCCGUCGCCGCGCCGGGGGACCGCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[295.73263550 541.49572754]
[289.42727661 527.88537598]
[276.14492798 526.53167725]
[265.17800903 518.72894287]
[259.45333862 506.42816162]
[260.56323242 492.79736328]
[268.32434082 481.40579224]
[262.22329712 467.70263672]
[247.49073792 458.16809082]
[249.56683350 439.87170410]
[243.26147461 426.26132202]
[236.95611572 412.65093994]
[224.58561707 404.35516357]
[225.80511475 388.58102417]
[219.49975586 374.97064209]
[213.19439697 361.36026001]
[206.88903809 347.74987793]
[189.35462952 342.49252319]
[181.08897400 325.80209351]
[187.75956726 308.07092285]
[181.04986572 294.65527344]
[169.67620850 290.53479004]
[163.97663879 279.41223145]
[167.49223328 267.00189209]
[161.75741577 262.33905029]
[160.98939514 253.23616028]
[154.68403625 239.62577820]
[148.37867737 226.01539612]
[142.07331848 212.40501404]
[130.82803345 207.94613647]
[125.46375275 196.65806580]
[129.34902954 184.35844421]
[123.24797821 170.65525818]
[117.14692688 156.95208740]
[111.04587555 143.24890137]
[104.94483185 129.54571533]
[97.42665100 129.84591675]
[90.07080841 128.26325989]
[83.34136200 124.89759827]
[77.66283417 119.96125793]
[73.39346313 113.76564789]
[58.76954269 117.10346222]
[49.05099487 129.86784363]
[33.00939941 130.08396912]
[22.95049286 117.58604431]
[26.59061050 101.96141815]
[41.13736343 95.19595337]
[55.43172836 102.47953796]
[70.05564880 99.14172363]
[70.79442596 93.33401489]
[72.64868164 87.78091431]
[60.92120743 78.42856598]
[49.19373703 69.07621765]
[37.46626282 59.72386932]
[25.53189659 50.63702011]
[13.39664078 41.82024002]
[1.26138592 33.00345993]
[-10.87386894 24.18668175]
[-23.00912476 15.36990356]
[-35.14437866 6.55312490]
[-47.27963257 -2.26365376]
[-62.69017792 0.00633837]
[-74.87145233 -9.10800076]
[-76.94057465 -23.81358910]
[-89.07582855 -32.63036728]
[-101.21108246 -41.44714737]
[-113.34633636 -50.26392365]
[-125.48159790 -59.08070374]
[-141.19404602 -60.93263245]
[-146.94274902 -74.67314148]
[-159.07800293 -83.48992157]
[-175.43499756 -84.66504669]
[-182.35140991 -99.53431702]
[-172.71223450 -112.80150604]
[-156.43342590 -110.81846619]
[-150.26123047 -95.62517548]
[-138.12596130 -86.80840302]
[-123.28151703 -85.58710480]
[-116.66481781 -71.21595764]
[-104.52956390 -62.39918137]
[-92.39430237 -53.58240128]
[-80.25904846 -44.76562119]
[-68.12379456 -35.94884491]
[-53.49855804 -38.52526855]
[-41.06608582 -29.75667381]
[-38.46285629 -14.39890862]
[-26.32760048 -5.58212996]
[-14.19234467 3.23464894]
[-2.05709028 12.05142784]
[10.07816505 20.86820602]
[22.21341896 29.68498611]
[34.34867477 38.50176239]
[37.87034988 38.31388855]
[41.65795517 39.82291794]
[44.91273117 43.13524246]
[46.81861115 47.99639893]
[58.54608154 57.34874344]
[70.27355194 66.70108795]
[82.00102997 76.05343628]
[94.43070984 70.56559753]
[108.00611115 71.13301086]
[115.50611115 58.14263153]
[123.00611115 45.15224838]
[124.58699799 36.15485764]
[130.71672058 32.02484131]
[138.41020203 19.14810944]
[146.10369873 6.27137804]
[153.79718018 -6.60535383]
[161.49067688 -19.48208618]
[156.71797180 -32.07765579]
[160.02301025 -44.93453598]
[169.98211670 -53.41452026]
[182.81388855 -54.59209824]
[190.69914246 -67.35229492]
[187.59170532 -77.77696228]
[190.67147827 -87.98067474]
[198.69038391 -94.66390228]
[208.84568787 -95.80506897]
[217.10914612 -108.32366943]
[225.37258911 -120.84226990]
[233.63604736 -133.36087036]
[241.89950562 -145.87947083]
[242.33958435 -162.27270508]
[256.88357544 -169.84925842]
[270.56988525 -160.81501770]
[269.31918335 -144.46363831]
[254.41810608 -137.61601257]
[246.15464783 -125.09741211]
[237.89118958 -112.57881927]
[229.62773132 -100.06021881]
[221.36428833 -87.54161835]
[221.62370300 -68.20764923]
[203.45935059 -59.46704102]
[195.57408142 -46.70684052]
[200.13490295 -30.51962471]
[191.40570068 -15.75130272]
[174.36740112 -11.78859615]
[166.67391968 1.08813548]
[158.98042297 13.96486759]
[151.28694153 26.84159851]
[143.59344482 39.71833038]
[135.99649048 52.65224838]
[128.49649048 65.64263153]
[120.99649048 78.63301086]
[129.91558838 101.56781006]
[118.64801025 123.44467163]
[124.74906158 137.14785767]
[130.85011292 150.85102844]
[136.95115662 164.55421448]
[143.05221558 178.25740051]
[158.19664001 188.73185730]
[155.68370056 206.09965515]
[161.98905945 219.71003723]
[168.29441833 233.32041931]
[174.59977722 246.93080139]
[181.00677490 260.49362183]
[196.45777893 270.51034546]
[194.46553040 287.94555664]
[201.17521667 301.36123657]
[212.97076416 302.85241699]
[222.48426819 309.78176880]
[227.42015076 320.33413696]
[226.65682983 331.83865356]
[220.49942017 341.44451904]
[226.80477905 355.05490112]
[233.11013794 368.66528320]
[239.41549683 382.27566528]
[252.23699951 391.54495239]
[250.56649780 406.34558105]
[256.87185669 419.95596313]
[263.17721558 433.56634521]
[274.99597168 438.73284912]
[279.96734619 450.19940186]
[275.92648315 461.60156250]
[282.02752686 475.30474854]
[298.61825562 478.59582520]
[309.86679077 491.00387573]
[311.48706055 507.50613403]
[303.03765869 521.58001709]
[309.34301758 535.19036865]
[316.25265503 548.50415039]
[323.75265503 561.49450684]
[337.35345459 569.57720947]
[337.01638794 584.46795654]
[344.51638794 597.45837402]
[352.01638794 610.44873047]
[365.61715698 618.53137207]
[365.28009033 633.42218018]
[372.78009033 646.41253662]
[388.10882568 650.26037598]
[396.15524292 663.86303711]
[392.14553833 679.15020752]
[378.45861816 687.05230713]
[363.21469116 682.88122559]
[355.45770264 669.11157227]
[359.78973389 653.91253662]
[352.28973389 640.92218018]
[339.22540283 633.76867676]
[339.02600098 617.94873047]
[331.52600098 604.95837402]
[324.02600098 591.96795654]
[310.96166992 584.81451416]
[310.76226807 568.99450684]
[303.26226807 556.00415039]
[298.33905029 570.17321777]
[284.89974976 576.83538818]
[270.64218140 572.17474365]
[263.73284912 558.86077881]
[268.12933350 544.51959229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[7 175]
[8 174]
[10 171]
[11 170]
[12 169]
[14 167]
[15 166]
[16 165]
[17 164]
[20 159]
[21 158]
[24 156]
[26 155]
[27 154]
[28 153]
[29 152]
[32 150]
[33 149]
[34 148]
[35 147]
[36 146]
[41 49]
[42 48]
[51 99]
[52 98]
[53 97]
[54 96]
[55 92]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[61 86]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
[70 77]
[71 76]
[101 144]
[102 143]
[103 142]
[105 141]
[106 140]
[107 139]
[108 138]
[109 137]
[113 134]
[114 133]
[118 131]
[119 130]
[120 129]
[121 128]
[122 127]
[181 204]
[182 203]
[184 201]
[185 200]
[186 199]
[188 197]
[189 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
