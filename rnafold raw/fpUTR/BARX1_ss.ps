%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGCCCCGCCCGCGCCCUGCGCCUCCGCCCGGCCGGCCGGCGGGGGAGGGGGCAUGAGCCGGCGCCCGCGCGCCGCCCCGAGCUGCGGGCCGGCCUAGAGCCCCGCGCGGGCCCCGCGCCGGAGCCAAGCCGUCGCCGCCGCCGCCGCCAAACCGCGGGCGCAGCAGUGGGCGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[55.57011032 687.41357422]
[58.09486008 668.19702148]
[58.35519791 653.19927979]
[58.61553955 638.20153809]
[58.87588120 623.20379639]
[51.12273026 616.49743652]
[48.29548264 606.41522217]
[51.56539536 596.23657227]
[60.07850266 589.41198730]
[60.85920715 574.43231201]
[61.63991547 559.45263672]
[62.42061996 544.47296143]
[63.20132828 529.49328613]
[63.98203278 514.51361084]
[64.76274109 499.53393555]
[54.87388229 491.24880981]
[51.52061844 478.58975220]
[56.14665604 466.13043213]
[67.27009583 458.50689697]
[68.31067657 443.54302979]
[69.35124969 428.57916260]
[70.39182281 413.61529541]
[71.43240356 398.65142822]
[72.47297668 383.68756104]
[73.51354980 368.72369385]
[74.55413055 353.75982666]
[67.71837616 340.52648926]
[76.39437866 327.29629517]
[77.43495941 312.33242798]
[64.53043365 302.20596313]
[60.15136337 286.22564697]
[66.21113586 270.62576294]
[80.51020050 261.61480713]
[81.29090881 246.63511658]
[82.07160950 231.65545654]
[79.27226257 224.79350281]
[82.99809265 216.42324829]
[84.03866577 201.45939636]
[85.07924652 186.49552917]
[82.39941406 179.58602905]
[86.26995850 171.28170776]
[87.57009125 156.33815002]
[88.87021637 141.39460754]
[90.17034912 126.45105743]
[91.47048187 111.50750732]
[85.72996521 98.75846863]
[93.58596802 87.19235992]
[94.88610077 72.24880981]
[88.37405396 57.82994080]
[97.18537903 45.82120132]
[98.48551178 30.87765312]
[91.97346497 16.45878220]
[100.78479004 4.45004129]
[102.08491516 -10.49350739]
[103.38504791 -25.43705750]
[91.89340210 -38.60939789]
[93.43990326 -55.68258667]
[106.58378601 -66.15486145]
[96.48780060 -78.01693726]
[97.75625610 -93.17759705]
[109.12715149 -102.72947693]
[110.16773224 -117.69333649]
[111.20830536 -132.65719604]
[112.24887848 -147.62106323]
[113.28945923 -162.58493042]
[113.67993927 -177.57984924]
[113.41960144 -192.57759094]
[113.15926361 -207.57531738]
[112.89891815 -222.57305908]
[112.63858032 -237.57080078]
[112.37824249 -252.56854248]
[112.11790466 -267.56628418]
[111.85755920 -282.56402588]
[110.29826355 -297.48275757]
[107.45175171 -312.21020508]
[104.60523224 -326.93762207]
[101.75872040 -341.66506958]
[91.54319000 -353.74618530]
[96.72467041 -367.71047974]
[93.87815094 -382.43792725]
[91.03163910 -397.16534424]
[88.18512726 -411.89279175]
[75.75315094 -422.03308105]
[76.07402039 -438.07293701]
[88.90158844 -447.70791626]
[104.39563751 -443.54693604]
[110.67046356 -428.78189087]
[102.91255951 -414.73928833]
[105.75907135 -400.01187134]
[108.60559082 -385.28442383]
[111.45210266 -370.55700684]
[121.46403503 -359.52926636]
[116.48615265 -344.51159668]
[119.33267212 -329.78414917]
[122.17918396 -315.05670166]
[125.02570343 -300.32928467]
[131.65556335 -313.78457642]
[144.06047058 -322.21771240]
[159.01113892 -323.43334961]
[172.61549377 -317.11499023]
[181.33197021 -304.90750122]
[182.89143372 -289.98876953]
[176.88793945 -276.24258423]
[164.88432312 -267.24740601]
[150.00546265 -265.34490967]
[136.12471008 -271.03036499]
[126.85530090 -282.82437134]
[127.11564636 -267.82662964]
[127.37598419 -252.82888794]
[127.63632202 -237.83114624]
[127.89665985 -222.83340454]
[128.15699768 -207.83566284]
[128.41734314 -192.83792114]
[128.67768860 -177.84017944]
[140.90786743 -186.52479553]
[155.37139893 -182.54908752]
[161.44424438 -168.83337402]
[154.66564941 -155.45239258]
[140.01477051 -152.23500061]
[128.25332642 -161.54435730]
[127.21274567 -146.58049011]
[126.17216492 -131.61662292]
[125.13159180 -116.65276337]
[124.09101868 -101.68889618]
[134.03041077 -90.65512085]
[133.18827820 -75.46481323]
[121.54764557 -65.11428833]
[131.29121399 -56.65876770]
[134.42427063 -43.94342422]
[129.58268738 -31.56627274]
[118.32859802 -24.13692474]
[117.02846527 -9.19337559]
[115.72834015 5.75017309]
[122.33337402 19.10018158]
[113.42906189 32.17778397]
[112.12892914 47.12133408]
[118.73397064 60.47134018]
[109.82965088 73.54894257]
[108.52951813 88.49249268]
[114.27003479 101.24153137]
[106.41403198 112.80764008]
[105.11389923 127.75119019]
[103.81376648 142.69473267]
[102.51363373 157.63829041]
[101.21350861 172.58183289]
[100.04310608 187.53610229]
[99.00253296 202.49996948]
[97.96195984 217.46383667]
[97.05128479 232.43615723]
[96.27057648 247.41583252]
[95.48986816 262.39550781]
[106.83082581 270.25640869]
[112.75331116 282.59973145]
[111.80397034 296.14880371]
[104.33811951 307.36526489]
[92.39881897 313.37301636]
[91.35824585 328.33688354]
[98.11956024 342.64056396]
[89.51799011 354.80041504]
[88.47741699 369.76428223]
[87.43683624 384.72814941]
[86.39626312 399.69201660]
[85.35569000 414.65588379]
[84.31510925 429.61972046]
[83.27453613 444.58358765]
[82.23396301 459.54745483]
[93.95249939 472.51837158]
[92.70255280 489.61581421]
[79.74240875 500.31463623]
[78.96170044 515.29431152]
[78.18099976 530.27398682]
[77.40029144 545.25366211]
[76.61958313 560.23333740]
[75.83887482 575.21301270]
[75.05817413 590.19268799]
[85.03113556 607.69097900]
[73.87361908 623.46417236]
[73.61328125 638.46191406]
[73.35294342 653.45965576]
[73.09259796 668.45739746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 180]
[3 179]
[4 178]
[5 177]
[9 175]
[10 174]
[11 173]
[12 172]
[13 171]
[14 170]
[15 169]
[19 166]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[25 160]
[26 159]
[28 157]
[29 156]
[33 151]
[34 150]
[35 149]
[37 148]
[38 147]
[39 146]
[41 145]
[42 144]
[43 143]
[44 142]
[45 141]
[47 139]
[48 138]
[50 136]
[51 135]
[53 133]
[54 132]
[55 131]
[58 127]
[61 124]
[62 123]
[63 122]
[64 121]
[65 120]
[66 114]
[67 113]
[68 112]
[69 111]
[70 110]
[71 109]
[72 108]
[73 107]
[74 96]
[75 95]
[76 94]
[77 93]
[79 91]
[80 90]
[81 89]
[82 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
