%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGGGCGCGGGCGCGCGCACGGACGUCCAGCACGCACGCACGCACGUCCAGCACACACGCACAUCCAGCACGCACGCACGUACGUCCGGCACUUCCGGCCGCGGCGGCCUCAGCGCCGGCCCGAAGGGACCAGGCCGCCGUCCCCAGCGAGAGGCAUGCAGCGCUGAGGAGCGGCGACCCAGCACGGCGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[219.61447144 120.18738556]
[215.94792175 116.43725586]
[201.50134277 112.40037537]
[187.05477905 108.36348724]
[172.60820007 104.32660675]
[158.16162109 100.28971863]
[143.71504211 96.25283813]
[76.47033691 159.21166992]
[64.03178406 167.59512329]
[51.66082001 176.07800293]
[39.35823441 184.65975952]
[27.05565071 193.24150085]
[14.75306702 201.82325745]
[2.45048356 210.40499878]
[-4.44139624 224.64624023]
[-19.30659103 225.58180237]
[-31.60917473 234.16354370]
[-43.91175842 242.74530029]
[-46.80988312 258.05014038]
[-59.40870285 266.57800293]
[-73.98168182 263.72076416]
[-86.28426361 272.30252075]
[-89.18238831 287.60739136]
[-101.78121185 296.13525391]
[-116.35419464 293.27801514]
[-128.65678406 301.85974121]
[-140.95936584 310.44149780]
[-145.17759705 325.92007446]
[-159.96571350 332.14028931]
[-173.97953796 324.33053589]
[-176.46885681 308.48178101]
[-165.52409363 296.75183105]
[-149.54110718 298.13891602]
[-137.23852539 289.55715942]
[-124.93594360 280.97543335]
[-122.58437347 266.31234741]
[-110.23004913 257.43399048]
[-94.86602020 259.99993896]
[-82.56343079 251.41819763]
[-80.21186066 236.75512695]
[-67.85754395 227.87675476]
[-52.49350739 230.44271851]
[-40.19092560 221.86096191]
[-27.88834000 213.27922058]
[-21.87642288 199.65180969]
[-6.13126612 198.10241699]
[6.17131758 189.52067566]
[18.47390175 180.93891907]
[30.77648544 172.35717773]
[43.07906723 163.77542114]
[46.77103806 157.36215210]
[55.64831924 155.15657043]
[68.08686829 146.77311707]
[67.78641510 139.27912903]
[55.10685730 147.29342651]
[41.82655334 140.31965637]
[41.22597122 125.33168030]
[53.90570068 117.31766510]
[67.18550873 124.29117584]
[66.88505554 116.79719543]
[53.81526947 109.43643188]
[39.24341202 115.11049652]
[24.45018196 110.04153442]
[16.42049026 96.62296295]
[18.94571114 81.19062042]
[30.83351326 71.03118134]
[46.47084045 70.94162750]
[58.47422409 80.96424103]
[61.17603302 96.36665344]
[74.24581146 103.72741699]
[83.87739563 92.22816467]
[74.33827972 80.65209961]
[64.79917145 69.07603455]
[49.04582214 67.80812073]
[38.86684036 55.71829605]
[40.30123520 39.97923279]
[52.49800110 29.92864227]
[68.22101593 31.52935791]
[78.14209747 43.83170319]
[76.37523651 59.53691864]
[85.91435242 71.11298370]
[95.45346069 82.68905640]
[109.35782623 77.05979156]
[123.26096344 71.43104553]
[122.06011200 56.47919083]
[120.85925293 41.52733612]
[119.65840149 26.57548141]
[118.33776093 11.63373089]
[116.89741516 -3.29695582]
[115.45706940 -18.22764206]
[114.01672363 -33.15832901]
[101.02621460 -41.86353683]
[96.72017670 -56.89657211]
[103.13179779 -71.15928650]
[117.23370361 -77.91727448]
[132.36740112 -73.97961426]
[141.38722229 -61.20554733]
[140.03428650 -45.62659836]
[128.94741821 -34.59867477]
[130.38775635 -19.66798782]
[131.82810974 -4.73730135]
[133.26844788 10.19338512]
[137.04473877 16.55736732]
[134.61026001 25.37462807]
[135.81111145 40.32648087]
[137.01196289 55.27833557]
[138.21281433 70.23019409]
[147.75192261 81.80625916]
[162.19850159 85.84314728]
[176.64508057 89.88002777]
[191.09165955 93.91691589]
[205.53823853 97.95379639]
[219.98481750 101.99068451]
[234.52426147 105.67910004]
[249.14817810 109.01691437]
[263.77209473 112.35472870]
[278.39602661 115.69254303]
[293.01992798 119.03035736]
[307.64385986 122.36817169]
[316.71951294 121.22652435]
[322.47451782 125.87844849]
[337.04306030 129.45022583]
[354.59262085 123.89299774]
[366.78713989 136.50547791]
[380.06539917 128.36141968]
[394.84860229 131.95477295]
[402.53088379 144.66374207]
[417.15478516 148.00155640]
[431.77871704 151.33937073]
[439.12716675 143.57487488]
[448.96322632 139.59770203]
[459.48171997 140.06530762]
[468.78213501 144.82597351]
[475.21203613 152.95837402]
[477.66049194 162.94911194]
[492.10705566 166.98600769]
[506.55361938 171.02288818]
[521.00018311 175.05976868]
[535.44677734 179.09666443]
[541.95477295 177.82247925]
[547.31915283 179.74578857]
[550.28778076 183.50138855]
[564.59753418 187.99922180]
[578.90728760 192.49707031]
[594.39251709 189.25387573]
[604.21405029 200.45149231]
[618.52380371 204.94934082]
[632.83361816 209.44718933]
[647.14337158 213.94503784]
[661.45312500 218.44288635]
[671.85668945 207.27467346]
[686.07879639 201.73439026]
[701.29559326 202.92207336]
[714.48590088 210.60189819]
[723.03063965 223.24902344]
[725.23327637 238.35237122]
[720.65655518 252.91314697]
[710.20910645 264.04031372]
[695.96533203 269.52453613]
[680.75323486 268.27694702]
[667.59332275 260.54522705]
[659.09844971 247.86454773]
[656.95526123 232.75265503]
[642.64550781 228.25480652]
[628.33575439 223.75695801]
[614.02600098 219.25910950]
[599.71618652 214.76126099]
[585.25451660 218.32617188]
[574.40942383 206.80683899]
[560.09967041 202.30899048]
[545.78991699 197.81114197]
[531.40991211 193.54322815]
[516.96331787 189.50634766]
[502.51675415 185.46946716]
[488.07015991 181.43258667]
[473.62359619 177.39569092]
[457.41308594 188.18113708]
[438.19607544 183.51472473]
[428.44088745 165.96328735]
[413.81698608 162.62547302]
[399.19305420 159.28765869]
[386.75735474 167.40484619]
[371.87905884 164.22814941]
[363.44934082 151.12939453]
[353.03567505 157.29957581]
[340.81872559 154.62950134]
[333.47128296 144.01876831]
[318.90274048 140.44699097]
[304.30603027 136.99208069]
[289.68212891 133.65426636]
[275.05819702 130.31645203]
[260.43429565 126.97864532]
[245.81036377 123.64083099]
[231.18644714 120.30301666]
[228.01434326 121.86921692]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 113]
[3 112]
[4 111]
[5 110]
[6 109]
[7 108]
[8 53]
[9 52]
[10 50]
[11 49]
[12 48]
[13 47]
[14 46]
[16 44]
[17 43]
[18 42]
[21 39]
[22 38]
[25 35]
[26 34]
[27 33]
[60 70]
[61 69]
[71 82]
[72 81]
[73 80]
[84 107]
[85 106]
[86 105]
[87 104]
[88 102]
[89 101]
[90 100]
[91 99]
[114 194]
[115 193]
[116 192]
[117 191]
[118 190]
[119 189]
[121 188]
[122 187]
[124 184]
[127 181]
[128 180]
[129 179]
[135 176]
[136 175]
[137 174]
[138 173]
[139 172]
[142 171]
[143 170]
[144 169]
[146 167]
[147 166]
[148 165]
[149 164]
[150 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
