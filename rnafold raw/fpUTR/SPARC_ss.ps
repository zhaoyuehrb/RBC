%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:53:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAAGGAGGAGGCCGGGGGAAGGAGGAGACAGGAGGAGGAGGGACCACGGGGUGGAGGGGAGAUAGACCCAGCCCAGAGCUCUGAGUGGUUUCCUGUUGCCUGUCUCUAAACCCCUCCACAUUCCCGCGGUCCUUCAGACUGCCCGGAGAGCGCGCUCUGCCUGCCGCCUGCCUGCCUGCCACUGAGGGUUCCCAGCACC\
) } def
/len { sequence length } bind def

/coor [
[181.97543335 568.81927490]
[180.59140015 553.88330078]
[179.20738220 538.94726562]
[177.82334900 524.01129150]
[176.43933105 509.07525635]
[158.23306274 496.85171509]
[154.97259521 474.88757324]
[169.19178772 457.47515869]
[166.43554688 442.73056030]
[163.56585693 428.00762939]
[160.58288574 413.30722046]
[157.59991455 398.60681152]
[154.50382996 383.92980957]
[151.29484558 369.27709961]
[148.08584595 354.62435913]
[144.87684631 339.97164917]
[134.59588623 329.19427490]
[139.20175171 314.05834961]
[135.99275208 299.40563965]
[125.71179962 288.62826538]
[130.31765747 273.49234009]
[127.10865784 258.83959961]
[116.82770538 248.06225586]
[121.43356323 232.92631531]
[118.22456360 218.27359009]
[115.01557159 203.62086487]
[104.73461151 192.84352112]
[109.34046936 177.70758057]
[106.13147736 163.05485535]
[102.92247772 148.40213013]
[99.71347809 133.74940491]
[79.44335175 126.76805878]
[67.46762848 108.98606873]
[68.61838531 87.57828522]
[82.43131256 71.18254089]
[77.66443634 56.96013260]
[71.96697998 49.81302261]
[72.93550110 42.48186111]
[61.37874222 31.67667961]
[64.89363098 17.20274353]
[60.34634399 2.90861416]
[55.47010422 -11.27666950]
[50.26751328 -25.34553719]
[45.06492233 -39.41440582]
[39.86233139 -53.48327255]
[34.65974045 -67.55213928]
[29.45715141 -81.62100983]
[24.25456047 -95.68988037]
[19.05196953 -109.75874329]
[7.00852299 -120.01866913]
[9.85120773 -134.63949585]
[4.64861774 -148.70835876]
[-0.55397266 -162.77722168]
[-5.75656319 -176.84609985]
[-11.28272629 -190.79104614]
[-17.12951469 -204.60461426]
[-22.97630310 -218.41819763]
[-28.82309151 -232.23178101]
[-34.66987991 -246.04536438]
[-40.51666641 -259.85894775]
[-46.36345673 -273.67254639]
[-52.21024323 -287.48611450]
[-58.05702972 -301.29971313]
[-64.43117523 -314.87799072]
[-71.32323456 -328.20089722]
[-78.21529388 -341.52380371]
[-85.10734558 -354.84667969]
[-91.99940491 -368.16958618]
[-98.89145660 -381.49249268]
[-109.43650818 -384.18759155]
[-116.60753632 -392.08093262]
[-118.21349335 -402.40145874]
[-113.96232605 -411.70092773]
[-120.44083405 -425.22973633]
[-126.91934967 -438.75854492]
[-133.39785767 -452.28735352]
[-148.52464294 -455.20053101]
[-158.91412354 -466.33212280]
[-160.73519897 -481.27023315]
[-153.49755859 -494.26077271]
[-159.97605896 -507.78961182]
[-166.45457458 -521.31842041]
[-172.93307495 -534.84722900]
[-179.41159058 -548.37603760]
[-194.39889526 -553.39166260]
[-201.37509155 -567.57287598]
[-196.20133972 -582.50634766]
[-181.94711304 -589.33221436]
[-167.06919861 -584.00085449]
[-160.39440918 -569.67529297]
[-165.88276672 -554.85455322]
[-159.40425110 -541.32574463]
[-152.92575073 -527.79693604]
[-146.44723511 -514.26812744]
[-139.96873474 -500.73928833]
[-125.31059265 -498.23391724]
[-114.81427002 -487.45007324]
[-112.65527344 -472.37719727]
[-119.86903381 -458.76586914]
[-113.39052582 -445.23706055]
[-106.91201782 -431.70825195]
[-100.43350983 -418.17941284]
[-83.72441101 -408.45477295]
[-85.56856537 -388.38455200]
[-78.67650604 -375.06164551]
[-71.78445435 -361.73873901]
[-64.89239502 -348.41586304]
[-58.00033951 -335.09295654]
[-51.10828018 -321.77005005]
[-44.11433029 -335.03973389]
[-29.40940857 -338.00036621]
[-17.82523918 -328.47106934]
[-17.89479256 -313.47125244]
[-29.56683159 -304.04980469]
[-44.24345016 -307.14648438]
[-38.39665985 -293.33291626]
[-32.54987335 -279.51931763]
[-26.70308495 -265.70574951]
[-20.85629654 -251.89215088]
[-15.00950813 -238.07858276]
[-9.16271973 -224.26499939]
[-3.31593204 -210.45141602]
[2.53085613 -196.63783264]
[5.64954424 -194.98155212]
[8.11894417 -191.72955322]
[9.19651127 -187.20442200]
[8.31230545 -182.04869080]
[13.51489544 -167.97981262]
[18.71748543 -153.91094971]
[23.92007637 -139.84207153]
[35.59140015 -130.58845520]
[33.12083817 -114.96133423]
[38.32342911 -100.89247131]
[43.52602005 -86.82360077]
[48.72861099 -72.75473022]
[53.93119812 -58.68586349]
[59.13378906 -44.61699677]
[64.33638000 -30.54812813]
[69.53897095 -16.47925949]
[72.57784271 -14.68072510]
[74.89441681 -11.31815147]
[75.76184845 -6.74807072]
[74.64047241 -1.63867605]
[79.18776703 12.65545368]
[90.41926575 22.43822289]
[87.22962952 37.93457031]
[91.88684845 52.19326401]
[96.65371704 66.41567230]
[105.22194672 66.65579224]
[113.45335388 69.04661560]
[120.81702423 73.43392944]
[126.83800507 79.53475189]
[131.12792969 86.95558167]
[133.41011047 95.21777344]
[133.53733826 103.78842163]
[131.50140381 112.11471558]
[127.43363953 119.65960693]
[121.59640503 125.93646240]
[114.36620331 130.54040527]
[117.57520294 145.19313049]
[120.78420258 159.84585571]
[123.99319458 174.49858093]
[134.50367737 186.32398987]
[129.66828918 200.41188049]
[132.87728882 215.06460571]
[136.08628845 229.71733093]
[146.59677124 241.54273987]
[141.76138306 255.63061523]
[144.97038269 270.28332520]
[155.48086548 282.10876465]
[150.64547729 296.19662476]
[153.85447693 310.84936523]
[164.36495972 322.67477417]
[159.52957153 336.76263428]
[162.73857117 351.41537476]
[165.94757080 366.06808472]
[169.15655518 380.72082520]
[174.05198669 388.43942261]
[172.30032349 395.62384033]
[175.28329468 410.32424927]
[178.26626587 425.02465820]
[183.04223633 432.81774902]
[181.18014526 439.97430420]
[183.93638611 454.71890259]
[191.96908569 456.76171875]
[199.01948547 461.05484009]
[204.47674561 467.20309448]
[207.87490845 474.65170288]
[208.93260193 482.73614502]
[207.57630920 490.74169922]
[203.94502258 497.96630859]
[198.37640381 503.78237915]
[191.37533569 507.69122314]
[192.75936890 522.62725830]
[194.14338684 537.56323242]
[195.52742004 552.49926758]
[196.91143799 567.43530273]
[209.86903381 576.18939209]
[214.11833191 591.23858643]
[207.65296936 605.47698975]
[193.52568054 612.18176270]
[178.40693665 608.18707275]
[169.43536377 595.37908936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[5 193]
[8 184]
[9 183]
[10 181]
[11 180]
[12 179]
[13 177]
[14 176]
[15 175]
[16 174]
[18 172]
[19 171]
[21 169]
[22 168]
[24 166]
[25 165]
[26 164]
[28 162]
[29 161]
[30 160]
[31 159]
[35 148]
[36 147]
[38 146]
[40 144]
[41 143]
[42 139]
[43 138]
[44 137]
[45 136]
[46 135]
[47 134]
[48 133]
[49 132]
[51 130]
[52 129]
[53 128]
[54 127]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[63 115]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[73 102]
[74 101]
[75 100]
[76 99]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
