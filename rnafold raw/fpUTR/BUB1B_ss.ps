%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGCGUGGCCACGUCGACCGCGCGGGACCGUUAAAUUUGAAACUUGGCGGCUAGGGGUGUGGGCUUGAGGUGGCCGGUUUGUUAGGGAGUCGUGUACGUGCCUUGGUCGCUUCUGUAGCUCCGAGGGCAGGUUGCGGAAGAAAGCCCAGGCGGUCUGUGGCCCAGAGGAAAGGCCUGCAGCAGGACGAGGACCUGAGCCAGGAAUGCAGG\
) } def
/len { sequence length } bind def

/coor [
[-130.88926697 348.69583130]
[-143.28674316 339.36404419]
[-147.79922485 324.51757812]
[-142.69155884 309.86523438]
[-129.92778015 301.04110718]
[-129.70654297 286.04272461]
[-129.48530579 271.04437256]
[-129.26408386 256.04598999]
[-141.28123474 247.06890869]
[-155.60078430 251.53552246]
[-169.92031860 256.00213623]
[-184.23986816 260.46871948]
[-198.55941772 264.93533325]
[-212.87896729 269.40194702]
[-223.74914551 280.89758301]
[-238.20303345 277.30111694]
[-252.52258301 281.76773071]
[-266.84213257 286.23434448]
[-281.16168213 290.70095825]
[-295.41378784 295.37826538]
[-309.59536743 300.26525879]
[-323.77694702 305.15228271]
[-337.95852661 310.03927612]
[-352.14010620 314.92630005]
[-366.32168579 319.81329346]
[-369.26629639 337.13980103]
[-380.52410889 350.51956177]
[-396.92404175 356.32391357]
[-413.91708374 353.03863525]
[-426.83804321 341.65750122]
[-440.86932373 346.96066284]
[-454.90060425 352.26379395]
[-468.93185425 357.56695557]
[-482.96313477 362.87011719]
[-496.99441528 368.17327881]
[-511.02566528 373.47644043]
[-514.13861084 388.58645630]
[-524.94281006 399.59884644]
[-539.99072266 402.99957275]
[-554.48052979 397.70349121]
[-563.78863525 385.40054321]
[-564.94488525 370.01657104]
[-557.58026123 356.46054077]
[-544.04486084 349.05813599]
[-528.65771484 350.17141724]
[-516.32885742 359.44515991]
[-502.29754639 354.14199829]
[-488.26629639 348.83883667]
[-474.23501587 343.53570557]
[-460.20376587 338.23254395]
[-446.17248535 332.92938232]
[-432.14120483 327.62622070]
[-431.45434570 315.01257324]
[-426.02844238 303.55316162]
[-416.63739014 294.96514893]
[-404.65222168 290.55017090]
[-391.84082031 290.99707031]
[-380.10723877 296.27481079]
[-371.20867920 305.63174438]
[-357.02709961 300.74472046]
[-342.84552002 295.85772705]
[-328.66394043 290.97070312]
[-314.48236084 286.08370972]
[-300.30078125 281.19668579]
[-297.44064331 277.37368774]
[-292.14920044 275.30590820]
[-285.62826538 276.38140869]
[-271.30874634 271.91479492]
[-256.98919678 267.44818115]
[-242.66963196 262.98156738]
[-232.82368469 251.80541992]
[-217.34556580 255.08239746]
[-203.02603149 250.61579895]
[-188.70648193 246.14918518]
[-174.38693237 241.68257141]
[-160.06738281 237.21597290]
[-145.74783325 232.74935913]
[-112.03205872 224.05584717]
[-99.62957764 215.61911011]
[-87.22710419 207.18235779]
[-86.21212769 203.80715942]
[-83.51278687 200.75549316]
[-79.29877472 198.81327820]
[-74.08415985 198.66101074]
[-61.32064056 190.78112793]
[-48.55711746 182.90126038]
[-35.79359436 175.02137756]
[-23.03007317 167.14149475]
[-22.09701347 152.30009460]
[-12.49000072 140.71694946]
[2.26800251 136.96797180]
[16.56900215 142.69403076]
[29.33252525 134.81414795]
[42.09604645 126.93426514]
[54.85956955 119.05438995]
[61.62462616 105.78475189]
[77.43181610 105.11885071]
[76.60365295 91.28644562]
[84.11419678 78.42674255]
[98.42243195 71.42754364]
[115.24163055 73.64974213]
[123.95067596 61.43693924]
[132.65971375 49.22413635]
[141.36875916 37.01133347]
[150.07780457 24.79852867]
[151.79061890 9.07031059]
[165.47972107 3.20023131]
[174.18876648 -9.01257229]
[182.89779663 -21.22537613]
[179.69326782 -38.42350769]
[189.72161865 -52.34368515]
[206.38031006 -54.65667725]
[214.90827942 -66.99659729]
[223.43626404 -79.33652496]
[231.96423340 -91.67644501]
[240.49220276 -104.01636505]
[249.02017212 -116.35629272]
[257.54815674 -128.69621277]
[266.07611084 -141.03613281]
[274.60409546 -153.37605286]
[283.13208008 -165.71597290]
[291.66003418 -178.05589294]
[300.00509644 -190.52026367]
[308.16540527 -203.10633850]
[311.70889282 -219.68583679]
[328.62139893 -220.87048340]
[334.44158936 -204.94686890]
[320.75146484 -194.94602966]
[312.59115601 -182.35995483]
[312.69338989 -177.58654785]
[309.79907227 -172.69796753]
[303.99996948 -169.52792358]
[295.47198486 -157.18800354]
[286.94403076 -144.84808350]
[278.41604614 -132.50816345]
[269.88806152 -120.16823578]
[261.36010742 -107.82831573]
[252.83212280 -95.48839569]
[244.30415344 -83.14847565]
[235.77618408 -70.80854797]
[227.24821472 -58.46862793]
[218.72023010 -46.12870407]
[222.78628540 -33.90275574]
[219.01232910 -21.38014030]
[208.56150818 -13.19680882]
[195.11061096 -12.51633167]
[186.40156555 -0.30352873]
[177.69252014 11.90927505]
[176.60263062 26.76395226]
[162.29060364 33.50757217]
[153.58155823 45.72037506]
[144.87252808 57.93317795]
[136.16348267 70.14598083]
[127.45443726 82.35878754]
[132.44589233 96.50393677]
[141.55181885 95.80291748]
[147.07334900 100.71386719]
[161.45721436 104.96878815]
[175.84107971 109.22371674]
[190.22494507 113.47864532]
[204.63980103 117.62738037]
[219.08485413 121.66970062]
[233.52992249 125.71202087]
[247.97497559 129.75433350]
[259.43597412 119.42725372]
[274.66452026 116.95840454]
[288.80120850 123.13558197]
[297.33508301 135.98768616]
[297.54302979 151.41365051]
[289.35867310 164.49110413]
[275.39361572 171.04707336]
[260.10406494 168.98959351]
[248.36885071 158.97517395]
[243.93264771 144.19940186]
[229.48759460 140.15707397]
[215.04254150 136.11476135]
[200.59748840 132.07243347]
[193.31011963 133.29685974]
[185.97003174 127.86251068]
[171.58615112 123.60758209]
[157.20228577 119.35265350]
[142.81842041 115.09773254]
[128.40357971 110.94899750]
[106.82564545 125.90704346]
[85.31169128 117.88237762]
[77.63370514 131.71563721]
[62.73944855 131.81791687]
[49.97592545 139.69778442]
[37.21240234 147.57766724]
[24.44888115 155.45755005]
[23.16016388 170.80828857]
[13.19601631 182.32215881]
[-1.46390092 185.72080994]
[-15.15019417 179.90501404]
[-27.91371727 187.78489685]
[-40.67723846 195.66477966]
[-53.44076157 203.54466248]
[-66.20428467 211.42453003]
[-78.79036713 219.58483887]
[-91.19284058 228.02157593]
[-103.59532166 236.45831299]
[-88.78379059 238.82868958]
[-82.13794708 252.27609253]
[-89.25151062 265.48205566]
[-104.13708496 267.33126831]
[-114.26570892 256.26721191]
[-114.48694611 271.26559448]
[-114.70817566 286.26394653]
[-114.92940521 301.26232910]
[-102.43142700 310.45907593]
[-97.75815582 325.25570679]
[-102.70655823 339.96261597]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 209]
[6 208]
[7 207]
[8 206]
[9 77]
[10 76]
[11 75]
[12 74]
[13 73]
[14 72]
[16 70]
[17 69]
[18 68]
[19 67]
[20 64]
[21 63]
[22 62]
[23 61]
[24 60]
[25 59]
[30 52]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[36 46]
[78 201]
[79 200]
[80 199]
[84 198]
[85 197]
[86 196]
[87 195]
[88 194]
[92 190]
[93 189]
[94 188]
[95 187]
[97 185]
[101 154]
[102 153]
[103 152]
[104 151]
[105 150]
[107 148]
[108 147]
[109 146]
[112 142]
[113 141]
[114 140]
[115 139]
[116 138]
[117 137]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[123 129]
[124 128]
[155 183]
[157 182]
[158 181]
[159 180]
[160 179]
[161 177]
[162 176]
[163 175]
[164 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
