%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:10:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUCCGCAAGCAAAUGAAAAACAUCCUGGAAUUGUGAAUUCCCCUGUGGCAAGUGGUUAUCGUUCGUGGUGGCAGUCUGCUGUUACGAGCAUAAUAGGAUGAAUAUGGACUUUGACGUCAGAUGGAGCUGACUUGGAAUCCUGGCUCUGCCAGCUGACUGGCAGAGGGGUUGUGGCUGUUUACAUAAAGGAAUCCUGGUGCUCCACGGAAGAUGCACUAAGAACCUCUGAUCCUGCAAGAGAAGGGUUG\
) } def
/len { sequence length } bind def

/coor [
[259.08731079 243.03535461]
[247.68426514 233.29005432]
[236.28123474 223.54476929]
[218.87023926 221.26217651]
[212.90046692 203.82992554]
[201.37635803 194.22811890]
[189.85223389 184.62631226]
[178.32810974 175.02450562]
[166.80400085 165.42269897]
[155.27987671 155.82089233]
[140.54904175 153.61828613]
[134.89952087 138.84013367]
[126.68191528 144.88438416]
[117.44596863 149.21554565]
[107.54417419 151.66835022]
[97.35443878 152.14913940]
[87.26567841 150.63960266]
[77.66294098 147.19732666]
[68.91272736 141.95370483]
[61.34900284 135.10887146]
[55.26044464 126.92404938]
[50.87943268 117.71163940]
[48.37317276 107.82324219]
[33.37346649 107.91711426]
[18.37376022 108.01098633]
[3.37405348 108.10485840]
[-11.62565231 108.19872284]
[-26.62535858 108.29259491]
[-40.77695084 113.26576996]
[-52.53779602 122.57611847]
[-64.29863739 131.88645935]
[-76.05947876 141.19680786]
[-87.82032013 150.50715637]
[-99.58116150 159.81750488]
[-108.24703217 174.38937378]
[-124.64836884 170.09605408]
[-125.06317902 153.14718628]
[-108.89151001 148.05667114]
[-97.13066864 138.74632263]
[-85.36982727 129.43597412]
[-73.60898590 120.12562561]
[-61.84814453 110.81526947]
[-50.08730316 101.50492096]
[-53.68728638 94.92539978]
[-64.48723602 75.18683624]
[-78.66967773 80.07134247]
[-85.37068176 94.38468933]
[-100.25833130 99.68880463]
[-114.50003052 92.83683777]
[-119.64644623 77.89394379]
[-112.64429474 63.72548294]
[-97.64782715 58.73734283]
[-83.55418396 65.88890076]
[-69.37174225 61.00439453]
[-69.32480621 53.50454330]
[-69.23093414 38.50483704]
[-69.18399811 31.00498199]
[-83.30419159 25.94334984]
[-97.42438507 20.88171577]
[-111.54457855 15.82008266]
[-125.66477203 10.75844955]
[-134.77253723 10.81107235]
[-139.92935181 5.54409313]
[-153.98509216 0.30612847]
[-168.04081726 -4.93183613]
[-182.09655762 -10.16980076]
[-196.15229797 -15.40776539]
[-210.20802307 -20.64572906]
[-224.26376343 -25.88369370]
[-238.31950378 -31.12165833]
[-252.37524414 -36.35962296]
[-266.43096924 -41.59758759]
[-280.48672485 -46.83555222]
[-294.54244995 -52.07351685]
[-308.59817505 -57.31148148]
[-325.55160522 -57.17675400]
[-330.37423706 -73.43032074]
[-316.09091187 -82.56392670]
[-303.36022949 -71.36721802]
[-289.30447388 -66.12925720]
[-275.24874878 -60.89128876]
[-261.19302368 -55.65332413]
[-247.13726807 -50.41535950]
[-233.08154297 -45.17739487]
[-219.02580261 -39.93943024]
[-204.97006226 -34.70146561]
[-190.91432190 -29.46350098]
[-176.85859680 -24.22553635]
[-162.80285645 -18.98757172]
[-148.74711609 -13.74960804]
[-134.69139099 -8.51164341]
[-120.60314178 -3.36174369]
[-106.48294830 1.69988930]
[-92.36275482 6.76152229]
[-78.24256134 11.82315540]
[-64.12236786 16.88478851]
[-26.71923065 93.29289246]
[-11.71952438 93.19902039]
[3.28018188 93.10514832]
[18.27988815 93.01127625]
[33.27959442 92.91740417]
[48.27930069 92.82353210]
[50.96002579 82.06642151]
[55.85128403 72.11769104]
[62.73259735 63.42578506]
[71.29378510 56.38250732]
[81.14894104 51.30533981]
[91.85382843 48.42314148]
[91.66608429 33.42431641]
[91.47834778 18.42549133]
[83.56893158 4.72324038]
[91.14633179 -8.09987450]
[90.95858765 -23.09869957]
[90.77085114 -38.09752655]
[90.58311462 -53.09635162]
[90.39537048 -68.09517670]
[87.16564941 -76.61122131]
[90.30032349 -83.28262329]
[90.30032349 -98.28262329]
[90.30032349 -113.28262329]
[90.30032349 -128.28262329]
[90.30032349 -143.28262329]
[78.94918823 -154.27931213]
[78.78209686 -170.08271790]
[89.89817810 -181.31695557]
[105.70246887 -181.31695557]
[116.81855774 -170.08271790]
[116.65146637 -154.27931213]
[105.30032349 -143.28262329]
[105.30032349 -128.28262329]
[105.30032349 -113.28262329]
[105.30032349 -98.28262329]
[105.30032349 -83.28262329]
[105.39419556 -68.28291321]
[105.58193970 -53.28408813]
[105.76967621 -38.28526306]
[105.95741272 -23.28643990]
[106.14515686 -8.28761387]
[114.04114532 4.34182072]
[106.47717285 18.23775291]
[106.66490936 33.23657608]
[106.85265350 48.23540115]
[113.25624847 49.49451065]
[119.45275879 51.54256821]
[125.34540558 54.34758377]
[130.84211731 57.86574173]
[141.34869385 47.16004181]
[151.85525513 36.45434189]
[162.36183167 25.74864197]
[172.86840820 15.04294300]
[183.37496948 4.33724308]
[193.88154602 -6.36845636]
[204.38810730 -17.07415581]
[214.89468384 -27.77985573]
[218.46403503 -43.78584671]
[234.18922424 -48.43885803]
[245.89350891 -36.95227051]
[241.53654480 -21.14250374]
[225.60037231 -17.27328682]
[215.09381104 -6.56758690]
[204.58723450 4.13811302]
[194.08067322 14.84381199]
[183.57409668 25.54951096]
[173.06753540 36.25521088]
[162.56095886 46.96091080]
[152.05439758 57.66661072]
[141.54782104 68.37230682]
[152.15078735 97.38687897]
[144.50132751 127.31601715]
[160.05644226 130.20541382]
[164.88168335 144.29676819]
[176.40580750 153.89857483]
[187.92991638 163.50038147]
[199.45404053 173.10218811]
[210.97816467 182.70399475]
[222.50227356 192.30580139]
[235.37751770 191.91339111]
[244.77513123 200.12641907]
[246.02651978 212.14172363]
[257.42956543 221.88702393]
[268.83261108 231.63230896]
[278.24902344 226.74473572]
[288.67678833 224.97264099]
[299.11578369 226.46615601]
[308.57073975 231.06315613]
[316.14636230 238.30654907]
[321.13186646 247.48976135]
[323.06790161 257.72549438]
[321.78851318 268.03161621]
[334.99237061 275.14907837]
[348.19619751 282.26657104]
[360.73605347 279.32080078]
[371.57965088 285.50024414]
[375.19616699 297.02651978]
[388.30990601 304.30868530]
[404.13098145 304.24404907]
[411.50149536 317.18719482]
[424.61520386 324.46936035]
[437.72894287 331.75152588]
[450.84268188 339.03372192]
[463.95639038 346.31588745]
[477.07012939 353.59808350]
[492.09231567 349.47842407]
[505.28778076 357.05038452]
[509.12265015 371.39712524]
[524.24725342 366.81207275]
[538.14447021 374.33819580]
[542.56933594 389.51040649]
[534.89672852 403.32730103]
[519.67858887 407.59152222]
[505.94357300 399.77325439]
[501.84048462 384.51086426]
[487.63491821 388.83959961]
[474.23199463 381.64123535]
[469.78796387 366.71179199]
[456.67422485 359.42962646]
[443.56048584 352.14743042]
[430.44677734 344.86526489]
[417.33303833 337.58309937]
[404.21929932 330.30090332]
[389.33621216 330.88641357]
[381.02770996 317.42242432]
[367.91400146 310.14022827]
[350.39691162 311.36672974]
[341.07873535 295.47039795]
[327.87487793 288.35293579]
[314.67105103 281.23547363]
[312.02957153 283.92611694]
[309.10278320 286.30328369]
[305.92764282 288.33688354]
[310.18640137 302.71960449]
[314.44512939 317.10235596]
[318.70385742 331.48510742]
[322.96258545 345.86782837]
[327.22131348 360.25057983]
[341.89221191 365.30468750]
[350.76290894 378.03616333]
[350.42242432 393.54949951]
[341.00167847 405.87948608]
[326.12313843 410.28503418]
[311.50790405 405.07208252]
[302.77584839 392.24511719]
[303.28460693 376.73638916]
[312.83856201 364.50930786]
[308.57983398 350.12655640]
[304.32110596 335.74383545]
[300.06237793 321.36108398]
[295.80364990 306.97836304]
[291.54492188 292.59561157]
[269.14212036 286.15530396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[5 176]
[6 175]
[7 174]
[8 173]
[9 172]
[10 171]
[12 169]
[23 102]
[24 101]
[25 100]
[26 99]
[27 98]
[28 97]
[29 43]
[30 42]
[31 41]
[32 40]
[33 39]
[34 38]
[45 54]
[46 53]
[57 96]
[58 95]
[59 94]
[60 93]
[61 92]
[63 91]
[64 90]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[73 81]
[74 80]
[75 79]
[108 142]
[109 141]
[110 140]
[112 138]
[113 137]
[114 136]
[115 135]
[116 134]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[146 167]
[147 166]
[148 165]
[149 164]
[150 163]
[151 162]
[152 161]
[153 160]
[154 159]
[189 227]
[190 226]
[191 225]
[194 223]
[195 222]
[197 220]
[198 219]
[199 218]
[200 217]
[201 216]
[202 215]
[205 212]
[230 249]
[231 248]
[232 247]
[233 246]
[234 245]
[235 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
