%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUUGGCCGGCUCGGCCCGCCCCCGGCCCUCCCUGCACGGCCUCCCGUGCGCCCCUGUCAGACUGUGGCGGCCGGUCGCGCGGUGCGCUCUCCCUCCCUGCCCGCAGCCUGGAGAGGCGCUUCGUGCUGCACACCCCCGCGUUCCUGCCGGCACCGCGCCUGCCCUCUGCCGCGCUCCGCCCUGCCGCCGACCGCACGCCCGCCGCGGGAC\
) } def
/len { sequence length } bind def

/coor [
[89.36339569 173.08061218]
[87.21003723 179.41267395]
[83.23727417 184.72891235]
[77.85897064 188.52864075]
[71.61930847 190.46635437]
[65.13775635 190.38294983]
[57.73375702 203.42828369]
[50.32975769 216.47363281]
[42.92575836 229.51896667]
[35.52176285 242.56430054]
[28.11776543 255.60963440]
[31.61103249 265.90838623]
[28.91603279 276.21743774]
[21.15584183 283.19512939]
[11.05352020 284.71762085]
[3.26798129 297.53890991]
[3.44634819 313.93707275]
[-10.80161572 322.05667114]
[-24.81882668 313.54492188]
[-24.18557930 297.15798950]
[-9.55330467 289.75335693]
[-1.76776612 276.93206787]
[-2.75364470 257.62017822]
[15.07242775 248.20564270]
[22.47642517 235.16030884]
[29.88042259 222.11497498]
[37.28442001 209.06962585]
[44.68841934 196.02429199]
[52.09241486 182.97895813]
[49.24438477 160.03291321]
[69.85764313 148.03904724]
[76.07971954 134.39039612]
[82.30179596 120.74174500]
[88.52387238 107.09308624]
[78.68576813 95.77002716]
[64.30190277 100.02494812]
[49.91803741 104.27987671]
[35.53417206 108.53480530]
[21.15030479 112.78973389]
[6.76643848 117.04465485]
[-7.61742783 121.29958344]
[-18.51174164 133.55706787]
[-34.51745605 129.98649597]
[-39.16926956 114.26094818]
[-27.68178940 102.55753326]
[-11.87235451 106.91571808]
[2.51151156 102.66078949]
[16.89537811 98.40586853]
[31.27924347 94.15093994]
[45.66310883 89.89601135]
[60.04697418 85.64108276]
[74.43083954 81.38616180]
[59.76789093 78.22421265]
[49.91662598 66.91260529]
[45.34925079 52.62487793]
[46.81232071 37.69639969]
[54.06668854 24.56726837]
[65.92661285 15.38346577]
[80.45355988 11.64611053]
[95.27306366 13.96608067]
[107.96284485 21.96417236]
[116.44872284 34.33307648]
[119.34366608 49.05106735]
[116.17449188 63.71245575]
[107.45878601 75.92118835]
[101.82601166 89.82341766]
[113.43431854 80.32355499]
[125.04261780 70.82369995]
[136.65092468 61.32384491]
[148.25923157 51.82398605]
[159.86753845 42.32413101]
[171.47583008 32.82427216]
[183.01376343 23.23906708]
[194.26397705 13.31772995]
[205.29193115 3.14994311]
[216.31990051 -7.01784420]
[227.34786987 -17.18563271]
[238.37583923 -27.35341835]
[249.40380859 -37.52120590]
[253.59088135 -45.63771439]
[260.67022705 -47.75615311]
[271.84695435 -57.76018524]
[283.02368164 -67.76422119]
[294.20040894 -77.76824951]
[305.37713623 -87.77228546]
[316.32983398 -98.02112579]
[327.05310059 -108.50975037]
[337.77639771 -118.99837494]
[322.95895386 -116.66516876]
[308.52947998 -120.76276398]
[297.14978027 -130.53527832]
[290.91903687 -144.17997742]
[290.98663330 -159.17982483]
[297.34014893 -172.76780701]
[308.80749512 -182.43733215]
[323.27331543 -186.40467834]
[338.06912231 -183.93798828]
[350.46548462 -175.49227905]
[358.17568970 -162.62554932]
[359.77743530 -147.71131897]
[354.97677612 -133.50341797]
[367.12503052 -142.30229187]
[379.20806885 -151.19050598]
[385.63342285 -165.64822388]
[400.46035767 -167.06645203]
[412.47750854 -176.04353333]
[424.49465942 -185.02061462]
[436.51181030 -193.99771118]
[437.44552612 -204.83261108]
[444.05139160 -213.19335938]
[453.95959473 -216.46997070]
[463.82363892 -213.80999756]
[476.10034180 -222.42872620]
[478.95239258 -237.74224854]
[491.52548218 -246.30798340]
[506.10699463 -243.49462891]
[518.38366699 -252.11337280]
[530.66040039 -260.73211670]
[542.93707275 -269.35086060]
[555.21380615 -277.96960449]
[567.49047852 -286.58834839]
[568.74334717 -297.39099121]
[575.59295654 -305.55325317]
[585.59350586 -308.53622437]
[595.37475586 -305.58645630]
[607.90032959 -313.83935547]
[620.42590332 -322.09225464]
[632.95147705 -330.34515381]
[645.47698975 -338.59805298]
[658.00256348 -346.85098267]
[670.46691895 -355.19601440]
[682.86938477 -363.63275146]
[690.80853271 -382.16308594]
[710.13677979 -382.74533081]
[722.28503418 -391.54418945]
[724.53259277 -407.18786621]
[737.23345947 -416.59332275]
[752.85247803 -414.18051147]
[762.12316895 -401.38088989]
[759.54534912 -385.78823853]
[746.64843750 -376.65341187]
[731.08392334 -379.39596558]
[718.93566895 -370.59707642]
[718.23681641 -360.40460205]
[711.91082764 -352.10452271]
[701.85406494 -348.58303833]
[691.30615234 -351.23028564]
[678.90368652 -342.79354858]
[675.14178467 -336.43328857]
[666.25549316 -334.32540894]
[653.72991943 -326.07250977]
[641.20434570 -317.81961060]
[628.67877197 -309.56671143]
[616.15325928 -301.31381226]
[603.62768555 -293.06091309]
[596.24963379 -275.18673706]
[576.10919189 -274.31164551]
[563.83251953 -265.69290161]
[551.55584717 -257.07415771]
[539.27911377 -248.45541382]
[527.00244141 -239.83666992]
[514.72570801 -231.21792603]
[512.41833496 -216.54785156]
[500.09075928 -207.63232422]
[484.71908569 -210.15203857]
[472.44238281 -201.53329468]
[465.59475708 -183.44929504]
[445.48889160 -181.98056030]
[433.47174072 -173.00346375]
[421.45458984 -164.02638245]
[409.43743896 -155.04930115]
[403.87161255 -141.23368835]
[388.18515015 -139.17335510]
[384.70825195 -132.65292358]
[375.92391968 -130.15405273]
[363.77566528 -121.35517883]
[362.21420288 -114.81093597]
[356.63464355 -109.64708710]
[348.26501465 -108.27509308]
[337.54174805 -97.78646851]
[326.81845093 -87.29784393]
[326.41360474 -83.79665375]
[324.29373169 -80.31739807]
[320.48751831 -77.66356659]
[315.38116455 -76.59555054]
[304.20443726 -66.59152222]
[293.02770996 -56.58748627]
[281.85098267 -46.58345413]
[270.67425537 -36.57942200]
[259.57159424 -26.49323845]
[248.54364014 -16.32545090]
[237.51567078 -6.15766287]
[226.48770142 4.01012468]
[215.45973206 14.17791176]
[204.43176270 24.34569931]
[203.92381287 27.83341980]
[201.70225525 31.24864578]
[197.81941223 33.78905869]
[192.68379211 34.70599747]
[189.59742737 41.42009354]
[180.97569275 44.43257523]
[169.36738586 53.93243408]
[157.75907898 63.43228912]
[146.15078735 72.93214417]
[134.54248047 82.43200684]
[122.93417358 91.93186188]
[111.32587433 101.43171692]
[102.17252350 113.31516266]
[95.95044708 126.96382141]
[89.72837067 140.61247253]
[83.50629425 154.26112366]
[87.44904327 159.85382080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[15 22]
[16 21]
[31 211]
[32 210]
[33 209]
[34 208]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[66 207]
[67 206]
[68 205]
[69 204]
[70 203]
[71 202]
[72 201]
[73 199]
[74 195]
[75 194]
[76 193]
[77 192]
[78 191]
[79 190]
[81 189]
[82 188]
[83 187]
[84 186]
[85 185]
[86 181]
[87 180]
[88 179]
[101 176]
[102 175]
[103 173]
[105 171]
[106 170]
[107 169]
[108 168]
[112 166]
[113 165]
[116 162]
[117 161]
[118 160]
[119 159]
[120 158]
[121 157]
[125 155]
[126 154]
[127 153]
[128 152]
[129 151]
[130 150]
[131 148]
[132 147]
[134 143]
[135 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
