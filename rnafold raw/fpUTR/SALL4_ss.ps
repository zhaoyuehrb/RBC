%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAUUACUGGGACAUGCGCGUUCCGGCCGAAGGGGGGUAAAUUUCCCAACUCCAGGAAUUUGUGGCGGAGAGGGCAAAUAACUGCGGCUCUCCCGGCGCCCCGAUGCUCGCACC\
) } def
/len { sequence length } bind def

/coor [
[65.95093536 279.83193970]
[55.20122528 290.29345703]
[41.05461884 295.28079224]
[26.12074089 293.87393188]
[13.15444279 286.33236694]
[4.54761553 274.04733276]
[1.88795984 259.28500366]
[5.66471481 244.77133179]
[-6.51811838 253.52224731]
[-18.70095062 262.27316284]
[-30.88378525 271.02407837]
[-43.06661606 279.77499390]
[-55.24945068 288.52590942]
[-67.43228149 297.27682495]
[-69.74147797 312.91152954]
[-82.47934723 322.26684570]
[-98.08873749 319.79248047]
[-107.30887604 306.95642090]
[-104.66961670 291.37405396]
[-91.73678589 282.29016113]
[-76.18320465 285.09399414]
[-64.00036621 276.34307861]
[-51.81753540 267.59216309]
[-39.63470459 258.84124756]
[-27.45186996 250.09033203]
[-15.26903725 241.33941650]
[-3.08620381 232.58848572]
[0.37902394 224.10603333]
[9.84719753 220.00070190]
[18.92481041 208.05931091]
[28.00242424 196.11790466]
[22.10424805 179.58485413]
[27.26006699 162.64283752]
[41.61811066 152.01303101]
[59.63828278 152.02743530]
[68.05609131 139.61210632]
[76.47389221 127.19676971]
[84.89170074 114.78143311]
[93.30950928 102.36609650]
[87.43712616 101.91388702]
[81.69383240 99.31211090]
[76.67979431 94.63065338]
[72.96648407 88.08798218]
[71.06237793 80.04156494]
[65.88968658 65.96166992]
[60.71698761 51.88178635]
[55.54429626 37.80189896]
[40.57935333 33.69943619]
[30.91013908 21.56329727]
[30.25465775 6.06007195]
[38.86495972 -6.84893084]
[53.43020248 -12.19993687]
[68.34976196 -7.93537521]
[77.88674927 4.30494356]
[78.37401581 19.81436539]
[69.62418365 32.62920380]
[74.79687500 46.70909119]
[79.96957397 60.78897858]
[85.14226532 74.86886597]
[91.94908142 78.01803589]
[104.21039581 69.37742615]
[105.56271362 84.31636810]
[112.36952972 87.46553802]
[126.44941711 82.29284668]
[136.73489380 70.27121735]
[151.34963989 73.14495087]
[158.43920898 67.17079163]
[165.88145447 68.02848053]
[180.09625244 63.23895645]
[194.31105042 58.44943237]
[208.52584839 53.65990829]
[222.74064636 48.87038803]
[236.95544434 44.08086395]
[248.72061157 29.99594116]
[265.75582886 33.96687317]
[279.83572388 28.79417992]
[293.91558838 23.62148476]
[300.32333374 9.17446613]
[315.09973145 3.56787753]
[329.47821045 10.12800789]
[334.92825317 24.96284866]
[328.21646118 39.27115250]
[313.32482910 44.56405640]
[299.08828735 37.70137405]
[285.00839233 42.87406540]
[270.92852783 48.04676056]
[265.50839233 58.95416641]
[253.71278381 63.33398056]
[241.74496460 58.29566193]
[227.53016663 63.08518600]
[213.31536865 67.87471008]
[199.10057068 72.66423035]
[184.88577271 77.45375061]
[170.67097473 82.24327850]
[156.52233887 87.22483826]
[147.24394226 98.87648010]
[131.62211609 96.37273407]
[117.54222107 101.54542542]
[105.72483826 110.78390503]
[97.30703735 123.19924164]
[88.88922882 135.61457825]
[80.47142029 148.02990723]
[72.05361938 160.44525146]
[77.86905670 171.68197632]
[78.29837036 184.25436401]
[73.32083893 195.72825623]
[63.95655441 203.90890503]
[52.05800629 207.26078796]
[39.94382095 205.19552612]
[30.86620712 217.13691711]
[21.78859329 229.07832336]
[36.40226746 225.69593811]
[51.08689117 228.75566101]
[63.13358688 237.69305420]
[70.32010651 250.85945129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[29 111]
[30 110]
[31 109]
[35 103]
[36 102]
[37 101]
[38 100]
[39 99]
[44 59]
[45 58]
[46 57]
[47 56]
[63 98]
[64 97]
[66 95]
[68 94]
[69 93]
[70 92]
[71 91]
[72 90]
[73 89]
[75 86]
[76 85]
[77 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
