%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:05:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUGAAAGAAAGCUGGGAAGAGCUCCGCGGCCAAGUUAGCAGGACACUCUAACAAGUGACUGCGCGGCCCGCGCCCGGGGCGGUGACUGCGGCAAGCCCCCUGGGUCCCCGCGCGGCGCAUCCCAGCCUGGGCGGGACGCUCGGCCGCGGCGAGGCGGGCAAGCCUGGCAGGGCAGAGGGAGCCCCGGCUCCGAGGUUGCUCUUCGCACCCGAGGAUCAGUCUUGGCCCCAAAGCGCGACGCACAAAUCCACA\
UAACCUGAGGACC\
) } def
/len { sequence length } bind def

/coor [
[270.14804077 397.75167847]
[280.43200684 386.61544800]
[293.90603638 379.67086792]
[291.98431396 364.79449463]
[290.06262207 349.91809082]
[288.14089966 335.04168701]
[280.96704102 348.21499634]
[266.81152344 353.17703247]
[252.98292542 347.36587524]
[246.62094116 333.78186035]
[251.01028442 319.43844604]
[263.88473511 311.74118042]
[278.59893799 314.66522217]
[268.40246582 303.66378784]
[258.20599365 292.66232300]
[248.00950623 281.66088867]
[237.81303406 270.65942383]
[227.61656189 259.65798950]
[217.42008972 248.65652466]
[214.66198730 248.39920044]
[211.83749390 247.05308533]
[209.35488892 244.58683777]
[207.62657166 241.11494446]
[207.01918030 236.89506531]
[197.34757996 225.42945862]
[187.67597961 213.96385193]
[178.00437927 202.49824524]
[168.33277893 191.03263855]
[151.98974609 192.73818970]
[137.71389771 184.27055359]
[131.24588013 168.80389404]
[135.32388306 152.37127686]
[125.51903534 141.01940918]
[115.71419525 129.66752625]
[107.62809753 133.46499634]
[98.63668823 135.04794312]
[89.34880829 134.20556641]
[80.42051697 130.89486694]
[72.50879669 125.25055695]
[66.22340393 117.58222961]
[62.08041763 108.35842133]
[47.90366745 113.25942230]
[33.72692108 118.16042328]
[19.55017471 123.06142426]
[13.23410034 134.28099060]
[1.35258329 138.08259583]
[-9.57797623 132.95249939]
[-23.81099319 137.68760681]
[-38.04401016 142.42271423]
[-52.27702713 147.15782166]
[-59.12817764 161.39991760]
[-74.07077026 166.54718018]
[-88.23963928 159.54583740]
[-93.22863770 144.54965210]
[-86.07788086 130.45561218]
[-71.02979279 125.62543488]
[-57.01213074 132.92480469]
[-42.77911377 128.18969727]
[-28.54609871 123.45458984]
[-14.31308079 118.71949005]
[-3.36407614 104.98601532]
[14.64917088 108.88468170]
[28.82591820 103.98367310]
[43.00266647 99.08267212]
[57.17941284 94.18167114]
[61.74797440 79.89432526]
[53.04496002 67.67722321]
[44.34194565 55.46012497]
[35.63892746 43.24302673]
[26.93591309 31.02592659]
[18.23289680 18.80882835]
[1.29957974 11.53288078]
[0.35008305 -6.00529003]
[-8.49501705 -18.11991882]
[-17.34011650 -30.23454666]
[-28.28183746 -40.49508667]
[-40.93924332 -48.54431915]
[-53.59664536 -56.59355164]
[-66.25405121 -64.64278412]
[-78.91145325 -72.69201660]
[-91.56885529 -80.74124146]
[-104.22626495 -88.79047394]
[-113.11273193 -90.74353790]
[-116.98371887 -97.00834656]
[-129.54624939 -105.20484924]
[-142.10879517 -113.40135193]
[-159.17738342 -109.49391937]
[-173.49909973 -118.96813202]
[-176.46075439 -135.53912354]
[-192.85910034 -135.70018005]
[-200.68205261 -150.11314392]
[-191.88201904 -163.95118713]
[-175.51171875 -162.97891235]
[-168.41151428 -148.19653320]
[-156.37008667 -152.72517395]
[-143.72738647 -149.45317078]
[-135.14279175 -139.35548401]
[-133.91229248 -125.96389008]
[-121.34975433 -117.76738739]
[-108.78721619 -109.57088470]
[-96.17703247 -101.44787598]
[-83.51963043 -93.39865112]
[-70.86222076 -85.34941864]
[-58.20481873 -77.30018616]
[-45.54741669 -69.25095367]
[-32.89001083 -61.20172501]
[-20.23260689 -53.15249252]
[-14.14957142 -57.53959656]
[-1.98350024 -66.31380463]
[4.09953547 -70.70090485]
[0.45748782 -85.25203705]
[-3.18455958 -99.80317688]
[-6.82660723 -114.35430908]
[-10.46865463 -128.90544128]
[-21.32514572 -140.41401672]
[-16.90960121 -154.63906860]
[-20.55164909 -169.19020081]
[-24.19369698 -183.74133301]
[-29.29605293 -191.27458191]
[-27.79225349 -198.48367310]
[-31.26411819 -213.07633972]
[-44.85228348 -221.14710999]
[-48.67265701 -236.48269653]
[-40.45867538 -249.98478699]
[-25.08355331 -253.64280701]
[-11.66907406 -245.28652954]
[-8.17381096 -229.87359619]
[-16.67144203 -216.54820251]
[-13.19957924 -201.95553589]
[-9.64256287 -187.38337708]
[-6.00051594 -172.83224487]
[-2.35846829 -158.28111267]
[8.23751926 -147.81333923]
[4.08247900 -132.54748535]
[7.72452641 -117.99635315]
[11.36657429 -103.44522095]
[15.00862122 -88.89408875]
[18.65066910 -74.34295654]
[12.06368446 -48.97690582]
[-5.22548819 -39.07964706]
[3.61961126 -26.96501732]
[12.46471119 -14.85038948]
[24.34384346 -12.68679047]
[31.81532669 -2.69681597]
[30.44999695 10.10581207]
[39.15301132 22.32291222]
[47.85602951 34.54001236]
[56.55904388 46.75711060]
[65.26206207 58.97420883]
[73.96507263 71.19130707]
[94.06262207 64.28914642]
[113.23904419 69.14832306]
[122.08414459 57.03369904]
[123.97277069 41.32562256]
[137.72666931 35.60902405]
[146.57177734 23.49439430]
[155.41687012 11.37976742]
[164.26197815 -0.73486078]
[161.57876587 -16.30971146]
[170.76266479 -29.17173386]
[186.36502075 -31.69011688]
[199.12922668 -22.37075043]
[201.48251343 -6.74264669]
[192.02871704 5.92231512]
[176.37660217 8.11023903]
[167.53149414 20.22486687]
[158.68640137 32.33949661]
[149.84130859 44.45412445]
[148.58534241 59.29568100]
[134.19877625 65.87879944]
[125.35367584 77.99342346]
[132.39567566 91.18989563]
[133.00692749 106.13523102]
[127.06606293 119.86268616]
[136.87091064 131.21455383]
[146.67575073 142.56643677]
[160.26640320 140.38967896]
[173.05955505 145.16607666]
[181.75938416 155.55117798]
[184.18098450 168.77067566]
[179.79838562 181.36103821]
[189.46998596 192.82664490]
[199.14158630 204.29225159]
[208.81318665 215.75785828]
[218.48478699 227.22346497]
[228.42153931 238.46005249]
[238.61801147 249.46150208]
[248.81448364 260.46295166]
[259.01095581 271.46441650]
[269.20742798 282.46585083]
[279.40390015 293.46731567]
[289.60037231 304.46875000]
[361.00021362 271.67495728]
[375.68801880 274.71932983]
[390.37582397 277.76373291]
[405.06362915 280.80810547]
[419.75146484 283.85247803]
[434.43927002 286.89688110]
[449.12707520 289.94125366]
[463.81488037 292.98562622]
[478.50268555 296.02999878]
[493.58599854 291.25460815]
[504.47802734 301.41400146]
[519.16583252 304.45837402]
[533.85363770 307.50274658]
[548.54144287 310.54714966]
[563.22924805 313.59152222]
[577.91705322 316.63589478]
[593.30944824 310.97848511]
[605.73016357 321.68634033]
[602.40179443 337.74420166]
[586.74835205 342.63305664]
[574.87268066 331.32369995]
[560.18487549 328.27932739]
[545.49707031 325.23495483]
[530.80926514 322.19058228]
[516.12145996 319.14617920]
[501.43365479 316.10180664]
[487.40090942 321.09497070]
[475.45831299 310.71783447]
[460.77050781 307.67343140]
[446.08270264 304.62905884]
[431.39486694 301.58468628]
[416.70706177 298.54028320]
[402.01925659 295.49591064]
[387.33145142 292.45153809]
[372.64364624 289.40713501]
[357.95584106 286.36276245]
[354.04269409 292.76098633]
[366.83917236 300.58728027]
[381.42773438 304.07635498]
[382.61734009 319.02911377]
[368.76397705 324.78097534]
[359.01287842 313.38372803]
[346.21643066 305.55746460]
[342.30328369 311.95568848]
[351.70446777 323.64404297]
[361.10565186 335.33239746]
[375.74420166 343.88513184]
[371.57809448 360.31924438]
[354.63293457 360.86535645]
[349.41729736 344.73358154]
[340.01611328 333.04522705]
[330.61492920 321.35687256]
[323.71551514 324.29763794]
[329.59707642 338.09646606]
[335.47863770 351.89526367]
[333.67312622 366.78622437]
[321.67984009 357.77682495]
[315.79827881 343.97802734]
[309.91671753 330.17922974]
[303.01730347 333.11999512]
[304.93899536 347.99639893]
[306.86071777 362.87277222]
[308.78240967 377.74917603]
[323.57885742 381.04180908]
[336.35513306 389.19915771]
[345.56845093 401.23620605]
[350.10629272 415.69940186]
[349.42065430 430.84225464]
[343.59432983 444.83615112]
[333.33090210 455.99133301]
[319.86972046 462.96069336]
[304.83627319 464.90270996]
[290.04592896 461.58279419]
[277.28469849 453.40191650]
[268.09356689 441.34790039]
[263.58239746 426.87637329]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 255]
[4 254]
[5 253]
[6 252]
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[18 187]
[19 186]
[24 185]
[25 184]
[26 183]
[27 182]
[28 181]
[32 176]
[33 175]
[34 174]
[41 65]
[42 64]
[43 63]
[44 62]
[47 60]
[48 59]
[49 58]
[50 57]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[71 145]
[73 142]
[74 141]
[75 140]
[76 107]
[77 106]
[78 105]
[79 104]
[80 103]
[81 102]
[82 101]
[84 100]
[85 99]
[86 98]
[89 94]
[110 138]
[111 137]
[112 136]
[113 135]
[114 134]
[116 132]
[117 131]
[118 130]
[120 129]
[121 128]
[152 171]
[153 170]
[155 168]
[156 167]
[157 166]
[158 165]
[193 228]
[194 227]
[195 226]
[196 225]
[197 224]
[198 223]
[199 222]
[200 221]
[201 220]
[203 218]
[204 217]
[205 216]
[206 215]
[207 214]
[208 213]
[236 244]
[237 243]
[238 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
