%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGCAGUUUGUCCCUGAGCUCUAGCUUCUUUAAAUGAAGCUGAGUCUCUGGGCAACAUCUUUAGGGAGAGAGGUACAAAAGGUUCCUGGACCUUCUCAACACAGGGAGCCUGCAUA\
) } def
/len { sequence length } bind def

/coor [
[114.57647705 215.55249023]
[106.82493591 201.97134399]
[109.66755676 186.59429932]
[121.76213837 176.68193054]
[121.76213837 161.68193054]
[121.76213837 146.68193054]
[121.76213837 131.68193054]
[86.86502838 129.50111389]
[74.07451630 103.41973877]
[59.26549149 101.03379059]
[44.45646667 98.64783478]
[29.64743996 96.26188660]
[14.83841419 93.87593079]
[0.02938884 91.48997498]
[-10.94346046 98.42719269]
[-23.29622841 96.05072784]
[-30.43876457 86.18881226]
[-45.17902756 83.40947723]
[-59.91928864 80.63014984]
[-74.69524384 78.04727936]
[-89.50426483 75.66132355]
[-104.31329346 73.27537537]
[-113.41512299 75.01133728]
[-119.48262024 70.62374115]
[-134.22288513 67.84440613]
[-148.96315002 65.06507874]
[-163.70341492 62.28574753]
[-178.44366455 59.50641632]
[-193.18392944 56.72708511]
[-205.16564941 66.77558899]
[-220.80313110 66.71979523]
[-232.71284485 56.58604431]
[-235.27137756 41.15918732]
[-227.27067566 27.72331238]
[-212.48841858 22.62242889]
[-197.90434265 28.26502037]
[-190.40460205 41.98682404]
[-175.66433716 44.76615524]
[-160.92407227 47.54548645]
[-146.18382263 50.32481766]
[-131.44355774 53.10414886]
[-116.70329285 55.88348007]
[-101.92733765 58.46635056]
[-87.11831665 60.85230255]
[-72.30928802 63.23825455]
[-65.11315155 61.16917038]
[-57.13995743 65.88988495]
[-42.39969635 68.66921997]
[-27.65943527 71.44854736]
[-11.50967979 64.72335815]
[2.41534138 76.68095398]
[17.22436714 79.06690216]
[32.03339005 81.45285797]
[46.84241867 83.83881378]
[61.65144348 86.22476196]
[76.46046448 88.61071777]
[96.36576843 67.91206360]
[129.97875977 75.94570160]
[135.81112671 62.12602234]
[141.64347839 48.30634308]
[147.47584534 34.48666000]
[153.30821228 20.66698265]
[159.14057922 6.84730244]
[152.95840454 -7.69767714]
[158.94921875 -22.32251358]
[173.55874634 -28.35055161]
[188.11941528 -22.20546150]
[193.99266052 -7.53301764]
[187.69396973 6.96187973]
[172.96025085 12.67966461]
[167.12788391 26.49934387]
[161.29553223 40.31902313]
[155.46316528 54.13870239]
[149.63079834 67.95838165]
[143.79844666 81.77806091]
[146.62237549 88.72611237]
[155.83273315 76.88679504]
[170.69107056 78.94344330]
[176.33921814 92.83943176]
[167.12907410 104.67891693]
[152.27026367 102.62220001]
[155.09420776 109.57025146]
[170.81692505 107.80762482]
[179.53427124 119.88475800]
[193.35394287 125.71712494]
[207.17362976 131.54948425]
[220.99330139 137.38185120]
[234.81298828 143.21420288]
[248.63265991 149.04656982]
[259.71997070 138.60667419]
[274.09716797 133.58509827]
[289.27328491 134.85185242]
[302.61901855 142.18746948]
[311.82211304 154.32101440]
[315.28808594 169.15028381]
[312.41641235 184.10600281]
[303.70465088 196.59700012]
[290.66217041 204.45915222]
[275.54864502 206.33027649]
[260.98257446 201.88619995]
[249.48765564 191.89688110]
[243.05541992 178.09303284]
[242.80029297 162.86625671]
[228.98062134 157.03388977]
[215.16093445 151.20152283]
[201.34126282 145.36917114]
[187.52157593 139.53680420]
[173.70190430 133.70443726]
[158.96766663 135.88423157]
[149.26185608 123.38993073]
[136.76214600 131.68193054]
[136.76214600 146.68193054]
[136.76214600 161.68193054]
[136.76214600 176.68193054]
[148.85671997 186.59429932]
[151.69934082 201.97134399]
[143.94779968 215.55249023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 114]
[5 113]
[6 112]
[7 111]
[9 56]
[10 55]
[11 54]
[12 53]
[13 52]
[14 51]
[17 49]
[18 48]
[19 47]
[20 45]
[21 44]
[22 43]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[82 110]
[84 108]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
