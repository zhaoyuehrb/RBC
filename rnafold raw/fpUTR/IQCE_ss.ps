%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:45:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUCUGCGCACGCGCAUGGUCGCCCCAGGGGGAACGCAGGUCGCUUACCCGGCUGGGUAGGUCGGCGGCCUGGUUGCCAUGGCAGCGGGGUCGCGGGCCGGCGCCAGGGAAGGCCCCGAGGCUGCGGGCGGCCAGGGCUGCCCGCGGAUUCCCAGACCCGGACGCCCGAGCCAGCAACCCUGAGGGGCGGCCGGGCAGCGCCGCCACC\
) } def
/len { sequence length } bind def

/coor [
[84.89259338 681.25933838]
[69.64469910 680.57781982]
[56.20659637 673.34039307]
[47.24643326 660.98413086]
[44.54325104 645.96228027]
[48.63377380 631.25750732]
[58.70582199 619.78942871]
[72.75958252 613.83508301]
[73.42937469 598.85003662]
[74.09915924 583.86499023]
[66.17021179 574.72943115]
[66.60558319 562.23968506]
[75.71695709 553.11029053]
[76.60977173 538.13684082]
[77.50258636 523.16345215]
[78.28390503 508.18383789]
[78.95369720 493.19879150]
[71.79241180 480.13873291]
[80.13820648 466.69778442]
[80.80799103 451.71276855]
[81.47777557 436.72772217]
[82.14756012 421.74267578]
[82.81734467 406.75762939]
[83.48712921 391.77261353]
[84.15691376 376.78756714]
[84.82669830 361.80252075]
[85.49649048 346.81747437]
[86.16627502 331.83245850]
[75.95676422 321.04812622]
[76.42255402 305.84164429]
[87.80335999 295.20608521]
[88.47314453 280.22103882]
[89.14292908 265.23599243]
[89.81271362 250.25096130]
[79.87249756 242.05209351]
[76.41793060 229.43669128]
[80.92633820 216.95132446]
[91.96255493 209.23013306]
[92.85536957 194.25672913]
[85.88932800 181.09149170]
[94.43431091 167.77632141]
[95.32712555 152.80291748]
[96.10844421 137.82327271]
[96.77823639 122.83824158]
[97.44802094 107.85320282]
[92.33164978 114.12891388]
[84.96980286 118.57470703]
[75.89745331 120.60928345]
[60.91781998 119.82796478]
[45.93817902 119.04663849]
[30.95854378 118.26531982]
[15.97890568 117.48399353]
[1.62272859 125.41067505]
[-12.27840900 116.71064758]
[-11.42420769 100.33376312]
[3.30660295 93.12715149]
[16.76022911 102.50435638]
[31.73986626 103.28568268]
[46.71950150 104.06700134]
[61.69913864 104.84832764]
[76.67877960 105.62964630]
[83.25880432 92.14990997]
[73.42822266 80.82032013]
[63.59764481 69.49072266]
[53.76706314 58.16113281]
[38.87878418 52.80858612]
[36.38171768 38.12479019]
[26.55113602 26.79519653]
[16.72055626 15.46560287]
[6.88997459 4.13601017]
[-2.94060636 -7.19358301]
[-12.77118683 -18.52317619]
[-22.60176849 -29.85276985]
[-37.49004745 -35.20531464]
[-39.98711395 -49.88911438]
[-49.81769562 -61.21870422]
[-59.64827728 -72.54830170]
[-69.47885895 -83.87789154]
[-79.30944061 -95.20748138]
[-94.97845459 -100.04627228]
[-98.35814667 -116.09338379]
[-85.97176361 -126.84092712]
[-70.56137085 -121.23274994]
[-67.97984314 -105.03806305]
[-58.14926147 -93.70847321]
[-48.31868362 -82.37888336]
[-38.48810196 -71.04928589]
[-28.65752029 -59.71969223]
[-14.47239113 -55.17751694]
[-11.27217484 -39.68334961]
[-1.44159400 -28.35375786]
[8.38898659 -17.02416420]
[18.21956825 -5.69457054]
[28.05014801 5.63502216]
[37.88072968 16.96461487]
[47.71131134 28.29420853]
[61.89643860 32.83638382]
[65.09665680 48.33055115]
[74.92723846 59.66014481]
[84.75782013 70.98973846]
[94.58840179 82.31932831]
[109.53813171 83.54631042]
[121.08443451 73.97118378]
[132.63073730 64.39606476]
[144.17703247 54.82094574]
[155.65173340 45.16013718]
[167.05419922 35.41417313]
[171.54438782 27.45954704]
[178.69975281 25.60952187]
[190.24604797 16.03440285]
[201.79234314 6.45928240]
[203.09864807 -10.98528385]
[216.35623169 -21.87342262]
[233.05125427 -19.84494400]
[244.45372009 -29.59090805]
[245.75495911 -33.73346329]
[248.07353210 -36.92544174]
[250.98570251 -38.96374130]
[254.04527283 -39.80375671]
[256.83728027 -39.55293274]
[268.79962158 -48.60293579]
[271.10510254 -64.00820923]
[283.36553955 -73.01578522]
[298.03790283 -70.72290802]
[310.00024414 -79.77291107]
[321.96258545 -88.82290649]
[333.92492676 -97.87290955]
[345.88723755 -106.92290497]
[357.84957886 -115.97290802]
[369.81192017 -125.02290344]
[381.77426147 -134.07290649]
[393.73660278 -143.12290955]
[405.69894409 -152.17291260]
[417.66128540 -161.22290039]
[423.53823853 -176.53280640]
[439.77563477 -178.83055115]
[449.66976929 -165.75241089]
[443.04244995 -150.75205994]
[426.71127319 -149.26057434]
[414.74893188 -140.21057129]
[402.78659058 -131.16056824]
[390.82424927 -122.11057281]
[378.86193848 -113.06056976]
[366.89959717 -104.01056671]
[354.93725586 -94.96057129]
[342.97491455 -85.91056824]
[331.01257324 -76.86057281]
[319.05023193 -67.81056976]
[307.08789062 -58.76057053]
[305.30380249 -44.01768875]
[293.30120850 -34.66929626]
[277.84960938 -36.64059830]
[265.88726807 -27.59059715]
[254.19969177 -18.18844604]
[242.79722595 -8.44248009]
[243.59825134 4.41784096]
[236.74360657 15.55767345]
[224.54499817 20.79260063]
[211.36746216 18.00558472]
[199.82116699 27.58070374]
[188.27487183 37.15582275]
[176.80017090 46.81663513]
[165.39770508 56.56259918]
[162.35554504 63.29810333]
[153.75215149 66.36724854]
[142.20585632 75.94236755]
[130.65954590 85.51748657]
[119.11325073 95.09260559]
[112.43305969 108.52298737]
[111.76327515 123.50802612]
[111.09348297 138.49305725]
[113.83658600 147.20588684]
[110.30052948 153.69572449]
[109.40771484 168.66912842]
[116.30989838 182.90538025]
[107.82877350 195.14955139]
[106.93595886 210.12295532]
[118.78512573 222.99217224]
[117.68247986 240.11230469]
[104.79775238 250.92074585]
[104.12796783 265.90579224]
[103.45818329 280.89083862]
[102.78839874 295.87585449]
[113.17496490 307.48434448]
[112.28224182 322.67178345]
[101.15131378 332.50222778]
[100.48152924 347.48727417]
[99.81173706 362.47232056]
[99.14195251 377.45733643]
[98.47216797 392.44238281]
[97.80238342 407.42742920]
[97.13259888 422.41247559]
[96.46281433 437.39752197]
[95.79302979 452.38253784]
[95.12324524 467.36758423]
[102.23661804 481.49948120]
[93.93873596 493.86856079]
[93.26894379 508.85360718]
[96.01204681 517.56640625]
[92.47599030 524.05627441]
[91.58317566 539.02966309]
[90.69036102 554.00311279]
[99.31185150 570.27429199]
[89.08419800 584.53479004]
[88.41441345 599.51983643]
[87.74462128 614.50482178]
[101.21112061 621.68927002]
[110.21987915 634.01019287]
[112.98219299 649.02130127]
[108.94960785 663.74206543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 206]
[9 205]
[10 204]
[13 202]
[14 201]
[15 200]
[16 198]
[17 197]
[19 195]
[20 194]
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[26 188]
[27 187]
[28 186]
[31 183]
[32 182]
[33 181]
[34 180]
[38 177]
[39 176]
[41 174]
[42 173]
[43 171]
[44 170]
[45 169]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[62 101]
[63 100]
[64 99]
[65 98]
[67 96]
[68 95]
[69 94]
[70 93]
[71 92]
[72 91]
[73 90]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[102 168]
[103 167]
[104 166]
[105 165]
[106 163]
[107 162]
[109 161]
[110 160]
[111 159]
[114 155]
[115 154]
[120 153]
[121 152]
[124 149]
[125 148]
[126 147]
[127 146]
[128 145]
[129 144]
[130 143]
[131 142]
[132 141]
[133 140]
[134 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
