%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGUCUUUUCCUCCUUCCAGUGCCCGGCGUUCCUCCCUUCCCCCUCGCCGCCGACCGAGUUCUUCCUUUUCAGACCGGGUCGCCUUGCUGUCGUCGCGGUGAUUUUCCUGCUACUGCUACUGCUGCUGCUGCCACCGCCACUACCACUGGGCUCAUUUGCCCCGACCCCUUCCCGCCGCCCCGCCCCCAGCCCCACACAAG\
) } def
/len { sequence length } bind def

/coor [
[127.16277313 232.55075073]
[125.03028870 247.47442627]
[119.38764954 261.45382690]
[110.56291199 273.67626953]
[99.06912994 283.43106079]
[85.57454681 290.15115356]
[70.86371613 293.44583130]
[55.79190445 293.12353516]
[41.23536301 289.20297241]
[28.04039955 281.91213989]
[16.97414589 271.67489624]
[8.67998123 259.08639526]
[3.64011669 244.87854004]
[2.14756393 229.87734985]
[4.28909779 214.95497131]
[9.94021225 200.97897339]
[18.77235985 188.76191711]
[30.27204895 179.01406860]
[43.77070618 172.30215454]
[58.48353195 169.01640320]
[73.55514526 169.34785461]
[77.45611572 154.86398315]
[81.35708618 140.38011169]
[73.83008575 135.96176147]
[67.31090546 130.15849304]
[62.05058289 123.19383240]
[48.11593246 128.74589539]
[34.18128204 134.29797363]
[20.24662971 139.85005188]
[6.31197882 145.40211487]
[6.79287243 160.55284119]
[2.05996227 174.95338440]
[-7.31523037 186.86479187]
[-20.20060539 194.84869385]
[-35.04019165 197.94102478]
[-50.04203415 195.76835632]
[-63.39459229 188.59306335]
[-73.48547363 177.28155518]
[-79.09616089 163.19979858]
[-79.54913330 148.04821777]
[-74.78969574 133.65643311]
[-65.39256287 121.76232147]
[-52.49249649 113.80216217]
[-37.64723969 110.73718262]
[-22.64942551 112.93749237]
[-9.31011391 120.13739777]
[0.75990641 131.46746826]
[14.69455719 125.91539764]
[28.62920761 120.36332703]
[42.56385803 114.81124878]
[56.49850845 109.25917816]
[55.65711212 96.56192017]
[58.44562531 84.14610291]
[45.53331375 76.51248169]
[32.62100220 68.87886047]
[19.70868874 61.24523544]
[6.79637718 53.61161423]
[-8.33157539 57.32413101]
[-21.31775284 49.39861298]
[-24.76384354 34.95354080]
[-37.67615509 27.31991959]
[-46.66231918 25.64464569]
[-50.72792053 19.46693420]
[-63.52055359 11.63440418]
[-77.80204010 17.70224762]
[-92.91500092 14.18399143]
[-103.04818726 2.43247509]
[-104.30518341 -13.03360271]
[-96.20265198 -26.26722145]
[-81.85618591 -32.17978287]
[-66.78227997 -28.49778557]
[-56.77717209 -16.63703346]
[-55.68802261 -1.15822995]
[-42.89538956 6.67429972]
[-30.04253197 14.40760708]
[-17.13022041 22.04123116]
[-2.81296182 18.09766579]
[10.39070225 25.65530396]
[14.43000031 40.69930267]
[27.34231186 48.33292389]
[40.25462341 55.96654892]
[53.16693497 63.60017014]
[66.07924652 71.23379517]
[79.08758545 60.74719238]
[95.04745483 55.80062866]
[111.70630646 57.09225464]
[126.71295929 64.43977356]
[137.94941711 76.80616760]
[151.88406372 71.25409698]
[165.81872559 65.70202637]
[179.75337219 60.14995193]
[191.96875000 42.54822159]
[212.24922180 46.35979080]
[225.91117859 40.16698074]
[231.55334473 25.64789963]
[245.49673462 19.56213188]
[259.30368042 25.03054619]
[272.96563721 18.83773804]
[286.62762451 12.64492989]
[300.28958130 6.45212221]
[313.95153809 0.25931421]
[327.61349487 -5.93349361]
[324.36740112 -23.57343483]
[325.81274414 -41.43920517]
[331.84414673 -58.30536270]
[342.04187012 -73.01665497]
[355.70104980 -84.56715393]
[371.88034058 -92.16901398]
[389.46691895 -95.30624390]
[407.25286865 -93.76969147]
[424.01831055 -87.67098999]
[432.33978271 -100.15109253]
[429.45172119 -115.45784760]
[438.06869507 -127.99590302]
[452.67913818 -130.65489197]
[453.89752197 -146.42912292]
[467.39566040 -152.72590637]
[475.71713257 -165.20600891]
[476.23333740 -181.59703064]
[490.81234741 -189.10597229]
[504.45654297 -180.00828552]
[503.12994385 -163.66288757]
[488.19723511 -156.88452148]
[479.87576294 -144.40441895]
[479.25259399 -129.52285767]
[465.15924072 -122.33341217]
[468.32189941 -107.82364655]
[460.06051636 -95.04851532]
[444.81988525 -91.82960510]
[436.49841309 -79.34950256]
[445.42391968 -74.90788269]
[453.91436768 -68.96856689]
[466.94326782 -76.40145874]
[474.74429321 -90.82629395]
[491.14239502 -91.01228333]
[499.26858521 -76.76809692]
[490.76336670 -62.74692917]
[474.37615967 -63.37255859]
[461.34725952 -55.93967056]
[462.78909302 -48.57956696]
[477.50927734 -51.46321869]
[492.22949219 -54.34687424]
[506.94970703 -57.23052597]
[521.66998291 -60.11395264]
[524.55316162 -45.39365387]
[509.83337402 -42.51031876]
[495.11315918 -39.62666321]
[480.39294434 -36.74301147]
[465.67272949 -33.85935593]
[467.11456299 -26.49925232]
[481.98495483 -24.53177071]
[496.85537720 -22.56428909]
[511.72576904 -20.59680748]
[524.11633301 -30.40749168]
[539.80511475 -28.50027847]
[549.48425293 -16.00668526]
[547.41131592 -0.33893752]
[534.81604004 9.20756721]
[519.17108154 6.96905708]
[509.75830078 -5.72639942]
[494.88790894 -7.69388151]
[480.01748657 -9.66136360]
[465.14706421 -11.62884617]
[460.19454956 2.23174620]
[452.63833618 14.75473213]
[442.81042480 25.46118546]
[431.12869263 33.95026779]
[418.07919312 39.91418076]
[404.19619751 43.14921951]
[390.04003906 43.56256485]
[376.17480469 41.17454147]
[363.14556885 36.11635208]
[351.45718384 28.62344170]
[341.55468750 19.02476120]
[333.80630493 7.72846556]
[320.14434814 13.92127323]
[306.48239136 20.11408043]
[292.82040405 26.30688858]
[279.15844727 32.49969864]
[265.49649048 38.69250488]
[260.50881958 52.68030930]
[246.74186707 59.15531540]
[232.10398865 53.82894135]
[218.44203186 60.02174759]
[216.70822144 68.74097443]
[211.06785583 75.78960419]
[202.68940735 79.50476837]
[193.40399170 78.93597412]
[185.30543518 74.08460236]
[171.37078857 79.63667297]
[157.43614197 85.18875122]
[143.50149536 90.74082184]
[143.87107849 107.31032562]
[138.14862061 122.86469269]
[127.12877655 135.24403381]
[112.34176636 142.72929382]
[95.84095001 144.28108215]
[91.93998718 158.76495361]
[88.03901672 173.24882507]
[101.23839569 180.53166199]
[112.31085968 190.76220703]
[120.61265564 203.34567261]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 199]
[22 198]
[23 197]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[53 83]
[54 82]
[55 81]
[56 80]
[57 79]
[60 76]
[61 75]
[63 74]
[64 73]
[88 192]
[89 191]
[90 190]
[91 189]
[93 184]
[94 183]
[97 180]
[98 179]
[99 178]
[100 177]
[101 176]
[102 175]
[111 130]
[112 129]
[115 126]
[117 124]
[118 123]
[132 139]
[133 138]
[150 163]
[151 162]
[152 161]
[153 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
