%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:44:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGAGGAGGGACGGGCUGGGAGAGGGCCCGGACUAGGGGCGGCGGGCACCGCAGGAGCUCCGCGCGGCUGCAGCGCGGGCGGGAGCGGGGACGCGAUGUCGCCGCCGCCGCCUCCUUGCGGGCCGGGGCUGCGCCUCCGGGGCUGAGCCGCCGCCAGAGCCGACAGCCGAGCAGCCGCUGGGCGCUCCCGCGGCGCAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[114.46748352 238.21765137]
[111.96294403 223.42822266]
[109.45840454 208.63879395]
[106.95386505 193.84934998]
[102.73589325 187.77691650]
[104.52569580 178.81542969]
[102.24698639 163.98951721]
[99.96827698 149.16362000]
[90.55152130 148.24716187]
[81.48468781 145.54388428]
[73.10356903 141.15391541]
[63.07794571 152.31127930]
[63.74048615 167.87402344]
[53.41414261 179.04635620]
[38.57336426 179.58207703]
[28.54774475 190.73945618]
[18.52212524 201.89682007]
[8.49650383 213.05419922]
[-1.52911639 224.21156311]
[-11.55473709 235.36894226]
[-9.18366528 250.82571411]
[-17.34688187 264.16348267]
[-32.18996811 269.08453369]
[-46.70446777 263.26531982]
[-54.03708267 249.45349121]
[-50.72557449 234.17056274]
[-38.33353424 224.63267517]
[-22.71210861 225.34332275]
[-12.68648720 214.18594360]
[-2.66086698 203.02857971]
[7.36475372 191.87120056]
[17.39037514 180.71383667]
[27.41599464 169.55645752]
[26.36737442 154.74308777]
[36.37583923 143.28511047]
[51.92057800 142.28565979]
[61.94619751 131.12828064]
[51.68886566 109.11573029]
[53.21949768 84.87892914]
[66.16461182 64.33168030]
[87.36560059 52.48753738]
[85.76734161 37.57292938]
[84.16908264 22.65831757]
[82.57082367 7.74370861]
[80.97257233 -7.17090034]
[79.37431335 -22.08551025]
[54.10156250 -33.24748230]
[57.45417023 -56.92240906]
[50.62393951 -70.27710724]
[43.79370499 -83.63180542]
[37.09723282 -89.85023499]
[36.96289825 -97.24264526]
[30.33711624 -110.69995117]
[23.71133614 -124.15725708]
[17.08555603 -137.61456299]
[10.45977592 -151.07186890]
[3.73157382 -164.47825623]
[-3.09865808 -177.83294678]
[-9.92889023 -191.18765259]
[-16.75912285 -204.54234314]
[-23.95830727 -200.32081604]
[-33.72756958 -199.55781555]
[-44.41912460 -203.37695312]
[-56.58121490 -212.15667725]
[-68.74330139 -220.93640137]
[-80.90539551 -229.71612549]
[-93.06748199 -238.49584961]
[-105.22957611 -247.27557373]
[-120.34572601 -243.27107239]
[-134.47735596 -249.96667480]
[-140.95193481 -264.20092773]
[-136.71237183 -279.25283813]
[-123.76046753 -288.01535034]
[-108.21169281 -286.35110474]
[-97.40772247 -275.04586792]
[-96.44985199 -259.43765259]
[-84.28775787 -250.65794373]
[-72.12567139 -241.87821960]
[-59.96358109 -233.09849548]
[-47.80149078 -224.31877136]
[-35.63940048 -215.53904724]
[-22.84382439 -223.36676025]
[-25.12253571 -238.19267273]
[-27.40124512 -253.01856995]
[-29.67995644 -267.84448242]
[-42.13934326 -277.19335938]
[-44.23907852 -292.26138306]
[-35.24957275 -304.08190918]
[-37.52828217 -318.90780640]
[-39.80699158 -333.73370361]
[-42.08570099 -348.55963135]
[-51.82964325 -361.02423096]
[-46.11559296 -374.77917480]
[-48.39430237 -389.60507202]
[-50.67301559 -404.43099976]
[-62.70630646 -415.04132080]
[-61.76955795 -431.05700684]
[-48.58136368 -440.19216919]
[-33.25857925 -435.43908691]
[-27.55552864 -420.44393921]
[-35.84711075 -406.70968628]
[-33.56839752 -391.88378906]
[-31.28968811 -377.05789185]
[-21.70873833 -365.65374756]
[-27.25979614 -350.83831787]
[-24.98108673 -336.01242065]
[-22.70237541 -321.18652344]
[-20.42366600 -306.36062622]
[-8.29935741 -297.78524780]
[-5.77722025 -282.78213501]
[-14.85405064 -270.12319946]
[-12.57533932 -255.29728699]
[-10.29662895 -240.47137451]
[-8.01791859 -225.64547729]
[-3.40442514 -211.37257385]
[3.42580676 -198.01788330]
[10.25603867 -184.66317749]
[17.08627129 -171.30848694]
[22.93311882 -166.78298950]
[23.91707993 -157.69764709]
[30.54286003 -144.24034119]
[37.16864014 -130.78303528]
[43.79442215 -117.32572937]
[50.42020035 -103.86842346]
[57.14840317 -90.46203613]
[63.97863388 -77.10733795]
[70.80886841 -63.75264359]
[80.10357666 -64.06998444]
[89.29424286 -59.52100372]
[95.81854248 -50.40129852]
[109.56479645 -56.40467072]
[123.31105042 -62.40804291]
[137.05731201 -68.41141510]
[142.89962769 -82.85112000]
[156.92579651 -88.74357605]
[170.65585327 -83.08483124]
[184.40209961 -89.08820343]
[198.14836121 -95.09157562]
[211.89460754 -101.09494781]
[223.98997498 -112.97512817]
[238.75419617 -104.64122772]
[234.83312988 -88.14694214]
[217.89797974 -87.34869385]
[204.15173340 -81.34532166]
[190.40547180 -75.34194946]
[176.65922546 -69.33857727]
[171.47866821 -55.42105103]
[157.62353516 -49.13695908]
[143.06068420 -54.66516113]
[129.31442261 -48.66178894]
[115.56816864 -42.65841675]
[101.82191467 -36.65504456]
[94.28891754 -23.68376732]
[95.88717651 -8.76915836]
[97.48543549 6.14545155]
[99.08369446 21.06006050]
[100.68195343 35.97467041]
[102.28021240 50.88927841]
[111.43929291 52.18572617]
[120.19339752 55.17490768]
[128.23262024 59.75100327]
[135.27232361 65.75200653]
[141.06332397 72.96546936]
[145.40057373 81.13600922]
[148.13053894 89.97438812]
[149.15658569 99.16769409]
[148.44236755 108.39046478]
[146.01316833 117.31619263]
[141.95500183 125.62888336]
[153.41293335 135.30958557]
[164.87084961 144.99028015]
[180.40577698 147.98641968]
[185.13415527 162.11056519]
[196.59207153 171.79127502]
[208.05000305 181.47196960]
[224.27723694 183.84024048]
[230.08764648 199.17553711]
[219.50395203 211.70222473]
[203.41377258 208.53390503]
[198.36930847 192.92990112]
[186.91137695 183.24919128]
[175.45344543 173.56849670]
[160.73808289 171.26480103]
[155.19015503 156.44821167]
[143.73222351 146.76751709]
[132.27430725 137.08680725]
[124.03874207 142.88591003]
[114.79418182 146.88490295]
[117.07289124 161.71081543]
[119.35160065 176.53671265]
[121.74329376 191.34481812]
[124.24783325 206.13424683]
[126.75237274 220.92367554]
[129.25691223 235.71310425]
[143.93540955 239.89695740]
[155.33926392 250.04164124]
[161.20425415 264.13293457]
[160.36585999 279.37301636]
[152.99057007 292.73593140]
[140.54272461 301.56848145]
[125.49386597 304.11694336]
[110.83195496 299.87533569]
[99.46813202 289.68582153]
[93.65868378 275.57153320]
[94.55708313 260.33489990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[4 191]
[6 190]
[7 189]
[8 188]
[11 37]
[12 36]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[48 127]
[49 126]
[50 125]
[52 124]
[53 123]
[54 122]
[55 121]
[56 120]
[57 118]
[58 117]
[59 116]
[60 115]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
[82 114]
[83 113]
[84 112]
[85 111]
[88 108]
[89 107]
[90 106]
[91 105]
[93 103]
[94 102]
[95 101]
[130 152]
[131 151]
[132 150]
[133 149]
[136 146]
[137 145]
[138 144]
[139 143]
[169 186]
[170 185]
[171 184]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
