%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCGCGCCGGGAGCCGCGGGCCGGGCCAGCCGGGCCGCCGGGGCCCAGUGCGCCGCGCUCGCAGCCGGUAGCGCGCCAGCGCCGUAGGCGCUCGCUCGGCAGCCGCGGGGCCCUAGGCCGUGCCGGGGAGGGGGCGAGGGCGGCGCCCAGGCGCCUGCCGCCCCGGAGGCAGG\
) } def
/len { sequence length } bind def

/coor [
[-8.67843342 200.80720520]
[-15.33933926 201.36433411]
[-21.79200172 199.83044434]
[-27.40153885 196.38955688]
[-40.43631363 203.81213379]
[-53.47108841 211.23471069]
[-66.50586700 218.65728760]
[-79.54064178 226.07984924]
[-92.57541656 233.50242615]
[-100.73884583 247.05488586]
[-115.62737274 246.62922668]
[-128.66213989 254.05180359]
[-141.69691467 261.47436523]
[-145.98039246 276.45068359]
[-159.30525208 283.79254150]
[-173.55647278 279.61660767]
[-186.59124756 287.03918457]
[-199.62602234 294.46176147]
[-212.59402466 302.00036621]
[-225.49424744 309.65441895]
[-238.39445496 317.30847168]
[-246.31468201 331.00448608]
[-261.20843506 330.84463501]
[-274.10864258 338.49868774]
[-287.00885010 346.15274048]
[-299.90908813 353.80679321]
[-305.25387573 368.93334961]
[-320.45925903 374.04949951]
[-333.86099243 365.23062134]
[-335.17840576 349.24172974]
[-323.40087891 338.34820557]
[-307.56314087 340.90655518]
[-294.66290283 333.25253296]
[-281.76269531 325.59848022]
[-268.86248779 317.94442749]
[-261.86495972 304.79589844]
[-246.04850769 304.40826416]
[-233.14830017 296.75421143]
[-220.24807739 289.10015869]
[-216.08654785 282.96301270]
[-207.04859924 281.42697144]
[-194.01382446 274.00439453]
[-180.97904968 266.58181763]
[-177.29843140 252.19473267]
[-164.18505859 244.48149109]
[-149.11949158 248.43960571]
[-136.08471680 241.01702881]
[-123.04994202 233.59445190]
[-115.81884766 220.57290649]
[-99.99799347 220.46765137]
[-86.96321869 213.04507446]
[-73.92844391 205.62251282]
[-60.89366531 198.19993591]
[-47.85889053 190.77735901]
[-34.82411194 183.35478210]
[-25.65384102 162.11547852]
[-1.80104053 162.04302979]
[10.36561298 153.26963806]
[13.96356773 146.78598022]
[22.82864380 144.45051575]
[35.14995575 135.89567566]
[47.47126770 127.34082794]
[47.60487366 112.47071838]
[56.57509995 100.38771057]
[71.11014557 95.85055542]
[85.69837189 100.79927826]
[91.83072662 88.23401642]
[105.74678802 86.87940979]
[118.06809998 78.32456970]
[130.38940430 69.76972961]
[142.71072388 61.21489334]
[155.03202820 52.66005325]
[167.35334778 44.10521317]
[172.63958740 36.61524582]
[179.97180176 35.50994873]
[192.44384766 27.17639542]
[204.91589355 18.84284210]
[217.38793945 10.50928879]
[229.85998535 2.17573500]
[237.91247559 -16.28140640]
[257.22326660 -16.78651810]
[269.38992310 -25.55991936]
[281.55657959 -34.33332062]
[293.72323608 -43.10671997]
[305.88989258 -51.88011932]
[318.05654907 -60.65351868]
[330.22317505 -69.42691803]
[330.40963745 -84.83053589]
[339.52395630 -97.02819061]
[353.90292358 -101.46762085]
[367.97045898 -96.64656067]
[380.13711548 -105.41996002]
[392.30377197 -114.19335938]
[404.47042847 -122.96675873]
[416.63708496 -131.74015808]
[423.30505371 -146.08758545]
[438.15374756 -147.25588989]
[450.32040405 -156.02928162]
[462.48706055 -164.80268860]
[461.51110840 -175.48341370]
[465.04638672 -185.52346802]
[472.38659668 -193.11988831]
[482.14874268 -196.93844604]
[492.53344727 -196.34767151]
[501.65643311 -191.52227783]
[509.08276367 -205.49223328]
[523.97271729 -205.86408997]
[536.59155273 -213.97370911]
[549.21032715 -222.08331299]
[556.63665771 -236.05328369]
[571.52667236 -236.42514038]
[584.14544678 -244.53474426]
[596.76428223 -252.64436340]
[609.38305664 -260.75396729]
[619.43890381 -274.40374756]
[635.33898926 -268.51956177]
[634.08630371 -251.61193848]
[617.49267578 -248.13516235]
[604.87384033 -240.02555847]
[592.25506592 -231.91593933]
[579.63629150 -223.80633545]
[573.11248779 -210.41641235]
[557.31994629 -209.46450806]
[544.70117188 -201.35490417]
[532.08233643 -193.24528503]
[525.55859375 -179.85537720]
[509.76605225 -178.90347290]
[507.07278442 -159.63700867]
[490.85833740 -148.34719849]
[471.26046753 -152.63603210]
[459.09381104 -143.86262512]
[446.92715454 -135.08923340]
[441.12942505 -121.36933136]
[425.41049194 -119.57350922]
[413.24383545 -110.80010986]
[401.07717896 -102.02670288]
[388.91052246 -93.25330353]
[376.74386597 -84.47990417]
[376.87570190 -69.60977936]
[368.12255859 -57.36859131]
[353.67080688 -52.57271957]
[338.99658203 -57.26026535]
[326.82992554 -48.48686600]
[314.66326904 -39.71346664]
[302.49664307 -30.94006538]
[290.32998657 -22.16666603]
[278.16333008 -13.39326572]
[265.99667358 -4.61986542]
[265.26779175 5.61197472]
[258.87966919 13.91708755]
[248.76129150 17.38982773]
[238.19352722 14.64777946]
[225.72149658 22.98133278]
[213.24945068 31.31488609]
[200.77740479 39.64844131]
[188.30535889 47.98199463]
[175.90818787 56.42652512]
[163.58686829 64.98136902]
[151.26556396 73.53620148]
[138.94424438 82.09104156]
[126.62294006 90.64588165]
[114.30162811 99.20072174]
[108.16927338 111.76598358]
[94.25321198 113.12059021]
[93.79184723 128.51841736]
[84.46128082 140.55145264]
[70.00534058 144.73353577]
[56.02610779 139.66213989]
[43.70479584 148.21697998]
[31.38348198 156.77182007]
[19.13901329 165.43627930]
[6.97235966 174.20968628]
[7.64305496 181.11985779]
[6.13884687 187.84461975]
[2.64087558 193.72164917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 55]
[5 54]
[6 53]
[7 52]
[8 51]
[9 50]
[11 48]
[12 47]
[13 46]
[16 43]
[17 42]
[18 41]
[19 39]
[20 38]
[21 37]
[23 35]
[24 34]
[25 33]
[26 32]
[57 172]
[58 171]
[60 170]
[61 169]
[62 168]
[66 164]
[68 162]
[69 161]
[70 160]
[71 159]
[72 158]
[73 157]
[75 156]
[76 155]
[77 154]
[78 153]
[79 152]
[81 148]
[82 147]
[83 146]
[84 145]
[85 144]
[86 143]
[87 142]
[91 138]
[92 137]
[93 136]
[94 135]
[95 134]
[97 132]
[98 131]
[99 130]
[105 127]
[107 125]
[108 124]
[109 123]
[111 121]
[112 120]
[113 119]
[114 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
