%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACAAGAAGGACCCAGCCUCCGAGCGGCCACACCCUGUGUGUCUCUCUGUCCUGCCAGCACUGAGGGCUCAUCCCUCUGCAGAGCGCGGGGUCACCGGAAGGAGACGCC\
) } def
/len { sequence length } bind def

/coor [
[-41.20473099 205.58987427]
[-45.53781891 211.62628174]
[-51.17544937 216.43849182]
[-57.78432083 219.75361633]
[-64.97649384 221.38691711]
[-72.33210754 221.25209045]
[-79.42395782 219.36581421]
[-85.84224701 215.84619141]
[-91.21828461 210.90547180]
[-95.24568176 204.83720398]
[-109.86959839 208.17501831]
[-124.49352264 211.51283264]
[-127.96059418 226.33648682]
[-137.48117065 238.13673401]
[-151.12522888 244.60667419]
[-166.16357422 244.51144409]
[-179.61378479 237.92349243]
[-188.83164978 226.19760132]
[-203.45556641 229.53541565]
[-218.07949829 232.87322998]
[-225.05204773 246.87028503]
[-239.41101074 253.06333923]
[-254.37652588 248.52824402]
[-262.88235474 235.40631104]
[-260.91226196 219.89332581]
[-249.39649963 209.31404114]
[-233.77244568 208.66366577]
[-221.41731262 218.24931335]
[-206.79338074 214.91149902]
[-192.16946411 211.57368469]
[-188.95213318 197.00953674]
[-179.69230652 185.23817444]
[-166.18453979 178.62747192]
[-151.08448792 178.53675842]
[-137.38681030 185.03758240]
[-127.83133698 196.88891602]
[-113.20741272 193.55110168]
[-98.58349609 190.21328735]
[-89.10392761 168.63111877]
[-66.80912781 160.27279663]
[-45.04734421 170.50627136]
[-31.72065926 163.62155151]
[-18.39397430 156.73681641]
[-5.06729078 149.85209656]
[8.25939369 142.96736145]
[21.58607864 136.08264160]
[34.91276169 129.19790649]
[48.04111481 121.94212341]
[60.96080399 114.32099152]
[73.88049316 106.69986725]
[86.80018616 99.07873535]
[99.27222443 90.74517822]
[111.25738525 81.72542572]
[123.24253845 72.70566559]
[135.22769165 63.68590927]
[147.21286011 54.66615295]
[159.19801331 45.64639664]
[171.05549622 36.45944214]
[177.39868164 17.42611122]
[196.50048828 15.03433800]
[207.68511963 5.03913927]
[218.86975098 -4.95605946]
[221.38066101 -11.32462692]
[226.07708740 -14.83865356]
[230.97315979 -15.17647839]
[242.70063782 -24.52882576]
[254.42811584 -33.88117218]
[266.15557861 -43.23352051]
[277.88305664 -52.58586502]
[281.10092163 -68.30289459]
[295.46011353 -75.45780945]
[309.94552612 -68.56196594]
[313.44515991 -52.90527344]
[303.27441406 -40.49819946]
[287.23541260 -40.85839462]
[275.50793457 -31.50604820]
[263.78045654 -22.15369987]
[252.05297852 -12.80135345]
[240.32551575 -3.44900656]
[228.86494446 6.22857332]
[217.68031311 16.22377205]
[206.49568176 26.21897125]
[206.82388306 36.60749435]
[201.19615173 45.60799026]
[191.30882263 50.04308701]
[180.40783691 48.18691635]
[177.09298706 54.91409683]
[168.21777344 57.63155746]
[156.23260498 66.65131378]
[144.24745178 75.67106628]
[132.26229858 84.69082642]
[120.27713776 93.71057892]
[108.29198456 102.73033905]
[107.63333893 105.87157440]
[105.74935913 108.82276154]
[102.71665955 111.10362244]
[98.79793549 112.27280426]
[94.42131042 111.99842072]
[81.50162506 119.61955261]
[68.58193207 127.24068451]
[55.66224289 134.86181641]
[51.95714188 140.61816406]
[46.66539383 143.14843750]
[41.79748917 142.52459717]
[28.47080612 149.40931702]
[15.14412212 156.29405212]
[1.81743741 163.17877197]
[-11.50924683 170.06350708]
[-24.83593178 176.94822693]
[-38.16261673 183.83296204]
[-37.39807510 191.27973938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 38]
[11 37]
[12 36]
[18 30]
[19 29]
[20 28]
[41 110]
[42 109]
[43 108]
[44 107]
[45 106]
[46 105]
[47 104]
[48 101]
[49 100]
[50 99]
[51 98]
[52 93]
[53 92]
[54 91]
[55 90]
[56 89]
[57 88]
[58 86]
[60 82]
[61 81]
[62 80]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
