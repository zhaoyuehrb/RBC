%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUCGCGAGCGGCCGUCCGAGCACCAGCCUCGCCGCCGCAGAGACGCUCGCCACGCCGGUGCCGGAGCCGGAGCGGGGAGCCAGGCUGCGUGCGACCAGCCGCAGAGCAGAGAGCGCCCGGGGCGGGGGCCGCAGACGGACAGGGGCUCUGGGCGGCCGGGGAGCAUGCCCGCGCGGCUACGCUGA\
) } def
/len { sequence length } bind def

/coor [
[62.16414261 703.00714111]
[46.82434464 702.24157715]
[33.93119049 693.89520264]
[26.95287514 680.21313477]
[27.76653290 664.87579346]
[36.15328979 652.00891113]
[49.85715485 645.07348633]
[50.60484314 630.09216309]
[51.35253143 615.11077881]
[43.82773972 608.16357422]
[41.32643890 598.00579834]
[44.91230774 587.94476318]
[53.62553406 581.39434814]
[54.87076187 566.44610596]
[56.11599350 551.49792480]
[57.36122131 536.54968262]
[58.60644913 521.60144043]
[59.85168076 506.65322876]
[53.19764328 493.32757568]
[62.05386353 480.21734619]
[63.29909134 465.26913452]
[56.64505768 451.94345093]
[65.50127411 438.83325195]
[66.74650574 423.88500977]
[67.99172974 408.93679810]
[55.67758942 400.55661011]
[49.16814804 387.04797363]
[50.30182266 371.99536133]
[58.87400436 359.44888306]
[72.66520691 352.83450317]
[73.91043854 337.88629150]
[75.15567017 322.93804932]
[76.40089417 307.98983765]
[77.64612579 293.04159546]
[78.76707458 278.08355713]
[79.76367188 263.11669922]
[80.76026917 248.14984131]
[81.75686646 233.18298340]
[82.75346375 218.21612549]
[80.05571747 211.32009888]
[83.89304352 203.00942993]
[85.13827515 188.06121826]
[86.38350677 173.11299133]
[87.62873077 158.16476440]
[88.87396240 143.21653748]
[66.84337616 129.86798096]
[55.86019135 106.56775665]
[59.58388519 81.07922363]
[47.26095963 72.52671814]
[34.93803024 63.97420120]
[22.61510277 55.42169189]
[6.86631155 53.90969467]
[0.82205194 40.29660416]
[-11.50087547 31.74409294]
[-27.24966621 30.23209572]
[-33.29392624 16.61900711]
[-49.04271698 15.10701084]
[-55.08697891 1.49392152]
[-67.40990448 -7.05859041]
[-79.73283386 -15.61110210]
[-92.05576324 -24.16361427]
[-104.37868500 -32.71612549]
[-119.88483429 -29.66079712]
[-132.96304321 -38.53411484]
[-135.85426331 -54.07169342]
[-126.84317780 -67.05536652]
[-111.27589417 -69.78215027]
[-98.38822174 -60.63429260]
[-95.82617188 -45.03905487]
[-83.50325012 -36.48654175]
[-71.18032074 -27.93403053]
[-58.85739136 -19.38151741]
[-46.53446579 -10.82900620]
[-31.66709137 -9.92874241]
[-24.74141502 4.29608011]
[-9.87404156 5.19634390]
[-2.94836330 19.42116547]
[9.37456417 27.97367859]
[24.24193764 28.87394142]
[31.16761589 43.09876251]
[43.49054337 51.65127563]
[55.81346893 60.20378876]
[68.13639832 68.75630188]
[76.66441345 61.96175003]
[86.58559418 57.43814087]
[97.30764008 55.45553589]
[108.19042206 56.13230133]
[118.58422089 59.42803192]
[127.03401947 47.03445053]
[135.48382568 34.64086533]
[143.93362427 22.24728584]
[152.38342285 9.85370350]
[154.63870239 0.98206365]
[161.07809448 -2.67405486]
[169.73272705 -14.92547703]
[167.25801086 -30.30447388]
[176.20957947 -42.60586929]
[190.88635254 -44.87035370]
[199.54098511 -57.12177277]
[201.94340515 -65.95470428]
[208.44267273 -69.50328827]
[217.29975891 -81.60916138]
[226.15682983 -93.71504211]
[228.06097412 -109.42124176]
[241.82052612 -115.12423706]
[243.72468567 -130.83044434]
[257.48422241 -136.53343201]
[260.03314209 -145.32521057]
[266.59048462 -148.76527405]
[275.64755249 -160.72225952]
[271.99169922 -175.92649841]
[279.01049805 -189.90043640]
[293.38986206 -196.04598999]
[308.34030151 -191.46144104]
[316.80270386 -178.31146240]
[314.78134155 -162.80506897]
[303.23065186 -152.26391602]
[287.60455322 -151.66519165]
[278.54748535 -139.70820618]
[269.59008789 -127.67636108]
[268.31945801 -112.83605194]
[253.92640686 -106.26716614]
[252.65576172 -91.42685699]
[238.26269531 -84.85796356]
[229.40562439 -72.75209045]
[220.54855347 -60.64621353]
[211.79240417 -48.46714020]
[203.13777161 -36.21572113]
[205.90844727 -21.62603378]
[197.30593872 -9.07806110]
[181.98414612 -6.27084446]
[173.32951355 5.98057747]
[164.77700806 18.30350494]
[156.32720947 30.69708633]
[147.87741089 43.09066772]
[139.42759705 55.48424911]
[130.97779846 67.87783051]
[136.50523376 74.33240509]
[140.70892334 81.71772766]
[143.43643188 89.76600647]
[144.58885193 98.18538666]
[144.12438965 106.67057037]
[142.05989075 114.91386414]
[138.47023010 122.61635590]
[133.48556519 129.49873352]
[127.28664398 135.31143188]
[120.09826660 139.84367371]
[112.18108368 142.93110657]
[103.82218933 144.46176147]
[102.57695770 159.40998840]
[101.33172607 174.35821533]
[100.08650208 189.30644226]
[98.84127045 204.25466919]
[97.72032166 219.21272278]
[96.72372437 234.17958069]
[95.72712708 249.14643860]
[94.73052979 264.11328125]
[93.73393250 279.08013916]
[96.28976440 287.86990356]
[92.59435272 294.28683472]
[91.34912109 309.23507690]
[90.10388947 324.18328857]
[88.85866547 339.13150024]
[87.61343384 354.07974243]
[100.12016296 362.88479614]
[106.49828339 376.67669678]
[105.12576294 391.70941162]
[96.47093964 403.95480347]
[82.93995667 410.18200684]
[81.69472504 425.13024902]
[80.44950104 440.07846069]
[87.01446533 454.47332764]
[78.24731445 466.51434326]
[77.00208282 481.46258545]
[83.56705475 495.85742188]
[74.79990387 507.89843750]
[73.55467224 522.84667969]
[72.30944824 537.79492188]
[71.06421661 552.74310303]
[69.81898499 567.69134521]
[68.57376099 582.63958740]
[77.99419403 600.44738770]
[66.33388519 615.85845947]
[65.58619690 630.83984375]
[64.83850861 645.82116699]
[77.78372955 654.08654785]
[84.84767914 667.72460938]
[84.13018799 683.06671143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 185]
[8 184]
[9 183]
[13 181]
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[20 174]
[21 173]
[23 171]
[24 170]
[25 169]
[30 164]
[31 163]
[32 162]
[33 161]
[34 160]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[41 153]
[42 152]
[43 151]
[44 150]
[45 149]
[48 83]
[49 82]
[50 81]
[51 80]
[53 78]
[54 77]
[56 75]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[88 137]
[89 136]
[90 135]
[91 134]
[92 133]
[94 132]
[95 131]
[98 128]
[99 127]
[101 126]
[102 125]
[103 124]
[105 122]
[107 120]
[109 119]
[110 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
