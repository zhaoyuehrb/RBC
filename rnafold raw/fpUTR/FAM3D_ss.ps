%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUCAAAGGAGGGGCAGAGCCUGCGCAGGGCAGGAGCAGCUGGCCCACUGGCGGCCCGCAACACUCCGUCUCACCCUCUGGGCCCACUGCAUCUAGAGGAGGGCCGUCUGUGAGGCCACUACCCCUCCAGCAACUGGGAGGUGGGACUGUCAGAAGCUGGCCCAGGGUGGUGGUCAGCUGGGUCAGGGACCUACGGCACCUGCUGGACCACCUCGCCUUCUCCAUCGAAGCAGGGAAGUGGGAGCCUCGAGCCC\
UCGGGUGGAAGCUGACCCCAAGCCACCCUUCACCUGGACAGG\
) } def
/len { sequence length } bind def

/coor [
[-308.87942505 156.86824036]
[-317.59643555 163.55912781]
[-327.71859741 167.79656982]
[-338.57189941 169.30693054]
[-349.43576050 167.99790955]
[-359.59088135 163.96414185]
[-368.36703491 157.48034668]
[-375.18713379 148.98271179]
[-379.60516357 139.03952026]
[-394.50442505 140.77508545]
[-409.40365601 142.51066589]
[-424.30291748 144.24624634]
[-439.20217896 145.98182678]
[-454.10144043 147.71739197]
[-469.00067139 149.45297241]
[-473.23733521 161.41920471]
[-484.33084106 169.93328857]
[-499.55755615 171.17730713]
[-496.70446777 186.49063110]
[-505.35003662 199.00895691]
[-519.96655273 201.63456726]
[-528.31652832 214.09561157]
[-536.66650391 226.55667114]
[-545.01647949 239.01771545]
[-553.36645508 251.47877502]
[-551.68048096 267.43298340]
[-563.20349121 278.59539795]
[-579.09606934 276.40313721]
[-587.16674805 262.53793335]
[-581.22442627 247.63598633]
[-565.82751465 243.12878418]
[-557.47753906 230.66773987]
[-549.12756348 218.20668030]
[-540.77758789 205.74563599]
[-532.42761230 193.28457642]
[-535.55706787 178.76763916]
[-527.26654053 166.01139832]
[-512.01861572 162.82733154]
[-518.30206299 149.20683289]
[-533.20135498 147.47126770]
[-542.03906250 149.58030701]
[-548.24822998 145.63804626]
[-563.12835693 143.74549866]
[-578.00848389 141.85295105]
[-592.88861084 139.96040344]
[-607.76873779 138.06785583]
[-622.65863037 136.25376892]
[-637.55786133 134.51818848]
[-652.45715332 132.78260803]
[-667.05987549 138.87120056]
[-678.80639648 129.71325684]
[-693.70568848 127.97767639]
[-708.60491943 126.24210358]
[-723.50415039 124.50652313]
[-738.40344238 122.77095032]
[-753.30267334 121.03536987]
[-768.20196533 119.29979706]
[-783.10119629 117.56421661]
[-798.08428955 118.27555847]
[-812.75213623 121.41484833]
[-818.92022705 135.65333557]
[-832.29656982 143.51797485]
[-847.73773193 141.98468018]
[-859.30621338 131.64303589]
[-862.55371094 116.46958923]
[-856.23150635 102.29886627]
[-842.77062988 94.57978058]
[-827.34704590 96.28049469]
[-815.89141846 106.74703217]
[-801.22363281 103.60774231]
[-800.94696045 96.11284637]
[-815.93670654 95.55950165]
[-828.64160156 87.58541870]
[-815.38336182 80.56970978]
[-800.39361572 81.12305450]
[-800.11694336 73.62815857]
[-814.51336670 69.41596222]
[-828.90979004 65.20377350]
[-843.30621338 60.99158096]
[-857.70269775 56.77938843]
[-872.09912109 52.56719208]
[-886.49554443 48.35499954]
[-900.93560791 44.29481125]
[-915.41766357 40.38707352]
[-929.98620605 47.10549545]
[-944.25695801 39.77575684]
[-947.28259277 24.02060509]
[-936.74218750 11.92604160]
[-920.72131348 12.76998329]
[-911.50988770 25.90502930]
[-897.02783203 29.81276703]
[-892.55139160 28.27606392]
[-887.06311035 29.50195694]
[-882.28338623 33.95856094]
[-867.88690186 38.17075729]
[-853.49047852 42.38294983]
[-839.09405518 46.59514236]
[-824.69763184 50.80733490]
[-810.30114746 55.01952744]
[-795.90472412 59.23171997]
[-777.66448975 81.57646179]
[-781.36560059 102.66496277]
[-766.46636963 104.40054321]
[-751.56713867 106.13611603]
[-736.66784668 107.87169647]
[-721.76861572 109.60726929]
[-706.86932373 111.34284973]
[-691.97009277 113.07842255]
[-677.07086182 114.81400299]
[-663.53381348 108.60127258]
[-650.72155762 117.88336182]
[-635.82232666 119.61893463]
[-620.92303467 121.35451508]
[-613.94897461 119.01841736]
[-605.87615967 123.18772888]
[-590.99603271 125.08027649]
[-576.11590576 126.97282410]
[-561.23577881 128.86537170]
[-546.35565186 130.75791931]
[-531.46575928 132.57200623]
[-516.56652832 134.30758667]
[-491.25619507 119.36743164]
[-470.73626709 134.55371094]
[-455.83700562 132.81814575]
[-440.93774414 131.08256531]
[-426.03851318 129.34698486]
[-411.13925171 127.61141205]
[-396.23999023 125.87583923]
[-381.34072876 124.14025879]
[-375.97183228 105.80442047]
[-363.04672241 91.66675568]
[-345.17187500 84.64317322]
[-325.98059082 86.20837402]
[-309.39453125 96.08647156]
[-298.82235718 112.29839325]
[-284.03524780 109.78022766]
[-269.24810791 107.26206970]
[-260.09289551 93.12918091]
[-243.21195984 89.95063782]
[-228.99409485 100.18115234]
[-214.23434448 97.50724792]
[-199.47459412 94.83333588]
[-184.71484375 92.15943146]
[-169.95509338 89.48552704]
[-159.68919373 78.54882812]
[-157.95361328 63.64957428]
[-159.98294067 58.94255447]
[-160.03039551 54.37736511]
[-158.47387695 50.67568207]
[-155.92033386 48.30936050]
[-153.71447754 33.47243881]
[-151.50863647 18.63551521]
[-149.30279541 3.79859424]
[-147.09695435 -11.03832722]
[-150.74830627 -27.59441185]
[-135.85003662 -35.68625259]
[-123.95017242 -23.61026001]
[-132.26002502 -8.83248234]
[-134.46586609 6.00443935]
[-136.67172241 20.84136200]
[-138.87756348 35.67828369]
[-141.08340454 50.51520538]
[-143.05436707 65.38515472]
[-144.78993225 80.28440857]
[-134.93447876 91.59236145]
[-119.93781281 91.90860748]
[-104.94114685 92.22484589]
[-89.94448090 92.54109192]
[-74.94781494 92.85733795]
[-59.95114517 93.17358398]
[-44.95447922 93.48982239]
[-29.95781326 93.80606842]
[-14.95781422 93.80606842]
[0.03885184 93.48982239]
[15.03551769 93.17358398]
[30.03218460 92.85733795]
[45.02885056 92.54109192]
[60.02551651 92.22484589]
[75.02217865 91.90860748]
[90.01884460 91.59236145]
[103.86186218 85.81560516]
[114.63485718 75.37805176]
[125.40785217 64.94049072]
[136.18084717 54.50293732]
[146.95384216 44.06538010]
[154.12223816 28.70144463]
[170.87014771 31.33653259]
[172.97431946 48.15939713]
[157.39140320 54.83837509]
[146.61840820 65.27593231]
[135.84541321 75.71348572]
[125.07241821 86.15104675]
[114.29942322 96.58860016]
[117.26060486 103.47927094]
[123.18297577 117.26062012]
[126.14415741 124.15129852]
[141.13082886 123.51894379]
[156.11749268 122.88659668]
[169.57920837 114.57440948]
[182.62135315 121.76829529]
[197.60801697 121.13594818]
[212.59468079 120.50360107]
[227.58134460 119.87125397]
[242.56800842 119.23889923]
[257.55468750 118.60655212]
[261.72454834 109.96456909]
[268.69503784 103.45453644]
[277.49435425 99.92700958]
[286.91610718 99.82066345]
[295.68478394 103.10819244]
[302.62829590 109.30563354]
[306.83468628 117.54314423]
[321.83468628 117.54314423]
[336.83468628 117.54314423]
[345.36898804 114.42569733]
[351.99258423 117.62303925]
[366.99176025 117.78117371]
[375.55847168 114.75386810]
[382.14801025 118.02086639]
[397.14465332 118.33710480]
[412.14132690 118.65335083]
[423.37490845 107.53657532]
[439.17831421 107.70270538]
[450.17568970 119.05316925]
[449.84249878 134.85394287]
[438.37640381 145.73071289]
[422.58001709 145.23046875]
[411.82510376 133.65002441]
[396.82843018 133.33377075]
[381.83175659 133.01753235]
[366.83361816 132.78033447]
[351.83447266 132.62220764]
[336.83468628 132.54313660]
[321.83468628 132.54313660]
[306.83468628 132.54313660]
[293.56420898 148.13983154]
[272.79888916 148.77592468]
[258.18701172 133.59321594]
[243.20036316 134.22557068]
[228.21369934 134.85791016]
[213.22703552 135.49026489]
[198.24035645 136.12260437]
[183.25369263 136.75495911]
[170.86392212 145.02191162]
[156.74983215 137.87326050]
[141.76316833 138.50561523]
[126.77650452 139.13795471]
[122.03610229 153.36921692]
[133.65003967 162.86216736]
[146.50679016 162.34632874]
[155.97840881 170.45266724]
[157.36117554 182.43994141]
[168.87440491 192.05480957]
[180.38761902 201.66967773]
[196.62817383 203.94490051]
[202.52636719 219.24664307]
[192.01466370 231.83378601]
[175.90658569 228.75775146]
[170.77275085 213.18290710]
[159.25953674 203.56803894]
[147.74630737 193.95317078]
[130.30261230 191.85769653]
[124.15708160 174.47612000]
[112.54314423 164.98315430]
[90.33509064 106.58902740]
[75.33842468 106.90527344]
[60.34175873 107.22151184]
[45.34509277 107.53775787]
[30.34842873 107.85400391]
[15.35176182 108.17024994]
[0.35509613 108.48648834]
[-14.64157009 108.80273438]
[-18.18842125 111.11820221]
[-21.91253853 112.11349487]
[-25.38541985 111.89138031]
[-28.25386810 110.68090820]
[-30.27405930 108.80273438]
[-45.27072525 108.48648834]
[-60.26739120 108.17024994]
[-75.26405334 107.85400391]
[-90.26071930 107.53775787]
[-105.25738525 107.22151184]
[-120.25405121 106.90527344]
[-135.25071716 106.58902740]
[-152.65153503 116.09093475]
[-167.28118896 104.24527740]
[-182.04093933 106.91918182]
[-196.80068970 109.59308624]
[-211.56044006 112.26699829]
[-226.32019043 114.94090271]
[-232.65045166 126.79739380]
[-244.47393799 132.76969910]
[-257.38906860 130.88473511]
[-266.72994995 122.04918671]
[-281.51705933 124.56735229]
[-296.30419922 127.08551025]
[-297.86135864 138.01031494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 129]
[10 128]
[11 127]
[12 126]
[13 125]
[14 124]
[15 123]
[18 38]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[39 121]
[40 120]
[42 119]
[43 118]
[44 117]
[45 116]
[46 115]
[47 113]
[48 112]
[49 111]
[51 109]
[52 108]
[53 107]
[54 106]
[55 105]
[56 104]
[57 103]
[58 102]
[59 70]
[60 69]
[76 100]
[77 99]
[78 98]
[79 97]
[80 96]
[81 95]
[82 94]
[83 91]
[84 90]
[135 296]
[136 295]
[137 294]
[140 290]
[141 289]
[142 288]
[143 287]
[144 286]
[145 164]
[146 163]
[150 162]
[151 161]
[152 160]
[153 159]
[154 158]
[165 284]
[166 283]
[167 282]
[168 281]
[169 280]
[170 279]
[171 278]
[172 277]
[173 272]
[174 271]
[175 270]
[176 269]
[177 268]
[178 267]
[179 266]
[180 265]
[181 193]
[182 192]
[183 191]
[184 190]
[185 189]
[196 247]
[197 246]
[198 245]
[200 243]
[201 242]
[202 241]
[203 240]
[204 239]
[205 238]
[212 235]
[213 234]
[214 233]
[216 232]
[217 231]
[219 230]
[220 229]
[221 228]
[248 264]
[249 263]
[252 261]
[253 260]
[254 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
