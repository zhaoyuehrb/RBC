%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUGUCAAUCAGGCACUGCCCAGAGAAGUGUGUGUGGUUGAAAAAGCCCGCGGCGUCUGCUCCACCCACCUGCGCUCGGCUCUGGGUUCUGUAGCUGAGAGACGACCUGGAAGUUCUGAGGCAGCCUUUGUCUGGCUGGAACACGCAUUGGCAGCGGGAGCUGUCGGUAGGACCUGGGACACCGCGGAAGUCGGGAA\
) } def
/len { sequence length } bind def

/coor [
[-94.74334717 540.10131836]
[-104.23192596 541.81036377]
[-113.86779022 541.81414795]
[-123.34706116 540.11431885]
[-132.37112427 536.76647949]
[-140.65608215 531.87799072]
[-150.96563721 542.77349854]
[-161.27519226 553.66906738]
[-171.58476257 564.56457520]
[-181.89431763 575.46014404]
[-192.20388794 586.35571289]
[-202.51344299 597.25122070]
[-206.37821960 612.59313965]
[-220.74586487 616.51995850]
[-231.05543518 627.41552734]
[-241.36499023 638.31109619]
[-251.67456055 649.20660400]
[-255.30458069 657.59973145]
[-262.23391724 660.19116211]
[-272.71417236 670.92260742]
[-269.97283936 686.19561768]
[-276.76257324 700.14837646]
[-290.47262573 707.41571045]
[-305.83114624 705.20324707]
[-316.93252563 694.36169434]
[-319.50802612 679.05987549]
[-312.56732178 665.18157959]
[-298.77926636 658.06335449]
[-283.44561768 660.44232178]
[-272.96533203 649.71087646]
[-262.57009888 638.89703369]
[-252.26054382 628.00152588]
[-241.95097351 617.10595703]
[-231.64141846 606.21038818]
[-228.51405334 591.64782715]
[-213.40899658 586.94171143]
[-203.09942627 576.04614258]
[-192.78987122 565.15057373]
[-182.48030090 554.25506592]
[-172.17074585 543.35949707]
[-161.86119080 532.46392822]
[-151.55162048 521.56842041]
[-161.24678040 503.13497925]
[-163.27604675 482.37799072]
[-157.31834412 462.36148071]
[-144.23320007 446.04827881]
[-125.93679047 435.86151123]
[-105.12135315 433.32461548]
[-84.85905457 438.83355713]
[-76.39063263 426.45266724]
[-67.92220306 414.07180786]
[-59.45377731 401.69094849]
[-50.98535156 389.31008911]
[-42.51692963 376.92922974]
[-41.71789551 362.05606079]
[-27.54055023 355.03372192]
[-19.07212448 342.65286255]
[-10.60369873 330.27200317]
[-2.13527369 317.89111328]
[-6.59314966 300.14334106]
[3.50201964 284.49960327]
[22.13830376 281.13592529]
[30.21166229 268.49389648]
[38.28501892 255.85188293]
[46.25833893 243.14651489]
[54.13112259 230.37861633]
[62.00390244 217.61071777]
[48.36601639 208.48730469]
[42.21020126 193.78767395]
[45.10225677 178.59556580]
[55.57093430 167.86207581]
[69.76462555 164.79241943]
[74.64690399 150.60920715]
[79.52918243 136.42601013]
[84.41146088 122.24279785]
[64.76404572 97.69236755]
[79.91146851 61.45980835]
[76.16277313 46.93578339]
[72.41407776 32.41175842]
[61.47345352 20.98314285]
[65.78452301 6.72607613]
[62.03583145 -7.79794836]
[58.28713608 -22.32197189]
[54.53844070 -36.84599686]
[43.59781647 -48.27461624]
[47.90888977 -62.53168106]
[44.16019440 -77.05570221]
[40.41149902 -91.57972717]
[36.66280365 -106.10375214]
[24.79427719 -117.42056274]
[28.92308044 -133.29144287]
[44.80185699 -137.38980103]
[56.09587860 -125.49959564]
[51.18682861 -109.85244751]
[54.93552399 -95.32842255]
[58.68421936 -80.80439758]
[62.43291473 -66.28037262]
[73.10540771 -55.89061356]
[69.06246185 -40.59469223]
[72.81115723 -26.07066727]
[76.55985260 -11.54664230]
[80.30854797 2.97738194]
[90.98104095 13.36714458]
[86.93810272 28.66306496]
[90.68679810 43.18709183]
[94.43549347 57.71111298]
[109.34399414 59.36536789]
[116.18547821 46.01643372]
[123.02696991 32.66749954]
[129.76287842 19.26497650]
[136.39277649 5.80970478]
[143.02268982 -7.64556742]
[144.59980774 -24.52600098]
[161.25714111 -27.68348503]
[168.90243530 -12.55120754]
[156.47795105 -1.01566219]
[149.84805298 12.43961048]
[143.21813965 25.89488220]
[143.08158875 33.29167175]
[136.37590027 39.50898743]
[129.53440857 52.85792160]
[122.69292450 66.20685577]
[133.82952881 76.25553894]
[146.40744019 68.08264160]
[158.98535156 59.90974808]
[171.56324768 51.73685455]
[184.14115906 43.56395721]
[185.86311340 28.02147102]
[197.20834351 17.25952530]
[212.82000732 16.35958290]
[225.32675171 25.74656868]
[228.82325745 40.98823547]
[221.65859985 54.88793564]
[207.21569824 60.88265228]
[192.31405640 56.14186859]
[179.73614502 64.31476593]
[167.15824890 72.48765564]
[154.58033752 80.66055298]
[142.00242615 88.83345032]
[140.68560791 102.19465637]
[135.48721313 113.66725159]
[127.42704773 122.24084473]
[117.74544525 127.34078979]
[107.73797607 128.85871887]
[98.59466553 127.12507629]
[93.71238708 141.30828857]
[88.83010864 155.49148560]
[83.94783020 169.67469788]
[93.02702332 178.84216309]
[96.60487366 191.95079041]
[93.11266327 205.79110718]
[107.47747040 210.10995483]
[121.84226990 214.42880249]
[136.20707703 218.74765015]
[150.57186890 223.06649780]
[164.93667603 227.38536072]
[180.76533508 223.09751892]
[192.20065308 234.85189819]
[187.47895813 250.55659485]
[171.45751953 254.05596924]
[160.61782837 241.75015259]
[146.25302124 237.43130493]
[131.88822937 233.11245728]
[117.52342224 228.79360962]
[103.15861511 224.47476196]
[88.79381561 220.15591431]
[74.77180481 225.48348999]
[66.89902496 238.25140381]
[59.02624130 251.01930237]
[57.18284225 259.97604370]
[50.92704773 263.92523193]
[42.85369110 276.56726074]
[34.78033066 289.20928955]
[39.55512619 300.10955811]
[38.48161697 311.84082031]
[31.94223595 321.49484253]
[21.65991211 326.73458862]
[10.24558926 326.35955811]
[1.77716434 338.74041748]
[-6.69126081 351.12127686]
[-15.15968609 363.50213623]
[-16.56443787 379.26086426]
[-30.13606453 385.39764404]
[-38.60448837 397.77850342]
[-47.07291412 410.15939331]
[-55.54133987 422.54025269]
[-64.00976562 434.92111206]
[-72.47818756 447.30197144]
[-65.92457581 454.46142578]
[-60.74358368 462.66262817]
[-57.09697723 471.64596558]
[-55.09799194 481.12741089]
[-54.80780411 490.80752563]
[-56.23365402 500.38098145]
[-59.32868576 509.54614258]
[-63.99348068 518.01464844]
[-70.07925415 525.52026367]
[-77.39260864 531.82751465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 42]
[7 41]
[8 40]
[9 39]
[10 38]
[11 37]
[12 36]
[14 34]
[15 33]
[16 32]
[17 31]
[19 30]
[20 29]
[49 188]
[50 187]
[51 186]
[52 185]
[53 184]
[54 183]
[56 181]
[57 180]
[58 179]
[59 178]
[62 173]
[63 172]
[64 171]
[65 169]
[66 168]
[67 167]
[72 148]
[73 147]
[74 146]
[75 145]
[77 106]
[78 105]
[79 104]
[81 102]
[82 101]
[83 100]
[84 99]
[86 97]
[87 96]
[88 95]
[89 94]
[107 122]
[108 121]
[109 120]
[110 118]
[111 117]
[112 116]
[123 139]
[124 138]
[125 137]
[126 136]
[127 135]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
