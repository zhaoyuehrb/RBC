%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:01:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGAAGGAGCGCGGUGGCGCGGGAGCGGCCCCGGGGACCCCGCGCUGCUGACGGCGGCGACCGCGGCCGGAGGCGGGCGCGGGUCUCGGAGGCGGUCGCCUCAGCACCGCCCCACGGGCGGCCCCAGCCCCUCCCGCAGCCCUCCUCCCUCCCGCUCCCUUCCCGCCGCCUCCUCCCCGCCCUCCUCCCUCCUCGCUCGCGGGCCGGGCCCGGCAUGGUGCGGCGUCGCCGCCG\
) } def
/len { sequence length } bind def

/coor [
[433.57015991 535.19818115]
[442.74774170 514.71240234]
[433.05523682 503.26443481]
[423.36276245 491.81646729]
[413.67025757 480.36853027]
[396.85290527 475.32775879]
[393.74682617 457.16909790]
[383.90341187 445.85061646]
[374.06002808 434.53216553]
[364.21664429 423.21368408]
[354.37326050 411.89520264]
[347.62438965 408.91598511]
[344.47561646 400.36087036]
[334.78314209 388.91290283]
[325.09063721 377.46496582]
[315.39816284 366.01699829]
[305.70565796 354.56906128]
[296.01318359 343.12109375]
[286.32067871 331.67315674]
[271.50576782 332.96032715]
[258.62130737 325.18511963]
[252.71670532 311.14984131]
[256.24954224 296.15567017]
[246.55703735 284.70770264]
[236.86454773 273.25976562]
[227.17205811 261.81179810]
[217.47956848 250.36384583]
[207.78707886 238.91589355]
[198.09458923 227.46794128]
[188.40209961 216.02000427]
[173.76972961 218.80557251]
[159.61351013 213.86012268]
[149.76832581 202.41728210]
[146.95413208 187.48486328]
[152.02513123 173.05461121]
[142.33264160 161.60665894]
[132.64015198 150.15870667]
[122.94765472 138.71075439]
[113.25516510 127.26280212]
[82.91008759 131.44314575]
[59.04901123 105.04357147]
[44.12307739 103.55476379]
[29.19714737 102.06595612]
[14.27121449 100.57714844]
[-0.65471750 99.08834076]
[-15.58064938 97.59953308]
[-30.50658226 96.11072540]
[-45.43251419 94.62192535]
[-60.36798477 93.23207092]
[-75.31233978 91.94124603]
[-90.25669861 90.65041351]
[-102.28605652 100.54649353]
[-117.42337036 99.02452087]
[-126.78363037 87.49537659]
[-141.72798157 86.20455170]
[-156.67234802 84.91371918]
[-171.61669922 83.62289429]
[-186.03150940 90.14391327]
[-198.04573059 81.34006500]
[-212.99009705 80.04923248]
[-227.60780334 87.48258209]
[-241.20469666 78.31436157]
[-239.79347229 61.97604752]
[-224.82585144 55.27510071]
[-211.69926453 65.10488129]
[-196.75489807 66.39570618]
[-183.40901184 59.78236008]
[-170.32586670 68.67853546]
[-155.38151550 69.96936035]
[-140.43716431 71.26019287]
[-125.49280548 72.55102539]
[-114.29425049 62.79766083]
[-99.12016296 63.89385986]
[-88.96586609 75.70606232]
[-74.02151489 76.99688721]
[-59.07715607 78.28771973]
[-52.15511322 75.73651123]
[-43.94370651 79.69599152]
[-29.01777458 81.18479919]
[-14.09184265 82.67360687]
[0.83408946 84.16240692]
[15.76002216 85.65121460]
[30.68595314 87.14002228]
[45.61188507 88.62882996]
[60.53781891 90.11763763]
[64.91397095 84.02672577]
[52.73227692 75.27422333]
[61.48496246 63.09265900]
[73.66628265 71.84488678]
[78.04244232 65.75397491]
[71.86882019 52.08333206]
[65.49617767 45.56457901]
[65.70530701 38.19032669]
[59.71343613 24.43905258]
[53.72156525 10.68778038]
[47.72969437 -3.06349134]
[41.73782349 -16.81476402]
[35.74595261 -30.56603622]
[29.46028328 -37.16868591]
[29.76713753 -44.53952026]
[23.95806885 -58.36901093]
[10.57814407 -67.85107422]
[12.36909866 -84.15213776]
[27.48855209 -90.50305176]
[40.38290787 -80.37055206]
[37.78755569 -64.17807770]
[43.59662628 -50.34859085]
[49.49722290 -36.55790710]
[55.48909378 -22.80663490]
[61.48096466 -9.05536175]
[67.47283936 4.69590998]
[73.46470642 18.44718170]
[79.45658112 32.19845200]
[85.53945923 45.90970993]
[91.71308136 59.58035278]
[96.18478394 64.41657257]
[99.65437317 69.68762207]
[103.19953918 55.11258316]
[106.74470520 40.53754425]
[110.28987122 25.96250343]
[103.76811981 6.87594557]
[117.75268555 -6.49250746]
[120.91024780 -21.15640259]
[124.06781006 -35.82029724]
[118.52925110 -51.25585175]
[129.33259583 -63.59358978]
[145.36428833 -60.14150238]
[150.13229370 -44.45080185]
[138.73170471 -32.66273499]
[135.57414246 -17.99884033]
[132.41658020 -3.33494496]
[138.69773865 4.69717360]
[139.54832458 15.07819271]
[134.44830322 24.41072845]
[124.86490631 29.50766945]
[121.31974030 44.08271027]
[117.77457428 58.65774918]
[114.22940826 73.23278809]
[120.25013733 77.44137573]
[125.08177185 82.97460175]
[128.44061279 89.50756073]
[130.12940979 96.65663910]
[130.04901123 104.00203705]
[128.20413208 111.11243439]
[124.70311737 117.57030487]
[134.39561462 129.01826477]
[144.08810425 140.46621704]
[153.78059387 151.91416931]
[163.47308350 163.36212158]
[178.54209900 160.74067688]
[192.80583191 165.97926331]
[202.46810913 177.57696533]
[205.01091003 192.35499573]
[199.85005188 206.32749939]
[209.54254150 217.77545166]
[219.23503113 229.22340393]
[228.92752075 240.67135620]
[238.62001038 252.11930847]
[248.31250000 263.56726074]
[258.00500488 275.01522827]
[267.69747925 286.46316528]
[283.06900024 285.45184326]
[295.93814087 293.59051514]
[301.48175049 307.58096313]
[297.76861572 321.98065186]
[307.46112061 333.42861938]
[317.15362549 344.87655640]
[326.84609985 356.32452393]
[336.53860474 367.77246094]
[346.23107910 379.22042847]
[355.92358398 390.66836548]
[365.69174194 402.05181885]
[375.53512573 413.37030029]
[385.37850952 424.68875122]
[395.22189331 436.00723267]
[405.06527710 447.32571411]
[417.84313965 448.99560547]
[425.80889893 458.61041260]
[425.11822510 470.67602539]
[434.81069946 482.12396240]
[444.50320435 493.57192993]
[454.19567871 505.01986694]
[461.78137207 501.59564209]
[469.87774658 499.70513916]
[478.17834473 499.41659546]
[486.36953735 500.73754883]
[494.14254761 503.61486816]
[501.20498657 507.93676758]
[507.29183960 513.53723145]
[512.17547607 520.20227051]
[515.67419434 527.67828369]
[517.65887451 535.68145752]
[518.05767822 543.90887451]
[516.85894775 552.04956055]
[514.11126709 559.79663086]
[509.92141724 566.85858154]
[504.45053101 572.97045898]
[512.54492188 585.59899902]
[524.94451904 589.10778809]
[531.42883301 599.77795410]
[528.99237061 611.61517334]
[536.91864014 624.34991455]
[544.84497070 637.08465576]
[552.77124023 649.81939697]
[560.78173828 662.50134277]
[568.87615967 675.12988281]
[576.97058105 687.75848389]
[585.06494141 700.38702393]
[599.02593994 707.83020020]
[599.37988281 722.72064209]
[607.47430420 735.34918213]
[615.56866455 747.97772217]
[631.05932617 751.11053467]
[639.72796631 764.32531738]
[636.43157959 779.78204346]
[623.12585449 788.31042480]
[607.70489502 784.85083008]
[599.31762695 771.45568848]
[602.94012451 756.07214355]
[594.84570312 743.44360352]
[586.75128174 730.81500244]
[573.36926270 724.27514648]
[572.43640137 708.48144531]
[564.34197998 695.85284424]
[556.24761963 683.22430420]
[548.15319824 670.59576416]
[541.90881348 666.66754150]
[540.03649902 657.74572754]
[532.11016846 645.01092529]
[524.18389893 632.27618408]
[516.25762939 619.54144287]
[500.35110474 612.11065674]
[499.91635132 593.69342041]
[491.82196045 581.06481934]
[469.84362793 583.97381592]
[449.35375977 575.32769775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 182]
[3 181]
[4 180]
[5 179]
[7 176]
[8 175]
[9 174]
[10 173]
[11 172]
[13 171]
[14 170]
[15 169]
[16 168]
[17 167]
[18 166]
[19 165]
[23 161]
[24 160]
[25 159]
[26 158]
[27 157]
[28 156]
[29 155]
[30 154]
[35 149]
[36 148]
[37 147]
[38 146]
[39 145]
[41 85]
[42 84]
[43 83]
[44 82]
[45 81]
[46 80]
[47 79]
[48 78]
[49 76]
[50 75]
[51 74]
[54 71]
[55 70]
[56 69]
[57 68]
[59 66]
[60 65]
[90 115]
[91 114]
[93 113]
[94 112]
[95 111]
[96 110]
[97 109]
[98 108]
[100 107]
[101 106]
[117 138]
[118 137]
[119 136]
[120 135]
[122 131]
[123 130]
[124 129]
[197 234]
[198 233]
[201 231]
[202 230]
[203 229]
[204 228]
[205 226]
[206 225]
[207 224]
[208 223]
[210 221]
[211 220]
[212 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
