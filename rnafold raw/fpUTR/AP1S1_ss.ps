%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGACGGGGCGGGGCUUCGGGCGAGAGGGAGGGCAGCAGGAGAAAGGAUAAGAAAGGGAGUGGGACUGGCGCCUACGGUGGCCGAAGUGGGACGCGCCGAGCCGGAGGCUGCAGG\
) } def
/len { sequence length } bind def

/coor [
[166.20300293 398.91201782]
[178.02210999 389.30844116]
[174.07557678 374.83694458]
[170.12902832 360.36541748]
[157.10986328 353.22140503]
[152.90135193 338.60144043]
[160.48291016 324.99420166]
[156.53637695 310.52267456]
[152.58984375 296.05114746]
[141.77656555 285.80798340]
[145.61039734 270.45831299]
[141.66386414 255.98681641]
[137.71733093 241.51528931]
[121.35154724 233.52507019]
[115.80461121 215.84687805]
[124.97925568 199.38732910]
[120.26810455 185.14636230]
[115.55695343 170.90541077]
[110.84580231 156.66444397]
[106.13465118 142.42347717]
[101.42350006 128.18251038]
[96.71235657 113.94155121]
[86.40087891 104.49881744]
[89.04668427 90.76959991]
[84.33553314 76.52864075]
[72.73496246 73.30168915]
[64.26181793 64.91717529]
[60.98023605 53.58303452]
[63.60878372 42.20373154]
[71.36691284 33.63606644]
[60.51552963 26.51035118]
[57.57530594 14.27950668]
[63.60452271 3.70020080]
[60.04462433 -10.87124729]
[56.48472214 -25.44269562]
[52.92482376 -40.01414490]
[39.69934082 -48.24362564]
[36.29667282 -63.07185745]
[44.22372818 -75.62962341]
[40.66382980 -90.20106506]
[37.10392761 -104.77251434]
[22.04099083 -104.53656006]
[7.30331612 -107.65884399]
[-6.36986160 -113.98276520]
[-18.29270172 -123.19110870]
[-27.86715698 -134.82199097]
[-34.61297989 -148.29202271]
[-38.19180298 -162.92553711]
[-38.42411041 -177.98854065]
[-35.29825211 -192.72544861]
[-28.97101974 -206.39709473]
[-19.75978470 -218.31770325]
[-8.12657833 -227.88934326]
[5.34508276 -234.63189697]
[19.97946548 -238.20718384]
[35.04251480 -238.43583679]
[49.77867508 -235.30641174]
[63.44878387 -228.97586060]
[75.36716461 -219.76173401]
[84.93598175 -208.12622070]
[91.67527771 -194.65292358]
[95.24700165 -180.01766968]
[95.47201538 -164.95457458]
[92.33901215 -150.21916199]
[86.00515747 -136.55058289]
[76.78814697 -124.63444519]
[65.15029907 -115.06844330]
[51.67537689 -108.33242035]
[55.23527527 -93.76097107]
[58.79517746 -79.18952179]
[71.61956024 -71.70146942]
[75.43737793 -56.97466278]
[67.49626923 -43.57404327]
[71.05617523 -29.00259590]
[74.61607361 -14.43114853]
[78.17597198 0.14030018]
[90.97344208 12.06789780]
[85.83842468 29.68952942]
[102.20420837 37.67975235]
[107.75114441 55.35794067]
[98.57649994 71.81748962]
[103.28764343 86.05844879]
[113.59912109 95.50118256]
[110.95331573 109.23040009]
[115.66446686 123.47135925]
[120.37561798 137.71232605]
[125.08676910 151.95329285]
[129.79791260 166.19425964]
[134.50906372 180.43521118]
[139.22021484 194.67617798]
[150.82078552 197.90312195]
[159.29394531 206.28764343]
[162.57551575 217.62178040]
[159.94697571 229.00108337]
[152.18884277 237.56875610]
[156.13537598 252.04026794]
[160.08192444 266.51177979]
[171.17747498 277.79003906]
[167.06135559 292.10461426]
[171.00790405 306.57614136]
[174.95443726 321.04763794]
[188.39430237 328.92214966]
[192.19050598 343.65454102]
[184.60055542 356.41888428]
[188.54708862 370.89038086]
[192.49362183 385.36190796]
[207.55183411 387.63574219]
[220.37983704 395.84320068]
[228.75509644 408.56228638]
[231.22657776 423.58932495]
[227.36604309 438.32077026]
[217.84239197 450.20437622]
[204.30561829 457.18118286]
[189.10107422 458.04244995]
[174.86303711 452.63891602]
[164.05831909 441.90679932]
[158.55891418 427.70553589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 106]
[3 105]
[4 104]
[7 101]
[8 100]
[9 99]
[11 97]
[12 96]
[13 95]
[16 90]
[17 89]
[18 88]
[19 87]
[20 86]
[21 85]
[22 84]
[24 82]
[25 81]
[30 78]
[33 76]
[34 75]
[35 74]
[36 73]
[39 70]
[40 69]
[41 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
