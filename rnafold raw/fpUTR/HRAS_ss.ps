%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGUCUCCGCCGCCCGUGCCCUGCGCCCGCAACCCGAGCCGCACCCGCCGCGGACGGAGCCCAUGCGCGGGGCGAACCGCGCGCCCCCGCCCCCGCCCCGCCCCGGCCUCGGCCCCGGCCCUGGCCCCGGGGGCAGUCGCGCCUGUGAACGGUGGGGCAGGAGACCCUGUAGGAGGACCCCGGGCCGCAGGCCCCUGAGGAGCG\
) } def
/len { sequence length } bind def

/coor [
[164.65235901 293.78588867]
[179.46618652 291.42993164]
[193.60003662 296.45330811]
[203.60485840 307.63113403]
[195.77714539 294.83557129]
[187.94941711 282.03997803]
[180.12168884 269.24441528]
[172.29396057 256.44885254]
[164.46624756 243.65325928]
[156.54118347 230.91775513]
[148.51924133 218.24304199]
[140.49728394 205.56831360]
[127.15292358 198.95190430]
[126.31050873 183.15313721]
[118.19215393 170.53996277]
[109.97785187 157.98904419]
[101.76355743 145.43814087]
[93.54925537 132.88723755]
[79.84917450 126.77921295]
[65.02326965 129.05792236]
[50.19736481 131.33663940]
[35.37145996 133.61534119]
[20.54555511 135.89405823]
[5.71964931 138.17277527]
[-9.10625648 140.45147705]
[-23.93216133 142.73019409]
[-38.75806808 145.00889587]
[-49.36884689 160.69996643]
[-67.76325226 163.60661316]
[-82.19161987 152.34457397]
[-96.94113922 155.07435608]
[-102.57883453 164.38204956]
[-112.21103668 168.95434570]
[-122.55181122 167.49882507]
[-130.21801758 160.73562622]
[-145.04393005 163.01434326]
[-159.86982727 165.29304504]
[-168.11619568 175.21408081]
[-180.51443481 176.80497742]
[-190.34634399 169.75373840]
[-205.20527649 171.80609131]
[-220.06420898 173.85844421]
[-234.92314148 175.91079712]
[-243.08746338 189.24787903]
[-257.93096924 194.16770935]
[-272.44497681 188.34729004]
[-279.77642822 174.53485107]
[-276.46365356 159.25219727]
[-264.07083130 149.71533203]
[-248.44946289 150.42727661]
[-236.97549438 161.05186462]
[-222.11656189 158.99951172]
[-207.25762939 156.94715881]
[-192.39869690 154.89480591]
[-179.14735413 143.39219666]
[-162.14854431 150.46714783]
[-147.32263184 148.18843079]
[-132.49673462 145.90972900]
[-118.34422302 132.73757935]
[-99.67092133 140.32484436]
[-84.92140198 137.59506226]
[-80.64579773 127.01249695]
[-71.69889069 119.73408508]
[-60.23171616 117.65889740]
[-49.07419968 121.41667175]
[-41.03677750 130.18299866]
[-26.21087265 127.90428162]
[-11.38496685 125.62557220]
[3.44093871 123.34686279]
[18.26684380 121.06815338]
[33.09275055 118.78944397]
[47.91865540 116.51073456]
[62.74456024 114.23202515]
[77.57046509 111.95330811]
[75.75607300 102.19217682]
[77.83433533 92.91711426]
[83.14877319 85.55238342]
[90.57337189 81.09623718]
[98.73535919 79.98917389]
[103.45755768 65.75186920]
[108.17974854 51.51456070]
[112.68427277 37.20689774]
[116.97008514 22.83220291]
[121.25589752 8.45750999]
[125.54170990 -5.91718388]
[118.28228760 -19.69900131]
[122.83348083 -34.21593094]
[136.01707458 -41.05175018]
[132.54531860 -56.48734283]
[143.59652710 -66.47334290]
[147.88233948 -80.84803772]
[152.16815186 -95.22273254]
[156.45396423 -109.59741974]
[160.73977661 -123.97211456]
[165.02558899 -138.34681702]
[169.31140137 -152.72149658]
[163.75697327 -172.09692383]
[178.36209106 -184.76536560]
[182.20753479 -199.26408386]
[176.06481934 -218.46110535]
[190.27680969 -231.56904602]
[193.67831421 -246.17828369]
[197.07981873 -260.78753662]
[188.99369812 -274.10113525]
[192.65142822 -288.86853027]
[205.39375305 -296.49536133]
[208.79525757 -311.10458374]
[212.19676208 -325.71383667]
[206.91621399 -341.23956299]
[217.92367554 -353.39553833]
[233.89559937 -349.67675781]
[238.40145874 -333.90875244]
[226.80599976 -322.31231689]
[223.40449524 -307.70309448]
[220.00299072 -293.09387207]
[228.06590271 -280.62289429]
[224.82441711 -265.75860596]
[211.68905640 -257.38601685]
[208.28755188 -242.77679443]
[204.88604736 -228.16755676]
[211.04559326 -220.00840759]
[211.70913696 -209.58680725]
[206.41636658 -200.33090210]
[196.70625305 -195.41864014]
[192.86080933 -180.91992188]
[198.76866150 -172.57673645]
[199.11407471 -162.13973999]
[193.54150391 -153.04956055]
[183.68609619 -148.43568420]
[179.40028381 -134.06100464]
[175.11447144 -119.68630219]
[170.82865906 -105.31160736]
[166.54284668 -90.93692017]
[162.25703430 -76.56222534]
[157.97122192 -62.18753052]
[161.74952698 -47.78011322]
[150.39176941 -36.76593781]
[157.67941284 -23.82662392]
[153.53776550 -9.18758678]
[139.91641235 -1.63137114]
[135.63059998 12.74332237]
[131.34478760 27.11801529]
[127.05896759 41.49271011]
[128.50404358 46.04848099]
[127.09976196 51.56042099]
[122.41705322 56.23675156]
[117.69486237 70.47406006]
[112.97267151 84.71136475]
[122.13140106 105.19654083]
[106.10016632 124.67293549]
[114.31446075 137.22384644]
[122.52876282 149.77474976]
[130.74305725 162.32565308]
[138.06399536 167.79518127]
[138.98522949 175.13119507]
[152.90338135 182.65419006]
[153.17201233 197.54637146]
[161.19395447 210.22108459]
[169.21589661 222.89581299]
[176.45256042 228.47633362]
[177.26181030 235.82554626]
[185.08953857 248.62112427]
[192.91726685 261.41668701]
[200.74499512 274.21228027]
[208.57270813 287.00784302]
[216.40043640 299.80340576]
[227.08760071 310.32882690]
[240.00106812 317.96051025]
[252.91452026 325.59219360]
[268.74780273 323.00637817]
[280.54421997 333.87948608]
[279.25451660 349.87063599]
[265.86807251 358.71273804]
[250.65383911 353.62292480]
[245.28283691 338.50564575]
[232.36938477 330.87396240]
[219.45591736 323.24227905]
[208.60900879 333.60397339]
[197.76304626 343.96472168]
[204.79614258 357.21371460]
[211.93005371 370.40869141]
[227.90286255 379.56750488]
[226.86639404 397.08416748]
[234.30026245 410.11251831]
[241.73413086 423.14083862]
[249.16799927 436.16918945]
[256.60186768 449.19754028]
[269.70318604 459.95819092]
[262.98986816 475.52633667]
[246.17167664 473.38507080]
[243.57351685 456.63140869]
[236.13964844 443.60305786]
[228.70578003 430.57470703]
[221.27192688 417.54638672]
[213.83805847 404.51803589]
[202.25419617 401.02508545]
[195.95506287 390.22842407]
[198.78987122 377.64300537]
[192.80772400 373.29791260]
[191.54716492 364.24679565]
[184.51406860 350.99780273]
[169.51502991 351.16824341]
[156.26484680 344.13739014]
[147.99754333 331.62133789]
[146.73097229 316.67492676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[9 161]
[10 159]
[11 158]
[12 157]
[14 155]
[15 153]
[16 152]
[17 151]
[18 150]
[19 74]
[20 73]
[21 72]
[22 71]
[23 70]
[24 69]
[25 68]
[26 67]
[27 66]
[30 61]
[31 60]
[35 58]
[36 57]
[37 56]
[40 54]
[41 53]
[42 52]
[43 51]
[79 148]
[80 147]
[81 146]
[82 143]
[83 142]
[84 141]
[85 140]
[88 137]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[96 129]
[98 125]
[99 124]
[101 120]
[102 119]
[103 118]
[106 115]
[107 114]
[108 113]
[167 177]
[168 176]
[169 175]
[179 201]
[180 200]
[181 198]
[183 195]
[184 194]
[185 193]
[186 192]
[187 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
