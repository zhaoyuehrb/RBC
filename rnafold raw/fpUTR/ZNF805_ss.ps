%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCGGCGCUGGGGAAAUGAGCAGGUAGGAGGCCGACAGCGACCUCCGCGUCUCGGAGCGAACCGUGAGCCUCCCCGUAACGAGAGAGUUUGACUGUCAGCCAAGGUCACCGGGCCCGGCGCAGGGAAGGGGUGGGGCUCGGCUGAGCCCGCGAGACCCGCCCUGCUCGCCGCAGCCCCCGCCCCGCUAGGGCCACAGGGUCCCGGU\
) } def
/len { sequence length } bind def

/coor [
[214.73171997 421.46694946]
[215.64956665 416.32366943]
[210.54292297 402.21966553]
[205.43627930 388.11569214]
[200.32963562 374.01171875]
[195.22300720 359.90774536]
[181.20921326 349.34622192]
[184.58485413 331.24520874]
[179.26577759 317.21994019]
[173.94671631 303.19470215]
[168.62763977 289.16946411]
[156.87997437 280.01293945]
[159.22087097 264.36587524]
[153.90179443 250.34063721]
[150.85145569 248.56770325]
[148.50917053 245.22804260]
[147.60250854 240.67097473]
[148.67527771 235.55773926]
[143.99694824 221.30596924]
[139.31861877 207.05418396]
[134.64030457 192.80239868]
[129.96197510 178.55062866]
[125.28364563 164.29884338]
[120.60531616 150.04705811]
[115.92698669 135.79527283]
[101.96208954 138.24787903]
[88.36702728 135.56336975]
[76.92574310 128.32911682]
[69.05446625 117.71341705]
[65.62752533 105.28259277]
[66.88414001 92.77193451]
[53.30017853 86.40985870]
[39.71622086 80.04777527]
[23.93713379 81.20146942]
[15.69303989 68.79646301]
[2.10908055 62.43438339]
[-11.47487831 56.07230377]
[-25.05883789 49.71022415]
[-38.64279556 43.34814453]
[-52.27441406 37.08882904]
[-65.95291138 30.93263817]
[-79.63140869 24.77644539]
[-95.39127350 26.16832161]
[-103.82178497 13.88924313]
[-117.50028229 7.73305082]
[-131.17877197 1.57685864]
[-144.90338135 -4.47586012]
[-160.64041138 -2.84611845]
[-169.25541687 -14.99646854]
[-183.02532959 -20.94536781]
[-196.79525757 -26.89426804]
[-211.33610535 -21.30845261]
[-225.21601868 -27.53764153]
[-230.45162964 -41.43454742]
[-244.22154236 -47.38344574]
[-257.99145508 -53.33234787]
[-267.11285400 -53.86337662]
[-271.92333984 -59.47648621]
[-281.03567505 -60.14521408]
[-285.76086426 -65.83033752]
[-299.34481812 -72.19241333]
[-314.04772949 -67.04832458]
[-327.73318481 -73.69389343]
[-332.54666138 -87.74258423]
[-348.83062744 -85.80238342]
[-358.43487549 -99.09488678]
[-351.47937012 -113.94591522]
[-335.11932373 -115.07799530]
[-326.18460083 -101.32654572]
[-312.31076050 -106.62298584]
[-298.44406128 -100.36444092]
[-292.98272705 -85.77637482]
[-279.39877319 -79.41429901]
[-265.76715088 -73.15498352]
[-252.04255676 -67.10226440]
[-238.27264404 -61.15336227]
[-224.50273132 -55.20446396]
[-210.79518127 -60.91751862]
[-196.74578857 -55.08064651]
[-190.84635925 -40.66418457]
[-177.07643127 -34.71528625]
[-163.30651855 -28.76638412]
[-148.55439758 -30.82163048]
[-138.95446777 -18.24577522]
[-131.56571960 -18.47886276]
[-125.02258301 -12.10163879]
[-111.34408569 -5.94544697]
[-97.66558838 0.21074516]
[-82.88410187 -1.62146246]
[-73.47521973 11.09794807]
[-59.79671860 17.25414085]
[-46.11822128 23.41033173]
[-38.72679520 23.28886604]
[-32.28071594 29.76418495]
[-18.69675827 36.12626266]
[-5.11279917 42.48834229]
[8.47115993 48.85042191]
[22.05511856 55.21250153]
[36.86259079 53.60375214]
[46.07830048 66.46381378]
[59.66225815 72.82589722]
[73.24621582 79.18797302]
[85.28021240 69.46750641]
[100.38018799 66.10662842]
[115.40097046 69.80537415]
[125.00415802 58.28241348]
[134.52006531 46.68725586]
[143.94812012 35.02056503]
[153.37619019 23.35387802]
[162.71588135 11.61632252]
[171.96665955 -0.19142966]
[181.21743774 -11.99918175]
[190.46823120 -23.80693436]
[199.71900940 -35.61468506]
[208.96978760 -47.42243958]
[218.22058105 -59.23019028]
[227.47135925 -71.03794098]
[229.89151001 -86.67295074]
[243.83132935 -91.91990662]
[253.08212280 -103.72766113]
[255.50227356 -119.36267090]
[269.44207764 -124.60962677]
[266.03457642 -139.87144470]
[273.28024292 -153.72909546]
[287.75787354 -159.63941956]
[302.63159180 -154.81176758]
[310.87847900 -141.52557373]
[308.60461426 -126.05419922]
[296.88363647 -115.70274353]
[281.24984741 -115.35884094]
[279.49136353 -100.56840515]
[264.88986206 -94.47687531]
[255.63908386 -82.66912842]
[253.88061523 -67.87868500]
[239.27911377 -61.78715897]
[230.02832031 -49.97940826]
[220.77754211 -38.17165375]
[211.52676392 -26.36390305]
[202.27597046 -14.55615139]
[193.02519226 -2.74839878]
[183.77441406 9.05935383]
[174.52362061 20.86710548]
[172.87268066 28.07281876]
[165.04287720 32.78194046]
[155.61480713 44.44863129]
[146.18675232 56.11531830]
[144.42715454 63.29527283]
[136.52713013 67.88560486]
[126.92393494 79.40856934]
[135.15705872 90.05310059]
[138.97720337 103.96839142]
[153.97720337 103.96839142]
[168.97720337 103.96839142]
[181.29243469 93.68662262]
[196.97993469 97.04550934]
[204.00558472 111.46839142]
[196.97993469 125.89128113]
[181.29243469 129.25016785]
[168.97720337 118.96839142]
[153.97720337 118.96839142]
[138.97720337 118.96839142]
[130.17877197 131.11695862]
[134.85710144 145.36872864]
[139.53543091 159.62051392]
[144.21374512 173.87229919]
[148.89207458 188.12406921]
[153.57040405 202.37585449]
[158.24873352 216.62763977]
[162.92706299 230.87940979]
[167.92704773 245.02156067]
[173.24612427 259.04681396]
[185.37422180 269.20651245]
[182.65287781 283.85040283]
[187.97195435 297.87564087]
[193.29103088 311.90087891]
[198.61009216 325.92611694]
[210.03129578 331.92266846]
[214.17211914 343.71566772]
[209.32698059 354.80108643]
[214.43362427 368.90509033]
[219.54025269 383.00906372]
[224.64689636 397.11303711]
[229.75354004 411.21701050]
[235.17837524 425.20169067]
[240.91862488 439.05987549]
[246.65887451 452.91809082]
[250.80500793 456.09698486]
[253.08740234 460.14416504]
[253.48751831 464.20364380]
[252.32949829 467.53637695]
[257.43615723 481.64035034]
[262.54278564 495.74432373]
[267.64941406 509.84829712]
[272.75607300 523.95227051]
[285.64248657 534.09484863]
[283.03448486 550.28527832]
[267.61495972 555.86828613]
[255.24617004 545.10046387]
[258.65209961 529.05889893]
[253.54544067 514.95495605]
[248.43881226 500.85095215]
[243.33216858 486.74697876]
[238.22552490 472.64300537]
[232.80068970 458.65832520]
[227.06044006 444.80014038]
[221.32019043 430.94195557]
[218.21768188 429.26196289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 183]
[3 182]
[4 181]
[5 180]
[6 179]
[8 176]
[9 175]
[10 174]
[11 173]
[13 171]
[14 170]
[18 169]
[19 168]
[20 167]
[21 166]
[22 165]
[23 164]
[24 163]
[25 162]
[31 102]
[32 101]
[33 100]
[35 98]
[36 97]
[37 96]
[38 95]
[39 94]
[40 92]
[41 91]
[42 90]
[44 88]
[45 87]
[46 86]
[47 84]
[49 82]
[50 81]
[51 80]
[54 77]
[55 76]
[56 75]
[58 74]
[60 73]
[61 72]
[64 69]
[105 149]
[106 148]
[107 146]
[108 145]
[109 144]
[110 142]
[111 141]
[112 140]
[113 139]
[114 138]
[115 137]
[116 136]
[117 135]
[119 133]
[120 132]
[122 130]
[151 161]
[152 160]
[153 159]
[184 206]
[185 205]
[186 204]
[190 203]
[191 202]
[192 201]
[193 200]
[194 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
