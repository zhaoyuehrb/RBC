%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACAUUCGGCUUCUUCCUAAUGUCAAAUGAGUGCUGUUAAAGUUCCUCCAGGAAACUUCAGCAGAGAAAAACAUUUGCUUCACAUCUCAUCAAAUCUUCUGCAUCAAGCCACAUC\
) } def
/len { sequence length } bind def

/coor [
[79.21908569 535.82757568]
[64.06744385 534.60437012]
[50.53951645 527.67156982]
[40.69821548 516.08636475]
[36.04426575 501.61541748]
[37.28736496 486.46539307]
[44.23794556 472.94659424]
[55.83609390 463.12054443]
[70.31317902 458.48562622]
[71.52017975 443.53427124]
[72.72718048 428.58291626]
[73.93418121 413.63153076]
[75.14117432 398.68017578]
[60.37496948 394.56353760]
[46.68186951 387.66220093]
[34.58150864 378.23605347]
[24.53345299 366.64080811]
[16.91976738 353.31463623]
[12.03048515 338.76153564]
[10.05255222 323.53240967]
[11.06268787 308.20397949]
[15.02440739 293.35714722]
[21.78933525 279.55493164]
[31.10276604 267.32107544]
[42.61324692 257.12014771]
[55.88584900 249.34004211]
[70.41859436 244.27705383]
[85.66143799 242.12472534]
[86.46658325 227.14634705]
[87.27173615 212.16796875]
[88.07688141 197.18959045]
[88.88203430 182.21121216]
[89.48602295 167.22338867]
[89.88874054 152.22879028]
[86.88360596 145.36854553]
[90.50894928 136.83853149]
[91.31410217 121.86014557]
[81.96334076 115.09933472]
[76.95281219 104.70511627]
[77.48821259 93.17868805]
[83.44070435 83.29369354]
[76.82895660 69.82949066]
[70.21721649 56.36528397]
[63.60546875 42.90107727]
[56.99372482 29.43687248]
[50.20181656 16.06264305]
[43.23096848 2.78080344]
[29.08892822 -5.52188826]
[29.47880554 -21.91640091]
[43.99953079 -29.53746414]
[57.71342468 -20.54518318]
[56.51280975 -4.19004393]
[63.48365784 9.09179592]
[69.45617676 13.61096573]
[70.45793152 22.82512856]
[77.06967163 36.28933334]
[83.68141937 49.75354004]
[90.29316711 63.21774673]
[96.90490723 76.68195343]
[102.20738220 76.58123779]
[107.39764404 77.67096710]
[116.40878296 65.67932129]
[125.41991425 53.68768311]
[134.43104553 41.69604111]
[143.44218445 29.70439911]
[152.45332336 17.71275711]
[147.76808167 2.91991329]
[152.70460510 -11.79098225]
[165.36466980 -20.76328850]
[180.88023376 -20.54697037]
[193.28524780 -11.22520733]
[197.80973816 3.61759257]
[192.71392822 18.27407074]
[179.95726013 27.10851097]
[164.44496155 26.72389221]
[155.43382263 38.71553421]
[146.42268372 50.70717621]
[137.41156006 62.69881821]
[128.40042114 74.69046021]
[119.38928986 86.68209839]
[122.10398102 108.04518890]
[106.29247284 122.66529846]
[105.48732758 137.64367676]
[104.88333893 152.63151550]
[104.48061371 167.62609863]
[107.40782166 176.42018127]
[103.86041260 183.01637268]
[103.05525970 197.99473572]
[102.25011444 212.97311401]
[101.44496155 227.95149231]
[100.63980865 242.92987061]
[114.90625763 246.47012329]
[128.26736450 252.58761597]
[140.26223755 261.06964111]
[150.47737122 271.62194824]
[158.56100464 283.87890625]
[164.23515320 297.41629028]
[167.30523682 311.76583862]
[167.66668701 326.43154907]
[165.30856323 340.90676880]
[160.31381226 354.69165039]
[152.85643005 367.31057739]
[143.19535828 378.32836914]
[131.66549683 387.36544800]
[118.66605377 394.11083984]
[104.64682770 398.33288574]
[90.09253693 399.88717651]
[88.88553619 414.83853149]
[87.67853546 429.78988647]
[86.47154236 444.74127197]
[85.26454163 459.69262695]
[98.81066132 466.58978271]
[108.68241119 478.14907837]
[113.37441254 492.60775757]
[112.17118073 507.76101685]
[105.25619507 521.29803467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 111]
[10 110]
[11 109]
[12 108]
[13 107]
[28 91]
[29 90]
[30 89]
[31 88]
[32 87]
[33 85]
[34 84]
[36 83]
[37 82]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 53]
[47 52]
[61 80]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
