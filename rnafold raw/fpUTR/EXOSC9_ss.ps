%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:28:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACGUAAUUUUCCUGCGCCUCGGGGCGAGCAGCGGCGCGCAAGGAAAGAUCGGGUUCCGUUUUUCCCGCGGAUUCUGGUGCCUGUGGGGCCGGUGACCCAACACC\
) } def
/len { sequence length } bind def

/coor [
[79.29232025 435.30627441]
[64.21166229 435.46316528]
[49.56597519 431.86392212]
[36.27589035 424.73480225]
[25.17683601 414.52392578]
[16.96650887 401.87319946]
[12.16101933 387.57781982]
[11.06244183 372.53640747]
[13.73983479 357.69448853]
[20.02489471 343.98504639]
[29.52253723 332.26986694]
[41.63573456 323.28533936]
[55.60303879 317.59631348]
[70.54644775 315.56033325]
[72.27194214 300.65991211]
[73.78252411 285.73617554]
[75.07790375 270.79220581]
[76.37327576 255.84823608]
[73.77608490 248.80592346]
[77.92739868 240.49438477]
[79.65288544 225.59394836]
[81.37837219 210.69352722]
[83.10385895 195.79310608]
[84.82935333 180.89268494]
[86.55484009 165.99224854]
[88.06542969 151.06851196]
[89.36080170 136.12454224]
[90.65617371 121.18058014]
[91.95154572 106.23661804]
[89.42630768 98.44184875]
[93.50566864 90.88275909]
[87.40720367 76.28415680]
[96.55718994 64.53141022]
[98.28267670 49.63098907]
[100.00816345 34.73056030]
[87.43773651 23.52270699]
[84.00323486 7.20406628]
[90.85263062 -7.81912947]
[105.13559723 -15.76763630]
[106.43096924 -30.71159935]
[107.72634125 -45.65555954]
[109.02171326 -60.59952545]
[106.66381836 -65.60070801]
[106.57859802 -70.49573517]
[108.31577301 -74.40119171]
[111.12944031 -76.75923157]
[113.71050262 -91.53549957]
[116.29157257 -106.31176758]
[118.87263489 -121.08803558]
[121.45370483 -135.86430359]
[124.03476715 -150.64056396]
[126.61583710 -165.41683960]
[124.99827576 -174.56553650]
[129.49008179 -180.57913208]
[132.49589539 -195.27487183]
[135.50170898 -209.97062683]
[132.75198364 -226.70010376]
[148.06646729 -233.97355652]
[159.29513550 -221.27105713]
[150.19746399 -206.96481323]
[147.19165039 -192.26905823]
[144.18583679 -177.57331848]
[141.39210510 -162.83576965]
[138.81103516 -148.05950928]
[136.22996521 -133.28323364]
[133.64891052 -118.50696564]
[131.06784058 -103.73069763]
[128.48677063 -88.95442963]
[125.90570831 -74.17816162]
[123.96567535 -59.30414963]
[122.67030334 -44.36018753]
[121.37493134 -29.41622734]
[120.07955933 -14.47226429]
[130.98893738 -6.63173771]
[136.60939026 5.69031382]
[135.35852051 19.28498650]
[127.45910645 30.55264854]
[114.90859222 36.45605087]
[113.18310547 51.35647583]
[111.45761108 66.25690460]
[117.67950439 79.78972626]
[108.40609741 92.60824585]
[106.89550781 107.53199005]
[105.60013580 122.47595215]
[104.30476379 137.41992188]
[103.00939178 152.36387634]
[105.41097260 161.33871460]
[101.45526886 167.71774292]
[99.72977448 182.61816406]
[98.00428772 197.51858521]
[96.27880096 212.41902161]
[94.55331421 227.31944275]
[92.82781982 242.21986389]
[91.31723785 257.14361572]
[90.02186584 272.08758545]
[88.72649384 287.03152466]
[91.12806702 296.00637817]
[87.17236328 302.38540649]
[85.44687653 317.28582764]
[99.52951813 322.68304443]
[111.82701111 331.41360474]
[121.56633759 342.92864990]
[128.13525391 356.50436401]
[131.12084961 371.28735352]
[130.33544922 386.34835815]
[125.82841492 400.74063110]
[117.88306427 413.55944824]
[106.99884796 423.99902344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 99]
[15 98]
[16 96]
[17 95]
[18 94]
[20 93]
[21 92]
[22 91]
[23 90]
[24 89]
[25 88]
[26 86]
[27 85]
[28 84]
[29 83]
[31 82]
[33 80]
[34 79]
[35 78]
[39 73]
[40 72]
[41 71]
[42 70]
[46 69]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[54 62]
[55 61]
[56 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
