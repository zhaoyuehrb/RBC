%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:12:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUAAAGUCAUCAGCGCCCCACUGCGGAAUUCAAAGCUAAGCUGUCACAAUUGUUAACACCUUCUUUGACCAGCCUUUUUACAUUUGACAAUUCUCUUCAGCGCCUCUUUCCUGCCAGCAGGAAGGUUUUGCUGCCUUGGCUUUCGGGAGCCCCCUAGACAGCGAACUGCCCCUUCGCGUGCAGAAGUCGGGGAAGAGUGCUCUCAGCUCGCCUUCCUUGCAGG\
) } def
/len { sequence length } bind def

/coor [
[78.84136200 355.01968384]
[83.10620117 369.48556519]
[83.63871002 384.55764771]
[80.40541077 399.28845215]
[73.60955811 412.75198364]
[63.67833710 424.10195923]
[51.23604202 432.62487793]
[37.06479645 437.78497314]
[22.05542183 439.25790405]
[7.15141964 436.95104980]
[-6.71033239 431.00946045]
[-18.65847397 421.80657959]
[-27.94193268 409.92095947]
[-33.97714233 396.09970093]
[-36.38473129 381.21163940]
[-35.01334763 366.19265747]
[-29.94919968 351.98681641]
[-21.51062775 339.48718262]
[-10.22808456 329.47943115]
[3.18919826 322.59268188]
[17.89780045 319.25982666]
[32.97312546 319.69039917]
[37.10768509 305.27148438]
[41.24224472 290.85253906]
[45.37680435 276.43362427]
[49.30964279 261.95837402]
[53.03999329 247.42962646]
[56.77033997 232.90087891]
[60.50069046 218.37213135]
[50.13784027 209.48501587]
[44.58643723 196.94062805]
[44.98119354 183.16226196]
[51.30208206 170.83857727]
[62.36711502 162.39888000]
[76.05299377 159.53433228]
[79.98583221 145.05908203]
[83.91866302 130.58384705]
[87.85150146 116.10859680]
[79.34477997 106.43023682]
[78.08971405 92.71410370]
[85.59924316 80.12118530]
[71.93898773 73.92461395]
[58.27873611 67.72805023]
[44.61848068 61.53148270]
[31.26930809 71.29621124]
[14.91071033 72.98384094]
[0.02024703 66.22771454]
[-9.37436008 52.95935440]
[-10.78459263 36.85737228]
[-24.53003311 30.85213470]
[-38.27547455 24.84689903]
[-52.02091599 18.84166336]
[-65.76635742 12.83642864]
[-79.51179504 6.83119345]
[-93.25724030 0.82595778]
[-107.00267792 -5.17927790]
[-120.74812317 -11.18451309]
[-129.59835815 1.00102484]
[-140.86151123 10.99879360]
[-154.01078796 18.34117889]
[-168.43116760 22.68476486]
[-183.44818115 23.82639313]
[-198.35946655 21.71266747]
[-212.46757507 16.44245148]
[-225.11267090 8.26224327]
[-235.70329285 -2.44535494]
[-243.74412537 -15.17952919]
[-248.85905457 -29.34467888]
[-250.80888367 -44.27827454]
[-249.50238037 -59.28184509]
[-245.00065613 -73.65364838]
[-237.51429749 -86.72148132]
[-227.39341736 -97.87414551]
[-215.11140442 -106.59001160]
[-201.24270630 -112.46141815]
[-186.43600464 -115.21374512]
[-171.38380432 -114.71826935]
[-156.79014587 -110.99816132]
[-143.33760071 -104.22741699]
[-131.65534973 -94.72271729]
[-122.28981781 -82.92861938]
[-115.67903137 -69.39674377]
[-112.13220215 -54.76000977]
[-111.81520844 -39.70299530]
[-114.74288177 -24.92995453]
[-100.99744415 -18.92471886]
[-87.25199890 -12.91948318]
[-73.50656128 -6.91424751]
[-59.76111984 -0.90901220]
[-46.01567841 5.09622335]
[-32.27023697 11.10145855]
[-18.52479744 17.10669518]
[-4.77935696 23.11192894]
[5.65026379 14.30326748]
[18.92085457 10.82888889]
[32.45885849 13.42147064]
[43.61342621 21.63137245]
[50.17546844 33.90341568]
[50.81504822 47.87122726]
[64.47530365 54.06779480]
[78.13555908 60.26436234]
[91.79581451 66.46092987]
[106.79251862 66.14678955]
[120.18131256 59.38362885]
[133.52255249 52.52716064]
[146.81561279 45.57771683]
[160.10865784 38.62827682]
[173.40171814 31.67883682]
[186.69476318 24.72939682]
[199.98782349 17.77995682]
[213.28088379 10.83051586]
[226.57392883 3.88107538]
[239.86698914 -3.06836510]
[253.16003418 -10.01780605]
[266.40426636 -17.05987930]
[271.12841797 -35.41455460]
[287.49285889 -44.32521439]
[304.86709595 -38.53570938]
[317.85748291 -46.03570938]
[330.84783936 -53.53570938]
[343.78555298 -61.12621307]
[356.61602783 -68.89662170]
[369.39193726 -76.75640869]
[382.16781616 -84.61619568]
[394.94372559 -92.47598267]
[407.71963501 -100.33577728]
[416.93069458 -120.76886749]
[438.57534790 -120.47683716]
[450.89257812 -129.03753662]
[463.20980835 -137.59823608]
[475.52706909 -146.15895081]
[487.84429932 -154.71965027]
[500.16152954 -163.28034973]
[512.47875977 -171.84104919]
[519.39501953 -186.07048035]
[534.26177979 -186.98062134]
[546.57897949 -195.54133606]
[554.52502441 -215.44989014]
[575.15325928 -216.26086426]
[587.10119629 -225.32986450]
[599.04919434 -234.39884949]
[610.99713135 -243.46783447]
[622.94506836 -252.53681946]
[628.79772949 -267.85604858]
[645.03143311 -270.17956543]
[654.94635010 -257.11715698]
[648.34283447 -242.10629272]
[632.01403809 -240.58886719]
[620.06610107 -231.51988220]
[608.11816406 -222.45089722]
[596.17022705 -213.38191223]
[584.22222900 -204.31292725]
[584.46679688 -195.45507812]
[580.55340576 -187.35189819]
[573.24395752 -181.87097168]
[564.09771729 -180.33934021]
[555.13970947 -183.22409058]
[542.82244873 -174.66339111]
[536.78723145 -161.04627991]
[521.03948975 -159.52381897]
[508.72222900 -150.96311951]
[496.40499878 -142.40240479]
[484.08776855 -133.84170532]
[471.77053833 -125.28100586]
[459.45327759 -116.72029877]
[447.13604736 -108.15959930]
[447.42504883 -100.30888367]
[444.55929565 -92.89349365]
[438.93469238 -87.14323425]
[431.41091919 -84.04277039]
[423.18038940 -84.16351318]
[415.57943726 -87.55986786]
[402.80352783 -79.70008087]
[390.02761841 -71.84029388]
[377.25170898 -63.98050308]
[364.47579956 -56.12071609]
[360.42990112 -49.94496918]
[351.46618652 -48.24181747]
[347.33447266 -42.12316132]
[338.34783936 -40.54532623]
[325.35748291 -33.04532623]
[312.36709595 -25.54532623]
[311.87509155 -14.15871906]
[305.88946533 -4.31928968]
[295.79623413 1.47230136]
[284.04141235 1.67929924]
[273.53860474 -3.86515045]
[269.15426636 2.07511711]
[260.10946655 3.27524805]
[246.81642151 10.22468853]
[233.52337646 17.17412949]
[220.23031616 24.12356949]
[206.93725586 31.07300949]
[193.64421082 38.02244949]
[180.35115051 44.97188950]
[167.05810547 51.92133331]
[153.76504517 58.87077332]
[140.47200012 65.82021332]
[136.00514221 71.69868469]
[126.94447327 72.77241516]
[113.55568695 79.53557587]
[120.80241394 88.70146179]
[122.79754639 99.78651428]
[119.45864868 110.10144806]
[111.95131683 117.32851410]
[102.32675171 120.04143524]
[98.39391327 134.51667786]
[94.46107483 148.99192810]
[90.52823639 163.46717834]
[102.30163574 175.08343506]
[106.58299255 190.96177673]
[102.29447937 206.74087524]
[90.69882202 218.13598633]
[75.02943420 222.10247803]
[71.29908752 236.63122559]
[67.56874084 251.15997314]
[63.83839035 265.68872070]
[65.24211884 272.13275146]
[63.45570374 277.51434326]
[59.79573059 280.56817627]
[55.66117096 294.98712158]
[51.52661133 309.40603638]
[47.39205170 323.82495117]
[60.40481567 331.44851685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 223]
[23 222]
[24 221]
[25 220]
[26 217]
[27 216]
[28 215]
[29 214]
[35 209]
[36 208]
[37 207]
[38 206]
[41 102]
[42 101]
[43 100]
[44 99]
[49 93]
[50 92]
[51 91]
[52 90]
[53 89]
[54 88]
[55 87]
[56 86]
[57 85]
[103 201]
[104 200]
[105 198]
[106 197]
[107 196]
[108 195]
[109 194]
[110 193]
[111 192]
[112 191]
[113 190]
[114 189]
[115 187]
[118 182]
[119 181]
[120 180]
[121 178]
[122 176]
[123 175]
[124 174]
[125 173]
[126 172]
[128 166]
[129 165]
[130 164]
[131 163]
[132 162]
[133 161]
[134 160]
[136 158]
[137 157]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
