%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUUUAGAAGCCGUUGCUGCCCUCUCUGUCACCUGAAGCGGGGCCCUCUCCCAUCCCACCCUUGCCCCGCCUCCCUGCCCCCACCGGGCCGGCCCUGCCCGCCGCCGGACCCUGGCAUGUCAAGACCUGGUCCGCGCCUGCCUGCCCAGCCCGCGGAACCCCGGCGGCCCCGCGAGCUAGG\
) } def
/len { sequence length } bind def

/coor [
[102.83963776 492.47073364]
[90.89221954 501.86898804]
[76.25632477 505.97497559]
[61.16382599 504.16253662]
[47.91622162 496.70803833]
[38.53367615 484.74826050]
[34.44695282 470.10696411]
[36.27925491 455.01687622]
[43.75116730 441.77908325]
[55.72327423 432.41229248]
[70.36991882 428.34481812]
[72.15840912 413.45184326]
[73.94690704 398.55883789]
[75.60819244 383.65112305]
[77.14215088 368.72976685]
[78.67611694 353.80841064]
[69.48572540 336.81164551]
[81.48637390 320.63397217]
[82.51000977 305.66894531]
[83.53364563 290.70388794]
[84.55728149 275.73886108]
[85.58091736 260.77383423]
[86.60455322 245.80880737]
[72.55483246 235.14047241]
[67.66118622 218.02841187]
[74.05789185 201.25154114]
[89.36737823 191.57363892]
[89.87949371 176.58238220]
[90.39160919 161.59112549]
[90.90372467 146.59986877]
[91.41584015 131.60861206]
[84.26291656 128.72518921]
[77.98249817 124.24916840]
[72.92278290 118.42870331]
[69.36431122 111.58650208]
[67.50435638 104.10191345]
[67.44605255 96.38990021]
[53.31213379 91.36670685]
[37.71770859 94.03586578]
[28.31636047 82.48320770]
[14.18244743 77.46001434]
[0.04853371 72.43682098]
[-14.08538055 67.41362762]
[-28.21929359 62.39043045]
[-42.35320663 57.36723709]
[-56.48712158 52.34404373]
[-65.50981140 64.47180176]
[-77.70734406 73.39993286]
[-91.99513245 78.33454895]
[-107.10271454 78.83687592]
[-121.68673706 74.86223602]
[-134.45039368 66.76406097]
[-144.25875854 55.26242447]
[-150.23965454 41.38005447]
[-151.86129761 26.35136032]
[-148.97946167 11.51267815]
[-141.85041809 -1.81654274]
[-131.10806274 -12.45107841]
[-117.70761871 -19.44531250]
[-102.84062195 -22.17732239]
[-87.82904816 -20.40418053]
[-74.00771332 -14.28355217]
[-62.60559845 -4.35968065]
[-54.63657379 8.48501015]
[-50.80924225 23.10837936]
[-51.46392822 38.21012878]
[-37.33001328 43.23332214]
[-23.19610023 48.25651550]
[-9.06218624 53.27971268]
[5.07172775 58.30290604]
[19.20564079 63.32609940]
[33.33955383 68.34929657]
[47.92303085 65.32083893]
[58.33533096 77.23279572]
[72.46924591 82.25598907]
[75.04531860 78.78546906]
[78.05593109 75.68435669]
[81.44866180 73.00666046]
[85.16442108 70.79900360]
[81.61296082 56.22549820]
[78.06149292 41.65198898]
[74.51002502 27.07848358]
[61.60478973 17.54777336]
[61.15393066 1.51105702]
[73.50330353 -8.72966862]
[89.17953491 -5.31859589]
[96.15715027 9.12759304]
[89.08353424 23.52701759]
[92.63499451 38.10052490]
[96.18646240 52.67403030]
[99.73793030 67.24753571]
[113.04903412 69.95810699]
[124.11555481 77.83623505]
[137.19046021 70.48458099]
[150.26536560 63.13292694]
[152.18038940 47.84767532]
[162.60678101 36.75065994]
[177.39335632 33.95399857]
[190.83052063 40.32427979]
[203.90542603 32.97262955]
[208.27020264 18.01981926]
[221.63473511 10.75045395]
[235.86306763 15.00374699]
[248.93797302 7.65209341]
[257.94149780 -8.39819813]
[275.45938110 -7.54156208]
[288.40689087 -15.11537170]
[301.28924561 -22.79943657]
[314.10552979 -30.59319687]
[326.92181396 -38.38695526]
[339.73809814 -46.18071365]
[352.55441284 -53.97447205]
[365.37069702 -61.76823425]
[369.18484497 -74.10588837]
[380.03976440 -80.32977295]
[391.83276367 -77.57054138]
[404.78027344 -85.14435577]
[408.88909912 -100.16950226]
[422.12759399 -107.66597748]
[436.42645264 -103.65622711]
[444.07052612 -118.16485596]
[460.46563721 -118.52874756]
[468.74591064 -104.37356567]
[460.39331055 -90.26094818]
[444.00027466 -90.70874023]
[440.48739624 -76.27976990]
[427.46469116 -68.41440582]
[412.35406494 -72.19686890]
[399.40658569 -64.62305450]
[391.56756592 -48.93355179]
[373.16445923 -48.95194244]
[360.34817505 -41.15818405]
[347.53186035 -33.36442184]
[334.71557617 -25.57066345]
[321.89929199 -17.77690506]
[309.08300781 -9.98314571]
[304.99176025 -3.80657721]
[295.98068237 -2.16788578]
[283.03320312 5.40592432]
[279.65844727 17.03775787]
[268.91320801 23.44917107]
[256.28961182 20.72700119]
[243.21470642 28.07865334]
[239.45600891 42.44554901]
[226.30091858 50.08742905]
[211.25708008 46.04753494]
[198.18217468 53.39918900]
[196.64332581 68.19006348]
[186.57093811 79.37089539]
[171.67204285 82.51357269]
[157.61701965 76.20783234]
[144.54211426 83.55948639]
[131.46720886 90.91114044]
[127.98523712 117.01819611]
[106.40709686 132.12072754]
[105.89498138 147.11198425]
[105.38286591 162.10324097]
[104.87075043 177.09449768]
[104.35862732 192.08575439]
[115.16478729 198.42428589]
[122.20185089 208.70164490]
[124.18055725 220.92596436]
[120.78484344 232.75955200]
[112.72052765 241.96591187]
[101.56958771 246.83244324]
[100.54594421 261.79748535]
[99.52230835 276.76251221]
[98.49867249 291.72753906]
[97.47503662 306.69256592]
[96.45140076 321.65759277]
[104.08094788 329.45205688]
[106.10626984 339.94555664]
[102.09371948 349.61318970]
[93.59747314 355.34237671]
[92.06351471 370.26373291]
[90.52954865 385.18508911]
[92.76850128 394.06607056]
[88.83989716 400.34732056]
[87.05140686 415.24032593]
[85.26291656 430.13333130]
[98.53008270 437.55291748]
[107.94406891 449.48797607]
[112.06929016 464.11846924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 180]
[12 179]
[13 178]
[14 176]
[15 175]
[16 174]
[18 170]
[19 169]
[20 168]
[21 167]
[22 166]
[23 165]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[37 75]
[38 74]
[40 72]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[46 66]
[79 91]
[80 90]
[81 89]
[82 88]
[93 153]
[94 152]
[95 151]
[99 147]
[100 146]
[103 143]
[104 142]
[106 139]
[107 138]
[108 136]
[109 135]
[110 134]
[111 133]
[112 132]
[113 131]
[116 129]
[117 128]
[120 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
