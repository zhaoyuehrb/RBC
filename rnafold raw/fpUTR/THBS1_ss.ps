%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGCUGCGCCCGAGCUGGCCUGCGAGUUCAGGGCUCCUGUCGCUCUCCAGGAGCAACCUCUACUCCGGACGCACAGGCAUUCCCCGCGCCCCUCCAGCCCUCGCCGCCCUCGCCACCGCUCCCGGCCGCCGCGCUCCGGUACACACAGGAUCCCUGCUGGGCACCAACAGCUCCACC\
) } def
/len { sequence length } bind def

/coor [
[278.09478760 347.66232300]
[286.50988770 332.72094727]
[277.69311523 320.58569336]
[268.87634277 308.45043945]
[260.05953979 296.31518555]
[245.35397339 294.24606323]
[236.23962402 282.06478882]
[238.50961304 266.65423584]
[229.69284058 254.51898193]
[220.87606812 242.38372803]
[212.05928040 230.24847412]
[202.72155762 218.50935364]
[192.88067627 207.18870544]
[182.84371948 196.04153442]
[172.61373901 185.07122803]
[162.38377380 174.10092163]
[152.15379333 163.13061523]
[141.73391724 152.34051514]
[131.12731934 141.73391724]
[120.52071381 131.12731934]
[109.91411591 120.52071381]
[91.93018341 121.31355286]
[78.98106384 108.80873108]
[79.14579010 90.80809021]
[68.17548370 80.57811737]
[57.20517731 70.34813690]
[48.76945496 66.77026367]
[46.13466263 59.84261322]
[35.34456635 49.42273712]
[22.44023705 48.86256027]
[13.66599178 39.93815994]
[13.34704876 27.82825661]
[2.74044704 17.22165489]
[-7.86615467 6.61505365]
[-18.47275543 -3.99154782]
[-29.07935715 -14.59814930]
[-39.68595886 -25.20475197]
[-51.82121658 -34.02153015]
[-65.18630981 -40.83138657]
[-78.55140686 -47.64124680]
[-91.91651154 -54.45110321]
[-105.28160858 -61.26095963]
[-114.37673950 -62.37503052]
[-118.81898499 -68.30807495]
[-132.06320190 -75.35014343]
[-144.62203979 -72.33171082]
[-155.51628113 -78.49188232]
[-159.16081238 -90.04475403]
[-172.28010559 -97.31690216]
[-185.39939880 -104.58904266]
[-194.45011902 -106.01985168]
[-198.68260193 -112.10430908]
[-211.67297363 -119.60430908]
[-224.66336060 -127.10430908]
[-237.65373230 -134.60430908]
[-251.31871033 -127.44384766]
[-266.68359375 -128.83067322]
[-278.84555054 -138.32226562]
[-283.92373657 -152.88989258]
[-280.29769897 -167.88507080]
[-269.12451172 -178.52290344]
[-253.96949768 -181.40887451]
[-239.66854858 -175.62211609]
[-230.78507996 -163.00914001]
[-230.15373230 -147.59469604]
[-217.16336060 -140.09469604]
[-204.17297363 -132.59469604]
[-191.18260193 -125.09469604]
[-178.12725830 -117.70833588]
[-165.00796509 -110.43619537]
[-151.88867188 -103.16404724]
[-134.39718628 -104.42768860]
[-125.02112579 -88.59436035]
[-111.77690887 -81.55228424]
[-98.47174835 -74.62606049]
[-85.10665131 -67.81620026]
[-71.74155426 -61.00634384]
[-58.37645340 -54.19648361]
[-45.01135635 -47.38662720]
[-53.28487778 -59.89857483]
[-57.35783386 -74.33502197]
[-56.84377670 -89.32621002]
[-51.79147720 -103.44975281]
[-42.68031311 -115.36556244]
[-30.37476540 -123.94306183]
[-16.04240799 -128.36839294]
[-1.04312587 -128.22167969]
[13.19992161 -123.51682281]
[25.33532524 -114.70024872]
[34.21165466 -102.60848999]
[38.98670578 -88.38882446]
[39.20741272 -73.39044189]
[34.85283279 -59.03643417]
[26.33614159 -46.68872452]
[14.46541405 -37.51889038]
[0.36697155 -32.39698410]
[-14.62149906 -31.80898285]
[-29.07935715 -35.81135178]
[-18.47275543 -25.20475197]
[-7.86615467 -14.59814930]
[2.74044704 -3.99154782]
[13.34704876 6.61505365]
[23.95365143 17.22165489]
[41.11584473 20.82827568]
[45.76444244 38.63264084]
[56.55453873 49.05251312]
[67.43515015 59.37783432]
[78.40545654 69.60781097]
[89.37576294 79.83778381]
[100.36916351 77.21287537]
[111.27175903 80.19250488]
[119.40204620 88.04383087]
[122.76036072 98.83580780]
[120.52071381 109.91411591]
[131.12731934 120.52071381]
[141.73391724 131.12731934]
[152.34051514 141.73391724]
[158.66027832 143.82513428]
[162.39561462 148.15486145]
[163.12409973 152.90063477]
[173.35408020 163.87094116]
[183.58404541 174.84124756]
[193.81402588 185.81155396]
[200.05694580 188.12205505]
[203.63890076 192.57951355]
[204.20132446 197.34782410]
[214.04220581 208.66845703]
[217.83309937 194.15539551]
[231.46977234 187.90710449]
[244.93708801 194.51251221]
[248.34428406 209.12040710]
[239.18902588 221.00238037]
[224.19453430 221.43168640]
[233.01132202 233.56694031]
[241.82809448 245.70220947]
[250.64486694 257.83746338]
[266.00262451 260.44067383]
[274.77124023 272.87316895]
[272.19482422 287.49841309]
[281.01159668 299.63366699]
[289.82836914 311.76892090]
[298.64514160 323.90417480]
[311.47399902 320.61508179]
[324.62445068 321.88696289]
[336.52740479 327.54623413]
[345.77014160 336.89703369]
[351.26382446 348.80691528]
[352.37191772 361.84378052]
[348.98367310 374.44821167]
[341.52499390 385.11996460]
[349.91290283 397.55551147]
[358.30078125 409.99108887]
[363.83212280 396.04818726]
[378.12860107 391.50836182]
[390.69055176 399.70578003]
[392.29208374 414.62002563]
[381.75701904 425.29769897]
[366.82199097 423.89642334]
[374.09414673 437.01571655]
[381.36627197 450.13504028]
[388.63842773 463.25433350]
[404.05566406 465.01165771]
[415.47277832 475.52017212]
[418.49963379 490.73916626]
[411.97238159 504.81661987]
[398.40084839 512.33941650]
[383.00357056 510.41497803]
[371.70111084 499.78320312]
[368.83953857 484.53225708]
[375.51913452 470.52645874]
[368.24697876 457.40716553]
[360.97485352 444.28787231]
[353.70269775 431.16857910]
[345.86520386 418.37896729]
[337.47732544 405.94342041]
[329.08941650 393.50784302]
[312.47247314 396.43005371]
[296.19277954 391.79306030]
[283.52706909 380.48010254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 142]
[3 141]
[4 140]
[5 139]
[8 136]
[9 135]
[10 134]
[11 133]
[12 127]
[13 126]
[14 123]
[15 122]
[16 121]
[17 120]
[18 117]
[19 116]
[20 115]
[21 114]
[24 109]
[25 108]
[26 107]
[28 106]
[29 105]
[32 103]
[33 102]
[34 101]
[35 100]
[36 99]
[37 98]
[38 79]
[39 78]
[40 77]
[41 76]
[42 75]
[44 74]
[45 73]
[48 71]
[49 70]
[50 69]
[52 68]
[53 67]
[54 66]
[55 65]
[150 176]
[151 175]
[152 174]
[158 173]
[159 172]
[160 171]
[161 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
