%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:39:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUCCACCCUGGCAGGGCCAUGGCGGAGGCCCGAGUCUCCCAGCCUGGGGCAUCUCCACGCUCUGUAACGCUGAGCUCCAGGCACCCGUGAAGCCCCACGGGUCAAGGCUGGUGGGCCGGGGCUGGGAGGCCUGCACGCCUGGGUUCUGGGUCCCUAAACCAGUACCCAUCCACCACAGCCACC\
) } def
/len { sequence length } bind def

/coor [
[97.43569183 173.58944702]
[96.42845154 158.62330627]
[95.42121124 143.65716553]
[94.41397095 128.69100952]
[93.40673065 113.72486877]
[78.88049316 109.98476410]
[70.77088165 122.60356140]
[69.81897736 138.39610291]
[56.42906570 144.91987610]
[48.31945419 157.53868103]
[47.36754608 173.33122253]
[33.97763443 179.85498047]
[25.86802101 192.47378540]
[17.75840950 205.09259033]
[9.64879704 217.71139526]
[6.17201996 234.30500793]
[-10.73558617 235.55767822]
[-16.61979294 219.65760803]
[-2.97000599 209.60177612]
[5.13960600 196.98297119]
[13.24921799 184.36416626]
[21.35883141 171.74536133]
[21.73068237 156.85540771]
[35.70064926 149.42906189]
[43.81026077 136.81025696]
[44.18211365 121.92029572]
[58.15208054 114.49394989]
[66.26169586 101.87515259]
[68.64553833 87.06578827]
[64.90542603 72.53955078]
[61.16531754 58.01330948]
[57.42520523 43.48707199]
[42.67187119 29.77023697]
[48.61036301 11.38126659]
[44.38437271 -3.01112795]
[33.07253265 -14.07244682]
[36.91072845 -28.46402359]
[32.68474197 -42.85641861]
[28.45875168 -57.24881363]
[24.23276329 -71.64120483]
[20.00677490 -86.03359985]
[15.78078747 -100.42599487]
[11.55479908 -114.81838989]
[7.32881069 -129.21078491]
[3.10282230 -143.60317993]
[-1.12316597 -157.99557495]
[-5.34915447 -172.38796997]
[-9.57514286 -186.78036499]
[-20.88698578 -197.84169006]
[-17.04878807 -212.23326111]
[-21.27477646 -226.62565613]
[-32.58662033 -237.68698120]
[-28.74842072 -252.07855225]
[-36.72056580 -252.67759705]
[-44.29556274 -255.16079712]
[-51.03619766 -259.37322998]
[-56.55619812 -265.06051636]
[-60.54236984 -271.88415527]
[-62.77233505 -279.44168091]
[-63.12693787 -287.29031372]
[-61.59655380 -294.97302246]
[-58.28099823 -302.04504395]
[-68.93205261 -312.60699463]
[-79.58310699 -323.16894531]
[-90.23416138 -333.73092651]
[-105.48133087 -337.95401001]
[-109.07051849 -352.40969849]
[-119.72157288 -362.97164917]
[-135.22589111 -369.83114624]
[-132.92648315 -386.62844849]
[-116.14909363 -389.06887817]
[-109.15961456 -373.62271118]
[-98.50855255 -363.06076050]
[-84.02322388 -359.59310913]
[-79.67220306 -344.38195801]
[-69.02114868 -333.82000732]
[-58.37009048 -323.25805664]
[-47.71903610 -312.69607544]
[-41.32572556 -315.75115967]
[-34.42051697 -317.34048462]
[-32.66058350 -332.23687744]
[-30.90065002 -347.13327026]
[-29.14071846 -362.02966309]
[-35.20541763 -376.64233398]
[-26.02828407 -388.37390137]
[-24.64425850 -403.30990601]
[-23.63701820 -418.27606201]
[-22.62977982 -433.24218750]
[-21.62254143 -448.20834351]
[-20.61530113 -463.17449951]
[-19.60806274 -478.14062500]
[-18.60082245 -493.10678101]
[-29.18792152 -504.84088135]
[-28.29344940 -520.61981201]
[-16.44808197 -531.08227539]
[-0.67946416 -530.02099609]
[9.65716171 -518.06567383]
[8.42925930 -502.30917358]
[-3.63467908 -492.09954834]
[-4.64191818 -477.13339233]
[-5.64915752 -462.16723633]
[-6.65639639 -447.20111084]
[-7.66363573 -432.23495483]
[-8.67087460 -417.26882935]
[-9.67811394 -402.30267334]
[-7.62707329 -399.41046143]
[-6.88658571 -395.37487793]
[-7.98147774 -390.82812500]
[-11.13188648 -386.61395264]
[-4.94130325 -373.06680298]
[-14.24432182 -360.26974487]
[-16.00425339 -345.37335205]
[-17.76418686 -330.47695923]
[-19.52412033 -315.58056641]
[-1.43416190 -299.71398926]
[0.79273015 -275.54214478]
[-14.35602570 -256.30453491]
[-3.34645367 -246.27265930]
[-6.88238096 -230.85163879]
[-2.65639281 -216.45924377]
[8.35317898 -206.42736816]
[4.81725168 -191.00634766]
[9.04324055 -176.61395264]
[13.26922894 -162.22155762]
[17.49521637 -147.82916260]
[21.72120476 -133.43676758]
[25.94719315 -119.04438019]
[30.17318153 -104.65198517]
[34.39916992 -90.25959015]
[38.62516022 -75.86719513]
[42.85114670 -61.47480011]
[47.07713699 -47.08240891]
[51.30312347 -32.69001389]
[62.31269455 -22.65813446]
[58.77676773 -7.23711634]
[63.00275803 7.15527821]
[72.39721680 11.23923874]
[78.10324860 20.01009750]
[78.02693939 30.69325256]
[71.95143890 39.74696350]
[75.69155121 54.27320099]
[79.43166351 68.79943848]
[83.17177582 83.32567596]
[142.14442444 84.66890717]
[154.83090210 92.67224121]
[167.51737976 100.67556763]
[180.20385742 108.67889404]
[196.00384521 109.49811554]
[202.63984680 122.83275604]
[215.32632446 130.83609009]
[228.01280212 138.83941650]
[240.69927979 146.84274292]
[254.63436890 140.22331238]
[269.93310547 142.21121216]
[281.71374512 152.17214966]
[286.21713257 166.92759705]
[282.00622559 181.76914978]
[270.42471313 191.96092224]
[255.16824341 194.25077820]
[241.10507202 187.90800476]
[232.72271729 174.95655823]
[232.69595337 159.52922058]
[220.00947571 151.52589417]
[207.32299805 143.52256775]
[194.63652039 135.51922607]
[179.74395752 135.27247620]
[172.20053101 121.36537170]
[159.51405334 113.36204529]
[146.82757568 105.35871887]
[134.14109802 97.35538483]
[127.69904327 101.19594574]
[135.38017273 114.08006287]
[146.66674805 123.95999908]
[140.75808716 137.74722290]
[125.81977844 136.38822937]
[122.49605560 121.76118469]
[114.81493378 108.87707520]
[108.37287903 112.71763611]
[109.38011932 127.68377686]
[110.38735962 142.64991760]
[111.39459229 157.61605835]
[112.40183258 172.58221436]
[123.48735809 184.17922974]
[121.18946075 200.05685425]
[107.27088928 208.03514099]
[92.40879059 201.99383545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[3 180]
[4 179]
[5 178]
[6 28]
[7 27]
[9 25]
[10 24]
[12 22]
[13 21]
[14 20]
[15 19]
[29 143]
[30 142]
[31 141]
[32 140]
[34 136]
[35 135]
[37 133]
[38 132]
[39 131]
[40 130]
[41 129]
[42 128]
[43 127]
[44 126]
[45 125]
[46 124]
[47 123]
[48 122]
[50 120]
[51 119]
[53 117]
[62 78]
[63 77]
[64 76]
[65 75]
[67 73]
[68 72]
[80 114]
[81 113]
[82 112]
[83 111]
[85 109]
[86 105]
[87 104]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
[144 170]
[145 169]
[146 168]
[147 167]
[149 165]
[150 164]
[151 163]
[152 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
