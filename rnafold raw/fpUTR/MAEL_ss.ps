%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCACGCACCCAGCCAAUCAGAGCACUUGGCACCUGCGACGGCGCUCUCCCCCCACCUCACCCGCAAGGCGGCACGAGCCGGAAUCUUCCAGUCUCAGGCUGUUUGUUCCCCCGCGGGGCAAUGCGACUGCGCGUCGCUUCCUGAUUGGCCGAGAGUUGCGGGCUGCGUGCGCAGGCGCCUACCUCUGUUACUUAGGGCGGGAGCCCGGCGAGGGCGCCGGUGCUUUGUUCUGUCUGAGGCCAGGAAGUUUGAC\
CGCGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[383.18246460 233.67080688]
[382.06384277 226.32991028]
[368.30105591 220.36453247]
[354.53826904 214.39915466]
[347.17590332 214.62178040]
[340.64834595 208.28060913]
[326.95724487 202.15249634]
[313.26614380 196.02438354]
[299.57504272 189.89627075]
[285.84783936 183.84942627]
[272.04995728 177.96572876]
[258.18325806 172.24601746]
[243.48114014 174.63282776]
[233.60055542 162.27627563]
[219.70021057 156.63885498]
[205.79986572 151.00144958]
[191.89952087 145.36402893]
[177.99917603 139.72662354]
[164.09883118 134.08920288]
[150.19850159 128.45179749]
[136.29815674 122.81437683]
[122.39780426 117.17696381]
[107.27850342 127.27146912]
[89.13991547 126.05318451]
[79.89720917 137.86726379]
[80.40678406 153.90222168]
[68.09498596 164.18809509]
[52.40637207 160.83444214]
[45.37590790 146.41389465]
[52.39675903 131.98866272]
[68.08312988 128.62455750]
[77.32583618 116.81047821]
[74.72084045 112.55683136]
[72.90526581 107.91106415]
[71.93579102 103.01824951]
[71.84269714 98.03118896]
[72.62889862 93.10559845]
[59.57965088 85.70850372]
[46.53039932 78.31140137]
[33.48115158 70.91430664]
[20.43190193 63.51720428]
[7.38265085 56.12010574]
[-1.59332645 54.61961365]
[-5.77670002 48.55718231]
[-18.73734283 41.00590515]
[-31.69798470 33.45463181]
[-46.80199814 37.26337051]
[-59.83835983 29.42067528]
[-63.37633133 14.99783325]
[-76.33697510 7.44655848]
[-89.34214783 -0.02775995]
[-102.56310272 -7.11340952]
[-115.94832611 -13.88362598]
[-129.33354187 -20.65384293]
[-142.71876526 -27.42405891]
[-158.52554321 -26.74837112]
[-166.39048767 -39.39716339]
[-176.90299988 -29.81328392]
[-190.02583313 -24.39968872]
[-204.17834473 -23.78643417]
[-217.66334534 -28.02669334]
[-228.87065125 -36.59282684]
[-236.46932983 -48.44194031]
[-239.56573486 -62.14283752]
[-237.80859375 -76.04885864]
[-251.11262512 -82.97727966]
[-264.41662598 -89.90570068]
[-277.72067261 -96.83411407]
[-291.02468872 -103.76253510]
[-300.04833984 -104.94291687]
[-304.44464111 -110.85276794]
[-317.66558838 -117.93841553]
[-330.88653564 -125.02406311]
[-344.10748291 -132.10971069]
[-359.06652832 -127.76631927]
[-372.37350464 -135.14050293]
[-376.42208862 -149.42842102]
[-389.64303589 -156.51408386]
[-402.86398315 -163.59973145]
[-416.12670898 -170.60688782]
[-431.94036865 -170.11863708]
[-439.65481567 -182.85977173]
[-452.95886230 -189.78819275]
[-466.26287842 -196.71661377]
[-482.61410522 -195.46380615]
[-491.65008545 -209.14892578]
[-484.07540894 -223.69389343]
[-467.68225098 -224.13610840]
[-459.33444214 -210.02062988]
[-446.03042603 -203.09220886]
[-432.72640991 -196.16378784]
[-417.86431885 -197.14761353]
[-409.19830322 -183.91090393]
[-401.83874512 -183.60972595]
[-395.77835083 -176.82067871]
[-382.55740356 -169.73503113]
[-369.33642578 -162.64938354]
[-355.19708252 -167.18963623]
[-341.68820190 -160.19212341]
[-337.02185059 -145.33065796]
[-323.80090332 -138.24501038]
[-310.57992554 -131.15936279]
[-297.35897827 -124.07371521]
[-284.09625244 -117.06655884]
[-270.79223633 -110.13813782]
[-257.48822021 -103.20971680]
[-244.18420410 -96.28130341]
[-230.88017273 -89.35288239]
[-218.88305664 -99.72962189]
[-203.78363037 -104.71367645]
[-187.88967896 -103.51206207]
[-173.64239502 -96.27961731]
[-163.24150085 -84.09974670]
[-158.30557251 -68.82225037]
[-159.62026978 -52.78238297]
[-144.77088928 -53.94232178]
[-135.94854736 -40.80928040]
[-122.56333160 -34.03906631]
[-109.17810822 -27.26884842]
[-95.79288483 -20.49863052]
[-93.11589050 -21.21773338]
[-89.99719238 -20.93753433]
[-86.80962372 -19.48624802]
[-83.98075867 -16.82785034]
[-81.94505310 -13.07701015]
[-74.60086060 -12.51433659]
[-68.78569794 -5.51408339]
[-55.82505798 2.03719163]
[-41.53319168 -1.99742901]
[-28.28168678 5.47600842]
[-24.14670944 20.49398804]
[-11.18606663 28.04526329]
[1.77457535 35.59653854]
[14.77974987 43.07085800]
[27.82900047 50.46795654]
[40.87825012 57.86505508]
[53.92750168 65.26215363]
[66.97675323 72.65925598]
[80.02600098 80.05635071]
[95.28494263 72.17055511]
[112.28987122 74.58998871]
[124.74386597 86.41873169]
[128.03521729 103.27661896]
[141.93556213 108.91403198]
[155.83590698 114.55144501]
[169.73625183 120.18885803]
[183.63659668 125.82627106]
[197.53694153 131.46368408]
[211.43728638 137.10110474]
[225.33763123 142.73851013]
[239.23797607 148.37593079]
[254.93434143 146.39233398]
[263.82067871 158.34567261]
[272.91555786 158.66622925]
[277.85174561 164.13319397]
[286.94219971 164.56153870]
[291.81323242 170.08663940]
[300.89794922 170.62271118]
[305.70315552 176.20516968]
[319.39425659 182.33328247]
[333.08535767 188.46139526]
[346.77645874 194.58950806]
[360.50363159 200.63636780]
[374.26641846 206.60174561]
[388.02920532 212.56712341]
[410.79687500 208.10052490]
[423.36758423 226.70216370]
[437.45959473 231.84175110]
[451.55160522 236.98133850]
[465.64361572 242.12092590]
[479.73562622 247.26049805]
[493.92770386 240.84007263]
[508.14581299 246.25308228]
[514.17926025 259.82266235]
[528.27124023 264.96224976]
[542.36328125 270.10183716]
[556.45526123 275.24142456]
[570.54724121 280.38098145]
[588.62274170 276.78628540]
[599.33959961 290.70062256]
[613.49157715 295.67279053]
[627.64349365 300.64495850]
[645.67504883 296.83621216]
[656.55615234 310.62252808]
[670.76605225 315.42657471]
[684.97595215 320.23062134]
[699.18585205 325.03466797]
[706.33923340 317.29986572]
[715.61657715 312.38796997]
[725.95935059 310.83084106]
[736.19683838 312.77923584]
[745.17852783 317.98852539]
[751.90386963 325.84906006]
[755.63305664 335.45758057]
[755.96899414 345.72079468]
[769.93518066 351.19302368]
[783.90136719 356.66525269]
[797.86761475 362.13748169]
[811.83380127 367.60971069]
[825.79998779 373.08193970]
[839.76617432 378.55416870]
[853.73236084 384.02639771]
[862.83044434 384.23910522]
[867.83105469 389.64718628]
[881.73144531 395.28460693]
[895.63177490 400.92202759]
[909.56530762 406.47692871]
[923.53149414 411.94915771]
[937.49768066 417.42138672]
[951.46386719 422.89361572]
[965.43005371 428.36587524]
[979.39630127 433.83810425]
[995.52111816 430.85110474]
[1005.96307373 443.49615479]
[999.98040771 458.76504517]
[983.72753906 460.95050049]
[973.92401123 447.80429077]
[959.95782471 442.33206177]
[945.99163818 436.85983276]
[932.02545166 431.38760376]
[918.05926514 425.91537476]
[904.09307861 420.44314575]
[896.74328613 420.92739868]
[889.99432373 414.82235718]
[876.09399414 409.18493652]
[862.19366455 403.54751587]
[848.26013184 397.99261475]
[834.29394531 392.52038574]
[820.32775879 387.04815674]
[806.36157227 381.57592773]
[792.39538574 376.10366821]
[778.42913818 370.63143921]
[764.46295166 365.15921021]
[750.49676514 359.68698120]
[734.71325684 371.30197144]
[714.97418213 370.96871948]
[699.36370850 358.64755249]
[694.38177490 339.24456787]
[680.17187500 334.44052124]
[665.96197510 329.63647461]
[651.75207520 324.83242798]
[640.79559326 329.90966797]
[628.93182373 326.04904175]
[622.67132568 314.79690552]
[608.51940918 309.82473755]
[594.36743164 304.85256958]
[583.35150146 309.79956055]
[571.53430176 305.79855347]
[565.40771484 294.47299194]
[551.31567383 289.33340454]
[537.22369385 284.19384766]
[523.13165283 279.05426025]
[509.03967285 273.91467285]
[495.68685913 280.41375732]
[481.32232666 275.40222168]
[474.59603882 261.35250854]
[460.50402832 256.21292114]
[446.41201782 251.07334900]
[432.32000732 245.93376160]
[418.22799683 240.79417419]
[412.80715942 245.25216675]
[406.11923218 247.59481812]
[398.96575928 247.49189758]
[392.22125244 244.90934753]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 165]
[3 164]
[4 163]
[6 162]
[7 161]
[8 160]
[9 159]
[10 157]
[11 155]
[12 153]
[14 151]
[15 150]
[16 149]
[17 148]
[18 147]
[19 146]
[20 145]
[21 144]
[22 143]
[24 32]
[25 31]
[37 139]
[38 138]
[39 137]
[40 136]
[41 135]
[42 134]
[44 133]
[45 132]
[46 131]
[49 128]
[50 127]
[51 125]
[52 120]
[53 119]
[54 118]
[55 117]
[57 115]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[71 103]
[72 102]
[73 101]
[74 100]
[77 97]
[78 96]
[79 95]
[80 93]
[82 91]
[83 90]
[84 89]
[167 260]
[168 259]
[169 258]
[170 257]
[171 256]
[174 253]
[175 252]
[176 251]
[177 250]
[178 249]
[180 246]
[181 245]
[182 244]
[184 241]
[185 240]
[186 239]
[187 238]
[195 234]
[196 233]
[197 232]
[198 231]
[199 230]
[200 229]
[201 228]
[202 227]
[204 226]
[205 225]
[206 224]
[207 222]
[208 221]
[209 220]
[210 219]
[211 218]
[212 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
