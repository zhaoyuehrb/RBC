%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:51:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCAACUAUCCACGCUGCUCGAAUCACAGCAUGCUGGAGGGCCUGGCUGGGUGCUCUGACUGACUGAUCACCUGACAGACGGUGCGGUCAGUCGGAUGCUGAGAAUGACUGACGAUGUGAUGAGGGGCGGAUUGAACGAGUCACAGGCCAGCUGGCCAGGAGCAAAAUCGGCAUAGCUGUCUGACUCGAUGGCUGUACGUGGUUACGGACUGUCUGCCCUGAUAGAAUCUCAGCUUCAACGCAUCAGAGGAGAC\
UGACUUGACCA\
) } def
/len { sequence length } bind def

/coor [
[90.08060455 294.99493408]
[97.90983582 281.84344482]
[110.96013641 273.84667969]
[109.90205383 258.88406372]
[108.84397125 243.92141724]
[96.92470551 237.94900513]
[89.44583893 226.78207397]
[88.44477081 213.27098083]
[94.28875732 200.92831421]
[105.55154419 193.01577759]
[104.66957855 178.04173279]
[103.78762054 163.06767273]
[96.54891968 161.10523987]
[82.07151031 157.18034363]
[74.83280945 155.21789551]
[66.50843048 167.69607544]
[58.25760651 180.22299194]
[50.08061981 192.79824829]
[41.90363693 205.37348938]
[33.72665024 217.94874573]
[39.40449142 232.38972473]
[35.47718811 247.40158081]
[23.45486832 257.21194458]
[7.96036243 258.04855347]
[-5.04837751 249.58970642]
[-10.56922626 235.08798218]
[-6.47930336 220.11961365]
[5.64873123 210.44023132]
[21.15140152 209.77175903]
[29.32838631 197.19650269]
[37.50537109 184.62126160]
[45.68235779 172.04600525]
[46.69054031 164.75035095]
[54.03026199 159.37168884]
[62.35464096 146.89352417]
[52.48891449 135.59362793]
[42.62407684 124.29473877]
[29.13701248 130.85972595]
[15.64994717 137.42472839]
[2.16288257 143.98971558]
[-6.85901833 156.98648071]
[-21.68894005 155.59986877]
[-35.17600632 162.16485596]
[-48.66307068 168.72984314]
[-62.15013504 175.29484558]
[-70.87773895 189.17868042]
[-87.25289917 188.29196167]
[-94.43024445 173.54687500]
[-85.02634430 160.11189270]
[-68.71512604 161.80776978]
[-55.22805786 155.24278259]
[-41.74099350 148.67779541]
[-28.25393105 142.11280823]
[-20.19671440 129.58561707]
[-4.40210724 130.50263977]
[9.08495712 123.93766022]
[22.57202148 117.37266541]
[36.05908585 110.80767822]
[34.38588333 95.90129089]
[19.77898216 92.48977661]
[5.17208052 89.07826233]
[-9.43482018 85.66674805]
[-24.04172134 82.25522614]
[-38.64862442 78.84371185]
[-53.25552368 75.43219757]
[-67.86242676 72.02068329]
[-82.46932983 68.60916901]
[-88.84358978 70.14443207]
[-94.23877716 68.49994659]
[-97.37783813 64.94170380]
[-111.90042114 61.18743134]
[-126.42300415 57.43315506]
[-140.94558716 53.67887878]
[-152.83186340 63.65365601]
[-168.31340027 64.70326233]
[-181.43722534 56.42409515]
[-187.15698242 41.99967194]
[-183.27328491 26.97646904]
[-171.27951050 17.13122177]
[-155.78750610 16.24962425]
[-142.75424194 24.67067146]
[-137.19131470 39.15629578]
[-122.66872406 42.91057205]
[-108.14614868 46.66484833]
[-93.62356567 50.41912460]
[-79.05781555 54.00226974]
[-64.45091248 57.41378403]
[-49.84400940 60.82529831]
[-35.23710632 64.23681641]
[-20.63020706 67.64833069]
[-6.02330542 71.05984497]
[8.58359623 74.47135925]
[23.19049644 77.88287354]
[37.79739761 81.29438782]
[84.88783264 54.60668182]
[118.25203705 75.27609253]
[129.83668518 65.74740601]
[141.42134094 56.21872330]
[153.00599670 46.69004059]
[164.59065247 37.16135406]
[163.79804993 21.77701378]
[172.11895752 9.02492142]
[186.18684387 3.68088937]
[200.53225708 7.59843111]
[212.11691284 -1.93025279]
[223.70156860 -11.45893669]
[228.32051086 -19.29902267]
[235.47903442 -21.03061485]
[240.18991089 -28.81581306]
[247.36831665 -30.46305656]
[259.17398071 -39.71651077]
[270.97964478 -48.96996689]
[282.78530884 -58.22341919]
[287.58743286 -65.95265198]
[294.78472900 -67.51531982]
[306.69845581 -76.62922668]
[318.61218262 -85.74314117]
[317.85607910 -97.56679535]
[322.83572388 -108.18529510]
[332.21633911 -115.02355957]
[343.61190796 -116.48478699]
[354.19165039 -112.32212067]
[366.31652832 -121.15316772]
[373.41339111 -138.16184998]
[390.94012451 -139.29682922]
[402.96026611 -148.26994324]
[414.98037720 -157.24304199]
[427.00051880 -166.21614075]
[439.02062988 -175.18923950]
[451.04077148 -184.16233826]
[463.06088257 -193.13543701]
[475.08102417 -202.10855103]
[487.10113525 -211.08164978]
[481.63818359 -216.57829285]
[478.11373901 -224.68922424]
[477.52365112 -234.67196655]
[480.57852173 -245.44725037]
[487.59869385 -255.70564270]
[497.33032227 -267.12033081]
[507.06198120 -278.53500366]
[516.79364014 -289.94970703]
[526.52526855 -301.36437988]
[536.25695801 -312.77905273]
[545.98858643 -324.19372559]
[547.54827881 -330.56207275]
[551.48431396 -334.60186768]
[556.08599854 -335.75903320]
[566.08355713 -346.94155884]
[576.08111572 -358.12408447]
[579.45159912 -366.57641602]
[586.26269531 -369.37847900]
[596.39111328 -380.44262695]
[606.51953125 -391.50674438]
[616.64794922 -402.57086182]
[626.77642822 -413.63500977]
[636.83953857 -424.75851440]
[646.83709717 -435.94107056]
[656.83465576 -447.12359619]
[658.54376221 -453.45346069]
[662.57379150 -457.39950562]
[667.20141602 -458.44808960]
[677.45935059 -469.39227295]
[676.69763184 -485.17819214]
[687.38305664 -496.82281494]
[703.17614746 -497.41760254]
[714.70715332 -486.60968018]
[715.13488770 -470.81118774]
[704.20568848 -459.39508057]
[688.40356445 -459.13436890]
[678.14562988 -448.19015503]
[668.01721191 -437.12603760]
[658.01965332 -425.94351196]
[648.02209473 -414.76098633]
[645.91406250 -407.70413208]
[637.84051514 -403.50656128]
[627.71209717 -392.44244385]
[617.58367920 -381.37832642]
[607.45526123 -370.31417847]
[597.32678223 -359.25006104]
[587.26367188 -348.12655640]
[577.26611328 -336.94400024]
[567.26855469 -325.76147461]
[557.40325928 -314.46209717]
[547.67163086 -303.04739380]
[537.93994141 -291.63272095]
[528.20831299 -280.21804810]
[518.47668457 -268.80337524]
[508.74502563 -257.38867188]
[499.01336670 -245.97399902]
[502.01544189 -239.10104370]
[508.01959229 -225.35513306]
[511.02166748 -218.48217773]
[526.00897217 -217.86462402]
[540.99963379 -217.33525085]
[555.99310303 -216.89407349]
[570.98663330 -216.45291138]
[585.98016357 -216.01173401]
[600.97363281 -215.57055664]
[612.29943848 -226.59336853]
[628.10095215 -226.29557800]
[639.00335693 -214.85388184]
[638.53851318 -199.05644226]
[626.98223877 -188.27557373]
[611.19055176 -188.90739441]
[600.53247070 -200.57705688]
[585.53900146 -201.01821899]
[570.54547119 -201.45939636]
[555.55194092 -201.90055847]
[540.55847168 -202.34173584]
[533.80328369 -199.40725708]
[525.39141846 -202.87733459]
[510.40411377 -203.49488831]
[496.07424927 -199.06152344]
[484.05410767 -190.08842468]
[472.03399658 -181.11531067]
[460.01385498 -172.14221191]
[447.99374390 -163.16911316]
[435.97360229 -154.19601440]
[423.95349121 -145.22291565]
[411.93334961 -136.24981689]
[399.91323853 -127.27671051]
[397.87548828 -115.37473297]
[387.96450806 -107.79779053]
[375.14758301 -109.02829742]
[363.02270508 -100.19724274]
[361.24847412 -81.95268250]
[346.42611694 -70.63198853]
[327.72607422 -73.82942200]
[315.81234741 -64.71550751]
[303.89865112 -55.60160065]
[292.03875732 -46.41776276]
[280.23309326 -37.16430664]
[268.42742920 -27.91085243]
[256.62176514 -18.65739822]
[244.87075806 -9.33464909]
[233.23023987 0.12571612]
[221.64559937 9.65439987]
[210.06094360 19.18308449]
[211.13728333 34.01478958]
[203.17958069 46.78738022]
[189.06173706 52.49175644]
[174.11933899 48.74600983]
[162.53468323 58.27469254]
[150.95002747 67.80337524]
[139.36537170 77.33206177]
[127.78072357 86.86074066]
[139.28422546 99.53270721]
[143.72370911 119.42080688]
[137.31155396 142.29235840]
[118.76167297 162.18571472]
[119.64363098 177.15975952]
[120.52558899 192.13381958]
[134.90335083 201.07392883]
[141.04641724 216.67202759]
[136.71305847 232.69413757]
[123.80660248 242.86334229]
[124.86468506 257.82595825]
[125.92277527 272.78860474]
[139.96856689 278.86926270]
[149.57063293 290.78811646]
[152.52252197 305.80624390]
[148.14587402 320.47265625]
[137.44644165 331.41711426]
[122.88285828 336.12460327]
[107.80172729 333.51342773]
[95.66859436 324.18359375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 258]
[4 257]
[5 256]
[10 252]
[11 251]
[12 250]
[15 35]
[16 34]
[17 32]
[18 31]
[19 30]
[20 29]
[37 58]
[38 57]
[39 56]
[40 55]
[42 53]
[43 52]
[44 51]
[45 50]
[59 94]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[65 88]
[66 87]
[67 86]
[70 85]
[71 84]
[72 83]
[73 82]
[96 246]
[97 245]
[98 244]
[99 243]
[100 242]
[104 238]
[105 237]
[106 236]
[108 235]
[110 234]
[111 233]
[112 232]
[113 231]
[115 230]
[116 229]
[117 228]
[122 225]
[123 224]
[125 221]
[126 220]
[127 219]
[128 218]
[129 217]
[130 216]
[131 215]
[132 214]
[133 213]
[138 189]
[139 188]
[140 187]
[141 186]
[142 185]
[143 184]
[144 183]
[147 182]
[148 181]
[149 180]
[151 179]
[152 178]
[153 177]
[154 176]
[155 175]
[156 173]
[157 172]
[158 171]
[161 170]
[162 169]
[192 212]
[193 211]
[194 209]
[195 208]
[196 207]
[197 206]
[198 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
