%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:16:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCGGGACGUCGCGCGCCGUGUGGGGCGCGCACGCAGGGCUGGGCGUGAGGGGGCGUGCGCGUGCGCAGGCGACGCGCCGAGGUACUAGGCAGAGCCGUGGAACCGCCGCCAGGUCGCUGUUGGUCCACGCCGCCCGUCGCGCCGCCCGCCCGCUCAGCGUCCGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[106.60192108 206.52593994]
[92.11858368 200.62959290]
[84.85955048 186.77893066]
[88.25231171 171.51383972]
[100.69491577 162.04200745]
[101.23336029 147.05168152]
[101.77180481 132.06134033]
[94.95721436 128.92903137]
[81.32802582 122.66442871]
[74.51343536 119.53212738]
[63.48717880 129.70176697]
[52.46092606 139.87141418]
[48.25552368 148.01878357]
[41.14426041 150.12246704]
[29.93722725 160.09254456]
[18.73019409 170.06262207]
[7.52316141 180.03268433]
[-3.68387222 190.00276184]
[-14.89090538 199.97283936]
[-26.09793854 209.94291687]
[-26.76917648 225.73294067]
[-38.46540070 236.36186218]
[-54.24745178 235.52371216]
[-64.75211334 223.71577454]
[-63.74716187 207.94346619]
[-51.82881165 197.56422424]
[-36.06801605 198.73588562]
[-24.86098099 188.76580811]
[-13.65394783 178.79573059]
[-2.44691396 168.82565308]
[8.76011944 158.85557556]
[19.96715355 148.88551331]
[31.17418671 138.91543579]
[42.29127884 128.84516907]
[53.31753159 118.67551422]
[64.34378815 108.50587463]
[68.14961243 90.81781006]
[79.25605774 78.83110809]
[93.27250671 74.75171661]
[105.69382477 78.10832214]
[114.06931305 65.66439819]
[122.44479370 53.22047424]
[124.65201569 44.32142258]
[131.08399963 40.63019943]
[139.68151855 28.33862877]
[148.27903748 16.04705811]
[156.87655640 3.75548959]
[165.47406006 -8.53608036]
[173.96090698 -20.90432358]
[182.33639526 -33.34824753]
[190.71188354 -45.79217148]
[199.08737183 -58.23609161]
[200.37409973 -74.00489044]
[213.89938354 -80.24312592]
[222.27487183 -92.68704987]
[230.65036011 -105.13097382]
[239.02584839 -117.57489014]
[247.40133667 -130.01881409]
[249.60855103 -138.91786194]
[256.04052734 -142.60908508]
[258.40713501 -151.46708679]
[264.90435791 -155.04225159]
[273.72113037 -167.17750549]
[282.53790283 -179.31275940]
[285.06314087 -188.12684631]
[291.62347412 -191.58480835]
[300.65667725 -203.55984497]
[309.68988037 -215.53486633]
[318.72308350 -227.50990295]
[321.40612793 -236.27723694]
[328.02746582 -239.61688232]
[337.27420044 -251.42782593]
[346.52090454 -263.23876953]
[355.76760864 -275.04971313]
[354.98922729 -287.94628906]
[362.96170044 -297.59817505]
[374.97753906 -299.16461182]
[384.43478394 -310.80767822]
[393.89202881 -322.45071411]
[396.58706665 -338.04067993]
[410.61709595 -343.04141235]
[420.07434082 -354.68447876]
[422.76937866 -370.27444458]
[436.79940796 -375.27517700]
[446.25665283 -386.91821289]
[449.25268555 -395.58358765]
[455.98965454 -398.68341064]
[465.65438843 -410.15481567]
[475.31909180 -421.62622070]
[484.98379517 -433.09762573]
[494.64852905 -444.56906128]
[497.79962158 -453.17926025]
[504.59115601 -456.15762329]
[514.46020508 -467.45370483]
[524.32928467 -478.74975586]
[527.58221436 -494.23294067]
[541.78271484 -498.72683716]
[551.55004883 -510.11102295]
[561.21472168 -521.58245850]
[570.67199707 -533.22546387]
[579.91870117 -545.03643799]
[589.16540527 -556.84735107]
[598.41210938 -568.65832520]
[597.90795898 -584.69348145]
[610.22326660 -594.97515869]
[625.91070557 -591.61621094]
[632.93627930 -577.19323730]
[625.91058350 -562.77044678]
[610.22302246 -559.41162109]
[600.97631836 -547.60064697]
[591.72961426 -535.78973389]
[582.48291016 -523.97875977]
[582.16711426 -519.18286133]
[578.81298828 -514.54302979]
[572.68615723 -511.91772461]
[563.02142334 -500.44631958]
[561.10998535 -493.28097534]
[553.07879639 -488.85775757]
[550.53179932 -474.18252563]
[535.62536621 -468.88067627]
[525.75628662 -457.58459473]
[515.88720703 -446.28854370]
[506.11993408 -434.90432739]
[496.45523071 -423.43292236]
[486.79049683 -411.96151733]
[477.12579346 -400.49011230]
[467.46105957 -389.01867676]
[457.89971924 -377.46099854]
[448.44247437 -365.81793213]
[446.42388916 -351.06076050]
[431.71740723 -345.22723389]
[422.26016235 -333.58419800]
[420.24154663 -318.82699585]
[405.53506470 -312.99349976]
[396.07785034 -301.35043335]
[386.62060547 -289.70736694]
[384.80438232 -272.26693726]
[367.57855225 -265.80300903]
[358.33184814 -253.99206543]
[349.08514404 -242.18112183]
[339.83843994 -230.37017822]
[330.69808960 -218.47669983]
[321.66491699 -206.50167847]
[312.63171387 -194.52664185]
[303.59851074 -182.55162048]
[294.67315674 -170.49598694]
[285.85638428 -158.36073303]
[277.03961182 -146.22547913]
[268.33209229 -134.01156616]
[259.84527588 -121.64332581]
[251.46977234 -109.19940948]
[243.09428406 -96.75548553]
[234.71879578 -84.31156158]
[226.34330750 -71.86763763]
[225.65567017 -56.98891449]
[211.53129578 -49.86060715]
[203.15580750 -37.41668320]
[194.78031921 -24.97276115]
[186.40483093 -12.52883720]
[185.27476501 -5.19954967]
[177.76564026 0.06143829]
[169.16812134 12.35300732]
[160.57060242 24.64457703]
[151.97308350 36.93614578]
[143.37556458 49.22771454]
[134.88871765 61.59596252]
[126.51322937 74.03988647]
[118.13774872 86.48380280]
[128.87318420 106.69120789]
[116.76213837 132.59979248]
[116.22369385 147.59011841]
[115.68524933 162.58044434]
[127.41622162 172.92057800]
[129.70503235 188.38975525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 172]
[6 171]
[7 170]
[10 36]
[11 35]
[12 34]
[14 33]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[40 168]
[41 167]
[42 166]
[44 165]
[45 164]
[46 163]
[47 162]
[48 161]
[49 159]
[50 158]
[51 157]
[52 156]
[54 154]
[55 153]
[56 152]
[57 151]
[58 150]
[60 149]
[62 148]
[63 147]
[64 146]
[66 145]
[67 144]
[68 143]
[69 142]
[71 141]
[72 140]
[73 139]
[74 138]
[77 136]
[78 135]
[79 134]
[81 132]
[82 131]
[84 129]
[85 128]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
[93 122]
[94 121]
[95 120]
[97 118]
[98 116]
[99 115]
[100 112]
[101 111]
[102 110]
[103 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
