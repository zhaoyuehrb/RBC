%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGGGGGGAAGGUUCUAGAAAAGCGGCGGCAGCGGCUCUAGCGGCAGUAGCAGCAGCGCCGGGUCCCGUGCGGAGGUGCUCCUCGCAGAGUUGUUUCUCGAGCAGCGGCAGUUCUCACUACAGCGCCAGGACGAGUCCGGUUCGUGUUCGUCCGCGGAGAUCUCUCUCAUCUCGCUCGGCUGCGGGAAAUCGGGCUGAAGCGACUGAGUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[88.66556549 110.84049225]
[88.36129761 104.52605438]
[90.71049500 99.80153656]
[76.64421082 94.59195709]
[62.57793045 89.38237762]
[46.94958496 91.84517670]
[37.70176315 80.16925812]
[27.41594696 89.64535522]
[14.11452389 93.74662781]
[0.40927696 91.72742462]
[-11.03432274 84.03805542]
[-18.01550674 72.22595215]
[-19.22136116 58.62458038]
[-33.21075058 53.21191025]
[-47.20013809 47.79924011]
[-56.87242126 52.76235199]
[-67.46161652 51.60927963]
[-75.50048828 44.96028519]
[-78.49051666 35.19501495]
[-92.31733704 29.37961388]
[-106.14416504 23.56421089]
[-119.97098541 17.74880791]
[-134.45712280 23.47503853]
[-148.39665222 17.38042450]
[-153.76646423 3.53482318]
[-167.59327698 -2.28057981]
[-183.31382751 -0.49866417]
[-192.04597473 -12.56509781]
[-205.87280273 -18.38050079]
[-221.59333801 -16.59858513]
[-230.32548523 -28.66501999]
[-244.15231323 -34.48042297]
[-258.21859741 -39.69000244]
[-272.49780273 -44.28393173]
[-286.77700806 -48.87786102]
[-301.05621338 -53.47179031]
[-315.33541870 -58.06571960]
[-329.61462402 -62.65964508]
[-343.89385986 -67.25357819]
[-358.17306519 -71.84750366]
[-372.45227051 -76.44143677]
[-381.57534790 -76.09033966]
[-386.90408325 -81.20660400]
[-401.11529541 -86.00677490]
[-415.32650757 -90.80693817]
[-421.86602783 -89.88488770]
[-427.10501099 -92.07255554]
[-429.87612915 -95.95726013]
[-443.94241333 -101.16683960]
[-459.57077026 -98.70404053]
[-468.81857300 -110.37995911]
[-482.88485718 -115.58953857]
[-496.95114136 -120.79911804]
[-511.01742554 -126.00869751]
[-526.64575195 -123.54589844]
[-535.89361572 -135.22181702]
[-550.11743164 -128.87202454]
[-564.30847168 -134.35565186]
[-570.27435303 -147.95504761]
[-584.34063721 -153.16462708]
[-598.40692139 -158.37420654]
[-612.51055908 -163.48182678]
[-626.65075684 -168.48722839]
[-640.79101562 -173.49263000]
[-657.73986816 -173.07826233]
[-662.82995605 -189.25006104]
[-648.69921875 -198.61802673]
[-635.78558350 -187.63284302]
[-621.64538574 -182.62745667]
[-607.50512695 -177.62205505]
[-600.15411377 -178.35293579]
[-593.19732666 -172.44049072]
[-579.13104248 -167.23091125]
[-565.06475830 -162.02133179]
[-551.67980957 -168.45396423]
[-537.34039307 -163.37107849]
[-530.68402100 -149.28810120]
[-516.06176758 -152.12351990]
[-505.80786133 -140.07498169]
[-491.74157715 -134.86540222]
[-477.67529297 -129.65582275]
[-463.60900879 -124.44624329]
[-448.98678589 -127.28166199]
[-438.73284912 -115.23312378]
[-424.66656494 -110.02354431]
[-410.52633667 -105.01814270]
[-396.31512451 -100.21797943]
[-382.10391235 -95.41781616]
[-367.85833740 -90.72064209]
[-353.57913208 -86.12671661]
[-339.29992676 -81.53278351]
[-325.02072144 -76.93885803]
[-310.74148560 -72.34492493]
[-296.46228027 -67.75099945]
[-282.18307495 -63.15707016]
[-267.90386963 -58.56314087]
[-253.62466431 -53.96921158]
[-259.51919556 -67.76248932]
[-254.05860901 -81.73324585]
[-240.37292480 -87.87344360]
[-226.30677795 -82.66352081]
[-219.92286682 -69.08980560]
[-224.88046265 -54.93275070]
[-238.33691406 -48.30724716]
[-224.51008606 -42.49184418]
[-209.77853394 -44.68971634]
[-200.05738831 -32.20732498]
[-186.23057556 -26.39192390]
[-171.49902344 -28.58979607]
[-161.77787781 -16.10740471]
[-147.95104980 -10.29200172]
[-134.29943848 -16.13740730]
[-120.19422150 -10.43672943]
[-114.15558624 3.92198253]
[-100.32875824 9.73738575]
[-86.50193787 15.55278873]
[-72.67510986 21.36819077]
[-53.71586609 17.55580902]
[-41.78747177 33.80985260]
[-27.79808235 39.22251892]
[-13.80869198 44.63518906]
[-1.47333395 34.19401550]
[14.53679466 31.38344765]
[29.86700630 37.06412125]
[40.29896164 49.77393341]
[42.91134262 66.10297394]
[57.53357315 63.26755524]
[67.78750610 75.31610107]
[81.85379028 80.52567291]
[95.92007446 85.73525238]
[110.83173370 84.10974884]
[123.44519806 75.99183655]
[136.05867004 67.87391663]
[148.67213440 59.75600433]
[161.28559875 51.63808823]
[173.89906311 43.52017593]
[186.51251221 35.40225983]
[192.03202820 28.12979126]
[199.36787415 27.25966263]
[212.03976440 19.23326492]
[224.65322876 11.11535072]
[234.70007324 -2.54104948]
[250.60401917 3.33269167]
[249.36247253 20.24111938]
[232.77114868 23.72881508]
[220.15768433 31.84672928]
[216.23603821 38.10711288]
[207.30232239 39.98932648]
[194.63043213 48.01572418]
[182.01696777 56.13364029]
[169.40350342 64.25155640]
[156.79003906 72.36946869]
[144.17657471 80.48738098]
[131.56311035 88.60529327]
[118.94965363 96.72321320]
[118.29837799 111.70906830]
[130.16000366 120.89065552]
[142.02165222 130.07225037]
[153.88328552 139.25382996]
[165.74491882 148.43542480]
[163.72969055 133.57141113]
[171.63690186 120.82479858]
[185.84896851 116.02719879]
[199.86386108 121.37351227]
[207.26969910 134.41780090]
[204.67832947 149.19226074]
[193.27528381 158.93756104]
[178.27920532 159.19575500]
[189.15109253 169.53025818]
[200.02299500 179.86476135]
[210.89488220 190.19926453]
[223.78213501 190.65260315]
[232.62429810 199.48027039]
[233.06825256 211.56585693]
[243.78939819 222.05667114]
[254.51052856 232.54748535]
[265.23168945 243.03828430]
[275.95281982 253.52909851]
[286.74960327 263.94204712]
[297.62152100 274.27655029]
[308.49340820 284.61105347]
[319.36529541 294.94555664]
[330.23718262 305.28005981]
[338.60913086 308.92208862]
[341.19027710 315.84371948]
[351.91143799 326.33453369]
[362.63256836 336.82534790]
[378.64379883 340.37115479]
[383.31994629 356.08950806]
[371.85058594 367.81066895]
[356.03442383 363.47695923]
[352.14175415 347.54650879]
[341.42062378 337.05569458]
[330.69949341 326.56488037]
[319.90267944 316.15194702]
[309.03079224 305.81744385]
[298.15890503 295.48294067]
[287.28701782 285.14843750]
[276.41510010 274.81393433]
[269.40460205 272.48492432]
[265.46200562 264.25024414]
[254.74085999 253.75942993]
[244.01972961 243.26861572]
[233.29858398 232.77780151]
[222.57743835 222.28700256]
[205.36653137 218.84919739]
[200.56037903 201.07116699]
[189.68849182 190.73664856]
[178.81658936 180.40214539]
[167.94470215 170.06764221]
[156.56332397 160.29705811]
[144.70169067 151.11547852]
[132.84005737 141.93388367]
[120.97842407 132.75228882]
[109.11678314 123.57070160]
[99.48828125 122.07030487]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 130]
[4 129]
[5 128]
[7 126]
[13 121]
[14 120]
[15 119]
[19 117]
[20 116]
[21 115]
[22 114]
[25 111]
[26 110]
[28 108]
[29 107]
[31 105]
[32 104]
[33 97]
[34 96]
[35 95]
[36 94]
[37 93]
[38 92]
[39 91]
[40 90]
[41 89]
[43 88]
[44 87]
[45 86]
[48 85]
[49 84]
[51 82]
[52 81]
[53 80]
[54 79]
[56 77]
[59 74]
[60 73]
[61 72]
[62 70]
[63 69]
[64 68]
[131 155]
[132 154]
[133 153]
[134 152]
[135 151]
[136 150]
[137 149]
[139 148]
[140 146]
[141 145]
[156 215]
[157 214]
[158 213]
[159 212]
[160 211]
[168 210]
[169 209]
[170 208]
[171 207]
[174 205]
[175 204]
[176 203]
[177 202]
[178 201]
[179 199]
[180 198]
[181 197]
[182 196]
[183 195]
[185 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
