%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAUUUCCAAAUCUUGGCAUUCUUAUCCACAAAGUGAAGAUAAUAAUUGUCAAUUCACAGGUGAUUAUGAUUUAAAGAGAUUACUUUUGAAGAGUUCCUAACACAUUCAGUCAACAUUUAAUGAUGCUUCAGGCACUGUGUUCAUUGCUAGUGAGCGUAUGACACACACAGCCAUACGGUCACAGAGCUUUCAAUGAAAAGUAACAUAAUUGCUCAUUUCACCAGGCCCCCGGCUUGGGGCGCCUUCCUUCCCC\
) } def
/len { sequence length } bind def

/coor [
[-110.41586304 747.63513184]
[-124.88905334 751.57556152]
[-139.66827393 749.01141357]
[-151.96829224 740.42602539]
[-159.47113037 727.43725586]
[-160.76281738 712.49298096]
[-155.59994507 698.40948486]
[-144.95426941 687.84014893]
[-139.85652161 673.73291016]
[-134.75877380 659.62573242]
[-129.66102600 645.51855469]
[-124.56327057 631.41137695]
[-119.46552277 617.30413818]
[-114.36776733 603.19696045]
[-121.75735474 601.91473389]
[-132.99440002 611.85101318]
[-144.23144531 621.78723145]
[-155.46849060 631.72344971]
[-166.70553589 641.65966797]
[-177.94258118 651.59594727]
[-176.10145569 668.42352295]
[-184.57817078 682.88366699]
[-199.85446167 689.36718750]
[-215.82084656 685.49670410]
[-226.93511963 695.57006836]
[-238.04939270 705.64349365]
[-249.16365051 715.71685791]
[-260.27792358 725.79022217]
[-271.26773071 735.99926758]
[-282.13143921 746.34234619]
[-292.99514771 756.68548584]
[-300.29739380 771.98620605]
[-317.02166748 769.20501709]
[-318.97891235 752.36444092]
[-303.33825684 745.82177734]
[-292.47454834 735.47863770]
[-281.61083984 725.13555908]
[-280.59872437 720.49462891]
[-276.67797852 716.43041992]
[-270.35131836 714.67596436]
[-259.23703003 704.60260010]
[-248.12277222 694.52917480]
[-237.00849915 684.45581055]
[-225.89424133 674.38244629]
[-228.55863953 661.31640625]
[-224.39233398 648.53521729]
[-214.37982178 639.40368652]
[-201.05911255 636.38085938]
[-187.87881470 640.35888672]
[-176.64176941 630.42266846]
[-165.40472412 620.48638916]
[-154.16767883 610.55017090]
[-142.93063354 600.61395264]
[-131.69358826 590.67767334]
[-126.89340973 585.05401611]
[-121.37915802 580.80090332]
[-115.48334503 577.97552490]
[-109.53279877 576.56127930]
[-103.83313751 576.47198486]
[-98.65487671 577.55981445]
[-94.22152710 579.62518311]
[-88.99524689 565.56512451]
[-83.76896667 551.50506592]
[-78.54268646 537.44494629]
[-73.31640625 523.38488770]
[-78.06455994 512.27862549]
[-73.84779358 500.53363037]
[-62.40888214 494.61486816]
[-57.01045609 480.61996460]
[-51.61203003 466.62509155]
[-46.21360397 452.63018799]
[-50.82511139 441.46655273]
[-46.46453476 429.77416992]
[-34.95384979 423.99621582]
[-29.38409233 410.06860352]
[-23.81433296 396.14102173]
[-29.90045547 382.59500122]
[-24.45033264 368.39111328]
[-10.20075417 362.09927368]
[-16.28687668 348.55325317]
[-10.83675385 334.34933472]
[3.41282582 328.05749512]
[8.98258400 314.12991333]
[14.55234146 300.20233154]
[20.12209892 286.27471924]
[25.69185829 272.34713745]
[31.26161575 258.41955566]
[36.83137131 244.49195862]
[42.40113068 230.56436157]
[39.94285583 215.87402344]
[52.25122833 205.93347168]
[57.56367874 191.90571594]
[62.61702728 177.78256226]
[67.67037201 163.65939331]
[72.72372437 149.53623962]
[77.77706909 135.41307068]
[82.83042145 121.28991699]
[87.88376617 107.16675568]
[80.74542236 120.35932922]
[69.79817963 130.61398315]
[56.16785812 136.87611389]
[41.25620270 138.50172424]
[26.59674454 135.32362366]
[13.69706917 127.66867065]
[3.88378668 116.32408905]
[-1.83389866 102.45656586]
[-2.86797619 87.49225616]
[0.88789922 72.97008514]
[9.04747105 60.38352966]
[20.77160454 51.02699661]
[34.85457993 45.86272049]
[49.84809875 45.42179108]
[64.21021271 49.74956131]
[76.46392059 58.40095901]
[85.34903717 70.48626709]
[89.95172119 84.76198578]
[87.56884766 69.95246124]
[85.18597412 55.14294434]
[82.80310059 40.33342361]
[72.03750610 27.96273041]
[77.62319946 12.54416943]
[93.81410217 9.93903160]
[103.95439911 22.82725906]
[97.61262512 37.95055008]
[99.99549866 52.76007080]
[102.37836456 67.56959534]
[104.76123810 82.37911224]
[112.23358154 83.02259064]
[113.52054596 68.07790375]
[122.10717010 55.77872467]
[128.46524048 69.36486053]
[127.17827606 84.30955505]
[134.65061951 84.95303345]
[139.53027344 70.76892090]
[144.40992737 56.58481216]
[149.28958130 42.40070343]
[146.46247864 26.83413696]
[157.91923523 17.31615829]
[162.79888916 3.13204813]
[159.13598633 -12.85279369]
[171.33038330 -23.81767273]
[186.83753967 -18.48286057]
[189.70501709 -2.33635616]
[176.98300171 8.01170254]
[172.10334778 22.19581223]
[175.27947998 36.74783707]
[163.47369385 47.28035736]
[158.59403992 61.46446609]
[153.71438599 75.64857483]
[148.83473206 89.83268738]
[160.71685791 98.98883057]
[172.59793091 108.14417267]
[185.06997681 99.81061554]
[197.54200745 91.47706604]
[210.01405334 83.14350891]
[217.18986511 69.04321289]
[232.07081604 68.40565491]
[244.54286194 60.07209778]
[257.01492310 51.73854446]
[269.48696899 43.40499115]
[281.95898438 35.07143784]
[294.43103027 26.73788452]
[301.60684204 12.63759041]
[316.48779297 12.00002670]
[318.01025391 -3.56326866]
[329.21652222 -14.46984959]
[344.81536865 -15.56996059]
[357.44146729 -6.34416485]
[361.13317871 8.85140133]
[354.14739990 22.84185410]
[339.78259277 29.02133179]
[324.82135010 24.47207069]
[318.53762817 37.97629547]
[302.76458740 39.20993042]
[290.29254150 47.54348373]
[277.82049561 55.87703705]
[265.34844971 64.21058655]
[252.87641907 72.54414368]
[240.40437317 80.87770081]
[234.12065125 94.38191986]
[218.34761047 95.61555481]
[205.87556458 103.94911194]
[193.40351868 112.28266144]
[180.93147278 120.61621857]
[132.40534973 135.34246826]
[102.00692749 112.22010040]
[96.95358276 126.34326172]
[91.90023041 140.46641541]
[86.84688568 154.58958435]
[81.79353333 168.71273804]
[76.74018860 182.83590698]
[71.68684387 196.95906067]
[72.61000824 202.03898621]
[71.60987854 206.52485657]
[69.22872925 209.78810120]
[66.17881775 211.50323486]
[68.23870850 227.18975830]
[56.32872391 236.13412476]
[50.75896454 250.06170654]
[45.18920517 263.98931885]
[39.61944962 277.91690063]
[34.04969025 291.84448242]
[28.47993279 305.77206421]
[22.91017532 319.69967651]
[17.34041786 333.62725830]
[23.32215500 348.00976562]
[17.47522545 362.05499268]
[3.72683716 367.66903687]
[9.70857525 382.05154419]
[3.86164498 396.09674072]
[-9.88674259 401.71078491]
[-15.45650101 415.63836670]
[-21.02625847 429.56597900]
[-17.98653603 447.74087524]
[-32.21871185 458.02862549]
[-37.61713791 472.02349854]
[-43.01556396 486.01840210]
[-48.41399002 500.01330566]
[-45.15146255 518.14953613]
[-59.25632095 528.61114502]
[-64.48259735 542.67126465]
[-69.70887756 556.73132324]
[-74.93515778 570.79138184]
[-80.16143799 584.85150146]
[-79.05796814 599.81085205]
[-71.82521820 612.95190430]
[-64.59246063 626.09295654]
[-57.35970306 639.23400879]
[-50.04644775 652.33044434]
[-42.65297699 665.38171387]
[-35.25950241 678.43304443]
[-27.86603165 691.48431396]
[-12.84984493 697.13177490]
[-8.04002762 712.43688965]
[-17.12625885 725.65881348]
[-33.13835907 726.65490723]
[-43.79321671 714.66101074]
[-40.91733551 698.87780762]
[-48.31081009 685.82653809]
[-55.70428085 672.77520752]
[-63.09775543 659.72387695]
[-69.11183929 655.46539307]
[-70.50075531 646.46673584]
[-77.73351288 633.32568359]
[-84.96626282 620.18463135]
[-92.19902039 607.04357910]
[-99.58860779 605.76141357]
[-99.54141998 620.76129150]
[-99.49423218 635.76123047]
[-99.44705200 650.76116943]
[-99.39986420 665.76110840]
[-99.35267639 680.76104736]
[-99.30549622 695.76092529]
[-92.84314728 709.29748535]
[-92.72604370 724.29705811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 54]
[16 53]
[17 52]
[18 51]
[19 50]
[20 49]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[29 37]
[30 36]
[31 35]
[61 224]
[62 223]
[63 222]
[64 221]
[65 220]
[68 218]
[69 217]
[70 216]
[71 215]
[74 213]
[75 212]
[76 211]
[79 208]
[82 205]
[83 204]
[84 203]
[85 202]
[86 201]
[87 200]
[88 199]
[89 198]
[91 196]
[92 192]
[93 191]
[94 190]
[95 189]
[96 188]
[97 187]
[98 186]
[116 127]
[117 126]
[118 125]
[119 124]
[133 150]
[134 149]
[135 148]
[136 147]
[138 145]
[139 144]
[152 184]
[153 183]
[154 182]
[155 181]
[157 179]
[158 178]
[159 177]
[160 176]
[161 175]
[162 174]
[164 172]
[225 246]
[226 245]
[227 244]
[228 243]
[229 241]
[230 240]
[231 239]
[232 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
