%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:25:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACCAGAGUUCAGUGCGGCUGCGCAGUAGCGGGGGUGGGCGGGAGCGCCCUUCCAGGAGAUGGGUUGGCUGCAGUAGUGAGAGGCUGGGGGUGCGGCUCUUUCCCUGCAGUCCUGCCGAGGAAGCGUGCGUCCCUGGCGCUUCCUUCUUCUCUUCCGGCGGAGAGCUUGGGAUGUGGUA\
) } def
/len { sequence length } bind def

/coor [
[83.46469116 483.65765381]
[75.75057220 469.18615723]
[84.65463257 455.41482544]
[84.91497040 440.41708374]
[85.17530823 425.41934204]
[85.43564606 410.42160034]
[77.92041016 397.56195068]
[85.89605713 383.89816284]
[78.38082123 371.03851318]
[86.35646820 357.37469482]
[86.61680603 342.37695312]
[86.87715149 327.37921143]
[87.13748932 312.38146973]
[87.39782715 297.38372803]
[84.36201477 290.62307739]
[87.79508972 282.12857056]
[88.31569672 267.13760376]
[80.28856659 258.06561279]
[80.61615753 245.55529785]
[89.66870117 236.34284973]
[90.44940948 221.36318970]
[83.38500977 208.25045776]
[91.83008575 194.87170410]
[92.61078644 179.89202881]
[93.39149475 164.91235352]
[80.58830261 172.72761536]
[66.43541718 167.75813293]
[61.32868958 153.65417480]
[69.01921844 140.77568054]
[83.85799408 138.58239746]
[94.94530487 148.68522644]
[97.02143860 133.82958984]
[99.09757996 118.97396851]
[89.10585022 107.78623962]
[74.11093140 108.17672729]
[59.11601639 108.56720734]
[45.52193832 116.66114044]
[32.59756088 109.25778198]
[17.60264397 109.64826965]
[2.60772753 110.03874969]
[-12.38718891 110.42923737]
[-27.38210487 110.81972504]
[-41.07565308 119.84295654]
[-55.61355591 112.25471497]
[-56.04046249 95.86112213]
[-41.91721344 87.52651215]
[-27.77259064 95.82480621]
[-12.77767467 95.43431854]
[2.21724224 95.04383850]
[17.21215820 94.65335083]
[32.20707703 94.26286316]
[44.72861481 86.19686890]
[58.72552872 93.57229614]
[73.72044373 93.18180847]
[88.71536255 92.79132080]
[101.59590912 85.10421753]
[109.05829620 72.09220123]
[116.52069092 59.08017349]
[123.98307800 46.06815338]
[131.44546509 33.05612946]
[138.90785217 20.04410553]
[139.06147766 4.22364569]
[152.10507202 -2.96760750]
[150.28294373 -29.01117516]
[150.54328918 -44.00891495]
[150.80361938 -59.00665665]
[143.30700684 -72.93904114]
[151.26403809 -85.53010559]
[151.52436829 -100.52784729]
[151.65455627 -115.52728271]
[151.65455627 -130.52728271]
[151.65455627 -145.52728271]
[151.65455627 -160.52728271]
[151.65455627 -175.52728271]
[151.65455627 -190.52728271]
[148.66529846 -196.47320557]
[149.08479309 -202.17480469]
[151.92391968 -206.04562378]
[149.08839417 -214.75782776]
[152.58589172 -221.29161072]
[153.36660767 -236.27127075]
[154.14730835 -251.25094604]
[154.92800903 -266.23062134]
[155.70872498 -281.21029663]
[156.35940552 -296.19616699]
[156.88000488 -311.18713379]
[157.40060425 -326.17810059]
[157.92120361 -341.16906738]
[146.95855713 -352.55307007]
[147.34005737 -368.35275269]
[158.83935547 -379.19442749]
[174.63412476 -378.64590454]
[185.35360718 -367.03265381]
[184.63812256 -351.24456787]
[172.91217041 -340.64846802]
[172.39157104 -325.65750122]
[171.87097168 -310.66653442]
[171.35035706 -295.67556763]
[174.26838684 -288.86322021]
[170.68838501 -280.42956543]
[169.90768433 -265.44992065]
[169.12698364 -250.47024536]
[168.34626770 -235.49057007]
[167.56556702 -220.51089478]
[166.91488647 -205.52502441]
[166.65455627 -190.52728271]
[166.65455627 -175.52728271]
[166.65455627 -160.52728271]
[166.65455627 -145.52728271]
[166.65455627 -130.52728271]
[166.65455627 -115.52728271]
[169.80725098 -108.82032776]
[166.52210999 -100.26750183]
[166.26177979 -85.26976776]
[173.77700806 -72.41011810]
[165.80136108 -58.74631500]
[165.54103088 -43.74857712]
[165.28068542 -28.75083542]
[176.29331970 -18.56643486]
[191.22502136 -19.99620247]
[206.15672302 -21.42597008]
[221.08842468 -22.85573578]
[236.02012634 -24.28550339]
[250.95182800 -25.71527100]
[265.88354492 -27.14503860]
[280.81524658 -28.57480621]
[295.74694824 -30.00457382]
[310.67864990 -31.43434143]
[317.65270996 -45.19537735]
[330.97097778 -52.98171997]
[346.38363647 -52.30877686]
[358.97259521 -43.39128113]
[364.72073364 -29.07477379]
[361.79385376 -13.92759991]
[351.12591553 -2.78316665]
[336.12100220 0.80237669]
[321.56713867 -4.31510353]
[312.10839844 -16.50263786]
[297.17669678 -15.07287025]
[282.24499512 -13.64310360]
[267.31329346 -12.21333599]
[252.38159180 -10.78356838]
[237.44989014 -9.35380077]
[222.51818848 -7.92403316]
[207.58648682 -6.49426556]
[192.65478516 -5.06449842]
[177.72308350 -3.63473082]
[165.11709595 4.49478245]
[165.49722290 19.38453674]
[151.91987610 27.50649643]
[144.45748901 40.51852036]
[136.99510193 53.53054047]
[129.53271484 66.54256439]
[122.07032013 79.55458832]
[114.60793304 92.56661224]
[113.95320892 121.05010986]
[111.87706757 135.90573120]
[109.80093384 150.76136780]
[108.37116241 165.69306946]
[107.59046173 180.67272949]
[106.80975342 195.65240479]
[113.81830597 209.83657837]
[105.42907715 222.14389038]
[104.64836884 237.12356567]
[113.39566803 253.31329346]
[103.30665588 267.65820312]
[102.78605652 282.64916992]
[102.39556885 297.64407349]
[102.13523102 312.64181519]
[101.87489319 327.63955688]
[101.61454773 342.63729858]
[101.35420990 357.63504028]
[108.85083008 371.56741333]
[100.89379883 384.15847778]
[108.39041901 398.09088135]
[100.43338776 410.68194580]
[100.17304993 425.67968750]
[99.91271210 440.67742920]
[99.65236664 455.67517090]
[108.07310486 469.74722290]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 179]
[4 178]
[5 177]
[6 176]
[8 174]
[10 172]
[11 171]
[12 170]
[13 169]
[14 168]
[16 167]
[17 166]
[20 164]
[21 163]
[23 161]
[24 160]
[25 159]
[31 158]
[32 157]
[33 156]
[34 55]
[35 54]
[36 53]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[56 155]
[57 154]
[58 153]
[59 152]
[60 151]
[61 150]
[63 148]
[64 118]
[65 117]
[66 116]
[68 114]
[69 113]
[70 111]
[71 110]
[72 109]
[73 108]
[74 107]
[75 106]
[78 105]
[80 104]
[81 103]
[82 102]
[83 101]
[84 100]
[85 98]
[86 97]
[87 96]
[88 95]
[119 147]
[120 146]
[121 145]
[122 144]
[123 143]
[124 142]
[125 141]
[126 140]
[127 139]
[128 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
