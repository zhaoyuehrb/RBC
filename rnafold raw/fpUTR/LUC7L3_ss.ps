%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:43:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGCGUGUCCCACGGGCGCACGGCAUGCUGGGAAGGCGUCCGCGCGGCGGCCAUUUUGUCUUGUCGGCUCCUGUGUGUAGGAGGGAUUUCGGCCUGAGAGCGGGCCGAGGAGAUUGGCGACGGUGUCGCCCGUGUUUUCGUUGGCGGGUGCCUGGGCUGGUGGGAACAGCCGCCCGAAGGAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[164.05291748 161.74240112]
[161.61500549 158.59669495]
[160.18266296 154.45443726]
[148.49951172 145.04678345]
[136.81634521 135.63914490]
[125.13318634 126.23149872]
[101.14077759 129.64366150]
[85.40966797 117.78318024]
[83.86434174 102.57335663]
[68.88278961 101.82959747]
[53.90124130 101.08584595]
[38.91969299 100.34208679]
[23.93814278 99.59833527]
[15.55700779 112.39301300]
[1.98652470 119.22959137]
[-13.08373451 118.36144257]
[-25.61220741 110.12170410]
[-32.28921890 96.80693817]
[-47.27076721 96.06317902]
[-62.25231552 95.31941986]
[-77.23386383 94.57566833]
[-92.21541595 93.83190918]
[-107.19696808 93.08815002]
[-122.17851257 92.34439850]
[-137.16006470 91.60063934]
[-146.04626465 101.73671722]
[-158.96067810 104.85301208]
[-171.12953186 100.02835083]
[-178.18672180 89.23508453]
[-193.15391541 88.24372101]
[-208.12112427 87.25236511]
[-223.08833313 86.26100922]
[-238.05554199 85.26964569]
[-252.33689880 92.07797241]
[-264.52499390 83.51643372]
[-279.49218750 82.52507782]
[-294.45938110 81.53371429]
[-309.42660522 80.54235840]
[-324.39379883 79.55100250]
[-339.36099243 78.55963898]
[-359.21008301 90.55364227]
[-377.51385498 77.55327606]
[-392.51181030 77.80128479]
[-407.50976562 78.04929352]
[-422.50772095 78.29730225]
[-438.24472046 84.60469818]
[-448.66204834 71.22877502]
[-438.69265747 57.51572418]
[-422.75573730 63.29935455]
[-407.75778198 63.05134583]
[-392.75982666 62.80333710]
[-377.76187134 62.55532837]
[-374.23330688 56.33721542]
[-368.70938110 51.69158173]
[-361.85000610 49.23531723]
[-354.49639893 49.32003784]
[-347.56811523 51.98257065]
[-341.94796753 56.93444824]
[-338.36962891 63.59243774]
[-323.40243530 64.58379364]
[-308.43524170 65.57515717]
[-293.46801758 66.56651306]
[-278.50082397 67.55786896]
[-263.53363037 68.54923248]
[-250.32281494 61.66999817]
[-237.06417847 70.30244446]
[-222.09696960 71.29380035]
[-207.12976074 72.28516388]
[-192.16256714 73.27651978]
[-177.19535828 74.26787567]
[-165.03797913 62.65906906]
[-147.90856934 63.44158554]
[-136.41630554 76.61908722]
[-121.43476105 77.36284637]
[-106.45320892 78.10660553]
[-91.47165680 78.85035706]
[-76.49011230 79.59411621]
[-61.50856018 80.33787537]
[-46.52701187 81.08162689]
[-31.54546165 81.82538605]
[-23.58251381 69.23741150]
[-10.29953480 62.27907562]
[4.78260756 62.90784454]
[17.60923195 71.05490112]
[24.68189812 84.61678314]
[39.66344833 85.36053467]
[54.64499664 86.10429382]
[69.62654877 86.84805298]
[84.60809326 87.59180450]
[96.36862946 78.28107452]
[99.08184052 63.52849579]
[101.79505157 48.77591705]
[104.50825500 34.02334213]
[107.22146606 19.27076721]
[109.93466949 4.51819038]
[112.64788055 -10.23438549]
[115.36109161 -24.98696136]
[118.07429504 -39.73953629]
[112.07204437 -55.00076294]
[122.49781036 -67.65917969]
[138.62644958 -64.69289398]
[143.86621094 -49.15336609]
[132.82687378 -37.02632904]
[130.11366272 -22.27375412]
[127.40045929 -7.52117777]
[124.68724823 7.23139858]
[121.97403717 21.98397446]
[119.26083374 36.73654938]
[116.54762268 51.48912811]
[113.83441925 66.24169922]
[111.12120819 80.99427795]
[124.19347382 88.35063171]
[135.39579773 78.37525940]
[140.55656433 63.41942596]
[155.20706177 60.73386002]
[166.40937805 50.75849152]
[177.61170959 40.78312302]
[188.81402588 30.80775452]
[193.45104980 15.07784462]
[209.45339966 11.49221134]
[220.35923767 23.73944664]
[214.94956970 39.22064590]
[198.78939819 42.01007843]
[187.58706665 51.98544693]
[176.38475037 61.96081543]
[165.18243408 71.93618011]
[160.82292175 86.17851257]
[145.37117004 89.57758331]
[134.16883850 99.55295563]
[134.54083252 114.54833984]
[146.22399902 123.95598602]
[157.90715027 133.36363220]
[169.59031677 142.77127075]
[181.57812500 151.78749084]
[193.85749817 160.40242004]
[206.13687134 169.01734924]
[218.41624451 177.63227844]
[230.69561768 186.24720764]
[242.97499084 194.86213684]
[255.25436401 203.47706604]
[267.53372192 212.09201050]
[277.27981567 207.67527771]
[287.89907837 207.71202087]
[297.46752930 212.12831116]
[304.27960205 220.06288147]
[307.15188599 230.03416443]
[305.62860107 240.21675110]
[317.46572876 249.42993164]
[329.30282593 258.64312744]
[341.13992310 267.85632324]
[352.97705078 277.06951904]
[364.81414795 286.28268433]
[380.45675659 288.65310669]
[385.74801636 302.57620239]
[397.58514404 311.78936768]
[409.42224121 321.00256348]
[424.89941406 319.24334717]
[436.77267456 328.75546265]
[438.35446167 343.52142334]
[450.19155884 352.73461914]
[466.50076294 354.44989014]
[472.92175293 369.53973389]
[462.84918213 382.48095703]
[446.64483643 379.96075439]
[440.97836304 364.57171631]
[429.14126587 355.35852051]
[414.43884277 357.44998169]
[402.30307007 348.27511597]
[400.20904541 332.83969116]
[388.37194824 323.62649536]
[376.53485107 314.41329956]
[361.73889160 312.70187378]
[355.60095215 298.11981201]
[343.76385498 288.90661621]
[331.92672729 279.69342041]
[320.08963013 270.48022461]
[308.25253296 261.26702881]
[296.41540527 252.05384827]
[277.33163452 255.89244080]
[261.31411743 244.30305481]
[258.91879272 224.37136841]
[246.63943481 215.75643921]
[234.36006165 207.14151001]
[222.08068848 198.52658081]
[209.80131531 189.91165161]
[197.52194214 181.29672241]
[185.24256897 172.68179321]
[172.96319580 164.06686401]
[170.16636658 164.42994690]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 133]
[4 132]
[5 131]
[6 130]
[9 89]
[10 88]
[11 87]
[12 86]
[13 85]
[18 80]
[19 79]
[20 78]
[21 77]
[22 76]
[23 75]
[24 74]
[25 73]
[29 70]
[30 69]
[31 68]
[32 67]
[33 66]
[35 64]
[36 63]
[37 62]
[38 61]
[39 60]
[40 59]
[42 52]
[43 51]
[44 50]
[45 49]
[90 111]
[91 110]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[98 103]
[112 129]
[113 128]
[115 126]
[116 125]
[117 124]
[118 123]
[134 188]
[135 187]
[136 186]
[137 185]
[138 184]
[139 183]
[140 182]
[141 181]
[147 178]
[148 177]
[149 176]
[150 175]
[151 174]
[152 173]
[154 171]
[155 170]
[156 169]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
