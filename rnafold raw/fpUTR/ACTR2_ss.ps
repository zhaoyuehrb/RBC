%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:17:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUCACCGCUGCCAGUCGCGCUGCCUGCCCGUCCCACCCUUUUCGUGCAGGCAUUCAGCUAAAUGACGGGCGGAGCCCGGCGGCGGCUUCCGGUCGGGGGAAAAAAGUUGGGCCGAAGGAGGGGCCGGGAAGACGCAAGAGGAAGAAGAGAAAACGGCCGGGCGGCGGUGGCUGUAGGUUGUGCGGCUGCAGCGGCUCUUCCCUGGGCGGACG\
) } def
/len { sequence length } bind def

/coor [
[145.43115234 595.16381836]
[149.67515564 580.23840332]
[161.90231323 570.68450928]
[161.24803162 555.69879150]
[160.59373474 540.71307373]
[159.93943787 525.72735596]
[159.28515625 510.74163818]
[157.76062012 495.81930542]
[155.37101746 481.01089478]
[152.98141479 466.20245361]
[150.59181213 451.39401245]
[148.20220947 436.58557129]
[145.81260681 421.77713013]
[143.42300415 406.96868896]
[139.25575256 400.86837769]
[141.10797119 391.92764282]
[138.93399048 377.08602905]
[136.76000977 362.24441528]
[134.58604431 347.40277100]
[132.41206360 332.56115723]
[130.23808289 317.71954346]
[128.06410217 302.87789917]
[125.89012909 288.03628540]
[116.38993073 276.56475830]
[122.04545593 261.78890991]
[119.87147522 246.94729614]
[117.69749451 232.10566711]
[115.52352142 217.26405334]
[113.34954071 202.42242432]
[111.17556763 187.58079529]
[108.46348572 172.82801819]
[105.21688843 158.18357849]
[101.97029877 143.53913879]
[98.72370148 128.89469910]
[95.47711182 114.25025177]
[83.98644257 104.60843658]
[69.00071716 103.95414734]
[54.87618637 111.08213043]
[42.49852371 102.79703522]
[27.51280022 102.14274597]
[12.52707672 101.48845673]
[4.94941187 109.28489685]
[-5.45339537 111.57875824]
[-15.19706345 107.84883881]
[-21.15269279 99.55127716]
[-36.11304474 98.46141052]
[-51.07339859 97.37154388]
[-66.03375244 96.28166962]
[-75.14123535 106.20173645]
[-88.10964203 109.02514648]
[-100.15824127 103.94031525]
[-106.97661591 93.00949097]
[-121.91954041 91.70215607]
[-136.86245728 90.39482117]
[-150.02693176 99.56411743]
[-165.36198425 94.85076141]
[-171.10388184 79.87043762]
[-162.84791565 66.11476135]
[-146.92736816 64.13591003]
[-135.55511475 75.45189667]
[-120.61219788 76.75923157]
[-105.66928101 78.06657410]
[-93.25775909 66.71537018]
[-76.13981628 67.87760925]
[-64.94388580 81.32131958]
[-49.98353195 82.41118622]
[-35.02317810 83.50106049]
[-20.06282234 84.59092712]
[-3.31809115 74.91699982]
[13.18136692 86.50273132]
[28.16709137 87.15702057]
[43.15281296 87.81131744]
[56.20546722 80.63653564]
[69.65500641 88.96842957]
[84.64073181 89.62271881]
[91.72064972 88.47701263]
[97.37997437 90.51353455]
[102.91806030 76.57331848]
[108.45615387 62.63311005]
[113.99424744 48.69289780]
[119.53234100 34.75268555]
[125.07043457 20.81247139]
[130.60852051 6.87225819]
[128.51298523 -8.80955696]
[140.40261841 -17.78095627]
[145.32737732 -31.94947052]
[138.08352661 -45.73947906]
[142.65112305 -60.25125885]
[155.84242249 -67.07218170]
[160.14447021 -81.44202423]
[164.44651794 -95.81186676]
[168.74856567 -110.18170929]
[173.05061340 -124.55155182]
[171.90104675 -131.05615234]
[173.90560913 -136.36886597]
[177.69241333 -139.27342224]
[182.41058350 -153.51206970]
[175.57087708 -167.50692749]
[180.55860901 -181.87973022]
[193.94271851 -188.31408691]
[190.93891907 -203.84753418]
[202.28678894 -213.49507141]
[193.21704102 -221.37149048]
[187.34988403 -231.81393433]
[185.35168457 -243.58880615]
[187.43328857 -255.31407166]
[193.32812500 -265.62152100]
[202.32601929 -273.31631470]
[213.35868835 -277.51562500]
[225.12658691 -277.74972534]
[230.46134949 -291.76901245]
[228.13796997 -307.41867065]
[239.89585876 -316.56204224]
[245.23062134 -330.58132935]
[250.56538391 -344.60061646]
[255.90014648 -358.61990356]
[247.29870605 -371.53482056]
[247.96484375 -387.03759766]
[257.64239502 -399.16708374]
[272.61013794 -403.25927734]
[287.11270142 -397.74060059]
[295.57351685 -384.73315430]
[294.73925781 -369.23849487]
[284.93069458 -357.21472168]
[269.91943359 -353.28515625]
[264.58465576 -339.26586914]
[259.24990845 -325.24658203]
[253.91514587 -311.22729492]
[256.62011719 -296.58035278]
[244.48063660 -286.43423462]
[239.14587402 -272.41494751]
[251.22518921 -258.90167236]
[254.78582764 -241.04290771]
[248.75646973 -223.76954651]
[234.72590637 -211.89564514]
[216.52542114 -208.77690125]
[219.86669922 -194.26190186]
[208.18135071 -183.59591675]
[215.07472229 -170.44232178]
[210.49266052 -155.93510437]
[196.64921570 -148.79389954]
[191.93104553 -134.55525208]
[187.42045593 -120.24950409]
[183.11840820 -105.87966156]
[178.81636047 -91.50981903]
[174.51431274 -77.13997650]
[170.21226501 -62.77013397]
[177.48529053 -49.82259369]
[173.32710266 -35.18824387]
[159.69721985 -27.64742088]
[173.36953735 -33.81731415]
[187.44718933 -28.63851929]
[193.86166382 -15.07922268]
[188.93655396 -0.91083014]
[175.49465942 5.74615288]
[161.24009705 1.07632816]
[154.34283447 -12.24286461]
[156.83448792 2.44185305]
[144.54873657 12.41034985]
[139.01065063 26.35056305]
[133.47254944 40.29077530]
[127.93446350 54.23098755]
[122.39636993 68.17120361]
[116.85827637 82.11141205]
[111.32018280 96.05162811]
[110.12155151 111.00366211]
[113.36814117 125.64810181]
[116.61473846 140.29254150]
[119.86132812 154.93698120]
[123.10792542 169.58142090]
[133.22984314 158.51133728]
[148.20503235 159.37362671]
[156.98942566 171.53234863]
[153.10456848 186.02055359]
[139.41554260 192.15328979]
[126.01718903 185.40681458]
[128.19116211 200.24844360]
[130.36514282 215.09007263]
[132.53912354 229.93170166]
[134.71310425 244.77331543]
[136.88708496 259.61492920]
[146.54277039 272.14804077]
[140.73175049 285.86230469]
[142.90573120 300.70391846]
[145.07971191 315.54556274]
[147.25367737 330.38717651]
[149.42765808 345.22879028]
[151.60163879 360.07043457]
[153.77561951 374.91204834]
[155.94960022 389.75366211]
[158.23144531 404.57910156]
[160.62104797 419.38754272]
[163.01065063 434.19598389]
[165.40025330 449.00439453]
[167.78985596 463.81283569]
[170.17945862 478.62127686]
[172.56906128 493.42971802]
[180.49284363 480.69338989]
[194.34677124 474.94284058]
[208.96070862 478.32412720]
[218.88088989 489.57534790]
[220.40521240 504.49768066]
[212.96481323 517.52227783]
[199.33638000 523.78851318]
[184.60588074 520.95788574]
[174.27087402 510.08734131]
[174.92517090 525.07305908]
[175.57945251 540.05877686]
[176.23374939 555.04449463]
[176.88804626 570.03027344]
[189.90135193 578.48205566]
[195.43003845 592.98083496]
[191.34819031 607.95141602]
[179.22538757 617.63732910]
[163.72308350 618.31414795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 210]
[4 209]
[5 208]
[6 207]
[7 206]
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[13 192]
[14 191]
[16 190]
[17 189]
[18 188]
[19 187]
[20 186]
[21 185]
[22 184]
[23 183]
[25 181]
[26 180]
[27 179]
[28 178]
[29 177]
[30 176]
[31 170]
[32 169]
[33 168]
[34 167]
[35 166]
[36 75]
[37 74]
[39 72]
[40 71]
[41 70]
[45 68]
[46 67]
[47 66]
[48 65]
[52 62]
[53 61]
[54 60]
[77 165]
[78 164]
[79 163]
[80 162]
[81 161]
[82 160]
[83 159]
[85 157]
[86 150]
[89 147]
[90 146]
[91 145]
[92 144]
[93 143]
[96 142]
[97 141]
[100 138]
[102 136]
[110 131]
[111 130]
[113 128]
[114 127]
[115 126]
[116 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
