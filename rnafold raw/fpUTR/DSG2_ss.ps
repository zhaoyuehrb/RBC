%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:27:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCUCUGUAAAAGCGGCCCGGGCCGGCCCCCGGCUCCAUUUUCUCGCGGCGGCCACACCUGGAGCCGCGCCUUUGGGUUGGGCUGGGCUGGGCCGCGCAACCGCCACGGGAAGACAGCCCUCGGGGCGGGGAGGGAGAGGGUGGCCGGGCCGGGGGGAGGCCGGGGCCAGGGAGGAGCCGAGUGCGCGCUCGGGGCAGGCGGCGGCGCGGAGCGGUGCGGCGGCGGGAGGCGGAGGCGAGGGUGCG\
) } def
/len { sequence length } bind def

/coor [
[496.59915161 674.12304688]
[495.65353394 659.15283203]
[483.81201172 643.84875488]
[493.11370850 625.94647217]
[491.79067993 611.00494385]
[490.46762085 596.06341553]
[489.14456177 581.12188721]
[487.82153320 566.18035889]
[486.49847412 551.23883057]
[485.17544556 536.29724121]
[467.98455811 532.86834717]
[452.65478516 524.32116699]
[440.67053223 511.46792603]
[433.19696045 495.53842163]
[430.96679688 478.06259155]
[434.20837402 460.72341919]
[442.62252808 445.19494629]
[432.04943848 434.55493164]
[421.47631836 423.91494751]
[410.90322876 413.27493286]
[400.33013916 402.63491821]
[385.87069702 399.06085205]
[381.63165283 383.81811523]
[371.05856323 373.17813110]
[360.48547363 362.53811646]
[349.91238403 351.89810181]
[335.06341553 352.10809326]
[324.18923950 341.46823120]
[324.06967163 325.89184570]
[313.49658203 315.25186157]
[302.92349243 304.61184692]
[292.35040283 293.97183228]
[281.77731323 283.33184814]
[271.20419312 272.69183350]
[260.63110352 262.05181885]
[250.05801392 251.41181946]
[239.48492432 240.77182007]
[228.71237183 230.33380127]
[217.74421692 220.10153198]
[206.77606201 209.86924744]
[195.80790710 199.63696289]
[184.83975220 189.40467834]
[173.87159729 179.17239380]
[162.90344238 168.94010925]
[151.93528748 158.70783997]
[140.96713257 148.47555542]
[129.99897766 138.24327087]
[115.41465759 135.21893311]
[110.60184479 120.14751434]
[85.32903290 125.46215820]
[64.02410889 101.47397614]
[49.73505402 96.91078186]
[35.44599533 92.34757996]
[21.15693474 87.78437805]
[6.86787653 83.22117615]
[-7.42118263 78.65797424]
[-16.52262115 79.02998352]
[-21.86108589 73.94602203]
[-36.09143448 69.20290375]
[-50.35142517 64.54965210]
[-64.64048004 59.98645401]
[-78.92954254 55.42325211]
[-85.42051697 56.44871521]
[-90.67632294 54.37017822]
[-93.51896667 50.56045532]
[-107.68833923 45.63817978]
[-121.85771942 40.71590424]
[-136.02709961 35.79363251]
[-150.11878967 42.43154526]
[-164.41842651 37.23781204]
[-170.65982056 23.76262665]
[-184.82919312 18.84035110]
[-198.99858093 13.91807747]
[-214.99435425 17.53290939]
[-225.92253113 5.30559683]
[-220.54112244 -10.18544865]
[-204.38606262 -13.00436783]
[-194.07629395 -0.25129852]
[-179.90692139 4.67097616]
[-165.73754883 9.59325123]
[-152.48626709 2.88959551]
[-138.04638672 7.67963409]
[-131.10481262 21.62425423]
[-116.93544006 26.54652977]
[-102.76606750 31.46880531]
[-88.59668732 36.39107895]
[-74.36634064 41.13419342]
[-60.07728195 45.69739532]
[-45.78822327 50.26059341]
[-38.47859573 49.30389023]
[-31.34832001 54.97255325]
[-17.11796951 59.71566772]
[-2.85798216 64.36891937]
[11.43107700 68.93212128]
[25.72013474 73.49532318]
[40.00919342 78.05851746]
[54.29825211 82.62171936]
[68.58731079 87.18492126]
[74.19873047 82.20877838]
[64.24662781 70.98577881]
[75.46978760 61.03386307]
[85.42156219 72.25649261]
[91.03298187 67.28034973]
[88.21110535 52.54816818]
[85.38922882 37.81599426]
[82.56735992 23.08381653]
[79.74548340 8.35163879]
[69.55017853 -3.74655437]
[74.75501251 -17.70216179]
[71.93314362 -32.43433762]
[69.01838684 -47.14841843]
[66.01087189 -61.84382248]
[51.82833099 -68.13946533]
[44.08405685 -81.58587646]
[45.75588226 -97.01262665]
[56.20095444 -108.48781586]
[71.40293121 -111.59900665]
[85.51634216 -105.14987946]
[93.11429596 -91.62025452]
[91.27521515 -76.21254730]
[80.70627594 -64.85134125]
[83.71379089 -50.15593719]
[88.12294769 -44.24786758]
[86.66532135 -35.25621033]
[89.48719025 -20.52403450]
[99.48065948 -9.47958469]
[94.47766113 5.52976608]
[97.29953766 20.26194191]
[100.12140656 34.99411774]
[102.94328308 49.72629547]
[105.76515198 64.45847321]
[118.91923523 73.33343506]
[125.82421875 85.97613525]
[126.05435181 98.92478943]
[120.83412933 109.17935944]
[136.20297241 112.93558502]
[140.23126221 127.27511597]
[151.19941711 137.50740051]
[162.16757202 147.73968506]
[173.13572693 157.97195435]
[184.10388184 168.20423889]
[195.07203674 178.43652344]
[206.04019165 188.66880798]
[217.00834656 198.90109253]
[227.97650146 209.13337708]
[238.94465637 219.36564636]
[243.98228455 220.53057861]
[247.70939636 223.23027039]
[249.76235962 226.71492004]
[250.12492371 230.19873047]
[260.69802856 240.83872986]
[271.27111816 251.47872925]
[281.84420776 262.11874390]
[292.41729736 272.75875854]
[302.99038696 283.39874268]
[313.56347656 294.03875732]
[324.13659668 304.67877197]
[334.70968628 315.31875610]
[350.28500366 315.53659058]
[360.85604858 326.47769165]
[360.55239868 341.32501221]
[371.12548828 351.96502686]
[381.69857788 362.60501099]
[392.27166748 373.24502563]
[407.48736572 377.58013916]
[410.97015381 392.06182861]
[421.54324341 402.70184326]
[432.11633301 413.34185791]
[442.68942261 423.98184204]
[453.26251221 434.62185669]
[466.93966675 426.99743652]
[482.16253662 423.39395142]
[497.77600098 424.07638550]
[512.59759521 428.98471069]
[525.50714111 437.73925781]
[535.53125000 449.66998291]
[541.91693115 463.86773682]
[544.18786621 479.25354004]
[542.18035889 494.66061401]
[556.01123047 500.46636963]
[569.84210205 506.27212524]
[583.67297363 512.07788086]
[601.89495850 509.34625244]
[611.94183350 523.74755859]
[625.84484863 529.37835693]
[639.74792480 535.00909424]
[653.65093994 540.63989258]
[662.75445557 540.95733643]
[667.69311523 546.43048096]
[681.52398682 552.23620605]
[695.35485840 558.04199219]
[709.18572998 563.84771729]
[723.01666260 569.65350342]
[738.73590088 567.86059570]
[747.47650146 579.92089844]
[763.19580078 578.12805176]
[771.93634033 590.18835449]
[785.76721191 595.99414062]
[801.48651123 594.20123291]
[810.22711182 606.26159668]
[826.41894531 603.66235352]
[836.55450439 616.55432129]
[830.20721436 631.67529297]
[813.90661621 633.47015381]
[804.42132568 620.09246826]
[789.69134521 622.30059814]
[779.96148682 609.82501221]
[766.13061523 604.01928711]
[751.40057373 606.22741699]
[741.67071533 593.75183105]
[726.94073486 595.95996094]
[717.21087646 583.48437500]
[703.38000488 577.67858887]
[689.54913330 571.87286377]
[675.71826172 566.06707764]
[661.88739014 560.26135254]
[648.02014160 554.54296875]
[634.11712646 548.91217041]
[620.21411133 543.28137207]
[606.31103516 537.65057373]
[595.06970215 542.07574463]
[583.45013428 537.51800537]
[577.86718750 525.90875244]
[564.03631592 520.10296631]
[550.20544434 514.29724121]
[536.37457275 508.49148560]
[532.03900146 514.84307861]
[526.88000488 520.54614258]
[520.99346924 525.49468994]
[514.48864746 529.59686279]
[507.48645020 532.77636719]
[500.11697388 534.97424316]
[501.44000244 549.91577148]
[502.76306152 564.85729980]
[504.08612061 579.79882812]
[505.40914917 594.74035645]
[506.73220825 609.68188477]
[508.05523682 624.62347412]
[516.76086426 631.09191895]
[520.40747070 641.07312012]
[518.02227783 651.20330811]
[510.62368774 658.20721436]
[511.56933594 673.17736816]
[523.59112549 683.43658447]
[524.75421143 699.19805908]
[514.36846924 711.11071777]
[498.59558105 712.10705566]
[486.79339600 701.59594727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 243]
[2 242]
[4 238]
[5 237]
[6 236]
[7 235]
[8 234]
[9 233]
[10 232]
[17 170]
[18 169]
[19 168]
[20 167]
[21 166]
[23 164]
[24 163]
[25 162]
[26 161]
[29 158]
[30 157]
[31 156]
[32 155]
[33 154]
[34 153]
[35 152]
[36 151]
[37 150]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[49 135]
[51 98]
[52 97]
[53 96]
[54 95]
[55 94]
[56 93]
[58 92]
[59 91]
[60 89]
[61 88]
[62 87]
[65 86]
[66 85]
[67 84]
[68 83]
[71 80]
[72 79]
[73 78]
[103 131]
[104 130]
[105 129]
[106 128]
[107 127]
[109 125]
[110 124]
[111 122]
[112 121]
[179 226]
[180 225]
[181 224]
[182 223]
[184 220]
[185 219]
[186 218]
[187 217]
[189 216]
[190 215]
[191 214]
[192 213]
[193 212]
[195 210]
[197 208]
[198 207]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
