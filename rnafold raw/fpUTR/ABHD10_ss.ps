%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:10:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACCAACAGUCUAAACGAAAGAGCCACGACGCUCUGCGCAUGUGCGCUCUUCGCAAGCUGAAAAUCUUGCGGGGAGCUCUUUAGCAAGUUCCGCCUUCCAGCCUGAAGCGCAUGCGCAGCCUCGGUUCCGUUGCGUAGCGUGUCCCUCAGUGGGACACUGCAGGGUGCGGGGACAACUACGAAG\
) } def
/len { sequence length } bind def

/coor [
[82.96855164 276.52740479]
[69.12261200 270.51138306]
[57.41394806 260.98196411]
[48.71142578 248.64630127]
[43.66082382 234.41978455]
[42.63693237 219.35809326]
[45.71572876 204.57893372]
[52.66875076 191.17901611]
[62.98003769 180.15267944]
[75.88441467 172.31817627]
[90.42430115 168.25685120]
[90.42430115 153.25685120]
[90.42430115 138.25685120]
[90.42430115 123.25685883]
[83.82667542 119.69017029]
[76.69329834 132.88542175]
[73.98642731 147.63917542]
[59.11828995 149.62374878]
[52.63650131 136.09651184]
[63.49803543 125.75205231]
[70.63140869 112.55679321]
[64.03378296 108.99010468]
[51.48354340 117.20542145]
[38.93330383 125.42074585]
[26.38306808 133.63606262]
[13.83282948 141.85139465]
[10.84897518 157.37144470]
[-2.28194356 166.16659546]
[-17.76958656 163.01881409]
[-26.42540741 149.79563904]
[-23.11406326 134.34214783]
[-9.80011654 125.82661438]
[5.61750698 129.30114746]
[18.16774559 121.08583069]
[30.71798325 112.87050629]
[43.26822281 104.65518188]
[55.81845856 96.43986511]
[86.63712311 76.06086731]
[79.39315796 62.92599487]
[72.14919281 49.79111862]
[64.90522766 36.65624237]
[57.66126251 23.52136421]
[50.41729736 10.38648796]
[43.17333221 -2.74838805]
[35.92936707 -15.88326454]
[28.68540192 -29.01814079]
[21.44143677 -42.15301514]
[-17.89763641 -43.26915359]
[-30.58411407 -51.27248383]
[-43.27059174 -59.27581406]
[-55.95706940 -67.27914429]
[-68.64354706 -75.28247070]
[-81.33002472 -83.28580475]
[-94.01650238 -91.28913116]
[-106.70298004 -99.29246521]
[-119.38945770 -107.29579163]
[-132.07592773 -115.29912567]
[-144.76240540 -123.30245209]
[-157.44888306 -131.30578613]
[-171.81044006 -125.42994690]
[-186.87487793 -129.15049744]
[-196.84960938 -141.03680420]
[-197.89913940 -156.51835632]
[-189.61993408 -169.64215088]
[-175.19548035 -175.36184692]
[-160.17230225 -171.47808838]
[-150.32710266 -159.48426819]
[-149.44555664 -143.99226379]
[-136.75907898 -135.98892212]
[-124.07260895 -127.98560333]
[-111.38613129 -119.98226929]
[-98.69965363 -111.97894287]
[-86.01317596 -103.97560883]
[-73.32669830 -95.97228241]
[-60.64021683 -87.96894836]
[-47.95373917 -79.96562195]
[-35.26726151 -71.96229553]
[-22.58078575 -63.95896149]
[-9.89430714 -55.95563126]
[-2.97125340 -58.84030151]
[-10.26768398 -71.94610596]
[-17.56411552 -85.05191040]
[-29.46354866 -94.18446350]
[-30.65235519 -109.13727570]
[-20.34543419 -120.03532410]
[-5.34960985 -119.68138123]
[4.43167448 -108.30920410]
[2.53805041 -93.42800140]
[6.70645237 -79.01882172]
[10.87485504 -64.60964203]
[17.79790878 -67.49431610]
[21.04792023 -82.13799286]
[24.29793167 -96.78167725]
[18.35333252 -114.19972229]
[30.68482399 -126.67327881]
[33.68837357 -141.36949158]
[24.76906586 -154.41638184]
[27.76977921 -169.93319702]
[40.91024399 -178.71406555]
[56.39445877 -175.54946899]
[65.03591156 -162.31689453]
[61.70777893 -146.86700439]
[48.38458633 -138.36593628]
[45.38103485 -123.66972351]
[51.78856659 -113.39418030]
[49.39172745 -101.11521149]
[38.94161224 -93.53166962]
[35.69160080 -78.88798523]
[32.44158936 -64.24430084]
[34.57631302 -49.39698029]
[41.82027817 -36.26210403]
[49.06424332 -23.12722969]
[56.30820847 -9.99235249]
[63.55217361 3.14252329]
[70.79613495 16.27739906]
[78.04010010 29.41227531]
[85.28406525 42.54715347]
[92.52803040 55.68202972]
[99.77199554 68.81690216]
[114.23335266 72.80051422]
[127.18153381 65.22789001]
[140.12971497 57.65525818]
[147.77510071 43.14733124]
[164.17024231 42.78493500]
[172.44921875 56.94087219]
[164.09532166 71.05272675]
[147.70233154 70.60343933]
[134.75416565 78.17606354]
[121.80598450 85.74869537]
[123.06449890 100.69580841]
[137.09660339 105.99674988]
[151.12870789 111.29769135]
[165.16081238 116.59864044]
[179.42565918 110.34147644]
[193.58068848 115.91727448]
[199.45803833 129.55517578]
[215.10206604 127.19406891]
[224.27375793 138.92988586]
[233.42892456 139.03756714]
[238.49581909 144.43954468]
[252.43688965 149.97546387]
[266.42398071 155.39408875]
[280.45608521 160.69503784]
[294.48818970 165.99597168]
[308.52029419 171.29692078]
[322.55239868 176.59786987]
[336.58450317 181.89880371]
[350.61660767 187.19975281]
[365.77072144 181.93357849]
[379.25894165 190.61962891]
[380.73428345 206.59469604]
[369.06494141 217.60409546]
[353.20269775 215.20233154]
[345.31567383 201.23185730]
[331.28356934 195.93090820]
[317.25146484 190.62997437]
[303.21936035 185.32902527]
[289.18725586 180.02807617]
[275.15515137 174.72714233]
[261.12304688 169.42619324]
[253.73927307 170.00474548]
[246.90097046 163.91653442]
[232.95989990 158.38061523]
[218.97280884 152.96199036]
[204.33245850 155.70225525]
[194.15708923 143.58729553]
[180.73059082 149.93273926]
[166.42453003 144.75671387]
[159.85987854 130.63073730]
[145.82775879 125.32979584]
[131.79565430 120.02885437]
[117.76355743 114.72791290]
[105.42430115 123.25685883]
[105.42430115 138.25685120]
[105.42430115 153.25685120]
[105.42430115 168.25685120]
[119.96418762 172.31817627]
[132.86857605 180.15267944]
[143.17985535 191.17901611]
[150.13287354 204.57893372]
[153.21166992 219.35809326]
[152.18778992 234.41978455]
[147.13717651 248.64630127]
[138.43466187 260.98196411]
[126.72599792 270.51138306]
[112.88005829 276.52740479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 176]
[12 175]
[13 174]
[14 173]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[38 119]
[39 118]
[40 117]
[41 116]
[42 115]
[43 114]
[44 113]
[45 112]
[46 111]
[47 110]
[48 79]
[49 78]
[50 77]
[51 76]
[52 75]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[59 68]
[91 109]
[92 108]
[93 107]
[95 104]
[96 103]
[120 129]
[121 128]
[122 127]
[130 172]
[131 171]
[132 170]
[133 169]
[136 166]
[138 164]
[140 163]
[141 162]
[142 160]
[143 159]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
