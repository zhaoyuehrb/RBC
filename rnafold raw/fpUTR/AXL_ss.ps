%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:19:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAGGGAAGGAGGCAGGGGUGCUGAGAAGGCGGCUGCUGGGCAGAGCCGGUGGCAAGGGCCUCCCCUGCCGCUGUGCCAGGCAGGCAGUGCCAAAUCCGGGGAGCCUGGAGCUGGGGGGAGGGCCGGGGACAGCCCGGCCCUGCCCCCUCCCCCGCUGGGAGCCCAACAACUUCUGAGGAAAGUUUGGCACCC\
) } def
/len { sequence length } bind def

/coor [
[184.43188477 212.14724731]
[176.01063538 199.73425293]
[167.58938599 187.32125854]
[154.04119873 181.13287354]
[152.69642639 165.36892700]
[144.27517700 152.95593262]
[135.85391235 140.54292297]
[127.43266296 128.12992859]
[113.93574524 138.64277649]
[96.54776001 142.72662354]
[78.30444336 139.02799988]
[62.65940857 127.61065674]
[52.83216095 110.05168915]
[38.18554306 113.28845215]
[23.53892708 116.52521515]
[8.89231110 119.76197815]
[-5.75430489 122.99874115]
[-20.40092087 126.23550415]
[-35.04753876 129.47225952]
[-49.69415283 132.70903015]
[-36.59204865 140.01210022]
[-30.17201233 153.56875610]
[-32.82392883 168.33247375]
[-43.56061554 178.80738831]
[-58.38528061 181.09413147]
[-71.77937317 174.34149170]
[-78.75687408 161.06314087]
[-76.72036743 146.20202637]
[-66.42817688 135.29039001]
[-81.36933136 136.61778259]
[-96.31047821 137.94517517]
[-111.25163269 139.27258301]
[-127.98681641 152.64338684]
[-146.33454895 143.20758057]
[-161.19412231 145.25527954]
[-176.05369568 147.30297852]
[-190.91326904 149.35069275]
[-205.77284241 151.39839172]
[-220.63241577 153.44609070]
[-235.49198914 155.49380493]
[-250.35156250 157.54150391]
[-259.69570923 170.28758240]
[-275.32836914 172.61048889]
[-287.97491455 163.13209534]
[-290.13241577 147.47575378]
[-280.52087402 134.93011475]
[-264.84259033 132.93826294]
[-252.39926147 142.68193054]
[-237.53968811 140.63423157]
[-222.68011475 138.58651733]
[-207.82054138 136.53881836]
[-192.96096802 134.49111938]
[-178.10139465 132.44340515]
[-163.24182129 130.39570618]
[-148.38224792 128.34800720]
[-144.23188782 120.47273254]
[-136.80572510 115.31830597]
[-127.70310211 114.14920044]
[-118.95678711 117.35435486]
[-112.57902527 124.33142853]
[-97.63787842 123.00402832]
[-82.69672394 121.67663574]
[-67.75556946 120.34923553]
[-52.93091583 118.06240845]
[-38.28430176 114.82564545]
[-23.63768387 111.58888245]
[-8.99106789 108.35211945]
[5.65554810 105.11535645]
[20.30216408 101.87859344]
[34.94878006 98.64183044]
[49.59539795 95.40506744]
[55.80663300 81.75148010]
[48.62271881 68.58366394]
[33.72692490 64.02809906]
[26.62899590 50.57172394]
[31.06382370 36.39893723]
[23.87990952 23.23112297]
[16.69599724 10.06330681]
[9.51208305 -3.10450935]
[-5.41191483 -8.99126148]
[-9.97647858 -24.37125778]
[-0.68006629 -37.44628143]
[15.34591103 -38.18629456]
[25.80769348 -26.02362061]
[22.67989922 -10.28842354]
[29.86381340 2.87939286]
[37.04772568 16.04720879]
[44.23163986 29.21502495]
[58.54931259 33.15708160]
[66.02240753 46.40878296]
[61.79053497 61.39974976]
[68.97444916 74.56756592]
[76.39574432 73.48389435]
[74.22863770 58.64126587]
[89.07130432 56.47438812]
[91.23834229 71.31655884]
[98.65963745 70.23289490]
[101.77831268 55.56068039]
[104.89698792 40.88846588]
[108.01566315 26.21625137]
[111.13433838 11.54403687]
[114.25301361 -3.12817717]
[111.63194275 -19.87829208]
[127.00186920 -27.03382301]
[138.13258362 -14.24540615]
[128.92523193 -0.00950177]
[125.80655670 14.66271210]
[122.68788147 29.33492661]
[119.56920624 44.00714111]
[116.45053101 58.67935562]
[113.33185577 73.35157013]
[119.25431061 77.95314026]
[133.14692688 72.29669189]
[131.09922791 87.15629578]
[137.02168274 91.75786591]
[150.46809387 85.10999298]
[163.91448975 78.46212006]
[177.36090088 71.81424713]
[190.80729675 65.16637421]
[199.74903870 52.11433029]
[214.58721924 53.40963745]
[228.03361511 46.76176453]
[241.48002625 40.11389160]
[254.92642212 33.46601868]
[268.37283325 26.81814384]
[281.81924438 20.17027092]
[295.26565552 13.52239799]
[308.71203613 6.87452507]
[322.15844727 0.22665167]
[328.64135742 -14.44820690]
[344.19268799 -18.38977814]
[356.88278198 -8.57442760]
[356.97686768 7.46834946]
[344.40280151 17.43190765]
[328.80633545 13.67305565]
[315.35992432 20.32092857]
[301.91351318 26.96880150]
[288.46710205 33.61667633]
[275.02069092 40.26454926]
[261.57431030 46.91242218]
[248.12789917 53.56029510]
[234.68148804 60.20816803]
[221.23509216 66.85604095]
[213.25512695 79.43258667]
[197.45516968 78.61277771]
[184.00877380 85.26065063]
[170.56236267 91.90852356]
[157.11596680 98.55639648]
[143.66955566 105.20426941]
[139.84565735 119.70867920]
[148.26690674 132.12167358]
[156.68817139 144.53466797]
[165.10942078 156.94766235]
[179.25994873 164.02391052]
[180.00238037 178.90000916]
[188.42362976 191.31300354]
[196.84489441 203.72599792]
[210.99540710 210.80224609]
[211.73783875 225.67832947]
[220.15910339 238.09133911]
[228.58035278 250.50433350]
[242.73088074 257.58056641]
[243.47331238 272.45666504]
[251.89456177 284.86965942]
[260.31582642 297.28265381]
[274.46633911 304.35891724]
[275.20877075 319.23498535]
[283.63003540 331.64797974]
[292.05126953 344.06100464]
[302.85089111 345.49044800]
[310.91012573 352.48928833]
[313.72061157 362.55871582]
[310.58508301 372.30114746]
[318.60208130 384.97900391]
[326.61907959 397.65686035]
[341.38333130 404.79467773]
[342.31393433 421.16738892]
[328.45355225 429.93215942]
[314.06054688 422.07257080]
[313.94122314 405.67385864]
[305.92422485 392.99600220]
[297.90725708 380.31814575]
[280.17587280 372.62478638]
[279.63827515 352.48223877]
[271.21704102 340.06924438]
[262.79577637 327.65625000]
[249.24760437 321.46786499]
[247.90281677 305.70391846]
[239.48156738 293.29092407]
[231.06031799 280.87792969]
[217.51213074 274.68954468]
[216.16735840 258.92559814]
[207.74610901 246.51258850]
[199.32484436 234.09959412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 157]
[2 156]
[3 155]
[5 153]
[6 152]
[7 151]
[8 150]
[13 71]
[14 70]
[15 69]
[16 68]
[17 67]
[18 66]
[19 65]
[20 64]
[29 63]
[30 62]
[31 61]
[32 60]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[72 92]
[73 91]
[76 88]
[77 87]
[78 86]
[79 85]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
[102 106]
[115 149]
[116 148]
[117 147]
[118 146]
[119 145]
[121 143]
[122 142]
[123 141]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[159 194]
[160 193]
[161 192]
[163 190]
[164 189]
[165 188]
[167 186]
[168 185]
[169 184]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
