%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:46:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAAGGGCGGCGCGCGCGGCGGCGGCGGCAGCUCCCCGGCAGCGGCGGUGGAGAGCGCAGCGCGCAGCCCGGUGCAGCCCUGGCUUUCCCCUCGCUGCGCGCCCGCGCCCCCUUUCGCGUCCGCAACCAGAAGCCCAGUGCGGCGCCAGGAGCCGGACCCGCGCCCGCACCGCUCCCGGGACCGCGACCCCGGCCGCCCAGAG\
) } def
/len { sequence length } bind def

/coor [
[172.38751221 609.05554199]
[159.21382141 601.15936279]
[151.76715088 587.72650146]
[152.05065918 572.37023926]
[159.98805237 559.22131348]
[173.44422913 551.81683350]
[173.67408752 536.81854248]
[173.90396118 521.82031250]
[174.13381958 506.82208252]
[174.36367798 491.82385254]
[174.59355164 476.82562256]
[174.82341003 461.82739258]
[160.17253113 444.06542969]
[161.16102600 422.72406006]
[175.06863403 408.76440430]
[171.42741394 394.21304321]
[167.78619385 379.66171265]
[154.92019653 372.24539185]
[151.02020264 357.54013062]
[158.88635254 344.09536743]
[155.24513245 329.54403687]
[151.60391235 314.99270630]
[147.96269226 300.44134521]
[135.09669495 293.02505493]
[131.19668579 278.31979370]
[139.06283569 264.87503052]
[135.42161560 250.32368469]
[131.78041077 235.77235413]
[128.13919067 221.22100830]
[124.16445923 206.75720215]
[113.09915924 196.78683472]
[116.54909515 181.34634399]
[112.24296570 166.97772217]
[107.93684387 152.60910034]
[103.63071442 138.24049377]
[99.32458496 123.87186432]
[85.66300201 120.88819122]
[75.28486633 110.33435059]
[72.19979095 95.02191925]
[78.28025818 79.74885559]
[65.56630707 71.78924561]
[52.85235977 63.82962418]
[40.13841248 55.87001038]
[27.42446136 47.91039276]
[14.71051216 39.95077515]
[1.99656248 31.99116135]
[-6.94246435 30.08835983]
[-10.84992123 23.81089211]
[-23.44040298 15.65737820]
[-32.34922028 13.61781693]
[-36.16002274 7.28120661]
[-48.62407684 -1.06428862]
[-61.08813477 -9.40978432]
[-73.55219269 -17.75527954]
[-86.01625061 -26.10077477]
[-98.48030090 -34.44626999]
[-110.94435883 -42.79176712]
[-119.82087708 -44.96760941]
[-123.53412628 -51.36187363]
[-135.86883545 -59.89738846]
[-148.20353699 -68.43290710]
[-163.95439148 -69.92319489]
[-170.01741028 -83.52793884]
[-182.35212708 -92.06345367]
[-194.75186157 -100.50421143]
[-207.21592712 -108.84970856]
[-219.67997742 -117.19519806]
[-235.13293457 -113.88130951]
[-248.35752869 -122.53495026]
[-251.50785828 -138.02206421]
[-242.71488953 -151.15443420]
[-227.19532776 -154.14085388]
[-214.15664673 -145.20953369]
[-211.33448792 -129.65925598]
[-198.87042236 -121.31376648]
[-186.40637207 -112.96826935]
[-179.09588623 -111.85845947]
[-173.81660461 -104.39816284]
[-161.48190308 -95.86264038]
[-146.61329651 -94.98287201]
[-139.66801453 -80.76760864]
[-127.33331299 -72.23209381]
[-114.99861145 -63.69657516]
[-102.59886932 -55.25582123]
[-90.13481140 -46.91032791]
[-77.67075348 -38.56483078]
[-65.20669556 -30.21933556]
[-52.74263763 -21.87384033]
[-40.27858353 -13.52834511]
[-27.81452560 -5.18284988]
[-15.28688908 3.06689668]
[-2.69640803 11.22041035]
[9.95617867 19.27721214]
[22.67012787 27.23682785]
[35.38407898 35.19644547]
[48.09802628 43.15605927]
[60.81197739 51.11567688]
[73.52592468 59.07529068]
[86.23987579 67.03491211]
[100.98695374 64.29196167]
[109.98865509 52.29323959]
[118.99036407 40.29452133]
[127.99207306 28.29580116]
[136.99377441 16.29708099]
[139.64237976 7.54997873]
[146.22651672 4.18487358]
[155.41104126 -7.67449284]
[164.59555054 -19.53385925]
[173.78007507 -31.39322472]
[168.82791138 -47.56404114]
[174.43280029 -63.34414291]
[188.19996643 -72.58285522]
[204.59509277 -71.80477142]
[213.59680176 -83.80348969]
[222.59851074 -95.80220795]
[231.60021973 -107.80092621]
[233.69271851 -123.48314667]
[247.51969910 -129.02061462]
[250.16830444 -137.76771545]
[256.75244141 -141.13282776]
[265.93695068 -152.99218750]
[265.34857178 -169.02445984]
[277.60964966 -179.37071228]
[293.31457520 -176.09422302]
[300.41583252 -161.70840454]
[293.46597290 -147.24884033]
[277.79632568 -143.80767822]
[268.61181641 -131.94830322]
[259.51843262 -120.01891327]
[258.06979370 -105.19492340]
[243.59893799 -98.79921722]
[234.59722900 -86.80049896]
[225.59552002 -74.80178070]
[216.59381104 -62.80306244]
[221.69181824 -50.46115494]
[220.01101685 -37.10486984]
[211.88442993 -26.23746681]
[199.34979248 -20.76255608]
[185.63945007 -22.20870399]
[176.45492554 -10.34933758]
[167.27040100 1.51002860]
[158.08587646 13.36939526]
[148.99249268 25.29878807]
[139.99078369 37.29750824]
[130.98908997 49.29622650]
[121.98737335 61.29494476]
[112.98567200 73.29366302]
[125.28363037 88.54416656]
[124.90222168 106.82148743]
[113.69320679 119.56574249]
[117.99933624 133.93435669]
[122.30546570 148.30297852]
[126.61158752 162.67160034]
[130.91770935 177.04022217]
[142.29103088 188.03833008]
[138.53308105 202.45108032]
[142.33935547 206.03695679]
[144.20021057 210.29875183]
[144.18437195 214.38096619]
[142.69052124 217.57978821]
[146.33174133 232.13113403]
[149.97296143 246.68246460]
[153.61418152 261.23382568]
[166.88542175 269.38931274]
[170.37083435 284.19830322]
[162.51403809 296.80014038]
[166.15525818 311.35147095]
[169.79646301 325.90283203]
[173.43768311 340.45416260]
[186.70892334 348.60964966]
[190.19435120 363.41867065]
[182.33753967 376.02047729]
[185.97875977 390.57183838]
[189.61997986 405.12316895]
[203.54905701 407.73831177]
[214.91989136 417.63595581]
[220.01759338 432.77947998]
[216.59001160 449.31036377]
[225.03077698 461.71011353]
[233.47152710 474.10986328]
[241.91227722 486.50958252]
[257.42559814 486.85049438]
[269.75537109 496.27157593]
[274.16052246 511.15020752]
[268.94717407 525.76531982]
[256.11999512 534.49700928]
[240.61128235 533.98785400]
[228.38444519 524.43359375]
[224.14096069 509.50802612]
[229.51252747 494.95034790]
[221.07177734 482.55059814]
[212.63102722 470.15084839]
[204.19027710 457.75112915]
[189.82165527 462.05725098]
[189.59178162 477.05548096]
[189.36192322 492.05371094]
[189.13206482 507.05197144]
[188.90219116 522.05017090]
[188.67233276 537.04846191]
[188.44247437 552.04669189]
[201.66542053 559.86004639]
[209.19613647 573.24603271]
[209.00891113 588.60375977]
[201.15409851 601.80218506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[15 174]
[16 173]
[17 172]
[20 169]
[21 168]
[22 167]
[23 166]
[26 163]
[27 162]
[28 161]
[29 160]
[30 156]
[32 154]
[33 153]
[34 152]
[35 151]
[36 150]
[40 99]
[41 98]
[42 97]
[43 96]
[44 95]
[45 94]
[46 93]
[48 92]
[49 91]
[51 90]
[52 89]
[53 88]
[54 87]
[55 86]
[56 85]
[57 84]
[59 83]
[60 82]
[61 81]
[63 79]
[64 78]
[65 76]
[66 75]
[67 74]
[100 147]
[101 146]
[102 145]
[103 144]
[104 143]
[106 142]
[107 141]
[108 140]
[109 139]
[113 134]
[114 133]
[115 132]
[116 131]
[118 129]
[120 128]
[121 127]
[178 193]
[179 192]
[180 191]
[181 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
