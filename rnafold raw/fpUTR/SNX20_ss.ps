%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGAUCAGAAGCAGGUCACACAGCCUGUUUCCUGUUUUCAAACGGGGAACUUAGAAAGUGGCAGCCCCUCGGCUUGUCGCCGGAGCUGAGAACCAAGAGCUCGAAGGGGCCAUAUGACACUCCUCCCGGACCCCUGGACACACACAGCCCUGGAGACUGGAGCCUUGGAGC\
) } def
/len { sequence length } bind def

/coor [
[108.05265045 260.23440552]
[106.43086243 245.32232666]
[104.80907440 230.41026306]
[103.18729401 215.49819946]
[93.94609833 207.65908813]
[92.49087524 195.22445679]
[100.14704895 184.81631470]
[98.79475403 169.87739563]
[97.44245911 154.93847656]
[96.09016418 139.99955750]
[88.65204620 140.44468689]
[80.95218658 139.46675110]
[73.26837921 136.99130249]
[62.75796509 147.69322205]
[52.24754333 158.39514160]
[41.73712540 169.09706116]
[31.22670746 179.79898071]
[20.71628761 190.50090027]
[21.10956383 206.30029297]
[10.15541744 217.69250488]
[-5.64725208 217.91871643]
[-16.92300034 206.84474182]
[-16.98212814 191.04055786]
[-5.78955269 179.88252258]
[10.01436710 179.99049377]
[20.52478600 169.28855896]
[31.03520584 158.58663940]
[41.54562378 147.88471985]
[52.05604553 137.18280029]
[62.56646347 126.48088837]
[56.02336884 112.98318481]
[41.11130142 114.60497284]
[26.19923210 116.22675323]
[11.28716183 117.84854126]
[-3.62490726 119.47032928]
[-18.53697586 121.09210968]
[-33.44904709 122.71389771]
[-48.36111450 124.33568573]
[-61.26658630 134.45402527]
[-76.37905884 128.08651733]
[-78.15212250 111.78350067]
[-64.76179504 102.31612396]
[-49.98289871 109.42361450]
[-35.07083130 107.80182648]
[-20.15876198 106.18003845]
[-5.24669266 104.55825806]
[9.66537666 102.93647003]
[24.57744598 101.31468964]
[39.48951721 99.69290161]
[54.40158463 98.07111359]
[55.93045044 90.73104858]
[58.61584473 83.83750916]
[62.35337830 77.56843567]
[67.01203156 72.07977295]
[72.43853760 67.50160217]
[78.46224213 63.93515015]
[84.90038300 61.45066452]
[91.56359863 60.08620071]
[98.26142883 59.84742737]
[100.42051697 45.00362778]
[102.57960510 30.15983200]
[104.73870087 15.31603336]
[99.06835938 0.54586756]
[108.55703735 -10.93516731]
[110.71613312 -25.77896500]
[112.33791351 -40.69103622]
[113.42028046 -55.65193176]
[114.50264740 -70.61283112]
[115.58501434 -85.57373047]
[116.66738129 -100.53462982]
[117.74974823 -115.49552917]
[115.85900116 -130.37588501]
[111.06948090 -144.59068298]
[106.27995300 -158.80548096]
[101.49043274 -173.02027893]
[87.81461334 -181.40785217]
[85.98862457 -197.34664917]
[97.41321564 -208.60978699]
[113.32441711 -206.55715942]
[121.51651001 -192.76335144]
[115.70523071 -177.80979919]
[120.49475098 -163.59500122]
[125.28427887 -149.38020325]
[130.07379150 -135.16540527]
[145.06829834 -135.57159424]
[149.08122253 -150.02485657]
[153.09414673 -164.47810364]
[157.10707092 -178.93135071]
[161.11999512 -193.38459778]
[150.30101013 -204.28620911]
[146.39781189 -219.14085388]
[150.46034241 -233.95271301]
[161.39579773 -244.73748779]
[176.26260376 -248.59410095]
[191.06167603 -244.48516846]
[201.81210327 -233.51596069]
[205.62210083 -218.63713074]
[201.46679688 -203.85101318]
[190.46394348 -193.13502502]
[175.57324219 -189.37167358]
[171.56031799 -174.91842651]
[167.54739380 -160.46517944]
[163.53446960 -146.01191711]
[159.52154541 -131.55867004]
[152.28988647 -120.09268951]
[142.28985596 -114.38134003]
[132.71064758 -114.41316223]
[131.62828064 -99.45226288]
[130.54591370 -84.49136353]
[129.46354675 -69.53046417]
[128.38117981 -54.56956482]
[127.29881287 -39.60866928]
[129.06451416 -37.38923264]
[130.04173279 -34.32475281]
[129.89964294 -30.71780968]
[128.42512512 -26.98658562]
[125.55992889 -23.61987495]
[123.40084076 -8.77607727]
[129.22561646 4.93236065]
[119.58249664 17.47512436]
[117.42340851 32.31892014]
[115.26432037 47.16271973]
[113.10522461 62.00651550]
[134.80572510 79.90489960]
[139.45593262 107.64728546]
[153.39057922 113.19935608]
[167.32524109 118.75142670]
[181.25988770 124.30349731]
[196.94380188 122.22369385]
[205.90325928 134.12231445]
[219.83792114 139.67439270]
[227.97987366 134.79791260]
[237.31613159 134.24385071]
[245.72590637 138.01049805]
[251.35762024 145.12898254]
[253.03628540 153.90887451]
[266.64990234 160.20721436]
[280.26354980 166.50555420]
[293.74624634 158.82461548]
[309.16494751 160.56900024]
[320.59088135 171.06793213]
[323.63052368 186.28437805]
[317.11508179 200.36729431]
[303.54983521 207.90151978]
[288.15097046 205.98997498]
[276.83959961 195.36770630]
[273.96520996 180.11918640]
[260.35156250 173.82084656]
[246.73794556 167.52250671]
[226.45214844 171.22248840]
[214.28584290 153.60903931]
[200.35119629 148.05697632]
[185.66398621 150.53388977]
[175.70780945 138.23814392]
[161.77316284 132.68608093]
[147.83851624 127.13400269]
[133.90386963 121.58193207]
[124.03224182 132.21339417]
[111.02908325 138.64726257]
[112.38137817 153.58618164]
[113.73367310 168.52510071]
[115.08596802 183.46401978]
[126.04209137 198.24429321]
[118.09935760 213.87640381]
[119.72114563 228.78848267]
[121.34293365 243.70054626]
[122.96471405 258.61260986]
[136.06011963 267.15924072]
[140.54862976 282.13879395]
[134.31089783 296.47842407]
[120.29221344 303.40737915]
[105.11175537 299.65402222]
[95.93727112 286.99057007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[3 165]
[4 164]
[7 162]
[8 161]
[9 160]
[10 159]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[18 25]
[31 50]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[59 123]
[60 122]
[61 121]
[62 120]
[64 118]
[65 117]
[66 112]
[67 111]
[68 110]
[69 109]
[70 108]
[71 107]
[72 84]
[73 83]
[74 82]
[75 81]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[125 157]
[126 156]
[127 155]
[128 154]
[130 152]
[131 151]
[136 149]
[137 148]
[138 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
