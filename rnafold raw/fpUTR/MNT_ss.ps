%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:55:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUGCCGCCUUUUUUUUUUUUUUGCAUCCCAUUUUUUUAAAUUUGCAAUUUUAUAUUUUGCAAAUAUUUUGAGAGACAUUGAUUUUUCUCCCCGUGCUCCCCCGUUCUUCCCUGCGGAGUGCGCUGCGCCGCCCAGCCCUGUCGCCCCCCGGAGGUGAUCCCUCCCUCCUGCCUGCCCGCCAGCCUGACCUGUGCCCGGCUCGCGGGCCGCAGCCUCGGCCCCGGCGCGCCCCCGGCAGCUCUCGGCGCG\
) } def
/len { sequence length } bind def

/coor [
[96.51389313 240.34349060]
[82.26991272 232.96185303]
[79.30162048 217.19578552]
[89.88603210 205.13967896]
[90.25851440 190.14430237]
[90.63099670 175.14892578]
[91.00347900 160.15354919]
[91.37596130 145.15817261]
[91.74845123 130.16279602]
[85.98983002 125.35776520]
[78.47378540 138.33886719]
[70.95773315 151.31997681]
[63.44168472 164.30107117]
[55.92563629 177.28218079]
[48.40958405 190.26327515]
[40.89353561 203.24438477]
[33.37748718 216.22547913]
[25.86143494 229.20657349]
[18.34538651 242.18768311]
[17.55956459 257.16708374]
[11.81537914 271.02365112]
[1.77267742 282.16564941]
[-11.41492081 289.31317139]
[-26.23253441 291.64520264]
[-40.97803879 288.89382935]
[-53.95759583 281.37512207]
[-63.68022156 269.95272827]
[-69.02906036 255.93881226]
[-69.38968658 240.94316101]
[-64.72066498 226.68832397]
[-55.55834579 214.81179810]
[-42.95521545 206.67785645]
[-28.35488510 203.22059631]
[-16.92960930 193.50138855]
[-5.50433207 183.78216553]
[5.92094469 174.06295776]
[17.34622192 164.34375000]
[28.77149773 154.62454224]
[40.19677353 144.90533447]
[51.62205124 135.18612671]
[63.04732895 125.46691132]
[74.47260284 115.74769592]
[68.71398926 110.94266510]
[54.02772903 113.99450684]
[39.34146881 117.04634094]
[24.65520668 120.09818268]
[9.96894550 123.15002441]
[-4.71731615 126.20186615]
[-19.40357780 129.25370789]
[-34.08983994 132.30554199]
[-39.51940155 146.74588013]
[-51.90771103 155.94009399]
[-67.30169678 156.95431519]
[-80.78919983 149.46493530]
[-88.06640625 135.86178589]
[-86.81118011 120.48557281]
[-77.42407227 108.24279022]
[-62.90045929 103.04006958]
[-47.87478256 106.53758240]
[-37.14167786 117.61928558]
[-22.45541763 114.56744385]
[-7.76915646 111.51560211]
[6.91710472 108.46376038]
[21.60336685 105.41192627]
[36.28962708 102.36008453]
[50.97588730 99.30824280]
[65.66214752 96.25640106]
[66.68340302 88.82625580]
[51.91922379 91.47562408]
[44.83731461 78.25267029]
[55.22479248 67.43138123]
[68.72589874 73.96596527]
[69.74714661 66.53582001]
[56.42887115 59.63484955]
[43.11059189 52.73387146]
[29.79231453 45.83289719]
[16.47403717 38.93192291]
[3.15575814 32.03094482]
[-10.65700722 39.10110474]
[-25.98226357 36.66878510]
[-36.92713547 25.66926765]
[-39.28309631 10.33208752]
[-32.14423370 -3.44529438]
[-18.25558090 -10.36519432]
[-2.95761418 -7.76676941]
[7.86729002 3.35083294]
[10.05673409 18.71266747]
[23.37501144 25.61364365]
[36.69329071 32.51461792]
[50.01156998 39.41559601]
[63.32984543 46.31657028]
[76.64812469 53.21754456]
[82.19253540 48.16685104]
[78.98886108 33.51296234]
[93.28136444 38.06546783]
[98.82577515 33.01477432]
[93.19324493 19.11244965]
[87.56071472 5.21012545]
[81.92818451 -8.69219875]
[70.39071655 -14.41882324]
[65.97789001 -26.09266853]
[70.54074097 -37.27737427]
[58.31134796 -47.31492996]
[60.88569260 -61.98537827]
[55.42622375 -75.95656586]
[49.96675491 -89.92775726]
[44.50728607 -103.89895630]
[29.46160126 -107.69461060]
[19.54629135 -119.63053131]
[18.57399368 -135.11711121]
[26.91857719 -148.19944763]
[41.37137985 -153.84712219]
[56.37500381 -149.88847351]
[66.16024780 -137.84568787]
[66.96448517 -122.34946442]
[58.47847748 -109.35842133]
[63.93794632 -95.38722992]
[69.39741516 -81.41603851]
[74.85688019 -67.44484711]
[86.69577789 -58.40660477]
[84.51193237 -42.73684311]
[98.78877258 -32.51232147]
[95.83051300 -14.32472706]
[101.46304321 -0.42240292]
[107.09556580 13.47992134]
[112.72809601 27.38224602]
[144.24240112 54.71131516]
[151.87796021 89.65200043]
[166.34657288 85.69480133]
[180.81518555 81.73760223]
[195.28378296 77.78041077]
[209.75239563 73.82321167]
[224.22100830 69.86601257]
[227.97605896 58.62006760]
[236.59649658 50.65540314]
[247.87149048 47.85771561]
[258.98394775 50.80723572]
[267.21420288 58.66284180]
[281.77661133 55.06615448]
[296.33905029 51.46946335]
[296.42123413 42.88380051]
[298.03070068 34.45820236]
[301.11306763 26.46188927]
[305.56695557 19.14984703]
[311.24725342 12.75468254]
[317.97000122 7.47923517]
[325.51809692 3.49013495]
[333.64855957 0.91254687]
[342.10018921 -0.17375746]
[350.60198975 0.26313451]
[358.88195801 2.20634675]
[366.67559814 5.59084702]
[373.73455811 10.30561924]
[384.82339478 0.20423418]
[395.91220093 -9.89715099]
[407.00103760 -19.99853706]
[418.08987427 -30.09992218]
[420.26995850 -45.99415970]
[434.12896729 -54.07545090]
[449.03546143 -48.14451981]
[453.55444336 -32.75107193]
[444.21932983 -19.70363998]
[428.19125366 -19.01109886]
[417.10241699 -8.90971279]
[406.01361084 1.19167233]
[394.92477417 11.29305744]
[383.83593750 21.39444351]
[386.77609253 26.56225014]
[389.04641724 32.05736542]
[390.61123657 37.79339218]
[391.44595337 43.68014908]
[406.39712524 44.88953018]
[421.34829712 46.09890747]
[436.29946899 47.30828857]
[446.59674072 39.57049942]
[459.00906372 40.86912155]
[466.95419312 49.96814346]
[481.88919067 51.36307907]
[496.82418823 52.75801468]
[511.75918579 54.15295029]
[526.69415283 55.54788589]
[541.62915039 56.94281769]
[556.08905029 50.52240372]
[568.04162598 59.40975571]
[582.97662354 60.80469131]
[597.91162109 62.19962692]
[612.84661865 63.59455872]
[627.30657959 57.17414474]
[639.25915527 66.06150055]
[649.40625000 54.32200241]
[664.52337646 50.82166672]
[678.79766846 56.90643692]
[686.74035645 70.23659515]
[685.29730225 85.68643188]
[675.02343750 97.31515503]
[659.86926270 100.65129852]
[645.66180420 94.41203308]
[637.86419678 80.99649811]
[624.47253418 87.51668549]
[611.45172119 78.52955627]
[596.51672363 77.13462067]
[581.58172607 75.73968506]
[566.64672852 74.34475708]
[553.25506592 80.86494446]
[540.23425293 71.87781525]
[525.29925537 70.48287964]
[510.36422729 69.08794403]
[495.42922974 67.69301605]
[480.49423218 66.29808044]
[465.55923462 64.90314484]
[450.01296997 73.06906128]
[435.09008789 62.25945282]
[420.13891602 61.05007553]
[405.18774414 59.84069824]
[390.23657227 58.63131714]
[379.27133179 79.43923187]
[359.61581421 92.46297455]
[336.06311035 94.45938873]
[314.38903809 84.88264465]
[299.93572998 66.03187561]
[285.37332153 69.62856293]
[270.81091309 73.22525787]
[262.28305054 89.44565582]
[244.29086304 94.33905792]
[228.17820740 84.33461761]
[213.70959473 88.29181671]
[199.24098206 92.24901581]
[184.77238464 96.20621490]
[170.30377197 100.16340637]
[155.83515930 104.12060547]
[149.60394287 117.76509094]
[156.08821106 131.29113770]
[162.57247925 144.81719971]
[174.87170410 156.48619080]
[167.06350708 171.53506470]
[150.44123840 168.19795227]
[149.04643250 151.30146790]
[142.56214905 137.77542114]
[136.07788086 124.24935913]
[128.74436951 125.82083893]
[131.88732910 140.48786926]
[135.03005981 155.15495300]
[120.36293793 158.29745483]
[117.22029877 143.63082886]
[114.07733917 128.96380615]
[106.74382019 130.53527832]
[106.37133789 145.53065491]
[105.99885559 160.52603149]
[105.62637329 175.52140808]
[105.25389099 190.51678467]
[104.88140869 205.51216125]
[114.85419464 218.07890320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 251]
[5 250]
[6 249]
[7 248]
[8 247]
[9 246]
[43 67]
[44 66]
[45 65]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[73 92]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
[96 126]
[97 125]
[98 124]
[99 123]
[102 121]
[104 119]
[105 118]
[106 117]
[107 116]
[128 230]
[129 229]
[130 228]
[131 227]
[132 226]
[133 225]
[138 222]
[139 221]
[140 220]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
[171 215]
[172 214]
[173 213]
[174 212]
[177 210]
[178 209]
[179 208]
[180 207]
[181 206]
[182 205]
[184 203]
[185 202]
[186 201]
[187 200]
[189 198]
[231 239]
[232 238]
[233 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
