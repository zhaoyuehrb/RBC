%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:20:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACGCGAGGUCACGUGACGGGUUGGGCAGCCUGUGCCGCCGCCGCCGCUUUGUAAGAGGCACAUUGGCAGAUUUUCUAUUUUGUACAUACAUUAUUUUGUAUAUACUGUAU\
) } def
/len { sequence length } bind def

/coor [
[98.40953064 120.94387817]
[92.00788116 134.50923157]
[85.60623169 148.07460022]
[79.20458984 161.63995361]
[72.80294037 175.20530701]
[76.84548187 190.73068237]
[67.11280060 203.48429871]
[51.07097626 203.68264771]
[41.02592087 191.17359924]
[44.68334579 175.55300903]
[59.23758316 168.80366516]
[65.63922882 155.23831177]
[72.04087830 141.67294312]
[78.44252777 128.10758972]
[84.84416962 114.54223633]
[76.46770477 102.09896851]
[65.95164490 113.59027863]
[50.75083542 114.21492767]
[39.86043549 104.11865234]
[24.88321304 104.94496918]
[9.90599060 105.77128601]
[-5.07123184 106.59759521]
[-20.04845428 107.42391205]
[-35.02567673 108.25022888]
[-50.00289917 109.07654572]
[-63.42829514 118.49412537]
[-78.18068695 111.33179474]
[-79.08408356 94.95755005]
[-65.20913696 86.21581268]
[-50.82921600 94.09932709]
[-35.85199356 93.27301025]
[-20.87477112 92.44669342]
[-5.89754820 91.62037659]
[9.07967472 90.79405975]
[24.05689812 89.96774292]
[39.03411865 89.14142609]
[48.74774933 77.90839386]
[63.92501068 76.85704041]
[75.64138794 87.12174988]
[85.33587646 75.67548370]
[83.68575287 60.76652527]
[82.03562927 45.85756683]
[80.38550568 30.94860649]
[65.19042206 19.81794739]
[62.85216904 1.44605649]
[74.37538147 -12.64721394]
[71.90646362 -27.44263268]
[69.43754578 -42.23805237]
[59.53433609 -54.57649231]
[65.07126617 -68.40369415]
[62.60234833 -83.19911957]
[60.13343048 -97.99453735]
[51.56251907 -112.62245178]
[63.24610519 -124.90781403]
[78.28569031 -117.08175659]
[74.92884827 -100.46345520]
[77.39776611 -85.66803741]
[79.86669159 -70.87261963]
[89.59329987 -59.59244537]
[84.23296356 -44.70697021]
[86.70188141 -29.91155243]
[89.17079926 -15.11613274]
[99.81172180 -10.57321453]
[106.96154022 -1.32354426]
[108.71269989 10.35754490]
[104.50441742 21.52320671]
[95.29446411 29.29848289]
[96.94458771 44.20744324]
[98.59471130 59.11640167]
[100.24483490 74.02536011]
[105.94445038 60.15040970]
[108.66904449 45.39993286]
[116.38003540 32.53367233]
[128.10362244 23.17646217]
[142.35929871 18.50999451]
[157.34674072 19.12357521]
[171.17324829 24.93972015]
[182.09274292 35.22392654]
[188.72619629 48.67744446]
[190.23594666 63.60127640]
[186.43128967 78.11074066]
[177.79272461 90.37349701]
[165.41117859 98.84091949]
[150.84979248 102.44372559]
[135.93441772 100.85263824]
[148.26109314 109.39976501]
[160.58775330 117.94688416]
[176.33720398 119.45198822]
[182.38742065 133.06243896]
[194.71409607 141.60955811]
[207.04075623 150.15667725]
[219.36743164 158.70379639]
[231.69409180 167.25091553]
[247.19889832 164.18881226]
[260.28100586 173.05639648]
[263.17901611 188.59271240]
[254.17359924 201.58033752]
[238.60751343 204.31391907]
[225.71583557 195.17170715]
[223.14697266 179.57759094]
[210.82029724 171.03047180]
[198.49363708 162.48333740]
[186.16697693 153.93621826]
[173.84030151 145.38909912]
[158.97253418 144.49534607]
[152.04063416 130.27354431]
[139.71397400 121.72643280]
[127.38730621 113.17930603]
[120.14286041 115.12045288]
[130.74952698 125.72698975]
[126.86741638 140.21592712]
[112.37860107 144.09848022]
[101.77174377 133.49214172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[16 39]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[25 30]
[40 70]
[41 69]
[42 68]
[43 67]
[46 62]
[47 61]
[48 60]
[50 58]
[51 57]
[52 56]
[85 108]
[86 107]
[87 106]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
