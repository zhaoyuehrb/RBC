%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:57:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUUUUUCCGCCGCGCGCCACCAGAAUGUCCCUGUCUUGAGGUCUAAUGGCGGACGCCAGUAUGUUGGAGUUGGUGGUGGCUUAAGUUUUGAAGGGAGGUAGCAUCCGUUGGAUAUCCACACCAUCCUUCUCGCUGCAGGCUUUCUUGGACUCCGUACUGUUGGUGUAACCAAGGCCUGGAGGUCUGGGUGGCUCAGGUUUCCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[88.06979370 130.79019165]
[92.20275116 145.20956421]
[83.91580200 157.71263123]
[69.02552032 159.52354431]
[57.98330307 149.37123108]
[58.53962708 134.38154602]
[70.30362701 125.07576752]
[76.60554504 111.46379089]
[69.46578217 109.16731262]
[57.40940094 118.09164429]
[45.35301590 127.01596832]
[33.29663467 135.94029236]
[21.24024963 144.86462402]
[9.18386555 153.78895569]
[9.56419754 170.69941711]
[-0.11399648 184.36857605]
[-15.87467670 189.52362061]
[-31.44461441 184.32112122]
[-43.36743164 193.42311096]
[-55.29024887 202.52511597]
[-61.56438065 217.04908752]
[-76.37570190 218.62197876]
[-82.64984131 233.14595032]
[-97.46115875 234.71882629]
[-109.38397980 243.82083130]
[-121.30679321 252.92283630]
[-123.54518890 268.33801270]
[-135.76628113 277.39889526]
[-150.44850159 275.16992188]
[-159.36938477 289.58706665]
[-175.69264221 285.00585938]
[-175.80921936 268.05233765]
[-159.55049133 263.24710083]
[-157.83059692 248.49658203]
[-145.86882019 239.09602356]
[-130.40879822 241.00001526]
[-118.48597717 231.89802551]
[-106.56316376 222.79602051]
[-101.14183044 208.92308044]
[-85.47770691 206.69915771]
[-80.05637360 192.82621765]
[-64.39225006 190.60231018]
[-52.46943283 181.50030518]
[-40.54661560 172.39830017]
[-42.10028076 159.13870239]
[-36.85730743 146.74337769]
[-26.08861542 138.49151611]
[-12.54179382 136.62329102]
[0.25953856 141.73257446]
[12.31592178 132.80824280]
[24.37230492 123.88391113]
[36.42868805 114.95958710]
[48.48507309 106.03525543]
[60.54145813 97.11093140]
[68.35997772 84.30973053]
[70.79426575 69.50857544]
[73.22856140 54.70741653]
[75.66285706 39.90626144]
[78.09714508 25.10510635]
[80.53144073 10.30394936]
[82.96573639 -4.49720621]
[85.40003204 -19.29836273]
[87.83432007 -34.09951782]
[86.13914490 -43.07447433]
[90.41591644 -49.10129166]
[93.06926727 -63.86474991]
[95.61315918 -78.64746094]
[98.04745483 -93.44861603]
[100.48175049 -108.24977875]
[102.91603851 -123.05093384]
[105.35033417 -137.85208130]
[107.78462982 -152.65324402]
[110.21892548 -167.45439148]
[104.82376862 -182.32728577]
[114.52396393 -193.63018799]
[109.12880707 -208.50308228]
[118.82900238 -219.80596924]
[121.26329803 -234.60713196]
[115.86814117 -249.48002625]
[125.56833649 -260.78292847]
[128.00262451 -275.58407593]
[130.43692017 -290.38522339]
[132.87121582 -305.18640137]
[135.30551147 -319.98754883]
[128.41055298 -337.06250000]
[140.05702209 -350.19024658]
[142.27172852 -365.02584839]
[144.48641968 -379.86145020]
[135.28027344 -389.69247437]
[133.44369507 -402.83877563]
[139.42523193 -414.47027588]
[150.84201050 -420.44314575]
[153.27629089 -435.24432373]
[155.71058655 -450.04547119]
[158.14488220 -464.84661865]
[160.57917786 -479.64779663]
[163.01347351 -494.44894409]
[157.61831665 -509.32183838]
[167.31851196 -520.62475586]
[169.75280762 -535.42590332]
[172.18710327 -550.22705078]
[158.16725159 -563.25817871]
[154.86108398 -581.95867920]
[163.42651367 -598.73937988]
[180.24061584 -606.90069580]
[182.01470947 -621.79541016]
[183.78880310 -636.69012451]
[185.56291199 -651.58489990]
[181.43234253 -668.02795410]
[196.08937073 -676.54895020]
[208.33486938 -664.82360840]
[200.45762634 -649.81079102]
[198.68351746 -634.91607666]
[196.90942383 -620.02136230]
[195.13533020 -605.12664795]
[204.60472107 -599.23150635]
[211.22080994 -590.18731689]
[213.99703979 -579.27795410]
[212.49528503 -568.06976318]
[206.89453125 -558.18676758]
[197.97045898 -551.07537842]
[186.98825073 -547.79272461]
[184.55395508 -532.99157715]
[182.11965942 -518.19042969]
[187.68893433 -504.37622070]
[177.81462097 -492.01464844]
[175.38034058 -477.21350098]
[172.94604492 -462.41232300]
[170.51174927 -447.61117554]
[168.07745361 -432.81002808]
[165.64315796 -418.00885010]
[176.02253723 -404.77560425]
[173.57090759 -387.79571533]
[159.32202148 -377.64675903]
[157.10733032 -362.81115723]
[154.89262390 -347.97555542]
[161.83491516 -338.07003784]
[160.11175537 -325.69253540]
[150.10665894 -317.55325317]
[147.67236328 -302.75210571]
[145.23808289 -287.95092773]
[142.80378723 -273.14978027]
[140.36949158 -258.34863281]
[145.93876648 -244.53440857]
[136.06445312 -232.17283630]
[133.63015747 -217.37168884]
[139.19943237 -203.55746460]
[129.32511902 -191.19589233]
[134.89439392 -177.38168335]
[125.02008057 -165.02011108]
[122.58578491 -150.21894836]
[120.15148926 -135.41778564]
[117.71720123 -120.61663818]
[115.28290558 -105.81548309]
[112.84860992 -91.01432800]
[110.41431427 -76.21317291]
[112.43047333 -69.10343170]
[107.83272552 -61.21139526]
[105.17937469 -46.44793701]
[102.63547516 -31.66522408]
[100.20118713 -16.86406898]
[97.76689148 -2.06291270]
[95.33259583 12.73824310]
[92.89830780 27.53939819]
[90.46401215 42.34055328]
[88.02971649 57.14171219]
[85.59542084 71.94286346]
[83.16113281 86.74402618]
[106.32521820 72.93928528]
[133.41598511 92.95919037]
[145.47236633 101.88352203]
[157.52874756 110.80784607]
[173.22410583 112.79940796]
[178.85041809 126.59048462]
[190.90679932 135.51481628]
[202.96318054 144.43914795]
[215.01957703 153.36346436]
[227.07595825 162.28779602]
[243.42184448 163.60830688]
[250.20578003 178.53848267]
[240.44902039 191.71945190]
[224.18849182 189.59175110]
[218.15162659 174.34417725]
[206.09524536 165.41984558]
[194.03886414 156.49552917]
[181.98248291 147.57119751]
[169.92608643 138.64686584]
[155.09309387 137.29364014]
[148.60441589 122.86423492]
[136.54803467 113.93990326]
[124.49165344 105.01557922]
[112.30435181 113.76026917]
[116.89730835 128.03979492]
[121.49025726 142.31932068]
[126.08321381 156.59883118]
[130.78184509 170.84393311]
[135.58589172 185.05383301]
[140.38993835 199.26373291]
[145.19398499 213.47361755]
[155.99464417 226.54199219]
[146.42691040 240.53823853]
[130.32902527 235.21896362]
[130.98408508 218.27766418]
[126.18004608 204.06777954]
[121.37599945 189.85787964]
[116.57194519 175.64797974]
[111.45221710 170.31866455]
[111.80368805 161.19178772]
[107.21073914 146.91226196]
[102.61778259 132.63275146]
[98.02482605 118.35322571]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 54]
[10 53]
[11 52]
[12 51]
[13 50]
[14 49]
[18 44]
[19 43]
[20 42]
[22 40]
[24 38]
[25 37]
[26 36]
[29 33]
[55 168]
[56 167]
[57 166]
[58 165]
[59 164]
[60 163]
[61 162]
[62 161]
[63 160]
[65 159]
[66 158]
[67 156]
[68 155]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[75 148]
[77 146]
[78 145]
[80 143]
[81 142]
[82 141]
[83 140]
[84 139]
[86 136]
[87 135]
[88 134]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[99 124]
[100 123]
[101 122]
[105 115]
[106 114]
[107 113]
[108 112]
[170 191]
[171 190]
[172 189]
[174 187]
[175 186]
[176 185]
[177 184]
[178 183]
[192 211]
[193 210]
[194 209]
[195 208]
[196 206]
[197 205]
[198 204]
[199 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
