%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:49:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCAGGCUCCAGGGGCGGGGCGUGGCCGGGGCGCAGCGACGGGCGCGGAGGUCCGGCCGGGCGCGCGCGCCCCCGCCACACGCACGCCGGGCGUGCCAGUUUAUAAAGGGAGAGAGCAAGCAGCGAGUCUUGAAGCUCUGUUUGGUGCUUUGGAUCCAUUUCCAUCGGUCCUUACAGCCGCUCGUCAGACUCCAGCAGCCAAG\
) } def
/len { sequence length } bind def

/coor [
[127.31471252 107.08428192]
[112.31645203 107.31302643]
[100.21843719 114.32228088]
[87.91229248 107.68522644]
[72.91403961 107.91397858]
[57.91578293 108.14272308]
[44.23520660 116.08957672]
[31.39142227 108.54726410]
[16.39316750 108.77601624]
[1.39491129 109.00476074]
[-13.60334396 109.23350525]
[-17.25559807 111.59839630]
[-21.08528137 112.57714081]
[-24.63412666 112.28450775]
[-27.52839661 110.97248840]
[-29.51637840 108.99080658]
[-44.50068283 108.30477905]
[-59.48498535 107.61874390]
[-74.46929169 106.93271637]
[-89.45838928 106.36096191]
[-103.48809814 113.67381287]
[-115.97349548 105.55197906]
[-130.00320435 112.86483002]
[-142.48860168 104.74298859]
[-157.48162842 104.28555298]
[-172.47465515 103.82810974]
[-187.46766663 103.37066650]
[-202.46069336 102.91322327]
[-216.49040222 110.22607422]
[-228.97579956 102.10423279]
[-243.96882629 101.64679718]
[-258.96185303 101.18935394]
[-273.95486450 100.73191071]
[-288.94790649 100.27446747]
[-303.94091797 99.81702423]
[-318.93392944 99.35958099]
[-334.94537354 108.45070648]
[-349.49807739 98.64630127]
[-364.49633789 98.41755676]
[-379.49459839 98.18880463]
[-393.41116333 105.71475983]
[-406.01895142 97.78427124]
[-419.93551636 105.31021881]
[-432.54333496 97.37973022]
[-447.54156494 97.15097809]
[-462.53982544 96.92223358]
[-471.17214966 99.92134094]
[-477.76458740 96.57389069]
[-492.75762939 96.11645508]
[-507.75064087 95.65901184]
[-521.93218994 103.89405823]
[-536.01806641 95.49645996]
[-535.51794434 79.10494232]
[-520.94635010 71.58168793]
[-507.29321289 80.66598511]
[-492.30017090 81.12342834]
[-477.30715942 81.58087158]
[-462.31109619 81.92397308]
[-447.31283569 82.15272522]
[-432.31457520 82.38146973]
[-419.47079468 74.83915710]
[-405.79022217 82.78601074]
[-392.94644165 75.24369812]
[-379.26583862 83.19055176]
[-364.26760864 83.41929626]
[-349.26934814 83.64804840]
[-340.36865234 75.45266724]
[-327.86898804 75.52287292]
[-318.47650146 84.36655426]
[-303.48345947 84.82399750]
[-288.49044800 85.28144073]
[-273.49743652 85.73888397]
[-258.50439453 86.19632721]
[-243.51138306 86.65377045]
[-228.51835632 87.11121368]
[-215.56105042 79.76564789]
[-202.00325012 87.92019653]
[-187.01022339 88.37763977]
[-172.01721191 88.83508301]
[-157.02418518 89.29252625]
[-142.03115845 89.74996948]
[-129.07385254 82.40440369]
[-115.51605225 90.55895233]
[-102.55874634 83.21338654]
[-89.00094604 91.36794281]
[-82.21669006 88.42861938]
[-73.78325653 91.94841003]
[-58.79895401 92.63444519]
[-43.81465149 93.32047272]
[-28.83034706 94.00650787]
[-13.83209229 94.23525238]
[1.16616344 94.00650787]
[16.16441917 93.77775574]
[31.16267395 93.54901123]
[43.77047348 85.61852264]
[57.68703461 93.14447021]
[72.68528748 92.91571808]
[87.68354797 92.68697357]
[99.78156281 85.67771912]
[112.08770752 92.31477356]
[127.08596039 92.08602142]
[128.66545105 84.35792542]
[131.35917664 76.94819641]
[135.10797119 70.01647949]
[139.82994080 63.71194458]
[145.42224121 58.17007828]
[151.76335144 53.50978088]
[158.71571350 49.83081818]
[166.12870789 47.21167755]
[173.84187317 45.70789719]
[181.68846130 45.35089111]
[189.49897766 46.14729309]
[197.10490417 48.07882309]
[204.34222412 51.10273361]
[211.05509949 55.15272903]
[217.09913635 60.14042664]
[222.34448242 65.95729828]
[226.67869568 72.47700500]
[230.00909424 79.55817413]
[232.26469421 87.04742432]
[233.39787292 94.78273773]
[233.38519287 102.59691620]
[248.04460144 105.77523804]
[263.17086792 101.13770294]
[273.96972656 111.39608002]
[288.62911987 114.57439423]
[303.33529663 117.52879333]
[318.08480835 120.25857544]
[332.83435059 122.98835754]
[347.58386230 125.71813965]
[362.33337402 128.44792175]
[377.08288574 131.17770386]
[386.09478760 129.66203308]
[392.03576660 134.06323242]
[406.74194336 137.01762390]
[421.49145508 139.74740601]
[436.28091431 142.25193787]
[451.07034302 144.75648499]
[468.17504883 137.94158936]
[481.24945068 149.64494324]
[496.07534790 151.92366028]
[510.90124512 154.20236206]
[525.72717285 156.48107910]
[538.38610840 147.40425110]
[553.38922119 149.92639160]
[561.96459961 162.05068970]
[576.79046631 164.32940674]
[585.75195312 162.53959656]
[591.82440186 166.75756836]
[606.61383057 169.26211548]
[621.40325928 171.76664734]
[638.50799561 164.95176697]
[651.58239746 176.65512085]
[666.40832520 178.93382263]
[681.23419189 181.21253967]
[696.06011963 183.49124146]
[708.65356445 173.94239807]
[724.29895020 176.17800903]
[733.71411133 188.87171936]
[731.31323242 204.49258423]
[718.52069092 213.77301025]
[702.92608643 211.20709229]
[693.78137207 198.31715393]
[678.95550537 196.03843689]
[664.12957764 193.75973511]
[649.30371094 191.48101807]
[639.36535645 198.38150024]
[626.99285889 196.60171509]
[618.89874268 186.55607605]
[604.10931396 184.05154419]
[589.31988525 181.54699707]
[574.51177979 179.15530396]
[559.68585205 176.87660217]
[547.86535645 185.86610413]
[532.79730225 183.76637268]
[523.44842529 171.30699158]
[508.62255859 169.02827454]
[493.79663086 166.74955750]
[478.97073364 164.47085571]
[469.03244019 171.37133789]
[456.65991211 169.59153748]
[448.56579590 159.54591370]
[433.77636719 157.04138184]
[418.98693848 154.53683472]
[414.64089966 156.52561951]
[408.99902344 155.80258179]
[403.78756714 151.72380066]
[389.08139038 148.76939392]
[374.35311890 145.92723083]
[359.60357666 143.19744873]
[344.85406494 140.46766663]
[330.10455322 137.73788452]
[315.35504150 135.00808716]
[300.60552979 132.27830505]
[296.22964478 134.20057678]
[290.59945679 133.39158630]
[285.45080566 129.23381042]
[270.79141235 126.05548859]
[256.71368408 130.92034912]
[244.86628723 120.43464661]
[230.20687866 117.25632477]
[217.70422363 136.73591614]
[198.08110046 149.08386230]
[175.03384399 151.93594360]
[152.92010498 144.72023010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 101]
[2 100]
[4 98]
[5 97]
[6 96]
[8 94]
[9 93]
[10 92]
[11 91]
[16 90]
[17 89]
[18 88]
[19 87]
[20 85]
[22 83]
[24 81]
[25 80]
[26 79]
[27 78]
[28 77]
[30 75]
[31 74]
[32 73]
[33 72]
[34 71]
[35 70]
[36 69]
[38 66]
[39 65]
[40 64]
[42 62]
[44 60]
[45 59]
[46 58]
[48 57]
[49 56]
[50 55]
[122 201]
[123 200]
[125 198]
[126 197]
[127 194]
[128 193]
[129 192]
[130 191]
[131 190]
[132 189]
[134 188]
[135 187]
[136 184]
[137 183]
[138 182]
[140 179]
[141 178]
[142 177]
[143 176]
[146 173]
[147 172]
[149 171]
[150 170]
[151 169]
[153 166]
[154 165]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
