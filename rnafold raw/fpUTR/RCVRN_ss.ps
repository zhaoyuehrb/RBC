%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCUCCACAAAGCUCCUGGGCCCCUCCUCCCUUCAAGGAUUGCGAAGAACUGGUCGCAAAUCCUCCUAAGCCACCAGCAUCUCGGUCUUCAGCUCACACCAGCCUUGAGCCCAGCCUGCGGCCAGGGGACCACGCACGUCCCACCCACCCAGCGACUCCCCAGCCGCUGCCCACUCUUCCUCACUC\
) } def
/len { sequence length } bind def

/coor [
[1.23728430 272.55587769]
[-4.38697863 286.46154785]
[-10.01124191 300.36721802]
[-15.63550472 314.27288818]
[-4.77288055 324.90640259]
[1.18900442 338.88940430]
[1.34100556 354.08956909]
[-4.34005642 368.18899536]
[-14.98785973 379.03762817]
[-28.97869301 384.98110962]
[-44.17905426 385.11312866]
[-58.27100372 379.41351318]
[-69.10561371 368.75146484]
[-75.03069305 354.75280762]
[-75.14270020 339.55230713]
[-69.42456055 325.46786499]
[-58.74825287 314.64727783]
[-44.74183273 308.74063110]
[-29.54117584 308.64862061]
[-23.91691208 294.74295044]
[-18.29264832 280.83728027]
[-12.66838551 266.93161011]
[-16.11338997 264.56515503]
[-19.31976891 261.88424683]
[-22.25891685 258.91278076]
[-24.90461922 255.67729187]
[-38.29240036 262.44244385]
[-51.68018341 269.20758057]
[-65.06796265 275.97274780]
[-68.46016693 291.23797607]
[-80.90242004 300.71026611]
[-96.51987457 299.91711426]
[-107.93844604 289.23300171]
[-109.76663208 273.70263672]
[-101.14122772 260.65902710]
[-86.13487244 256.26089478]
[-71.83311462 262.58496094]
[-58.44533539 255.81980896]
[-45.05755234 249.05465698]
[-31.66976929 242.28950500]
[-33.12970352 221.97413635]
[-25.32565689 203.09799194]
[-9.85833931 189.66865540]
[10.03866577 184.56236267]
[30.17484856 188.90814209]
[38.86951447 176.68508911]
[47.56417847 164.46205139]
[56.25884247 152.23899841]
[64.95350647 140.01596069]
[64.40219879 94.45902252]
[92.47447968 82.70695496]
[89.73272705 67.95965576]
[86.99098206 53.21236038]
[84.24923706 38.46506119]
[81.50748444 23.71776199]
[78.76573944 8.97046280]
[76.02398682 -5.77683592]
[73.28224182 -20.52413368]
[70.54049683 -35.27143478]
[67.91793060 -20.50247383]
[58.95339203 -8.47595787]
[45.54902267 -1.74373066]
[30.54902649 -1.73426807]
[17.13617516 -8.44957829]
[8.15647125 -20.46477509]
[5.51527500 -35.23041153]
[9.77300739 -49.61344910]
[20.02624130 -60.56201935]
[34.09939575 -65.75300598]
[49.00635910 -64.08495331]
[61.58396912 -55.91194153]
[52.68627167 -67.98799133]
[37.10358429 -71.80367279]
[30.50221634 -86.42562866]
[37.94617081 -100.63713837]
[53.72508621 -103.53635406]
[65.73472595 -92.89924622]
[64.76232147 -76.88568878]
[73.66001892 -64.80963898]
[81.00973511 -66.30353546]
[73.62596130 -79.36032867]
[83.76214600 -90.41735840]
[97.41017914 -84.19391632]
[95.70915985 -69.29132080]
[103.05886841 -70.78521729]
[106.53617096 -85.37659454]
[105.48114014 -94.47040558]
[110.19541168 -100.18174744]
[113.91604614 -114.71298981]
[105.75823212 -125.44544983]
[105.28455353 -138.72322083]
[112.44399261 -149.68359375]
[124.43096161 -154.44174194]
[128.39389038 -168.90876770]
[132.35682678 -183.37580872]
[136.31974792 -197.84284973]
[140.28268433 -212.30989075]
[129.89280701 -223.71401978]
[127.34037018 -238.92875671]
[133.43981934 -253.09916687]
[146.24485779 -261.70349121]
[161.66944885 -261.99612427]
[174.79165649 -253.88371277]
[181.42422485 -239.95487976]
[179.45072937 -224.65425110]
[169.50091553 -212.86422729]
[154.74972534 -208.34695435]
[150.78678894 -193.87991333]
[146.82386780 -179.41288757]
[142.86093140 -164.94584656]
[138.89799500 -150.47880554]
[147.84262085 -136.24746704]
[143.65385437 -119.62061310]
[128.44728088 -110.99234772]
[124.72664642 -96.46111298]
[121.12754822 -81.89929962]
[117.65025330 -67.30791473]
[85.28779602 -38.01317978]
[88.02954102 -23.26588249]
[90.77128601 -8.51858330]
[93.51303864 6.22871494]
[96.25478363 20.97601318]
[98.99653625 35.72331238]
[101.73828125 50.47061157]
[104.48002625 65.21791077]
[107.22177887 79.96520996]
[119.65889740 88.35079193]
[134.35832214 85.36300659]
[149.05775452 82.37521362]
[163.75717163 79.38742065]
[178.45660400 76.39963531]
[185.76127625 62.57300186]
[200.26397705 56.72444916]
[215.11698914 61.61548996]
[223.30714417 74.93672180]
[220.96733093 90.39826202]
[209.20233154 100.69964600]
[193.56719971 100.97688293]
[181.44438171 91.09906006]
[166.74496460 94.08685303]
[152.04553223 97.07463837]
[137.34611511 100.06243134]
[122.64669037 103.05021667]
[120.96905518 110.36018372]
[135.58897400 113.71544647]
[150.53019714 112.38887787]
[156.40876770 126.18896484]
[145.10055542 136.04412842]
[132.23370361 128.33537292]
[117.61378479 124.98010254]
[115.93614960 132.29006958]
[127.86183929 141.38830566]
[139.78752136 150.48655701]
[151.71321106 159.58479309]
[163.63890076 168.68304443]
[179.30372620 170.90202332]
[184.72943115 184.77323914]
[196.65510559 193.87149048]
[212.98013306 195.42892456]
[219.54682922 210.45591736]
[209.59992981 223.49398804]
[193.37196350 221.13069153]
[187.55686951 205.79718018]
[175.63117981 196.69892883]
[160.81936646 195.13072205]
[154.54064941 180.60871887]
[142.61497498 171.51048279]
[130.68928528 162.41223145]
[118.76359558 153.31399536]
[106.83791351 144.21575928]
[99.42256927 145.33947754]
[106.14277649 158.74987793]
[95.46524811 169.28507996]
[82.14622498 162.38552856]
[84.59189606 147.58691406]
[77.17655182 148.71063232]
[68.48188782 160.93367004]
[59.78722382 173.15670776]
[51.09255600 185.37976074]
[42.39789200 197.60279846]
[49.98168945 207.86499023]
[54.36140060 219.82891846]
[55.19300461 232.52215576]
[52.42038345 244.91630554]
[46.27898026 256.01040649]
[37.27582169 264.91174316]
[26.14770508 270.90765381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[26 40]
[27 39]
[28 38]
[29 37]
[45 180]
[46 179]
[47 178]
[48 177]
[49 176]
[51 126]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
[57 120]
[58 119]
[59 118]
[71 79]
[72 78]
[85 117]
[86 116]
[88 115]
[89 114]
[93 111]
[94 110]
[95 109]
[96 108]
[97 107]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
