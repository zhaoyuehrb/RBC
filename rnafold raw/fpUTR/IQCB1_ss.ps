%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:59:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCUCCAGGCCCCUUCCCGCGUCGCGACGCACGCUGCCCCGGAAGGCCGCGGCGCUGUAGUGCGGCGUGGGAGCCCCAGGUUCUUUAGUGGAAGAACGCGAAGCGAGGAUGAGUGAUCCGUGGAGGCAGUAACAGGCGCGGCGAGGGAGAAGUGAUUCCCGAAGAAUCAAGGCUGGGCCGGACCCGGUGGCCUGGCAACAGGGUAAUAAGAGAA\
) } def
/len { sequence length } bind def

/coor [
[368.18994141 627.22967529]
[380.98764038 618.91217041]
[379.02975464 604.04046631]
[377.07186890 589.16882324]
[375.11398315 574.29711914]
[372.61672974 559.50646973]
[369.58346558 544.81634521]
[366.55020142 530.12622070]
[363.51693726 515.43615723]
[360.48370361 500.74603271]
[357.45043945 486.05590820]
[354.41717529 471.36581421]
[323.45935059 455.66278076]
[313.68673706 427.18920898]
[324.78598022 404.20361328]
[314.65213013 393.14447021]
[304.51828003 382.08529663]
[294.38442993 371.02612305]
[284.25057983 359.96697998]
[269.94760132 355.81069946]
[266.32888794 340.40890503]
[256.19503784 329.34973145]
[246.06117249 318.29055786]
[235.92732239 307.23141479]
[225.79347229 296.17224121]
[215.65962219 285.11309814]
[205.52577209 274.05392456]
[191.22280884 269.89764404]
[187.60408020 254.49584961]
[173.09217834 257.85293579]
[158.75296021 253.46627808]
[148.46672058 242.41821289]
[145.06927490 227.60760498]
[149.57064819 212.98963928]
[139.43679810 201.93048096]
[129.30294800 190.87132263]
[119.16909027 179.81214905]
[109.03523254 168.75299072]
[98.90138245 157.69383240]
[88.68737030 146.70866394]
[78.39374542 135.79806519]
[65.19072723 128.67904663]
[50.41860962 126.07433319]
[44.09145737 127.97126770]
[38.58194351 126.59703827]
[35.25740051 123.17303467]
[20.56728935 120.13977051]
[5.87718010 117.10650635]
[-7.22901106 125.52466583]
[-22.08366013 122.23924255]
[-30.02832603 109.69261169]
[-45.10801315 114.47943115]
[-56.00772858 104.32830048]
[-70.69783783 101.29503632]
[-85.38794708 98.26177216]
[-100.07805634 95.22850800]
[-114.76816559 92.19524384]
[-129.45828247 89.16197968]
[-144.14839172 86.12871552]
[-160.88296509 88.84719086]
[-168.12779236 73.51914978]
[-155.40435791 62.31423187]
[-141.11512756 71.43860626]
[-126.42501068 74.47187042]
[-111.73490143 77.50513458]
[-97.04479218 80.53839874]
[-82.35468292 83.57166290]
[-67.66457367 86.60492706]
[-52.97446442 89.63819122]
[-38.94551468 84.63441467]
[-26.99506187 95.00250244]
[-14.73067760 86.62870789]
[0.21039253 89.49560547]
[8.91044426 102.41639709]
[23.60055351 105.44966125]
[38.29066086 108.48292542]
[53.02333450 111.30221558]
[67.79544830 113.90693665]
[72.05248260 107.73217773]
[80.56654358 95.38265228]
[84.82357788 89.20789337]
[77.13543701 76.32796478]
[69.44730377 63.44803619]
[61.75916672 50.56810760]
[54.07102966 37.68817902]
[46.38288879 24.80825233]
[38.69475174 11.92832375]
[24.11902046 4.41300106]
[23.60999489 -11.97824478]
[37.69131851 -20.38350487]
[51.87733078 -12.15616798]
[51.57468033 4.24018621]
[59.26281738 17.12011337]
[66.95095825 30.00004196]
[74.63909149 42.87997055]
[82.32723236 55.75989914]
[90.01536560 68.63982391]
[97.70350647 81.51975250]
[111.76121521 76.28708649]
[109.15649414 61.51496887]
[100.45157623 46.96640396]
[112.02181244 34.57423019]
[127.13265228 42.26180649]
[123.92861176 58.91024399]
[126.53333282 73.68235779]
[134.03332520 73.68235779]
[149.03332520 73.68235779]
[156.53332520 73.68235779]
[159.13804626 58.91024399]
[161.74278259 44.13812637]
[164.34750366 29.36601257]
[156.36044312 15.45247173]
[162.39241028 0.58657008]
[177.81617737 -3.82784581]
[190.79994202 5.59558630]
[191.38369751 21.62801552]
[179.11961365 31.97073364]
[176.51489258 46.74285126]
[173.91017151 61.51496887]
[171.30545044 76.28708649]
[153.61691284 125.36823273]
[115.55841064 140.60736084]
[89.30435181 125.50443268]
[99.59797668 136.41503906]
[107.76004028 140.50749207]
[109.96054077 147.55998230]
[120.09439087 158.61914062]
[130.22824097 169.67829895]
[140.36210632 180.73745728]
[150.49595642 191.79661560]
[160.62980652 202.85578918]
[175.58447266 199.64558411]
[190.04261780 204.32093811]
[200.15213013 215.53092957]
[203.27235413 230.19790649]
[198.66323853 244.36199951]
[213.69104004 249.30931091]
[216.58493042 263.92007446]
[226.71878052 274.97924805]
[236.85263062 286.03839111]
[246.98648071 297.09756470]
[257.12033081 308.15670776]
[267.25418091 319.21588135]
[277.38803101 330.27502441]
[292.41583252 335.22235107]
[295.30972290 349.83312988]
[305.44357300 360.89227295]
[315.57742310 371.95144653]
[325.71127319 383.01058960]
[335.84512329 394.06976318]
[347.99685669 385.58767700]
[364.58343506 383.14910889]
[382.42501831 388.85098267]
[397.45440674 403.10037231]
[412.45440674 403.10037231]
[427.45440674 403.10037231]
[442.45440674 403.10037231]
[457.45440674 403.10037231]
[472.45440674 403.10037231]
[484.76962280 392.81860352]
[500.45712280 396.17749023]
[507.48278809 410.60037231]
[500.45712280 425.02325439]
[484.76962280 428.38214111]
[472.45440674 418.10037231]
[457.45440674 418.10037231]
[442.45440674 418.10037231]
[427.45440674 418.10037231]
[412.45440674 418.10037231]
[397.45440674 418.10037231]
[395.40811157 425.31579590]
[391.31549072 439.74670410]
[389.26919556 446.96215820]
[402.03594971 454.83679199]
[414.80270386 462.71145630]
[427.56945801 470.58609009]
[440.33621216 478.46075439]
[453.10293579 486.33538818]
[468.98233032 484.04962158]
[480.57089233 495.14398193]
[478.97885132 511.10784912]
[465.42752075 519.69506836]
[450.31231689 514.31835938]
[445.22830200 499.10214233]
[432.46154785 491.22747803]
[419.69479370 483.35284424]
[406.92803955 475.47817993]
[394.16131592 467.60354614]
[381.39456177 459.72888184]
[369.10726929 468.33255005]
[372.14053345 483.02264404]
[375.17379761 497.71276855]
[378.20706177 512.40289307]
[381.24032593 527.09295654]
[384.27359009 541.78308105]
[387.30685425 556.47320557]
[397.58871460 545.55151367]
[412.54977417 546.63146973]
[421.15640259 558.91668701]
[417.06124878 573.34686279]
[403.28445435 579.27984619]
[389.98565674 572.33923340]
[391.94354248 587.21093750]
[393.90142822 602.08258057]
[395.85931396 616.95428467]
[410.37368774 621.67608643]
[421.39599609 632.23413086]
[426.73779297 646.53192139]
[425.33840942 661.73077393]
[417.47573853 674.81286621]
[404.71090698 683.18072510]
[389.57836914 685.17297363]
[375.08270264 680.39404297]
[364.10205078 669.79272461]
[358.81661987 655.47393799]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 203]
[5 202]
[6 196]
[7 195]
[8 194]
[9 193]
[10 192]
[11 191]
[12 190]
[15 150]
[16 149]
[17 148]
[18 147]
[19 146]
[21 144]
[22 143]
[23 142]
[24 141]
[25 140]
[26 139]
[27 138]
[29 136]
[34 131]
[35 130]
[36 129]
[37 128]
[38 127]
[39 126]
[40 124]
[41 123]
[42 78]
[43 77]
[46 76]
[47 75]
[48 74]
[51 71]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[59 63]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[99 105]
[100 104]
[108 120]
[109 119]
[110 118]
[111 117]
[154 170]
[155 169]
[156 168]
[157 167]
[158 166]
[159 165]
[173 189]
[174 188]
[175 187]
[176 186]
[177 185]
[178 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
