%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:14:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGAGCCCGGAAGAGGCGCCGUGCACUUCCGGGUCGAAGAGCGCACGGCGGCGGCAGAGGCGGCGGCGGCCGGGCCUAGGAGCGACUCUCGGUCGUGCAGCGGCGGCGAGCGCUCGCGAGCGGCUGCGGGACGCGAGGUUUCCGGAGCUGAGCUCAAUGUGCAGCA\
) } def
/len { sequence length } bind def

/coor [
[86.17134857 121.71900177]
[81.64194489 118.05348969]
[78.05271149 113.46340179]
[75.58746338 108.18381500]
[60.59329605 108.60201263]
[52.06218338 111.98075867]
[45.31710052 108.88602448]
[30.31774902 109.02544403]
[15.31839657 109.16485596]
[0.31904474 109.30427551]
[-14.68030739 109.44369507]
[-29.67965889 109.58311462]
[-40.71104431 120.58067322]
[-55.92450714 120.50839233]
[-66.34101868 109.92387390]
[-74.00992584 124.76735687]
[-89.56817627 133.07070923]
[-108.01337433 130.97817993]
[-122.72199249 118.18777466]
[-137.25212097 121.91272736]
[-151.78225708 125.63767242]
[-166.31239319 129.36260986]
[-180.84252930 133.08757019]
[-195.37265015 136.81251526]
[-209.90278625 140.53746033]
[-224.43292236 144.26240540]
[-238.14201355 159.00537109]
[-256.52877808 153.09715271]
[-270.91040039 157.35961914]
[-285.29205322 161.62207031]
[-299.67367554 165.88453674]
[-306.99145508 179.89259338]
[-322.09588623 184.54354858]
[-336.02578735 177.07807922]
[-340.51681519 161.92530823]
[-332.90447998 148.07511902]
[-317.70507812 143.74456787]
[-303.93612671 151.50289917]
[-289.55450439 147.24043274]
[-275.17285156 142.97798157]
[-260.79122925 138.71551514]
[-256.71856689 129.29014587]
[-247.93431091 123.56052399]
[-237.22677612 123.63526154]
[-228.15786743 129.73226929]
[-213.62773132 126.00732422]
[-199.09759521 122.28237915]
[-184.56747437 118.55743408]
[-170.03733826 114.83248138]
[-155.50720215 111.10753632]
[-140.97706604 107.38259125]
[-126.44693756 103.65764618]
[-123.53767395 88.94247437]
[-135.55717468 79.96853638]
[-151.24420166 77.91230774]
[-156.81362915 64.09815979]
[-168.83312988 55.12422180]
[-185.17344666 53.73635864]
[-191.89578247 38.77834702]
[-182.08479309 25.63770866]
[-165.83316040 27.83240509]
[-159.85919189 43.10472107]
[-147.83969116 52.07865906]
[-133.01239014 53.49300766]
[-126.58323669 67.94903564]
[-114.56373596 76.92297363]
[-94.04348755 71.07193756]
[-75.57406616 78.68228912]
[-66.48043060 94.92452240]
[-56.26247025 84.14821625]
[-41.05298233 83.79315186]
[-29.81907654 94.58376312]
[-14.81972504 94.44434357]
[0.17962694 94.30492401]
[15.17897892 94.16550446]
[30.17833138 94.02608490]
[45.17768478 93.88667297]
[60.17509079 93.60784912]
[75.16925812 93.18964386]
[93.14356232 75.18194580]
[117.81301880 81.40852356]
[130.89533997 74.07008362]
[143.97767639 66.73164368]
[147.71316528 61.19749451]
[152.91023254 58.77483749]
[157.68548584 59.37392044]
[171.03155518 52.52682114]
[184.37760925 45.67972183]
[190.61578369 38.95061111]
[198.03599548 38.83199692]
[211.50701904 32.23416138]
[224.97804260 25.63632584]
[238.44906616 19.03849030]
[251.85820007 12.31573296]
[265.20425415 5.46863508]
[278.55029297 -1.37846303]
[287.29696655 -14.56203556]
[302.15277100 -13.48753071]
[315.49880981 -20.33462906]
[328.84487915 -27.18172646]
[342.19091797 -34.02882385]
[355.53698730 -40.87592316]
[368.88305664 -47.72302246]
[377.62969971 -60.90659332]
[392.48550415 -59.83208847]
[405.83154297 -66.67918396]
[415.43127441 -82.37118530]
[432.89828491 -80.86566162]
[446.11474609 -87.95965576]
[459.33123779 -95.05364990]
[472.54769897 -102.14764404]
[480.71859741 -116.36624908]
[497.11602783 -116.12876892]
[504.87170410 -101.67950439]
[496.00729370 -87.88262177]
[479.64169312 -88.93116760]
[466.42523193 -81.83717346]
[453.20874023 -74.74317932]
[439.99227905 -67.64918518]
[436.18725586 -56.13998413]
[425.20016479 -50.13045883]
[412.67864990 -53.33312988]
[399.33261108 -46.48603058]
[391.54052734 -33.79220963]
[375.73013306 -34.37696457]
[362.38409424 -27.52986526]
[349.03802490 -20.68276787]
[335.69198608 -13.83566952]
[322.34591675 -6.98857164]
[308.99984741 -0.14147335]
[301.20779419 12.55234909]
[285.39739990 11.96759415]
[272.05136108 18.81469154]
[258.70529175 25.66179085]
[254.17100525 31.53664207]
[245.04690552 32.50951767]
[231.57588196 39.10735321]
[218.10485840 45.70518875]
[204.63381958 52.30302429]
[191.22470093 59.02577972]
[177.87864685 65.87287903]
[164.53259277 72.71997833]
[151.31611633 79.81397247]
[138.23377991 87.15241241]
[125.15145874 94.49085236]
[125.70904541 101.41129303]
[124.39730072 108.22911835]
[121.31160736 114.44859314]
[116.67633820 119.61750031]
[122.64122772 133.38049316]
[128.60612488 147.14349365]
[134.57101440 160.90649414]
[147.15802002 170.49179077]
[145.11991882 185.24629211]
[151.08480835 199.00929260]
[165.41593933 206.22027588]
[168.57234192 221.94975281]
[158.13269043 234.13142395]
[142.10539246 233.42054749]
[132.78521729 220.36245728]
[137.32180786 204.97418213]
[131.35691833 191.21118164]
[119.19657135 182.61030579]
[120.80802155 166.87138367]
[114.84313202 153.10838318]
[108.87823486 139.34539795]
[102.91333771 125.58239746]
[97.08654785 125.58238220]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 79]
[5 78]
[7 77]
[8 76]
[9 75]
[10 74]
[11 73]
[12 72]
[15 69]
[19 52]
[20 51]
[21 50]
[22 49]
[23 48]
[24 47]
[25 46]
[26 45]
[28 41]
[29 40]
[30 39]
[31 38]
[53 66]
[54 65]
[56 63]
[57 62]
[81 145]
[82 144]
[83 143]
[86 142]
[87 141]
[88 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 134]
[95 133]
[96 132]
[98 130]
[99 129]
[100 128]
[101 127]
[102 126]
[103 125]
[105 123]
[106 122]
[108 119]
[109 118]
[110 117]
[111 116]
[149 167]
[150 166]
[151 165]
[152 164]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
