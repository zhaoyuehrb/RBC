%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:13:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCCCGCUCCCCGCCCCCGCCCCCGCCCCCGCCUCCGCCGCGGCCCCCACCUCUGCCUCCUUCUACUCGGGCGCCCCGGCGGCCGCCACCUCUCCCCAGCCCAGGAGAGGCUGCGGAGCCGCAGCCGCCCAGACCGCGCAGCGCGGGAGGCAGGUUCCGCACGAAAUAAAUCAGA\
) } def
/len { sequence length } bind def

/coor [
[118.31312561 518.58917236]
[113.43477631 504.31848145]
[112.25948334 489.28286743]
[114.86113739 474.42749023]
[121.07618713 460.68615723]
[130.51394653 448.92269897]
[142.58114624 439.87652588]
[156.51925659 434.11630249]
[154.40835571 419.26556396]
[139.14286804 409.20166016]
[135.99725342 390.86660767]
[147.41984558 375.78189087]
[144.78614807 361.01492310]
[134.93440247 349.84387207]
[140.12849426 334.89956665]
[137.49479675 320.13259888]
[134.86111450 305.36560059]
[132.09721375 290.62243652]
[129.20332336 275.90426636]
[126.30944061 261.18606567]
[123.41555023 246.46784973]
[120.52165985 231.74964905]
[117.49799347 217.05757141]
[104.88687134 209.21568298]
[101.48017883 194.38836670]
[109.79096985 181.21383667]
[106.63777924 166.54899597]
[103.48458099 151.88417053]
[82.43687439 148.94532776]
[64.32257080 137.83160400]
[52.16714859 120.39920044]
[48.00081635 99.55970001]
[52.51943588 78.79374695]
[39.84884644 70.76528931]
[24.61353111 74.00919342]
[11.87812042 65.68669891]
[8.87944221 51.14216232]
[-3.79114771 43.11370087]
[-16.46173668 35.08524323]
[-29.13232803 27.05678368]
[-41.80291748 19.02832603]
[-54.47350693 10.99986744]
[-70.27183533 10.14933681]
[-76.88140106 -3.19843245]
[-89.55198669 -11.22689152]
[-102.22257996 -19.25535011]
[-118.02090454 -20.10588074]
[-124.63047028 -33.45365143]
[-137.30105591 -41.48210907]
[-149.97164917 -49.51056671]
[-161.31481934 -39.53512955]
[-175.00949097 -33.16075516]
[-189.94549561 -30.90418816]
[-204.91206360 -32.94835663]
[-218.69590759 -39.12754822]
[-230.17962646 -48.94084549]
[-238.43229675 -61.59272766]
[-242.78491211 -76.05756378]
[-242.88461304 -91.16275024]
[-238.72332764 -105.68378448]
[-230.63839722 -118.44350433]
[-219.28521729 -128.40754700]
[-205.58415222 -134.76815796]
[-190.64587402 -137.00971985]
[-175.68136597 -134.95051575]
[-161.90374756 -128.75747681]
[-150.42988586 -118.93264771]
[-142.18992615 -106.27248383]
[-137.85185242 -91.80328369]
[-137.76731873 -76.69800568]
[-141.94319153 -62.18115616]
[-129.27259827 -54.15269852]
[-116.60201263 -46.12424088]
[-101.70996857 -45.84795761]
[-94.19412231 -31.92593956]
[-81.52352905 -23.89748192]
[-68.85294342 -15.86902237]
[-53.96089554 -15.59274101]
[-46.44504929 -1.67072296]
[-33.77445984 6.35773611]
[-21.10386848 14.38619423]
[-8.43327904 22.41465378]
[4.23731089 30.44311142]
[16.90790176 38.47157288]
[31.34003830 34.97171402]
[44.30418777 42.93321609]
[47.87730408 58.09469604]
[60.54789734 66.12315369]
[69.43042755 56.85873032]
[80.48127747 49.92235947]
[93.09043884 45.81867599]
[106.53144073 44.89256287]
[120.00320435 47.30258942]
[126.40904999 33.73921585]
[132.81489563 20.17584038]
[139.22074890 6.61246490]
[145.62658691 -6.95090961]
[138.05256653 -20.49394608]
[139.91888428 -35.89837646]
[150.50788879 -47.24088669]
[165.74790955 -50.16004181]
[179.77883911 -43.53337479]
[187.20549011 -29.90897369]
[185.17218018 -14.52569389]
[174.46075439 -3.29872441]
[159.18997192 -0.54506290]
[152.78411865 13.01831150]
[146.37826538 26.58168602]
[139.97242737 40.14506149]
[133.56657410 53.70843506]
[144.45022583 64.03055573]
[157.65557861 56.91586304]
[170.86093140 49.80117416]
[184.06626892 42.68648148]
[197.27162170 35.57179260]
[210.47695923 28.45710373]
[223.68231201 21.34241295]
[231.83091736 7.11103106]
[248.22869873 7.32282543]
[256.00701904 21.75992012]
[247.16421509 35.57067108]
[230.79699707 34.54776001]
[217.59165955 41.66244888]
[204.38630676 48.77714157]
[191.18096924 55.89183044]
[177.97561646 63.00651932]
[164.77026367 70.12120819]
[151.56492615 77.23590088]
[154.15292358 86.01472473]
[155.26988220 95.02713776]
[154.90892029 104.03027344]
[153.10267639 112.78527069]
[149.92182922 121.06359100]
[145.47259521 128.65296936]
[139.89340210 135.36289978]
[133.35060120 141.02931213]
[126.03359985 145.51867676]
[118.14942169 148.73097229]
[121.30261230 163.39581299]
[124.45580292 178.06063843]
[137.44725037 186.65483093]
[140.43614197 201.57197571]
[132.16282654 213.90437317]
[137.04003906 221.66424561]
[135.23985291 228.85575867]
[138.13374329 243.57395935]
[141.02763367 258.29217529]
[143.92152405 273.01034546]
[146.81541443 287.72854614]
[151.55491638 295.57330322]
[149.62809753 302.73193359]
[152.26177979 317.49890137]
[154.89547729 332.26589966]
[164.93559265 344.49316406]
[159.55313110 358.38122559]
[162.18682861 373.14822388]
[173.10717773 377.93759155]
[180.27502441 387.31658936]
[181.99360657 398.87384033]
[177.94885254 409.70767212]
[169.25907898 417.15466309]
[171.36997986 432.00540161]
[186.36112976 433.65359497]
[200.47111511 438.97891235]
[212.81298828 447.64660645]
[222.61091614 459.11184692]
[229.24899292 472.65386963]
[232.30996704 487.42144775]
[231.60139465 502.48626709]
[227.16783142 516.90130615]
[219.28797913 529.76049805]
[208.45715332 540.25549316]
[195.35620117 547.72650146]
[180.80867004 551.70391846]
[165.72900391 551.93774414]
[151.06513977 548.41320801]
[137.73886108 541.35198975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 162]
[9 161]
[12 156]
[13 155]
[15 153]
[16 152]
[17 151]
[18 149]
[19 148]
[20 147]
[21 146]
[22 145]
[23 143]
[26 140]
[27 139]
[28 138]
[33 88]
[34 87]
[37 84]
[38 83]
[39 82]
[40 81]
[41 80]
[42 79]
[44 77]
[45 76]
[46 75]
[48 73]
[49 72]
[50 71]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
