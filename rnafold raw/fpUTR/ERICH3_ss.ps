%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:11:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAGGGAAGCUGUGGAUACCAACGGAGGGUGGGAGCCCGGGAGGCUGCGGGUAGCCCGGGCGCCCAGGGGCGGCGGCGGCCCAGCCCAGGUGCCCGCGCACAGGGGACCUCGGUGCGGAGCCACCCCUCGAGCGCGACUGUCGCAGCGCCAGCGCGCACGGGGCCCCACGCACCCACCCUCCGCACCUGCCGCGGGGUCCAAAAGGGAUCCUGCAAAA\
) } def
/len { sequence length } bind def

/coor [
[156.45916748 537.59655762]
[149.00804138 538.45153809]
[145.61059570 553.06170654]
[142.21315002 567.67187500]
[138.81568909 582.28204346]
[146.04089355 596.60601807]
[139.21614075 611.12506104]
[123.57678986 614.70135498]
[111.12001801 604.59155273]
[111.40158844 588.55096436]
[124.20551300 578.88458252]
[127.60296631 564.27441406]
[131.00041199 549.66424561]
[134.39787292 535.05407715]
[134.71914673 520.05749512]
[131.95051575 505.31521606]
[118.12014771 502.95620728]
[105.89916992 496.00418091]
[96.76501465 485.27615356]
[91.82992554 472.04699707]
[91.70553589 457.89797974]
[96.42716980 444.52777100]
[105.44712067 433.54852295]
[117.69813538 426.29138184]
[115.14030457 411.51107788]
[112.58247375 396.73077393]
[110.02463531 381.95046997]
[107.46680450 367.17016602]
[104.90897369 352.38983154]
[102.35114288 337.60952759]
[99.79330444 322.82922363]
[97.23547363 308.04891968]
[94.67764282 293.26861572]
[92.11980438 278.48831177]
[79.90864563 273.41986084]
[73.14116669 259.77008057]
[58.36085892 262.32791138]
[43.58055496 264.88574219]
[28.80024529 267.44357300]
[14.01993847 270.00140381]
[-0.76036936 272.55923462]
[-15.54067707 275.11706543]
[-24.65298080 287.75048828]
[-39.67875290 290.13397217]
[-51.66664505 281.36892700]
[-66.44695282 283.92675781]
[-81.22725677 286.48458862]
[-95.80337524 295.14328003]
[-108.15876770 283.53378296]
[-100.42327881 268.44741821]
[-83.78509521 271.70428467]
[-69.00478363 269.14642334]
[-54.22447968 266.58859253]
[-45.87923813 254.30477905]
[-30.92634010 251.50021362]
[-18.09851074 260.33676147]
[-3.31820226 257.77893066]
[11.46210575 255.22109985]
[26.24241257 252.66325378]
[41.02272034 250.10542297]
[55.80302811 247.54759216]
[70.58333588 244.98976135]
[81.41468048 234.61276245]
[84.60315704 219.95556641]
[76.19059753 210.20062256]
[74.91141510 197.18742371]
[81.45527649 185.64256287]
[93.62921906 179.88909912]
[97.02667236 165.27891541]
[100.42411804 150.66874695]
[103.82157135 136.05856323]
[107.21902466 121.44838715]
[92.15495300 120.08348083]
[82.02975464 109.84843445]
[80.94819641 96.22274017]
[88.48800659 85.70603943]
[84.67473602 71.19883728]
[73.68337250 59.81900787]
[77.93096924 45.54290390]
[74.11769867 31.03569984]
[70.30442047 16.52849579]
[66.38766479 2.04889011]
[62.36762238 -12.40238190]
[57.05617905 -19.82545853]
[58.39493179 -27.08875465]
[54.58165741 -41.59595871]
[50.66489792 -56.07556534]
[46.64485550 -70.52684021]
[42.52173615 -84.94903564]
[38.29574966 -99.34143066]
[34.06975937 -113.73382568]
[29.84377289 -128.12622070]
[18.53192902 -139.18754578]
[22.37012672 -153.57911682]
[18.14413834 -167.97151184]
[13.91815090 -182.36390686]
[-0.47915375 -188.46731567]
[-7.53884172 -202.42062378]
[-3.92754459 -217.63551331]
[8.64959335 -226.92796326]
[24.25403214 -225.91036987]
[35.51783371 -215.06320190]
[37.12257385 -199.50817871]
[28.31054497 -186.58988953]
[32.53653336 -172.19749451]
[36.76252365 -157.80509949]
[47.77209473 -147.77322388]
[44.23616791 -132.35220337]
[48.46215439 -117.95981598]
[52.68814468 -103.56742096]
[56.91413116 -89.17502594]
[61.81131744 -83.64643860]
[61.09613037 -74.54687500]
[65.11617279 -60.09560776]
[69.93391418 -54.49765015]
[69.08885956 -45.40923309]
[72.90213776 -30.90203094]
[76.81889343 -16.42242432]
[80.83893585 -1.97115135]
[85.65667725 3.62680268]
[84.81162262 12.71522141]
[88.62490082 27.22242355]
[92.43817139 41.72962570]
[103.15678406 52.07180405]
[99.18193817 67.38555908]
[102.99520874 81.89276123]
[115.60269165 86.71552277]
[122.63051605 99.91461945]
[135.36383057 91.98603058]
[148.09715271 84.05743408]
[160.83047485 76.12883759]
[168.45553589 62.26633835]
[183.34928894 62.10714340]
[196.08261108 54.17855072]
[208.81593323 46.24995422]
[221.54924011 38.32135773]
[234.28256226 30.39276314]
[239.90855408 23.20515060]
[247.25479126 22.44336700]
[260.10003662 14.69740486]
[272.94528198 6.95144224]
[280.76751709 -6.80076122]
[295.66201782 -6.74726248]
[308.50726318 -14.49322414]
[318.94876099 -27.85028839]
[334.67431641 -21.51444054]
[332.93936157 -4.64949942]
[316.25320435 -1.64798892]
[303.40798950 6.09797287]
[296.50451660 19.29613304]
[280.69122314 19.79667854]
[267.84600830 27.54264069]
[255.00076294 35.28860092]
[242.21115112 43.12607956]
[229.47784424 51.05467606]
[216.74452209 58.98327255]
[204.01119995 66.91186523]
[191.27789307 74.84046173]
[184.56358337 88.13585663]
[168.75906372 88.86215210]
[156.02574158 96.79074860]
[143.29243469 104.71934509]
[130.55911255 112.64794159]
[121.82920074 124.84584045]
[118.43174744 139.45600891]
[115.03430176 154.06619263]
[111.63684845 168.67637634]
[108.23939514 183.28654480]
[117.75647736 197.96836853]
[113.78557587 214.66125488]
[99.26036072 223.14404297]
[96.07188416 237.80125427]
[116.40254974 254.98910522]
[106.90011597 275.93048096]
[109.45794678 290.71078491]
[112.01577759 305.49108887]
[114.57361603 320.27139282]
[117.13144684 335.05169678]
[119.68927765 349.83200073]
[122.24711609 364.61230469]
[124.80494690 379.39263916]
[127.36277771 394.17294312]
[129.92060852 408.95324707]
[132.47843933 423.73355103]
[148.18966675 427.16369629]
[161.34927368 436.33944702]
[169.95826721 449.83093262]
[172.72276306 465.55541992]
[169.24842834 481.09896851]
[160.09637451 494.08688354]
[146.69279480 502.54660034]
[149.46142578 517.28887939]
[192.27348328 528.41345215]
[198.89179993 541.87445068]
[205.51011658 555.33538818]
[212.12843323 568.79638672]
[218.74674988 582.25732422]
[225.36506653 595.71832275]
[231.98338318 609.17932129]
[238.60169983 622.64025879]
[245.22001648 636.10125732]
[259.88058472 642.61639404]
[263.78799438 658.17633057]
[253.94477844 670.84484863]
[237.90184021 670.90368652]
[227.96592712 658.30780029]
[231.75903320 642.71960449]
[225.14071655 629.25860596]
[218.52239990 615.79760742]
[211.90408325 602.33666992]
[205.28576660 588.87567139]
[198.66744995 575.41467285]
[192.04913330 561.95373535]
[185.43081665 548.49273682]
[178.81250000 535.03173828]
[171.36138916 535.88671875]
[173.07125854 550.78894043]
[174.78089905 565.69116211]
[159.87861633 567.40057373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 14]
[3 13]
[4 12]
[5 11]
[15 192]
[16 191]
[24 184]
[25 183]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[32 176]
[33 175]
[34 174]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[45 53]
[46 52]
[47 51]
[63 172]
[64 171]
[68 168]
[69 167]
[70 166]
[71 165]
[72 164]
[76 126]
[77 125]
[79 123]
[80 122]
[81 121]
[82 119]
[83 118]
[85 117]
[86 116]
[87 114]
[88 113]
[89 111]
[90 110]
[91 109]
[92 108]
[94 106]
[95 105]
[96 104]
[128 163]
[129 162]
[130 161]
[131 160]
[133 158]
[134 157]
[135 156]
[136 155]
[137 154]
[139 153]
[140 152]
[141 151]
[143 149]
[144 148]
[193 215]
[194 214]
[195 213]
[196 212]
[197 211]
[198 210]
[199 209]
[200 208]
[201 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
