%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:15:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGACACUGCGCGCGCCUCCAGGCACCGGCGUUAGCGGGUCGCCGACCCGCAAUCCCCGCCGCGGCUGCUUGCCUACCGGAGUGUGCGCCGGCACCUGCCGCCGGAGAC\
) } def
/len { sequence length } bind def

/coor [
[52.09403992 185.59880066]
[54.06998825 170.08656311]
[65.58975220 159.51164246]
[64.74869537 144.53523254]
[63.90763855 129.55883789]
[64.55273438 118.54648590]
[67.91948700 109.15146637]
[73.35799408 101.96772766]
[80.10162354 97.38970947]
[87.32127380 95.59199524]
[94.18261719 96.52270508]
[90.03009033 82.10894775]
[85.87755585 67.69519043]
[81.72502136 53.28142929]
[77.57248688 38.86766815]
[73.41996002 24.45390892]
[69.26742554 10.04014778]
[65.11489105 -4.37361145]
[59.65755463 -11.88170815]
[61.05411911 -19.25007629]
[57.30747223 -33.77462769]
[53.56082535 -48.29918289]
[49.20655441 -62.65328598]
[44.25236893 -76.81153870]
[39.29818344 -90.96978760]
[34.34399796 -105.12803650]
[29.38981247 -119.28628540]
[23.26314926 -132.97804260]
[15.82396030 -146.00334167]
[8.20283031 -158.92301941]
[0.58169967 -171.84271240]
[-7.03943062 -184.76240540]
[-14.66056061 -197.68209839]
[-33.62323761 -198.57316589]
[-48.21381378 -210.48626709]
[-52.80706406 -228.60205078]
[-45.76718521 -245.75537109]
[-54.44725418 -257.98876953]
[-63.12732315 -270.22219849]
[-71.80739594 -282.45559692]
[-80.48746490 -294.68902588]
[-89.16753387 -306.92242432]
[-97.84760284 -319.15585327]
[-111.94441223 -328.57476807]
[-106.79595947 -344.72811890]
[-89.84868622 -344.25253296]
[-85.61418915 -327.83590698]
[-76.93412018 -315.60250854]
[-68.25405121 -303.36907959]
[-59.57398224 -291.13568115]
[-50.89391327 -278.90225220]
[-42.21384048 -266.66885376]
[-33.53377151 -254.43544006]
[-22.31536674 -256.44204712]
[-11.12215042 -254.03897095]
[-1.63044477 -247.54592896]
[4.72307968 -237.89816284]
[6.95880461 -226.51185608]
[4.70503521 -215.07627869]
[-1.74087119 -205.30322266]
[5.88025904 -192.38352966]
[13.50138950 -179.46385193]
[21.12251854 -166.54415894]
[28.74364853 -153.62446594]
[34.94139481 -149.40176392]
[36.39149857 -140.23382568]
[42.45815659 -153.95225525]
[56.35302353 -159.60316467]
[70.27236176 -154.01281738]
[76.39870453 -140.32092285]
[71.29131317 -126.21721649]
[57.81865311 -119.62271881]
[43.54806137 -124.24047089]
[48.50224686 -110.08222198]
[53.45643234 -95.92397308]
[58.41062164 -81.76572418]
[63.36480713 -67.60747528]
[66.51608276 -65.74018860]
[68.86090851 -62.17972183]
[69.57888794 -57.35132217]
[68.08538055 -52.04582977]
[71.83202362 -37.52127838]
[75.57867432 -22.99672318]
[79.52864838 -8.52614403]
[83.68118286 5.88761568]
[87.83371735 20.30137444]
[91.98625183 34.71513367]
[96.13877869 49.12889481]
[100.29131317 63.54265594]
[104.44384766 77.95641327]
[108.59638214 92.37017822]
[116.39795685 105.18170929]
[127.29785919 115.48666382]
[138.19776917 125.79161835]
[149.09767151 136.09657288]
[165.16748047 139.36660767]
[170.11314392 155.00222778]
[158.84696960 166.91883850]
[142.95864868 162.85765076]
[138.79270935 146.99647522]
[127.89280701 136.69152832]
[116.99290466 126.38656616]
[106.09300232 116.08161926]
[99.29075623 119.24065399]
[78.88404083 128.71777344]
[79.72509766 143.69418335]
[80.56615448 158.67057800]
[93.19750214 167.88920593]
[96.89785004 183.08267212]
[89.91999817 197.07708740]
[75.55869293 203.26472473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 107]
[4 106]
[5 105]
[11 91]
[12 90]
[13 89]
[14 88]
[15 87]
[16 86]
[17 85]
[18 84]
[20 83]
[21 82]
[22 81]
[23 77]
[24 76]
[25 75]
[26 74]
[27 73]
[28 66]
[29 64]
[30 63]
[31 62]
[32 61]
[33 60]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[92 103]
[93 102]
[94 101]
[95 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
