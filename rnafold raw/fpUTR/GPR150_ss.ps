%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAUCACGAGGACAAUCGACAAAAACAACUAAGCGCAAAGCCGCCCGAAUCCAUCUCCCUCUCUGUGCGUGUGCCUUUUCAACUAACUUUGGGAACUCGUAUAGACCCAGCGUCGCUCCCCGCGCCGCCUCGCCUCCACUUUGGUUUCCCGCGUCCUGCCCGCCCUCUUCGGUGCCUCCUCUUCCUCCGGGACAAGG\
) } def
/len { sequence length } bind def

/coor [
[59.80686951 732.52868652]
[56.40280151 717.92004395]
[58.66800308 703.09210205]
[66.27841949 690.16607666]
[78.14529419 680.99127197]
[92.57093048 676.88018799]
[107.49158478 678.42095947]
[120.77268982 685.39324951]
[130.51510620 696.80102539]
[128.62571716 681.92047119]
[126.73632050 667.03997803]
[124.84692383 652.15942383]
[122.95752716 637.27886963]
[109.23632050 627.56195068]
[106.73432922 610.59436035]
[117.48162079 596.79760742]
[115.35755920 581.94873047]
[113.23348999 567.09991455]
[111.10942078 552.25103760]
[108.98535156 537.40222168]
[99.35160828 536.22460938]
[90.16734314 533.05895996]
[81.83845520 528.04119873]
[74.73384857 521.38922119]
[69.16913605 513.39331055]
[65.39260864 504.40356445]
[63.57414246 494.81463623]
[63.79757690 485.04827881]
[66.05685425 475.53491211]
[70.25610352 466.69451904]
[76.21374512 458.91827393]
[83.67027283 452.55105591]
[92.29962158 447.87631226]
[101.72339630 445.10330200]
[101.48660278 430.10516357]
[101.24980927 415.10702515]
[88.97729492 406.70922852]
[83.94347382 392.52737427]
[88.27632904 377.93011475]
[100.51515198 368.57504272]
[100.27835846 353.57693481]
[90.46525574 339.03308105]
[99.54004669 323.01550293]
[99.06652069 308.02297974]
[98.59298706 293.03045654]
[87.59172821 283.05508423]
[86.89792633 267.85726929]
[97.43559265 256.38577271]
[96.96206665 241.39324951]
[96.48854065 226.40072632]
[88.35330963 213.92405701]
[95.65110779 199.88650513]
[95.17757416 184.89398193]
[94.70404816 169.90145874]
[75.84709930 165.80955505]
[58.82009506 156.73161316]
[44.91307449 143.35540771]
[35.17970657 126.69438934]
[30.35743523 108.01087952]
[30.81161880 88.72042084]
[36.50784683 70.28455353]
[47.01454926 54.10007858]
[61.53567886 41.39319992]
[54.69419098 28.04426575]
[47.85270691 14.69533062]
[41.01121902 1.34639609]
[34.16973114 -12.00253868]
[27.32824326 -25.35147285]
[20.48675537 -38.70040894]
[13.64526844 -52.04934311]
[0.46537355 -60.80153656]
[1.54612315 -75.65688324]
[-5.29536438 -89.00581360]
[-18.47525978 -97.75801086]
[-17.39450836 -112.61335754]
[-24.23599625 -125.96229553]
[-31.07748413 -139.31123352]
[-46.22582626 -138.04782104]
[-60.70302963 -142.68235779]
[-72.30142975 -152.50811768]
[-79.25234985 -166.02673340]
[-80.49583435 -181.17672729]
[-75.84225464 -195.64782715]
[-66.00124359 -207.23329163]
[-52.47348785 -214.16642761]
[-37.32187653 -215.38996887]
[-22.85691643 -210.71736145]
[-11.28440666 -200.86111450]
[-4.36907387 -187.32426453]
[-3.16545558 -172.17105103]
[-7.85709429 -157.71224976]
[-17.72854996 -146.15270996]
[-10.88706207 -132.80378723]
[-4.04557467 -119.45484161]
[8.64497089 -111.65745544]
[8.05356979 -95.84730530]
[14.89505768 -82.49836731]
[27.58560371 -74.70098114]
[26.99420166 -58.89082718]
[33.83568954 -45.54189301]
[40.67717743 -32.19295883]
[47.51866531 -18.84402657]
[54.36015320 -5.49509144]
[61.20164108 7.85384321]
[68.04312897 21.20277786]
[74.88461304 34.55171204]
[87.09692383 31.09592438]
[99.73217010 29.89872169]
[112.37620544 30.99934387]
[124.61456299 34.36171722]
[136.04608154 39.87562180]
[145.09115601 27.90956306]
[154.13623047 15.94350243]
[156.28547668 0.26895830]
[170.13241577 -5.21843004]
[179.17750549 -17.18449020]
[188.22257996 -29.15054893]
[187.44656372 -45.17482376]
[199.58570862 -55.66389847]
[215.32789612 -52.57145691]
[222.59706116 -38.26975250]
[215.81692505 -23.72982979]
[200.18862915 -20.10547256]
[191.14355469 -8.13941288]
[182.09848022 3.82664657]
[180.59620667 18.64529800]
[166.10229492 24.98857880]
[157.05722046 36.95463943]
[148.01214600 48.92070007]
[155.56233215 57.25554276]
[161.68254089 66.69047546]
[166.21528625 76.98266602]
[169.04388428 87.86724091]
[170.09553528 99.06407166]
[169.34320068 110.28498840]
[166.80622864 121.24120331]
[162.54991150 131.65075684]
[156.68377686 141.24572754]
[149.35882568 149.77919006]
[140.76354980 157.03150940]
[131.11917114 162.81607056]
[120.67391205 166.98396301]
[109.69657135 169.42793274]
[110.17009735 184.42045593]
[110.64363098 199.41297913]
[118.81272125 212.96202087]
[111.48106384 225.92720032]
[111.95458984 240.91972351]
[112.42811584 255.91224670]
[123.66870117 266.69589233]
[123.93534851 281.90719604]
[113.58551025 292.55691528]
[114.05904388 307.54943848]
[114.53256989 322.54196167]
[123.38838959 331.92828369]
[123.46881866 344.43164062]
[115.27648926 353.34011841]
[115.51328278 368.33825684]
[128.04133606 377.30230713]
[132.83283997 391.75549316]
[128.24923706 406.08920288]
[116.24794006 414.87023926]
[116.48473358 429.86837769]
[116.72152710 444.86651611]
[136.08738708 452.46923828]
[150.20956421 467.68563843]
[156.32215881 487.47836304]
[153.25282288 507.91949463]
[141.64732361 524.97009277]
[123.83420563 535.27813721]
[125.95826721 550.12701416]
[128.08233643 564.97583008]
[130.20640564 579.82470703]
[132.33047485 594.67352295]
[143.97010803 601.46264648]
[149.49092102 613.54095459]
[147.07980347 626.40246582]
[137.83805847 635.38946533]
[139.72744751 650.27001953]
[141.61685181 665.15057373]
[143.50624084 680.03106689]
[145.39564514 694.91162109]
[151.96231079 704.06658936]
[149.80392456 713.83178711]
[154.68620300 728.01501465]
[159.56848145 742.19824219]
[172.29241943 752.54394531]
[169.42793274 768.69097900]
[153.92176819 774.02862549]
[141.72532654 763.06604004]
[145.38528442 747.08050537]
[140.50300598 732.89727783]
[135.62072754 718.71411133]
[131.92451477 733.25152588]
[123.09335327 745.37634277]
[110.39064026 753.35388184]
[95.63362885 756.04284668]
[80.93347931 753.05859375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 182]
[10 181]
[11 180]
[12 179]
[13 178]
[16 174]
[17 173]
[18 172]
[19 171]
[20 170]
[34 164]
[35 163]
[36 162]
[40 158]
[41 157]
[43 154]
[44 153]
[45 152]
[48 149]
[49 148]
[50 147]
[52 145]
[53 144]
[54 143]
[63 106]
[64 105]
[65 104]
[66 103]
[67 102]
[68 101]
[69 100]
[70 99]
[72 97]
[73 96]
[75 94]
[76 93]
[77 92]
[111 129]
[112 128]
[113 127]
[115 125]
[116 124]
[117 123]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
