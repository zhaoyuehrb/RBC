%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:42:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCGCGGCGCGGGGGAGGAGACCUUCAUCUGUUCACGCGGUAGCGCGGAUUGCGGUUCGCGGCGCGCGCCACCGGGGAAGGAGCGGUGGGCCGAGGGGUUGGAGGUGGGGCCCCAGGAGGACCUCGGGCUGUGGGCCGGGAGAGCGGAGUCGGGGAGUGGGGCGGGGGAGCGAGGUGGCGCCGGGGAGCCUGGGAU\
) } def
/len { sequence length } bind def

/coor [
[-104.22858429 281.36242676]
[-108.95773315 282.09002686]
[-119.93431854 292.31326294]
[-130.91090393 302.53649902]
[-141.88748169 312.75973511]
[-152.86407471 322.98297119]
[-163.84065247 333.20620728]
[-164.13882446 350.69238281]
[-176.73986816 362.32736206]
[-193.52027893 361.27468872]
[-204.33410645 371.66992188]
[-215.14793396 382.06518555]
[-225.96177673 392.46041870]
[-236.69320679 402.94070435]
[-247.34158325 413.50537109]
[-257.98995972 424.07000732]
[-262.33712769 439.28225708]
[-276.82159424 442.75357056]
[-287.46997070 453.31823730]
[-298.11834717 463.88290405]
[-302.46551514 479.09515381]
[-316.94998169 482.56643677]
[-327.59835815 493.13110352]
[-334.58392334 508.57901001]
[-351.36193848 506.14285278]
[-353.66558838 489.34613037]
[-338.16302490 482.48272705]
[-327.51461792 471.91806030]
[-323.92910767 457.46145630]
[-308.68301392 453.23449707]
[-298.03463745 442.66986084]
[-287.38626099 432.10519409]
[-283.80072021 417.64859009]
[-268.55462646 413.42163086]
[-257.90625000 402.85696411]
[-247.25787354 392.29232788]
[-244.72120667 385.34274292]
[-236.35700989 381.64660645]
[-225.54318237 371.25134277]
[-214.72935486 360.85610962]
[-203.91552734 350.46087646]
[-205.46557617 337.66345215]
[-199.26654053 326.13937378]
[-187.38584900 320.20523071]
[-174.06388855 322.22961426]
[-163.08731079 312.00637817]
[-152.11071777 301.78314209]
[-141.13414001 291.55990601]
[-130.15756226 281.33666992]
[-119.18096924 271.11343384]
[-108.36714172 260.71820068]
[-97.71876526 250.15353394]
[-87.07038116 239.58888245]
[-83.48485565 225.13227844]
[-68.23876190 220.90531921]
[-57.67410278 210.25694275]
[-47.19382477 199.52549744]
[-36.71354675 188.79406738]
[-26.23327065 178.06262207]
[-15.75299358 167.33117676]
[-12.33990479 150.12155151]
[5.42231989 145.28231812]
[15.73188210 134.38677979]
[26.04144478 123.49123383]
[36.35100555 112.59568787]
[46.66056824 101.70014191]
[56.97013092 90.80459595]
[58.15291977 75.85129547]
[49.68449402 63.47043610]
[42.24907684 58.14728546]
[41.18191910 50.82661057]
[32.90999603 38.31360626]
[24.63807106 25.80060005]
[16.36614990 13.28759575]
[8.09422684 0.77459055]
[-0.17769620 -11.73841476]
[-15.60210228 -11.43633652]
[-28.72926331 -19.54072762]
[-35.37035370 -33.46550751]
[-33.40621948 -48.76733017]
[-23.46361351 -60.56343460]
[-8.71518421 -65.08973694]
[6.13289881 -60.90189743]
[16.34266663 -49.33625031]
[18.65621758 -34.08334732]
[12.33530903 -20.01033783]
[20.60723114 -7.49733210]
[28.87915421 5.01567268]
[37.15107727 17.52867889]
[45.42300034 30.04168320]
[53.69492340 42.55468750]
[62.06535721 55.00201035]
[70.53378296 67.38287354]
[85.26541901 64.55819702]
[77.07649994 51.30756378]
[80.61981201 36.51231003]
[93.30272675 28.78708076]
[96.59105682 14.15195465]
[99.87937927 -0.48317197]
[103.16770172 -15.11829853]
[106.45602417 -29.75342560]
[109.74434662 -44.38854980]
[99.39486694 -55.95003128]
[97.85112000 -71.39012146]
[105.70671844 -84.77179718]
[119.94101715 -90.94953156]
[135.08064270 -87.54785156]
[145.30409241 -75.87477875]
[146.68025208 -60.41884995]
[138.67994690 -47.12318039]
[124.37947083 -41.10022736]
[121.09114838 -26.46510124]
[117.80282593 -11.82997513]
[114.51450348 2.80515170]
[111.22618103 17.44027901]
[107.93785858 32.07540512]
[116.09706116 44.48358917]
[112.97071075 59.37253189]
[99.90055084 67.84651947]
[109.19836426 71.75102997]
[116.12130737 78.01295471]
[120.19638062 85.57434845]
[121.35945129 93.33759308]
[136.34777832 93.92944336]
[151.33609009 94.52130127]
[166.32441711 95.11315918]
[181.31272888 95.70500946]
[196.30105591 96.29686737]
[207.85537720 85.85007477]
[223.04722595 86.66381836]
[232.93544006 97.74347687]
[247.92375183 98.33533478]
[262.01846313 91.14856720]
[274.43054199 99.38202667]
[288.52526855 92.19526672]
[300.93731689 100.42871857]
[315.03204346 93.24195862]
[327.44412231 101.47541046]
[342.43243408 102.06726837]
[356.52716064 94.88050079]
[368.93920898 103.11396027]
[376.15252686 89.70763397]
[388.42126465 80.79893494]
[403.28054810 78.11150360]
[417.77355957 82.12567139]
[429.04000854 91.99362946]
[434.88055420 105.71783447]
[449.86886597 106.30969238]
[464.12365723 98.20212555]
[478.13369751 106.72568512]
[477.48663330 123.11206055]
[462.84811401 130.50434875]
[449.27700806 121.29800415]
[434.28869629 120.70615387]
[427.38415527 133.92707825]
[415.37466431 142.87593079]
[400.61026001 145.73478699]
[386.00915527 141.88403320]
[374.48110962 132.03564453]
[368.34738159 118.10227966]
[355.32470703 125.33137512]
[341.84057617 117.05558777]
[326.85226440 116.46372986]
[313.82962036 123.69282532]
[300.34548950 115.41703796]
[287.32281494 122.64613342]
[273.83868408 114.37034607]
[260.81604004 121.59944153]
[247.33190918 113.32364655]
[232.34358215 112.73179626]
[221.61250305 122.99724579]
[206.40377808 122.61053467]
[195.70919800 111.28518677]
[180.72087097 110.69332886]
[165.73255920 110.10147858]
[150.74423218 109.50962067]
[135.75592041 108.91776276]
[120.76760101 108.32591248]
[95.29833984 126.85556030]
[67.86567688 101.11415863]
[57.55611420 112.00970459]
[47.24655151 122.90525055]
[36.93698883 133.80079651]
[26.62742805 144.69633484]
[16.31786728 155.59188843]
[15.89184380 168.48944092]
[7.07244968 177.35278320]
[-5.02155447 177.81146240]
[-15.50183201 188.54289246]
[-25.98210907 199.27433777]
[-36.46238708 210.00578308]
[-46.94266129 220.73721313]
[-50.70473099 229.07197571]
[-57.67410278 231.55369568]
[-62.02127457 246.76596069]
[-76.50572205 250.23725891]
[-87.15410614 260.80191040]
[-97.80248260 271.36657715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 50]
[3 49]
[4 48]
[5 47]
[6 46]
[7 45]
[10 41]
[11 40]
[12 39]
[13 38]
[14 36]
[15 35]
[16 34]
[18 32]
[19 31]
[20 30]
[22 28]
[23 27]
[51 198]
[52 197]
[53 196]
[55 194]
[56 192]
[57 191]
[58 190]
[59 189]
[60 188]
[62 185]
[63 184]
[64 183]
[65 182]
[66 181]
[67 180]
[68 93]
[69 92]
[71 91]
[72 90]
[73 89]
[74 88]
[75 87]
[76 86]
[94 119]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[102 111]
[123 178]
[124 177]
[125 176]
[126 175]
[127 174]
[128 173]
[131 170]
[132 169]
[134 167]
[136 165]
[138 163]
[139 162]
[141 160]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
