%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:21:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCCACUCCAUCUGAGGGUGGCUGCGUGUCCACAUACGAGGGGACAGGGCUGAGGAUGAGGAGAACCCUGGGGACCCAGAAGACCGUGCCUUGCCUGGAAGUCCUGCCUGUAGGCCUGAAGGACUUGCCCUAACAGAGCCUCAACAACUACCUGGUGAUUCCUACUUCAGCCCCUUGGUGUGAGCAGCUUCUCAAC\
) } def
/len { sequence length } bind def

/coor [
[-81.05140686 660.98138428]
[-90.01847839 648.95678711]
[-92.46687317 634.15863037]
[-98.88354492 647.71691895]
[-105.30021667 661.27514648]
[-111.71688080 674.83343506]
[-118.13355255 688.39166260]
[-124.55022430 701.94995117]
[-130.96690369 715.50817871]
[-137.38357544 729.06640625]
[-143.69302368 742.67492676]
[-141.56138611 758.93493652]
[-154.73999023 768.69488525]
[-169.67181396 761.91455078]
[-170.99627686 745.56896973]
[-157.35087585 736.47308350]
[-157.44790649 729.07568359]
[-150.94181824 722.64978027]
[-144.52516174 709.09149170]
[-138.10848999 695.53326416]
[-131.69181824 681.97497559]
[-125.27513885 668.41674805]
[-118.85846710 654.85845947]
[-112.44180298 641.30023193]
[-106.02513123 627.74194336]
[-100.80838776 613.67834473]
[-96.83087921 599.21527100]
[-98.08967590 591.92510986]
[-92.67474365 584.55627441]
[-88.46941376 570.15783691]
[-84.26408386 555.75939941]
[-88.12293243 541.37335205]
[-76.82698059 530.29577637]
[-72.62165070 515.89733887]
[-68.41632080 501.49890137]
[-64.21099091 487.10046387]
[-60.00566483 472.70202637]
[-61.14921570 465.39288330]
[-55.61863327 458.11044312]
[-51.18653107 443.78018188]
[-46.75442886 429.44992065]
[-42.32233047 415.11965942]
[-37.89022827 400.78939819]
[-33.45812607 386.45913696]
[-47.22191620 392.42218018]
[-61.22400284 387.04244995]
[-67.45420074 373.39749146]
[-62.34840775 359.29321289]
[-48.82748795 352.79824829]
[-34.62636185 357.62814331]
[-27.86912918 371.01928711]
[-22.10154152 357.17242432]
[-16.33395386 343.32559204]
[-10.56636715 329.47875977]
[-4.79877996 315.63192749]
[0.96880782 301.78509521]
[6.73639536 287.93823242]
[2.00653553 278.86706543]
[3.07822347 268.47222900]
[9.83746815 260.21670532]
[20.23587799 256.98394775]
[26.43771553 243.32609558]
[32.63955307 229.66822815]
[38.84139252 216.01037598]
[45.04322815 202.35250854]
[42.39485931 185.00872803]
[57.44939041 174.41268921]
[63.43484879 160.65863037]
[69.42030334 146.90455627]
[65.28314209 135.53094482]
[70.16501617 124.01972961]
[81.94910431 118.76012421]
[88.15094757 105.10226440]
[89.09752655 90.13215637]
[84.66542816 75.80189514]
[80.23332977 61.47163010]
[75.80122375 47.14136505]
[71.14345551 32.88285446]
[66.26117706 18.69964790]
[61.37889862 4.51643991]
[56.49662018 -9.66676712]
[51.39104843 -23.77113342]
[46.06346130 -37.79314423]
[40.73587418 -51.81515503]
[25.90924644 -56.78558350]
[17.79045868 -70.15043640]
[20.21295357 -85.59924316]
[32.03290176 -95.83753967]
[47.66928864 -96.03112793]
[59.73908615 -86.08859253]
[62.54330826 -70.70449829]
[54.75788498 -57.14274597]
[60.08547211 -43.12073135]
[65.41306305 -29.09872246]
[69.33361053 -26.35581017]
[71.56719971 -21.11667633]
[70.67982483 -14.54904556]
[75.56210327 -0.36583826]
[80.44438171 13.81736851]
[85.32666016 28.00057602]
[89.15866089 30.86588669]
[91.22574615 36.17292023]
[90.13149261 42.70926285]
[94.56359100 57.03952789]
[98.99568939 71.36979675]
[103.42779541 85.70005798]
[110.59292603 87.91610718]
[115.02525330 73.58591461]
[129.35537720 78.01845551]
[124.92318726 92.34821320]
[132.08831787 94.56426239]
[143.83685303 85.23838806]
[148.61880493 77.44387817]
[155.84526062 75.85977936]
[167.73956299 66.72053528]
[179.63385010 57.58128738]
[191.52813721 48.44203949]
[203.34991455 39.20919037]
[215.09844971 29.88331604]
[226.84698486 20.55744171]
[233.20831299 3.28178239]
[250.64907837 1.37395072]
[262.24893188 -8.13622665]
[273.84878540 -17.64640427]
[275.15603638 -33.39653778]
[287.27124023 -43.54529953]
[303.00665283 -42.07161331]
[313.02676392 -29.84978676]
[311.38681030 -14.13081646]
[299.05972290 -4.24048615]
[283.35894775 -6.04655457]
[271.75912476 3.46362305]
[260.15927124 12.97380066]
[258.65353394 24.98246956]
[249.05877686 33.00001907]
[236.17286682 32.30597687]
[224.42433167 41.63185120]
[212.67579651 50.95772552]
[209.38818359 57.58514786]
[200.66738892 60.33633041]
[188.77310181 69.47557831]
[176.87879944 78.61482239]
[164.98451233 87.75407410]
[153.16273499 96.98692322]
[141.41419983 106.31279755]
[149.37115479 119.02840424]
[149.16749573 134.02702332]
[140.86819458 146.52189636]
[127.12197113 152.52531433]
[112.31586456 150.12132263]
[101.17520142 140.07713318]
[97.25548553 125.59832764]
[101.80880737 111.30410004]
[95.60697174 124.96195984]
[97.82526398 143.23745728]
[83.17436981 152.89001465]
[77.18891144 166.64408875]
[71.20345306 180.39814758]
[75.19282532 192.67060852]
[69.91685486 204.00660706]
[58.70109177 208.55433655]
[52.49925232 222.21220398]
[46.29741669 235.87007141]
[40.09557724 249.52793884]
[33.89374161 263.18579102]
[36.76549149 283.13217163]
[20.58323288 293.70584106]
[14.81564617 307.55267334]
[9.04805851 321.39950562]
[3.28047109 335.24633789]
[-2.48711634 349.09320068]
[-8.25470352 362.94003296]
[-14.02229118 376.78686523]
[-19.12786102 390.89123535]
[-23.55996323 405.22149658]
[-27.99206352 419.55175781]
[-32.42416763 433.88201904]
[-36.85626984 448.21228027]
[-41.28836823 462.54254150]
[-45.60721970 476.90734863]
[-49.81254959 491.30578613]
[-54.01787567 505.70425415]
[-58.22320557 520.10266113]
[-62.42853165 534.50115967]
[-58.87047577 549.91705322]
[-69.86563873 559.96472168]
[-74.07096863 574.36315918]
[-78.27629852 588.76159668]
[-82.36784363 603.19281006]
[-86.34535217 617.65582275]
[-74.83807373 608.03387451]
[-60.19831467 604.76623535]
[-45.69172287 608.58184814]
[-34.55424881 618.62951660]
[-29.27028847 632.66802979]
[-31.01852608 647.56585693]
[-39.40898514 659.99963379]
[-52.57003021 667.19598389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 25]
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[11 16]
[26 190]
[27 189]
[29 188]
[30 187]
[31 186]
[33 184]
[34 183]
[35 182]
[36 181]
[37 180]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 174]
[51 173]
[52 172]
[53 171]
[54 170]
[55 169]
[56 168]
[57 167]
[61 165]
[62 164]
[63 163]
[64 162]
[65 161]
[67 158]
[68 157]
[69 156]
[72 154]
[73 153]
[74 106]
[75 105]
[76 104]
[77 103]
[78 100]
[79 99]
[80 98]
[81 97]
[82 94]
[83 93]
[84 92]
[111 145]
[112 144]
[114 143]
[115 142]
[116 141]
[117 140]
[118 138]
[119 137]
[120 136]
[122 133]
[123 132]
[124 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
