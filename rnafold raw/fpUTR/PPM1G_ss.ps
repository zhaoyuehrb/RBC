%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGCUAAGGAAAUGACUGCCCGCAGCGCCUGGCCCCGCCGCGCAGGCCGGGCGGGGUCUGGAGCGGCGCCGUUUCCGCUUCCGCUCCCUCACAGCUCCCGUCCCGUUACCGCCUCCUGGCCGGCCUCGCGCCUUUCACCGGCACCUUGCGUCGGUCGCGCCGCGGGGCCUGCUCCUGCCGCGCGCACCCCCGGGGCUUCGGCUCCGGCACGGGUCGCGCCCAGCUUUCCUGCACCUGAGGCCGCCGGCCAGCC\
GCCGCC\
) } def
/len { sequence length } bind def

/coor [
[368.53802490 595.91961670]
[364.45343018 581.48645020]
[353.54281616 571.34704590]
[357.22985840 555.96148682]
[353.14526367 541.52832031]
[349.06066895 527.09515381]
[345.42965698 524.03710938]
[343.66247559 518.67761230]
[345.05563354 512.26678467]
[341.31832886 497.73983765]
[337.58102417 483.21289062]
[333.84368896 468.68591309]
[330.10638428 454.15896606]
[326.36904907 439.63201904]
[321.67388916 433.95526123]
[322.67514038 424.90844727]
[318.04837036 419.17581177]
[319.15802002 410.14166260]
[315.77014160 395.52926636]
[312.38223267 380.91687012]
[300.49725342 376.96841431]
[292.01248169 367.56253052]
[289.24334717 355.05441284]
[293.04949951 342.67153931]
[283.43835449 331.15521240]
[273.82717896 319.63891602]
[264.21600342 308.12258911]
[247.43110657 302.95486450]
[244.46983337 284.76559448]
[234.72128296 273.36535645]
[222.70909119 272.11877441]
[214.49320984 262.72854614]
[214.87582397 249.85676575]
[205.26466370 238.34045410]
[195.65350342 226.82412720]
[186.04234314 215.30781555]
[176.43118286 203.79150391]
[166.82000732 192.27517700]
[157.20884705 180.75886536]
[147.59768677 169.24253845]
[133.50242615 164.42875671]
[130.60038757 148.87597656]
[120.98922729 137.35966492]
[111.37806702 125.84334564]
[101.76689911 114.32702637]
[63.09757996 115.78214264]
[49.12199402 110.33393097]
[35.14640808 104.88572693]
[21.17082214 99.43751526]
[7.03821802 94.41063690]
[-7.23870468 89.80960846]
[-21.51562691 85.20858002]
[-35.79254913 80.60754395]
[-50.09680176 76.09219360]
[-64.42786407 71.66268158]
[-78.75893402 67.23316956]
[-93.08999634 62.80366135]
[-107.42105865 58.37414932]
[-122.89064026 61.69120026]
[-132.76550293 50.54057693]
[-147.09655762 46.11106491]
[-161.55395508 42.11308289]
[-176.12467957 38.55022049]
[-190.69540405 34.98735809]
[-205.26612854 31.42449570]
[-219.83685303 27.86163521]
[-234.40757751 24.29877281]
[-248.97830200 20.73591042]
[-266.54956055 26.29198074]
[-278.72879028 13.63872242]
[-293.34118652 10.25082684]
[-305.72909546 19.79407883]
[-321.35083008 19.09019089]
[-332.83026123 8.47151661]
[-334.74719238 -7.04813004]
[-326.19647217 -20.14084625]
[-311.21551514 -24.62465286]
[-296.87783813 -18.38243103]
[-289.95327759 -4.36157036]
[-275.34088135 -0.97367531]
[-264.93389893 -7.10079479]
[-252.74809265 -4.42070770]
[-245.41543579 6.16518641]
[-230.84471130 9.72804832]
[-216.27398682 13.29090977]
[-201.70326233 16.85377121]
[-187.13253784 20.41663361]
[-172.56181335 23.97949600]
[-157.99108887 27.54235649]
[-163.59452820 13.62828445]
[-156.31718445 0.51187634]
[-141.54592896 -2.09774446]
[-130.21485901 7.73113441]
[-130.71154785 22.72290993]
[-142.66705322 31.77999878]
[-128.33598328 36.20951080]
[-113.89146423 32.57563400]
[-102.99155426 44.04308319]
[-88.66048431 48.47259521]
[-74.32942200 52.90210724]
[-59.99835587 57.33161926]
[-45.66728973 61.76113129]
[-38.37199020 60.73704910]
[-31.19152069 66.33062744]
[-16.91459846 70.93165588]
[-2.63767505 75.53268433]
[11.63924789 80.13371277]
[7.05048323 65.85284424]
[15.25185299 53.29348373]
[30.17247963 51.75241089]
[40.76770782 62.37037277]
[39.19466400 77.28766632]
[26.61903191 85.46192932]
[40.59461975 90.91014099]
[54.57020569 96.35834503]
[68.54579163 101.80655670]
[75.11462402 98.18710327]
[75.41434479 83.19009399]
[88.25228119 90.94818878]
[94.82111359 87.32873535]
[97.68128967 72.60395050]
[100.54145813 57.87915802]
[103.40163422 43.15436935]
[106.26181030 28.42958069]
[109.12197876 13.70479107]
[111.98215485 -1.01999760]
[114.75399780 -15.76167011]
[104.53340149 -29.97740746]
[107.70946503 -46.85137558]
[121.83160400 -56.01012802]
[116.50885773 -70.90908813]
[126.26391602 -82.16466522]
[128.77017212 -96.95380402]
[131.27642822 -111.74295044]
[121.00807190 -123.53678894]
[120.77466583 -139.17262268]
[130.68643188 -151.26770020]
[146.06333923 -154.11108398]
[159.64486694 -146.36022949]
[165.01824951 -131.67483521]
[159.64633179 -116.98890686]
[146.06556702 -109.23668671]
[143.55931091 -94.44754791]
[141.05305481 -79.65840912]
[146.55506897 -65.81726837]
[136.62074280 -53.50386810]
[145.46855164 -44.16191101]
[147.35815430 -31.23807144]
[141.38009644 -19.40696335]
[129.51202393 -13.07826042]
[131.40141296 -5.95784521]
[126.70693970 1.84017551]
[123.84677124 16.56496429]
[120.98659515 31.28975296]
[118.12642670 46.01454163]
[115.26625061 60.73933029]
[112.40607452 75.46411896]
[109.54590607 90.18891144]
[113.28321838 104.71586609]
[122.89437866 116.23218536]
[132.50553894 127.74850464]
[142.11669922 139.26481628]
[156.89942932 144.90232849]
[159.11401367 159.63137817]
[168.72517395 171.14770508]
[178.33633423 182.66401672]
[187.94749451 194.18034363]
[197.55865479 205.69665527]
[207.16981506 217.21296692]
[216.78097534 228.72929382]
[226.39213562 240.24560547]
[243.83094788 246.20439148]
[246.12152100 263.61679077]
[255.87008667 275.01702881]
[268.62484741 276.79046631]
[276.51034546 286.45980835]
[275.73233032 298.51141357]
[285.34350586 310.02774048]
[294.95465088 321.54406738]
[304.56582642 333.06039429]
[326.20446777 334.57891846]
[338.39569092 351.93295288]
[353.28796387 353.72726440]
[368.18026733 355.52157593]
[383.07257080 357.31588745]
[397.96484375 359.11022949]
[406.82693481 357.03396606]
[413.02456665 361.01635742]
[427.89428711 362.98910522]
[442.76397705 364.96188354]
[457.63369751 366.93463135]
[472.53646851 368.63961792]
[487.46752930 370.07632446]
[502.39855957 371.51300049]
[517.32958984 372.94970703]
[532.26062012 374.38638306]
[547.19165039 375.82308960]
[562.12268066 377.25976562]
[576.81231689 369.96951294]
[590.31903076 379.27008057]
[588.74835205 395.59381104]
[573.71600342 402.14828491]
[560.68603516 392.19079590]
[545.75500488 390.75411987]
[530.82391357 389.31741333]
[515.89288330 387.88073730]
[500.96185303 386.44403076]
[486.03082275 385.00735474]
[471.09979248 383.57064819]
[468.17880249 385.49191284]
[464.19088745 386.11138916]
[459.75003052 384.94668579]
[455.66094971 381.80432129]
[440.79122925 379.83157349]
[425.92150879 377.85882568]
[411.05181885 375.88607788]
[396.17053223 374.00250244]
[381.27825928 372.20819092]
[366.38595581 370.41387939]
[351.49365234 368.61956787]
[336.60137939 366.82525635]
[332.60449219 372.90093994]
[326.99462891 377.52896118]
[330.38253784 392.14135742]
[333.77041626 406.75375366]
[337.24588013 421.34558105]
[340.89602661 435.89468384]
[344.63333130 450.42166138]
[348.37066650 464.94860840]
[352.10797119 479.47555542]
[355.84527588 494.00250244]
[359.58261108 508.52947998]
[363.49383545 523.01055908]
[367.57843018 537.44372559]
[371.66302490 551.87689209]
[382.86578369 563.04864502]
[378.88659668 577.40191650]
[382.97119141 591.83502197]
[393.81393433 598.78222656]
[396.93054199 610.86376953]
[391.18167114 621.48437500]
[395.09292603 635.96545410]
[399.00415039 650.44659424]
[410.07217407 661.75189209]
[405.92114258 676.05633545]
[409.83239746 690.53747559]
[415.07525635 697.97784424]
[413.70257568 705.21563721]
[417.43991089 719.74261475]
[429.29956055 731.06872559]
[425.15832520 746.93634033]
[409.27633667 751.02227783]
[397.99163818 739.12322998]
[402.91293335 723.47991943]
[399.17562866 708.95300293]
[395.35128784 694.44866943]
[391.44006348 679.96759033]
[380.65179443 669.69805908]
[384.52304077 654.35778809]
[380.61181641 639.87670898]
[376.70059204 625.39562988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 238]
[2 237]
[4 235]
[5 234]
[6 233]
[9 232]
[10 231]
[11 230]
[12 229]
[13 228]
[14 227]
[16 226]
[18 225]
[19 224]
[20 223]
[24 180]
[25 179]
[26 178]
[27 177]
[29 174]
[30 173]
[33 171]
[34 170]
[35 169]
[36 168]
[37 167]
[38 166]
[39 165]
[40 164]
[42 162]
[43 161]
[44 160]
[45 159]
[46 116]
[47 115]
[48 114]
[49 113]
[50 107]
[51 106]
[52 105]
[53 104]
[54 102]
[55 101]
[56 100]
[57 99]
[58 98]
[60 96]
[61 95]
[62 89]
[63 88]
[64 87]
[65 86]
[66 85]
[67 84]
[68 83]
[70 80]
[71 79]
[120 158]
[121 157]
[122 156]
[123 155]
[124 154]
[125 153]
[126 152]
[127 150]
[130 146]
[132 144]
[133 143]
[134 142]
[182 221]
[183 220]
[184 219]
[185 218]
[186 217]
[188 216]
[189 215]
[190 214]
[191 213]
[192 209]
[193 208]
[194 207]
[195 206]
[196 205]
[197 204]
[198 203]
[241 261]
[242 260]
[243 259]
[245 257]
[246 256]
[248 255]
[249 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
