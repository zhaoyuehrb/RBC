%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGACCAGGCUUCUCAGGAGAAACCCCGGGAGAUUCCACACUGUCAGCCCCUUCUCCAAGAUCAGUACGUGGGCCUGACUCCUCCUCGGUGCCCAGCUCAGUAUUGGCAACUAGGAGAGUAGUGAGAUUGAACUUGGCCUUGAGGAACAGCUGCCUCUAGAGUUGGAUCAGACAAGGGUGCUGAGAGCCGGGACUCACAACCAAAGGAGAA\
) } def
/len { sequence length } bind def

/coor [
[37.28416061 592.76037598]
[28.18308449 604.97064209]
[14.89930439 612.41784668]
[-0.26568532 613.81176758]
[-14.68445778 608.91088867]
[-25.85887337 598.56427002]
[-31.85289764 584.56457520]
[-31.62802887 569.33728027]
[-25.22322845 555.52069092]
[-13.74816418 545.50854492]
[0.80903763 541.03558350]
[2.57484484 526.13989258]
[4.34065199 511.24417114]
[6.10645962 496.34844971]
[7.87226677 481.45275879]
[-1.51973677 469.94946289]
[0.05884799 454.81796265]
[12.18824577 445.04473877]
[13.95405293 430.14904785]
[-0.76121479 422.35415649]
[-11.37672329 409.47640991]
[-16.24184990 393.47378540]
[-14.58307076 376.79342651]
[-6.62679005 361.99755859]
[6.43107939 351.36981201]
[22.60479927 346.56277466]
[23.93050003 331.62145996]
[25.25620270 316.68017578]
[26.58190346 301.73886108]
[27.90760612 286.79757690]
[18.40054321 298.39996338]
[4.62652397 304.33935547]
[-10.33662605 303.28857422]
[-23.14536285 295.48242188]
[-30.93755531 282.66516113]
[-31.97202301 267.70086670]
[-26.01761055 253.93334961]
[-14.40484524 244.43893433]
[0.27138278 241.33921814]
[14.73164463 245.32679749]
[25.74477196 255.51065063]
[30.85002708 269.61676025]
[34.57180405 255.08580017]
[30.23432159 240.83674622]
[41.15375137 229.38787842]
[44.87552643 214.85693359]
[48.59730530 200.32598877]
[52.31908035 185.79504395]
[56.04085541 171.26409912]
[59.65537262 156.70610046]
[63.16242981 142.12184143]
[66.66948700 127.53758240]
[70.17654419 112.95333099]
[67.53551483 98.18766022]
[59.19047165 85.72330475]
[50.84542465 73.25894928]
[42.50037766 60.79459000]
[34.15533066 48.33023453]
[20.04842567 41.16742325]
[19.39714622 26.28706551]
[11.05209827 13.82270813]
[-7.41918087 5.74716377]
[-7.85887194 -13.58487511]
[-16.56791496 -25.79767799]
[-25.27695847 -38.01048279]
[-33.98600388 -50.22328568]
[-42.69504547 -62.43608856]
[-51.40408707 -74.64888763]
[-60.11313248 -86.86169434]
[-69.09021759 -98.87884521]
[-78.41783142 -110.62599945]
[-87.83182526 -122.30404663]
[-97.24581909 -133.98208618]
[-106.65981293 -145.66014099]
[-116.07380676 -157.33818054]
[-125.57366180 -168.94648743]
[-135.15885925 -180.48442078]
[-144.74406433 -192.02233887]
[-154.32926941 -203.56027222]
[-169.96650696 -203.45622253]
[-181.97918701 -213.46769714]
[-184.69528198 -228.86759949]
[-176.83232117 -242.38455200]
[-162.10298157 -247.63627625]
[-147.46200562 -242.14306641]
[-139.82238770 -228.49864197]
[-142.79135132 -213.14547729]
[-133.20614624 -201.60754395]
[-123.62093353 -190.06962585]
[-114.03572845 -178.53169250]
[-107.34458160 -175.39588928]
[-104.39575958 -166.75216675]
[-94.98176575 -155.07412720]
[-85.56777191 -143.39608765]
[-76.15377808 -131.71803284]
[-66.73978424 -120.03999329]
[-60.09561157 -116.80583954]
[-57.27459717 -108.11957550]
[-53.83950424 -107.33069611]
[-50.61552811 -104.83969116]
[-48.39810181 -100.76376343]
[-47.90032959 -95.57073975]
[-39.19128418 -83.35793304]
[-30.48224258 -71.14513397]
[-21.77319908 -58.93232727]
[-13.06415558 -46.71952438]
[-4.35511208 -34.50672150]
[4.35393143 -22.29391861]
[14.54097080 -21.51990891]
[22.79418373 -15.13293076]
[26.24142265 -5.05046177]
[23.51645470 5.47766113]
[31.86150169 17.94201851]
[45.37151337 24.21329308]
[46.61968613 39.98518753]
[54.96473312 52.44954300]
[63.30978012 64.91390228]
[71.65483093 77.37825775]
[79.99987793 89.84261322]
[87.55536652 82.71536255]
[97.04341125 80.05246735]
[106.16222382 81.99283600]
[112.92196655 87.61422729]
[127.10353851 82.72722626]
[134.07977295 68.79991150]
[148.53152466 64.04581451]
[161.76609802 70.78241730]
[175.94767761 65.89540863]
[190.12925720 61.00839996]
[204.31082153 56.12139130]
[214.83721924 44.31014252]
[229.39089966 47.47873306]
[243.57247925 42.59172440]
[257.75405884 37.70471573]
[271.93563843 32.81770706]
[286.11721802 27.93069839]
[287.66207886 18.35588455]
[292.55798340 10.05080509]
[300.09637451 4.13437748]
[309.21615601 1.38580096]
[318.65298462 2.14211702]
[327.11447144 6.25746489]
[333.45724487 13.12887383]
[347.90231323 9.08655357]
[362.34735107 5.04423380]
[376.79241943 1.00191355]
[382.06619263 -13.59146881]
[394.92941284 -22.27001953]
[410.43591309 -21.69666100]
[422.62307739 -12.09185982]
[426.80474854 2.85114193]
[421.37295532 17.38645554]
[408.41635132 25.92495346]
[392.91702271 25.18341446]
[380.83474731 15.44696999]
[366.38967896 19.48929024]
[351.94464111 23.53161049]
[337.49957275 27.57393074]
[329.00561523 46.16683197]
[309.27117920 52.53102112]
[291.00421143 42.11227798]
[276.82263184 46.99928665]
[262.64105225 51.88629532]
[248.45948792 56.77330399]
[234.27790833 61.66031265]
[224.76586914 73.12200165]
[209.19783020 70.30297089]
[195.01626587 75.18997955]
[180.83468628 80.07698822]
[166.65310669 84.96399689]
[160.37820435 98.42360687]
[146.06568909 103.58174896]
[131.99055481 96.90879822]
[117.80897522 101.79580688]
[107.13589478 118.86065674]
[84.76080322 116.46038818]
[81.25374603 131.04464722]
[77.74668884 145.62890625]
[74.23963165 160.21315002]
[75.27586365 169.28704834]
[70.57180023 174.98587036]
[66.85002899 189.51681519]
[63.12825012 204.04776001]
[59.40647125 218.57870483]
[55.68469620 233.10964966]
[59.75597382 248.39805603]
[49.10274887 258.80758667]
[45.38097382 273.33853149]
[42.84890747 288.12326050]
[41.52320480 303.06457520]
[40.19750595 318.00585938]
[38.87180328 332.94717407]
[37.54610062 347.88848877]
[49.78836060 353.43310547]
[59.70987701 362.46459961]
[66.35477448 374.09381104]
[69.08871460 387.18234253]
[67.65943909 400.45382690]
[62.21996689 412.61853027]
[53.31234360 422.49859619]
[41.81367493 429.14212036]
[28.84975433 431.91485596]
[27.08394623 446.81054688]
[36.59215164 459.14877319]
[34.58917618 474.22998047]
[22.76796913 483.21856689]
[21.00216103 498.11425781]
[19.23635292 513.00994873]
[17.47054672 527.90570068]
[15.70473957 542.80139160]
[28.81266403 550.55395508]
[37.62880707 562.97149658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 210]
[12 209]
[13 208]
[14 207]
[15 206]
[18 203]
[19 202]
[26 193]
[27 192]
[28 191]
[29 190]
[30 189]
[42 188]
[43 187]
[45 185]
[46 184]
[47 183]
[48 182]
[49 181]
[50 179]
[51 178]
[52 177]
[53 176]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
[60 113]
[61 112]
[63 108]
[64 107]
[65 106]
[66 105]
[67 104]
[68 103]
[69 102]
[70 98]
[71 96]
[72 95]
[73 94]
[74 93]
[75 92]
[76 90]
[77 89]
[78 88]
[79 87]
[123 174]
[124 173]
[127 170]
[128 169]
[129 168]
[130 167]
[132 165]
[133 164]
[134 163]
[135 162]
[136 161]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
