%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:22:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCGCAGGGGGCGUGGCCUAGCGGUCCCGCCCCCGGGGCGCGCGCGCGCAUUGGCUGUGCGGGGUGCGGGCGCGCGGGCGGCGCUUUGAACCGGGCGCGGGGCGCGGGGCGCGGGGCGCUGCGGCCGGUACACGCCGGGGUAGGGCCGGGGUCGGGUUGUGGUCGGGCCGGGAUUGGGCUCUCCUGGGCC\
) } def
/len { sequence length } bind def

/coor [
[115.99063110 186.10650635]
[108.46345520 199.08116150]
[94.86442566 205.41096497]
[80.09049225 202.81658936]
[69.46167755 192.23223877]
[66.80536652 177.46931458]
[73.07814789 163.84379578]
[76.11088562 149.15357971]
[66.40653992 160.59149170]
[56.70219803 172.02940369]
[46.99785614 183.46731567]
[37.29351425 194.90521240]
[27.58917236 206.34312439]
[17.88482857 217.78103638]
[14.85662460 233.30973816]
[0.72273606 238.00892639]
[-8.98160648 249.44683838]
[-18.68594933 260.88473511]
[-28.39029121 272.32266235]
[-30.79207230 288.54498291]
[-46.13933563 294.32369995]
[-58.64413071 283.71414185]
[-55.44259644 267.63055420]
[-39.82819748 262.61831665]
[-30.12385750 251.18040466]
[-20.41951370 239.74249268]
[-10.71517181 228.30459595]
[-8.38108730 213.59400940]
[6.44692135 208.07669067]
[16.15126419 196.63877869]
[25.85560608 185.20088196]
[35.55994797 173.76296997]
[45.26428986 162.32505798]
[54.96863174 150.88714600]
[64.67297363 139.44924927]
[61.26683044 124.84108734]
[45.52774811 126.45101929]
[36.92804718 114.28984070]
[21.18896484 115.89977264]
[12.58926296 103.73858643]
[-1.17315459 97.77236176]
[-14.93557167 91.80612946]
[-30.67465401 93.41606903]
[-39.27435684 81.25488281]
[-53.03677368 75.28865814]
[-66.79919434 69.32242584]
[-80.56160736 63.35620117]
[-94.32402802 57.38997269]
[-108.08644104 51.42374802]
[-121.84886169 45.45751953]
[-134.19508362 54.48626328]
[-149.30311584 56.11225891]
[-163.10482788 49.99839020]
[-171.93411255 37.87817383]
[-173.50068665 23.06562996]
[-187.26310730 17.09940147]
[-201.02552795 11.13317490]
[-215.62982178 17.17386627]
[-230.19581604 11.04139137]
[-236.08177185 -3.62595868]
[-229.79563904 -18.12630653]
[-215.06687927 -23.85685349]
[-200.63380432 -17.41776657]
[-195.05929565 -2.62924218]
[-181.29687500 3.33698487]
[-167.53445435 9.30321217]
[-155.65242004 0.32086173]
[-140.77067566 -1.52024496]
[-126.87364197 4.37372780]
[-117.73265839 16.51206398]
[-115.88263702 31.69510269]
[-102.12021637 37.66132736]
[-88.35779572 43.62755585]
[-74.59538269 49.59378433]
[-60.83296204 55.56000900]
[-47.07054520 61.52623749]
[-33.30812836 67.49246216]
[-18.55342674 65.45578766]
[-8.96934509 78.04371643]
[4.79307270 84.00994110]
[18.55549049 89.97616577]
[33.31019211 87.93949127]
[42.89427567 100.52742004]
[57.64897537 98.49074554]
[67.23305511 111.07866669]
[70.40597534 88.63827515]
[85.89434814 74.87819672]
[104.66590118 74.50144196]
[111.51945496 61.15869904]
[110.94235229 45.34802246]
[123.63994598 37.56211090]
[130.49349976 24.21936989]
[137.34706116 10.87662888]
[144.20062256 -2.46611238]
[151.05418396 -15.80885315]
[150.47708130 -31.61953163]
[163.17466736 -39.40544128]
[170.02822876 -52.74818420]
[176.88179016 -66.09092712]
[183.73535156 -79.43366241]
[190.58889771 -92.77640533]
[190.01181030 -108.58708191]
[202.70939636 -116.37299347]
[209.56295776 -129.71572876]
[208.98585510 -145.52641296]
[221.68344116 -153.31231689]
[221.10635376 -169.12300110]
[233.80393982 -176.90890503]
[232.45927429 -193.25283813]
[246.09341431 -202.36560059]
[260.68072510 -194.87275696]
[261.21502686 -178.48231506]
[247.14668274 -170.05535889]
[248.21398926 -155.19903564]
[235.02618408 -146.45877075]
[236.09350586 -131.60244751]
[222.90570068 -122.86217499]
[216.05213928 -109.51943970]
[217.11944580 -94.66312408]
[203.93164062 -85.92285156]
[197.07809448 -72.58010864]
[190.22453308 -59.23736572]
[183.37097168 -45.89462280]
[176.51741028 -32.55188370]
[177.58473206 -17.69556808]
[164.39692688 -8.95529556]
[157.54336548 4.38744593]
[150.68980408 17.73018646]
[143.83624268 31.07292747]
[136.98268127 44.41566849]
[138.05000305 59.27198410]
[124.86219788 68.01226044]
[118.00863647 81.35499573]
[129.05378723 108.44248199]
[106.95489502 133.88272095]
[119.28891754 142.41921997]
[131.62294006 150.95571899]
[147.37368774 152.44726562]
[153.43560791 166.05250549]
[165.76963806 174.58900452]
[178.10366821 183.12550354]
[186.95652771 185.44190979]
[190.56809998 191.90394592]
[202.76080322 200.64111328]
[214.95349121 209.37828064]
[227.14619446 218.11544800]
[239.33889771 226.85261536]
[251.53160095 235.58978271]
[267.25582886 237.33883667]
[273.09432983 251.04142761]
[285.28704834 259.77859497]
[303.64257812 261.15029907]
[310.27038574 277.39218140]
[322.60440063 285.92868042]
[334.93844604 294.46517944]
[347.27246094 303.00167847]
[363.02319336 304.49322510]
[369.08514404 318.09844971]
[381.41915894 326.63497925]
[393.75317383 335.17147827]
[410.13278198 335.97161865]
[417.38796997 350.67855835]
[408.05523682 364.16305542]
[391.73526001 362.55340576]
[385.21667480 347.50549316]
[372.88265991 338.96899414]
[360.54864502 330.43249512]
[345.68011475 329.55151367]
[338.73596191 315.33572388]
[326.40194702 306.79922485]
[314.06790161 298.26269531]
[301.73388672 289.72619629]
[289.77020264 291.58120728]
[279.42153931 284.55651855]
[276.54986572 271.97128296]
[264.35717773 263.23413086]
[249.50505066 262.11001587]
[242.79443359 247.78247070]
[230.60173035 239.04531860]
[218.40902710 230.30815125]
[206.21633911 221.57098389]
[194.02363586 212.83381653]
[181.83093262 204.09664917]
[169.56715393 195.45953369]
[157.23313904 186.92301941]
[144.89910889 178.38652039]
[130.03057861 177.50556946]
[123.08644104 163.28974915]
[110.75241852 154.75325012]
[98.41839600 146.21675110]
[105.14990234 159.62147522]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 35]
[9 34]
[10 33]
[11 32]
[12 31]
[13 30]
[14 29]
[16 27]
[17 26]
[18 25]
[19 24]
[36 85]
[38 83]
[40 81]
[41 80]
[42 79]
[44 77]
[45 76]
[46 75]
[47 74]
[48 73]
[49 72]
[50 71]
[55 66]
[56 65]
[57 64]
[88 133]
[89 132]
[91 130]
[92 129]
[93 128]
[94 127]
[95 126]
[97 124]
[98 123]
[99 122]
[100 121]
[101 120]
[103 118]
[104 117]
[106 115]
[108 113]
[135 190]
[136 189]
[137 188]
[139 186]
[140 185]
[141 184]
[143 183]
[144 182]
[145 181]
[146 180]
[147 179]
[148 178]
[150 176]
[151 175]
[153 172]
[154 171]
[155 170]
[156 169]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
