%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 20:00:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUUUGCAAACUAUAGUAUAAUAUCACUCUAAUGAUAUUGACUCUUCUGUGUUCUGUUUUUAUAUAUUUCCCUAGUUUUGCUUGUAUUUACUUGUUGCAUGUGUGUAAGCCCUGAGUUUUAUAGGUUUGAUUUGUGGAUCUGUUGUGCGGUUGAGCCCUCAUUCAUUCACCUGCUUCUCUGCAGUUGGACACACAAGCAAUUGCCUUUGCACGAACAGGGACAAUCUUAAUUUCUGUUUAAGAUGAGAAAAU\
) } def
/len { sequence length } bind def

/coor [
[-126.77442169 584.56445312]
[-119.20417023 571.61639404]
[-115.60791779 557.05383301]
[-112.01166534 542.49133301]
[-108.41541290 527.92883301]
[-104.81916046 513.36627197]
[-112.24985504 512.34906006]
[-122.38750458 523.40472412]
[-132.52516174 534.46038818]
[-126.17664337 548.24340820]
[-125.59033966 563.36627197]
[-130.82446289 577.52313232]
[-141.05220032 588.56762695]
[-154.69216919 594.83789062]
[-169.65284729 595.40667725]
[-183.65327454 590.21850586]
[-193.79092407 601.27416992]
[-203.92857361 612.32983398]
[-207.40847778 620.74493408]
[-214.26063538 623.45855713]
[-224.53425598 634.38800049]
[-234.80786133 645.31744385]
[-245.08148193 656.24688721]
[-255.35510254 667.17639160]
[-265.62872314 678.10583496]
[-275.90234375 689.03527832]
[-286.17593384 699.96472168]
[-285.43688965 715.75170898]
[-296.13900757 727.38098145]
[-311.93295288 727.95306396]
[-323.44842529 717.12860107]
[-323.85351562 701.32952881]
[-312.90789795 689.92913818]
[-297.10537720 689.69110107]
[-286.83178711 678.76165771]
[-276.55816650 667.83221436]
[-266.28454590 656.90277100]
[-256.01092529 645.97332764]
[-245.73731995 635.04382324]
[-235.46369934 624.11437988]
[-225.19009399 613.18493652]
[-214.98425293 602.19219971]
[-204.84660339 591.13647461]
[-194.70895386 580.08081055]
[-201.08834839 566.58148193]
[-201.81535339 551.62762451]
[-196.74806213 537.49658203]
[-186.62933350 526.35211182]
[-172.97807312 519.91345215]
[-157.86120605 519.18988037]
[-143.58084106 524.32275391]
[-133.44319153 513.26708984]
[-123.30553436 502.21139526]
[-136.18005371 509.90856934]
[-150.88287354 512.87963867]
[-165.73596191 510.78540039]
[-179.04414368 503.86495972]
[-189.28854370 492.90814209]
[-195.29998779 479.16540527]
[-196.39237976 464.20523071]
[-192.44104004 449.73504639]
[-183.89694214 437.40628052]
[-171.73522949 428.62603760]
[-157.34390259 424.39639282]
[-142.36544800 425.20010376]
[-128.50935364 430.94543457]
[-117.35702515 440.97665405]
[-110.18125916 454.14892578]
[-107.80103302 468.95886230]
[-110.48886108 483.71859741]
[-103.69554138 470.34509277]
[-96.90222168 456.97158813]
[-90.10890198 443.59808350]
[-83.31557465 430.22457886]
[-83.08895111 422.85812378]
[-76.35463715 416.72845459]
[-69.39643097 403.43997192]
[-62.43822098 390.15151978]
[-55.48001480 376.86303711]
[-48.60411835 363.53179932]
[-41.81079483 350.15829468]
[-35.01747513 336.78479004]
[-41.72296906 319.72967529]
[-33.66900635 302.91265869]
[-15.56624794 297.25469971]
[-9.10579109 283.71725464]
[-2.64533353 270.17980957]
[-16.68519783 275.46017456]
[-30.86885452 270.57919312]
[-38.68610764 257.77722168]
[-36.54889679 242.93026733]
[-25.43818283 232.85295105]
[-10.45370579 232.17071533]
[1.52677000 241.19670105]
[5.00426960 255.78822327]
[12.61112785 242.86013794]
[20.21798515 229.93203735]
[27.82484436 217.00393677]
[35.43170166 204.07583618]
[35.21743393 189.18276978]
[48.88440323 181.21253967]
[56.49126053 168.28445435]
[64.09811401 155.35635376]
[71.70497894 142.42825317]
[79.31183624 129.50015259]
[86.91869354 116.57205963]
[94.52555084 103.64395905]
[88.95750427 104.06045532]
[83.16236877 101.98666382]
[78.00913239 97.40472412]
[74.34705353 90.56635284]
[72.92793274 81.97899628]
[74.33454895 72.37072754]
[78.92092896 62.63616943]
[82.95234680 48.18806458]
[86.98375702 33.73996353]
[91.01517487 19.29185867]
[78.09504700 26.91224670]
[63.28253555 24.54803467]
[53.37647247 13.28437805]
[52.92367172 -1.70878577]
[62.13196564 -13.54970455]
[76.77481079 -16.80348206]
[90.13124847 -9.97665882]
[96.07078552 3.79751039]
[101.33644867 -10.24787426]
[106.60210419 -24.29325867]
[111.86776733 -38.33864212]
[117.13342285 -52.38402939]
[122.39908600 -66.42941284]
[127.66474152 -80.47480011]
[132.93040466 -94.52017975]
[138.19606018 -108.56556702]
[138.27520752 -117.67148590]
[143.61468506 -122.75143433]
[149.05364990 -136.73062134]
[154.49263000 -150.70979309]
[152.28579712 -166.37634277]
[164.11141968 -175.43193054]
[158.99485779 -190.63720703]
[167.81340027 -204.03916931]
[183.80224609 -205.35699463]
[194.69610596 -193.57974243]
[192.13813782 -177.74192810]
[178.09060669 -169.99296570]
[180.68646240 -155.32630920]
[168.47180176 -145.27082825]
[163.03283691 -131.29164124]
[157.59387207 -117.31246185]
[152.24143982 -103.29991150]
[146.97578430 -89.25452423]
[141.71012878 -75.20913696]
[136.44447327 -61.16375351]
[131.17880249 -47.11837006]
[125.91315460 -33.07298279]
[120.64749146 -19.02759933]
[115.38183594 -4.98221493]
[110.11617279 9.06316948]
[105.46327972 23.32327271]
[101.43186188 37.77137756]
[97.40044403 52.21947861]
[93.36903381 66.66758728]
[98.73751831 71.90488434]
[105.38157654 58.45659637]
[120.22478485 60.61974335]
[122.75428772 75.40493011]
[109.47449493 82.37949371]
[114.84297943 87.61679840]
[129.18695068 83.22924805]
[143.53091431 78.84170532]
[154.46435547 67.40620422]
[168.89817810 71.08234406]
[183.24214172 66.69479370]
[197.58610535 62.30724716]
[211.93008423 57.91970062]
[219.12557983 43.84844208]
[234.18894958 39.06611252]
[248.18333435 46.40998459]
[252.80613708 61.52306366]
[245.31472778 75.43903351]
[230.15361023 79.90179443]
[216.31762695 72.26367188]
[201.97366333 76.65121460]
[187.62968445 81.03876495]
[173.28572083 85.42630768]
[163.37826538 96.54798126]
[147.91847229 93.18566895]
[133.57449341 97.57321930]
[119.23052979 101.96076202]
[107.45364380 111.25081635]
[99.84678650 124.17891693]
[92.23992920 137.10700989]
[84.63307190 150.03511047]
[77.02621460 162.96321106]
[69.41935730 175.89131165]
[61.81250000 188.81939697]
[61.48267365 204.63717651]
[48.35979843 211.68269348]
[40.75294113 224.61079407]
[33.14608383 237.53889465]
[25.53922462 250.46699524]
[17.93236732 263.39508057]
[10.89211369 276.64025879]
[4.43165684 290.17770386]
[-2.02880025 303.71514893]
[4.02895403 313.90634155]
[4.42399120 325.63568115]
[-0.82619810 335.99777222]
[-10.32003593 342.48150635]
[-21.64396477 343.57809448]
[-28.43728638 356.95159912]
[-35.23060608 370.32513428]
[-36.32080460 379.36587524]
[-42.19154739 383.82125854]
[-49.14975357 397.10971069]
[-56.10796356 410.39819336]
[-63.06616974 423.68664551]
[-69.94207001 437.01788330]
[-76.73538971 450.39138794]
[-83.52870941 463.76492310]
[-90.32202911 477.13842773]
[-97.11535645 490.51193237]
[-86.92350769 491.98223877]
[-76.93106079 498.40881348]
[-69.15357208 509.62475586]
[-62.36025238 522.99822998]
[-55.56692886 536.37176514]
[-48.77360916 549.74530029]
[-41.98028564 563.11877441]
[-35.18696594 576.49230957]
[-28.39364433 589.86578369]
[-13.12131405 593.22583008]
[-3.62284613 605.64813232]
[-4.38312578 621.26721191]
[-15.04317284 632.70825195]
[-30.56963730 634.56915283]
[-43.63140106 625.97125244]
[-48.06109619 610.97418213]
[-41.76715469 596.65911865]
[-48.56047440 583.28564453]
[-55.35379791 569.91210938]
[-62.14711761 556.53857422]
[-68.94043732 543.16510010]
[-75.73376465 529.79156494]
[-82.52708435 516.41809082]
[-89.95777893 515.40081787]
[-90.40767670 530.39404297]
[-90.85758209 545.38732910]
[-91.30747986 560.38055420]
[-91.75738525 575.37384033]
[-87.94580078 589.88146973]
[-95.51067352 602.83416748]
[-110.01927185 606.64215088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 53]
[8 52]
[9 51]
[16 44]
[17 43]
[18 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[27 34]
[70 222]
[71 221]
[72 220]
[73 219]
[74 218]
[76 217]
[77 216]
[78 215]
[79 214]
[80 212]
[81 211]
[82 210]
[85 205]
[86 204]
[87 203]
[95 202]
[96 201]
[97 200]
[98 199]
[99 198]
[101 196]
[102 195]
[103 194]
[104 193]
[105 192]
[106 191]
[107 190]
[114 162]
[115 161]
[116 160]
[117 159]
[125 158]
[126 157]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[132 151]
[133 150]
[135 149]
[136 148]
[137 147]
[139 145]
[168 189]
[169 188]
[170 187]
[172 185]
[173 184]
[174 183]
[175 182]
[225 245]
[226 244]
[227 243]
[228 242]
[229 241]
[230 240]
[231 239]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
