%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:37:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCUCUCCACCAAGGAGGGACUGGGCCAGAGUCCUCGCGAGGGCACGCGGCGUGGUCCCCAGAGCUAGGCCGGAGCGCGGGCCGCUGACGCCACUGUCGGGUGAGGCUCGGUGCAUCCAUGGGGAGCCGCCCUCCGUGCGGGGCGACCUCGUCUGCGCGGCGGGCGUGCCAGUUCCCCGCACCC\
) } def
/len { sequence length } bind def

/coor [
[89.39397430 105.25292206]
[93.12776184 102.05798340]
[81.11274719 93.07804108]
[69.09773254 84.09809875]
[57.08271408 75.11815643]
[45.06769562 66.13821411]
[33.05268097 57.15826797]
[21.03766441 48.17832565]
[9.02264786 39.19838333]
[-2.99236870 30.21843910]
[-12.09941101 32.80763626]
[-21.23885727 30.93082237]
[-28.37452507 25.13582993]
[-31.97669601 16.82861328]
[-31.34922409 7.93392086]
[-42.89399338 -1.64304721]
[-54.43875885 -11.22001553]
[-70.00006866 -14.07591343]
[-74.85564423 -28.15684700]
[-90.41695404 -31.01274490]
[-95.27252197 -45.09368134]
[-106.81729126 -54.67065048]
[-118.36206055 -64.24761963]
[-129.90682983 -73.82458496]
[-141.45159912 -83.40155029]
[-152.99636841 -92.97852325]
[-164.54113770 -102.55548859]
[-176.08590698 -112.13245392]
[-186.84495544 -106.60025787]
[-199.59480286 -106.42119598]
[-211.68667603 -112.20655060]
[-220.35873413 -123.27162170]
[-234.81433105 -119.26711273]
[-249.26991272 -115.26260376]
[-263.72549438 -111.25810242]
[-278.18109131 -107.25359344]
[-289.28659058 -95.18713379]
[-305.22790527 -99.03512573]
[-309.60592651 -114.83907318]
[-297.91696167 -126.34123993]
[-282.18557739 -121.70917511]
[-267.73001099 -125.71368408]
[-253.27441406 -129.71818542]
[-238.81883240 -133.72270203]
[-224.36325073 -137.72720337]
[-219.39198303 -151.87947083]
[-228.16772461 -164.04443359]
[-242.51643372 -170.70964050]
[-243.68757629 -185.55813599]
[-252.46330261 -197.72311401]
[-261.23904419 -209.88807678]
[-270.01477051 -222.05303955]
[-278.89294434 -234.14346313]
[-287.87286377 -246.15849304]
[-296.85281372 -258.17349243]
[-305.83276367 -270.18850708]
[-314.81271362 -282.20352173]
[-326.11044312 -280.05215454]
[-337.34246826 -282.27255249]
[-346.88577271 -288.50469971]
[-353.37609863 -297.81173706]
[-355.90283203 -308.82070923]
[-354.13668823 -319.92495728]
[-348.37194824 -329.51861572]
[-356.73181152 -341.97305298]
[-365.09167480 -354.42745972]
[-370.88024902 -357.69430542]
[-373.70932007 -362.65487671]
[-373.51525879 -367.44671631]
[-381.44970703 -380.17636108]
[-389.38418579 -392.90603638]
[-397.31863403 -405.63571167]
[-411.18463135 -413.25439453]
[-411.35070801 -428.14807129]
[-426.06829834 -435.38162231]
[-426.89251709 -451.76004028]
[-412.97546387 -460.43460083]
[-398.63381958 -452.48165894]
[-398.62103271 -436.08251953]
[-385.32254028 -429.37435913]
[-384.58895874 -413.57015991]
[-376.65451050 -400.84048462]
[-368.72006226 -388.11083984]
[-360.78558350 -375.38116455]
[-352.63726807 -362.78732300]
[-344.27740479 -350.33291626]
[-335.91754150 -337.87847900]
[-317.25442505 -338.28341675]
[-301.98135376 -327.29150391]
[-296.34967041 -309.17990112]
[-302.79769897 -291.18347168]
[-293.81774902 -279.16845703]
[-284.83779907 -267.15344238]
[-275.85784912 -255.13842773]
[-266.87792969 -243.12341309]
[-260.34085083 -239.64024353]
[-257.84979248 -230.82878113]
[-249.07406616 -218.66381836]
[-240.29833984 -206.49884033]
[-231.52259827 -194.33387756]
[-217.80158997 -188.53878784]
[-216.00274658 -172.82017517]
[-207.22702026 -160.65519714]
[-182.04280090 -162.35208130]
[-165.23210144 -145.70980835]
[-166.50892639 -123.67722321]
[-154.96415710 -114.10025787]
[-143.41940308 -104.52329254]
[-131.87463379 -94.94631958]
[-120.32985687 -85.36935425]
[-108.78508759 -75.79238892]
[-97.24031830 -66.21541595]
[-85.69555664 -56.63845062]
[-70.95999908 -54.46755981]
[-65.27867126 -39.70161819]
[-50.54312134 -37.53072739]
[-44.86179352 -22.76478386]
[-33.31702423 -13.18781567]
[-21.77225494 -3.61084771]
[-1.21064222 -1.96571457]
[5.98757458 18.20342255]
[18.00259018 27.18336678]
[30.01760674 36.16331100]
[42.03262329 45.14325333]
[54.04764175 54.12319565]
[66.06266022 63.10313797]
[78.07767487 72.08308411]
[90.09268951 81.06302643]
[102.10770416 90.04296875]
[115.51850891 96.76237488]
[129.90438843 101.01045990]
[144.29028320 105.25853729]
[158.67617798 109.50662231]
[174.10260010 105.99437714]
[184.11756897 117.01934052]
[198.50344849 121.26742554]
[212.88934326 125.51551056]
[227.27522278 129.76359558]
[241.66111755 134.01167297]
[256.04699707 138.25975037]
[270.43289185 142.50784302]
[284.81878662 146.75592041]
[299.20468140 151.00399780]
[308.34371948 150.43399048]
[313.79653931 155.44721985]
[328.10861206 159.93766785]
[343.98745728 155.83956909]
[355.28131104 167.72994995]
[350.37200928 183.37702942]
[334.30984497 186.68441772]
[323.61819458 174.24975586]
[309.30609131 169.75930786]
[294.95660400 165.38989258]
[280.57070923 161.14181519]
[266.18481445 156.89372253]
[251.79891968 152.64564514]
[237.41304016 148.39756775]
[223.02714539 144.14947510]
[208.64125061 139.90139771]
[194.25537109 135.65332031]
[179.86947632 131.40522766]
[165.47203064 135.22132874]
[154.42808533 123.89250946]
[140.04220581 119.64443207]
[125.65631104 115.39634705]
[111.27042389 111.14826202]
[101.12101746 122.19315338]
[106.56742096 136.16943359]
[112.01383209 150.14572144]
[117.46023560 164.12200928]
[132.60131836 167.08024597]
[143.72364807 177.77124023]
[147.27812195 192.78353882]
[142.13053894 207.32678223]
[129.92344666 216.76026917]
[114.55210114 218.07379150]
[100.92144012 210.84823608]
[93.38096619 197.38923645]
[94.33679962 181.99151611]
[103.48394775 169.56842041]
[98.03754425 155.59213257]
[92.59113312 141.61584473]
[87.14472961 127.63955688]
[85.33010864 121.24898529]
[85.22272491 115.14411163]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 129]
[3 128]
[4 127]
[5 126]
[6 125]
[7 124]
[8 123]
[9 122]
[10 121]
[15 119]
[16 118]
[17 117]
[19 115]
[21 113]
[22 112]
[23 111]
[24 110]
[25 109]
[26 108]
[27 107]
[28 106]
[32 45]
[33 44]
[34 43]
[35 42]
[36 41]
[46 103]
[47 102]
[49 100]
[50 99]
[51 98]
[52 97]
[53 95]
[54 94]
[55 93]
[56 92]
[57 91]
[64 87]
[65 86]
[66 85]
[69 84]
[70 83]
[71 82]
[72 81]
[74 79]
[130 166]
[131 165]
[132 164]
[133 163]
[135 161]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[142 154]
[143 153]
[145 152]
[146 151]
[167 183]
[168 182]
[169 181]
[170 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
