%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGCAUUCCUGGGCAUUGCUAACUAGUGAAGUAUACCAGAUGGAAAUGUCUUCGAAGCUGUCCCUUUAAAACUCGAGCAAGCUACCAGGCAAACUCCGCCUCCAGGGAGGUUCCUUAUUAAAUAGGAGCCAACUGGCUGGGUCGGGGCUCAAUACCCCAAGCAAUACCUGCAACUGAGGAUUCUUCCCGGGGAGACCGCAGCCCAUCGGC\
) } def
/len { sequence length } bind def

/coor [
[-99.94310760 100.48772430]
[-103.68721008 85.96251678]
[-102.26658630 71.02994537]
[-95.85070038 57.47131348]
[-85.20491791 46.90404129]
[-71.59915924 40.58870316]
[-56.65911102 39.27843475]
[-71.49471283 37.06373596]
[-86.33031464 34.84903717]
[-101.16591644 32.63433838]
[-116.00151825 30.41963959]
[-130.83712769 28.20494080]
[-145.67272949 25.99024200]
[-183.00613403 46.68844223]
[-197.87292480 48.68305588]
[-205.96150208 52.92552185]
[-212.97460938 50.59539032]
[-227.86932373 52.36948776]
[-242.76403809 54.14358521]
[-257.65875244 55.91768265]
[-272.55346680 57.69178009]
[-276.80679321 73.19756317]
[-286.66122437 85.85346985]
[-300.58441162 93.73965454]
[-316.42968750 95.67422485]
[-331.76702881 91.39028931]
[-344.25573730 81.57235718]
[-352.00170898 67.74711609]
[-366.86849976 69.74172974]
[-381.73529053 71.73634338]
[-396.60208130 73.73096466]
[-411.46887207 75.72557831]
[-415.90417480 87.41207123]
[-424.83526611 96.05397034]
[-436.52481079 100.05556488]
[-448.73480225 98.71559143]
[-459.15509033 92.34931183]
[-465.84036255 82.21711731]
[-480.75973511 83.77030182]
[-495.67910767 85.32349396]
[-503.95111084 100.07754517]
[-519.23565674 106.92562866]
[-535.42779541 103.34954834]
[-546.18853760 90.95217133]
[-561.08325195 92.72626495]
[-575.97796631 94.50036621]
[-586.99072266 106.16652679]
[-602.96533203 104.68663025]
[-611.64752197 91.19592285]
[-606.37701416 76.04331970]
[-591.19689941 70.85260773]
[-577.75207520 79.60565186]
[-562.85736084 77.83155060]
[-547.96264648 76.05744934]
[-542.55749512 63.85027313]
[-531.73968506 55.84357834]
[-518.27099609 54.21458435]
[-505.65655518 59.49493027]
[-497.23229980 70.40412140]
[-482.31292725 68.85092926]
[-467.39355469 67.29774475]
[-459.26812744 51.61749268]
[-443.21508789 43.88619614]
[-425.58087158 47.36989594]
[-413.46350098 60.85878754]
[-398.59671021 58.86417007]
[-383.72991943 56.86955643]
[-368.86312866 54.87493896]
[-353.99633789 52.88032150]
[-350.91687012 39.18925858]
[-343.33303833 27.34641457]
[-332.13858032 18.78528976]
[-318.66577148 14.55039501]
[-304.52673340 15.16985321]
[-291.42071533 20.58962822]
[-280.92968750 30.17756653]
[-274.32757568 42.79706573]
[-259.43286133 41.02296829]
[-244.53814697 39.24887085]
[-229.64341736 37.47477341]
[-214.74870300 35.70067596]
[-199.86753845 33.81626511]
[-185.00074768 31.82164955]
[-181.04417419 25.45018768]
[-193.78697205 17.53684044]
[-185.87342834 4.79416323]
[-173.13102722 12.70726681]
[-169.17445374 6.33580637]
[-173.97850037 -7.87408876]
[-178.78254700 -22.08398438]
[-183.58659363 -36.29388046]
[-198.21875000 -41.81060028]
[-205.83644104 -55.46727371]
[-202.84283447 -70.81564331]
[-190.65141296 -80.60866547]
[-175.01860046 -80.22238922]
[-163.32572937 -69.83919525]
[-161.09381104 -54.36170578]
[-169.37669373 -41.09792709]
[-164.57264709 -26.88803291]
[-159.76860046 -12.67813683]
[-154.96455383 1.53175855]
[-143.45802307 11.15464020]
[-128.62242126 13.36933804]
[-113.78682709 15.58403683]
[-98.95121765 17.79873466]
[-84.11561584 20.01343346]
[-69.28001404 22.22813225]
[-54.44441223 24.44283104]
[-41.25509262 17.29847527]
[-35.00548935 3.66240263]
[-28.75588989 -9.97367001]
[-22.50628853 -23.60974312]
[-16.25668716 -37.24581528]
[-10.00708675 -50.88188934]
[-3.75748563 -64.51795959]
[-11.48659515 -77.97309113]
[-9.79737949 -93.39794922]
[0.66062433 -104.86135864]
[15.86609936 -107.95540619]
[29.97223091 -101.49037170]
[37.55492401 -87.95219421]
[35.69847488 -72.54656982]
[25.11673164 -61.19728088]
[9.87858772 -58.26836014]
[3.62898660 -44.63228989]
[-2.62061429 -30.99621582]
[-8.87021542 -17.36014175]
[-15.11981583 -3.72406960]
[-21.36941719 9.91200352]
[-27.61901855 23.54807663]
[-24.64653015 30.43388176]
[-10.87482738 24.48911858]
[-4.93027687 38.26091385]
[-18.70155334 44.20549393]
[-15.72906590 51.09129715]
[-1.51917076 55.89534760]
[12.69072437 60.69939423]
[26.90061951 65.50344086]
[41.11051559 70.30748749]
[55.35561371 75.00611877]
[69.63513947 79.59907532]
[83.91465759 84.19202423]
[98.19418335 88.78498077]
[113.17401123 89.56262207]
[127.85236359 86.47293854]
[142.53070068 83.38326263]
[157.20906067 80.29358673]
[164.41764832 66.41661835]
[178.87944031 60.46760941]
[193.76600647 65.25550079]
[202.04838562 78.51959991]
[199.81587219 93.99700165]
[188.12260437 104.37974548]
[172.48977661 104.76542664]
[160.29873657 94.97193146]
[145.62039185 98.06160736]
[130.94204712 101.15129089]
[116.26369476 104.24096680]
[116.15255737 111.74014282]
[115.93028259 126.73849487]
[115.81914520 134.23767090]
[130.39949036 137.76097107]
[144.97982788 141.28425598]
[159.36555481 134.18281555]
[173.82521057 141.13249207]
[177.26657104 156.80210876]
[167.04972839 169.17124939]
[151.01217651 168.75138855]
[141.45654297 155.86459351]
[126.87619781 152.34130859]
[112.29585266 148.81802368]
[108.87113190 155.49044800]
[102.02169800 168.83529663]
[98.59697723 175.50773621]
[109.95964050 185.30006409]
[121.32231140 195.09239197]
[129.86524963 198.32376099]
[132.77941895 205.11500549]
[143.99572754 215.07463074]
[155.21205139 225.03427124]
[171.37611389 227.80101013]
[176.80751038 243.27459717]
[165.91888428 255.53712463]
[149.91151428 251.97396851]
[145.25241089 236.25057983]
[134.03610229 226.29095459]
[122.81978607 216.33131409]
[111.52998352 206.45506287]
[100.16731262 196.66273499]
[88.80464172 186.87040710]
[75.15350342 162.72335815]
[72.25590515 138.36026001]
[79.10604858 117.44353485]
[93.60122681 103.06450653]
[79.32170868 98.47154999]
[65.04218292 93.87859344]
[50.76266098 89.28564453]
[41.63578033 89.63711548]
[36.30646896 84.51738739]
[22.09657288 79.71333313]
[7.88667679 74.90928650]
[-6.32321882 70.10523987]
[-20.53311348 65.30119324]
[-17.04334641 79.88959503]
[-18.72463417 94.79507446]
[-25.37641525 108.23954773]
[-36.20519638 118.61921692]
[-49.91920471 124.69588470]
[-64.88249207 125.74467468]
[-79.31008911 121.64046478]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 109]
[8 108]
[9 107]
[10 106]
[11 105]
[12 104]
[13 103]
[14 83]
[15 82]
[17 81]
[18 80]
[19 79]
[20 78]
[21 77]
[28 69]
[29 68]
[30 67]
[31 66]
[32 65]
[38 61]
[39 60]
[40 59]
[44 54]
[45 53]
[46 52]
[88 102]
[89 101]
[90 100]
[91 99]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[136 204]
[137 203]
[138 202]
[139 201]
[140 200]
[141 198]
[142 197]
[143 196]
[144 195]
[145 159]
[146 158]
[147 157]
[148 156]
[162 172]
[163 171]
[164 170]
[175 191]
[176 190]
[177 189]
[179 188]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
