%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:24:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCUCCUGCACGGCGCGGCUCGGCUCAUGCCCCCGGGCGCGGGGCACACAGGCCGGCCGGCAGCCGCUGGGAAAUAGGCCCCCGGGGGCGGUGGCGGCGGCGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[62.57682419 336.51135254]
[49.63458252 325.55987549]
[56.57530212 310.09176636]
[57.43163300 295.11621094]
[58.28796387 280.14068604]
[55.48613358 273.17959595]
[59.38861465 264.75161743]
[60.67223740 249.80664062]
[61.95586395 234.86166382]
[63.23948669 219.91668701]
[64.52311707 204.97171021]
[61.92120361 197.93345642]
[66.06276703 189.62033081]
[67.77263641 174.71810913]
[61.53656769 161.19181824]
[70.79653931 148.36358643]
[72.50640869 133.46134949]
[74.21627808 118.55912781]
[68.57511902 104.66030121]
[56.96299362 95.16511536]
[45.35087204 85.66992950]
[36.58710480 82.59473419]
[33.54779434 75.73401642]
[22.21154976 65.91110229]
[10.87530613 56.08819199]
[-0.46093759 46.26528168]
[-11.79718113 36.44237137]
[-27.34545135 37.38528061]
[-38.70208359 27.26196098]
[-39.50518036 12.43325138]
[-50.84142685 2.61034083]
[-68.94077301 -0.37961984]
[-74.17199707 -17.06366158]
[-85.78412628 -26.55884743]
[-97.39624786 -36.05403519]
[-109.00836945 -45.54922104]
[-120.62049866 -55.04440689]
[-136.88372803 -57.15141678]
[-142.93998718 -72.39128876]
[-132.55912781 -85.08654785]
[-116.42007446 -82.17740631]
[-111.12531281 -66.65653229]
[-99.51318359 -57.16134644]
[-87.90106201 -47.66615677]
[-76.28894043 -38.17097092]
[-64.67681122 -28.67578506]
[-52.51832581 -29.55106544]
[-42.74836731 -21.60588074]
[-41.01851654 -8.72590256]
[-29.68227196 1.09700823]
[-14.89020348 -0.21841201]
[-3.25370955 9.58192730]
[-1.97427022 25.10612679]
[9.36197376 34.92903900]
[20.69821739 44.75194931]
[32.03446198 54.57485962]
[43.37070465 64.39777374]
[54.84605789 74.05780792]
[66.45818329 83.55299377]
[78.07030487 93.04817963]
[96.08107758 80.02552032]
[113.60485077 88.66914368]
[128.11206055 84.85586548]
[139.49188232 73.86450195]
[153.76799011 78.11210632]
[168.27519226 74.29882812]
[182.78239441 70.48555756]
[194.16223145 59.49419403]
[208.43832397 63.74179077]
[222.94552612 59.92851639]
[237.45272827 56.11524200]
[251.95994568 52.30196762]
[266.46713257 48.48869324]
[271.13656616 33.78494644]
[283.02874756 23.95745277]
[298.34890747 22.14212227]
[312.20849609 28.91822433]
[320.18493652 42.12352753]
[319.73297119 57.54426956]
[310.99682617 70.25975037]
[296.76419067 76.21249390]
[281.57659912 73.50301361]
[270.28042603 62.99589539]
[255.77320862 66.80917358]
[241.26600647 70.62244415]
[226.75880432 74.43572235]
[212.25160217 78.24899292]
[201.90942383 88.96760559]
[186.59567261 84.99275970]
[172.08847046 88.80603027]
[157.58126831 92.61930847]
[147.23908997 103.33792114]
[131.92532349 99.36306763]
[117.41812897 103.17634583]
[108.83300018 118.33892059]
[89.11850739 120.26899719]
[87.40863037 135.17121887]
[85.69876099 150.07345581]
[91.81253052 164.66564941]
[82.67485809 176.42797852]
[80.96498871 191.33021545]
[79.46808624 206.25532532]
[78.18446350 221.20030212]
[76.90084076 236.14527893]
[75.61721039 251.09025574]
[74.33358765 266.03524780]
[73.26350403 280.99700928]
[72.40716553 295.97256470]
[71.55083466 310.94808960]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 109]
[4 108]
[5 107]
[7 106]
[8 105]
[9 104]
[10 103]
[11 102]
[13 101]
[14 100]
[16 98]
[17 97]
[18 96]
[19 60]
[20 59]
[21 58]
[23 57]
[24 56]
[25 55]
[26 54]
[27 53]
[30 50]
[31 49]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[62 94]
[63 93]
[65 91]
[66 90]
[67 89]
[69 87]
[70 86]
[71 85]
[72 84]
[73 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
