%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:23:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAUCUUGCGUACGGAGGUGAGGUUUGUUACCGCGAUUCUGAGAGGUGGGCUUUUAGUCCCUCCAGACCUCGGCUUUAGUGCUGUCUCCGCUUUUCUUUCACCUUCACAGAGGUUCGUGUCUUCCUAAAAGAAGGUUUUAUUGGGAGGUAAAGGUCAAUGCGUAGGGGUAGAGUAAG\
) } def
/len { sequence length } bind def

/coor [
[95.78636169 294.98153687]
[93.68717957 280.12915039]
[91.58799744 265.27676392]
[88.35466003 261.72598267]
[87.33633423 256.09768677]
[89.68527222 249.86727905]
[88.10861969 234.95037842]
[86.53196716 220.03346252]
[84.95531464 205.11656189]
[83.37865448 190.19964600]
[81.80200195 175.28274536]
[80.22534943 160.36582947]
[78.64869690 145.44892883]
[65.06957245 139.07652283]
[52.58839417 147.39639282]
[40.10721588 155.71626282]
[27.62603760 164.03613281]
[15.14486027 172.35600281]
[7.95358753 186.44841003]
[-6.92805624 187.06965637]
[-19.40923500 195.38952637]
[-26.60050774 209.48193359]
[-41.48215103 210.10317993]
[-53.96332932 218.42304993]
[-66.44450378 226.74291992]
[-70.98887634 242.12889099]
[-85.90513611 248.03523254]
[-99.75080109 239.93109131]
[-101.90467072 224.03327942]
[-90.71446991 212.53723145]
[-74.76437378 214.26173401]
[-62.28319550 205.94186401]
[-49.80201721 197.62199402]
[-43.50348282 184.12467957]
[-27.72910118 182.90834045]
[-15.24792385 174.58847046]
[-8.94938850 161.09115601]
[6.82499266 159.87481689]
[19.30617142 151.55496216]
[31.78734779 143.23509216]
[44.26852798 134.91522217]
[56.74970627 126.59535217]
[55.96137619 119.13689423]
[42.25450134 113.04415131]
[54.38472366 104.21998596]
[53.59639740 96.76153564]
[39.65168762 91.23477173]
[23.97158241 93.34304810]
[14.99052429 81.46070862]
[1.04581571 75.93394470]
[-12.89889240 70.40718079]
[-26.89156342 65.00300598]
[-40.93111801 59.72181702]
[-57.88486481 59.80438614]
[-62.65747070 43.53605652]
[-48.34610367 34.44644547]
[-35.64993286 45.68226242]
[-21.61037827 50.96344757]
[-14.22127914 50.37381744]
[-7.37212896 56.46247482]
[6.57257938 61.98923874]
[20.51728821 67.51600647]
[35.19997406 65.01242065]
[45.17845154 77.29006195]
[59.12316132 82.81682587]
[88.36701965 66.19477081]
[113.25909424 76.29637909]
[123.91213226 65.73641968]
[134.56517029 55.17646027]
[145.21821594 44.61649704]
[155.87124634 34.05653763]
[158.87825012 19.36102867]
[153.22932434 5.46535587]
[147.58041382 -8.43031597]
[141.93148804 -22.32598877]
[127.27474976 -28.23830414]
[121.16847992 -42.81530762]
[127.23542786 -57.40872192]
[141.87617493 -63.36053085]
[156.40463257 -57.13963699]
[162.20130920 -42.43677902]
[155.82716370 -27.97490883]
[161.47608948 -14.07923603]
[167.12500000 -0.18356349]
[172.77392578 13.71210861]
[179.81660461 16.29099846]
[180.36935425 1.30118644]
[194.79632568 -2.80520082]
[203.15989685 9.64673710]
[193.90196228 21.44877815]
[200.94464111 24.02766800]
[214.23118591 17.06578827]
[227.51771545 10.10390759]
[240.80426025 3.14202714]
[254.09080505 -3.81985331]
[267.37734985 -10.78173351]
[280.66387939 -17.74361420]
[285.46884155 -32.56084442]
[299.04244995 -39.43190765]
[313.13879395 -34.75981522]
[323.10986328 -52.25763321]
[342.36633301 -50.70086288]
[355.40036011 -58.12473679]
[368.43438721 -65.54861450]
[381.46844482 -72.97248840]
[394.50247192 -80.39636230]
[407.53649902 -87.82023621]
[407.72866821 -103.11436462]
[415.49902344 -116.17262268]
[428.67471313 -123.53927612]
[443.66836548 -123.32330322]
[456.45462036 -115.68283081]
[469.48867798 -123.10671234]
[482.52270508 -130.53057861]
[482.53231812 -145.88948059]
[490.23397827 -159.17781067]
[503.55596924 -166.82110596]
[518.91473389 -166.76335144]
[532.17889404 -159.02008057]
[539.78039551 -145.67417908]
[539.67449951 -130.31565857]
[531.88970947 -117.07585907]
[518.52001953 -109.51622772]
[503.16192627 -109.67027283]
[489.94659424 -117.49655151]
[476.91253662 -110.07266998]
[463.87850952 -102.64879608]
[463.92794800 -87.75373077]
[456.46545410 -74.74728394]
[443.40838623 -67.17237854]
[428.21313477 -67.14996338]
[414.96038818 -74.78620148]
[401.92633057 -67.36232758]
[388.89230347 -59.93844986]
[375.85827637 -52.51457596]
[362.82424927 -45.09070206]
[349.79019165 -37.66682434]
[347.97402954 -27.57517052]
[340.73995972 -20.00106812]
[330.31350708 -17.62555885]
[320.10067749 -21.47327042]
[315.91885376 -7.22378206]
[302.54360962 0.02582657]
[287.62576294 -4.45707130]
[274.33923340 2.50480938]
[261.05270386 9.46669006]
[247.76614380 16.42856979]
[234.47959900 23.39044952]
[221.19305420 30.35233116]
[207.90652466 37.31421280]
[193.99577332 49.18286133]
[178.26992798 51.01178360]
[166.43121338 44.70957565]
[155.77816772 55.26953506]
[145.12513733 65.82949829]
[134.47209167 76.38945770]
[123.81906128 86.94941711]
[131.96026611 107.75297546]
[121.59872437 132.00885010]
[93.56560516 143.87226868]
[95.14225769 158.78918457]
[96.71891022 173.70608521]
[98.29557037 188.62300110]
[99.87222290 203.53990173]
[101.44887543 218.45681763]
[103.02552795 233.37371826]
[104.60218048 248.29063416]
[106.44038391 263.17758179]
[108.53956604 278.02996826]
[110.63874817 292.88235474]
[124.69922638 299.23110962]
[133.07608032 312.18609619]
[133.09628296 327.61343384]
[124.75338745 340.59033203]
[110.70959473 346.97589111]
[95.44621277 344.73251343]
[83.83374023 334.57601929]
[79.57766724 319.74737549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 170]
[2 169]
[3 168]
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[11 162]
[12 161]
[13 160]
[14 42]
[15 41]
[16 40]
[17 39]
[18 38]
[20 36]
[21 35]
[23 33]
[24 32]
[25 31]
[46 65]
[47 64]
[49 62]
[50 61]
[51 60]
[52 58]
[53 57]
[67 157]
[68 156]
[69 155]
[70 154]
[71 153]
[72 85]
[73 84]
[74 83]
[75 82]
[91 150]
[92 149]
[93 148]
[94 147]
[95 146]
[96 145]
[97 144]
[100 141]
[102 137]
[103 136]
[104 135]
[105 134]
[106 133]
[107 132]
[112 127]
[113 126]
[114 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
