%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:48:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGUCAUUUCAGCCCUGACACCAAGGCAGGAGGCUAGGAGGUCUACAAAUAGCGACUGGGUAGCUGGUGUGAACACAGGGGGUACUGGGGGGGCUUAGCCCCCAAGGAAGAGGACCAGUUUUUCCCCAGCACCACCAUCAAGGCCUCGAGGCUCCCAGCUCCCUCUACAGCCUGUGGACUGACUUAGGGAAUCCCGAACG\
) } def
/len { sequence length } bind def

/coor [
[19.81729889 613.79382324]
[20.41524887 628.78192139]
[16.85982704 643.35449219]
[9.42634964 656.38305664]
[-1.30956137 666.85870361]
[-14.51655579 673.97033691]
[-29.17193031 677.16723633]
[-44.14083099 676.20178223]
[-58.26411057 671.14874268]
[-70.44812775 662.39947510]
[-79.74938202 650.63146973]
[-85.44762421 636.75592041]
[-87.10160065 621.84741211]
[-84.58471680 607.06494141]
[-93.84603882 618.86444092]
[-103.10736084 630.66394043]
[-105.54147339 646.29675293]
[-119.48597717 651.53131104]
[-128.74729919 663.33074951]
[-130.52900696 679.63287354]
[-145.64485168 685.99237061]
[-158.54495239 675.86718750]
[-155.95878601 659.67321777]
[-140.54678345 654.06945801]
[-131.28546143 642.26995850]
[-129.51377869 627.48107910]
[-114.90685272 621.40258789]
[-105.64553070 609.60314941]
[-96.38420868 597.80364990]
[-95.41258240 588.65832520]
[-87.41258240 582.07751465]
[-81.96849823 568.10034180]
[-76.52442169 554.12316895]
[-84.88537598 537.84307861]
[-78.58947754 520.31890869]
[-61.19319153 512.82928467]
[-56.18426514 498.69030762]
[-51.17533875 484.55133057]
[-46.16641235 470.41235352]
[-41.15748596 456.27337646]
[-45.28078842 439.21847534]
[-31.18545532 427.37390137]
[-26.39593315 413.15908813]
[-21.60641098 398.94430542]
[-16.81688690 384.72949219]
[-12.02736473 370.51470947]
[-7.23784161 356.29992676]
[-2.44831848 342.08511353]
[2.34120440 327.87033081]
[-2.85254860 320.65533447]
[-4.16011095 311.72296143]
[-1.16237903 303.06188965]
[5.58680296 296.65945435]
[14.65829277 294.04595947]
[20.10237503 280.06875610]
[8.85383320 267.04080200]
[5.73318624 250.02343750]
[11.68807983 233.68461609]
[25.16404343 222.55265808]
[42.50907135 219.76126099]
[47.51799774 205.62228394]
[52.52692413 191.48330688]
[51.79682922 184.12394714]
[57.72431183 177.16531372]
[62.95144272 163.10554504]
[68.17857361 149.04577637]
[73.40570068 134.98600769]
[78.63283539 120.92623138]
[83.85996246 106.86646271]
[80.29624176 92.29595184]
[69.16979980 82.23601532]
[58.04336548 72.17607117]
[41.90478897 69.26430511]
[36.61254120 53.74257660]
[47.61083984 41.57830429]
[63.58557129 45.28504944]
[68.10330200 61.04963303]
[79.22974396 71.10957336]
[90.35617828 81.16950989]
[104.67832184 76.71122742]
[108.12918854 62.11357498]
[103.77426910 46.90353775]
[114.23204803 36.29767990]
[117.68291473 21.70002747]
[121.13378906 7.10237360]
[116.77886963 -8.10766411]
[127.23664093 -18.71352196]
[130.68751526 -33.31117630]
[134.13838196 -47.90882874]
[137.58926392 -62.50648117]
[138.51721191 -77.47775269]
[136.89543152 -92.38982391]
[135.27363586 -107.30188751]
[133.65185547 -122.21395874]
[132.03007507 -137.12602234]
[130.40827942 -152.03810120]
[122.68488312 -167.13066101]
[135.04956055 -178.73027039]
[149.61874390 -170.05989075]
[145.32035828 -153.65988159]
[146.94213867 -138.74781799]
[148.56393433 -123.83574677]
[150.18571472 -108.92367554]
[151.80749512 -94.01160431]
[153.42927551 -79.09954071]
[160.78938293 -77.65770721]
[175.50959778 -74.77405548]
[182.86970520 -73.33222961]
[189.99816895 -86.53015137]
[197.12663269 -99.72806549]
[204.25509644 -112.92597961]
[211.38356018 -126.12390137]
[218.51202393 -139.32180786]
[225.64048767 -152.51972961]
[220.87902832 -167.58970642]
[228.24226379 -181.57391357]
[243.36174011 -186.17578125]
[257.26733398 -178.66508484]
[261.70907593 -163.49781799]
[254.05178833 -149.67242432]
[238.83839417 -145.39126587]
[231.70993042 -132.19335938]
[224.58146667 -118.99543762]
[217.45300293 -105.79751587]
[210.32453918 -92.59960175]
[203.19607544 -79.40168762]
[196.06761169 -66.20376587]
[152.18690491 -59.05561066]
[148.73603821 -44.45795822]
[145.28517151 -29.86030388]
[141.83428955 -15.26265049]
[146.43605042 -1.09673524]
[135.73144531 10.55324459]
[132.28056335 25.15089798]
[128.82969666 39.74855042]
[133.43144226 53.91446686]
[122.72684479 65.56444550]
[119.27597046 80.16210175]
[124.17545319 85.84057617]
[131.94853210 73.01172638]
[146.55149841 76.44004822]
[147.80351257 91.38771057]
[133.97442627 97.19752502]
[138.87390137 102.87599945]
[153.81959534 101.60078430]
[168.76530457 100.32556915]
[183.71099854 99.05035400]
[196.84785461 89.23429108]
[211.80845642 95.95087433]
[213.20260620 112.29064941]
[199.59614563 121.44466400]
[184.98620605 113.99604797]
[170.04051208 115.27126312]
[155.09481812 116.54647827]
[140.14912415 117.82169342]
[113.25746155 124.77487183]
[97.91973114 112.09359741]
[92.69260406 126.15336609]
[87.46546936 140.21313477]
[82.23834229 154.27290344]
[77.01121521 168.33267212]
[71.78408051 182.39244080]
[66.66590118 196.49223328]
[61.65697479 210.63121033]
[56.64804840 224.77018738]
[65.93366241 233.75572205]
[71.11031342 245.54382324]
[71.44067383 258.36749268]
[66.91097260 270.31909180]
[58.22779083 279.63406372]
[46.70809555 284.95150757]
[34.07957077 285.51284790]
[28.63548660 299.49005127]
[33.17590714 320.42855835]
[16.55600166 332.65985107]
[11.76647949 346.87463379]
[6.97695589 361.08944702]
[2.18743324 375.30422974]
[-2.60208988 389.51904297]
[-7.39161253 403.73382568]
[-12.18113613 417.94863892]
[-16.97065926 432.16342163]
[-11.94867992 444.04830933]
[-16.23522377 455.79190063]
[-27.01850891 461.28231812]
[-32.02743530 475.42129517]
[-37.03636169 489.56027222]
[-42.04528809 503.69924927]
[-47.05421448 517.83819580]
[-39.94263458 527.37463379]
[-38.33695602 539.04095459]
[-42.52177811 549.92016602]
[-51.34838104 557.34844971]
[-62.54722214 559.56719971]
[-67.99130249 573.54443359]
[-73.43538666 587.52160645]
[-61.98709488 577.82952881]
[-48.31124115 571.66748047]
[-33.46682739 569.51263428]
[-18.60335541 571.53179932]
[-4.87179804 577.56872559]
[6.66452265 587.15588379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 29]
[15 28]
[16 27]
[18 25]
[19 24]
[31 196]
[32 195]
[33 194]
[36 189]
[37 188]
[38 187]
[39 186]
[40 185]
[42 182]
[43 181]
[44 180]
[45 179]
[46 178]
[47 177]
[48 176]
[49 175]
[54 173]
[55 172]
[60 165]
[61 164]
[62 163]
[64 162]
[65 161]
[66 160]
[67 159]
[68 158]
[69 157]
[70 79]
[71 78]
[72 77]
[80 138]
[81 137]
[83 135]
[84 134]
[85 133]
[87 131]
[88 130]
[89 129]
[90 128]
[91 105]
[92 104]
[93 103]
[94 102]
[95 101]
[96 100]
[108 127]
[109 126]
[110 125]
[111 124]
[112 123]
[113 122]
[114 121]
[144 155]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
