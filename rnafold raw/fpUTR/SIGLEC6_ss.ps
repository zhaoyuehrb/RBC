%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:38:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGACACAGUCUCUUCUCCUCUGCUCUUCUUUGGGCAGGUCUCUGGGUCUCAAAGUUUCCGUCUGCUCUGUGCAGAGGGAGUGGAGCUCCGAGGGCUUGUGGCUUCGCAGUUCCUCUUCUGUGAACAGCCGAGAUCACGCGCUCCUCCCCAGCCACCCGUUCCUCCCCGCAGUCCUUCCCCUCCACUCCCUUCCCCUUCUCUGCUC\
) } def
/len { sequence length } bind def

/coor [
[94.08277893 127.11643982]
[81.65001678 135.50848389]
[69.21725464 143.90052795]
[56.78449249 152.29258728]
[44.35173035 160.68463135]
[31.91897011 169.07667542]
[26.55581093 176.47285461]
[19.23566437 177.49978638]
[6.67816734 185.70399475]
[-5.62704849 194.28198242]
[-17.66886330 203.22595215]
[-24.13398743 217.66592407]
[-38.96476746 219.04335022]
[-51.00658035 227.98731995]
[-63.04839325 236.93128967]
[-59.85057831 250.69879150]
[-62.13500214 264.60305786]
[-69.52413940 276.54998779]
[-80.87419128 284.75302124]
[-94.45201111 288.00030518]
[-108.19973755 285.83364868]
[-120.04667664 278.61279297]
[-132.22155762 287.37475586]
[-144.39645386 296.13671875]
[-156.57135010 304.89868164]
[-168.74623108 313.66064453]
[-180.92112732 322.42260742]
[-193.09600830 331.18457031]
[-195.39103699 346.82135010]
[-208.12040710 356.18823242]
[-223.73204041 353.72802734]
[-232.96380615 340.90032959]
[-230.33868408 325.31558228]
[-217.41410828 316.21994019]
[-201.85798645 319.00967407]
[-189.68309021 310.24771118]
[-177.50819397 301.48574829]
[-165.33331299 292.72378540]
[-153.15841675 283.96182251]
[-140.98353577 275.19985962]
[-128.80863953 266.43789673]
[-131.89190674 250.75920105]
[-127.81465149 235.24899292]
[-117.34397888 223.02502441]
[-102.53739166 216.56733704]
[-86.33861542 217.21514893]
[-71.99237061 224.88948059]
[-59.95055771 215.94551086]
[-47.90874100 207.00152588]
[-42.30492783 193.20129395]
[-26.61283875 191.18414307]
[-14.57102489 182.24015808]
[-14.02928638 179.48826599]
[-12.36398888 176.78533936]
[-9.58838463 174.56071472]
[-5.87087059 173.23097229]
[-1.52605510 173.14649963]
[11.03144169 164.94227600]
[23.52692413 156.64392090]
[35.95968628 148.25186157]
[48.39244461 139.85981750]
[60.82520676 131.46777344]
[73.25796509 123.07572937]
[85.69072723 114.68367767]
[85.46526337 99.68537140]
[72.78586578 91.67082977]
[60.10647202 83.65628815]
[47.42707825 75.64173889]
[31.52352333 77.75278473]
[20.05765343 66.53167725]
[21.82510185 50.58627701]
[35.47003555 42.14854050]
[50.52522659 47.69117737]
[55.44161987 62.96234512]
[68.12101746 70.97689056]
[80.80041504 78.99143219]
[93.47980499 87.00597382]
[108.46921539 86.44242859]
[120.51103210 77.49845123]
[132.55284119 68.55447388]
[144.59466553 59.61049652]
[156.63647461 50.66651917]
[168.67828369 41.72254562]
[180.72010803 32.77856827]
[192.76191711 23.83459091]
[204.80372620 14.89061546]
[216.84555054 5.94663858]
[228.88735962 -2.99733782]
[227.71726990 -16.73218536]
[233.44155884 -29.15293503]
[244.46771240 -37.05970383]
[257.85305786 -38.47391891]
[270.08966064 -33.13251495]
[282.26455688 -41.89448166]
[294.43945312 -50.65644455]
[306.61434937 -59.41841125]
[318.78921509 -68.18037415]
[330.96411133 -76.94234467]
[343.13900757 -85.70430756]
[348.27743530 -93.25835419]
[355.56338501 -94.50485229]
[367.86862183 -103.08282471]
[380.17382812 -111.66080475]
[392.47903442 -120.23877716]
[377.62350464 -132.81816101]
[373.64947510 -156.99272156]
[378.94421387 -171.02717590]
[384.23895264 -185.06163025]
[389.53369141 -199.09606934]
[394.82843018 -213.13052368]
[400.12316895 -227.16496277]
[405.41790771 -241.19941711]
[396.77966309 -254.08973694]
[397.40155029 -269.59432983]
[407.04446411 -281.75140381]
[422.00048828 -285.88626099]
[436.51870728 -280.40902710]
[445.01663208 -267.42575073]
[444.22656250 -251.92878723]
[434.45236206 -239.87705994]
[419.45236206 -235.90467834]
[414.15762329 -221.87022400]
[408.86288452 -207.83578491]
[403.56814575 -193.80133057]
[398.27340698 -179.76687622]
[392.97866821 -165.73243713]
[387.68392944 -151.69798279]
[399.45196533 -142.39569092]
[411.21899414 -133.09419250]
[423.65173340 -141.48625183]
[436.08450317 -149.87829590]
[448.45382690 -158.36354065]
[460.75906372 -166.94151306]
[463.28884888 -182.54202271]
[476.15759277 -191.71650696]
[491.73046875 -189.02192688]
[500.76837158 -176.05691528]
[497.90930176 -160.51338196]
[484.84945679 -151.61303711]
[469.33703613 -154.63630676]
[457.03179932 -146.05833435]
[453.34176636 -139.65342712]
[444.47656250 -137.44552612]
[432.04379272 -129.05348206]
[419.61102295 -120.66143799]
[433.97296143 -124.98986053]
[448.95681763 -125.68513489]
[463.65786743 -122.70527649]
[477.18832397 -116.23022461]
[488.73120117 -106.65097046]
[497.58947754 -94.54596710]
[503.22821045 -80.64615631]
[505.30694580 -65.79089355]
[503.70013428 -50.87720490]
[498.50479126 -36.80564880]
[490.03469849 -24.42594147]
[478.80123901 -14.48562527]
[465.48281860 -7.58494711]
[450.88363647 -4.14060354]
[435.88522339 -4.36058092]
[421.39334106 -8.23159599]
[408.28302002 -15.51989746]
[397.34591675 -25.78538132]
[389.24252319 -38.40816879]
[384.46209717 -52.62603378]
[383.29336548 -67.58043671]
[385.80685425 -82.36834717]
[391.85083008 -96.09680176]
[401.05700684 -107.93356323]
[388.75180054 -99.35558319]
[376.44659424 -90.77761078]
[364.14135742 -82.19963074]
[351.90097046 -73.52941895]
[339.72607422 -64.76745605]
[327.55117798 -56.00548553]
[315.37631226 -47.24352264]
[303.20141602 -38.48155594]
[291.02651978 -29.71958923]
[278.85162354 -20.95762444]
[279.30374146 -4.54879332]
[269.79141235 9.03257179]
[253.90086365 14.32094860]
[237.83132935 9.04447651]
[225.78952026 17.98845291]
[213.74771118 26.93242836]
[201.70588684 35.87640381]
[189.66407776 44.82038116]
[177.62226868 53.76435852]
[165.58044434 62.70833588]
[153.53863525 71.65231323]
[141.49682617 80.59629059]
[129.45500183 89.54026794]
[117.41319275 98.48423767]
[131.64915466 93.75798798]
[146.64913940 93.77798462]
[160.87245178 98.54216766]
[172.85815430 107.56120300]
[181.37515259 119.90869904]
[185.54864502 134.31640625]
[184.94993591 149.30445862]
[179.64054871 163.33335876]
[170.16580200 174.96217346]
[157.49890137 182.99644470]
[142.94090271 186.61096191]
[127.98710632 185.43443298]
[114.17348480 179.58773804]
[102.91888428 169.67138672]
[95.37930298 156.70393372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 64]
[2 63]
[3 62]
[4 61]
[5 60]
[6 59]
[8 58]
[9 57]
[10 52]
[11 51]
[13 49]
[14 48]
[15 47]
[22 41]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[65 77]
[66 76]
[67 75]
[68 74]
[78 193]
[79 192]
[80 191]
[81 190]
[82 189]
[83 188]
[84 187]
[85 186]
[86 185]
[87 184]
[88 183]
[93 179]
[94 178]
[95 177]
[96 176]
[97 175]
[98 174]
[99 173]
[101 172]
[102 171]
[103 170]
[104 169]
[106 127]
[107 126]
[108 125]
[109 124]
[110 123]
[111 122]
[112 121]
[129 145]
[130 144]
[131 143]
[132 141]
[133 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
