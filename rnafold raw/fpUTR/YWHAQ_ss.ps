%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGGCGGUGGACCGCCCCUCGGCCCCGGGGUAGGCUGACACGGGAGGGUCCUCAGCUAAAGCCAAAAGCAGAUCAAAGUGGUGGGACUCGCGUCGCGGCCGCGGAGACGUGAAGCUCUCGAGGCUCCUCCCGCUGCGGGUCGGCGCUCGCCCUCGCUCUCCUCGCCCUCCGCCCCGGCCCCGGCCCCGCGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-39.29147720 711.30493164]
[-48.81998825 715.48162842]
[-59.15752411 716.24206543]
[-64.06354523 730.41705322]
[-68.96956635 744.59204102]
[-73.87557983 758.76708984]
[-78.78160095 772.94207764]
[-83.68762207 787.11712646]
[-80.05444336 803.10870361]
[-92.26921844 814.05090332]
[-107.76642609 808.68725586]
[-110.60386658 792.53546143]
[-97.86263275 782.21105957]
[-92.95661163 768.03607178]
[-88.05059814 753.86108398]
[-83.14457703 739.68603516]
[-78.23855591 725.51104736]
[-73.33253479 711.33599854]
[-85.58248901 696.10150146]
[-86.16503906 676.41735840]
[-74.67057037 660.25024414]
[-55.61250305 654.24829102]
[-51.61539841 639.79064941]
[-47.61828995 625.33306885]
[-53.30996704 614.65161133]
[-50.09030533 602.56903076]
[-39.15946198 595.70904541]
[-34.93347549 581.31665039]
[-30.70748711 566.92425537]
[-26.48149872 552.53186035]
[-22.25551033 538.13946533]
[-18.02952194 523.74707031]
[-23.95948410 505.34912109]
[-9.18263531 491.64779663]
[-5.41541529 477.12854004]
[-1.64819562 462.60931396]
[2.11902404 448.09008789]
[5.88624382 433.57086182]
[-4.46109676 424.64868164]
[-9.97916889 412.07742310]
[-9.53807354 398.28927612]
[-3.16693974 385.97885132]
[7.94064140 377.57653809]
[21.64982414 374.76876831]
[25.64693260 360.31112671]
[29.64403915 345.85348511]
[33.64114761 331.39587402]
[37.63825226 316.93823242]
[41.63536072 302.48059082]
[45.63246918 288.02294922]
[33.12098694 276.20773315]
[28.28594208 259.59960938]
[32.54399109 242.74249268]
[44.81103516 230.29597473]
[61.77645111 225.74746704]
[65.31283569 211.17028809]
[68.84922028 196.59310913]
[57.97529984 186.41355896]
[53.62776184 172.06242371]
[57.07003021 157.36489868]
[67.47513580 146.29103088]
[82.12164307 141.88342285]
[85.65802765 127.30624390]
[75.31227112 118.48889923]
[69.76174164 106.08036041]
[70.08453369 92.49079895]
[76.21795654 80.35978699]
[86.97069550 72.04360199]
[100.25417328 69.15751648]
[104.02139282 54.63829041]
[99.99797058 39.33722305]
[110.68370819 28.96108246]
[114.45092773 14.44185257]
[118.21814728 -0.07737774]
[121.98536682 -14.59660816]
[115.93305206 -23.65038872]
[115.87003326 -34.32092285]
[121.57535553 -43.07722473]
[130.95909119 -47.15463638]
[135.18507385 -61.54703140]
[139.41107178 -75.93943024]
[143.63705444 -90.33182526]
[147.86303711 -104.72422028]
[152.08903503 -119.11660767]
[156.31501770 -133.50900269]
[160.54101562 -147.90139771]
[164.76699829 -162.29379272]
[155.46456909 -174.57267761]
[155.17938232 -189.79673767]
[163.81124878 -202.12373352]
[177.87820435 -206.94647217]
[182.10420227 -221.33886719]
[178.56826782 -236.75988770]
[189.57783508 -246.79176331]
[193.80383301 -261.18417358]
[198.02981567 -275.57656860]
[194.49388123 -290.99755859]
[205.50346375 -301.02944946]
[209.61514282 -315.45492554]
[213.61224365 -329.91253662]
[217.37947083 -344.43179321]
[220.91584778 -359.00894165]
[224.45223999 -373.58612061]
[227.98861694 -388.16329956]
[222.85179138 -403.73715210]
[233.97113037 -415.79089355]
[249.90800476 -411.92465210]
[254.26794434 -396.11569214]
[242.56579590 -384.62692261]
[239.02940369 -370.04974365]
[235.49302673 -355.47256470]
[231.95663452 -340.89538574]
[233.63920593 -336.41534424]
[232.51774597 -330.83035278]
[228.06988525 -325.91543579]
[224.07276917 -311.45782471]
[225.32180786 -304.16531372]
[219.89585876 -296.80346680]
[223.73405457 -282.41189575]
[212.42221069 -271.35055542]
[208.19622803 -256.95816040]
[203.97023010 -242.56578064]
[207.80842590 -228.17419434]
[196.49658203 -217.11288452]
[192.27059937 -202.72048950]
[201.49710083 -191.05816650]
[202.09422302 -176.02130127]
[193.62356567 -163.36819458]
[179.15939331 -158.06781006]
[174.93339539 -143.67541504]
[170.70741272 -129.28302002]
[166.48143005 -114.89062500]
[162.25543213 -100.49822998]
[158.02944946 -86.10583496]
[153.80346680 -71.71343994]
[149.57746887 -57.32104492]
[145.35148621 -42.92864990]
[151.28144836 -24.53071404]
[136.50459290 -10.82938862]
[132.73738098 3.68984199]
[128.97015381 18.20907211]
[125.20294189 32.72830200]
[129.49581909 46.99085617]
[118.54062653 58.40550995]
[114.77340698 72.92473602]
[126.38457489 84.02572632]
[130.83879089 99.45980835]
[126.92784882 115.04042816]
[115.71258545 126.54125214]
[100.23520660 130.84263611]
[96.69882202 145.41979980]
[107.69747162 156.04887390]
[111.87155914 170.65960693]
[108.19637299 185.30062866]
[97.75605774 196.06425476]
[83.42639160 200.12950134]
[79.89000702 214.70668030]
[76.35362244 229.28384399]
[86.51305389 237.27572632]
[92.86894226 248.47755432]
[94.50645447 261.20526123]
[91.21704102 273.56076050]
[83.52429962 283.71493530]
[72.60092163 290.17843628]
[60.09009933 292.02008057]
[56.09299469 306.47769165]
[52.09588623 320.93533325]
[48.09877777 335.39297485]
[44.10167313 349.85058594]
[40.10456467 364.30822754]
[36.10745621 378.76586914]
[47.82450867 390.42498779]
[52.04188919 406.31033325]
[47.70079422 422.06500244]
[36.07645416 433.41708374]
[20.40547371 437.33807373]
[16.63825417 451.85729980]
[12.87103462 466.37655640]
[9.10381508 480.89578247]
[5.33659506 495.41500854]
[11.38890743 504.46878052]
[11.45193195 515.13934326]
[5.74660492 523.89562988]
[-3.63712740 527.97302246]
[-7.86311579 542.36541748]
[-12.08910370 556.75781250]
[-16.31509209 571.15020752]
[-20.54108047 585.54260254]
[-24.76706886 599.93499756]
[-20.00849724 617.71856689]
[-33.16065979 629.33013916]
[-37.15776443 643.78778076]
[-41.15487289 658.24542236]
[-32.95641327 665.01678467]
[-27.50228691 674.10009766]
[-25.39394188 684.44421387]
[-26.84735107 694.86181641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[22 193]
[23 192]
[24 191]
[27 189]
[28 188]
[29 187]
[30 186]
[31 185]
[32 184]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[44 171]
[45 170]
[46 169]
[47 168]
[48 167]
[49 166]
[50 165]
[55 158]
[56 157]
[57 156]
[62 151]
[63 150]
[69 145]
[70 144]
[72 142]
[73 141]
[74 140]
[75 139]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[91 125]
[92 124]
[94 122]
[95 121]
[96 120]
[98 118]
[99 116]
[100 115]
[101 112]
[102 111]
[103 110]
[104 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
