%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:50:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAAAUUCCCUCCCUUCGCUCCUUCCCCGGAACAGCGGCCUCUGACACCAGCACAGCAAACCCGCCGGGAUCAAAGUGUACCAGUCGGCAGCAUGGGUCAUGUGUCUCCAGCUCUUCCCAGCACAACCUCACCCUCCUCAGGGCUCUGAGGGGGCGGAGAGGACAGGCCAGAGCG\
) } def
/len { sequence length } bind def

/coor [
[32.15471649 286.00363159]
[37.02134323 300.32742310]
[37.22145844 315.45407104]
[32.73545074 329.90161133]
[24.00282288 342.25457764]
[11.87910080 351.30282593]
[-2.44795251 356.15985107]
[-17.57472038 356.34982300]
[-32.01923370 351.85415649]
[-44.36637115 343.11325073]
[-53.40647888 330.98345947]
[-58.25390625 316.65313721]
[-58.43375015 301.52627563]
[-53.92838669 287.08474731]
[-45.17921066 274.74349976]
[-33.04337311 265.71151733]
[-18.70982361 260.87368774]
[-3.58281612 260.70397949]
[0.87484139 246.38163757]
[5.33249903 232.05931091]
[9.79015636 217.73696899]
[14.24781418 203.41464233]
[14.11924648 203.31628418]
[13.99140644 203.21697998]
[1.27539003 211.17329407]
[-11.44062614 219.12960815]
[-18.64890480 233.85960388]
[-35.02588654 234.71194458]
[-43.72433853 220.80982971]
[-35.79603577 206.45454407]
[-19.39694023 206.41358948]
[-6.68092346 198.45727539]
[6.03509283 190.50096130]
[5.69416285 181.68923950]
[8.85602665 173.35142517]
[15.09086609 166.83857727]
[23.46461296 163.23805237]
[32.67841721 163.19232178]
[40.52156830 150.40618896]
[48.36472321 137.62007141]
[56.20787430 124.83394623]
[64.05102539 112.04782104]
[62.19216156 97.16344452]
[51.44531250 86.69897461]
[40.69845963 76.23450470]
[29.95160866 65.77002716]
[19.20475769 55.30555725]
[4.45704365 59.36168289]
[-10.24375916 55.51678848]
[-20.97490692 44.90034866]
[-24.92483139 30.43473053]
[-21.12932587 16.03126907]
[-31.87617683 5.56679583]
[-42.62302780 -4.89767742]
[-53.36988068 -15.36215019]
[-67.33700562 -9.42961311]
[-82.47059631 -9.29684734]
[-96.46424103 -14.95294476]
[-107.19721222 -25.50713539]
[-113.05580902 -39.32891846]
[-113.17593384 -54.29992294]
[-107.57041931 -68.13854980]
[-118.31727600 -78.60301971]
[-129.06411743 -89.06749725]
[-144.63029480 -95.78543091]
[-142.48403931 -112.60298157]
[-125.72959137 -115.19616699]
[-118.59965515 -99.81434631]
[-107.85279846 -89.34987640]
[-97.10594940 -78.88539886]
[-83.42144775 -84.85731506]
[-68.45255280 -85.13576508]
[-54.47970581 -79.64719391]
[-43.64353943 -69.19898224]
[-37.61692810 -55.36086273]
[-37.34678268 -40.22910690]
[-42.90540695 -26.10900116]
[-32.15855408 -15.64452839]
[-21.41170502 -5.18005562]
[-10.66485310 5.28441715]
[3.63246632 1.10682929]
[18.19810486 4.67027235]
[29.09645462 15.11500168]
[33.33132935 29.70824051]
[29.66923141 44.55870438]
[40.41608047 55.02317810]
[51.16293335 65.48764801]
[61.90978241 75.95212555]
[72.65663147 86.41659546]
[82.65312195 72.33552551]
[99.63825226 65.22673035]
[118.94676971 68.33914948]
[128.31398010 56.62354660]
[131.24218750 47.93741226]
[137.95288086 44.78507614]
[147.52655029 33.23756409]
[157.10020447 21.69005585]
[166.67387390 10.14254570]
[161.45401001 -4.23453045]
[164.11372375 -19.19523621]
[173.84013367 -30.73921776]
[187.94447327 -35.83070374]
[202.60485840 -33.19649506]
[212.17851257 -44.74400711]
[209.19421387 -60.09418106]
[216.82017517 -73.74623871]
[231.45565796 -79.25409698]
[246.19024658 -74.01710510]
[254.06669617 -60.50801849]
[251.36601257 -45.10541153]
[239.36335754 -35.08192444]
[223.72602844 -35.17034149]
[214.15235901 -23.62283325]
[219.45735168 -9.70440674]
[217.06741333 5.09911060]
[207.52551270 16.79606056]
[193.31668091 22.18177032]
[178.22137451 19.71620941]
[168.64772034 31.26371765]
[159.07405090 42.81122971]
[149.50039673 54.35873795]
[140.02958679 65.99075317]
[130.66236877 77.70635986]
[132.31274414 85.02252960]
[146.94512939 81.72204590]
[150.24536133 96.35449219]
[135.61346436 99.65486145]
[137.26382446 106.97103119]
[150.75350952 113.53063965]
[164.24317932 120.09024811]
[177.73286438 126.64985657]
[196.04974365 124.90574646]
[205.32867432 139.78532410]
[218.98818970 145.98350525]
[232.70217896 152.06022644]
[246.41616821 158.13694763]
[260.13015747 164.21365356]
[273.84414673 170.29037476]
[287.55813599 176.36709595]
[301.27212524 182.44381714]
[314.98611450 188.52053833]
[328.70010376 194.59724426]
[344.93994141 192.31706238]
[354.81997681 205.40588379]
[348.17642212 220.39906311]
[331.84365845 221.87290955]
[322.62338257 208.31123352]
[308.90939331 202.23452759]
[295.19540405 196.15780640]
[281.48141479 190.08108521]
[267.76742554 184.00436401]
[254.05343628 177.92764282]
[240.33944702 171.85093689]
[226.62545776 165.77421570]
[212.91146851 159.69749451]
[205.49909973 159.86297607]
[199.00950623 153.38929749]
[187.52442932 157.24851990]
[176.12852478 152.06997681]
[171.17326355 140.13954163]
[157.68357849 133.57992554]
[144.19389343 127.02032471]
[130.70420837 120.46070862]
[112.51831818 132.44384766]
[92.03219604 131.66625977]
[76.83715057 119.89097595]
[68.99399567 132.67709351]
[61.15084457 145.46322632]
[53.30769348 158.24934387]
[45.46453857 171.03547668]
[48.26310730 195.03453064]
[28.57014847 207.87229919]
[24.11249161 222.19462585]
[19.65483475 236.51696777]
[15.19717693 250.83929443]
[10.73951912 265.16162109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[24 33]
[25 32]
[26 31]
[38 170]
[39 169]
[40 168]
[41 167]
[42 166]
[43 89]
[44 88]
[45 87]
[46 86]
[47 85]
[52 80]
[53 79]
[54 78]
[55 77]
[62 70]
[63 69]
[64 68]
[92 123]
[93 122]
[95 121]
[96 120]
[97 119]
[98 118]
[103 113]
[104 112]
[128 163]
[129 162]
[130 161]
[131 160]
[133 157]
[134 155]
[135 154]
[136 153]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
