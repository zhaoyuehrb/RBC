%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCCGCGGCGGCGGUGGCACAGCAGCGGGCAGCGGCGGCUCAGGGAGCUGGAGCCUCAACAGCCUCCAGCGAGCCCGGGACCCGCCGACAGCCCGAGAAACCAGCCGAAGGACGCGGGGCGGGGUCGCCGCCGCCGCCACGGGGUGCUCCCUCCCUCCCGCCCAAGUCCGGCCACCUGGUCUUCCCCUCGGCCCCGGCCGUCUCAGACUCAUCAAA\
) } def
/len { sequence length } bind def

/coor [
[365.02343750 256.05838013]
[352.48455811 247.82572937]
[339.94564819 239.59309387]
[322.39425659 239.52940369]
[314.25952148 223.00643921]
[301.60382080 214.95451355]
[288.94815063 206.90257263]
[274.05664062 206.59869385]
[266.56661987 192.66276550]
[253.91091919 184.61083984]
[241.25523376 176.55889893]
[228.59954834 168.50697327]
[215.94386292 160.45504761]
[203.28817749 152.40310669]
[190.63249207 144.35118103]
[177.97680664 136.29924011]
[165.32112122 128.24731445]
[152.66543579 120.19538879]
[140.00975037 112.14345551]
[127.35405731 104.09152222]
[123.63954926 113.18464661]
[117.09233856 120.22104645]
[108.66835022 124.39205170]
[99.52365875 125.29143524]
[90.85649109 122.95099640]
[83.75029755 117.81756592]
[79.03840637 110.67680359]
[77.20719147 102.53610229]
[62.57646179 99.22826385]
[47.94573212 95.92043304]
[33.31500244 92.61259460]
[18.68427658 89.30475616]
[3.51758909 93.80832672]
[-7.19011211 83.45485687]
[-21.84419060 80.25203705]
[-36.52086258 77.15441895]
[-51.19753647 74.05679321]
[-65.87420654 70.95916748]
[-80.55088043 67.86154175]
[-95.22755432 64.76391602]
[-110.32807922 69.48458862]
[-121.18319702 59.28577805]
[-135.85986328 56.18815613]
[-153.23068237 62.30675888]
[-165.81874084 50.07580566]
[-180.53833008 47.18903351]
[-195.25793457 44.30225754]
[-214.02064514 51.68324661]
[-228.01927185 38.33942032]
[-242.81562805 35.87608719]
[-257.61196899 33.41275406]
[-272.40832520 30.94942093]
[-287.20468140 28.48608780]
[-302.00103760 26.02275276]
[-316.79739380 23.55941963]
[-331.68081665 28.92537880]
[-342.96466064 19.20302391]
[-357.76101685 16.73969078]
[-372.91854858 22.99917221]
[-385.75146484 12.78897190]
[-383.05838013 -3.38753033]
[-367.60968018 -8.88933659]
[-355.29769897 1.94334042]
[-340.50134277 4.40667391]
[-326.67620850 -1.13547909]
[-314.33404541 8.76307011]
[-299.53768921 11.22640324]
[-284.74133301 13.68973637]
[-269.94500732 16.15307045]
[-255.14863586 18.61640358]
[-240.35229492 21.07973671]
[-225.55593872 23.54306984]
[-217.81626892 16.88256836]
[-207.47117615 15.55055237]
[-197.90217590 20.22563934]
[-192.37115479 29.58266068]
[-177.65156555 32.46943283]
[-162.93196106 35.35620880]
[-152.72433472 28.87232780]
[-140.44065857 31.15269470]
[-132.76223755 41.51148224]
[-118.08557129 44.60910797]
[-104.03482056 39.66687393]
[-92.12992859 50.08724594]
[-77.45325470 53.18486786]
[-62.77658463 56.28249359]
[-48.09991074 59.38011932]
[-33.42323685 62.47774124]
[-18.74656487 65.57537079]
[-11.55709934 63.88207626]
[-3.88227415 68.82412720]
[10.23792553 64.08395386]
[21.99211502 74.67402649]
[36.62284088 77.98186493]
[51.25357056 81.28970337]
[65.88430023 84.59754181]
[80.51502991 87.90538025]
[93.95805359 75.43624115]
[114.05184937 76.17710114]
[115.76949310 61.27576447]
[106.22145081 48.96834183]
[108.17565918 33.88074112]
[119.96775055 24.85399055]
[121.68539429 9.95265770]
[119.56005859 1.07517350]
[123.53604889 -5.14954901]
[125.46726990 -20.02470970]
[127.39849091 -34.89986801]
[114.83813477 -43.64606857]
[107.79135132 -57.23287964]
[107.87743378 -72.53814697]
[115.07659912 -86.04483032]
[127.73453522 -94.64920044]
[142.94255066 -96.37403107]
[157.20593262 -90.82296753]
[167.24708557 -79.27160645]
[170.75860596 -64.37436676]
[166.93357849 -49.55451965]
[156.65097046 -38.21756363]
[142.27365112 -32.96864700]
[140.34243774 -18.09348679]
[138.41120911 -3.21832657]
[136.58673096 11.67030239]
[134.86907959 26.57163429]
[144.29821777 38.04450989]
[142.76856995 53.18104935]
[130.67082214 62.99341202]
[128.95318604 77.89474487]
[135.40599060 91.43583679]
[148.06167603 99.48777008]
[160.71736145 107.53969574]
[173.37304688 115.59162903]
[186.02873230 123.64356232]
[198.68441772 131.69549561]
[211.34010315 139.74742126]
[223.99580383 147.79934692]
[236.65148926 155.85128784]
[249.30717468 163.90321350]
[261.96286011 171.95515442]
[274.61853027 180.00708008]
[290.41525269 180.88688660]
[297.00009155 194.24688721]
[309.65576172 202.29881287]
[322.31146240 210.35075378]
[335.04455566 208.31832886]
[345.41839600 215.28053284]
[348.17831421 227.05419922]
[360.71719360 235.28684998]
[373.25607300 243.51950073]
[380.88232422 235.88499451]
[389.67837524 229.64108276]
[399.39382935 224.96374512]
[409.75250244 221.98443604]
[420.46017456 220.78631592]
[431.21295166 221.40202332]
[441.70587158 223.81269836]
[451.64154053 227.94859314]
[460.73870850 233.69114685]
[468.73999023 240.87623596]
[475.41937256 249.29905701]
[480.58843994 258.71975708]
[484.10174561 268.87048340]
[485.86099243 279.46279907]
[485.81759644 290.19601440]
[483.97418213 300.76565552]
[480.38439941 310.87210083]
[475.15139771 320.22912598]
[486.52597046 330.00759888]
[497.90057373 339.78607178]
[509.27514648 349.56457520]
[520.99304199 358.92892456]
[533.03912354 367.86712646]
[545.08526611 376.80529785]
[557.13134766 385.74349976]
[569.17749023 394.68170166]
[580.36682129 390.68591309]
[591.97723389 392.56558228]
[601.14550781 399.74005127]
[605.66735840 410.33761597]
[604.52661133 421.68252563]
[616.31134033 430.96261597]
[628.09613037 440.24267578]
[639.88085938 449.52273560]
[654.77587891 445.17330933]
[669.37133789 450.44131470]
[678.05499268 463.30108643]
[677.48779297 478.80780029]
[667.88781738 490.99877930]
[652.94647217 495.18637085]
[638.40899658 489.76034546]
[629.86541748 476.80712891]
[630.60076904 461.30749512]
[618.81604004 452.02743530]
[607.03131104 442.74734497]
[595.24652100 433.46728516]
[577.22656250 436.71575928]
[562.30224609 425.56481934]
[560.23925781 406.72781372]
[548.19317627 397.78961182]
[536.14703369 388.85140991]
[524.10095215 379.91323853]
[512.05487061 370.97503662]
[511.67102051 385.97012329]
[499.79751587 395.13638306]
[485.19369507 391.71163940]
[478.63314819 378.22241211]
[484.95568848 364.62002563]
[499.49667358 360.93914795]
[488.12207031 351.16067505]
[476.74749756 341.38220215]
[465.37289429 331.60369873]
[449.12237549 342.50265503]
[430.31497192 347.95590210]
[410.72470093 347.43960571]
[392.20227051 340.99334717]
[376.50027466 329.21743774]
[365.10736084 313.21688843]
[359.10717773 294.49780273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[5 144]
[6 143]
[7 142]
[9 140]
[10 139]
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[28 97]
[29 96]
[30 95]
[31 94]
[32 93]
[34 91]
[35 89]
[36 88]
[37 87]
[38 86]
[39 85]
[40 84]
[42 82]
[43 81]
[45 78]
[46 77]
[47 76]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[54 67]
[55 66]
[57 64]
[58 63]
[99 128]
[100 127]
[103 124]
[104 123]
[106 122]
[107 121]
[108 120]
[167 211]
[168 210]
[169 209]
[170 208]
[171 202]
[172 201]
[173 200]
[174 199]
[175 198]
[180 195]
[181 194]
[182 193]
[183 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
