%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Sep 13 19:40:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGCGGGCCCGCAGCCGGGCGCCCUGCUCAGCCAGCGCCAGCGGCCGCCGCACCCAGCCGCGCCGGCGAGGACAUGGGCAGCCGCGGCGCGCCCACCCCCCGCGCCGAUGUGAAUUAUUAAAAAGAAAAUGGCCCAACGGAGCACUGUAUUUCCUUCUCGUGUCACCAAGGAAAGGUAUAAUAU\
) } def
/len { sequence length } bind def

/coor [
[-74.03485870 46.72981262]
[-72.55615234 25.89563370]
[-86.88269043 21.45149994]
[-101.20922852 17.00736618]
[-115.53576660 12.56323147]
[-129.86230469 8.11909866]
[-144.18884277 3.67496443]
[-158.51538086 -0.76916921]
[-172.84191895 -5.21330309]
[-187.16845703 -9.65743637]
[-205.61807251 1.94583261]
[-226.36119080 -3.75429940]
[-236.03277588 -22.65227509]
[-250.68023682 -25.88527298]
[-265.32766724 -29.11827087]
[-274.40258789 -27.91143036]
[-280.19189453 -32.52960587]
[-294.78329468 -36.00690842]
[-309.37466431 -39.48421097]
[-323.96603394 -42.96151352]
[-338.58596802 -46.31678009]
[-353.23342896 -49.54977798]
[-367.88085938 -52.78277206]
[-382.55480957 -55.89327621]
[-397.25424194 -58.88106537]
[-411.95367432 -61.86885452]
[-426.65310669 -64.85664368]
[-441.37698364 -67.72151184]
[-456.12426758 -70.46326447]
[-470.89395142 -73.08169556]
[-485.68502808 -75.57663727]
[-498.47512817 -66.68560791]
[-513.43981934 -69.42653656]
[-521.83721924 -81.67475891]
[-536.62829590 -84.16970062]
[-551.41937256 -86.66464233]
[-566.31420898 -81.33049011]
[-577.57727051 -91.07693481]
[-592.36834717 -93.57187653]
[-607.15936279 -96.06681824]
[-621.95043945 -98.56175232]
[-639.07611084 -84.01433563]
[-661.09667969 -86.79833221]
[-673.74609375 -104.70187378]
[-688.71264648 -105.70375824]
[-703.67913818 -106.70565033]
[-718.64562988 -107.70754242]
[-734.85327148 -102.73264313]
[-744.12042236 -116.92966461]
[-733.04364014 -129.76481628]
[-717.64373779 -122.67404175]
[-702.67724609 -121.67215729]
[-687.71075439 -120.67026520]
[-672.74426270 -119.66837311]
[-668.99505615 -126.80651093]
[-663.28613281 -132.54794312]
[-656.10980225 -136.36941528]
[-648.09307861 -137.91441345]
[-639.94329834 -137.02636719]
[-632.38543701 -133.76426697]
[-626.09765625 -128.39913940]
[-621.65063477 -121.39170837]
[-619.45550537 -113.35280609]
[-604.66442871 -110.85787201]
[-589.87341309 -108.36293030]
[-575.08233643 -105.86798859]
[-561.24542236 -111.38059235]
[-548.92443848 -101.45569611]
[-534.13336182 -98.96075439]
[-519.34228516 -96.46581268]
[-507.39181519 -105.28176880]
[-492.35601807 -102.96224976]
[-483.19006348 -90.36769104]
[-468.39901733 -87.87274933]
[-461.26620483 -89.86437988]
[-453.38250732 -85.21056366]
[-438.63522339 -82.46881104]
[-431.47012329 -84.34098053]
[-423.66531372 -79.55606842]
[-408.96588135 -76.56828308]
[-394.26644897 -73.58049011]
[-379.56701660 -70.59270477]
[-372.37164307 -72.34487915]
[-364.64785767 -67.43022156]
[-350.00042725 -64.19722748]
[-335.35296631 -60.96422577]
[-328.12930298 -62.59592438]
[-320.48873901 -57.55289078]
[-305.89736938 -54.07558823]
[-291.30599976 -50.59828568]
[-276.71459961 -47.12098312]
[-262.09469604 -43.76571655]
[-247.44723511 -40.53272247]
[-232.79978943 -37.29972458]
[-227.49291992 -44.15286255]
[-220.20584106 -48.92602158]
[-211.71881104 -51.07422638]
[-202.95170593 -50.33538818]
[-194.86428833 -46.76194000]
[-188.35122681 -40.71818161]
[-184.14305115 -32.84332657]
[-182.72431946 -23.98397446]
[-168.39778137 -19.53984070]
[-154.07124329 -15.09570694]
[-139.74470520 -10.65157318]
[-125.41816711 -6.20743942]
[-111.09162903 -1.76330554]
[-96.76509857 2.68082809]
[-82.43856049 7.12496185]
[-68.11202240 11.56909561]
[-63.70335770 2.67250299]
[-58.19434738 -5.59025431]
[-51.67468262 -13.08379078]
[-44.25062943 -19.68524933]
[-36.04328156 -25.28632355]
[-27.18659401 -29.79502487]
[-17.82518768 -33.13720322]
[-8.11199570 -35.25775146]
[1.79423749 -36.12153625]
[11.73155308 -35.71396255]
[21.53742218 -34.04121780]
[31.05140495 -31.13019753]
[40.11777878 -27.02805138]
[48.58808136 -21.80143929]
[56.32354355 -15.53542709]
[63.19737625 -8.33212280]
[69.09681702 -0.30899698]
[73.92501068 8.40302277]
[77.60259247 17.66169357]
[80.06898499 27.31578064]
[81.28338623 37.20751953]
[81.22547150 47.17520523]
[79.89572906 57.05583191]
[77.31541443 66.68775177]
[73.52629089 75.91333008]
[86.30278015 83.77217102]
[99.07926178 91.63101196]
[103.19359589 78.51593018]
[113.78967285 67.80837250]
[129.69767761 61.88162994]
[144.52835083 64.12906647]
[159.35902405 66.37650299]
[174.18971252 68.62393951]
[189.25440979 62.14422226]
[202.23477173 72.16632080]
[199.77769470 88.38034821]
[184.41082764 94.10671234]
[171.94227600 83.45462036]
[157.11158752 81.20718384]
[142.28091431 78.95974731]
[127.45023346 76.71231079]
[124.01184845 83.37770081]
[113.69668579 103.37389374]
[124.12457275 114.15624237]
[134.55245972 124.93859863]
[144.98034668 135.72096252]
[155.40823364 146.50331116]
[165.83612061 157.28565979]
[176.26400757 168.06802368]
[190.93246460 163.69822693]
[205.94923401 166.65711975]
[217.86358643 176.26475525]
[223.93768311 190.31338501]
[222.77575684 205.57472229]
[214.64479065 218.54183960]
[201.41322327 226.23497009]
[186.12158203 226.88629150]
[172.28376770 220.34616089]
[163.07960510 208.11741638]
[160.62414551 193.01014709]
[165.48164368 178.49591064]
[155.05377197 167.71354675]
[144.62588501 156.93119812]
[134.19799805 146.14884949]
[123.77010345 135.36648560]
[113.34221649 124.58412933]
[102.91432953 113.80178070]
[91.22042084 104.40749359]
[78.44393921 96.54865265]
[65.66744995 88.68981934]
[50.85198593 103.53616333]
[32.62393570 113.89196014]
[12.30456543 119.01251221]
[-8.63484669 118.53240204]
[-28.67955589 112.49153900]
[-46.38092041 101.33191681]
[-60.46109772 85.86526489]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 110]
[3 109]
[4 108]
[5 107]
[6 106]
[7 105]
[8 104]
[9 103]
[10 102]
[13 94]
[14 93]
[15 92]
[17 91]
[18 90]
[19 89]
[20 88]
[21 86]
[22 85]
[23 84]
[24 82]
[25 81]
[26 80]
[27 79]
[28 77]
[29 76]
[30 74]
[31 73]
[34 70]
[35 69]
[36 68]
[38 66]
[39 65]
[40 64]
[41 63]
[44 54]
[45 53]
[46 52]
[47 51]
[135 180]
[136 179]
[137 178]
[140 151]
[141 150]
[142 149]
[143 148]
[153 177]
[154 176]
[155 175]
[156 174]
[157 173]
[158 172]
[159 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
